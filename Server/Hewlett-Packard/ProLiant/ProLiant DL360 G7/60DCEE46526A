
Intel ACPI Component Architecture
ACPI Binary Table Extraction Utility version 20200925
Copyright (c) 2000 - 2020 Intel Corporation


 Signature  Length    Version Oem       Oem         Oem         Compiler Compiler
                              Id        TableId     RevisionId  Name     Revision
 _________  __________  ____  ________  __________  __________  _______  __________

 01)  SSDT  0x00000377  0x01  "HP    "  "pmab    "  0x00000001  "INTL"   0x20090625
 02)  SPCR  0x00000050  0x01  "HP    "  "SPCRRBSU"  0x00000001  "    "   0x0000162E
 03)  MCFG  0x0000003C  0x01  "HP    "  "ProLiant"  0x00000001  "    "   0x00000000
 04)  FFFF  0x00000176  0x01  "HP    "  "ProLiant"  0x00000001  "    "   0x0000162E
 05)  APIC  0x0000015E  0x01  "HP    "  "ProLiant"  0x00000002  "    "   0x00000000
 06)  SSDT  0x000001CF  0x03  "HP    "  "riser1a "  0x00000002  "INTL"   0x20061109
 07)  SPMI  0x00000040  0x05  "HP    "  "ProLiant"  0x00000001  "    "   0x0000162E
 08)  ERST  0x000001D0  0x01  "HP    "  "ProLiant"  0x00000001  "    "   0x0000162E
 09)  DSDT  0x000020BD  0x01  "HP    "  "DSDT    "  0x00000001  "INTL"   0x20030228
 10)  SRAT  0x00000570  0x01  "HP    "  "Proliant"  0x00000001  "    "   0x0000162E
 11)  SSDT  0x00002B64  0x01  "INTEL "  "PPM RCM "  0x00000001  "INTL"   0x20061109
 12)  HEST  0x000000BC  0x01  "HP    "  "ProLiant"  0x00000001  "    "   0x0000162E
 13)  BERT  0x00000030  0x01  "HP    "  "ProLiant"  0x00000001  "    "   0x0000162E
 14)  SSDT  0x00000392  0x01  "HP    "  "tpm     "  0x00000001  "INTL"   0x20090625
 15)  DMAR  0x00000164  0x01  "HP    "  "ProLiant"  0x00000001  "    "   0x0000162E
 16)  FACP  0x000000F4  0x03  "HP    "  "ProLiant"  0x00000002  "    "   0x0000162E
 17)  SSDT  0x00000125  0x03  "HP    "  "CRSPCI0 "  0x00000002  "HP  "   0x00000001
 18)  TCPA  0x00000064  0x02  "HP    "  "ProLiant"  0x00000002  "    "   0x0000162E
 19)  HPET  0x00000038  0x01  "HP    "  "ProLiant"  0x00000002  "    "   0x0000162E
 20)  FACS  0x00000040  0x01

Found 20 ACPI tables in acpidump

APIC
----
[000h 0000   4]                    Signature : "APIC"    [Multiple APIC Description Table (MADT)]
[004h 0004   4]                 Table Length : 0000015E
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : EB
[00Ah 0010   6]                       Oem ID : "HP    "
[010h 0016   8]                 Oem Table ID : "ProLiant"
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : ""
[020h 0032   4]        Asl Compiler Revision : 00000000

[024h 0036   4]           Local Apic Address : FEE00000
[028h 0040   4]        Flags (decoded below) : 00000001
                         PC-AT Compatibility : 1

[02Ch 0044   1]                Subtable Type : 00 [Processor Local APIC]
[02Dh 0045   1]                       Length : 08
[02Eh 0046   1]                 Processor ID : 00
[02Fh 0047   1]                Local Apic ID : 00
[030h 0048   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[034h 0052   1]                Subtable Type : 00 [Processor Local APIC]
[035h 0053   1]                       Length : 08
[036h 0054   1]                 Processor ID : 10
[037h 0055   1]                Local Apic ID : 20
[038h 0056   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[03Ch 0060   1]                Subtable Type : 00 [Processor Local APIC]
[03Dh 0061   1]                       Length : 08
[03Eh 0062   1]                 Processor ID : 08
[03Fh 0063   1]                Local Apic ID : 10
[040h 0064   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[044h 0068   1]                Subtable Type : 00 [Processor Local APIC]
[045h 0069   1]                       Length : 08
[046h 0070   1]                 Processor ID : 18
[047h 0071   1]                Local Apic ID : 30
[048h 0072   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[04Ch 0076   1]                Subtable Type : 00 [Processor Local APIC]
[04Dh 0077   1]                       Length : 08
[04Eh 0078   1]                 Processor ID : 04
[04Fh 0079   1]                Local Apic ID : 04
[050h 0080   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[054h 0084   1]                Subtable Type : 00 [Processor Local APIC]
[055h 0085   1]                       Length : 08
[056h 0086   1]                 Processor ID : 14
[057h 0087   1]                Local Apic ID : 24
[058h 0088   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[05Ch 0092   1]                Subtable Type : 00 [Processor Local APIC]
[05Dh 0093   1]                       Length : 08
[05Eh 0094   1]                 Processor ID : 0C
[05Fh 0095   1]                Local Apic ID : 14
[060h 0096   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[064h 0100   1]                Subtable Type : 00 [Processor Local APIC]
[065h 0101   1]                       Length : 08
[066h 0102   1]                 Processor ID : 1C
[067h 0103   1]                Local Apic ID : 34
[068h 0104   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[06Ch 0108   1]                Subtable Type : 00 [Processor Local APIC]
[06Dh 0109   1]                       Length : 08
[06Eh 0110   1]                 Processor ID : 02
[06Fh 0111   1]                Local Apic ID : 02
[070h 0112   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[074h 0116   1]                Subtable Type : 00 [Processor Local APIC]
[075h 0117   1]                       Length : 08
[076h 0118   1]                 Processor ID : 12
[077h 0119   1]                Local Apic ID : 22
[078h 0120   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[07Ch 0124   1]                Subtable Type : 00 [Processor Local APIC]
[07Dh 0125   1]                       Length : 08
[07Eh 0126   1]                 Processor ID : 0A
[07Fh 0127   1]                Local Apic ID : 12
[080h 0128   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[084h 0132   1]                Subtable Type : 00 [Processor Local APIC]
[085h 0133   1]                       Length : 08
[086h 0134   1]                 Processor ID : 1A
[087h 0135   1]                Local Apic ID : 32
[088h 0136   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[08Ch 0140   1]                Subtable Type : 00 [Processor Local APIC]
[08Dh 0141   1]                       Length : 08
[08Eh 0142   1]                 Processor ID : 06
[08Fh 0143   1]                Local Apic ID : 06
[090h 0144   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[094h 0148   1]                Subtable Type : 00 [Processor Local APIC]
[095h 0149   1]                       Length : 08
[096h 0150   1]                 Processor ID : 16
[097h 0151   1]                Local Apic ID : 26
[098h 0152   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[09Ch 0156   1]                Subtable Type : 00 [Processor Local APIC]
[09Dh 0157   1]                       Length : 08
[09Eh 0158   1]                 Processor ID : 0E
[09Fh 0159   1]                Local Apic ID : 16
[0A0h 0160   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0A4h 0164   1]                Subtable Type : 00 [Processor Local APIC]
[0A5h 0165   1]                       Length : 08
[0A6h 0166   1]                 Processor ID : 1E
[0A7h 0167   1]                Local Apic ID : 36
[0A8h 0168   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0ACh 0172   1]                Subtable Type : 00 [Processor Local APIC]
[0ADh 0173   1]                       Length : 08
[0AEh 0174   1]                 Processor ID : 01
[0AFh 0175   1]                Local Apic ID : 01
[0B0h 0176   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[0B4h 0180   1]                Subtable Type : 00 [Processor Local APIC]
[0B5h 0181   1]                       Length : 08
[0B6h 0182   1]                 Processor ID : 11
[0B7h 0183   1]                Local Apic ID : 21
[0B8h 0184   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[0BCh 0188   1]                Subtable Type : 00 [Processor Local APIC]
[0BDh 0189   1]                       Length : 08
[0BEh 0190   1]                 Processor ID : 09
[0BFh 0191   1]                Local Apic ID : 11
[0C0h 0192   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0C4h 0196   1]                Subtable Type : 00 [Processor Local APIC]
[0C5h 0197   1]                       Length : 08
[0C6h 0198   1]                 Processor ID : 19
[0C7h 0199   1]                Local Apic ID : 31
[0C8h 0200   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0CCh 0204   1]                Subtable Type : 00 [Processor Local APIC]
[0CDh 0205   1]                       Length : 08
[0CEh 0206   1]                 Processor ID : 05
[0CFh 0207   1]                Local Apic ID : 05
[0D0h 0208   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0D4h 0212   1]                Subtable Type : 00 [Processor Local APIC]
[0D5h 0213   1]                       Length : 08
[0D6h 0214   1]                 Processor ID : 15
[0D7h 0215   1]                Local Apic ID : 25
[0D8h 0216   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0DCh 0220   1]                Subtable Type : 00 [Processor Local APIC]
[0DDh 0221   1]                       Length : 08
[0DEh 0222   1]                 Processor ID : 0D
[0DFh 0223   1]                Local Apic ID : 15
[0E0h 0224   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[0E4h 0228   1]                Subtable Type : 00 [Processor Local APIC]
[0E5h 0229   1]                       Length : 08
[0E6h 0230   1]                 Processor ID : 1D
[0E7h 0231   1]                Local Apic ID : 35
[0E8h 0232   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[0ECh 0236   1]                Subtable Type : 00 [Processor Local APIC]
[0EDh 0237   1]                       Length : 08
[0EEh 0238   1]                 Processor ID : 03
[0EFh 0239   1]                Local Apic ID : 03
[0F0h 0240   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[0F4h 0244   1]                Subtable Type : 00 [Processor Local APIC]
[0F5h 0245   1]                       Length : 08
[0F6h 0246   1]                 Processor ID : 13
[0F7h 0247   1]                Local Apic ID : 23
[0F8h 0248   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[0FCh 0252   1]                Subtable Type : 00 [Processor Local APIC]
[0FDh 0253   1]                       Length : 08
[0FEh 0254   1]                 Processor ID : 0B
[0FFh 0255   1]                Local Apic ID : 13
[100h 0256   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[104h 0260   1]                Subtable Type : 00 [Processor Local APIC]
[105h 0261   1]                       Length : 08
[106h 0262   1]                 Processor ID : 1B
[107h 0263   1]                Local Apic ID : 33
[108h 0264   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[10Ch 0268   1]                Subtable Type : 00 [Processor Local APIC]
[10Dh 0269   1]                       Length : 08
[10Eh 0270   1]                 Processor ID : 07
[10Fh 0271   1]                Local Apic ID : 07
[110h 0272   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[114h 0276   1]                Subtable Type : 00 [Processor Local APIC]
[115h 0277   1]                       Length : 08
[116h 0278   1]                 Processor ID : 17
[117h 0279   1]                Local Apic ID : 27
[118h 0280   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[11Ch 0284   1]                Subtable Type : 00 [Processor Local APIC]
[11Dh 0285   1]                       Length : 08
[11Eh 0286   1]                 Processor ID : 0F
[11Fh 0287   1]                Local Apic ID : 17
[120h 0288   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[124h 0292   1]                Subtable Type : 00 [Processor Local APIC]
[125h 0293   1]                       Length : 08
[126h 0294   1]                 Processor ID : 1F
[127h 0295   1]                Local Apic ID : 37
[128h 0296   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[12Ch 0300   1]                Subtable Type : 01 [I/O APIC]
[12Dh 0301   1]                       Length : 0C
[12Eh 0302   1]                  I/O Apic ID : 08
[12Fh 0303   1]                     Reserved : 00
[130h 0304   4]                      Address : FEC00000
[134h 0308   4]                    Interrupt : 00000000

[138h 0312   1]                Subtable Type : 01 [I/O APIC]
[139h 0313   1]                       Length : 0C
[13Ah 0314   1]                  I/O Apic ID : 00
[13Bh 0315   1]                     Reserved : 00
[13Ch 0316   4]                      Address : FEC80000
[140h 0320   4]                    Interrupt : 00000018

[144h 0324   1]                Subtable Type : 02 [Interrupt Source Override]
[145h 0325   1]                       Length : 0A
[146h 0326   1]                          Bus : 00
[147h 0327   1]                       Source : 00
[148h 0328   4]                    Interrupt : 00000002
[14Ch 0332   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1

[14Eh 0334   1]                Subtable Type : 02 [Interrupt Source Override]
[14Fh 0335   1]                       Length : 0A
[150h 0336   1]                          Bus : 00
[151h 0337   1]                       Source : 09
[152h 0338   4]                    Interrupt : 00000009
[156h 0342   2]        Flags (decoded below) : 000D
                                    Polarity : 1
                                Trigger Mode : 3

[158h 0344   1]                Subtable Type : 04 [Local APIC NMI]
[159h 0345   1]                       Length : 06
[15Ah 0346   1]                 Processor ID : FF
[15Bh 0347   2]        Flags (decoded below) : 0000
                                    Polarity : 0
                                Trigger Mode : 0
[15Dh 0349   1]         Interrupt Input LINT : 01

Raw Table Data: Length 350 (0x15E)

    0000: 41 50 49 43 5E 01 00 00 01 EB 48 50 20 20 20 20  // APIC^.....HP    
    0010: 50 72 6F 4C 69 61 6E 74 02 00 00 00 00 00 00 00  // ProLiant........
    0020: 00 00 00 00 00 00 E0 FE 01 00 00 00 00 08 00 00  // ................
    0030: 01 00 00 00 00 08 10 20 01 00 00 00 00 08 08 10  // ....... ........
    0040: 00 00 00 00 00 08 18 30 00 00 00 00 00 08 04 04  // .......0........
    0050: 00 00 00 00 00 08 14 24 00 00 00 00 00 08 0C 14  // .......$........
    0060: 01 00 00 00 00 08 1C 34 01 00 00 00 00 08 02 02  // .......4........
    0070: 01 00 00 00 00 08 12 22 01 00 00 00 00 08 0A 12  // ......."........
    0080: 01 00 00 00 00 08 1A 32 01 00 00 00 00 08 06 06  // .......2........
    0090: 00 00 00 00 00 08 16 26 00 00 00 00 00 08 0E 16  // .......&........
    00A0: 00 00 00 00 00 08 1E 36 00 00 00 00 00 08 01 01  // .......6........
    00B0: 01 00 00 00 00 08 11 21 01 00 00 00 00 08 09 11  // .......!........
    00C0: 00 00 00 00 00 08 19 31 00 00 00 00 00 08 05 05  // .......1........
    00D0: 00 00 00 00 00 08 15 25 00 00 00 00 00 08 0D 15  // .......%........
    00E0: 01 00 00 00 00 08 1D 35 01 00 00 00 00 08 03 03  // .......5........
    00F0: 01 00 00 00 00 08 13 23 01 00 00 00 00 08 0B 13  // .......#........
    0100: 01 00 00 00 00 08 1B 33 01 00 00 00 00 08 07 07  // .......3........
    0110: 00 00 00 00 00 08 17 27 00 00 00 00 00 08 0F 17  // .......'........
    0120: 00 00 00 00 00 08 1F 37 00 00 00 00 01 0C 08 00  // .......7........
    0130: 00 00 C0 FE 00 00 00 00 01 0C 00 00 00 00 C8 FE  // ................
    0140: 18 00 00 00 02 0A 00 00 02 00 00 00 05 00 02 0A  // ................
    0150: 00 09 09 00 00 00 0D 00 04 06 FF 00 00 01        // ..............


BERT
----
[000h 0000   4]                    Signature : "BERT"    [Boot Error Record Table]
[004h 0004   4]                 Table Length : 00000030
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : F6
[00Ah 0010   6]                       Oem ID : "HP    "
[010h 0016   8]                 Oem Table ID : "ProLiant"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "  "
[020h 0032   4]        Asl Compiler Revision : 0000162E

[024h 0036   4]     Boot Error Region Length : 00000040
[028h 0040   8]    Boot Error Region Address : 00000000DF61D000

Raw Table Data: Length 48 (0x30)

    0000: 42 45 52 54 30 00 00 00 01 F6 48 50 20 20 20 20  // BERT0.....HP    
    0010: 50 72 6F 4C 69 61 6E 74 01 00 00 00 D2 04 00 00  // ProLiant........
    0020: 2E 16 00 00 40 00 00 00 00 D0 61 DF 00 00 00 00  // ....@.....a.....


DMAR
----
[000h 0000   4]                    Signature : "DMAR"    [DMA Remapping table]
[004h 0004   4]                 Table Length : 00000164
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 4B
[00Ah 0010   6]                       Oem ID : "HP    "
[010h 0016   8]                 Oem Table ID : "ProLiant"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "  "
[020h 0032   4]        Asl Compiler Revision : 0000162E

[024h 0036   1]           Host Address Width : 26
[025h 0037   1]                        Flags : 02
[026h 0038  10]                     Reserved : 00 00 00 00 00 00 00 00 00 00

[030h 0048   2]                Subtable Type : 0000 [Hardware Unit Definition]
[032h 0050   2]                       Length : 0020

[034h 0052   1]                        Flags : 01
[035h 0053   1]                     Reserved : 00
[036h 0054   2]           PCI Segment Number : 0000
[038h 0056   8]        Register Base Address : 00000000E7FFE000

[040h 0064   1]            Device Scope Type : 03 [IOAPIC Device]
[041h 0065   1]                 Entry Length : 08
[042h 0066   2]                     Reserved : 0000
[044h 0068   1]               Enumeration ID : 08
[045h 0069   1]               PCI Bus Number : 00

[046h 0070   2]                     PCI Path : 1E,01


[048h 0072   1]            Device Scope Type : 03 [IOAPIC Device]
[049h 0073   1]                 Entry Length : 08
[04Ah 0074   2]                     Reserved : 0000
[04Ch 0076   1]               Enumeration ID : 00
[04Dh 0077   1]               PCI Bus Number : 00

[04Eh 0078   2]                     PCI Path : 13,00


[050h 0080   2]                Subtable Type : 0001 [Reserved Memory Region]
[052h 0082   2]                       Length : 0020

[054h 0084   2]                     Reserved : 0000
[056h 0086   2]           PCI Segment Number : 0000
[058h 0088   8]                 Base Address : 00000000DF7E6000
[060h 0096   8]          End Address (limit) : 00000000DF7E7FFF

[068h 0104   1]            Device Scope Type : 01 [PCI Endpoint Device]
[069h 0105   1]                 Entry Length : 08
[06Ah 0106   2]                     Reserved : 0000
[06Ch 0108   1]               Enumeration ID : 00
[06Dh 0109   1]               PCI Bus Number : 00

[06Eh 0110   2]                     PCI Path : 1D,07


[070h 0112   2]                Subtable Type : 0001 [Reserved Memory Region]
[072h 0114   2]                       Length : 0056

[074h 0116   2]                     Reserved : 0000
[076h 0118   2]           PCI Segment Number : 0000
[078h 0120   8]                 Base Address : 00000000DF7DF000
[080h 0128   8]          End Address (limit) : 00000000DF7E4FFF

[088h 0136   1]            Device Scope Type : 01 [PCI Endpoint Device]
[089h 0137   1]                 Entry Length : 08
[08Ah 0138   2]                     Reserved : 0000
[08Ch 0140   1]               Enumeration ID : 00
[08Dh 0141   1]               PCI Bus Number : 00

[08Eh 0142   2]                     PCI Path : 1D,00


[090h 0144   1]            Device Scope Type : 01 [PCI Endpoint Device]
[091h 0145   1]                 Entry Length : 08
[092h 0146   2]                     Reserved : 0000
[094h 0148   1]               Enumeration ID : 00
[095h 0149   1]               PCI Bus Number : 00

[096h 0150   2]                     PCI Path : 1D,01


[098h 0152   1]            Device Scope Type : 01 [PCI Endpoint Device]
[099h 0153   1]                 Entry Length : 08
[09Ah 0154   2]                     Reserved : 0000
[09Ch 0156   1]               Enumeration ID : 00
[09Dh 0157   1]               PCI Bus Number : 00

[09Eh 0158   2]                     PCI Path : 1D,02


[0A0h 0160   1]            Device Scope Type : 01 [PCI Endpoint Device]
[0A1h 0161   1]                 Entry Length : 08
[0A2h 0162   2]                     Reserved : 0000
[0A4h 0164   1]               Enumeration ID : 00
[0A5h 0165   1]               PCI Bus Number : 00

[0A6h 0166   2]                     PCI Path : 1D,03


[0A8h 0168   1]            Device Scope Type : 01 [PCI Endpoint Device]
[0A9h 0169   1]                 Entry Length : 0A
[0AAh 0170   2]                     Reserved : 0000
[0ACh 0172   1]               Enumeration ID : 00
[0ADh 0173   1]               PCI Bus Number : 00

[0AEh 0174   2]                     PCI Path : 1C,04

[0B0h 0176   2]                     PCI Path : 00,00


[0B2h 0178   1]            Device Scope Type : 01 [PCI Endpoint Device]
[0B3h 0179   1]                 Entry Length : 0A
[0B4h 0180   2]                     Reserved : 0000
[0B6h 0182   1]               Enumeration ID : 00
[0B7h 0183   1]               PCI Bus Number : 00

[0B8h 0184   2]                     PCI Path : 1C,04

[0BAh 0186   2]                     PCI Path : 00,02


[0BCh 0188   1]            Device Scope Type : 01 [PCI Endpoint Device]
[0BDh 0189   1]                 Entry Length : 0A
[0BEh 0190   2]                     Reserved : 0000
[0C0h 0192   1]               Enumeration ID : 00
[0C1h 0193   1]               PCI Bus Number : 00

[0C2h 0194   2]                     PCI Path : 1C,04

[0C4h 0196   2]                     PCI Path : 00,04


[0C6h 0198   2]                Subtable Type : 0001 [Reserved Memory Region]
[0C8h 0200   2]                       Length : 005E

[0CAh 0202   2]                     Reserved : 0000
[0CCh 0204   2]           PCI Segment Number : 0000
[0CEh 0206   8]                 Base Address : 00000000DF61E000
[0D6h 0214   8]          End Address (limit) : 00000000DF61FFFF

[0DEh 0222   1]            Device Scope Type : 01 [PCI Endpoint Device]
[0DFh 0223   1]                 Entry Length : 0A
[0E0h 0224   2]                     Reserved : 0000
[0E2h 0226   1]               Enumeration ID : 00
[0E3h 0227   1]               PCI Bus Number : 00

[0E4h 0228   2]                     PCI Path : 01,00

[0E6h 0230   2]                     PCI Path : 00,00


[0E8h 0232   1]            Device Scope Type : 01 [PCI Endpoint Device]
[0E9h 0233   1]                 Entry Length : 0A
[0EAh 0234   2]                     Reserved : 0000
[0ECh 0236   1]               Enumeration ID : 00
[0EDh 0237   1]               PCI Bus Number : 00

[0EEh 0238   2]                     PCI Path : 1C,04

[0F0h 0240   2]                     PCI Path : 00,00


[0F2h 0242   1]            Device Scope Type : 01 [PCI Endpoint Device]
[0F3h 0243   1]                 Entry Length : 0A
[0F4h 0244   2]                     Reserved : 0000
[0F6h 0246   1]               Enumeration ID : 00
[0F7h 0247   1]               PCI Bus Number : 00

[0F8h 0248   2]                     PCI Path : 1C,04

[0FAh 0250   2]                     PCI Path : 00,02


[0FCh 0252   1]            Device Scope Type : 01 [PCI Endpoint Device]
[0FDh 0253   1]                 Entry Length : 0A
[0FEh 0254   2]                     Reserved : 0000
[100h 0256   1]               Enumeration ID : 00
[101h 0257   1]               PCI Bus Number : 00

[102h 0258   2]                     PCI Path : 09,00

[104h 0260   2]                     PCI Path : 00,00


[106h 0262   1]            Device Scope Type : 01 [PCI Endpoint Device]
[107h 0263   1]                 Entry Length : 0A
[108h 0264   2]                     Reserved : 0000
[10Ah 0266   1]               Enumeration ID : 00
[10Bh 0267   1]               PCI Bus Number : 00

[10Ch 0268   2]                     PCI Path : 09,00

[10Eh 0270   2]                     PCI Path : 00,01


[110h 0272   1]            Device Scope Type : 01 [PCI Endpoint Device]
[111h 0273   1]                 Entry Length : 0A
[112h 0274   2]                     Reserved : 0000
[114h 0276   1]               Enumeration ID : 00
[115h 0277   1]               PCI Bus Number : 00

[116h 0278   2]                     PCI Path : 03,00

[118h 0280   2]                     PCI Path : 00,00


[11Ah 0282   1]            Device Scope Type : 01 [PCI Endpoint Device]
[11Bh 0283   1]                 Entry Length : 0A
[11Ch 0284   2]                     Reserved : 0000
[11Eh 0286   1]               Enumeration ID : 00
[11Fh 0287   1]               PCI Bus Number : 00

[120h 0288   2]                     PCI Path : 03,00

[122h 0290   2]                     PCI Path : 00,01


[124h 0292   2]                Subtable Type : 0002 [Root Port ATS Capability]
[126h 0294   2]                       Length : 0040

[128h 0296   1]                        Flags : 00
[129h 0297   1]                     Reserved : 00
[12Ah 0298   2]           PCI Segment Number : 0000

[12Ch 0300   1]            Device Scope Type : 02 [PCI Bridge Device]
[12Dh 0301   1]                 Entry Length : 08
[12Eh 0302   2]                     Reserved : 0000
[130h 0304   1]               Enumeration ID : 00
[131h 0305   1]               PCI Bus Number : 00

[132h 0306   2]                     PCI Path : 0A,00


[134h 0308   1]            Device Scope Type : 02 [PCI Bridge Device]
[135h 0309   1]                 Entry Length : 08
[136h 0310   2]                     Reserved : 0000
[138h 0312   1]               Enumeration ID : 00
[139h 0313   1]               PCI Bus Number : 00

[13Ah 0314   2]                     PCI Path : 09,00


[13Ch 0316   1]            Device Scope Type : 02 [PCI Bridge Device]
[13Dh 0317   1]                 Entry Length : 08
[13Eh 0318   2]                     Reserved : 0000
[140h 0320   1]               Enumeration ID : 00
[141h 0321   1]               PCI Bus Number : 00

[142h 0322   2]                     PCI Path : 08,00


[144h 0324   1]            Device Scope Type : 02 [PCI Bridge Device]
[145h 0325   1]                 Entry Length : 08
[146h 0326   2]                     Reserved : 0000
[148h 0328   1]               Enumeration ID : 00
[149h 0329   1]               PCI Bus Number : 00

[14Ah 0330   2]                     PCI Path : 07,00


[14Ch 0332   1]            Device Scope Type : 02 [PCI Bridge Device]
[14Dh 0333   1]                 Entry Length : 08
[14Eh 0334   2]                     Reserved : 0000
[150h 0336   1]               Enumeration ID : 00
[151h 0337   1]               PCI Bus Number : 00

[152h 0338   2]                     PCI Path : 03,00


[154h 0340   1]            Device Scope Type : 02 [PCI Bridge Device]
[155h 0341   1]                 Entry Length : 08
[156h 0342   2]                     Reserved : 0000
[158h 0344   1]               Enumeration ID : 00
[159h 0345   1]               PCI Bus Number : 00

[15Ah 0346   2]                     PCI Path : 02,00


[15Ch 0348   1]            Device Scope Type : 02 [PCI Bridge Device]
[15Dh 0349   1]                 Entry Length : 08
[15Eh 0350   2]                     Reserved : 0000
[160h 0352   1]               Enumeration ID : 00
[161h 0353   1]               PCI Bus Number : 00

[162h 0354   2]                     PCI Path : 01,00


Raw Table Data: Length 356 (0x164)

    0000: 44 4D 41 52 64 01 00 00 01 4B 48 50 20 20 20 20  // DMARd....KHP    
    0010: 50 72 6F 4C 69 61 6E 74 01 00 00 00 D2 04 00 00  // ProLiant........
    0020: 2E 16 00 00 26 02 00 00 00 00 00 00 00 00 00 00  // ....&...........
    0030: 00 00 20 00 01 00 00 00 00 E0 FF E7 00 00 00 00  // .. .............
    0040: 03 08 00 00 08 00 1E 01 03 08 00 00 00 00 13 00  // ................
    0050: 01 00 20 00 00 00 00 00 00 60 7E DF 00 00 00 00  // .. ......`~.....
    0060: FF 7F 7E DF 00 00 00 00 01 08 00 00 00 00 1D 07  // ..~.............
    0070: 01 00 56 00 00 00 00 00 00 F0 7D DF 00 00 00 00  // ..V.......}.....
    0080: FF 4F 7E DF 00 00 00 00 01 08 00 00 00 00 1D 00  // .O~.............
    0090: 01 08 00 00 00 00 1D 01 01 08 00 00 00 00 1D 02  // ................
    00A0: 01 08 00 00 00 00 1D 03 01 0A 00 00 00 00 1C 04  // ................
    00B0: 00 00 01 0A 00 00 00 00 1C 04 00 02 01 0A 00 00  // ................
    00C0: 00 00 1C 04 00 04 01 00 5E 00 00 00 00 00 00 E0  // ........^.......
    00D0: 61 DF 00 00 00 00 FF FF 61 DF 00 00 00 00 01 0A  // a.......a.......
    00E0: 00 00 00 00 01 00 00 00 01 0A 00 00 00 00 1C 04  // ................
    00F0: 00 00 01 0A 00 00 00 00 1C 04 00 02 01 0A 00 00  // ................
    0100: 00 00 09 00 00 00 01 0A 00 00 00 00 09 00 00 01  // ................
    0110: 01 0A 00 00 00 00 03 00 00 00 01 0A 00 00 00 00  // ................
    0120: 03 00 00 01 02 00 40 00 00 00 00 00 02 08 00 00  // ......@.........
    0130: 00 00 0A 00 02 08 00 00 00 00 09 00 02 08 00 00  // ................
    0140: 00 00 08 00 02 08 00 00 00 00 07 00 02 08 00 00  // ................
    0150: 00 00 03 00 02 08 00 00 00 00 02 00 02 08 00 00  // ................
    0160: 00 00 01 00                                      // ....


DSDT
----
DefinitionBlock ("", "DSDT", 1, "HP    ", "DSDT", 0x00000001)
{
    Scope (_PR)
    {
        Processor (CPU0, 0x00, 0x00000000, 0x00) {}
        Processor (CPU1, 0x01, 0x00000000, 0x00) {}
        Processor (CPU2, 0x02, 0x00000000, 0x00) {}
        Processor (CPU3, 0x03, 0x00000000, 0x00) {}
        Processor (CPU4, 0x04, 0x00000000, 0x00) {}
        Processor (CPU5, 0x05, 0x00000000, 0x00) {}
        Processor (CPU6, 0x06, 0x00000000, 0x00) {}
        Processor (CPU7, 0x07, 0x00000000, 0x00) {}
        Processor (CPU8, 0x08, 0x00000000, 0x00) {}
        Processor (CPU9, 0x09, 0x00000000, 0x00) {}
        Processor (CPUA, 0x0A, 0x00000000, 0x00) {}
        Processor (CPUB, 0x0B, 0x00000000, 0x00) {}
        Processor (CPUC, 0x0C, 0x00000000, 0x00) {}
        Processor (CPUD, 0x0D, 0x00000000, 0x00) {}
        Processor (CPUE, 0x0E, 0x00000000, 0x00) {}
        Processor (CPUF, 0x0F, 0x00000000, 0x00) {}
        Processor (CPUG, 0x10, 0x00000000, 0x00) {}
        Processor (CPUH, 0x11, 0x00000000, 0x00) {}
        Processor (CPUI, 0x12, 0x00000000, 0x00) {}
        Processor (CPUJ, 0x13, 0x00000000, 0x00) {}
        Processor (CPUK, 0x14, 0x00000000, 0x00) {}
        Processor (CPUL, 0x15, 0x00000000, 0x00) {}
        Processor (CPUM, 0x16, 0x00000000, 0x00) {}
        Processor (CPUN, 0x17, 0x00000000, 0x00) {}
        Processor (CPUO, 0x18, 0x00000000, 0x00) {}
        Processor (CPUP, 0x19, 0x00000000, 0x00) {}
        Processor (CPUQ, 0x1A, 0x00000000, 0x00) {}
        Processor (CPUR, 0x1B, 0x00000000, 0x00) {}
        Processor (CPUS, 0x1C, 0x00000000, 0x00) {}
        Processor (CPUT, 0x1D, 0x00000000, 0x00) {}
        Processor (CPUU, 0x1E, 0x00000000, 0x00) {}
        Processor (CPUV, 0x1F, 0x00000000, 0x00) {}
    }

    Name (_S0, Package (0x04)  // _S0_: S0 System State
    {
        Zero, 
        Zero, 
        Zero, 
        Zero
    })
    Name (_S4, Package (0x04)  // _S4_: S4 System State
    {
        0x06, 
        Zero, 
        Zero, 
        Zero
    })
    Name (_S5, Package (0x04)  // _S5_: S5 System State
    {
        0x07, 
        Zero, 
        Zero, 
        Zero
    })
    Device (_SB.PCI0)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Device (IP2P)
        {
            Name (_ADR, 0x001E0000)  // _ADR: Address
        }

        Device (IPT1)
        {
            Name (_ADR, 0x001C0000)  // _ADR: Address
        }

        Device (IPT3)
        {
            Name (_ADR, 0x001C0002)  // _ADR: Address
        }

        Device (IPT5)
        {
            Name (_ADR, 0x001C0004)  // _ADR: Address
        }

        Device (PT01)
        {
            Name (_ADR, 0x00010000)  // _ADR: Address
        }

        Device (PT02)
        {
            Name (_ADR, 0x00020000)  // _ADR: Address
        }

        Device (PT03)
        {
            Name (_ADR, 0x00030000)  // _ADR: Address
        }

        Device (PT04)
        {
            Name (_ADR, 0x00040000)  // _ADR: Address
        }

        Device (PT05)
        {
            Name (_ADR, 0x00050000)  // _ADR: Address
        }

        Device (PT06)
        {
            Name (_ADR, 0x00060000)  // _ADR: Address
        }

        Device (PT07)
        {
            Name (_ADR, 0x00070000)  // _ADR: Address
        }

        Device (PT08)
        {
            Name (_ADR, 0x00080000)  // _ADR: Address
        }

        Device (PT09)
        {
            Name (_ADR, 0x00090000)  // _ADR: Address
        }

        Device (PT0A)
        {
            Name (_ADR, 0x000A0000)  // _ADR: Address
        }
    }

    Scope (_TZ)
    {
        Name (\TEMP, 0x0AFF)
        ThermalZone (THM0)
        {
            Name (_TSP, 0x3C)  // _TSP: Thermal Sampling Period
            Name (_TC1, 0x04)  // _TC1: Thermal Constant 1
            Name (_TC2, 0x04)  // _TC2: Thermal Constant 2
            Name (_PSL, Package (0x01)  // _PSL: Passive List
            {
                \_PR.CPU0
            })
            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {
                Debug = "_PSV Method"
                Return (0x0B0E)
            }

            Method (_SCP, 1, NotSerialized)  // _SCP: Set Cooling Policy
            {
                Notify (THM0, 0x81) // Thermal Trip Point Change
            }

            Method (_TMP, 0, NotSerialized)  // _TMP: Temperature
            {
                Debug = "_TMP Method"
                Return (TEMP) /* \TEMP */
            }

            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Debug = "_CRT Method"
                Return (0x0BE5)
            }
        }
    }

    Scope (_SB.PCI0)
    {
        OperationRegion (INTP, SystemIO, 0x3044, 0x04)
        Field (INTP, ByteAcc, NoLock, Preserve)
        {
            INT1,   16, 
            INT3,   8, 
            Offset (0x04)
        }

        OperationRegion (INTL, SystemIO, 0x30C8, 0x02)
        Field (INTL, ByteAcc, NoLock, Preserve)
        {
            IRQL,   16
        }

        OperationRegion (NVRM, SystemIO, 0x3000, 0xB0)
        Field (NVRM, AnyAcc, NoLock, Preserve)
        {
            Offset (0x8A), 
            AUTO,   1, 
            Offset (0x94), 
            GSTA,   8, 
            Offset (0x9B), 
            NV1B,   8, 
            NV1C,   8, 
            Offset (0xA6), 
            NVPG,   16
        }

        Mutex (LCK1, 0x00)
    }

    Scope (_SB.PCI0.IPT5)
    {
        Device (ASMD)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0B)
            }
        }
    }

    Device (_SB.PCI0.IBRG)
    {
        Name (_ADR, 0x001F0000)  // _ADR: Address
        OperationRegion (PMCF, PCI_Config, Zero, 0x0100)
        Field (PMCF, AnyAcc, NoLock, Preserve)
        {
            Offset (0xA4), 
            AFG3,   8
        }
    }

    OperationRegion (XMEM, SystemMemory, 0x000E83F0, 0x08)
    Field (XMEM, AnyAcc, NoLock, Preserve)
    {
        PEXT,   32, 
        PLEN,   32
    }

    OperationRegion (VTMM, SystemMemory, 0x000E83F8, 0x08)
    Field (VTMM, AnyAcc, NoLock, Preserve)
    {
        V1BR,   32, 
        V2BR,   32
    }

    Device (_SB.PCI0.IBRG.MOMB)
    {
        Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
        Name (_UID, Zero)  // _UID: Unique ID
        Name (CRS1, ResourceTemplate ()
        {
            IO (Decode16,
                0x0070,             // Range Minimum
                0x0070,             // Range Maximum
                0x00,               // Alignment
                0x08,               // Length
                )
            IO (Decode16,
                0x0408,             // Range Minimum
                0x0408,             // Range Maximum
                0x00,               // Alignment
                0x08,               // Length
                )
            IO (Decode16,
                0x04D0,             // Range Minimum
                0x04D0,             // Range Maximum
                0x00,               // Alignment
                0x02,               // Length
                )
            IO (Decode16,
                0x0020,             // Range Minimum
                0x0020,             // Range Maximum
                0x00,               // Alignment
                0x20,               // Length
                )
            IO (Decode16,
                0x00A0,             // Range Minimum
                0x00A0,             // Range Maximum
                0x00,               // Alignment
                0x20,               // Length
                )
            IO (Decode16,
                0x0090,             // Range Minimum
                0x0090,             // Range Maximum
                0x00,               // Alignment
                0x10,               // Length
                )
            IO (Decode16,
                0x0050,             // Range Minimum
                0x0050,             // Range Maximum
                0x00,               // Alignment
                0x04,               // Length
                )
            IO (Decode16,
                0x0700,             // Range Minimum
                0x0700,             // Range Maximum
                0x00,               // Alignment
                0x20,               // Length
                )
            IO (Decode16,
                0x0880,             // Range Minimum
                0x0880,             // Range Maximum
                0x00,               // Alignment
                0x80,               // Length
                )
            IO (Decode16,
                0x0900,             // Range Minimum
                0x0900,             // Range Maximum
                0x00,               // Alignment
                0x80,               // Length
                )
            IO (Decode16,
                0x0010,             // Range Minimum
                0x0010,             // Range Maximum
                0x00,               // Alignment
                0x10,               // Length
                )
            IO (Decode16,
                0x0CD4,             // Range Minimum
                0x0CD4,             // Range Maximum
                0x00,               // Alignment
                0x04,               // Length
                )
            IO (Decode16,
                0x0CD0,             // Range Minimum
                0x0CD0,             // Range Maximum
                0x00,               // Alignment
                0x04,               // Length
                )
            IO (Decode16,
                0x0F50,             // Range Minimum
                0x0F50,             // Range Maximum
                0x00,               // Alignment
                0x09,               // Length
                )
            IO (Decode16,
                0x00F0,             // Range Minimum
                0x00F0,             // Range Maximum
                0x00,               // Alignment
                0x01,               // Length
                )
            IO (Decode16,
                0x0CA0,             // Range Minimum
                0x0CA0,             // Range Maximum
                0x00,               // Alignment
                0x02,               // Length
                )
            IO (Decode16,
                0x0CA4,             // Range Minimum
                0x0CA4,             // Range Maximum
                0x00,               // Alignment
                0x02,               // Length
                )
            Memory32Fixed (ReadWrite,
                0x00000000,         // Address Base
                0x00000000,         // Address Length
                _Y01)
            Memory32Fixed (ReadWrite,
                0xFE000000,         // Address Base
                0x00C00000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0x00000000,         // Address Base
                0x00000000,         // Address Length
                _Y02)
            Memory32Fixed (ReadWrite,
                0x00000000,         // Address Base
                0x00000000,         // Address Length
                _Y03)
            IO (Decode16,
                0x02F8,             // Range Minimum
                0x02F8,             // Range Maximum
                0x00,               // Alignment
                0x08,               // Length
                _Y00)
        })
        CreateWordField (CRS1, \_SB.PCI0.IBRG.MOMB._Y00._MIN, VMIN)  // _MIN: Minimum Base Address
        CreateWordField (CRS1, \_SB.PCI0.IBRG.MOMB._Y00._MAX, VMAX)  // _MAX: Maximum Base Address
        CreateByteField (CRS1, \_SB.PCI0.IBRG.MOMB._Y00._LEN, VLEN)  // _LEN: Length
        CreateDWordField (CRS1, \_SB.PCI0.IBRG.MOMB._Y01._BAS, XBSE)  // _BAS: Base Address
        CreateDWordField (CRS1, \_SB.PCI0.IBRG.MOMB._Y01._LEN, XLEN)  // _LEN: Length
        CreateDWordField (CRS1, \_SB.PCI0.IBRG.MOMB._Y02._BAS, V1BS)  // _BAS: Base Address
        CreateDWordField (CRS1, \_SB.PCI0.IBRG.MOMB._Y02._LEN, V1LN)  // _LEN: Length
        CreateDWordField (CRS1, \_SB.PCI0.IBRG.MOMB._Y03._BAS, V2BS)  // _BAS: Base Address
        CreateDWordField (CRS1, \_SB.PCI0.IBRG.MOMB._Y03._LEN, V2LN)  // _LEN: Length
        Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
        {
            XBSE = PEXT /* \PEXT */
            XLEN = PLEN /* \PLEN */
            Local1 = V1BR /* \V1BR */
            If ((Local1 || Zero))
            {
                Local1 &= 0xFFFFE000
                V1BS = Local1
                V1LN = 0x2000
            }

            Local1 = V2BR /* \V2BR */
            If ((Local1 || Zero))
            {
                Local1 = V2BR /* \V2BR */
                Local1 &= 0xFFFFE000
                V2BS = Local1
                V2LN = 0x2000
            }

            Local0 = VPRT /* \VPRT */
            Local0 &= 0x07
            VMIN = Zero
            VMAX = Zero
            VLEN = Zero
            If ((Local0 == One))
            {
                VMIN = 0x03F8
                VMAX = 0x03F8
                VLEN = 0x08
            }

            If ((Local0 == 0x02))
            {
                VMIN = 0x02F8
                VMAX = 0x02F8
                VLEN = 0x08
            }

            If ((Local0 == 0x03))
            {
                VMIN = 0x03E8
                VMAX = 0x03E8
                VLEN = 0x08
            }

            If ((Local0 == 0x04))
            {
                VMIN = 0x02E8
                VMAX = 0x02E8
                VLEN = 0x08
            }

            Return (CRS1) /* \_SB_.PCI0.IBRG.MOMB.CRS1 */
        }
    }

    Device (_SB.PCI0.IBRG.MI0)
    {
        Name (_HID, EisaId ("IPI0001"))  // _HID: Hardware ID
        Name (_STR, Unicode ("IPMI_KCS"))  // _STR: Description String
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            IO (Decode16,
                0x0CA2,             // Range Minimum
                0x0CA2,             // Range Maximum
                0x00,               // Alignment
                0x02,               // Length
                )
        })
        Method (_IFT, 0, NotSerialized)  // _IFT: IPMI Interface Type
        {
            Return (One)
        }

        Method (_SRV, 0, NotSerialized)  // _SRV: IPMI Spec Revision
        {
            Return (0x0200)
        }
    }

    Device (_SB.PCI0.IBRG.TIME)
    {
        Name (_HID, EisaId ("PNP0100") /* PC-class System Timer */)  // _HID: Hardware ID
        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            IRQ (Edge, ActiveHigh, Exclusive, )
                {0}
            IO (Decode16,
                0x0040,             // Range Minimum
                0x0040,             // Range Maximum
                0x01,               // Alignment
                0x04,               // Length
                )
        })
    }

    Device (_SB.PCI0.IBRG.HPET)
    {
        Name (_HID, EisaId ("PNP0103") /* HPET System Timer */)  // _HID: Hardware ID
        Name (_UID, Zero)  // _UID: Unique ID
        Name (BUF0, ResourceTemplate ()
        {
            Memory32Fixed (ReadWrite,
                0xFED00000,         // Address Base
                0x00000400,         // Address Length
                )
        })
        Method (_STA, 0, NotSerialized)  // _STA: Status
        {
            Return (0x0F)
        }

        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
        {
            Return (BUF0) /* \_SB_.PCI0.IBRG.HPET.BUF0 */
        }
    }

    Device (_SB.PCI0.IBRG.DMA0)
    {
        Name (_HID, EisaId ("PNP0200") /* PC-class DMA Controller */)  // _HID: Hardware ID
        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            DMA (Compatibility, NotBusMaster, Transfer16, )
                {7}
            IO (Decode16,
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x01,               // Alignment
                0x10,               // Length
                )
            IO (Decode16,
                0x0080,             // Range Minimum
                0x0080,             // Range Maximum
                0x01,               // Alignment
                0x10,               // Length
                )
            IO (Decode16,
                0x00C0,             // Range Minimum
                0x00C0,             // Range Maximum
                0x01,               // Alignment
                0x20,               // Length
                )
        })
    }

    Device (_SB.PCI0.IBRG.BEEP)
    {
        Name (_HID, EisaId ("PNP0800") /* Microsoft Sound System Compatible Device */)  // _HID: Hardware ID
        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            IO (Decode16,
                0x0061,             // Range Minimum
                0x0061,             // Range Maximum
                0x01,               // Alignment
                0x01,               // Length
                )
        })
    }

    Scope (_SB.PCI0.IBRG)
    {
        OperationRegion (ICH5, PCI_Config, 0x60, 0x0C)
        Field (ICH5, ByteAcc, NoLock, Preserve)
        {
            PIRA,   8, 
            PIRB,   8, 
            PIRC,   8, 
            PIRD,   8, 
            Offset (0x08), 
            PIRE,   8, 
            PIRF,   8, 
            PIRG,   8, 
            PIRH,   8
        }
    }

    Scope (_SB.PCI0.IBRG)
    {
        Device (KBD)
        {
            Name (_HID, EisaId ("PNP0303") /* IBM Enhanced Keyboard (101/102-key, PS/2 Mouse) */)  // _HID: Hardware ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0060,             // Range Minimum
                    0x0060,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0064,             // Range Minimum
                    0x0064,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {1}
            })
        }
    }

    Scope (_SB.PCI0.IBRG)
    {
        Device (PS2M)
        {
            Name (_HID, EisaId ("PNP0F13") /* PS/2 Mouse */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0F0E"))  // _CID: Compatible ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQNoFlags ()
                    {12}
            })
        }
    }

    Scope (_SB.PCI0.IBRG)
    {
        Device (S417)
        {
            Name (_HID, EisaId ("PNP0A06") /* Generic Container Device */)  // _HID: Hardware ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x002E,             // Range Minimum
                    0x002E,             // Range Maximum
                    0x00,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0620,             // Range Minimum
                    0x0620,             // Range Maximum
                    0x00,               // Alignment
                    0x40,               // Length
                    )
                IO (Decode16,
                    0x0680,             // Range Minimum
                    0x0680,             // Range Maximum
                    0x00,               // Alignment
                    0x20,               // Length
                    )
                IO (Decode16,
                    0x0600,             // Range Minimum
                    0x0600,             // Range Maximum
                    0x00,               // Alignment
                    0x20,               // Length
                    )
                IO (Decode16,
                    0x0660,             // Range Minimum
                    0x0660,             // Range Maximum
                    0x00,               // Alignment
                    0x20,               // Length
                    )
                IO (Decode16,
                    0x0300,             // Range Minimum
                    0x0300,             // Range Maximum
                    0x00,               // Alignment
                    0x20,               // Length
                    )
            })
            OperationRegion (N417, SystemIO, 0x2E, 0x02)
            Field (N417, ByteAcc, NoLock, Preserve)
            {
                INDX,   8, 
                DATA,   8
            }

            IndexField (INDX, DATA, ByteAcc, NoLock, Preserve)
            {
                Offset (0x02), 
                CFG,    8, 
                Offset (0x07), 
                LDN,    8, 
                Offset (0x30), 
                ACTR,   8, 
                Offset (0x60), 
                IOAH,   8, 
                IOAL,   8, 
                Offset (0x70), 
                INTR,   8, 
                Offset (0x74), 
                DMCH,   8, 
                Offset (0xF0), 
                CFG1,   8, 
                CFG2,   8
            }

            OperationRegion (GXE, SystemIO, 0x2E, 0x02)
            Field (GXE, ByteAcc, NoLock, Preserve)
            {
                GIND,   8, 
                GDAT,   8
            }

            IndexField (GIND, GDAT, ByteAcc, NoLock, Preserve)
            {
                Offset (0x02), 
                GCFG,   8, 
                Offset (0x07), 
                GLDN,   8, 
                Offset (0x30), 
                GACT,   8, 
                Offset (0x60), 
                GIOH,   8, 
                GIOL,   8, 
                Offset (0x70), 
                GINT,   8, 
                Offset (0x74), 
                GDMA,   8, 
                Offset (0xF0), 
                GCF1,   8, 
                GCF2,   8
            }

            Mutex (LCK2, 0x00)
        }

        Device (RTC0)
        {
            Name (_HID, EisaId ("PNP0B00") /* AT Real-Time Clock */)  // _HID: Hardware ID
            Name (_FIX, Package (0x01)  // _FIX: Fixed Register Resource Provider
            {
                0x000BD041
            })
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0070,             // Range Minimum
                    0x0070,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
            })
        }
    }

    Scope (_SB.PCI0.IBRG.S417)
    {
        Device (COMA)
        {
            Name (_HID, EisaId ("PNP0501") /* 16550A-compatible COM Serial Port */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0500") /* Standard PC COM Serial Port */)  // _CID: Compatible ID
            Name (_DDN, "COM1")  // _DDN: DOS Device Name
            Name (_UID, Zero)  // _UID: Unique ID
            Name (CRS0, ResourceTemplate ()
            {
                IRQNoFlags ()
                    {4}
                IO (Decode16,
                    0x03F8,             // Range Minimum
                    0x03F8,             // Range Maximum
                    0x00,               // Alignment
                    0x08,               // Length
                    _Y04)
            })
            CreateWordField (CRS0, One, IRQ1)
            CreateByteField (CRS0, \_SB.PCI0.IBRG.S417.COMA._Y04._MIN, IOLP)  // _MIN: Minimum Base Address
            CreateByteField (CRS0, 0x06, IOHP)
            CreateByteField (CRS0, \_SB.PCI0.IBRG.S417.COMA._Y04._MAX, IOLR)  // _MAX: Maximum Base Address
            CreateByteField (CRS0, 0x08, IOHR)
            CreateByteField (CRS0, \_SB.PCI0.IBRG.S417.COMA._Y04._LEN, IOLN)  // _LEN: Length
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Acquire (LCK2, 0xFFFF)
                GIND = 0x55
                GLDN = 0x02
                If (GACT)
                {
                    GIND = 0xAA
                    Release (LCK2)
                    Return (0x0F)
                }
                Else
                {
                    If ((GINT == Zero))
                    {
                        GIND = 0xAA
                        Release (LCK2)
                        Return (Zero)
                    }
                    Else
                    {
                        GIND = 0xAA
                        Release (LCK2)
                        Return (0x0D)
                    }

                    Release (LCK2)
                    Return (0x0D)
                }
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Acquire (LCK2, 0xFFFF)
                GIND = 0x55
                GLDN = 0x02
                If ((GINT == Zero))
                {
                    IRQ1 = Zero
                    IOLP = Zero
                    IOHP = Zero
                    IOLR = Zero
                    IOHR = Zero
                    IOLN = Zero
                    GIND = 0xAA
                }
                Else
                {
                    Local0 = One
                    IRQ1 = (Local0 << GINT) /* \_SB_.PCI0.IBRG.S417.GINT */
                    IOLP = GIOL /* \_SB_.PCI0.IBRG.S417.GIOL */
                    IOHP = GIOH /* \_SB_.PCI0.IBRG.S417.GIOH */
                    IOLR = GIOL /* \_SB_.PCI0.IBRG.S417.GIOL */
                    IOHR = GIOH /* \_SB_.PCI0.IBRG.S417.GIOH */
                    IOLN = 0x08
                    GIND = 0xAA
                }

                Release (LCK2)
                Return (CRS0) /* \_SB_.PCI0.IBRG.S417.COMA.CRS0 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                Acquire (LCK2, 0xFFFF)
                GIND = 0x55
                GLDN = 0x02
                GACT = Zero
                GIND = 0xAA
                Release (LCK2)
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Acquire (LCK2, 0xFFFF)
                GIND = 0x55
                GLDN = 0x02
                If ((GINT == Zero))
                {
                    IRQ1 = Zero
                    IRQ1 = Zero
                    IOLP = Zero
                    IOHP = Zero
                    IOLR = Zero
                    IOHR = Zero
                    IOLN = Zero
                    GIND = 0xAA
                }
                Else
                {
                    Local0 = One
                    IRQ1 = (Local0 << GINT) /* \_SB_.PCI0.IBRG.S417.GINT */
                    IOLP = GIOL /* \_SB_.PCI0.IBRG.S417.GIOL */
                    IOHP = GIOH /* \_SB_.PCI0.IBRG.S417.GIOH */
                    IOLR = GIOL /* \_SB_.PCI0.IBRG.S417.GIOL */
                    IOHR = GIOH /* \_SB_.PCI0.IBRG.S417.GIOH */
                    IOLN = 0x08
                    GIND = 0xAA
                }

                Release (LCK2)
                Return (CRS0) /* \_SB_.PCI0.IBRG.S417.COMA.CRS0 */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                Acquire (LCK2, 0xFFFF)
                GIND = 0x55
                GLDN = 0x02
                CreateWordField (Arg0, One, IRQW)
                CreateByteField (Arg0, 0x05, IOLO)
                CreateByteField (Arg0, 0x06, IOHI)
                GIOL = IOLO /* \_SB_.PCI0.IBRG.S417.COMA._SRS.IOLO */
                GIOH = IOHI /* \_SB_.PCI0.IBRG.S417.COMA._SRS.IOHI */
                If ((IRQW == Zero))
                {
                    GINT = Zero
                }
                Else
                {
                    FindSetLeftBit (IRQW, Local0)
                    Local0--
                    GINT = Local0
                }

                GACT = One
                GIND = 0xAA
                Release (LCK2)
            }
        }
    }

    Scope (_SB.PCI0.IBRG.S417)
    {
        Device (FDC0)
        {
            Name (_HID, EisaId ("PNP0700"))  // _HID: Hardware ID
            Name (CRES, ResourceTemplate ()
            {
                IRQNoFlags ()
                    {6}
                DMA (Compatibility, NotBusMaster, Transfer8, _Y05)
                    {2}
                IO (Decode16,
                    0x03F2,             // Range Minimum
                    0x03F2,             // Range Maximum
                    0x02,               // Alignment
                    0x04,               // Length
                    _Y06)
            })
            Name (ODIS, One)
            Name (REST, ResourceTemplate ()
            {
                IRQNoFlags ()
                    {6}
                DMA (Compatibility, NotBusMaster, Transfer8, )
                    {2}
                IO (Decode16,
                    0x03F0,             // Range Minimum
                    0x03F0,             // Range Maximum
                    0x00,               // Alignment
                    0x06,               // Length
                    )
                IO (Decode16,
                    0x03F7,             // Range Minimum
                    0x03F7,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
            })
            Device (DRV0)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Name (_FDI, Package (0x10)  // _FDI: Floppy Drive Information
                {
                    Zero, 
                    0x04, 
                    0x4F, 
                    0x12, 
                    One, 
                    0xDF, 
                    0x02, 
                    0x25, 
                    0x02, 
                    0x12, 
                    0x1B, 
                    0xFF, 
                    0x65, 
                    0xF6, 
                    0x0F, 
                    0x08
                })
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Acquire (LCK2, 0xFFFF)
                    Return (Zero)
                    Release (LCK2)
                }
            }

            Method (_FDE, 0, NotSerialized)  // _FDE: Floppy Disk Enumerate
            {
                Name (FBUF, Buffer (0x14)
                {
                    /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0010 */  0x02, 0x00, 0x00, 0x00                           // ....
                })
                CreateByteField (FBUF, Zero, DRV0)
                Local0 = ^DRV0._STA ()
                If ((Local0 == 0x0F))
                {
                    DRV0 = One
                }

                Return (FBUF) /* \_SB_.PCI0.IBRG.S417.FDC0._FDE.FBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Acquire (LCK2, 0xFFFF)
                INDX = 0x55
                LDN = Zero
                If (ACTR)
                {
                    INDX = 0xAA
                    Release (LCK2)
                    Return (0x0F)
                }
                Else
                {
                    INDX = 0xAA
                    Release (LCK2)
                    If (ODIS)
                    {
                        Return (Zero)
                    }
                    Else
                    {
                        Return (0x0D)
                    }
                }
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (CRES, One, IRQW)
                CreateByteField (CRES, \_SB.PCI0.IBRG.S417.FDC0._Y05._DMA, DMAC)  // _DMA: Direct Memory Access
                CreateByteField (CRES, \_SB.PCI0.IBRG.S417.FDC0._Y06._MIN, IOLO)  // _MIN: Minimum Base Address
                CreateByteField (CRES, 0x09, IOHI)
                CreateByteField (CRES, \_SB.PCI0.IBRG.S417.FDC0._Y06._MAX, IORL)  // _MAX: Maximum Base Address
                CreateByteField (CRES, 0x0B, IORH)
                INDX = 0x55
                LDN = Zero
                IOLO = IOAL /* \_SB_.PCI0.IBRG.S417.IOAL */
                IOHI = IOAH /* \_SB_.PCI0.IBRG.S417.IOAH */
                IORL = IOAL /* \_SB_.PCI0.IBRG.S417.IOAL */
                IORH = IOAH /* \_SB_.PCI0.IBRG.S417.IOAH */
                If ((INTR == Zero))
                {
                    IRQW = Zero
                }
                Else
                {
                    Local0 = One
                    IRQW = (Local0 << INTR) /* \_SB_.PCI0.IBRG.S417.INTR */
                }

                If ((DMCH == 0x04))
                {
                    DMAC = Zero
                }
                Else
                {
                    Local0 = One
                    DMAC = (Local0 << DMCH) /* \_SB_.PCI0.IBRG.S417.DMCH */
                }

                INDX = 0xAA
                Return (CRES) /* \_SB_.PCI0.IBRG.S417.FDC0.CRES */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                Acquire (LCK2, 0xFFFF)
                INDX = 0x55
                LDN = Zero
                ACTR = Zero
                INDX = 0xAA
                ODIS = Zero
                Release (LCK2)
            }

            Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
            {
                IRQNoFlags ()
                    {6}
                DMA (Compatibility, NotBusMaster, Transfer8, )
                    {2}
                IO (Decode16,
                    0x03F0,             // Range Minimum
                    0x03F0,             // Range Maximum
                    0x00,               // Alignment
                    0x06,               // Length
                    )
                IO (Decode16,
                    0x03F7,             // Range Minimum
                    0x03F7,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
            })
            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                Acquire (LCK2, 0xFFFF)
                INDX = 0x55
                LDN = Zero
                CreateWordField (Arg0, One, IRQW)
                CreateByteField (Arg0, 0x04, DMAC)
                CreateByteField (Arg0, 0x08, IOLO)
                CreateByteField (Arg0, 0x09, IOHI)
                IOAL = IOLO /* \_SB_.PCI0.IBRG.S417.FDC0._SRS.IOLO */
                IOAH = IOHI /* \_SB_.PCI0.IBRG.S417.FDC0._SRS.IOHI */
                If ((IRQW == Zero))
                {
                    INTR = Zero
                }
                Else
                {
                    FindSetLeftBit (IRQW, Local0)
                    Local0--
                    INTR = Local0
                }

                If ((DMAC == Zero))
                {
                    DMCH = 0x04
                }
                Else
                {
                    FindSetLeftBit (DMAC, Local0)
                    Local0--
                    DMCH = Local0
                }

                ACTR = One
                INDX = 0xAA
                ODIS = One
                Release (LCK2)
            }
        }
    }

    Scope (_SB)
    {
        Name (SUPP, Zero)
        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, Zero, CDW1)
            CreateDWordField (Arg3, 0x04, CDW2)
            If ((Arg2 >= 0x03))
            {
                CreateDWordField (Arg3, 0x08, CDW3)
            }

            SUPP = CDW2 /* \_SB_._OSC.CDW2 */
            If (((SUPP & One) && (ILOW == One)))
            {
                Return (Arg3)
            }

            Return (0x04)
        }
    }

    OperationRegion (IMEM, SystemMemory, 0x000E8050, One)
    Field (IMEM, AnyAcc, NoLock, Preserve)
    {
        ILOW,   8
    }

    Name (PICM, Zero)
    Method (_PIC, 1, NotSerialized)  // _PIC: Interrupt Model
    {
        PICM = Arg0
    }

    Scope (_SB)
    {
        Device (LNKA)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (BUFA, ResourceTemplate ()
            {
                IRQ (Level, ActiveLow, Shared, )
                    {11}
            })
            CreateWordField (BUFA, One, IRA0)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Local0 = (^^PCI0.IBRG.PIRA & 0x80)
                If (Local0)
                {
                    Return (0x09)
                }
                Else
                {
                    Return (0x0B)
                }
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                ^^PCI0.IBRG.PIRA |= 0x80
            }

            Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
            {
                IRQ (Level, ActiveLow, Shared, )
                    {5,7,10,11}
            })
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Local0 = (^^PCI0.IBRG.PIRA & 0x0F)
                IRA0 = (One << Local0)
                Return (BUFA) /* \_SB_.LNKA.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                ^^PCI0.IBRG.PIRA = (Local0 - One)
            }
        }

        Device (LNKB)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Name (BUFB, ResourceTemplate ()
            {
                IRQ (Level, ActiveLow, Shared, )
                    {11}
            })
            CreateWordField (BUFB, One, IRA0)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Local0 = (^^PCI0.IBRG.PIRB & 0x80)
                If (Local0)
                {
                    Return (0x09)
                }
                Else
                {
                    Return (0x0B)
                }
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                ^^PCI0.IBRG.PIRB |= 0x80
            }

            Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
            {
                IRQ (Level, ActiveLow, Shared, )
                    {5,7,10,11}
            })
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Local0 = (^^PCI0.IBRG.PIRB & 0x0F)
                IRA0 = (One << Local0)
                Return (BUFB) /* \_SB_.LNKB.BUFB */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                ^^PCI0.IBRG.PIRB = (Local0 - One)
            }
        }

        Device (LNKC)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Name (BUFC, ResourceTemplate ()
            {
                IRQ (Level, ActiveLow, Shared, )
                    {11}
            })
            CreateWordField (BUFC, One, IRA0)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Local0 = (^^PCI0.IBRG.PIRC & 0x80)
                If (Local0)
                {
                    Return (0x09)
                }
                Else
                {
                    Return (0x0B)
                }
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                ^^PCI0.IBRG.PIRC |= 0x80
            }

            Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
            {
                IRQ (Level, ActiveLow, Shared, )
                    {5,7,10,11}
            })
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Local0 = (^^PCI0.IBRG.PIRC & 0x0F)
                IRA0 = (One << Local0)
                Return (BUFC) /* \_SB_.LNKC.BUFC */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                ^^PCI0.IBRG.PIRC = (Local0 - One)
            }
        }

        Device (LNKD)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x04)  // _UID: Unique ID
            Name (BUFD, ResourceTemplate ()
            {
                IRQ (Level, ActiveLow, Shared, )
                    {11}
            })
            CreateWordField (BUFD, One, IRA0)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Local0 = (^^PCI0.IBRG.PIRD & 0x80)
                If (Local0)
                {
                    Return (0x09)
                }
                Else
                {
                    Return (0x0B)
                }
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                ^^PCI0.IBRG.PIRD |= 0x80
            }

            Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
            {
                IRQ (Level, ActiveLow, Shared, )
                    {5,7,10,11}
            })
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Local0 = (^^PCI0.IBRG.PIRD & 0x0F)
                IRA0 = (One << Local0)
                Return (BUFD) /* \_SB_.LNKD.BUFD */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                ^^PCI0.IBRG.PIRD = (Local0 - One)
            }
        }

        Device (LNKE)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x05)  // _UID: Unique ID
            Name (BUFE, ResourceTemplate ()
            {
                IRQ (Level, ActiveLow, Shared, )
                    {11}
            })
            CreateWordField (BUFE, One, IRA0)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Local0 = (^^PCI0.IBRG.PIRE & 0x80)
                If (Local0)
                {
                    Return (0x09)
                }
                Else
                {
                    Return (0x0B)
                }
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                ^^PCI0.IBRG.PIRE |= 0x80
            }

            Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
            {
                IRQ (Level, ActiveLow, Shared, )
                    {5,7,10,11}
            })
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Local0 = (^^PCI0.IBRG.PIRE & 0x0F)
                IRA0 = (One << Local0)
                Return (BUFE) /* \_SB_.LNKE.BUFE */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                ^^PCI0.IBRG.PIRE = (Local0 - One)
            }
        }

        Device (LNKF)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x06)  // _UID: Unique ID
            Name (BUFF, ResourceTemplate ()
            {
                IRQ (Level, ActiveLow, Shared, )
                    {11}
            })
            CreateWordField (BUFF, One, IRA0)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Local0 = (^^PCI0.IBRG.PIRF & 0x80)
                If (Local0)
                {
                    Return (0x09)
                }
                Else
                {
                    Return (0x0B)
                }
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                ^^PCI0.IBRG.PIRF |= 0x80
            }

            Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
            {
                IRQ (Level, ActiveLow, Shared, )
                    {5,7,10,11}
            })
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Local0 = (^^PCI0.IBRG.PIRF & 0x0F)
                IRA0 = (One << Local0)
                Return (BUFF) /* \_SB_.LNKF.BUFF */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                ^^PCI0.IBRG.PIRF = (Local0 - One)
            }
        }

        Device (LNKG)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x07)  // _UID: Unique ID
            Name (BUFG, ResourceTemplate ()
            {
                IRQ (Level, ActiveLow, Shared, )
                    {11}
            })
            CreateWordField (BUFG, One, IRA0)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Local0 = (^^PCI0.IBRG.PIRG & 0x80)
                If (Local0)
                {
                    Return (0x09)
                }
                Else
                {
                    Return (0x0B)
                }
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                ^^PCI0.IBRG.PIRG |= 0x80
            }

            Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
            {
                IRQ (Level, ActiveLow, Shared, )
                    {5,7,10,11}
            })
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Local0 = (^^PCI0.IBRG.PIRG & 0x0F)
                IRA0 = (One << Local0)
                Return (BUFG) /* \_SB_.LNKG.BUFG */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                ^^PCI0.IBRG.PIRG = (Local0 - One)
            }
        }

        Device (LNKH)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x08)  // _UID: Unique ID
            Name (BUFH, ResourceTemplate ()
            {
                IRQ (Level, ActiveLow, Shared, )
                    {11}
            })
            CreateWordField (BUFH, One, IRA0)
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Local0 = (^^PCI0.IBRG.PIRH & 0x80)
                If (Local0)
                {
                    Return (0x09)
                }
                Else
                {
                    Return (0x0B)
                }
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                ^^PCI0.IBRG.PIRH |= 0x80
            }

            Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
            {
                IRQ (Level, ActiveLow, Shared, )
                    {5,7,10,11}
            })
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Local0 = (^^PCI0.IBRG.PIRH & 0x0F)
                IRA0 = (One << Local0)
                Return (BUFH) /* \_SB_.LNKH.BUFH */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                ^^PCI0.IBRG.PIRH = (Local0 - One)
            }
        }
    }

    Method (_SB.PCI0._PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
    {
        If ((PICM == One))
        {
            Return (Package (0x12)
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0x2D
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    Zero, 
                    Zero, 
                    0x2D
                }, 

                Package (0x04)
                {
                    0x0002FFFF, 
                    Zero, 
                    Zero, 
                    0x2D
                }, 

                Package (0x04)
                {
                    0x0003FFFF, 
                    Zero, 
                    Zero, 
                    0x2D
                }, 

                Package (0x04)
                {
                    0x0004FFFF, 
                    Zero, 
                    Zero, 
                    0x2D
                }, 

                Package (0x04)
                {
                    0x0005FFFF, 
                    Zero, 
                    Zero, 
                    0x2D
                }, 

                Package (0x04)
                {
                    0x0006FFFF, 
                    Zero, 
                    Zero, 
                    0x2D
                }, 

                Package (0x04)
                {
                    0x0007FFFF, 
                    Zero, 
                    Zero, 
                    0x2D
                }, 

                Package (0x04)
                {
                    0x0008FFFF, 
                    Zero, 
                    Zero, 
                    0x2D
                }, 

                Package (0x04)
                {
                    0x0009FFFF, 
                    Zero, 
                    Zero, 
                    0x2D
                }, 

                Package (0x04)
                {
                    0x000AFFFF, 
                    Zero, 
                    Zero, 
                    0x2D
                }, 

                Package (0x04)
                {
                    0x001CFFFF, 
                    Zero, 
                    Zero, 
                    0x10
                }, 

                Package (0x04)
                {
                    0x001CFFFF, 
                    0x02, 
                    Zero, 
                    0x10
                }, 

                Package (0x04)
                {
                    0x001DFFFF, 
                    Zero, 
                    Zero, 
                    0x14
                }, 

                Package (0x04)
                {
                    0x001DFFFF, 
                    One, 
                    Zero, 
                    0x17
                }, 

                Package (0x04)
                {
                    0x001DFFFF, 
                    0x02, 
                    Zero, 
                    0x16
                }, 

                Package (0x04)
                {
                    0x001DFFFF, 
                    0x03, 
                    Zero, 
                    0x17
                }, 

                Package (0x04)
                {
                    0x001FFFFF, 
                    One, 
                    Zero, 
                    0x11
                }
            })
        }
        Else
        {
            Return (Package (0x12)
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0002FFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0003FFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0004FFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0005FFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0006FFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0007FFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0008FFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0009FFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x000AFFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x001CFFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x001CFFFF, 
                    0x02, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x001DFFFF, 
                    Zero, 
                    LNKE, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x001DFFFF, 
                    One, 
                    LNKH, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x001DFFFF, 
                    0x02, 
                    LNKG, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x001DFFFF, 
                    0x03, 
                    LNKH, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x001FFFFF, 
                    One, 
                    LNKB, 
                    Zero
                }
            })
        }
    }

    Method (_SB.PCI0.PT01._PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
    {
        If ((PICM == One))
        {
            Return (Package (0x01)
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0x1C
                }
            })
        }
        Else
        {
            Return (Package (0x01)
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }
            })
        }
    }

    Method (_SB.PCI0.IPT1._PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
    {
        If ((PICM == One))
        {
            Return (Package (0x02)
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0x10
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    Zero, 
                    0x11
                }
            })
        }
        Else
        {
            Return (Package (0x02)
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    LNKB, 
                    Zero
                }
            })
        }
    }

    Method (_SB.PCI0.IPT3._PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
    {
        If ((PICM == One))
        {
            Return (Package (0x02)
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0x12
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    Zero, 
                    0x13
                }
            })
        }
        Else
        {
            Return (Package (0x02)
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    LNKC, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    LNKD, 
                    Zero
                }
            })
        }
    }

    Method (_SB.PCI0.IPT5._PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
    {
        If ((PICM == One))
        {
            Return (Package (0x04)
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0x10
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    Zero, 
                    0x11
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    Zero, 
                    0x12
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    Zero, 
                    0x13
                }
            })
        }
        Else
        {
            Return (Package (0x04)
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    LNKB, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    LNKC, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    LNKD, 
                    Zero
                }
            })
        }
    }

    Method (_SB.PCI0.PT03._PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
    {
        If ((PICM == One))
        {
            Return (Package (0x04)
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0x18
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    Zero, 
                    0x22
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    Zero, 
                    0x23
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    Zero, 
                    0x24
                }
            })
        }
        Else
        {
            Return (Package (0x04)
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    LNKB, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    LNKC, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    LNKD, 
                    Zero
                }
            })
        }
    }

    Method (_SB.PCI0.PT04._PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
    {
        If ((PICM == One))
        {
            Return (Package (0x04)
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0x19
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    Zero, 
                    0x23
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    Zero, 
                    0x24
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    Zero, 
                    0x22
                }
            })
        }
        Else
        {
            Return (Package (0x04)
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    LNKB, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    LNKC, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    LNKD, 
                    Zero
                }
            })
        }
    }

    Method (_SB.PCI0.PT05._PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
    {
        If ((PICM == One))
        {
            Return (Package (0x04)
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0x1A
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    Zero, 
                    0x19
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    Zero, 
                    0x22
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    Zero, 
                    0x1D
                }
            })
        }
        Else
        {
            Return (Package (0x04)
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    LNKB, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    LNKC, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    LNKD, 
                    Zero
                }
            })
        }
    }

    Method (_SB.PCI0.PT06._PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
    {
        If ((PICM == One))
        {
            Return (Package (0x04)
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0x1B
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    Zero, 
                    0x26
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    Zero, 
                    0x25
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    Zero, 
                    0x27
                }
            })
        }
        Else
        {
            Return (Package (0x04)
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    LNKB, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    LNKC, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    LNKD, 
                    Zero
                }
            })
        }
    }

    Method (_SB.PCI0.PT07._PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
    {
        If ((PICM == One))
        {
            Return (Package (0x04)
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0x1E
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    Zero, 
                    0x25
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    Zero, 
                    0x27
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    Zero, 
                    0x26
                }
            })
        }
        Else
        {
            Return (Package (0x04)
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    LNKB, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    LNKC, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    LNKD, 
                    Zero
                }
            })
        }
    }

    Method (_SB.PCI0.PT08._PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
    {
        If ((PICM == One))
        {
            Return (Package (0x04)
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0x1F
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    Zero, 
                    0x27
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    Zero, 
                    0x26
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    Zero, 
                    0x25
                }
            })
        }
        Else
        {
            Return (Package (0x04)
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    LNKB, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    LNKC, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    LNKD, 
                    Zero
                }
            })
        }
    }

    Method (_SB.PCI0.PT09._PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
    {
        If ((PICM == One))
        {
            Return (Package (0x04)
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0x20
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    Zero, 
                    0x2A
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    Zero, 
                    0x2F
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    Zero, 
                    0x29
                }
            })
        }
        Else
        {
            Return (Package (0x04)
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    LNKB, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    LNKC, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    LNKD, 
                    Zero
                }
            })
        }
    }

    Method (_SB.PCI0.PT0A._PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
    {
        If ((PICM == One))
        {
            Return (Package (0x04)
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    Zero, 
                    0x21
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    Zero, 
                    0x1F
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    Zero, 
                    0x2E
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    Zero, 
                    0x2D
                }
            })
        }
        Else
        {
            Return (Package (0x04)
            {
                Package (0x04)
                {
                    0xFFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    One, 
                    LNKB, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x02, 
                    LNKC, 
                    Zero
                }, 

                Package (0x04)
                {
                    0xFFFF, 
                    0x03, 
                    LNKD, 
                    Zero
                }
            })
        }
    }

    Method (_SB.PCI0.IP2P._PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
    {
        If ((PICM == One))
        {
            Return (Package (0x01)
            {
                Package (0x04)
                {
                    0x0003FFFF, 
                    Zero, 
                    Zero, 
                    0x17
                }
            })
        }
        Else
        {
            Return (Package (0x01)
            {
                Package (0x04)
                {
                    0x0003FFFF, 
                    Zero, 
                    LNKH, 
                    Zero
                }
            })
        }
    }

    OperationRegion (AMEM, SystemMemory, 0x000E81A0, One)
    Field (AMEM, AnyAcc, NoLock, Preserve)
    {
        VPRT,   8
    }

    OperationRegion (LMEM, SystemMemory, 0x000E81A4, One)
    Field (LMEM, AnyAcc, NoLock, Preserve)
    {
        LPT1,   8
    }

    OperationRegion (SBPM, SystemIO, 0x0900, 0x04)
    Field (SBPM, ByteAcc, NoLock, Preserve)
    {
        SPMS,   16, 
        SPME,   16
    }

    OperationRegion (SGPE, SystemIO, 0x0920, 0x10)
    Field (SGPE, ByteAcc, NoLock, Preserve)
    {
        GPS0,   32, 
        GPS1,   32, 
        GPE0,   32, 
        GPE1,   32
    }

    OperationRegion (SYSS, SystemIO, 0xB2, One)
    Field (SYSS, ByteAcc, NoLock, Preserve)
    {
        SMIP,   8
    }

    Method (_PTS, 1, NotSerialized)  // _PTS: Prepare To Sleep
    {
        SPMS = 0xFFFF
        GPS0 = Ones
        GPS1 = Ones
        Local0 = \_SB.PCI0.IBRG.AFG3
        Local0 |= One
        \_SB.PCI0.IBRG.AFG3 = Local0
    }
}



ERST
----
[000h 0000   4]                    Signature : "ERST"    [Error Record Serialization Table]
[004h 0004   4]                 Table Length : 000001D0
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : C5
[00Ah 0010   6]                       Oem ID : "HP    "
[010h 0016   8]                 Oem Table ID : "ProLiant"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "  "
[020h 0032   4]        Asl Compiler Revision : 0000162E

[024h 0036   4]  Serialization Header Length : 0000000C
[028h 0040   4]                     Reserved : 00000000
[02Ch 0044   4]      Instruction Entry Count : 0000000D

[030h 0048   1]                       Action : 00 [Begin Write Operation]
[031h 0049   1]                  Instruction : 03 [Write Register Value]
[032h 0050   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[033h 0051   1]                     Reserved : 00

[034h 0052  12]              Register Region : [Generic Address Structure]
[034h 0052   1]                     Space ID : 00 [SystemMemory]
[035h 0053   1]                    Bit Width : 08
[036h 0054   1]                   Bit Offset : 00
[037h 0055   1]         Encoded Access Width : 01 [Byte Access:8]
[038h 0056   8]                      Address : 00000000000E8024

[040h 0064   8]                        Value : 0000000000000000
[048h 0072   8]                         Mask : 00000000000000FF

[050h 0080   1]                       Action : 01 [Begin Read Operation]
[051h 0081   1]                  Instruction : 03 [Write Register Value]
[052h 0082   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[053h 0083   1]                     Reserved : 00

[054h 0084  12]              Register Region : [Generic Address Structure]
[054h 0084   1]                     Space ID : 00 [SystemMemory]
[055h 0085   1]                    Bit Width : 08
[056h 0086   1]                   Bit Offset : 00
[057h 0087   1]         Encoded Access Width : 01 [Byte Access:8]
[058h 0088   8]                      Address : 00000000000E8024

[060h 0096   8]                        Value : 0000000000000001
[068h 0104   8]                         Mask : 00000000000000FF

[070h 0112   1]                       Action : 02 [Begin Clear Operation]
[071h 0113   1]                  Instruction : 03 [Write Register Value]
[072h 0114   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[073h 0115   1]                     Reserved : 00

[074h 0116  12]              Register Region : [Generic Address Structure]
[074h 0116   1]                     Space ID : 00 [SystemMemory]
[075h 0117   1]                    Bit Width : 08
[076h 0118   1]                   Bit Offset : 00
[077h 0119   1]         Encoded Access Width : 01 [Byte Access:8]
[078h 0120   8]                      Address : 00000000000E8024

[080h 0128   8]                        Value : 0000000000000002
[088h 0136   8]                         Mask : 00000000000000FF

[090h 0144   1]                       Action : 03 [End Operation]
[091h 0145   1]                  Instruction : 03 [Write Register Value]
[092h 0146   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[093h 0147   1]                     Reserved : 00

[094h 0148  12]              Register Region : [Generic Address Structure]
[094h 0148   1]                     Space ID : 00 [SystemMemory]
[095h 0149   1]                    Bit Width : 08
[096h 0150   1]                   Bit Offset : 00
[097h 0151   1]         Encoded Access Width : 01 [Byte Access:8]
[098h 0152   8]                      Address : 00000000000E8024

[0A0h 0160   8]                        Value : 00000000000000FF
[0A8h 0168   8]                         Mask : 00000000000000FF

[0B0h 0176   1]                       Action : 04 [Set Record Offset]
[0B1h 0177   1]                  Instruction : 02 [Write Register]
[0B2h 0178   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[0B3h 0179   1]                     Reserved : 00

[0B4h 0180  12]              Register Region : [Generic Address Structure]
[0B4h 0180   1]                     Space ID : 00 [SystemMemory]
[0B5h 0181   1]                    Bit Width : 40
[0B6h 0182   1]                   Bit Offset : 00
[0B7h 0183   1]         Encoded Access Width : 02 [Word Access:16]
[0B8h 0184   8]                      Address : 00000000000E8028

[0C0h 0192   8]                        Value : 0000000000000000
[0C8h 0200   8]                         Mask : 000000000000FFFF

[0D0h 0208   1]                       Action : 05 [Execute Operation]
[0D1h 0209   1]                  Instruction : 03 [Write Register Value]
[0D2h 0210   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[0D3h 0211   1]                     Reserved : 00

[0D4h 0212  12]              Register Region : [Generic Address Structure]
[0D4h 0212   1]                     Space ID : 00 [SystemMemory]
[0D5h 0213   1]                    Bit Width : 08
[0D6h 0214   1]                   Bit Offset : 00
[0D7h 0215   1]         Encoded Access Width : 01 [Byte Access:8]
[0D8h 0216   8]                      Address : 00000000000E8025

[0E0h 0224   8]                        Value : 0000000000000001
[0E8h 0232   8]                         Mask : 00000000000000FF

[0F0h 0240   1]                       Action : 05 [Execute Operation]
[0F1h 0241   1]                  Instruction : 03 [Write Register Value]
[0F2h 0242   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[0F3h 0243   1]                     Reserved : 00

[0F4h 0244  12]              Register Region : [Generic Address Structure]
[0F4h 0244   1]                     Space ID : 01 [SystemIO]
[0F5h 0245   1]                    Bit Width : 08
[0F6h 0246   1]                   Bit Offset : 00
[0F7h 0247   1]         Encoded Access Width : 01 [Byte Access:8]
[0F8h 0248   8]                      Address : 00000000000000B2

[100h 0256   8]                        Value : 0000000000000010
[108h 0264   8]                         Mask : 00000000000000FF

[110h 0272   1]                       Action : 06 [Check Busy Status]
[111h 0273   1]                  Instruction : 01 [Read Register Value]
[112h 0274   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[113h 0275   1]                     Reserved : 00

[114h 0276  12]              Register Region : [Generic Address Structure]
[114h 0276   1]                     Space ID : 00 [SystemMemory]
[115h 0277   1]                    Bit Width : 08
[116h 0278   1]                   Bit Offset : 00
[117h 0279   1]         Encoded Access Width : 01 [Byte Access:8]
[118h 0280   8]                      Address : 00000000000E8025

[120h 0288   8]                        Value : 0000000000000001
[128h 0296   8]                         Mask : 00000000000000FF

[130h 0304   1]                       Action : 07 [Get Command Status]
[131h 0305   1]                  Instruction : 00 [Read Register]
[132h 0306   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[133h 0307   1]                     Reserved : 00

[134h 0308  12]              Register Region : [Generic Address Structure]
[134h 0308   1]                     Space ID : 00 [SystemMemory]
[135h 0309   1]                    Bit Width : 08
[136h 0310   1]                   Bit Offset : 00
[137h 0311   1]         Encoded Access Width : 01 [Byte Access:8]
[138h 0312   8]                      Address : 00000000000E8026

[140h 0320   8]                        Value : 0000000000000000
[148h 0328   8]                         Mask : 00000000000000FF

[150h 0336   1]                       Action : 08 [Get Record Identifier]
[151h 0337   1]                  Instruction : 00 [Read Register]
[152h 0338   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[153h 0339   1]                     Reserved : 00

[154h 0340  12]              Register Region : [Generic Address Structure]
[154h 0340   1]                     Space ID : 00 [SystemMemory]
[155h 0341   1]                    Bit Width : 40
[156h 0342   1]                   Bit Offset : 00
[157h 0343   1]         Encoded Access Width : 04 [QWord Access:64]
[158h 0344   8]                      Address : 00000000000E8030

[160h 0352   8]                        Value : 0000000000000000
[168h 0360   8]                         Mask : FFFFFFFFFFFFFFFF

[170h 0368   1]                       Action : 09 [Set Record Identifier]
[171h 0369   1]                  Instruction : 02 [Write Register]
[172h 0370   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[173h 0371   1]                     Reserved : 00

[174h 0372  12]              Register Region : [Generic Address Structure]
[174h 0372   1]                     Space ID : 00 [SystemMemory]
[175h 0373   1]                    Bit Width : 40
[176h 0374   1]                   Bit Offset : 00
[177h 0375   1]         Encoded Access Width : 04 [QWord Access:64]
[178h 0376   8]                      Address : 00000000000E8030

[180h 0384   8]                        Value : 0000000000000000
[188h 0392   8]                         Mask : FFFFFFFFFFFFFFFF

[190h 0400   1]                       Action : 0A [Get Record Count]
[191h 0401   1]                  Instruction : 00 [Read Register]
[192h 0402   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[193h 0403   1]                     Reserved : 00

[194h 0404  12]              Register Region : [Generic Address Structure]
[194h 0404   1]                     Space ID : 00 [SystemMemory]
[195h 0405   1]                    Bit Width : 08
[196h 0406   1]                   Bit Offset : 00
[197h 0407   1]         Encoded Access Width : 01 [Byte Access:8]
[198h 0408   8]                      Address : 00000000000E8027

[1A0h 0416   8]                        Value : 0000000000000000
[1A8h 0424   8]                         Mask : 00000000000000FF

[1B0h 0432   1]                       Action : 0B [Begin Dummy Write]
[1B1h 0433   1]                  Instruction : 03 [Write Register Value]
[1B2h 0434   1]        Flags (decoded below) : 00
                      Preserve Register Bits : 0
[1B3h 0435   1]                     Reserved : 00

[1B4h 0436  12]              Register Region : [Generic Address Structure]
[1B4h 0436   1]                     Space ID : 00 [SystemMemory]
[1B5h 0437   1]                    Bit Width : 08
[1B6h 0438   1]                   Bit Offset : 00
[1B7h 0439   1]         Encoded Access Width : 01 [Byte Access:8]
[1B8h 0440   8]                      Address : 00000000000E8024

[1C0h 0448   8]                        Value : 000000000000000B
[1C8h 0456   8]                         Mask : 00000000000000FF

Raw Table Data: Length 464 (0x1D0)

    0000: 45 52 53 54 D0 01 00 00 01 C5 48 50 20 20 20 20  // ERST......HP    
    0010: 50 72 6F 4C 69 61 6E 74 01 00 00 00 D2 04 00 00  // ProLiant........
    0020: 2E 16 00 00 0C 00 00 00 00 00 00 00 0D 00 00 00  // ................
    0030: 00 03 00 00 00 08 00 01 24 80 0E 00 00 00 00 00  // ........$.......
    0040: 00 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 00  // ................
    0050: 01 03 00 00 00 08 00 01 24 80 0E 00 00 00 00 00  // ........$.......
    0060: 01 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 00  // ................
    0070: 02 03 00 00 00 08 00 01 24 80 0E 00 00 00 00 00  // ........$.......
    0080: 02 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 00  // ................
    0090: 03 03 00 00 00 08 00 01 24 80 0E 00 00 00 00 00  // ........$.......
    00A0: FF 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 00  // ................
    00B0: 04 02 00 00 00 40 00 02 28 80 0E 00 00 00 00 00  // .....@..(.......
    00C0: 00 00 00 00 00 00 00 00 FF FF 00 00 00 00 00 00  // ................
    00D0: 05 03 00 00 00 08 00 01 25 80 0E 00 00 00 00 00  // ........%.......
    00E0: 01 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 00  // ................
    00F0: 05 03 00 00 01 08 00 01 B2 00 00 00 00 00 00 00  // ................
    0100: 10 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 00  // ................
    0110: 06 01 00 00 00 08 00 01 25 80 0E 00 00 00 00 00  // ........%.......
    0120: 01 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 00  // ................
    0130: 07 00 00 00 00 08 00 01 26 80 0E 00 00 00 00 00  // ........&.......
    0140: 00 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 00  // ................
    0150: 08 00 00 00 00 40 00 04 30 80 0E 00 00 00 00 00  // .....@..0.......
    0160: 00 00 00 00 00 00 00 00 FF FF FF FF FF FF FF FF  // ................
    0170: 09 02 00 00 00 40 00 04 30 80 0E 00 00 00 00 00  // .....@..0.......
    0180: 00 00 00 00 00 00 00 00 FF FF FF FF FF FF FF FF  // ................
    0190: 0A 00 00 00 00 08 00 01 27 80 0E 00 00 00 00 00  // ........'.......
    01A0: 00 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 00  // ................
    01B0: 0B 03 00 00 00 08 00 01 24 80 0E 00 00 00 00 00  // ........$.......
    01C0: 0B 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 00  // ................


FACP
----
[000h 0000   4]                    Signature : "FACP"    [Fixed ACPI Description Table (FADT)]
[004h 0004   4]                 Table Length : 000000F4
[008h 0008   1]                     Revision : 03
[009h 0009   1]                     Checksum : 2B
[00Ah 0010   6]                       Oem ID : "HP    "
[010h 0016   8]                 Oem Table ID : "ProLiant"
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "  "
[020h 0032   4]        Asl Compiler Revision : 0000162E

[024h 0036   4]                 FACS Address : DF60F100
[028h 0040   4]                 DSDT Address : DF610340
[02Ch 0044   1]                        Model : 01
[02Dh 0045   1]                   PM Profile : 00 [Unspecified]
[02Eh 0046   2]                SCI Interrupt : 0009
[030h 0048   4]             SMI Command Port : 000000B2
[034h 0052   1]            ACPI Enable Value : 01
[035h 0053   1]           ACPI Disable Value : 00
[036h 0054   1]               S4BIOS Command : 00
[037h 0055   1]              P-State Control : 00
[038h 0056   4]     PM1A Event Block Address : 00000900
[03Ch 0060   4]     PM1B Event Block Address : 00000000
[040h 0064   4]   PM1A Control Block Address : 00000904
[044h 0068   4]   PM1B Control Block Address : 00000000
[048h 0072   4]    PM2 Control Block Address : 00000950
[04Ch 0076   4]       PM Timer Block Address : 00000908
[050h 0080   4]           GPE0 Block Address : 00000920
[054h 0084   4]           GPE1 Block Address : 00000000
[058h 0088   1]       PM1 Event Block Length : 04
[059h 0089   1]     PM1 Control Block Length : 04
[05Ah 0090   1]     PM2 Control Block Length : 04
[05Bh 0091   1]        PM Timer Block Length : 04
[05Ch 0092   1]            GPE0 Block Length : 10
[05Dh 0093   1]            GPE1 Block Length : 00
[05Eh 0094   1]             GPE1 Base Offset : 00
[05Fh 0095   1]                 _CST Support : 00
[060h 0096   2]                   C2 Latency : FFFF
[062h 0098   2]                   C3 Latency : 003C
[064h 0100   2]               CPU Cache Size : 0000
[066h 0102   2]           Cache Flush Stride : 0000
[068h 0104   1]            Duty Cycle Offset : 00
[069h 0105   1]             Duty Cycle Width : 00
[06Ah 0106   1]          RTC Day Alarm Index : 49
[06Bh 0107   1]        RTC Month Alarm Index : 4A
[06Ch 0108   1]            RTC Century Index : 48
[06Dh 0109   2]   Boot Flags (decoded below) : 0013
               Legacy Devices Supported (V2) : 1
            8042 Present on ports 60/64 (V2) : 1
                        VGA Not Present (V4) : 0
                      MSI Not Supported (V4) : 0
                PCIe ASPM Not Supported (V4) : 1
                   CMOS RTC Not Present (V5) : 0
[06Fh 0111   1]                     Reserved : 00
[070h 0112   4]        Flags (decoded below) : 000000A5
      WBINVD instruction is operational (V1) : 1
              WBINVD flushes all caches (V1) : 0
                    All CPUs support C1 (V1) : 1
                  C2 works on MP system (V1) : 0
            Control Method Power Button (V1) : 0
            Control Method Sleep Button (V1) : 1
        RTC wake not in fixed reg space (V1) : 0
            RTC can wake system from S4 (V1) : 1
                        32-bit PM Timer (V1) : 0
                      Docking Supported (V1) : 0
               Reset Register Supported (V2) : 0
                            Sealed Case (V3) : 0
                    Headless - No Video (V3) : 0
        Use native instr after SLP_TYPx (V3) : 0
              PCIEXP_WAK Bits Supported (V4) : 0
                     Use Platform Timer (V4) : 0
               RTC_STS valid on S4 wake (V4) : 0
                Remote Power-on capable (V4) : 0
                 Use APIC Cluster Model (V4) : 0
     Use APIC Physical Destination Mode (V4) : 0
                       Hardware Reduced (V5) : 0
                      Low Power S0 Idle (V5) : 0

[074h 0116  12]               Reset Register : [Generic Address Structure]
[074h 0116   1]                     Space ID : 00 [SystemMemory]
[075h 0117   1]                    Bit Width : 00
[076h 0118   1]                   Bit Offset : 00
[077h 0119   1]         Encoded Access Width : 00 [Undefined/Legacy]
[078h 0120   8]                      Address : 0000000000000000

[080h 0128   1]         Value to cause reset : 00
[081h 0129   2]    ARM Flags (decoded below) : 0000
                              PSCI Compliant : 0
                       Must use HVC for PSCI : 0

[083h 0131   1]          FADT Minor Revision : 00
[084h 0132   8]                 FACS Address : 00000000DF60F100
[08Ch 0140   8]                 DSDT Address : 00000000DF610340
[094h 0148  12]             PM1A Event Block : [Generic Address Structure]
[094h 0148   1]                     Space ID : 01 [SystemIO]
[095h 0149   1]                    Bit Width : 20
[096h 0150   1]                   Bit Offset : 00
[097h 0151   1]         Encoded Access Width : 00 [Undefined/Legacy]
[098h 0152   8]                      Address : 0000000000000900

[0A0h 0160  12]             PM1B Event Block : [Generic Address Structure]
[0A0h 0160   1]                     Space ID : 00 [SystemMemory]
[0A1h 0161   1]                    Bit Width : 00
[0A2h 0162   1]                   Bit Offset : 00
[0A3h 0163   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0A4h 0164   8]                      Address : 0000000000000000

[0ACh 0172  12]           PM1A Control Block : [Generic Address Structure]
[0ACh 0172   1]                     Space ID : 01 [SystemIO]
[0ADh 0173   1]                    Bit Width : 20
[0AEh 0174   1]                   Bit Offset : 00
[0AFh 0175   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0B0h 0176   8]                      Address : 0000000000000904

[0B8h 0184  12]           PM1B Control Block : [Generic Address Structure]
[0B8h 0184   1]                     Space ID : 00 [SystemMemory]
[0B9h 0185   1]                    Bit Width : 00
[0BAh 0186   1]                   Bit Offset : 00
[0BBh 0187   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0BCh 0188   8]                      Address : 0000000000000000

[0C4h 0196  12]            PM2 Control Block : [Generic Address Structure]
[0C4h 0196   1]                     Space ID : 01 [SystemIO]
[0C5h 0197   1]                    Bit Width : 20
[0C6h 0198   1]                   Bit Offset : 00
[0C7h 0199   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0C8h 0200   8]                      Address : 0000000000000950

[0D0h 0208  12]               PM Timer Block : [Generic Address Structure]
[0D0h 0208   1]                     Space ID : 01 [SystemIO]
[0D1h 0209   1]                    Bit Width : 20
[0D2h 0210   1]                   Bit Offset : 00
[0D3h 0211   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0D4h 0212   8]                      Address : 0000000000000908

[0DCh 0220  12]                   GPE0 Block : [Generic Address Structure]
[0DCh 0220   1]                     Space ID : 01 [SystemIO]
[0DDh 0221   1]                    Bit Width : 80
[0DEh 0222   1]                   Bit Offset : 00
[0DFh 0223   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0E0h 0224   8]                      Address : 0000000000000920

[0E8h 0232  12]                   GPE1 Block : [Generic Address Structure]
[0E8h 0232   1]                     Space ID : 00 [SystemMemory]
[0E9h 0233   1]                    Bit Width : 00
[0EAh 0234   1]                   Bit Offset : 00
[0EBh 0235   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0ECh 0236   8]                      Address : 0000000000000000


Raw Table Data: Length 244 (0xF4)

    0000: 46 41 43 50 F4 00 00 00 03 2B 48 50 20 20 20 20  // FACP.....+HP    
    0010: 50 72 6F 4C 69 61 6E 74 02 00 00 00 D2 04 00 00  // ProLiant........
    0020: 2E 16 00 00 00 F1 60 DF 40 03 61 DF 01 00 09 00  // ......`.@.a.....
    0030: B2 00 00 00 01 00 00 00 00 09 00 00 00 00 00 00  // ................
    0040: 04 09 00 00 00 00 00 00 50 09 00 00 08 09 00 00  // ........P.......
    0050: 20 09 00 00 00 00 00 00 04 04 04 04 10 00 00 00  //  ...............
    0060: FF FF 3C 00 00 00 00 00 00 00 49 4A 48 13 00 00  // ..<.......IJH...
    0070: A5 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0080: 00 00 00 00 00 F1 60 DF 00 00 00 00 40 03 61 DF  // ......`.....@.a.
    0090: 00 00 00 00 01 20 00 00 00 09 00 00 00 00 00 00  // ..... ..........
    00A0: 00 00 00 00 00 00 00 00 00 00 00 00 01 20 00 00  // ............. ..
    00B0: 04 09 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    00C0: 00 00 00 00 01 20 00 00 50 09 00 00 00 00 00 00  // ..... ..P.......
    00D0: 01 20 00 00 08 09 00 00 00 00 00 00 01 80 00 00  // . ..............
    00E0: 20 09 00 00 00 00 00 00 00 00 00 00 00 00 00 00  //  ...............
    00F0: 00 00 00 00                                      // ....


FACS
----
[000h 0000   4]                    Signature : "FACS"
[004h 0004   4]                       Length : 00000040
[008h 0008   4]           Hardware Signature : 0000ABCD
[00Ch 0012   4]    32 Firmware Waking Vector : 00000000
[010h 0016   4]                  Global Lock : 00000000
[014h 0020   4]        Flags (decoded below) : 00000000
                      S4BIOS Support Present : 0
                  64-bit Wake Supported (V2) : 0
[018h 0024   8]    64 Firmware Waking Vector : 0000000000000000
[020h 0032   1]                      Version : 01
[021h 0033   3]                     Reserved : 000000
[024h 0036   4]    OspmFlags (decoded below) : 00000000
               64-bit Wake Env Required (V2) : 0

Raw Table Data: Length 64 (0x40)

    0000: 46 41 43 53 40 00 00 00 CD AB 00 00 00 00 00 00  // FACS@...........
    0010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0020: 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................


FFFF
----
[000h 0000   4]                    Signature : "FFFF"    
[004h 0004   4]                 Table Length : 00000176
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 14
[00Ah 0010   6]                       Oem ID : "HP    "
[010h 0016   8]                 Oem Table ID : "ProLiant"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "  "
[020h 0032   4]        Asl Compiler Revision : 0000162E


**** Unknown ACPI table signature [FFFF]


Raw Table Data: Length 374 (0x176)

    0000: 46 46 46 46 76 01 00 00 01 14 48 50 20 20 20 20  // FFFFv.....HP    
    0010: 50 72 6F 4C 69 61 6E 74 01 00 00 00 D2 04 00 00  // ProLiant........
    0020: 2E 16 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    00A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    00B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    00C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    00D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    00E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    00F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0170: 00 00 00 00 00 00                                // ......


HEST
----
[000h 0000   4]                    Signature : "HEST"    [Hardware Error Source Table]
[004h 0004   4]                 Table Length : 000000BC
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 1C
[00Ah 0010   6]                       Oem ID : "HP    "
[010h 0016   8]                 Oem Table ID : "ProLiant"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "  "
[020h 0032   4]        Asl Compiler Revision : 0000162E

[024h 0036   4]           Error Source Count : 00000003

[028h 0040   2]                Subtable Type : 0006 [PCI Express Root Port AER]
[02Ah 0042   2]                    Source Id : 0006
[02Ch 0044   2]                     Reserved : 0000
[02Eh 0046   1]        Flags (decoded below) : 02
                              Firmware First : 0
                                      Global : 0
[02Fh 0047   1]                      Enabled : 00
[030h 0048   4]       Records To Preallocate : 00000001
[034h 0052   4]      Max Sections Per Record : 00000001
[038h 0056   4]                          Bus : 00000000
[03Ch 0060   2]                       Device : 0000
[03Eh 0062   2]                     Function : 0000
[040h 0064   2]                DeviceControl : 0856
[042h 0066   2]                     Reserved : 0000
[044h 0068   4]           Uncorrectable Mask : 00100020
[048h 0072   4]       Uncorrectable Severity : 0017F011
[04Ch 0076   4]             Correctable Mask : 000011C1
[050h 0080   4]        Advanced Capabilities : 00000000
[054h 0084   4]           Root Error Command : 00000006

[058h 0088   2]                Subtable Type : 0007 [PCI Express AER (AER Endpoint)]
[05Ah 0090   2]                    Source Id : 0007
[05Ch 0092   2]                     Reserved : 0000
[05Eh 0094   1]        Flags (decoded below) : 02
                              Firmware First : 0
                                      Global : 0
[05Fh 0095   1]                      Enabled : 00
[060h 0096   4]       Records To Preallocate : 00000001
[064h 0100   4]      Max Sections Per Record : 00000001
[068h 0104   4]                          Bus : 00000000
[06Ch 0108   2]                       Device : 0000
[06Eh 0110   2]                     Function : 0000
[070h 0112   2]                DeviceControl : 0856
[072h 0114   2]                     Reserved : 0000
[074h 0116   4]           Uncorrectable Mask : 00100020
[078h 0120   4]       Uncorrectable Severity : 0017F011
[07Ch 0124   4]             Correctable Mask : 000011C1
[080h 0128   4]        Advanced Capabilities : 00000000

[084h 0132   2]                Subtable Type : 0008 [PCI Express/PCI-X Bridge AER]
[086h 0134   2]                    Source Id : 0008
[088h 0136   2]                     Reserved : 0000
[08Ah 0138   1]        Flags (decoded below) : 02
                              Firmware First : 0
                                      Global : 0
[08Bh 0139   1]                      Enabled : 00
[08Ch 0140   4]       Records To Preallocate : 00000001
[090h 0144   4]      Max Sections Per Record : 00000001
[094h 0148   4]                          Bus : 00000000
[098h 0152   2]                       Device : 0000
[09Ah 0154   2]                     Function : 0000
[09Ch 0156   2]                DeviceControl : 0006
[09Eh 0158   2]                     Reserved : 0000
[0A0h 0160   4]           Uncorrectable Mask : 00100020
[0A4h 0164   4]       Uncorrectable Severity : 0017F011
[0A8h 0168   4]             Correctable Mask : 000011C1
[0ACh 0172   4]        Advanced Capabilities : 00000000
[0B0h 0176   4]       2nd Uncorrectable Mask : 00100020
[0B4h 0180   4]   2nd Uncorrectable Severity : 0017F011
[0B8h 0184   4]    2nd Advanced Capabilities : 00000000

Raw Table Data: Length 188 (0xBC)

    0000: 48 45 53 54 BC 00 00 00 01 1C 48 50 20 20 20 20  // HEST......HP    
    0010: 50 72 6F 4C 69 61 6E 74 01 00 00 00 D2 04 00 00  // ProLiant........
    0020: 2E 16 00 00 03 00 00 00 06 00 06 00 00 00 02 00  // ................
    0030: 01 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00  // ................
    0040: 56 08 00 00 20 00 10 00 11 F0 17 00 C1 11 00 00  // V... ...........
    0050: 00 00 00 00 06 00 00 00 07 00 07 00 00 00 02 00  // ................
    0060: 01 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00  // ................
    0070: 56 08 00 00 20 00 10 00 11 F0 17 00 C1 11 00 00  // V... ...........
    0080: 00 00 00 00 08 00 08 00 00 00 02 00 01 00 00 00  // ................
    0090: 01 00 00 00 00 00 00 00 00 00 00 00 06 00 00 00  // ................
    00A0: 20 00 10 00 11 F0 17 00 C1 11 00 00 00 00 00 00  //  ...............
    00B0: 20 00 10 00 11 F0 17 00 00 00 00 00              //  ...........


HPET
----
[000h 0000   4]                    Signature : "HPET"    [High Precision Event Timer table]
[004h 0004   4]                 Table Length : 00000038
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : C2
[00Ah 0010   6]                       Oem ID : "HP    "
[010h 0016   8]                 Oem Table ID : "ProLiant"
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "  "
[020h 0032   4]        Asl Compiler Revision : 0000162E

[024h 0036   4]            Hardware Block ID : 8086A201

[028h 0040  12]         Timer Block Register : [Generic Address Structure]
[028h 0040   1]                     Space ID : 00 [SystemMemory]
[029h 0041   1]                    Bit Width : 00
[02Ah 0042   1]                   Bit Offset : 00
[02Bh 0043   1]         Encoded Access Width : 00 [Undefined/Legacy]
[02Ch 0044   8]                      Address : 00000000FED00000

[034h 0052   1]              Sequence Number : 00
[035h 0053   2]          Minimum Clock Ticks : 0000
[037h 0055   1]        Flags (decoded below) : 00
                             4K Page Protect : 0
                            64K Page Protect : 0

Raw Table Data: Length 56 (0x38)

    0000: 48 50 45 54 38 00 00 00 01 C2 48 50 20 20 20 20  // HPET8.....HP    
    0010: 50 72 6F 4C 69 61 6E 74 02 00 00 00 D2 04 00 00  // ProLiant........
    0020: 2E 16 00 00 01 A2 86 80 00 00 00 00 00 00 D0 FE  // ................
    0030: 00 00 00 00 00 00 00 00                          // ........


MCFG
----
[000h 0000   4]                    Signature : "MCFG"    [Memory Mapped Configuration table]
[004h 0004   4]                 Table Length : 0000003C
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 45
[00Ah 0010   6]                       Oem ID : "HP    "
[010h 0016   8]                 Oem Table ID : "ProLiant"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : ""
[020h 0032   4]        Asl Compiler Revision : 00000000

[024h 0036   8]                     Reserved : 0000000000000000

[02Ch 0044   8]                 Base Address : 00000000E0000000
[034h 0052   2]         Segment Group Number : 0000
[036h 0054   1]             Start Bus Number : 00
[037h 0055   1]               End Bus Number : 3F
[038h 0056   4]                     Reserved : 00000000

Raw Table Data: Length 60 (0x3C)

    0000: 4D 43 46 47 3C 00 00 00 01 45 48 50 20 20 20 20  // MCFG<....EHP    
    0010: 50 72 6F 4C 69 61 6E 74 01 00 00 00 00 00 00 00  // ProLiant........
    0020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 E0  // ................
    0030: 00 00 00 00 00 00 00 3F 00 00 00 00              // .......?....


SPCR
----
[000h 0000   4]                    Signature : "SPCR"    [Serial Port Console Redirection table]
[004h 0004   4]                 Table Length : 00000050
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : C8
[00Ah 0010   6]                       Oem ID : "HP    "
[010h 0016   8]                 Oem Table ID : "SPCRRBSU"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "  "
[020h 0032   4]        Asl Compiler Revision : 0000162E

[024h 0036   1]               Interface Type : 00
[025h 0037   3]                     Reserved : 000000

[028h 0040  12]         Serial Port Register : [Generic Address Structure]
[028h 0040   1]                     Space ID : 00 [SystemMemory]
[029h 0041   1]                    Bit Width : 00
[02Ah 0042   1]                   Bit Offset : 00
[02Bh 0043   1]         Encoded Access Width : 00 [Undefined/Legacy]
[02Ch 0044   8]                      Address : 0000000000000000

[034h 0052   1]               Interrupt Type : 01
[035h 0053   1]          PCAT-compatible IRQ : 04
[036h 0054   4]                    Interrupt : 00000000
[03Ah 0058   1]                    Baud Rate : 03
[03Bh 0059   1]                       Parity : 00
[03Ch 0060   1]                    Stop Bits : 01
[03Dh 0061   1]                 Flow Control : 03
[03Eh 0062   1]                Terminal Type : 00
[04Ch 0076   1]                     Reserved : 00
[040h 0064   2]                PCI Device ID : FFFF
[042h 0066   2]                PCI Vendor ID : FFFF
[044h 0068   1]                      PCI Bus : 00
[045h 0069   1]                   PCI Device : 00
[046h 0070   1]                 PCI Function : 00
[047h 0071   4]                    PCI Flags : 00000000
[04Bh 0075   1]                  PCI Segment : 00
[04Ch 0076   4]                     Reserved : 00000000

Raw Table Data: Length 80 (0x50)

    0000: 53 50 43 52 50 00 00 00 01 C8 48 50 20 20 20 20  // SPCRP.....HP    
    0010: 53 50 43 52 52 42 53 55 01 00 00 00 D2 04 00 00  // SPCRRBSU........
    0020: 2E 16 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0030: 00 00 00 00 01 04 00 00 00 00 03 00 01 03 00 00  // ................
    0040: FF FF FF FF 00 00 00 00 00 00 00 00 00 00 00 00  // ................


SPMI
----
[000h 0000   4]                    Signature : "SPMI"    [Server Platform Management Interface table]
[004h 0004   4]                 Table Length : 00000040
[008h 0008   1]                     Revision : 05
[009h 0009   1]                     Checksum : 62
[00Ah 0010   6]                       Oem ID : "HP    "
[010h 0016   8]                 Oem Table ID : "ProLiant"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "  "
[020h 0032   4]        Asl Compiler Revision : 0000162E

[024h 0036   1]               Interface Type : 01
[025h 0037   1]                     Reserved : 01
[026h 0038   2]            IPMI Spec Version : 0200
[028h 0040   1]               Interrupt Type : 00
[029h 0041   1]                   GPE Number : 00
[02Ah 0042   1]                     Reserved : 00
[02Bh 0043   1]              PCI Device Flag : 00
[02Ch 0044   4]                    Interrupt : 00000000

[030h 0048  12]                IPMI Register : [Generic Address Structure]
[030h 0048   1]                     Space ID : 01 [SystemIO]
[031h 0049   1]                    Bit Width : 10
[032h 0050   1]                   Bit Offset : 00
[033h 0051   1]         Encoded Access Width : 01 [Byte Access:8]
[034h 0052   8]                      Address : 0000000000000CA2

[03Ch 0060   1]                  PCI Segment : 00
[03Dh 0061   1]                      PCI Bus : 00
[03Eh 0062   1]                   PCI Device : 00
[03Fh 0063   1]                 PCI Function : 00
/**** ACPI table terminates in the middle of a data structure! (dump table) */


SRAT
----
[000h 0000   4]                    Signature : "SRAT"    [System Resource Affinity Table]
[004h 0004   4]                 Table Length : 00000570
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : E7
[00Ah 0010   6]                       Oem ID : "HP    "
[010h 0016   8]                 Oem Table ID : "Proliant"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "  "
[020h 0032   4]        Asl Compiler Revision : 0000162E

[024h 0036   4]               Table Revision : 00000001
[028h 0040   8]                     Reserved : 0000000000000000

[030h 0048   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[031h 0049   1]                       Length : 10

[032h 0050   1]      Proximity Domain Low(8) : 00
[033h 0051   1]                      Apic ID : 00
[034h 0052   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[038h 0056   1]              Local Sapic EID : 00
[039h 0057   3]    Proximity Domain High(24) : 000000
[03Ch 0060   4]                 Clock Domain : 00000000

[040h 0064   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[041h 0065   1]                       Length : 10

[042h 0066   1]      Proximity Domain Low(8) : 00
[043h 0067   1]                      Apic ID : 01
[044h 0068   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[048h 0072   1]              Local Sapic EID : 00
[049h 0073   3]    Proximity Domain High(24) : 000000
[04Ch 0076   4]                 Clock Domain : 00000000

[050h 0080   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[051h 0081   1]                       Length : 10

[052h 0082   1]      Proximity Domain Low(8) : 00
[053h 0083   1]                      Apic ID : 02
[054h 0084   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[058h 0088   1]              Local Sapic EID : 00
[059h 0089   3]    Proximity Domain High(24) : 000000
[05Ch 0092   4]                 Clock Domain : 00000000

[060h 0096   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[061h 0097   1]                       Length : 10

[062h 0098   1]      Proximity Domain Low(8) : 00
[063h 0099   1]                      Apic ID : 03
[064h 0100   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[068h 0104   1]              Local Sapic EID : 00
[069h 0105   3]    Proximity Domain High(24) : 000000
[06Ch 0108   4]                 Clock Domain : 00000000

[070h 0112   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[071h 0113   1]                       Length : 10

[072h 0114   1]      Proximity Domain Low(8) : 00
[073h 0115   1]                      Apic ID : 04
[074h 0116   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[078h 0120   1]              Local Sapic EID : 00
[079h 0121   3]    Proximity Domain High(24) : 000000
[07Ch 0124   4]                 Clock Domain : 00000000

[080h 0128   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[081h 0129   1]                       Length : 10

[082h 0130   1]      Proximity Domain Low(8) : 00
[083h 0131   1]                      Apic ID : 05
[084h 0132   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[088h 0136   1]              Local Sapic EID : 00
[089h 0137   3]    Proximity Domain High(24) : 000000
[08Ch 0140   4]                 Clock Domain : 00000000

[090h 0144   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[091h 0145   1]                       Length : 10

[092h 0146   1]      Proximity Domain Low(8) : 00
[093h 0147   1]                      Apic ID : 06
[094h 0148   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[098h 0152   1]              Local Sapic EID : 00
[099h 0153   3]    Proximity Domain High(24) : 000000
[09Ch 0156   4]                 Clock Domain : 00000000

[0A0h 0160   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[0A1h 0161   1]                       Length : 10

[0A2h 0162   1]      Proximity Domain Low(8) : 00
[0A3h 0163   1]                      Apic ID : 07
[0A4h 0164   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[0A8h 0168   1]              Local Sapic EID : 00
[0A9h 0169   3]    Proximity Domain High(24) : 000000
[0ACh 0172   4]                 Clock Domain : 00000000

[0B0h 0176   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[0B1h 0177   1]                       Length : 10

[0B2h 0178   1]      Proximity Domain Low(8) : 00
[0B3h 0179   1]                      Apic ID : 08
[0B4h 0180   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[0B8h 0184   1]              Local Sapic EID : 00
[0B9h 0185   3]    Proximity Domain High(24) : 000000
[0BCh 0188   4]                 Clock Domain : 00000000

[0C0h 0192   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[0C1h 0193   1]                       Length : 10

[0C2h 0194   1]      Proximity Domain Low(8) : 00
[0C3h 0195   1]                      Apic ID : 09
[0C4h 0196   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[0C8h 0200   1]              Local Sapic EID : 00
[0C9h 0201   3]    Proximity Domain High(24) : 000000
[0CCh 0204   4]                 Clock Domain : 00000000

[0D0h 0208   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[0D1h 0209   1]                       Length : 10

[0D2h 0210   1]      Proximity Domain Low(8) : 00
[0D3h 0211   1]                      Apic ID : 0A
[0D4h 0212   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[0D8h 0216   1]              Local Sapic EID : 00
[0D9h 0217   3]    Proximity Domain High(24) : 000000
[0DCh 0220   4]                 Clock Domain : 00000000

[0E0h 0224   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[0E1h 0225   1]                       Length : 10

[0E2h 0226   1]      Proximity Domain Low(8) : 00
[0E3h 0227   1]                      Apic ID : 0B
[0E4h 0228   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[0E8h 0232   1]              Local Sapic EID : 00
[0E9h 0233   3]    Proximity Domain High(24) : 000000
[0ECh 0236   4]                 Clock Domain : 00000000

[0F0h 0240   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[0F1h 0241   1]                       Length : 10

[0F2h 0242   1]      Proximity Domain Low(8) : 00
[0F3h 0243   1]                      Apic ID : 0C
[0F4h 0244   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[0F8h 0248   1]              Local Sapic EID : 00
[0F9h 0249   3]    Proximity Domain High(24) : 000000
[0FCh 0252   4]                 Clock Domain : 00000000

[100h 0256   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[101h 0257   1]                       Length : 10

[102h 0258   1]      Proximity Domain Low(8) : 00
[103h 0259   1]                      Apic ID : 0D
[104h 0260   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[108h 0264   1]              Local Sapic EID : 00
[109h 0265   3]    Proximity Domain High(24) : 000000
[10Ch 0268   4]                 Clock Domain : 00000000

[110h 0272   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[111h 0273   1]                       Length : 10

[112h 0274   1]      Proximity Domain Low(8) : 00
[113h 0275   1]                      Apic ID : 0E
[114h 0276   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[118h 0280   1]              Local Sapic EID : 00
[119h 0281   3]    Proximity Domain High(24) : 000000
[11Ch 0284   4]                 Clock Domain : 00000000

[120h 0288   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[121h 0289   1]                       Length : 10

[122h 0290   1]      Proximity Domain Low(8) : 00
[123h 0291   1]                      Apic ID : 0F
[124h 0292   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[128h 0296   1]              Local Sapic EID : 00
[129h 0297   3]    Proximity Domain High(24) : 000000
[12Ch 0300   4]                 Clock Domain : 00000000

[130h 0304   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[131h 0305   1]                       Length : 10

[132h 0306   1]      Proximity Domain Low(8) : 00
[133h 0307   1]                      Apic ID : 10
[134h 0308   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[138h 0312   1]              Local Sapic EID : 00
[139h 0313   3]    Proximity Domain High(24) : 000000
[13Ch 0316   4]                 Clock Domain : 00000000

[140h 0320   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[141h 0321   1]                       Length : 10

[142h 0322   1]      Proximity Domain Low(8) : 00
[143h 0323   1]                      Apic ID : 11
[144h 0324   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[148h 0328   1]              Local Sapic EID : 00
[149h 0329   3]    Proximity Domain High(24) : 000000
[14Ch 0332   4]                 Clock Domain : 00000000

[150h 0336   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[151h 0337   1]                       Length : 10

[152h 0338   1]      Proximity Domain Low(8) : 00
[153h 0339   1]                      Apic ID : 12
[154h 0340   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[158h 0344   1]              Local Sapic EID : 00
[159h 0345   3]    Proximity Domain High(24) : 000000
[15Ch 0348   4]                 Clock Domain : 00000000

[160h 0352   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[161h 0353   1]                       Length : 10

[162h 0354   1]      Proximity Domain Low(8) : 00
[163h 0355   1]                      Apic ID : 13
[164h 0356   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[168h 0360   1]              Local Sapic EID : 00
[169h 0361   3]    Proximity Domain High(24) : 000000
[16Ch 0364   4]                 Clock Domain : 00000000

[170h 0368   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[171h 0369   1]                       Length : 10

[172h 0370   1]      Proximity Domain Low(8) : 00
[173h 0371   1]                      Apic ID : 14
[174h 0372   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[178h 0376   1]              Local Sapic EID : 00
[179h 0377   3]    Proximity Domain High(24) : 000000
[17Ch 0380   4]                 Clock Domain : 00000000

[180h 0384   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[181h 0385   1]                       Length : 10

[182h 0386   1]      Proximity Domain Low(8) : 00
[183h 0387   1]                      Apic ID : 15
[184h 0388   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[188h 0392   1]              Local Sapic EID : 00
[189h 0393   3]    Proximity Domain High(24) : 000000
[18Ch 0396   4]                 Clock Domain : 00000000

[190h 0400   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[191h 0401   1]                       Length : 10

[192h 0402   1]      Proximity Domain Low(8) : 00
[193h 0403   1]                      Apic ID : 16
[194h 0404   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[198h 0408   1]              Local Sapic EID : 00
[199h 0409   3]    Proximity Domain High(24) : 000000
[19Ch 0412   4]                 Clock Domain : 00000000

[1A0h 0416   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[1A1h 0417   1]                       Length : 10

[1A2h 0418   1]      Proximity Domain Low(8) : 00
[1A3h 0419   1]                      Apic ID : 17
[1A4h 0420   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[1A8h 0424   1]              Local Sapic EID : 00
[1A9h 0425   3]    Proximity Domain High(24) : 000000
[1ACh 0428   4]                 Clock Domain : 00000000

[1B0h 0432   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[1B1h 0433   1]                       Length : 10

[1B2h 0434   1]      Proximity Domain Low(8) : 00
[1B3h 0435   1]                      Apic ID : 18
[1B4h 0436   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[1B8h 0440   1]              Local Sapic EID : 00
[1B9h 0441   3]    Proximity Domain High(24) : 000000
[1BCh 0444   4]                 Clock Domain : 00000000

[1C0h 0448   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[1C1h 0449   1]                       Length : 10

[1C2h 0450   1]      Proximity Domain Low(8) : 00
[1C3h 0451   1]                      Apic ID : 19
[1C4h 0452   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[1C8h 0456   1]              Local Sapic EID : 00
[1C9h 0457   3]    Proximity Domain High(24) : 000000
[1CCh 0460   4]                 Clock Domain : 00000000

[1D0h 0464   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[1D1h 0465   1]                       Length : 10

[1D2h 0466   1]      Proximity Domain Low(8) : 00
[1D3h 0467   1]                      Apic ID : 1A
[1D4h 0468   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[1D8h 0472   1]              Local Sapic EID : 00
[1D9h 0473   3]    Proximity Domain High(24) : 000000
[1DCh 0476   4]                 Clock Domain : 00000000

[1E0h 0480   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[1E1h 0481   1]                       Length : 10

[1E2h 0482   1]      Proximity Domain Low(8) : 00
[1E3h 0483   1]                      Apic ID : 1B
[1E4h 0484   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[1E8h 0488   1]              Local Sapic EID : 00
[1E9h 0489   3]    Proximity Domain High(24) : 000000
[1ECh 0492   4]                 Clock Domain : 00000000

[1F0h 0496   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[1F1h 0497   1]                       Length : 10

[1F2h 0498   1]      Proximity Domain Low(8) : 00
[1F3h 0499   1]                      Apic ID : 1C
[1F4h 0500   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[1F8h 0504   1]              Local Sapic EID : 00
[1F9h 0505   3]    Proximity Domain High(24) : 000000
[1FCh 0508   4]                 Clock Domain : 00000000

[200h 0512   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[201h 0513   1]                       Length : 10

[202h 0514   1]      Proximity Domain Low(8) : 00
[203h 0515   1]                      Apic ID : 1D
[204h 0516   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[208h 0520   1]              Local Sapic EID : 00
[209h 0521   3]    Proximity Domain High(24) : 000000
[20Ch 0524   4]                 Clock Domain : 00000000

[210h 0528   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[211h 0529   1]                       Length : 10

[212h 0530   1]      Proximity Domain Low(8) : 00
[213h 0531   1]                      Apic ID : 1E
[214h 0532   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[218h 0536   1]              Local Sapic EID : 00
[219h 0537   3]    Proximity Domain High(24) : 000000
[21Ch 0540   4]                 Clock Domain : 00000000

[220h 0544   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[221h 0545   1]                       Length : 10

[222h 0546   1]      Proximity Domain Low(8) : 00
[223h 0547   1]                      Apic ID : 1F
[224h 0548   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[228h 0552   1]              Local Sapic EID : 00
[229h 0553   3]    Proximity Domain High(24) : 000000
[22Ch 0556   4]                 Clock Domain : 00000000

[230h 0560   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[231h 0561   1]                       Length : 10

[232h 0562   1]      Proximity Domain Low(8) : 01
[233h 0563   1]                      Apic ID : 20
[234h 0564   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[238h 0568   1]              Local Sapic EID : 00
[239h 0569   3]    Proximity Domain High(24) : 000000
[23Ch 0572   4]                 Clock Domain : 00000000

[240h 0576   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[241h 0577   1]                       Length : 10

[242h 0578   1]      Proximity Domain Low(8) : 01
[243h 0579   1]                      Apic ID : 21
[244h 0580   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[248h 0584   1]              Local Sapic EID : 00
[249h 0585   3]    Proximity Domain High(24) : 000000
[24Ch 0588   4]                 Clock Domain : 00000000

[250h 0592   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[251h 0593   1]                       Length : 10

[252h 0594   1]      Proximity Domain Low(8) : 01
[253h 0595   1]                      Apic ID : 22
[254h 0596   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[258h 0600   1]              Local Sapic EID : 00
[259h 0601   3]    Proximity Domain High(24) : 000000
[25Ch 0604   4]                 Clock Domain : 00000000

[260h 0608   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[261h 0609   1]                       Length : 10

[262h 0610   1]      Proximity Domain Low(8) : 01
[263h 0611   1]                      Apic ID : 23
[264h 0612   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[268h 0616   1]              Local Sapic EID : 00
[269h 0617   3]    Proximity Domain High(24) : 000000
[26Ch 0620   4]                 Clock Domain : 00000000

[270h 0624   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[271h 0625   1]                       Length : 10

[272h 0626   1]      Proximity Domain Low(8) : 00
[273h 0627   1]                      Apic ID : 24
[274h 0628   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[278h 0632   1]              Local Sapic EID : 00
[279h 0633   3]    Proximity Domain High(24) : 000000
[27Ch 0636   4]                 Clock Domain : 00000000

[280h 0640   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[281h 0641   1]                       Length : 10

[282h 0642   1]      Proximity Domain Low(8) : 00
[283h 0643   1]                      Apic ID : 25
[284h 0644   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[288h 0648   1]              Local Sapic EID : 00
[289h 0649   3]    Proximity Domain High(24) : 000000
[28Ch 0652   4]                 Clock Domain : 00000000

[290h 0656   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[291h 0657   1]                       Length : 10

[292h 0658   1]      Proximity Domain Low(8) : 00
[293h 0659   1]                      Apic ID : 26
[294h 0660   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[298h 0664   1]              Local Sapic EID : 00
[299h 0665   3]    Proximity Domain High(24) : 000000
[29Ch 0668   4]                 Clock Domain : 00000000

[2A0h 0672   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[2A1h 0673   1]                       Length : 10

[2A2h 0674   1]      Proximity Domain Low(8) : 00
[2A3h 0675   1]                      Apic ID : 27
[2A4h 0676   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[2A8h 0680   1]              Local Sapic EID : 00
[2A9h 0681   3]    Proximity Domain High(24) : 000000
[2ACh 0684   4]                 Clock Domain : 00000000

[2B0h 0688   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[2B1h 0689   1]                       Length : 10

[2B2h 0690   1]      Proximity Domain Low(8) : 00
[2B3h 0691   1]                      Apic ID : 28
[2B4h 0692   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[2B8h 0696   1]              Local Sapic EID : 00
[2B9h 0697   3]    Proximity Domain High(24) : 000000
[2BCh 0700   4]                 Clock Domain : 00000000

[2C0h 0704   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[2C1h 0705   1]                       Length : 10

[2C2h 0706   1]      Proximity Domain Low(8) : 00
[2C3h 0707   1]                      Apic ID : 29
[2C4h 0708   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[2C8h 0712   1]              Local Sapic EID : 00
[2C9h 0713   3]    Proximity Domain High(24) : 000000
[2CCh 0716   4]                 Clock Domain : 00000000

[2D0h 0720   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[2D1h 0721   1]                       Length : 10

[2D2h 0722   1]      Proximity Domain Low(8) : 00
[2D3h 0723   1]                      Apic ID : 2A
[2D4h 0724   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[2D8h 0728   1]              Local Sapic EID : 00
[2D9h 0729   3]    Proximity Domain High(24) : 000000
[2DCh 0732   4]                 Clock Domain : 00000000

[2E0h 0736   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[2E1h 0737   1]                       Length : 10

[2E2h 0738   1]      Proximity Domain Low(8) : 00
[2E3h 0739   1]                      Apic ID : 2B
[2E4h 0740   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[2E8h 0744   1]              Local Sapic EID : 00
[2E9h 0745   3]    Proximity Domain High(24) : 000000
[2ECh 0748   4]                 Clock Domain : 00000000

[2F0h 0752   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[2F1h 0753   1]                       Length : 10

[2F2h 0754   1]      Proximity Domain Low(8) : 00
[2F3h 0755   1]                      Apic ID : 2C
[2F4h 0756   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[2F8h 0760   1]              Local Sapic EID : 00
[2F9h 0761   3]    Proximity Domain High(24) : 000000
[2FCh 0764   4]                 Clock Domain : 00000000

[300h 0768   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[301h 0769   1]                       Length : 10

[302h 0770   1]      Proximity Domain Low(8) : 00
[303h 0771   1]                      Apic ID : 2D
[304h 0772   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[308h 0776   1]              Local Sapic EID : 00
[309h 0777   3]    Proximity Domain High(24) : 000000
[30Ch 0780   4]                 Clock Domain : 00000000

[310h 0784   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[311h 0785   1]                       Length : 10

[312h 0786   1]      Proximity Domain Low(8) : 00
[313h 0787   1]                      Apic ID : 2E
[314h 0788   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[318h 0792   1]              Local Sapic EID : 00
[319h 0793   3]    Proximity Domain High(24) : 000000
[31Ch 0796   4]                 Clock Domain : 00000000

[320h 0800   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[321h 0801   1]                       Length : 10

[322h 0802   1]      Proximity Domain Low(8) : 00
[323h 0803   1]                      Apic ID : 2F
[324h 0804   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[328h 0808   1]              Local Sapic EID : 00
[329h 0809   3]    Proximity Domain High(24) : 000000
[32Ch 0812   4]                 Clock Domain : 00000000

[330h 0816   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[331h 0817   1]                       Length : 10

[332h 0818   1]      Proximity Domain Low(8) : 00
[333h 0819   1]                      Apic ID : 30
[334h 0820   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[338h 0824   1]              Local Sapic EID : 00
[339h 0825   3]    Proximity Domain High(24) : 000000
[33Ch 0828   4]                 Clock Domain : 00000000

[340h 0832   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[341h 0833   1]                       Length : 10

[342h 0834   1]      Proximity Domain Low(8) : 00
[343h 0835   1]                      Apic ID : 31
[344h 0836   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[348h 0840   1]              Local Sapic EID : 00
[349h 0841   3]    Proximity Domain High(24) : 000000
[34Ch 0844   4]                 Clock Domain : 00000000

[350h 0848   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[351h 0849   1]                       Length : 10

[352h 0850   1]      Proximity Domain Low(8) : 01
[353h 0851   1]                      Apic ID : 32
[354h 0852   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[358h 0856   1]              Local Sapic EID : 00
[359h 0857   3]    Proximity Domain High(24) : 000000
[35Ch 0860   4]                 Clock Domain : 00000000

[360h 0864   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[361h 0865   1]                       Length : 10

[362h 0866   1]      Proximity Domain Low(8) : 01
[363h 0867   1]                      Apic ID : 33
[364h 0868   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[368h 0872   1]              Local Sapic EID : 00
[369h 0873   3]    Proximity Domain High(24) : 000000
[36Ch 0876   4]                 Clock Domain : 00000000

[370h 0880   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[371h 0881   1]                       Length : 10

[372h 0882   1]      Proximity Domain Low(8) : 01
[373h 0883   1]                      Apic ID : 34
[374h 0884   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[378h 0888   1]              Local Sapic EID : 00
[379h 0889   3]    Proximity Domain High(24) : 000000
[37Ch 0892   4]                 Clock Domain : 00000000

[380h 0896   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[381h 0897   1]                       Length : 10

[382h 0898   1]      Proximity Domain Low(8) : 01
[383h 0899   1]                      Apic ID : 35
[384h 0900   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
[388h 0904   1]              Local Sapic EID : 00
[389h 0905   3]    Proximity Domain High(24) : 000000
[38Ch 0908   4]                 Clock Domain : 00000000

[390h 0912   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[391h 0913   1]                       Length : 10

[392h 0914   1]      Proximity Domain Low(8) : 00
[393h 0915   1]                      Apic ID : 36
[394h 0916   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[398h 0920   1]              Local Sapic EID : 00
[399h 0921   3]    Proximity Domain High(24) : 000000
[39Ch 0924   4]                 Clock Domain : 00000000

[3A0h 0928   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[3A1h 0929   1]                       Length : 10

[3A2h 0930   1]      Proximity Domain Low(8) : 00
[3A3h 0931   1]                      Apic ID : 37
[3A4h 0932   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[3A8h 0936   1]              Local Sapic EID : 00
[3A9h 0937   3]    Proximity Domain High(24) : 000000
[3ACh 0940   4]                 Clock Domain : 00000000

[3B0h 0944   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[3B1h 0945   1]                       Length : 10

[3B2h 0946   1]      Proximity Domain Low(8) : 00
[3B3h 0947   1]                      Apic ID : 38
[3B4h 0948   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[3B8h 0952   1]              Local Sapic EID : 00
[3B9h 0953   3]    Proximity Domain High(24) : 000000
[3BCh 0956   4]                 Clock Domain : 00000000

[3C0h 0960   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[3C1h 0961   1]                       Length : 10

[3C2h 0962   1]      Proximity Domain Low(8) : 00
[3C3h 0963   1]                      Apic ID : 39
[3C4h 0964   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[3C8h 0968   1]              Local Sapic EID : 00
[3C9h 0969   3]    Proximity Domain High(24) : 000000
[3CCh 0972   4]                 Clock Domain : 00000000

[3D0h 0976   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[3D1h 0977   1]                       Length : 10

[3D2h 0978   1]      Proximity Domain Low(8) : 00
[3D3h 0979   1]                      Apic ID : 3A
[3D4h 0980   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[3D8h 0984   1]              Local Sapic EID : 00
[3D9h 0985   3]    Proximity Domain High(24) : 000000
[3DCh 0988   4]                 Clock Domain : 00000000

[3E0h 0992   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[3E1h 0993   1]                       Length : 10

[3E2h 0994   1]      Proximity Domain Low(8) : 00
[3E3h 0995   1]                      Apic ID : 3B
[3E4h 0996   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[3E8h 1000   1]              Local Sapic EID : 00
[3E9h 1001   3]    Proximity Domain High(24) : 000000
[3ECh 1004   4]                 Clock Domain : 00000000

[3F0h 1008   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[3F1h 1009   1]                       Length : 10

[3F2h 1010   1]      Proximity Domain Low(8) : 00
[3F3h 1011   1]                      Apic ID : 3C
[3F4h 1012   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[3F8h 1016   1]              Local Sapic EID : 00
[3F9h 1017   3]    Proximity Domain High(24) : 000000
[3FCh 1020   4]                 Clock Domain : 00000000

[400h 1024   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[401h 1025   1]                       Length : 10

[402h 1026   1]      Proximity Domain Low(8) : 00
[403h 1027   1]                      Apic ID : 3D
[404h 1028   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[408h 1032   1]              Local Sapic EID : 00
[409h 1033   3]    Proximity Domain High(24) : 000000
[40Ch 1036   4]                 Clock Domain : 00000000

[410h 1040   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[411h 1041   1]                       Length : 10

[412h 1042   1]      Proximity Domain Low(8) : 00
[413h 1043   1]                      Apic ID : 3E
[414h 1044   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[418h 1048   1]              Local Sapic EID : 00
[419h 1049   3]    Proximity Domain High(24) : 000000
[41Ch 1052   4]                 Clock Domain : 00000000

[420h 1056   1]                Subtable Type : 00 [Processor Local APIC/SAPIC Affinity]
[421h 1057   1]                       Length : 10

[422h 1058   1]      Proximity Domain Low(8) : 00
[423h 1059   1]                      Apic ID : 3F
[424h 1060   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
[428h 1064   1]              Local Sapic EID : 00
[429h 1065   3]    Proximity Domain High(24) : 000000
[42Ch 1068   4]                 Clock Domain : 00000000

[430h 1072   1]                Subtable Type : 01 [Memory Affinity]
[431h 1073   1]                       Length : 28

[432h 1074   4]             Proximity Domain : 00000000
[436h 1078   2]                    Reserved1 : 0000
[438h 1080   8]                 Base Address : 0000000000000000
[440h 1088   8]               Address Length : 00000000E0000000
[448h 1096   4]                    Reserved2 : 00000000
[44Ch 1100   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
                               Hot Pluggable : 0
                                Non-Volatile : 0
[450h 1104   8]                    Reserved3 : 0000000000000000

[458h 1112   1]                Subtable Type : 01 [Memory Affinity]
[459h 1113   1]                       Length : 28

[45Ah 1114   4]             Proximity Domain : 00000000
[45Eh 1118   2]                    Reserved1 : 0000
[460h 1120   8]                 Base Address : 00000000E0000000
[468h 1128   8]               Address Length : 0000000020000000
[470h 1136   4]                    Reserved2 : 00000000
[474h 1140   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
                               Hot Pluggable : 0
                                Non-Volatile : 0
[478h 1144   8]                    Reserved3 : 0000000000000000

[480h 1152   1]                Subtable Type : 01 [Memory Affinity]
[481h 1153   1]                       Length : 28

[482h 1154   4]             Proximity Domain : 00000000
[486h 1158   2]                    Reserved1 : 0000
[488h 1160   8]                 Base Address : 0000000100000000
[490h 1168   8]               Address Length : 0000001720000000
[498h 1176   4]                    Reserved2 : 00000000
[49Ch 1180   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
                               Hot Pluggable : 0
                                Non-Volatile : 0
[4A0h 1184   8]                    Reserved3 : 0000000000000000

[4A8h 1192   1]                Subtable Type : 01 [Memory Affinity]
[4A9h 1193   1]                       Length : 28

[4AAh 1194   4]             Proximity Domain : 00000001
[4AEh 1198   2]                    Reserved1 : 0000
[4B0h 1200   8]                 Base Address : 0000001820000000
[4B8h 1208   8]               Address Length : 0000001800000000
[4C0h 1216   4]                    Reserved2 : 00000000
[4C4h 1220   4]        Flags (decoded below) : 00000001
                                     Enabled : 1
                               Hot Pluggable : 0
                                Non-Volatile : 0
[4C8h 1224   8]                    Reserved3 : 0000000000000000

[4D0h 1232   1]                Subtable Type : 01 [Memory Affinity]
[4D1h 1233   1]                       Length : 28

[4D2h 1234   4]             Proximity Domain : 00000000
[4D6h 1238   2]                    Reserved1 : 0000
[4D8h 1240   8]                 Base Address : 0000003020000000
[4E0h 1248   8]               Address Length : 0000000000000000
[4E8h 1256   4]                    Reserved2 : 00000000
[4ECh 1260   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
                               Hot Pluggable : 0
                                Non-Volatile : 0
[4F0h 1264   8]                    Reserved3 : 0000000000000000

[4F8h 1272   1]                Subtable Type : 01 [Memory Affinity]
[4F9h 1273   1]                       Length : 28

[4FAh 1274   4]             Proximity Domain : 00000000
[4FEh 1278   2]                    Reserved1 : 0000
[500h 1280   8]                 Base Address : 0000003020000000
[508h 1288   8]               Address Length : 0000000000000000
[510h 1296   4]                    Reserved2 : 00000000
[514h 1300   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
                               Hot Pluggable : 0
                                Non-Volatile : 0
[518h 1304   8]                    Reserved3 : 0000000000000000

[520h 1312   1]                Subtable Type : 01 [Memory Affinity]
[521h 1313   1]                       Length : 28

[522h 1314   4]             Proximity Domain : 00000000
[526h 1318   2]                    Reserved1 : 0000
[528h 1320   8]                 Base Address : 0000003020000000
[530h 1328   8]               Address Length : 0000000000000000
[538h 1336   4]                    Reserved2 : 00000000
[53Ch 1340   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
                               Hot Pluggable : 0
                                Non-Volatile : 0
[540h 1344   8]                    Reserved3 : 0000000000000000

[548h 1352   1]                Subtable Type : 01 [Memory Affinity]
[549h 1353   1]                       Length : 28

[54Ah 1354   4]             Proximity Domain : 00000000
[54Eh 1358   2]                    Reserved1 : 0000
[550h 1360   8]                 Base Address : 0000003020000000
[558h 1368   8]               Address Length : 0000000000000000
[560h 1376   4]                    Reserved2 : 00000000
[564h 1380   4]        Flags (decoded below) : 00000000
                                     Enabled : 0
                               Hot Pluggable : 0
                                Non-Volatile : 0
[568h 1384   8]                    Reserved3 : 0000000000000000

Raw Table Data: Length 1392 (0x570)

    0000: 53 52 41 54 70 05 00 00 01 E7 48 50 20 20 20 20  // SRATp.....HP    
    0010: 50 72 6F 6C 69 61 6E 74 01 00 00 00 D2 04 00 00  // Proliant........
    0020: 2E 16 00 00 01 00 00 00 00 00 00 00 00 00 00 00  // ................
    0030: 00 10 00 00 01 00 00 00 00 00 00 00 00 00 00 00  // ................
    0040: 00 10 00 01 01 00 00 00 00 00 00 00 00 00 00 00  // ................
    0050: 00 10 00 02 01 00 00 00 00 00 00 00 00 00 00 00  // ................
    0060: 00 10 00 03 01 00 00 00 00 00 00 00 00 00 00 00  // ................
    0070: 00 10 00 04 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0080: 00 10 00 05 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0090: 00 10 00 06 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    00A0: 00 10 00 07 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    00B0: 00 10 00 08 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    00C0: 00 10 00 09 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    00D0: 00 10 00 0A 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    00E0: 00 10 00 0B 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    00F0: 00 10 00 0C 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0100: 00 10 00 0D 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0110: 00 10 00 0E 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0120: 00 10 00 0F 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0130: 00 10 00 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0140: 00 10 00 11 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0150: 00 10 00 12 01 00 00 00 00 00 00 00 00 00 00 00  // ................
    0160: 00 10 00 13 01 00 00 00 00 00 00 00 00 00 00 00  // ................
    0170: 00 10 00 14 01 00 00 00 00 00 00 00 00 00 00 00  // ................
    0180: 00 10 00 15 01 00 00 00 00 00 00 00 00 00 00 00  // ................
    0190: 00 10 00 16 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    01A0: 00 10 00 17 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    01B0: 00 10 00 18 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    01C0: 00 10 00 19 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    01D0: 00 10 00 1A 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    01E0: 00 10 00 1B 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    01F0: 00 10 00 1C 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0200: 00 10 00 1D 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0210: 00 10 00 1E 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0220: 00 10 00 1F 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0230: 00 10 01 20 01 00 00 00 00 00 00 00 00 00 00 00  // ... ............
    0240: 00 10 01 21 01 00 00 00 00 00 00 00 00 00 00 00  // ...!............
    0250: 00 10 01 22 01 00 00 00 00 00 00 00 00 00 00 00  // ..."............
    0260: 00 10 01 23 01 00 00 00 00 00 00 00 00 00 00 00  // ...#............
    0270: 00 10 00 24 00 00 00 00 00 00 00 00 00 00 00 00  // ...$............
    0280: 00 10 00 25 00 00 00 00 00 00 00 00 00 00 00 00  // ...%............
    0290: 00 10 00 26 00 00 00 00 00 00 00 00 00 00 00 00  // ...&............
    02A0: 00 10 00 27 00 00 00 00 00 00 00 00 00 00 00 00  // ...'............
    02B0: 00 10 00 28 00 00 00 00 00 00 00 00 00 00 00 00  // ...(............
    02C0: 00 10 00 29 00 00 00 00 00 00 00 00 00 00 00 00  // ...)............
    02D0: 00 10 00 2A 00 00 00 00 00 00 00 00 00 00 00 00  // ...*............
    02E0: 00 10 00 2B 00 00 00 00 00 00 00 00 00 00 00 00  // ...+............
    02F0: 00 10 00 2C 00 00 00 00 00 00 00 00 00 00 00 00  // ...,............
    0300: 00 10 00 2D 00 00 00 00 00 00 00 00 00 00 00 00  // ...-............
    0310: 00 10 00 2E 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0320: 00 10 00 2F 00 00 00 00 00 00 00 00 00 00 00 00  // .../............
    0330: 00 10 00 30 00 00 00 00 00 00 00 00 00 00 00 00  // ...0............
    0340: 00 10 00 31 00 00 00 00 00 00 00 00 00 00 00 00  // ...1............
    0350: 00 10 01 32 01 00 00 00 00 00 00 00 00 00 00 00  // ...2............
    0360: 00 10 01 33 01 00 00 00 00 00 00 00 00 00 00 00  // ...3............
    0370: 00 10 01 34 01 00 00 00 00 00 00 00 00 00 00 00  // ...4............
    0380: 00 10 01 35 01 00 00 00 00 00 00 00 00 00 00 00  // ...5............
    0390: 00 10 00 36 00 00 00 00 00 00 00 00 00 00 00 00  // ...6............
    03A0: 00 10 00 37 00 00 00 00 00 00 00 00 00 00 00 00  // ...7............
    03B0: 00 10 00 38 00 00 00 00 00 00 00 00 00 00 00 00  // ...8............
    03C0: 00 10 00 39 00 00 00 00 00 00 00 00 00 00 00 00  // ...9............
    03D0: 00 10 00 3A 00 00 00 00 00 00 00 00 00 00 00 00  // ...:............
    03E0: 00 10 00 3B 00 00 00 00 00 00 00 00 00 00 00 00  // ...;............
    03F0: 00 10 00 3C 00 00 00 00 00 00 00 00 00 00 00 00  // ...<............
    0400: 00 10 00 3D 00 00 00 00 00 00 00 00 00 00 00 00  // ...=............
    0410: 00 10 00 3E 00 00 00 00 00 00 00 00 00 00 00 00  // ...>............
    0420: 00 10 00 3F 00 00 00 00 00 00 00 00 00 00 00 00  // ...?............
    0430: 01 28 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // .(..............
    0440: 00 00 00 E0 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0450: 00 00 00 00 00 00 00 00 01 28 00 00 00 00 00 00  // .........(......
    0460: 00 00 00 E0 00 00 00 00 00 00 00 20 00 00 00 00  // ........... ....
    0470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0480: 01 28 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // .(..............
    0490: 00 00 00 20 17 00 00 00 00 00 00 00 01 00 00 00  // ... ............
    04A0: 00 00 00 00 00 00 00 00 01 28 01 00 00 00 00 00  // .........(......
    04B0: 00 00 00 20 18 00 00 00 00 00 00 00 18 00 00 00  // ... ............
    04C0: 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00  // ................
    04D0: 01 28 00 00 00 00 00 00 00 00 00 20 30 00 00 00  // .(......... 0...
    04E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    04F0: 00 00 00 00 00 00 00 00 01 28 00 00 00 00 00 00  // .........(......
    0500: 00 00 00 20 30 00 00 00 00 00 00 00 00 00 00 00  // ... 0...........
    0510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0520: 01 28 00 00 00 00 00 00 00 00 00 20 30 00 00 00  // .(......... 0...
    0530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0540: 00 00 00 00 00 00 00 00 01 28 00 00 00 00 00 00  // .........(......
    0550: 00 00 00 20 30 00 00 00 00 00 00 00 00 00 00 00  // ... 0...........
    0560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................


SSDT1
-----
DefinitionBlock ("", "SSDT", 1, "HP", "pmab", 0x00000001)
{
    Scope (\_SB)
    {
        Device (PMI0)
        {
            Name (_HID, "ACPI000D" /* Power Meter Device */)  // _HID: Hardware ID
            OperationRegion (POWR, IPMI, 0x2C02, 0x0100)
            Field (POWR, BufferAcc, Lock, Preserve)
            {
                AccessAs (BufferAcc, 0x01), 
                GPOW,   8, 
                GCAP,   8
            }

            Name (PVAL, Zero)
            Name (PAVG, 0x000493E0)
            Name (HLIM, Zero)
            Method (_PMC, 0, NotSerialized)  // _PMC: Power Meter Capabilities
            {
                Name (RET0, Package (0x0E) {})
                RET0 [Zero] = 0x05
                RET0 [One] = Zero
                RET0 [0x02] = Zero
                RET0 [0x03] = 0x00015F90
                RET0 [0x04] = 0x01F4
                RET0 [0x05] = 0x000493E0
                RET0 [0x06] = 0x000493E0
                RET0 [0x07] = Ones
                RET0 [0x08] = Zero
                RET0 [0x09] = Ones
                RET0 [0x0A] = Ones
                Name (MDL, "_Model")
                Name (SER, "_Serial")
                Name (OEM, "HP")
                RET0 [0x0B] = MDL /* \_SB_.PMI0._PMC.MDL_ */
                RET0 [0x0C] = SER /* \_SB_.PMI0._PMC.SER_ */
                RET0 [0x0D] = OEM /* \_SB_.PMI0._PMC.OEM_ */
                Return (RET0) /* \_SB_.PMI0._PMC.RET0 */
            }

            Method (_PMD, 0, NotSerialized)  // _PMD: Power Metered Devices
            {
                Name (RET0, Package (0x01)
                {
                    \_SB
                })
                Return (RET0) /* \_SB_.PMI0._PMD.RET0 */
            }

            Method (_PMM, 0, NotSerialized)  // _PMM: Power Meter Measurement
            {
                Name (BUFF, Buffer (0x20) {})
                CreateByteField (BUFF, Zero, STAT)
                CreateByteField (BUFF, One, LENG)
                LENG = 0x04
                CreateByteField (BUFF, 0x02, EXTI)
                EXTI = 0xDC
                CreateByteField (BUFF, 0x03, MODE)
                MODE = One
                CreateWordField (BUFF, 0x04, UNUS)
                CreateByteField (BUFF, 0x02, CMPC)
                CreateByteField (BUFF, 0x03, EXTO)
                CreateWordField (BUFF, 0x04, CURP)
                CreateWordField (BUFF, 0x06, MINP)
                CreateWordField (BUFF, 0x08, MAXP)
                CreateWordField (BUFF, 0x0A, APOW)
                BUFF = ^GPOW = BUFF /* \_SB_.PMI0._PMM.BUFF */
                If (((STAT == Zero) && (CMPC == Zero)))
                {
                    ^PVAL = (APOW * 0x03E8)
                    Return (^PVAL) /* \_SB_.PMI0.PVAL */
                }

                Return (Ones)
            }

            Method (_GAI, 0, NotSerialized)  // _GAI: Get Averaging Interval
            {
                Return (^PAVG) /* \_SB_.PMI0.PAVG */
            }

            Method (_PAI, 1, NotSerialized)  // _PAI: Power Averaging Interval
            {
                If (((Arg0 >= 0x000493E0) && (Arg0 <= 0x000493E0)))
                {
                    CopyObject (Arg0, ^PAVG) /* \_SB_.PMI0.PAVG */
                    Return (Zero)
                }
                Else
                {
                    Return (One)
                }
            }

            Method (_GHL, 0, NotSerialized)  // _GHL: Get Hardware Limit
            {
                Name (BUFF, Buffer (0x20) {})
                CreateByteField (BUFF, Zero, STAT)
                CreateByteField (BUFF, One, LENG)
                LENG = 0x03
                CreateByteField (BUFF, 0x02, EXTI)
                EXTI = 0xDC
                CreateWordField (BUFF, 0x04, UNU1)
                CreateByteField (BUFF, 0x02, CMPC)
                CreateByteField (BUFF, 0x03, EXTO)
                CreateWordField (BUFF, 0x04, UNU2)
                CreateByteField (BUFF, 0x05, UNU3)
                CreateWordField (BUFF, 0x07, HCAP)
                BUFF = ^GCAP = BUFF /* \_SB_.PMI0._GHL.BUFF */
                If (((STAT == Zero) && (CMPC == Zero)))
                {
                    ^HLIM = (HCAP * 0x03E8)
                    Return (^HLIM) /* \_SB_.PMI0.HLIM */
                }

                Return (Ones)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Local0 = \_OS
                Mid (Local0, Zero, 0x09, Local1)
                If ((Local1 == "Microsoft"))
                {
                    If (CondRefOf (_OSI, Local2))
                    {
                        If (\_OSI ("Windows 2009"))
                        {
                            Return (0x0F)
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }
                Else
                {
                    Return (0x0F)
                }
            }
        }
    }
}



SSDT2
-----
DefinitionBlock ("", "SSDT", 3, "HP", "riser1a", 0x00000002)
{
    External (_SB_.PCI0.PT03, DeviceObj)
    External (_SB_.PCI0.PT04, DeviceObj)
    External (_SB_.PCI0.PT05, DeviceObj)
    External (_SB_.PCI0.PT06, DeviceObj)
    External (_SB_.PCI0.PT09, DeviceObj)
    External (_SB_.PCI0.PT0A, DeviceObj)

    Scope (\_SB.PCI0.PT09)
    {
        Device (PES1)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_SUN, One)  // _SUN: Slot User Number
        }

        Device (PE11)
        {
            Name (_ADR, One)  // _ADR: Address
            Name (_SUN, One)  // _SUN: Slot User Number
        }

        Device (PE12)
        {
            Name (_ADR, 0x02)  // _ADR: Address
            Name (_SUN, One)  // _SUN: Slot User Number
        }

        Device (PE13)
        {
            Name (_ADR, One)  // _ADR: Address
            Name (_SUN, One)  // _SUN: Slot User Number
        }

        Device (PE14)
        {
            Name (_ADR, 0x04)  // _ADR: Address
            Name (_SUN, One)  // _SUN: Slot User Number
        }

        Device (PE15)
        {
            Name (_ADR, 0x05)  // _ADR: Address
            Name (_SUN, One)  // _SUN: Slot User Number
        }

        Device (PE16)
        {
            Name (_ADR, 0x06)  // _ADR: Address
            Name (_SUN, One)  // _SUN: Slot User Number
        }

        Device (PE17)
        {
            Name (_ADR, 0x07)  // _ADR: Address
            Name (_SUN, One)  // _SUN: Slot User Number
        }
    }

    Scope (\_SB.PCI0.PT0A)
    {
    }

    Scope (\_SB.PCI0.PT03)
    {
        Device (PES2)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_SUN, 0x02)  // _SUN: Slot User Number
        }

        Device (PE21)
        {
            Name (_ADR, One)  // _ADR: Address
            Name (_SUN, 0x02)  // _SUN: Slot User Number
        }

        Device (PE22)
        {
            Name (_ADR, 0x02)  // _ADR: Address
            Name (_SUN, 0x02)  // _SUN: Slot User Number
        }

        Device (PE23)
        {
            Name (_ADR, 0x03)  // _ADR: Address
            Name (_SUN, 0x02)  // _SUN: Slot User Number
        }

        Device (PE24)
        {
            Name (_ADR, 0x04)  // _ADR: Address
            Name (_SUN, 0x02)  // _SUN: Slot User Number
        }

        Device (PE25)
        {
            Name (_ADR, 0x05)  // _ADR: Address
            Name (_SUN, 0x02)  // _SUN: Slot User Number
        }

        Device (PE26)
        {
            Name (_ADR, 0x06)  // _ADR: Address
            Name (_SUN, 0x02)  // _SUN: Slot User Number
        }

        Device (PE27)
        {
            Name (_ADR, 0x07)  // _ADR: Address
            Name (_SUN, 0x02)  // _SUN: Slot User Number
        }
    }

    Scope (\_SB.PCI0.PT04)
    {
    }

    Scope (\_SB.PCI0.PT05)
    {
    }

    Scope (\_SB.PCI0.PT06)
    {
    }
}



SSDT3
-----
DefinitionBlock ("", "SSDT", 1, "INTEL", "PPM RCM ", 0x00000001)
{
    External (_PR_.CPU0, DeviceObj)
    External (_PR_.CPU1, DeviceObj)
    External (_PR_.CPU2, DeviceObj)
    External (_PR_.CPU3, DeviceObj)
    External (_PR_.CPUA, DeviceObj)
    External (_PR_.CPUB, DeviceObj)
    External (_PR_.CPUC, DeviceObj)
    External (_PR_.CPUD, DeviceObj)
    External (_PR_.CPUG, DeviceObj)
    External (_PR_.CPUH, DeviceObj)
    External (_PR_.CPUI, DeviceObj)
    External (_PR_.CPUJ, DeviceObj)
    External (_PR_.CPUQ, DeviceObj)
    External (_PR_.CPUR, DeviceObj)
    External (_PR_.CPUS, DeviceObj)
    External (_PR_.CPUT, DeviceObj)

    Scope (\_PR.CPU0)
    {
        Name (TYPE, 0x00000000)
        Name (PSEN, 0x00000000)
        Name (CSEN, 0x00000001)
        Name (MWOS, 0x00000001)
        Name (TSEN, 0x00000000)
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x08, CAPA)
            TYPE = CAPA /* \_PR_.CPU0._PDC.CAPA */
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */, REVS, SIZE, Local2)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_PR_.CPU0._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */)
            CreateDWordField (Arg0, 0x00, EID0)
            CreateDWordField (Arg0, 0x04, EID1)
            CreateDWordField (Arg0, 0x08, EID2)
            CreateDWordField (Arg0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_PR_.CPU0._OSC.CAP0 */
            Return (Arg3)
        }

        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            If (CSEN)
            {
                If ((MWOS && (TYPE & 0x0200)))
                {
                    Return (Package (0x04)
                    {
                        0x03, 
                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000000, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x01, 
                            0x0001, 
                            0x000003E8
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000010, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0040, 
                            0x000001F4
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000020, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0060, 
                            0x0000015E
                        }
                    })
                }

                Return (Package (0x04)
                {
                    0x03, 
                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (FFixedHW, 
                                0x00,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000000, // Address
                                ,)
                        }, 

                        0x01, 
                        0x0001, 
                        0x000003E8
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000914, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0040, 
                        0x000001F4
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000915, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0060, 
                        0x0000015E
                    }
                })
            }

            Return (Zero)
        }
    }

    Scope (\_PR.CPUG)
    {
        Name (TYPE, 0x00000000)
        Name (PSEN, 0x00000000)
        Name (CSEN, 0x00000001)
        Name (MWOS, 0x00000001)
        Name (TSEN, 0x00000000)
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x08, CAPA)
            TYPE = CAPA /* \_PR_.CPUG._PDC.CAPA */
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */, REVS, SIZE, Local2)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_PR_.CPUG._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */)
            CreateDWordField (Arg0, 0x00, EID0)
            CreateDWordField (Arg0, 0x04, EID1)
            CreateDWordField (Arg0, 0x08, EID2)
            CreateDWordField (Arg0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_PR_.CPUG._OSC.CAP0 */
            Return (Arg3)
        }

        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            If (CSEN)
            {
                If ((MWOS && (TYPE & 0x0200)))
                {
                    Return (Package (0x04)
                    {
                        0x03, 
                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000000, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x01, 
                            0x0001, 
                            0x000003E8
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000010, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0040, 
                            0x000001F4
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000020, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0060, 
                            0x0000015E
                        }
                    })
                }

                Return (Package (0x04)
                {
                    0x03, 
                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (FFixedHW, 
                                0x00,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000000, // Address
                                ,)
                        }, 

                        0x01, 
                        0x0001, 
                        0x000003E8
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000914, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0040, 
                        0x000001F4
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000915, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0060, 
                        0x0000015E
                    }
                })
            }

            Return (Zero)
        }
    }

    Scope (\_PR.CPUC)
    {
        Name (TYPE, 0x00000000)
        Name (PSEN, 0x00000000)
        Name (CSEN, 0x00000001)
        Name (MWOS, 0x00000001)
        Name (TSEN, 0x00000000)
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x08, CAPA)
            TYPE = CAPA /* \_PR_.CPUC._PDC.CAPA */
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */, REVS, SIZE, Local2)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_PR_.CPUC._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */)
            CreateDWordField (Arg0, 0x00, EID0)
            CreateDWordField (Arg0, 0x04, EID1)
            CreateDWordField (Arg0, 0x08, EID2)
            CreateDWordField (Arg0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_PR_.CPUC._OSC.CAP0 */
            Return (Arg3)
        }

        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            If (CSEN)
            {
                If ((MWOS && (TYPE & 0x0200)))
                {
                    Return (Package (0x04)
                    {
                        0x03, 
                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000000, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x01, 
                            0x0001, 
                            0x000003E8
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000010, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0040, 
                            0x000001F4
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000020, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0060, 
                            0x0000015E
                        }
                    })
                }

                Return (Package (0x04)
                {
                    0x03, 
                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (FFixedHW, 
                                0x00,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000000, // Address
                                ,)
                        }, 

                        0x01, 
                        0x0001, 
                        0x000003E8
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000914, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0040, 
                        0x000001F4
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000915, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0060, 
                        0x0000015E
                    }
                })
            }

            Return (Zero)
        }
    }

    Scope (\_PR.CPUS)
    {
        Name (TYPE, 0x00000000)
        Name (PSEN, 0x00000000)
        Name (CSEN, 0x00000001)
        Name (MWOS, 0x00000001)
        Name (TSEN, 0x00000000)
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x08, CAPA)
            TYPE = CAPA /* \_PR_.CPUS._PDC.CAPA */
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */, REVS, SIZE, Local2)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_PR_.CPUS._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */)
            CreateDWordField (Arg0, 0x00, EID0)
            CreateDWordField (Arg0, 0x04, EID1)
            CreateDWordField (Arg0, 0x08, EID2)
            CreateDWordField (Arg0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_PR_.CPUS._OSC.CAP0 */
            Return (Arg3)
        }

        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            If (CSEN)
            {
                If ((MWOS && (TYPE & 0x0200)))
                {
                    Return (Package (0x04)
                    {
                        0x03, 
                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000000, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x01, 
                            0x0001, 
                            0x000003E8
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000010, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0040, 
                            0x000001F4
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000020, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0060, 
                            0x0000015E
                        }
                    })
                }

                Return (Package (0x04)
                {
                    0x03, 
                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (FFixedHW, 
                                0x00,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000000, // Address
                                ,)
                        }, 

                        0x01, 
                        0x0001, 
                        0x000003E8
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000914, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0040, 
                        0x000001F4
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000915, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0060, 
                        0x0000015E
                    }
                })
            }

            Return (Zero)
        }
    }

    Scope (\_PR.CPU2)
    {
        Name (TYPE, 0x00000000)
        Name (PSEN, 0x00000000)
        Name (CSEN, 0x00000001)
        Name (MWOS, 0x00000001)
        Name (TSEN, 0x00000000)
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x08, CAPA)
            TYPE = CAPA /* \_PR_.CPU2._PDC.CAPA */
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */, REVS, SIZE, Local2)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_PR_.CPU2._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */)
            CreateDWordField (Arg0, 0x00, EID0)
            CreateDWordField (Arg0, 0x04, EID1)
            CreateDWordField (Arg0, 0x08, EID2)
            CreateDWordField (Arg0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_PR_.CPU2._OSC.CAP0 */
            Return (Arg3)
        }

        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            If (CSEN)
            {
                If ((MWOS && (TYPE & 0x0200)))
                {
                    Return (Package (0x04)
                    {
                        0x03, 
                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000000, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x01, 
                            0x0001, 
                            0x000003E8
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000010, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0040, 
                            0x000001F4
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000020, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0060, 
                            0x0000015E
                        }
                    })
                }

                Return (Package (0x04)
                {
                    0x03, 
                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (FFixedHW, 
                                0x00,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000000, // Address
                                ,)
                        }, 

                        0x01, 
                        0x0001, 
                        0x000003E8
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000914, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0040, 
                        0x000001F4
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000915, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0060, 
                        0x0000015E
                    }
                })
            }

            Return (Zero)
        }
    }

    Scope (\_PR.CPUI)
    {
        Name (TYPE, 0x00000000)
        Name (PSEN, 0x00000000)
        Name (CSEN, 0x00000001)
        Name (MWOS, 0x00000001)
        Name (TSEN, 0x00000000)
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x08, CAPA)
            TYPE = CAPA /* \_PR_.CPUI._PDC.CAPA */
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */, REVS, SIZE, Local2)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_PR_.CPUI._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */)
            CreateDWordField (Arg0, 0x00, EID0)
            CreateDWordField (Arg0, 0x04, EID1)
            CreateDWordField (Arg0, 0x08, EID2)
            CreateDWordField (Arg0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_PR_.CPUI._OSC.CAP0 */
            Return (Arg3)
        }

        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            If (CSEN)
            {
                If ((MWOS && (TYPE & 0x0200)))
                {
                    Return (Package (0x04)
                    {
                        0x03, 
                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000000, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x01, 
                            0x0001, 
                            0x000003E8
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000010, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0040, 
                            0x000001F4
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000020, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0060, 
                            0x0000015E
                        }
                    })
                }

                Return (Package (0x04)
                {
                    0x03, 
                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (FFixedHW, 
                                0x00,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000000, // Address
                                ,)
                        }, 

                        0x01, 
                        0x0001, 
                        0x000003E8
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000914, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0040, 
                        0x000001F4
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000915, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0060, 
                        0x0000015E
                    }
                })
            }

            Return (Zero)
        }
    }

    Scope (\_PR.CPUA)
    {
        Name (TYPE, 0x00000000)
        Name (PSEN, 0x00000000)
        Name (CSEN, 0x00000001)
        Name (MWOS, 0x00000001)
        Name (TSEN, 0x00000000)
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x08, CAPA)
            TYPE = CAPA /* \_PR_.CPUA._PDC.CAPA */
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */, REVS, SIZE, Local2)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_PR_.CPUA._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */)
            CreateDWordField (Arg0, 0x00, EID0)
            CreateDWordField (Arg0, 0x04, EID1)
            CreateDWordField (Arg0, 0x08, EID2)
            CreateDWordField (Arg0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_PR_.CPUA._OSC.CAP0 */
            Return (Arg3)
        }

        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            If (CSEN)
            {
                If ((MWOS && (TYPE & 0x0200)))
                {
                    Return (Package (0x04)
                    {
                        0x03, 
                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000000, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x01, 
                            0x0001, 
                            0x000003E8
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000010, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0040, 
                            0x000001F4
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000020, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0060, 
                            0x0000015E
                        }
                    })
                }

                Return (Package (0x04)
                {
                    0x03, 
                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (FFixedHW, 
                                0x00,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000000, // Address
                                ,)
                        }, 

                        0x01, 
                        0x0001, 
                        0x000003E8
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000914, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0040, 
                        0x000001F4
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000915, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0060, 
                        0x0000015E
                    }
                })
            }

            Return (Zero)
        }
    }

    Scope (\_PR.CPUQ)
    {
        Name (TYPE, 0x00000000)
        Name (PSEN, 0x00000000)
        Name (CSEN, 0x00000001)
        Name (MWOS, 0x00000001)
        Name (TSEN, 0x00000000)
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x08, CAPA)
            TYPE = CAPA /* \_PR_.CPUQ._PDC.CAPA */
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */, REVS, SIZE, Local2)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_PR_.CPUQ._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */)
            CreateDWordField (Arg0, 0x00, EID0)
            CreateDWordField (Arg0, 0x04, EID1)
            CreateDWordField (Arg0, 0x08, EID2)
            CreateDWordField (Arg0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_PR_.CPUQ._OSC.CAP0 */
            Return (Arg3)
        }

        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            If (CSEN)
            {
                If ((MWOS && (TYPE & 0x0200)))
                {
                    Return (Package (0x04)
                    {
                        0x03, 
                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000000, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x01, 
                            0x0001, 
                            0x000003E8
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000010, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0040, 
                            0x000001F4
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000020, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0060, 
                            0x0000015E
                        }
                    })
                }

                Return (Package (0x04)
                {
                    0x03, 
                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (FFixedHW, 
                                0x00,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000000, // Address
                                ,)
                        }, 

                        0x01, 
                        0x0001, 
                        0x000003E8
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000914, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0040, 
                        0x000001F4
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000915, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0060, 
                        0x0000015E
                    }
                })
            }

            Return (Zero)
        }
    }

    Scope (\_PR.CPU1)
    {
        Name (TYPE, 0x00000000)
        Name (PSEN, 0x00000000)
        Name (CSEN, 0x00000001)
        Name (MWOS, 0x00000001)
        Name (TSEN, 0x00000000)
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x08, CAPA)
            TYPE = CAPA /* \_PR_.CPU1._PDC.CAPA */
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */, REVS, SIZE, Local2)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_PR_.CPU1._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */)
            CreateDWordField (Arg0, 0x00, EID0)
            CreateDWordField (Arg0, 0x04, EID1)
            CreateDWordField (Arg0, 0x08, EID2)
            CreateDWordField (Arg0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_PR_.CPU1._OSC.CAP0 */
            Return (Arg3)
        }

        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            If (CSEN)
            {
                If ((MWOS && (TYPE & 0x0200)))
                {
                    Return (Package (0x04)
                    {
                        0x03, 
                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000000, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x01, 
                            0x0001, 
                            0x000003E8
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000010, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0040, 
                            0x000001F4
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000020, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0060, 
                            0x0000015E
                        }
                    })
                }

                Return (Package (0x04)
                {
                    0x03, 
                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (FFixedHW, 
                                0x00,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000000, // Address
                                ,)
                        }, 

                        0x01, 
                        0x0001, 
                        0x000003E8
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000914, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0040, 
                        0x000001F4
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000915, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0060, 
                        0x0000015E
                    }
                })
            }

            Return (Zero)
        }
    }

    Scope (\_PR.CPUH)
    {
        Name (TYPE, 0x00000000)
        Name (PSEN, 0x00000000)
        Name (CSEN, 0x00000001)
        Name (MWOS, 0x00000001)
        Name (TSEN, 0x00000000)
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x08, CAPA)
            TYPE = CAPA /* \_PR_.CPUH._PDC.CAPA */
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */, REVS, SIZE, Local2)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_PR_.CPUH._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */)
            CreateDWordField (Arg0, 0x00, EID0)
            CreateDWordField (Arg0, 0x04, EID1)
            CreateDWordField (Arg0, 0x08, EID2)
            CreateDWordField (Arg0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_PR_.CPUH._OSC.CAP0 */
            Return (Arg3)
        }

        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            If (CSEN)
            {
                If ((MWOS && (TYPE & 0x0200)))
                {
                    Return (Package (0x04)
                    {
                        0x03, 
                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000000, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x01, 
                            0x0001, 
                            0x000003E8
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000010, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0040, 
                            0x000001F4
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000020, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0060, 
                            0x0000015E
                        }
                    })
                }

                Return (Package (0x04)
                {
                    0x03, 
                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (FFixedHW, 
                                0x00,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000000, // Address
                                ,)
                        }, 

                        0x01, 
                        0x0001, 
                        0x000003E8
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000914, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0040, 
                        0x000001F4
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000915, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0060, 
                        0x0000015E
                    }
                })
            }

            Return (Zero)
        }
    }

    Scope (\_PR.CPUD)
    {
        Name (TYPE, 0x00000000)
        Name (PSEN, 0x00000000)
        Name (CSEN, 0x00000001)
        Name (MWOS, 0x00000001)
        Name (TSEN, 0x00000000)
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x08, CAPA)
            TYPE = CAPA /* \_PR_.CPUD._PDC.CAPA */
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */, REVS, SIZE, Local2)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_PR_.CPUD._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */)
            CreateDWordField (Arg0, 0x00, EID0)
            CreateDWordField (Arg0, 0x04, EID1)
            CreateDWordField (Arg0, 0x08, EID2)
            CreateDWordField (Arg0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_PR_.CPUD._OSC.CAP0 */
            Return (Arg3)
        }

        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            If (CSEN)
            {
                If ((MWOS && (TYPE & 0x0200)))
                {
                    Return (Package (0x04)
                    {
                        0x03, 
                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000000, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x01, 
                            0x0001, 
                            0x000003E8
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000010, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0040, 
                            0x000001F4
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000020, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0060, 
                            0x0000015E
                        }
                    })
                }

                Return (Package (0x04)
                {
                    0x03, 
                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (FFixedHW, 
                                0x00,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000000, // Address
                                ,)
                        }, 

                        0x01, 
                        0x0001, 
                        0x000003E8
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000914, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0040, 
                        0x000001F4
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000915, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0060, 
                        0x0000015E
                    }
                })
            }

            Return (Zero)
        }
    }

    Scope (\_PR.CPUT)
    {
        Name (TYPE, 0x00000000)
        Name (PSEN, 0x00000000)
        Name (CSEN, 0x00000001)
        Name (MWOS, 0x00000001)
        Name (TSEN, 0x00000000)
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x08, CAPA)
            TYPE = CAPA /* \_PR_.CPUT._PDC.CAPA */
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */, REVS, SIZE, Local2)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_PR_.CPUT._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */)
            CreateDWordField (Arg0, 0x00, EID0)
            CreateDWordField (Arg0, 0x04, EID1)
            CreateDWordField (Arg0, 0x08, EID2)
            CreateDWordField (Arg0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_PR_.CPUT._OSC.CAP0 */
            Return (Arg3)
        }

        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            If (CSEN)
            {
                If ((MWOS && (TYPE & 0x0200)))
                {
                    Return (Package (0x04)
                    {
                        0x03, 
                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000000, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x01, 
                            0x0001, 
                            0x000003E8
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000010, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0040, 
                            0x000001F4
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000020, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0060, 
                            0x0000015E
                        }
                    })
                }

                Return (Package (0x04)
                {
                    0x03, 
                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (FFixedHW, 
                                0x00,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000000, // Address
                                ,)
                        }, 

                        0x01, 
                        0x0001, 
                        0x000003E8
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000914, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0040, 
                        0x000001F4
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000915, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0060, 
                        0x0000015E
                    }
                })
            }

            Return (Zero)
        }
    }

    Scope (\_PR.CPU3)
    {
        Name (TYPE, 0x00000000)
        Name (PSEN, 0x00000000)
        Name (CSEN, 0x00000001)
        Name (MWOS, 0x00000001)
        Name (TSEN, 0x00000000)
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x08, CAPA)
            TYPE = CAPA /* \_PR_.CPU3._PDC.CAPA */
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */, REVS, SIZE, Local2)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_PR_.CPU3._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */)
            CreateDWordField (Arg0, 0x00, EID0)
            CreateDWordField (Arg0, 0x04, EID1)
            CreateDWordField (Arg0, 0x08, EID2)
            CreateDWordField (Arg0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_PR_.CPU3._OSC.CAP0 */
            Return (Arg3)
        }

        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            If (CSEN)
            {
                If ((MWOS && (TYPE & 0x0200)))
                {
                    Return (Package (0x04)
                    {
                        0x03, 
                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000000, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x01, 
                            0x0001, 
                            0x000003E8
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000010, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0040, 
                            0x000001F4
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000020, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0060, 
                            0x0000015E
                        }
                    })
                }

                Return (Package (0x04)
                {
                    0x03, 
                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (FFixedHW, 
                                0x00,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000000, // Address
                                ,)
                        }, 

                        0x01, 
                        0x0001, 
                        0x000003E8
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000914, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0040, 
                        0x000001F4
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000915, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0060, 
                        0x0000015E
                    }
                })
            }

            Return (Zero)
        }
    }

    Scope (\_PR.CPUJ)
    {
        Name (TYPE, 0x00000000)
        Name (PSEN, 0x00000000)
        Name (CSEN, 0x00000001)
        Name (MWOS, 0x00000001)
        Name (TSEN, 0x00000000)
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x08, CAPA)
            TYPE = CAPA /* \_PR_.CPUJ._PDC.CAPA */
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */, REVS, SIZE, Local2)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_PR_.CPUJ._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */)
            CreateDWordField (Arg0, 0x00, EID0)
            CreateDWordField (Arg0, 0x04, EID1)
            CreateDWordField (Arg0, 0x08, EID2)
            CreateDWordField (Arg0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_PR_.CPUJ._OSC.CAP0 */
            Return (Arg3)
        }

        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            If (CSEN)
            {
                If ((MWOS && (TYPE & 0x0200)))
                {
                    Return (Package (0x04)
                    {
                        0x03, 
                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000000, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x01, 
                            0x0001, 
                            0x000003E8
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000010, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0040, 
                            0x000001F4
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000020, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0060, 
                            0x0000015E
                        }
                    })
                }

                Return (Package (0x04)
                {
                    0x03, 
                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (FFixedHW, 
                                0x00,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000000, // Address
                                ,)
                        }, 

                        0x01, 
                        0x0001, 
                        0x000003E8
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000914, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0040, 
                        0x000001F4
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000915, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0060, 
                        0x0000015E
                    }
                })
            }

            Return (Zero)
        }
    }

    Scope (\_PR.CPUB)
    {
        Name (TYPE, 0x00000000)
        Name (PSEN, 0x00000000)
        Name (CSEN, 0x00000001)
        Name (MWOS, 0x00000001)
        Name (TSEN, 0x00000000)
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x08, CAPA)
            TYPE = CAPA /* \_PR_.CPUB._PDC.CAPA */
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */, REVS, SIZE, Local2)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_PR_.CPUB._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */)
            CreateDWordField (Arg0, 0x00, EID0)
            CreateDWordField (Arg0, 0x04, EID1)
            CreateDWordField (Arg0, 0x08, EID2)
            CreateDWordField (Arg0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_PR_.CPUB._OSC.CAP0 */
            Return (Arg3)
        }

        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            If (CSEN)
            {
                If ((MWOS && (TYPE & 0x0200)))
                {
                    Return (Package (0x04)
                    {
                        0x03, 
                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000000, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x01, 
                            0x0001, 
                            0x000003E8
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000010, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0040, 
                            0x000001F4
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000020, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0060, 
                            0x0000015E
                        }
                    })
                }

                Return (Package (0x04)
                {
                    0x03, 
                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (FFixedHW, 
                                0x00,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000000, // Address
                                ,)
                        }, 

                        0x01, 
                        0x0001, 
                        0x000003E8
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000914, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0040, 
                        0x000001F4
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000915, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0060, 
                        0x0000015E
                    }
                })
            }

            Return (Zero)
        }
    }

    Scope (\_PR.CPUR)
    {
        Name (TYPE, 0x00000000)
        Name (PSEN, 0x00000000)
        Name (CSEN, 0x00000001)
        Name (MWOS, 0x00000001)
        Name (TSEN, 0x00000000)
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            CreateDWordField (Arg0, 0x08, CAPA)
            TYPE = CAPA /* \_PR_.CPUR._PDC.CAPA */
            CreateDWordField (Arg0, 0x00, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Name (STS0, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Concatenate (STS0, TEMP, Local2)
            _OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */, REVS, SIZE, Local2)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            CreateDWordField (Arg3, 0x04, CAPA)
            TYPE = CAPA /* \_PR_.CPUR._OSC.CAPA */
            CreateDWordField (Arg3, 0x00, STS0)
            CreateDWordField (Arg3, 0x04, CAP0)
            CreateDWordField (Arg0, 0x00, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Name (UID0, ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */)
            CreateDWordField (Arg0, 0x00, EID0)
            CreateDWordField (Arg0, 0x04, EID1)
            CreateDWordField (Arg0, 0x08, EID2)
            CreateDWordField (Arg0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 [0x00] = 0x06
                Return (Arg3)
            }

            If ((Arg1 != 0x01))
            {
                STS0 [0x00] = 0x0A
                Return (Arg3)
            }

            If ((STS0 & 0x01))
            {
                CAP0 &= 0x0BFF
                Return (Arg3)
            }

            CAP0 &= 0x0BFF
            TYPE = CAP0 /* \_PR_.CPUR._OSC.CAP0 */
            Return (Arg3)
        }

        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            If (CSEN)
            {
                If ((MWOS && (TYPE & 0x0200)))
                {
                    Return (Package (0x04)
                    {
                        0x03, 
                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000000, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x01, 
                            0x0001, 
                            0x000003E8
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000010, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0040, 
                            0x000001F4
                        }, 

                        Package (0x04)
                        {
                            ResourceTemplate ()
                            {
                                Register (FFixedHW, 
                                    0x01,               // Bit Width
                                    0x02,               // Bit Offset
                                    0x0000000000000020, // Address
                                    0x01,               // Access Size
                                    )
                            }, 

                            0x03, 
                            0x0060, 
                            0x0000015E
                        }
                    })
                }

                Return (Package (0x04)
                {
                    0x03, 
                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (FFixedHW, 
                                0x00,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000000, // Address
                                ,)
                        }, 

                        0x01, 
                        0x0001, 
                        0x000003E8
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000914, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0040, 
                        0x000001F4
                    }, 

                    Package (0x04)
                    {
                        ResourceTemplate ()
                        {
                            Register (SystemIO, 
                                0x08,               // Bit Width
                                0x00,               // Bit Offset
                                0x0000000000000915, // Address
                                ,)
                        }, 

                        0x03, 
                        0x0060, 
                        0x0000015E
                    }
                })
            }

            Return (Zero)
        }
    }
}



SSDT4
-----
DefinitionBlock ("", "SSDT", 1, "HP", "tpm", 0x00000001)
{
    External (_SB_.PCI0.IBRG, DeviceObj)
    External (_SB_.PCI0.NV1B, IntObj)
    External (_SB_.PCI0.NV1C, IntObj)
    External (_SB_.PCI0.NVPG, UnknownObj)

    Scope (\_SB.PCI0.IBRG)
    {
        Device (TPM)
        {
            Name (_HID, EisaId ("IFX0102"))  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0C31"))  // _CID: Compatible ID
            Name (_STR, Unicode ("Infineon Trusted Platform Module"))  // _STR: Description String
            Name (_UID, One)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x004E,             // Range Minimum
                    0x004E,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0800,             // Range Minimum
                    0x0800,             // Range Maximum
                    0x01,               // Alignment
                    0x20,               // Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFED40000,         // Address Base
                    0x00005000,         // Address Length
                    )
            })
        }
    }

    Scope (\_SB.PCI0.IBRG.TPM)
    {
        Name (REV1, "1.0")
        Name (UIDB, ToUUID ("3dddfaa6-361b-4eb4-a424-8d10089d1653") /* Physical Presence Interface */)
        Name (UIDM, ToUUID ("376054ed-cc13-4675-901c-4756d7f2d45d") /* Unknown UUID */)
        Name (PPIB, Buffer (0x02)
        {
             0x00, 0x00                                       // ..
        })
        Method (CUID, 2, NotSerialized)
        {
            Local0 = Zero
            Local2 = Zero
            Local1 = Arg0
            Local3 = Arg1
            While ((Local2 == Zero))
            {
                If ((DerefOf (Local3 [Local0]) == DerefOf (Local1 [Local0])))
                {
                    If ((Local0 == 0x0F))
                    {
                        Local2 = 0x02
                    }
                    Else
                    {
                        Local2 = Zero
                    }
                }
                Else
                {
                    Local2 = One
                }

                Local0++
            }

            Return (Local2)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            Local2 = Zero
            Local0 = CUID (Arg0, UIDB)
            If ((Local0 == 0x02))
            {
                Local2 = One
            }

            Local0 = CUID (Arg0, UIDM)
            If ((Local0 == 0x02))
            {
                Local2 = 0x02
            }

            If ((Local2 == One))
            {
                If ((Arg1 == One))
                {
                    If ((Arg2 <= 0x06))
                    {
                        If ((Arg2 == Zero))
                        {
                            Return (Buffer (One)
                            {
                                 0x7F                                             // .
                            })
                        }

                        If ((Arg2 == One))
                        {
                            Return (REV1) /* \_SB_.PCI0.IBRG.TPM_.REV1 */
                        }

                        If ((Arg2 == 0x02))
                        {
                            If ((DerefOf (Arg3 [Zero]) <= 0x0E))
                            {
                                If (((DerefOf (Arg3 [Zero]) == 0x0C) || (DerefOf (
                                    Arg3 [Zero]) == 0x0D)))
                                {
                                    Return (One)
                                }
                                Else
                                {
                                    \_SB.PCI0.NVPG = 0x03
                                    Local0 = \_SB.PCI0.NV1B /* External reference */
                                    Local0 &= 0xF0
                                    Local1 = DerefOf (Arg3 [Zero])
                                    Local0 += Local1
                                    \_SB.PCI0.NV1B = Local0
                                    Return (Zero)
                                }
                            }
                            Else
                            {
                                Return (One)
                            }
                        }

                        If ((Arg2 == 0x03))
                        {
                            \_SB.PCI0.NVPG = 0x03
                            Local0 = \_SB.PCI0.NV1B /* External reference */
                            Local0 &= 0x0F
                            Name (DSMB, Package (0x02)
                            {
                                0xFF, 
                                0xFF
                            })
                            If ((Local0 > 0x0E))
                            {
                                DSMB [Zero] = One
                                DSMB [One] = Zero
                            }
                            Else
                            {
                                DSMB [Zero] = Zero
                                DSMB [One] = Local0
                            }

                            Return (DSMB) /* \_SB_.PCI0.IBRG.TPM_._DSM.DSMB */
                        }

                        If ((Arg2 == 0x04))
                        {
                            Return (0x02)
                        }

                        If ((Arg2 == 0x05))
                        {
                            \_SB.PCI0.NVPG = 0x03
                            Local0 = \_SB.PCI0.NV1B /* External reference */
                            Local0 >>= 0x04
                            Local1 = \_SB.PCI0.NV1C /* External reference */
                            Name (DSMC, Package (0x03)
                            {
                                0xFF, 
                                0xFF, 
                                0xFF
                            })
                            DSMC [0x02] = Local1
                            DSMC [One] = Local0
                            DSMC [Zero] = Zero
                            Return (DSMC) /* \_SB_.PCI0.IBRG.TPM_._DSM.DSMC */
                        }

                        If ((Arg2 == 0x06))
                        {
                            PPIB = DerefOf (Arg3 [Zero])
                            If ((((DerefOf (PPIB [Zero]) == 0x45) || (DerefOf (
                                PPIB [Zero]) == 0x65)) && ((DerefOf (PPIB [One]) == 0x4E) || 
                                (DerefOf (PPIB [One]) == 0x6E))))
                            {
                                Return (Zero)
                            }
                            Else
                            {
                                Return (One)
                            }
                        }
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }
                Else
                {
                    Return (Zero)
                }
            }

            If ((Local2 == 0x02))
            {
                If ((Arg1 == One))
                {
                    If ((Arg2 <= One))
                    {
                        If ((Arg2 == Zero))
                        {
                            Return (0x03)
                        }

                        If ((Arg2 == One))
                        {
                            Return (Zero)
                        }
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }
                Else
                {
                    Return (Zero)
                }
            }
        }
    }
}



SSDT5
-----
DefinitionBlock ("", "SSDT", 3, "HP", "CRSPCI0", 0x00000002)
{
    Name (\_SB.PCI0._CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
    {
        WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
            0x0000,             // Granularity
            0x0000,             // Range Minimum
            0x0011,             // Range Maximum
            0x0000,             // Translation Offset
            0x0012,             // Length
            ,, )
        DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
            0x00000000,         // Granularity
            0xE7000000,         // Range Minimum
            0xFBFFFFFF,         // Range Maximum
            0x00000000,         // Translation Offset
            0x15000000,         // Length
            ,, , AddressRangeMemory, TypeStatic)
        WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
            0x0000,             // Granularity
            0x1000,             // Range Minimum
            0x4FFF,             // Range Maximum
            0x0000,             // Translation Offset
            0x4000,             // Length
            ,, , TypeStatic, DenseTranslation)
        WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
            0x0000,             // Granularity
            0x0000,             // Range Minimum
            0x03AF,             // Range Maximum
            0x0000,             // Translation Offset
            0x03B0,             // Length
            ,, , TypeStatic, DenseTranslation)
        WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
            0x0000,             // Granularity
            0x03E0,             // Range Minimum
            0x0CF7,             // Range Maximum
            0x0000,             // Translation Offset
            0x0918,             // Length
            ,, , TypeStatic, DenseTranslation)
        WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
            0x0000,             // Granularity
            0x0D00,             // Range Minimum
            0x0FFF,             // Range Maximum
            0x0000,             // Translation Offset
            0x0300,             // Length
            ,, , TypeStatic, DenseTranslation)
        DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
            0x00000000,         // Granularity
            0xFED00000,         // Range Minimum
            0xFED03FFF,         // Range Maximum
            0x00000000,         // Translation Offset
            0x00004000,         // Length
            ,, , AddressRangeMemory, TypeStatic)
        DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
            0x00000000,         // Granularity
            0xFED40000,         // Range Minimum
            0xFED44FFF,         // Range Maximum
            0x00000000,         // Translation Offset
            0x00005000,         // Length
            ,, , AddressRangeMemory, TypeStatic)
        WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
            0x0000,             // Granularity
            0x03B0,             // Range Minimum
            0x03BB,             // Range Maximum
            0x0000,             // Translation Offset
            0x000C,             // Length
            ,, , TypeStatic, DenseTranslation)
        WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
            0x0000,             // Granularity
            0x03C0,             // Range Minimum
            0x03DF,             // Range Maximum
            0x0000,             // Translation Offset
            0x0020,             // Length
            ,, , TypeStatic, DenseTranslation)
        DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
            0x00000000,         // Granularity
            0x000A0000,         // Range Minimum
            0x000BFFFF,         // Range Maximum
            0x00000000,         // Translation Offset
            0x00020000,         // Length
            ,, , AddressRangeMemory, TypeStatic)
    })
    Name (\_SB.PCI0._BBN, 0x00)  // _BBN: BIOS Bus Number
}



TCPA
----
[000h 0000   4]                    Signature : "TCPA"    [Trusted Computing Platform Alliance table]
[004h 0004   4]                 Table Length : 00000064
[008h 0008   1]                     Revision : 02
[009h 0009   1]                     Checksum : BF
[00Ah 0010   6]                       Oem ID : "HP    "
[010h 0016   8]                 Oem Table ID : "ProLiant"
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "  "
[020h 0032   4]        Asl Compiler Revision : 0000162E

[024h 0036   2]               Platform Class : 0001
[026h 0038   2]                     Reserved : 0000
[028h 0040   8]         Min Event Log Length : 0000000000010000
[030h 0048   8]            Event Log Address : 00000000DF7F0000
[038h 0056   2]       Specification Revision : 0120
[03Ah 0058   1] Device Flags (decoded below) : 00
                                  Pci Device : 0
                                  Bus is Pnp : 0
                               Address Valid : 0
[03Bh 0059   1] Interrupt Flags (decoded below) : 00
                                        Mode : 0
                                    Polarity : 0
                           GPE SCI Triggered : 0
                     Global System Interrupt : 0
[03Ch 0060   1]                   Gpe Number : 00
[03Dh 0061   3]                     Reserved : 000000
[040h 0064   4]             Global Interrupt : 00000000

[044h 0068  12]                      Address : [Generic Address Structure]
[044h 0068   1]                     Space ID : 00 [SystemMemory]
[045h 0069   1]                    Bit Width : 00
[046h 0070   1]                   Bit Offset : 00
[047h 0071   1]         Encoded Access Width : 03 [DWord Access:32]
[048h 0072   8]                      Address : 00000000FED40000

[050h 0080   4]                     Reserved : 00000000
[054h 0084  12]        Configuration Address : [Generic Address Structure]
[054h 0084   1]                     Space ID : 00 [SystemMemory]
[055h 0085   1]                    Bit Width : 00
[056h 0086   1]                   Bit Offset : 00
[057h 0087   1]         Encoded Access Width : 00 [Undefined/Legacy]
[058h 0088   8]                      Address : 0000000000000000

[060h 0096   1]                    Pci Group : 00
[061h 0097   1]                      Pci Bus : 00
[062h 0098   1]                   Pci Device : 00
[063h 0099   1]                 Pci Function : 00

Raw Table Data: Length 100 (0x64)

    0000: 54 43 50 41 64 00 00 00 02 BF 48 50 20 20 20 20  // TCPAd.....HP    
    0010: 50 72 6F 4C 69 61 6E 74 02 00 00 00 D2 04 00 00  // ProLiant........
    0020: 2E 16 00 00 01 00 00 00 00 00 01 00 00 00 00 00  // ................
    0030: 00 00 7F DF 00 00 00 00 20 01 00 00 00 00 00 00  // ........ .......
    0040: 00 00 00 00 00 00 00 03 00 00 D4 FE 00 00 00 00  // ................
    0050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0060: 00 00 00 00                                      // ....


