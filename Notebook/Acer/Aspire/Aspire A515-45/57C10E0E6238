
Intel ACPI Component Architecture
ACPI Binary Table Extraction Utility version 20220331
Copyright (c) 2000 - 2022 Intel Corporation


 Signature  Length    Version Oem       Oem         Oem         Compiler Compiler
                              Id        TableId     RevisionId  Name     Revision
 _________  __________  ____  ________  __________  __________  _______  __________

 01)  SSDT  0x00000080  0x01  "ACRSYS"  "ACRPRDCT"  0x00000002  "1025"   0x00040000
 02)  MCFG  0x0000003C  0x01  "ACRSYS"  "ACRPRDCT"  0x00000002  "1025"   0x00040000
 03)  ASF!  0x000000A5  0x20  "ACRSYS"  "ACRPRDCT"  0x00000002  "1025"   0x00040000
 04)  APIC  0x00000138  0x03  "ACRSYS"  "ACRPRDCT"  0x00000002  "1025"   0x00040000
 05)  CRAT  0x000007E8  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 06)  SSDT  0x00003A24  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 07)  TPM2  0x0000004C  0x04  "ACRSYS"  "ACRPRDCT"  0x00000002  "1025"   0x00040000
 08)  VFCT  0x0000D884  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 09)  BOOT  0x00000028  0x01  "ACRSYS"  "ACRPRDCT"  0x00000002  "1025"   0x00040000
 10)  SSDT  0x00000139  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 11)  SSDT  0x00000517  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 12)  CDIT  0x00000029  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 13)  UEFI  0x00000236  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 14)  IVRS  0x000001A4  0x02  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 15)  DSDT  0x000079BF  0x01  "ACRSYS"  "ACRPRDCT"  0x00000002  "1025"   0x00040000
 16)  SSDT  0x000000F8  0x01  "ACRSYS"  "ACRPRDCT"  0x00001000  "1025"   0x00040000
 17)  WSMT  0x00000028  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 18)  SSDT  0x000034A4  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 19)  WDRT  0x00000047  0x01  "ACRSYS"  "ACRPRDCT"  0x00000002  "1025"   0x00040000
 20)  SSDT  0x00000055  0x01  "ACRSYS"  "ACRPRDCT"  0x00001000  "1025"   0x00040000
 21)  WDAT  0x0000017C  0x01  "ACRSYS"  "ACRPRDCT"  0x00000002  "1025"   0x00040000
 22)  SSDT  0x00000D53  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 23)  SSDT  0x00000472  0x02  "ACRSYS"  "ACRPRDCT"  0x00001000  "1025"   0x00040000
 24)  FACP  0x0000010C  0x05  "ACRSYS"  "ACRPRDCT"  0x00000002  "1025"   0x00040000
 25)  FPDT  0x00000044  0x01  "ACRSYS"  "ACRPRDCT"  0x00000002  "1025"   0x00040000
 26)  SSDT  0x00007229  0x02  "ACRSYS"  "ACRPRDCT"  0x00000002  "1025"   0x00040000
 27)  MSDM  0x00000055  0x03  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 28)  SSDT  0x000029BC  0x02  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 29)  SSDT  0x0000007D  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 30)  HPET  0x00000038  0x01  "ACRSYS"  "ACRPRDCT"  0x00000002  "1025"   0x00040000
 31)  SSDT  0x000068CA  0x01  "ACRSYS"  "ACRPRDCT"  0x00001000  "1025"   0x00040000
 32)  FACS  0x00000040  0x02
 33)  BGRT  0x00000038  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000
 34)  SSDT  0x000010A5  0x01  "ACRSYS"  "ACRPRDCT"  0x00000001  "1025"   0x00040000

Found 34 ACPI tables in acpidump

APIC
----
[000h 0000   4]                    Signature : "APIC"    [Multiple APIC Description Table (MADT)]
[004h 0004   4]                 Table Length : 00000138
[008h 0008   1]                     Revision : 03
[009h 0009   1]                     Checksum : 02
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   4]           Local Apic Address : FEE00000
[028h 0040   4]        Flags (decoded below) : 00000001
                         PC-AT Compatibility : 1

[02Ch 0044   1]                Subtable Type : 00 [Processor Local APIC]
[02Dh 0045   1]                       Length : 08
[02Eh 0046   1]                 Processor ID : 00
[02Fh 0047   1]                Local Apic ID : 00
[030h 0048   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[034h 0052   1]                Subtable Type : 00 [Processor Local APIC]
[035h 0053   1]                       Length : 08
[036h 0054   1]                 Processor ID : 01
[037h 0055   1]                Local Apic ID : 01
[038h 0056   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[03Ch 0060   1]                Subtable Type : 00 [Processor Local APIC]
[03Dh 0061   1]                       Length : 08
[03Eh 0062   1]                 Processor ID : 02
[03Fh 0063   1]                Local Apic ID : 02
[040h 0064   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[044h 0068   1]                Subtable Type : 00 [Processor Local APIC]
[045h 0069   1]                       Length : 08
[046h 0070   1]                 Processor ID : 03
[047h 0071   1]                Local Apic ID : 03
[048h 0072   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[04Ch 0076   1]                Subtable Type : 00 [Processor Local APIC]
[04Dh 0077   1]                       Length : 08
[04Eh 0078   1]                 Processor ID : 04
[04Fh 0079   1]                Local Apic ID : 04
[050h 0080   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[054h 0084   1]                Subtable Type : 00 [Processor Local APIC]
[055h 0085   1]                       Length : 08
[056h 0086   1]                 Processor ID : 05
[057h 0087   1]                Local Apic ID : 05
[058h 0088   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[05Ch 0092   1]                Subtable Type : 00 [Processor Local APIC]
[05Dh 0093   1]                       Length : 08
[05Eh 0094   1]                 Processor ID : 06
[05Fh 0095   1]                Local Apic ID : 06
[060h 0096   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[064h 0100   1]                Subtable Type : 00 [Processor Local APIC]
[065h 0101   1]                       Length : 08
[066h 0102   1]                 Processor ID : 07
[067h 0103   1]                Local Apic ID : 07
[068h 0104   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[06Ch 0108   1]                Subtable Type : 00 [Processor Local APIC]
[06Dh 0109   1]                       Length : 08
[06Eh 0110   1]                 Processor ID : 08
[06Fh 0111   1]                Local Apic ID : 00
[070h 0112   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[074h 0116   1]                Subtable Type : 00 [Processor Local APIC]
[075h 0117   1]                       Length : 08
[076h 0118   1]                 Processor ID : 09
[077h 0119   1]                Local Apic ID : 00
[078h 0120   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[07Ch 0124   1]                Subtable Type : 00 [Processor Local APIC]
[07Dh 0125   1]                       Length : 08
[07Eh 0126   1]                 Processor ID : 0A
[07Fh 0127   1]                Local Apic ID : 00
[080h 0128   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[084h 0132   1]                Subtable Type : 00 [Processor Local APIC]
[085h 0133   1]                       Length : 08
[086h 0134   1]                 Processor ID : 0B
[087h 0135   1]                Local Apic ID : 00
[088h 0136   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[08Ch 0140   1]                Subtable Type : 00 [Processor Local APIC]
[08Dh 0141   1]                       Length : 08
[08Eh 0142   1]                 Processor ID : 0C
[08Fh 0143   1]                Local Apic ID : 00
[090h 0144   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[094h 0148   1]                Subtable Type : 00 [Processor Local APIC]
[095h 0149   1]                       Length : 08
[096h 0150   1]                 Processor ID : 0D
[097h 0151   1]                Local Apic ID : 00
[098h 0152   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[09Ch 0156   1]                Subtable Type : 00 [Processor Local APIC]
[09Dh 0157   1]                       Length : 08
[09Eh 0158   1]                 Processor ID : 0E
[09Fh 0159   1]                Local Apic ID : 00
[0A0h 0160   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0A4h 0164   1]                Subtable Type : 00 [Processor Local APIC]
[0A5h 0165   1]                       Length : 08
[0A6h 0166   1]                 Processor ID : 0F
[0A7h 0167   1]                Local Apic ID : 00
[0A8h 0168   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0ACh 0172   1]                Subtable Type : 01 [I/O APIC]
[0ADh 0173   1]                       Length : 0C
[0AEh 0174   1]                  I/O Apic ID : 21
[0AFh 0175   1]                     Reserved : 00
[0B0h 0176   4]                      Address : FEC00000
[0B4h 0180   4]                    Interrupt : 00000000

[0B8h 0184   1]                Subtable Type : 01 [I/O APIC]
[0B9h 0185   1]                       Length : 0C
[0BAh 0186   1]                  I/O Apic ID : 22
[0BBh 0187   1]                     Reserved : 00
[0BCh 0188   4]                      Address : FEC01000
[0C0h 0192   4]                    Interrupt : 00000018

[0C4h 0196   1]                Subtable Type : 02 [Interrupt Source Override]
[0C5h 0197   1]                       Length : 0A
[0C6h 0198   1]                          Bus : 00
[0C7h 0199   1]                       Source : 00
[0C8h 0200   4]                    Interrupt : 00000002
[0CCh 0204   2]        Flags (decoded below) : 0000
                                    Polarity : 0
                                Trigger Mode : 0

[0CEh 0206   1]                Subtable Type : 02 [Interrupt Source Override]
[0CFh 0207   1]                       Length : 0A
[0D0h 0208   1]                          Bus : 00
[0D1h 0209   1]                       Source : 09
[0D2h 0210   4]                    Interrupt : 00000009
[0D6h 0214   2]        Flags (decoded below) : 000F
                                    Polarity : 3
                                Trigger Mode : 3

[0D8h 0216   1]                Subtable Type : 04 [Local APIC NMI]
[0D9h 0217   1]                       Length : 06
[0DAh 0218   1]                 Processor ID : 00
[0DBh 0219   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0DDh 0221   1]         Interrupt Input LINT : 01

[0DEh 0222   1]                Subtable Type : 04 [Local APIC NMI]
[0DFh 0223   1]                       Length : 06
[0E0h 0224   1]                 Processor ID : 01
[0E1h 0225   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0E3h 0227   1]         Interrupt Input LINT : 01

[0E4h 0228   1]                Subtable Type : 04 [Local APIC NMI]
[0E5h 0229   1]                       Length : 06
[0E6h 0230   1]                 Processor ID : 02
[0E7h 0231   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0E9h 0233   1]         Interrupt Input LINT : 01

[0EAh 0234   1]                Subtable Type : 04 [Local APIC NMI]
[0EBh 0235   1]                       Length : 06
[0ECh 0236   1]                 Processor ID : 03
[0EDh 0237   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0EFh 0239   1]         Interrupt Input LINT : 01

[0F0h 0240   1]                Subtable Type : 04 [Local APIC NMI]
[0F1h 0241   1]                       Length : 06
[0F2h 0242   1]                 Processor ID : 04
[0F3h 0243   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0F5h 0245   1]         Interrupt Input LINT : 01

[0F6h 0246   1]                Subtable Type : 04 [Local APIC NMI]
[0F7h 0247   1]                       Length : 06
[0F8h 0248   1]                 Processor ID : 05
[0F9h 0249   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0FBh 0251   1]         Interrupt Input LINT : 01

[0FCh 0252   1]                Subtable Type : 04 [Local APIC NMI]
[0FDh 0253   1]                       Length : 06
[0FEh 0254   1]                 Processor ID : 06
[0FFh 0255   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[101h 0257   1]         Interrupt Input LINT : 01

[102h 0258   1]                Subtable Type : 04 [Local APIC NMI]
[103h 0259   1]                       Length : 06
[104h 0260   1]                 Processor ID : 07
[105h 0261   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[107h 0263   1]         Interrupt Input LINT : 01

[108h 0264   1]                Subtable Type : 04 [Local APIC NMI]
[109h 0265   1]                       Length : 06
[10Ah 0266   1]                 Processor ID : 08
[10Bh 0267   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[10Dh 0269   1]         Interrupt Input LINT : 01

[10Eh 0270   1]                Subtable Type : 04 [Local APIC NMI]
[10Fh 0271   1]                       Length : 06
[110h 0272   1]                 Processor ID : 09
[111h 0273   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[113h 0275   1]         Interrupt Input LINT : 01

[114h 0276   1]                Subtable Type : 04 [Local APIC NMI]
[115h 0277   1]                       Length : 06
[116h 0278   1]                 Processor ID : 0A
[117h 0279   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[119h 0281   1]         Interrupt Input LINT : 01

[11Ah 0282   1]                Subtable Type : 04 [Local APIC NMI]
[11Bh 0283   1]                       Length : 06
[11Ch 0284   1]                 Processor ID : 0B
[11Dh 0285   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[11Fh 0287   1]         Interrupt Input LINT : 01

[120h 0288   1]                Subtable Type : 04 [Local APIC NMI]
[121h 0289   1]                       Length : 06
[122h 0290   1]                 Processor ID : 0C
[123h 0291   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[125h 0293   1]         Interrupt Input LINT : 01

[126h 0294   1]                Subtable Type : 04 [Local APIC NMI]
[127h 0295   1]                       Length : 06
[128h 0296   1]                 Processor ID : 0D
[129h 0297   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[12Bh 0299   1]         Interrupt Input LINT : 01

[12Ch 0300   1]                Subtable Type : 04 [Local APIC NMI]
[12Dh 0301   1]                       Length : 06
[12Eh 0302   1]                 Processor ID : 0E
[12Fh 0303   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[131h 0305   1]         Interrupt Input LINT : 01

[132h 0306   1]                Subtable Type : 04 [Local APIC NMI]
[133h 0307   1]                       Length : 06
[134h 0308   1]                 Processor ID : 0F
[135h 0309   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[137h 0311   1]         Interrupt Input LINT : 01

Raw Table Data: Length 312 (0x138)

    0000: 41 50 49 43 38 01 00 00 03 02 41 43 52 53 59 53  // APIC8.....ACRSYS
    0010: 41 43 52 50 52 44 43 54 02 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 00 00 E0 FE 01 00 00 00 00 08 00 00  // ................
    0030: 01 00 00 00 00 08 01 01 01 00 00 00 00 08 02 02  // ................
    0040: 01 00 00 00 00 08 03 03 01 00 00 00 00 08 04 04  // ................
    0050: 01 00 00 00 00 08 05 05 01 00 00 00 00 08 06 06  // ................
    0060: 01 00 00 00 00 08 07 07 01 00 00 00 00 08 08 00  // ................
    0070: 00 00 00 00 00 08 09 00 00 00 00 00 00 08 0A 00  // ................
    0080: 00 00 00 00 00 08 0B 00 00 00 00 00 00 08 0C 00  // ................
    0090: 00 00 00 00 00 08 0D 00 00 00 00 00 00 08 0E 00  // ................
    00A0: 00 00 00 00 00 08 0F 00 00 00 00 00 01 0C 21 00  // ..............!.
    00B0: 00 00 C0 FE 00 00 00 00 01 0C 22 00 00 10 C0 FE  // ..........".....
    00C0: 18 00 00 00 02 0A 00 00 02 00 00 00 00 00 02 0A  // ................
    00D0: 00 09 09 00 00 00 0F 00 04 06 00 05 00 01 04 06  // ................
    00E0: 01 05 00 01 04 06 02 05 00 01 04 06 03 05 00 01  // ................
    00F0: 04 06 04 05 00 01 04 06 05 05 00 01 04 06 06 05  // ................
    0100: 00 01 04 06 07 05 00 01 04 06 08 05 00 01 04 06  // ................
    0110: 09 05 00 01 04 06 0A 05 00 01 04 06 0B 05 00 01  // ................
    0120: 04 06 0C 05 00 01 04 06 0D 05 00 01 04 06 0E 05  // ................
    0130: 00 01 04 06 0F 05 00 01                          // ........


ASF!
----
[000h 0000   4]                    Signature : "ASF!"    [Alert Standard Format Table]
[004h 0004   4]                 Table Length : 000000A5
[008h 0008   1]                     Revision : 20
[009h 0009   1]                     Checksum : B1
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   1]                Subtable Type : 00 [ASF Information]
[025h 0037   1]                     Reserved : 00
[026h 0038   2]                       Length : 0010
[028h 0040   1]          Minimum Reset Value : 00
[029h 0041   1]     Minimum Polling Interval : FF
[02Ah 0042   2]                    System ID : 0001
[02Ch 0044   4]              Manufacturer ID : 57010000
[030h 0048   1]                        Flags : 00
[031h 0049   3]                     Reserved : 000000

[034h 0052   1]                Subtable Type : 01 [ASF Alerts]
[035h 0053   1]                     Reserved : 00
[036h 0054   2]                       Length : 002C
[038h 0056   1]                   AssertMask : 00
[039h 0057   1]                 DeassertMask : 00
[03Ah 0058   1]                  Alert Count : 03
[03Bh 0059   1]            Alert Data Length : 0C

[03Ch 0060   1]                      Address : 80
[03Dh 0061   1]                      Command : 23
[03Eh 0062   1]                         Mask : 01
[03Fh 0063   1]                        Value : 01
[040h 0064   1]                   SensorType : 01
[041h 0065   1]                         Type : 01
[042h 0066   1]                       Offset : 00
[043h 0067   1]                   SourceType : 39
[044h 0068   1]                     Severity : 10
[045h 0069   1]                 SensorNumber : 00
[046h 0070   1]                       Entity : 07
[047h 0071   1]                     Instance : 00

[048h 0072   1]                      Address : 80
[049h 0073   1]                      Command : 23
[04Ah 0074   1]                         Mask : 02
[04Bh 0075   1]                        Value : 02
[04Ch 0076   1]                   SensorType : 01
[04Dh 0077   1]                         Type : 01
[04Eh 0078   1]                       Offset : 00
[04Fh 0079   1]                   SourceType : 39
[050h 0080   1]                     Severity : 10
[051h 0081   1]                 SensorNumber : 01
[052h 0082   1]                       Entity : 07
[053h 0083   1]                     Instance : 00

[054h 0084   1]                      Address : 80
[055h 0085   1]                      Command : 23
[056h 0086   1]                         Mask : 04
[057h 0087   1]                        Value : 04
[058h 0088   1]                   SensorType : 01
[059h 0089   1]                         Type : 01
[05Ah 0090   1]                       Offset : 00
[05Bh 0091   1]                   SourceType : 39
[05Ch 0092   1]                     Severity : 10
[05Dh 0093   1]                 SensorNumber : 02
[05Eh 0094   1]                       Entity : 07
[05Fh 0095   1]                     Instance : 00

[060h 0096   1]                Subtable Type : 02 [ASF Remote Control]
[061h 0097   1]                     Reserved : 00
[062h 0098   2]                       Length : 0018
[064h 0100   1]                Control Count : 04
[065h 0101   1]          Control Data Length : 04
[066h 0102   2]                     Reserved : 0000

[068h 0104   1]                     Function : 00
[069h 0105   1]                      Address : 71
[06Ah 0106   1]                      Command : 00
[06Bh 0107   1]                        Value : 00

[06Ch 0108   1]                     Function : 01
[06Dh 0109   1]                      Address : 71
[06Eh 0110   1]                      Command : 02
[06Fh 0111   1]                        Value : 00

[070h 0112   1]                     Function : 02
[071h 0113   1]                      Address : 71
[072h 0114   1]                      Command : 01
[073h 0115   1]                        Value : 00

[074h 0116   1]                     Function : 03
[075h 0117   1]                      Address : 71
[076h 0118   1]                      Command : 03
[077h 0119   1]                        Value : 00

[078h 0120   1]                Subtable Type : 03 [ASF RMCP Boot Options]
[079h 0121   1]                     Reserved : 00
[07Ah 0122   2]                       Length : 0017
[07Ch 0124   7]                 Capabilities : 21 F8 00 00 00 1B F0
[083h 0131   1]              Completion Code : 00
[084h 0132   4]                Enterprise ID : 57010000
[088h 0136   1]                      Command : 00
[089h 0137   2]                    Parameter : 0100
[08Bh 0139   2]                 Boot Options : 7000
[08Dh 0141   2]               Oem Parameters : 1600

[08Fh 0143   1]                Subtable Type : 00 [ASF Information]
[090h 0144   1]                     Reserved : 10
[091h 0145   2]                       Length : 00A0
[093h 0147   1]          Minimum Reset Value : A2
[094h 0148   1]     Minimum Polling Interval : A4
[095h 0149   2]                    System ID : 0000
[097h 0151   4]              Manufacturer ID : 00000000
[09Bh 0155   1]                        Flags : 00
[09Ch 0156   3]                     Reserved : 000000


Raw Table Data: Length 165 (0xA5)

    0000: 41 53 46 21 A5 00 00 00 20 B1 41 43 52 53 59 53  // ASF!.... .ACRSYS
    0010: 41 43 52 50 52 44 43 54 02 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 00 00 10 00 00 FF 01 00 00 00 01 57  // ...............W
    0030: 00 00 00 00 01 00 2C 00 00 00 03 0C 80 23 01 01  // ......,......#..
    0040: 01 01 00 39 10 00 07 00 80 23 02 02 01 01 00 39  // ...9.....#.....9
    0050: 10 01 07 00 80 23 04 04 01 01 00 39 10 02 07 00  // .....#.....9....
    0060: 02 00 18 00 04 04 00 00 00 71 00 00 01 71 02 00  // .........q...q..
    0070: 02 71 01 00 03 71 03 00 03 00 17 00 21 F8 00 00  // .q...q......!...
    0080: 00 1B F0 00 00 00 01 57 00 00 01 00 70 00 16 00  // .......W....p...
    0090: 10 A0 00 A2 A4 00 00 00 00 00 00 00 00 00 00 00  // ................
    00A0: 00 00 00 00 00                                   // .....


BGRT
----
[000h 0000   4]                    Signature : "BGRT"    [Boot Graphics Resource Table]
[004h 0004   4]                 Table Length : 00000038
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 11
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   2]                      Version : 0001
[026h 0038   1]       Status (decoded below) : 00
                                   Displayed : 0
                          Orientation Offset : 0
[027h 0039   1]                   Image Type : 00
[028h 0040   8]                Image Address : 00000000B437A000
[030h 0048   4]                Image OffsetX : 00000240
[034h 0052   4]                Image OffsetY : 000000C4

Raw Table Data: Length 56 (0x38)

    0000: 42 47 52 54 38 00 00 00 01 11 41 43 52 53 59 53  // BGRT8.....ACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 01 00 00 00 00 A0 37 B4 00 00 00 00  // ..........7.....
    0030: 40 02 00 00 C4 00 00 00                          // @.......


BOOT
----
[000h 0000   4]                    Signature : "BOOT"    [Simple Boot Flag Table]
[004h 0004   4]                 Table Length : 00000028
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 69
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   1]          Boot Register Index : 44
[025h 0037   3]                     Reserved : 000000

Raw Table Data: Length 40 (0x28)

    0000: 42 4F 4F 54 28 00 00 00 01 69 41 43 52 53 59 53  // BOOT(....iACRSYS
    0010: 41 43 52 50 52 44 43 54 02 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 44 00 00 00                          // ....D...


CDIT
----
[000h 0000   4]                    Signature : "CDIT"    
[004h 0004   4]                 Table Length : 00000029
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : B2
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000


**** Unknown ACPI table signature [CDIT]


Raw Table Data: Length 41 (0x29)

    0000: 43 44 49 54 29 00 00 00 01 B2 41 43 52 53 59 53  // CDIT).....ACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 01 00 00 00 0A                       // .........


CRAT
----
[000h 0000   4]                    Signature : "CRAT"    
[004h 0004   4]                 Table Length : 000007E8
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : FA
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000


**** Unknown ACPI table signature [CRAT]


Raw Table Data: Length 2024 (0x7E8)

    0000: 43 52 41 54 E8 07 00 00 01 FA 41 43 52 53 59 53  // CRAT......ACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 20 00 00 00 00 00 00 00 00 00 00 00  // .... ...........
    0030: 01 28 00 00 01 00 00 00 00 00 00 00 00 00 00 00  // .(..............
    0040: 00 00 00 00 00 00 0A 00 00 00 00 00 40 00 00 00  // ............@...
    0050: 00 00 00 00 00 00 00 00 01 28 00 00 01 00 00 00  // .........(......
    0060: 00 00 00 00 00 00 0C 00 00 00 00 00 00 00 F4 CF  // ................
    0070: 00 00 00 00 40 00 00 00 00 00 00 00 00 00 00 00  // ....@...........
    0080: 01 28 00 00 01 00 00 00 00 00 00 00 00 00 00 00  // .(..............
    0090: 01 00 00 00 00 00 00 30 01 00 00 00 40 00 00 00  // .......0....@...
    00A0: 00 00 00 00 00 00 00 00 02 40 00 00 0B 00 00 00  // .........@......
    00B0: 00 00 00 00 03 00 00 00 00 00 00 00 00 00 00 00  // ................
    00C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    00D0: 00 00 00 00 20 00 00 00 01 01 40 00 08 00 01 00  // .... .....@.....
    00E0: 00 00 00 00 00 00 00 00 02 40 00 00 0D 00 00 00  // .........@......
    00F0: 00 00 00 00 03 00 00 00 00 00 00 00 00 00 00 00  // ................
    0100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0110: 00 00 00 00 20 00 00 00 01 01 40 00 08 00 01 00  // .... .....@.....
    0120: 00 00 00 00 00 00 00 00 02 40 00 00 0F 00 00 00  // .........@......
    0130: 00 00 00 00 03 00 00 00 00 00 00 00 00 00 00 00  // ................
    0140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0150: 00 00 00 00 00 02 00 00 02 01 40 00 08 02 01 00  // ..........@.....
    0160: 00 00 00 00 00 00 00 00 02 40 00 00 0F 00 00 00  // .........@......
    0170: 00 00 00 00 FF 00 00 00 00 00 00 00 00 00 00 00  // ................
    0180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0190: 00 00 00 00 00 10 00 00 03 01 40 00 10 00 01 00  // ..........@.....
    01A0: 00 00 00 00 00 00 00 00 02 40 00 00 0B 00 00 00  // .........@......
    01B0: 02 00 00 00 0C 00 00 00 00 00 00 00 00 00 00 00  // ................
    01C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    01D0: 00 00 00 00 20 00 00 00 01 01 40 00 08 00 01 00  // .... .....@.....
    01E0: 00 00 00 00 00 00 00 00 02 40 00 00 0D 00 00 00  // .........@......
    01F0: 02 00 00 00 0C 00 00 00 00 00 00 00 00 00 00 00  // ................
    0200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0210: 00 00 00 00 20 00 00 00 01 01 40 00 08 00 01 00  // .... .....@.....
    0220: 00 00 00 00 00 00 00 00 02 40 00 00 0F 00 00 00  // .........@......
    0230: 02 00 00 00 0C 00 00 00 00 00 00 00 00 00 00 00  // ................
    0240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0250: 00 00 00 00 00 02 00 00 02 01 40 00 08 02 01 00  // ..........@.....
    0260: 00 00 00 00 00 00 00 00 02 40 00 00 0B 00 00 00  // .........@......
    0270: 04 00 00 00 30 00 00 00 00 00 00 00 00 00 00 00  // ....0...........
    0280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0290: 00 00 00 00 20 00 00 00 01 01 40 00 08 00 01 00  // .... .....@.....
    02A0: 00 00 00 00 00 00 00 00 02 40 00 00 0D 00 00 00  // .........@......
    02B0: 04 00 00 00 30 00 00 00 00 00 00 00 00 00 00 00  // ....0...........
    02C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    02D0: 00 00 00 00 20 00 00 00 01 01 40 00 08 00 01 00  // .... .....@.....
    02E0: 00 00 00 00 00 00 00 00 02 40 00 00 0F 00 00 00  // .........@......
    02F0: 04 00 00 00 30 00 00 00 00 00 00 00 00 00 00 00  // ....0...........
    0300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0310: 00 00 00 00 00 02 00 00 02 01 40 00 08 02 01 00  // ..........@.....
    0320: 00 00 00 00 00 00 00 00 02 40 00 00 0B 00 00 00  // .........@......
    0330: 06 00 00 00 C0 00 00 00 00 00 00 00 00 00 00 00  // ................
    0340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0350: 00 00 00 00 20 00 00 00 01 01 40 00 08 00 01 00  // .... .....@.....
    0360: 00 00 00 00 00 00 00 00 02 40 00 00 0D 00 00 00  // .........@......
    0370: 06 00 00 00 C0 00 00 00 00 00 00 00 00 00 00 00  // ................
    0380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0390: 00 00 00 00 20 00 00 00 01 01 40 00 08 00 01 00  // .... .....@.....
    03A0: 00 00 00 00 00 00 00 00 02 40 00 00 0F 00 00 00  // .........@......
    03B0: 06 00 00 00 C0 00 00 00 00 00 00 00 00 00 00 00  // ................
    03C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    03D0: 00 00 00 00 00 02 00 00 02 01 40 00 08 02 01 00  // ..........@.....
    03E0: 00 00 00 00 00 00 00 00 03 40 00 00 0B 00 00 00  // .........@......
    03F0: 00 00 00 00 03 00 00 00 00 00 00 00 00 00 00 00  // ................
    0400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0410: 00 00 00 00 01 00 00 00 FF 40 00 00 FF 40 00 00  // .........@...@..
    0420: 0F 40 00 00 00 00 00 00 03 40 00 00 0D 00 00 00  // .@.......@......
    0430: 00 00 00 00 03 00 00 00 00 00 00 00 00 00 00 00  // ................
    0440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0450: 00 00 00 00 01 00 00 00 00 00 FF 40 00 00 FF 40  // ...........@...@
    0460: 00 00 0F 40 00 00 00 00 03 40 00 00 AB 00 00 00  // ...@.....@......
    0470: 00 00 00 00 03 00 00 00 00 00 00 00 00 00 00 00  // ................
    0480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0490: 00 00 00 00 02 00 00 00 04 08 00 00 08 08 00 00  // ................
    04A0: 00 40 00 00 00 00 00 00 03 40 00 00 AD 00 00 00  // .@.......@......
    04B0: 00 00 00 00 03 00 00 00 00 00 00 00 00 00 00 00  // ................
    04C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    04D0: 00 00 00 00 02 00 00 00 00 00 08 04 00 00 08 04  // ................
    04E0: 00 00 00 00 00 00 00 00 03 40 00 00 0B 00 00 00  // .........@......
    04F0: 02 00 00 00 0C 00 00 00 00 00 00 00 00 00 00 00  // ................
    0500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0510: 00 00 00 00 01 00 00 00 FF 40 00 00 FF 40 00 00  // .........@...@..
    0520: 0F 40 00 00 00 00 00 00 03 40 00 00 0D 00 00 00  // .@.......@......
    0530: 02 00 00 00 0C 00 00 00 00 00 00 00 00 00 00 00  // ................
    0540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0550: 00 00 00 00 01 00 00 00 00 00 FF 40 00 00 FF 40  // ...........@...@
    0560: 00 00 0F 40 00 00 00 00 03 40 00 00 AB 00 00 00  // ...@.....@......
    0570: 02 00 00 00 0C 00 00 00 00 00 00 00 00 00 00 00  // ................
    0580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0590: 00 00 00 00 02 00 00 00 04 08 00 00 08 08 00 00  // ................
    05A0: 00 40 00 00 00 00 00 00 03 40 00 00 AD 00 00 00  // .@.......@......
    05B0: 02 00 00 00 0C 00 00 00 00 00 00 00 00 00 00 00  // ................
    05C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    05D0: 00 00 00 00 02 00 00 00 00 00 08 04 00 00 08 04  // ................
    05E0: 00 00 00 00 00 00 00 00 03 40 00 00 0B 00 00 00  // .........@......
    05F0: 04 00 00 00 30 00 00 00 00 00 00 00 00 00 00 00  // ....0...........
    0600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0610: 00 00 00 00 01 00 00 00 FF 40 00 00 FF 40 00 00  // .........@...@..
    0620: 0F 40 00 00 00 00 00 00 03 40 00 00 0D 00 00 00  // .@.......@......
    0630: 04 00 00 00 30 00 00 00 00 00 00 00 00 00 00 00  // ....0...........
    0640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0650: 00 00 00 00 01 00 00 00 00 00 FF 40 00 00 FF 40  // ...........@...@
    0660: 00 00 0F 40 00 00 00 00 03 40 00 00 AB 00 00 00  // ...@.....@......
    0670: 04 00 00 00 30 00 00 00 00 00 00 00 00 00 00 00  // ....0...........
    0680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0690: 00 00 00 00 02 00 00 00 04 08 00 00 08 08 00 00  // ................
    06A0: 00 40 00 00 00 00 00 00 03 40 00 00 AD 00 00 00  // .@.......@......
    06B0: 04 00 00 00 30 00 00 00 00 00 00 00 00 00 00 00  // ....0...........
    06C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    06D0: 00 00 00 00 02 00 00 00 00 00 08 04 00 00 08 04  // ................
    06E0: 00 00 00 00 00 00 00 00 03 40 00 00 0B 00 00 00  // .........@......
    06F0: 06 00 00 00 C0 00 00 00 00 00 00 00 00 00 00 00  // ................
    0700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0710: 00 00 00 00 01 00 00 00 FF 40 00 00 FF 40 00 00  // .........@...@..
    0720: 0F 40 00 00 00 00 00 00 03 40 00 00 0D 00 00 00  // .@.......@......
    0730: 06 00 00 00 C0 00 00 00 00 00 00 00 00 00 00 00  // ................
    0740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0750: 00 00 00 00 01 00 00 00 00 00 FF 40 00 00 FF 40  // ...........@...@
    0760: 00 00 0F 40 00 00 00 00 03 40 00 00 AB 00 00 00  // ...@.....@......
    0770: 06 00 00 00 C0 00 00 00 00 00 00 00 00 00 00 00  // ................
    0780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0790: 00 00 00 00 02 00 00 00 04 08 00 00 08 08 00 00  // ................
    07A0: 00 40 00 00 00 00 00 00 03 40 00 00 AD 00 00 00  // .@.......@......
    07B0: 06 00 00 00 C0 00 00 00 00 00 00 00 00 00 00 00  // ................
    07C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    07D0: 00 00 00 00 02 00 00 00 00 00 08 04 00 00 08 04  // ................
    07E0: 00 00 00 00 00 00 00 00                          // ........


DSDT
----
DefinitionBlock ("", "DSDT", 1, "ACRSYS", "ACRPRDCT", 0x00000002)
{
    /*
     * iASL Warning: There were 11 external control methods found during
     * disassembly, but only 0 were resolved (11 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.APTS, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (_SB_.AWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.WMID, UnknownObj)
    External (_SB_.PCI0.WMID.FEBC, UnknownObj)
    External (_SB_.TPM2.PTS_, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (AFN0, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (AFN2, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (AFN4, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (AFN7, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (AFNC, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (ALIB, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (MPTS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (MWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (WMID, UnknownObj)

    OperationRegion (DBG0, SystemIO, 0x80, One)
    Field (DBG0, ByteAcc, NoLock, Preserve)
    {
        IO80,   8
    }

    OperationRegion (DBG1, SystemIO, 0x80, 0x02)
    Field (DBG1, WordAcc, NoLock, Preserve)
    {
        P80H,   16
    }

    OperationRegion (ACMS, SystemIO, 0x72, 0x02)
    Field (ACMS, ByteAcc, NoLock, Preserve)
    {
        ACMX,   8, 
        ACMA,   8
    }

    IndexField (ACMX, ACMA, ByteAcc, NoLock, Preserve)
    {
        Offset (0xB9), 
        IMEN,   8
    }

    OperationRegion (PSMI, SystemIO, 0xB0, 0x02)
    Field (PSMI, ByteAcc, NoLock, Preserve)
    {
        APMC,   8, 
        APMD,   8
    }

    OperationRegion (PMRG, SystemIO, 0x0CD6, 0x02)
    Field (PMRG, ByteAcc, NoLock, Preserve)
    {
        PMRI,   8, 
        PMRD,   8
    }

    IndexField (PMRI, PMRD, ByteAcc, NoLock, Preserve)
    {
            ,   6, 
        HPEN,   1, 
        Offset (0x60), 
        P1EB,   16, 
        Offset (0xF0), 
            ,   3, 
        RSTU,   1
    }

    OperationRegion (GSMG, SystemMemory, 0xFED81500, 0x03FF)
    Field (GSMG, AnyAcc, NoLock, Preserve)
    {
        Offset (0x5C), 
        Offset (0x5E), 
        GS23,   1, 
            ,   5, 
        GV23,   1, 
        GE23,   1, 
        Offset (0xA0), 
        Offset (0xA2), 
        GS40,   1, 
            ,   5, 
        GV40,   1, 
        GE40,   1
    }

    OperationRegion (GSMM, SystemMemory, 0xFED80000, 0x1000)
    Field (GSMM, AnyAcc, NoLock, Preserve)
    {
        Offset (0x288), 
            ,   1, 
        CLPS,   1, 
        Offset (0x2B0), 
            ,   2, 
        SLPS,   2
    }

    OperationRegion (PMI2, SystemIO, 0x0CD6, 0x02)
    Field (PMI2, AnyAcc, NoLock, Preserve)
    {
        PM2I,   8, 
        PM2D,   8
    }

    IndexField (PM2I, PM2D, ByteAcc, NoLock, Preserve)
    {
        Offset (0xBB), 
            ,   6, 
        PWDE,   1, 
        Offset (0xBC)
    }

    OperationRegion (P1E0, SystemIO, P1EB, 0x04)
    Field (P1E0, ByteAcc, NoLock, Preserve)
    {
            ,   14, 
        PEWS,   1, 
        WSTA,   1, 
            ,   14, 
        PEWD,   1
    }

    OperationRegion (IOCC, SystemIO, 0x0400, 0x80)
    Field (IOCC, ByteAcc, NoLock, Preserve)
    {
        Offset (0x01), 
            ,   2, 
        RTCS,   1
    }

    Name (PRWP, Package (0x02)
    {
        Zero, 
        Zero
    })
    Method (GPRW, 2, NotSerialized)
    {
        PRWP [Zero] = Arg0
        PRWP [One] = Arg1
        If ((DAS3 == Zero))
        {
            If ((Arg1 <= 0x03))
            {
                PRWP [One] = Zero
            }
        }

        Return (PRWP) /* \PRWP */
    }

    Method (SPTS, 1, NotSerialized)
    {
        If ((Arg0 == 0x03))
        {
            RSTU = Zero
        }

        CLPS = One
        SLPS = One
        PEWS = PEWS /* \PEWS */
    }

    Method (SWAK, 1, NotSerialized)
    {
        If ((Arg0 == 0x03))
        {
            RSTU = One
        }

        PEWS = PEWS /* \PEWS */
        PEWD = Zero
    }

    Method (TPST, 1, Serialized)
    {
        Local0 = (Arg0 + 0xB0000000)
        OperationRegion (VARM, SystemIO, 0x80, 0x04)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VARR,   32
        }

        VARR = Local0
    }

    OperationRegion (GNVS, SystemMemory, 0xCCF3CA98, 0x0000018B)
    Field (GNVS, AnyAcc, NoLock, Preserve)
    {
        SMIF,   8, 
        PRM0,   8, 
        PRM1,   8, 
        BRTL,   8, 
        TLST,   8, 
        IGDS,   8, 
        LCDA,   16, 
        CSTE,   16, 
        NSTE,   16, 
        CADL,   16, 
        PADL,   16, 
        LIDS,   8, 
        PWRS,   8, 
        BVAL,   32, 
        ADDL,   16, 
        BCMD,   8, 
        SBFN,   8, 
        DID,    32, 
        INFO,   2048, 
        TOML,   8, 
        TOMH,   8, 
        CEBP,   8, 
        C0LS,   8, 
        C1LS,   8, 
        C0HS,   8, 
        C1HS,   8, 
        ROMS,   32, 
        MUXF,   8, 
        PDDN,   8, 
        CNSB,   8, 
        RDHW,   8, 
        DAS3,   8, 
        TNBH,   8, 
        TCP0,   8, 
        TCP1,   8, 
        ATNB,   8, 
        PCP0,   8, 
        PCP1,   8, 
        PWMN,   8, 
        LPTY,   8, 
        M92D,   8, 
        WKPM,   8, 
        ALST,   8, 
        AFUC,   8, 
        EXUS,   8, 
        GV0E,   8, 
        WLSH,   8, 
        TSSS,   8, 
        AOZP,   8, 
        TZFG,   8, 
        BPS0,   8, 
        NAPC,   8, 
        PCBA,   32, 
        PCBL,   32, 
        WLAN,   8, 
        BLTH,   8, 
        GPSS,   8, 
        NFCS,   8, 
        SBTY,   8, 
        BDID,   16, 
        MWTT,   8, 
        ACPM,   8, 
        KBCS,   8, 
        ACEC,   8, 
        DPTC,   8, 
        ECTL,   8, 
        MM64,   8, 
        HMB1,   64, 
        HMB2,   64, 
        HMM1,   64, 
        HMM2,   64, 
        HML1,   64, 
        HML2,   64, 
        WOVS,   8, 
        TCNT,   8, 
        NPWD,   8
    }

    OperationRegion (OGNS, SystemMemory, 0xCCF3CF18, 0x0000000C)
    Field (OGNS, AnyAcc, Lock, Preserve)
    {
        OG00,   8, 
        OG01,   8, 
        M2WL,   8, 
        THPN,   8, 
        PBAR,   8, 
        THPD,   8, 
        DTEN,   8, 
        SDMO,   8, 
        TBEN,   8, 
        TBNH,   8, 
        RV2I,   8, 
        ISDS,   8
    }

    Method (SCMP, 2, NotSerialized)
    {
        Name (STG1, Buffer (0x50) {})
        Name (STG2, Buffer (0x50) {})
        STG1 = Arg0
        STG2 = Arg1
        If ((SizeOf (Arg0) != SizeOf (Arg1)))
        {
            Return (Zero)
        }

        Local0 = Zero
        While ((Local0 < SizeOf (Arg0)))
        {
            If ((DerefOf (STG1 [Local0]) != DerefOf (STG2 [Local0]
                )))
            {
                Return (Zero)
            }

            Local0++
        }

        Return (One)
    }

    Name (WNOS, Zero)
    Name (MYOS, Zero)
    Name (HTTS, Zero)
    Name (OSTB, Ones)
    Name (TPOS, Zero)
    Name (LINX, Zero)
    Name (OSSP, Zero)
    Method (SEQL, 2, Serialized)
    {
        Local0 = SizeOf (Arg0)
        Local1 = SizeOf (Arg1)
        If ((Local0 != Local1))
        {
            Return (Zero)
        }

        Name (BUF0, Buffer (Local0) {})
        BUF0 = Arg0
        Name (BUF1, Buffer (Local0) {})
        BUF1 = Arg1
        Local2 = Zero
        While ((Local2 < Local0))
        {
            Local3 = DerefOf (BUF0 [Local2])
            Local4 = DerefOf (BUF1 [Local2])
            If ((Local3 != Local4))
            {
                Return (Zero)
            }

            Local2++
        }

        Return (One)
    }

    Method (OSTP, 0, NotSerialized)
    {
        If ((OSTB == Ones))
        {
            If (CondRefOf (\_OSI, Local0))
            {
                OSTB = Zero
                TPOS = Zero
                If (_OSI ("Windows 2001"))
                {
                    OSTB = 0x08
                    TPOS = 0x08
                }

                If (_OSI ("Windows 2001.1"))
                {
                    OSTB = 0x20
                    TPOS = 0x20
                }

                If (_OSI ("Windows 2001 SP1"))
                {
                    OSTB = 0x10
                    TPOS = 0x10
                }

                If (_OSI ("Windows 2001 SP2"))
                {
                    OSTB = 0x11
                    TPOS = 0x11
                }

                If (_OSI ("Windows 2001 SP3"))
                {
                    OSTB = 0x12
                    TPOS = 0x12
                }

                If (_OSI ("Windows 2006"))
                {
                    OSTB = 0x40
                    TPOS = 0x40
                }

                If (_OSI ("Windows 2006 SP1"))
                {
                    OSTB = 0x41
                    TPOS = 0x41
                    OSSP = One
                }

                If (_OSI ("Windows 2009"))
                {
                    OSSP = One
                    OSTB = 0x50
                    TPOS = 0x50
                }

                If (_OSI ("Windows 2012"))
                {
                    OSSP = One
                    OSTB = 0x60
                    TPOS = 0x60
                }

                If (_OSI ("Windows 2013"))
                {
                    OSSP = One
                    OSTB = 0x61
                    TPOS = 0x61
                }

                If (_OSI ("Windows 2015"))
                {
                    OSSP = One
                    OSTB = 0x70
                    TPOS = 0x70
                }

                If (_OSI ("Linux"))
                {
                    LINX = One
                    OSTB = 0x80
                    TPOS = 0x80
                }
            }
            ElseIf (CondRefOf (\_OS, Local0))
            {
                If (SEQL (_OS, "Microsoft Windows"))
                {
                    OSTB = One
                    TPOS = One
                }
                ElseIf (SEQL (_OS, "Microsoft WindowsME: Millennium Edition"))
                {
                    OSTB = 0x02
                    TPOS = 0x02
                }
                ElseIf (SEQL (_OS, "Microsoft Windows NT"))
                {
                    OSTB = 0x04
                    TPOS = 0x04
                }
                Else
                {
                    OSTB = Zero
                    TPOS = Zero
                }
            }
            Else
            {
                OSTB = Zero
                TPOS = Zero
            }
        }

        Return (OSTB) /* \OSTB */
    }

    Name (BUFN, Zero)
    Name (MBUF, Buffer (0x1000) {})
    OperationRegion (MDBG, SystemMemory, 0xCCEF3018, 0x00001004)
    Field (MDBG, AnyAcc, Lock, Preserve)
    {
        MDG0,   32768
    }

    Method (DB2H, 1, Serialized)
    {
        SHOW (Arg0)
        MDGC (0x20)
        MDG0 = MBUF /* \MBUF */
    }

    Method (DW2H, 1, Serialized)
    {
        Local0 = Arg0
        Local1 = (Arg0 >> 0x08)
        Local0 &= 0xFF
        Local1 &= 0xFF
        DB2H (Local1)
        BUFN--
        DB2H (Local0)
    }

    Method (DD2H, 1, Serialized)
    {
        Local0 = Arg0
        Local1 = (Arg0 >> 0x10)
        Local0 &= 0xFFFF
        Local1 &= 0xFFFF
        DW2H (Local1)
        BUFN--
        DW2H (Local0)
    }

    Method (MBGS, 1, Serialized)
    {
        Local0 = SizeOf (Arg0)
        Name (BUFS, Buffer (Local0) {})
        BUFS = Arg0
        MDGC (0x20)
        While (Local0)
        {
            MDGC (DerefOf (BUFS [(SizeOf (Arg0) - Local0)]))
            Local0--
        }

        MDG0 = MBUF /* \MBUF */
    }

    Method (SHOW, 1, Serialized)
    {
        MDGC (NTOC ((Arg0 >> 0x04)))
        MDGC (NTOC (Arg0))
    }

    Method (LINE, 0, Serialized)
    {
        Local0 = BUFN /* \BUFN */
        Local0 &= 0x0F
        While (Local0)
        {
            MDGC (Zero)
            Local0++
            Local0 &= 0x0F
        }
    }

    Method (MDGC, 1, Serialized)
    {
        MBUF [BUFN] = Arg0
        BUFN += One
        If ((BUFN > 0x0FFF))
        {
            BUFN &= 0x0FFF
            UP_L (One)
        }
    }

    Method (UP_L, 1, Serialized)
    {
        Local2 = Arg0
        Local2 <<= 0x04
        MOVE (Local2)
        Local3 = (0x1000 - Local2)
        While (Local2)
        {
            MBUF [Local3] = Zero
            Local3++
            Local2--
        }
    }

    Method (MOVE, 1, Serialized)
    {
        Local4 = Arg0
        BUFN = Zero
        Local5 = (0x1000 - Local4)
        While (Local5)
        {
            Local5--
            MBUF [BUFN] = DerefOf (MBUF [Local4])
            BUFN++
            Local4++
        }
    }

    Method (NTOC, 1, Serialized)
    {
        Local0 = (Arg0 & 0x0F)
        If ((Local0 < 0x0A))
        {
            Local0 += 0x30
        }
        Else
        {
            Local0 += 0x37
        }

        Return (Local0)
    }

    Scope (_SB)
    {
        Device (PLTF)
        {
            Name (_HID, "ACPI0010" /* Processor Container Device */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A05") /* Generic Container Device */)  // _CID: Compatible ID
            Name (_UID, One)  // _UID: Unique ID
            Device (C000)
            {
                Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                Name (_UID, Zero)  // _UID: Unique ID
            }

            Device (C001)
            {
                Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                Name (_UID, One)  // _UID: Unique ID
            }

            Device (C002)
            {
                Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                Name (_UID, 0x02)  // _UID: Unique ID
            }

            Device (C003)
            {
                Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                Name (_UID, 0x03)  // _UID: Unique ID
            }

            Device (C004)
            {
                Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                Name (_UID, 0x04)  // _UID: Unique ID
            }

            Device (C005)
            {
                Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                Name (_UID, 0x05)  // _UID: Unique ID
            }

            Device (C006)
            {
                Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                Name (_UID, 0x06)  // _UID: Unique ID
            }

            Device (C007)
            {
                Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                Name (_UID, 0x07)  // _UID: Unique ID
            }

            Device (C008)
            {
                Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                Name (_UID, 0x08)  // _UID: Unique ID
            }

            Device (C009)
            {
                Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                Name (_UID, 0x09)  // _UID: Unique ID
            }

            Device (C00A)
            {
                Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                Name (_UID, 0x0A)  // _UID: Unique ID
            }

            Device (C00B)
            {
                Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                Name (_UID, 0x0B)  // _UID: Unique ID
            }

            Device (C00C)
            {
                Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                Name (_UID, 0x0C)  // _UID: Unique ID
            }

            Device (C00D)
            {
                Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                Name (_UID, 0x0D)  // _UID: Unique ID
            }

            Device (C00E)
            {
                Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                Name (_UID, 0x0E)  // _UID: Unique ID
            }

            Device (C00F)
            {
                Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
                Name (_UID, 0x0F)  // _UID: Unique ID
            }
        }
    }

    Name (_S0, Package (0x04)  // _S0_: S0 System State
    {
        Zero, 
        Zero, 
        Zero, 
        Zero
    })
    If ((CNSB == Zero))
    {
        If ((DAS3 == One))
        {
            Name (_S3, Package (0x04)  // _S3_: S3 System State
            {
                0x03, 
                0x03, 
                Zero, 
                Zero
            })
        }
    }

    Name (_S4, Package (0x04)  // _S4_: S4 System State
    {
        0x04, 
        0x04, 
        Zero, 
        Zero
    })
    Name (_S5, Package (0x04)  // _S5_: S5 System State
    {
        0x05, 
        0x05, 
        Zero, 
        Zero
    })
    Scope (_GPE)
    {
        Method (_L0E, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            TPST (0x390E)
            Notify (\_SB.PCI0.GPP3, 0x02) // Device Wake
        }

        Method (_L0F, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            TPST (0x390F)
            Notify (\_SB.PCI0.GPP2, 0x02) // Device Wake
        }

        Method (_L19, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            TPST (0x3919)
            Notify (\_SB.PCI0.GP17.XHC0, 0x02) // Device Wake
            Notify (\_SB.PCI0.GP17.XHC1, 0x02) // Device Wake
            Notify (\_SB.PWRB, 0x02) // Device Wake
        }
    }

    Name (PICM, Zero)
    Name (GPIC, Zero)
    Method (_PIC, 1, NotSerialized)  // _PIC: Interrupt Model
    {
        PICM = Arg0
        GPIC = Arg0
        If (PICM)
        {
            \_SB.DSPI ()
            If (NAPC)
            {
                \_SB.PCI0.NAPE ()
            }
        }
    }

    Method (_PTS, 1, NotSerialized)  // _PTS: Prepare To Sleep
    {
        SPTS (Arg0)
        If ((Arg0 == One))
        {
            \_SB.S80H (0x51)
        }

        If ((Arg0 == 0x03))
        {
            \_SB.S80H (0x53)
            SLPS = One
        }

        If ((Arg0 == 0x04))
        {
            \_SB.S80H (0x54)
            SLPS = One
            RSTU = One
            \_SB.PCI0.LPC0.EC0.FLS4 = One
            \_SB.APS4 = \_SB.PCI0.LPC0.EC0.APBF
            \_SB.OSS4 = One
        }

        If ((Arg0 == 0x05))
        {
            \_SB.S80H (0x55)
            If ((WKPM == One))
            {
                PWDE = One
            }

            BCMD = 0x90
            \_SB.BSMI (Zero)
            \_SB.GSMI (0x03)
        }

        If ((CNSB == One)) {}
        \_SB.PTWL = \_SB.PCI0.LPC0.EC0.WLAN
        \_SB.PTBT = \_SB.PCI0.LPC0.EC0.BLTH
        \_SB.PT3G = \_SB.PCI0.LPC0.EC0.ST3G
        \_SB.RDWL = \_SB.PCI0.LPC0.EC0.WLST
        \_SB.RDBT = \_SB.PCI0.LPC0.EC0.BLTS
        \_SB.RD3G = \_SB.PCI0.LPC0.EC0.ED3G
        \_SB.TPDS = \_SB.PCI0.LPC0.EC0.TOHP
        If (((Arg0 == 0x04) || (Arg0 == 0x05)))
        {
            If ((TPOS >= 0x61))
            {
                \_SB.PCI0.LPC0.EC0.TOHP = Zero
            }
        }

        \_SB.PCI0.LPC0.EC0.MTHB (Package (0x04)
            {
                0x3A98, 
                0x3A98, 
                0x3A98, 
                0x55
            })
        If (CondRefOf (\_SB.TPM2.PTS))
        {
            \_SB.TPM2.PTS (Arg0)
        }

        \_SB.APTS (Arg0, MPTS (Arg0))
    }

    Method (_WAK, 1, NotSerialized)  // _WAK: Wake
    {
        SWAK (Arg0)
        \_SB.AWAK (Arg0)
        If (((Arg0 == 0x03) || (Arg0 == 0x04)))
        {
            If ((GPIC != Zero))
            {
                \_SB.DSPI ()
                If (NAPC)
                {
                    \_SB.PCI0.NAPE ()
                }
            }
        }

        If ((Arg0 == 0x03))
        {
            \_SB.S80H (0xE3)
            If ((\_SB.WUSB == One))
            {
                \_SB.WUSB = Zero
                Notify (\_SB.PWRB, 0x02) // Device Wake
            }

            If ((\_SB.WRTC == One))
            {
                \_SB.WRTC = Zero
                Notify (\_SB.PWRB, 0x02) // Device Wake
            }
        }

        If ((Arg0 == 0x04))
        {
            \_SB.S80H (0xE4)
            \_SB.PCI0.LPC0.EC0.APBF = \_SB.APS4
            Notify (\_SB.PWRB, 0x02) // Device Wake
        }

        If ((TPOS >= 0x60))
        {
            \_SB.PCI0.LPC0.EC0.OSW8 = One
        }
        Else
        {
            \_SB.PCI0.LPC0.EC0.OSW8 = Zero
        }

        \_SB.ACAD.ACST = 0xFF
        MWAK (Arg0)
        \_SB.PCI0.LPC0.EC0.WLAN = \_SB.PTWL
        \_SB.PCI0.LPC0.EC0.BLTH = \_SB.PTBT
        \_SB.PCI0.LPC0.EC0.ST3G = \_SB.PT3G
        Sleep (0x0A)
        \_SB.PCI0.LPC0.EC0.WLST = \_SB.RDWL
        \_SB.PCI0.LPC0.EC0.BLTS = \_SB.RDBT
        \_SB.PCI0.LPC0.EC0.ED3G = \_SB.RD3G
        \_SB.PCI0.LPC0.EC0.CPLE = One
        \_SB.PCI0.LPC0.EC0.TOHP = \_SB.TPDS
        If ((Arg0 == 0x04))
        {
            \_SB.PCI0.LPC0.EC0.TPRD = One
        }

        \_SB.PCI0.LPC0.EC0.UPTM ()
        Return (Zero)
    }

    Scope (_SB)
    {
        Device (PWRB)
        {
            Name (_HID, EisaId ("PNP0C0C") /* Power Button Device */)  // _HID: Hardware ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0B)
            }
        }

        Device (PCI0)
        {
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_BBN, Zero)  // _BBN: BIOS Bus Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                If ((GPIC != Zero))
                {
                    DSPI ()
                    If (NAPC)
                    {
                        NAPE ()
                    }
                }

                OSTP ()
            }

            Name (SUPP, Zero)
            Name (CTRL, Zero)
            Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
            {
                CreateDWordField (Arg3, Zero, CDW1)
                CreateDWordField (Arg3, 0x04, CDW2)
                CreateDWordField (Arg3, 0x08, CDW3)
                If ((Arg0 == ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */))
                {
                    SUPP = CDW2 /* \_SB_.PCI0._OSC.CDW2 */
                    CTRL = CDW3 /* \_SB_.PCI0._OSC.CDW3 */
                    If ((TBEN == One))
                    {
                        If ((TBNH != Zero))
                        {
                            CTRL &= 0xFFFFFFF5
                        }
                        Else
                        {
                            CTRL &= 0xFFFFFFF4
                        }
                    }

                    If (((SUPP & 0x16) != 0x16))
                    {
                        CTRL &= 0x1E
                    }

                    CTRL &= 0x1D
                    If (~(CDW1 & One))
                    {
                        If ((CTRL & One)) {}
                        If ((CTRL & 0x04)) {}
                        If ((CTRL & 0x10)) {}
                    }

                    If ((Arg1 != One))
                    {
                        CDW1 |= 0x08
                    }

                    If ((CDW3 != CTRL))
                    {
                        CDW1 |= 0x10
                    }

                    CDW3 = CTRL /* \_SB_.PCI0.CTRL */
                    Return (Arg3)
                }
                Else
                {
                    CDW1 |= 0x04
                    Return (Arg3)
                }
            }

            Method (TOM, 0, NotSerialized)
            {
                Local0 = (TOML * 0x00010000)
                Local1 = (TOMH * 0x01000000)
                Local0 += Local1
                Return (Local0)
            }

            Name (CRES, ResourceTemplate ()
            {
                WordBusNumber (ResourceProducer, MinFixed, MaxFixed, SubDecode,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x00FF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0100,             // Length
                    0x00,, )
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x0CF7,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0CF8,             // Length
                    0x00,, , TypeStatic, DenseTranslation)
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x0D00,             // Range Minimum
                    0xFFFF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0xF300,             // Length
                    ,, , TypeStatic, DenseTranslation)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000A0000,         // Range Minimum
                    0x000BFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00020000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, Cacheable, ReadOnly,
                    0x00000000,         // Granularity
                    0x000C0000,         // Range Minimum
                    0x000C3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, Cacheable, ReadOnly,
                    0x00000000,         // Granularity
                    0x000C4000,         // Range Minimum
                    0x000C7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadOnly,
                    0x00000000,         // Granularity
                    0x000C8000,         // Range Minimum
                    0x000CBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadOnly,
                    0x00000000,         // Granularity
                    0x000CC000,         // Range Minimum
                    0x000CFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D0000,         // Range Minimum
                    0x000D3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D4000,         // Range Minimum
                    0x000D7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D8000,         // Range Minimum
                    0x000DBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000DC000,         // Range Minimum
                    0x000DFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E0000,         // Range Minimum
                    0x000E3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E4000,         // Range Minimum
                    0x000E7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E8000,         // Range Minimum
                    0x000EBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000EC000,         // Range Minimum
                    0x000EFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x80000000,         // Range Minimum
                    0xF7FFFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x78000000,         // Length
                    0x00,, _Y00, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0xFC000000,         // Range Minimum
                    0xFEAFFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x02B00000,         // Length
                    0x00,, _Y01, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0xFED45000,         // Range Minimum
                    0xFED811FF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x0003C200,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0xFED81900,         // Range Minimum
                    0xFED81FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00000700,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0xFEDC0000,         // Range Minimum
                    0xFEDC0FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00001000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0xFEDC6000,         // Range Minimum
                    0xFEDC6FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00001000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                IO (Decode16,
                    0x0CF8,             // Range Minimum
                    0x0CF8,             // Range Maximum
                    0x01,               // Alignment
                    0x08,               // Length
                    )
                QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x0000000000000000, // Granularity
                    0x0000000000000000, // Range Minimum
                    0x0000000000000000, // Range Maximum
                    0x0000000000000000, // Translation Offset
                    0x0000000000000000, // Length
                    ,, _Y02, AddressRangeMemory, TypeStatic)
                QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x0000000000000000, // Granularity
                    0x0000000000000000, // Range Minimum
                    0x0000000000000000, // Range Maximum
                    0x0000000000000000, // Translation Offset
                    0x0000000000000000, // Length
                    ,, _Y03, AddressRangeMemory, TypeStatic)
            })
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateDWordField (CRES, \_SB.PCI0._Y00._MIN, BTMN)  // _MIN: Minimum Base Address
                CreateDWordField (CRES, \_SB.PCI0._Y00._MAX, BTMX)  // _MAX: Maximum Base Address
                CreateDWordField (CRES, \_SB.PCI0._Y00._LEN, BTLN)  // _LEN: Length
                CreateDWordField (CRES, \_SB.PCI0._Y01._MIN, BTN1)  // _MIN: Minimum Base Address
                CreateDWordField (CRES, \_SB.PCI0._Y01._MAX, BTX1)  // _MAX: Maximum Base Address
                CreateDWordField (CRES, \_SB.PCI0._Y01._LEN, BTL1)  // _LEN: Length
                BTMN = TOM ()
                BTMX = (PCBA - One)
                BTLN = (PCBA - BTMN) /* \_SB_.PCI0._CRS.BTMN */
                BTN1 = (PCBL + One)
                BTL1 = (BTX1 - BTN1) /* \_SB_.PCI0._CRS.BTN1 */
                BTL1 += One
                If ((MM64 == One))
                {
                    CreateQWordField (CRES, \_SB.PCI0._Y02._MIN, M1MN)  // _MIN: Minimum Base Address
                    CreateQWordField (CRES, \_SB.PCI0._Y02._MAX, M1MX)  // _MAX: Maximum Base Address
                    CreateQWordField (CRES, \_SB.PCI0._Y02._LEN, M1LN)  // _LEN: Length
                    M1MN = HMB1 /* \HMB1 */
                    M1MX = HMM1 /* \HMM1 */
                    M1LN = HML1 /* \HML1 */
                    CreateQWordField (CRES, \_SB.PCI0._Y03._MIN, M2MN)  // _MIN: Minimum Base Address
                    CreateQWordField (CRES, \_SB.PCI0._Y03._MAX, M2MX)  // _MAX: Maximum Base Address
                    CreateQWordField (CRES, \_SB.PCI0._Y03._LEN, M2LN)  // _LEN: Length
                    M2MN = HMB2 /* \HMB2 */
                    M2MX = HMM2 /* \HMM2 */
                    M2LN = HML2 /* \HML2 */
                }

                Return (CRES) /* \_SB_.PCI0.CRES */
            }

            Device (MEMR)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (BAR3, 0xFDE00000)
                Name (MEM1, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00000000,         // Address Length
                        _Y04)
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00000000,         // Address Length
                        _Y05)
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00000000,         // Address Length
                        _Y06)
                })
                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y04._BAS, MB01)  // _BAS: Base Address
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y04._LEN, ML01)  // _LEN: Length
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y05._BAS, MB02)  // _BAS: Base Address
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y05._LEN, ML02)  // _LEN: Length
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y06._BAS, MB03)  // _BAS: Base Address
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y06._LEN, ML03)  // _LEN: Length
                    If (GPIC)
                    {
                        MB01 = 0xFEC00000
                        MB02 = 0xFEE00000
                        ML01 = 0x1000
                        If (NAPC)
                        {
                            ML01 += 0x1000
                        }

                        ML02 = 0x1000
                    }

                    If ((BAR3 != 0xFFF00000))
                    {
                        MB03 = BAR3 /* \_SB_.PCI0.MEMR.BAR3 */
                        ML03 = 0x00100000
                    }

                    Return (MEM1) /* \_SB_.PCI0.MEMR.MEM1 */
                }
            }

            Mutex (NAPM, 0x00)
            Method (NAPE, 0, NotSerialized)
            {
                Acquire (NAPM, 0xFFFF)
                Local0 = (PCBA + 0xB8)
                OperationRegion (VARM, SystemMemory, Local0, 0x08)
                Field (VARM, DWordAcc, NoLock, Preserve)
                {
                    NAPX,   32, 
                    NAPD,   32
                }

                Local1 = NAPX /* \_SB_.PCI0.NAPE.NAPX */
                NAPX = 0x14300000
                Local0 = NAPD /* \_SB_.PCI0.NAPE.NAPD */
                Local0 &= 0xFFFFFFEF
                NAPD = Local0
                NAPX = Local1
                Release (NAPM)
            }

            Name (PR00, Package (0x0E)
            {
                Package (0x04)
                {
                    0x0001FFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    One, 
                    LNKB, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    0x02, 
                    LNKC, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0002FFFF, 
                    Zero, 
                    LNKE, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0002FFFF, 
                    One, 
                    LNKF, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0002FFFF, 
                    0x02, 
                    LNKG, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0002FFFF, 
                    0x03, 
                    LNKH, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0008FFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0008FFFF, 
                    One, 
                    LNKB, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0008FFFF, 
                    0x02, 
                    LNKC, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    Zero, 
                    LNKA, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    One, 
                    LNKB, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    0x02, 
                    LNKC, 
                    Zero
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    0x03, 
                    LNKD, 
                    Zero
                }
            })
            Name (AR00, Package (0x0E)
            {
                Package (0x04)
                {
                    0x0001FFFF, 
                    Zero, 
                    Zero, 
                    0x10
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    One, 
                    Zero, 
                    0x11
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    0x02, 
                    Zero, 
                    0x12
                }, 

                Package (0x04)
                {
                    0x0002FFFF, 
                    Zero, 
                    Zero, 
                    0x14
                }, 

                Package (0x04)
                {
                    0x0002FFFF, 
                    One, 
                    Zero, 
                    0x15
                }, 

                Package (0x04)
                {
                    0x0002FFFF, 
                    0x02, 
                    Zero, 
                    0x16
                }, 

                Package (0x04)
                {
                    0x0002FFFF, 
                    0x03, 
                    Zero, 
                    0x17
                }, 

                Package (0x04)
                {
                    0x0008FFFF, 
                    Zero, 
                    Zero, 
                    0x10
                }, 

                Package (0x04)
                {
                    0x0008FFFF, 
                    One, 
                    Zero, 
                    0x11
                }, 

                Package (0x04)
                {
                    0x0008FFFF, 
                    0x02, 
                    Zero, 
                    0x12
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    Zero, 
                    Zero, 
                    0x10
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    One, 
                    Zero, 
                    0x11
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    0x02, 
                    Zero, 
                    0x12
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    0x03, 
                    Zero, 
                    0x13
                }
            })
            Name (NR00, Package (0x0E)
            {
                Package (0x04)
                {
                    0x0001FFFF, 
                    Zero, 
                    Zero, 
                    0x28
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    One, 
                    Zero, 
                    0x29
                }, 

                Package (0x04)
                {
                    0x0001FFFF, 
                    0x02, 
                    Zero, 
                    0x2A
                }, 

                Package (0x04)
                {
                    0x0002FFFF, 
                    Zero, 
                    Zero, 
                    0x24
                }, 

                Package (0x04)
                {
                    0x0002FFFF, 
                    One, 
                    Zero, 
                    0x25
                }, 

                Package (0x04)
                {
                    0x0002FFFF, 
                    0x02, 
                    Zero, 
                    0x26
                }, 

                Package (0x04)
                {
                    0x0002FFFF, 
                    0x03, 
                    Zero, 
                    0x27
                }, 

                Package (0x04)
                {
                    0x0008FFFF, 
                    Zero, 
                    Zero, 
                    0x20
                }, 

                Package (0x04)
                {
                    0x0008FFFF, 
                    One, 
                    Zero, 
                    0x21
                }, 

                Package (0x04)
                {
                    0x0008FFFF, 
                    One, 
                    Zero, 
                    0x22
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    Zero, 
                    Zero, 
                    0x10
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    One, 
                    Zero, 
                    0x11
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    0x02, 
                    Zero, 
                    0x12
                }, 

                Package (0x04)
                {
                    0x0014FFFF, 
                    0x03, 
                    Zero, 
                    0x13
                }
            })
            Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
            {
                If (PICM)
                {
                    If (NAPC)
                    {
                        Return (NR00) /* \_SB_.PCI0.NR00 */
                    }
                    Else
                    {
                        Return (AR00) /* \_SB_.PCI0.AR00 */
                    }
                }
                Else
                {
                    Return (PR00) /* \_SB_.PCI0.PR00 */
                }
            }

            Device (GPP0)
            {
                Name (_ADR, 0x00010001)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x08, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x08, Zero))
                    }
                }

                Name (PR01, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKA, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKB, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKC, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKD, 
                        Zero
                    }
                })
                Name (AR01, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x10
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x11
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x12
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x13
                    }
                })
                Name (NR01, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x18
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x19
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x1A
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x1B
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (NAPC)
                        {
                            Return (NR01) /* \_SB_.PCI0.GPP0.NR01 */
                        }
                        Else
                        {
                            Return (AR01) /* \_SB_.PCI0.GPP0.AR01 */
                        }
                    }
                    Else
                    {
                        Return (PR01) /* \_SB_.PCI0.GPP0.PR01 */
                    }
                }
            }

            Device (GPP1)
            {
                Name (_ADR, 0x00010002)  // _ADR: Address
                Name (PR02, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKE, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKF, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKG, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKH, 
                        Zero
                    }
                })
                Name (AR02, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x14
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x15
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x16
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x17
                    }
                })
                Name (NR02, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x1C
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x1D
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x1E
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x1F
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (NAPC)
                        {
                            Return (NR02) /* \_SB_.PCI0.GPP1.NR02 */
                        }
                        Else
                        {
                            Return (AR02) /* \_SB_.PCI0.GPP1.AR02 */
                        }
                    }
                    Else
                    {
                        Return (PR02) /* \_SB_.PCI0.GPP1.PR02 */
                    }
                }
            }

            Device (GPP2)
            {
                Name (_ADR, 0x00010003)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x0F, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x0F, Zero))
                    }
                }

                Name (PR03, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKA, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKB, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKC, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKD, 
                        Zero
                    }
                })
                Name (AR03, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x10
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x11
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x12
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x13
                    }
                })
                Name (NR03, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x20
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x21
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x22
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x23
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (NAPC)
                        {
                            Return (NR03) /* \_SB_.PCI0.GPP2.NR03 */
                        }
                        Else
                        {
                            Return (AR03) /* \_SB_.PCI0.GPP2.AR03 */
                        }
                    }
                    Else
                    {
                        Return (PR03) /* \_SB_.PCI0.GPP2.PR03 */
                    }
                }
            }

            Device (GPP3)
            {
                Name (_ADR, 0x00020001)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x0E, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x0E, Zero))
                    }
                }

                Name (PR04, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKE, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKF, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKG, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKH, 
                        Zero
                    }
                })
                Name (AR04, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x14
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x15
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x16
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x17
                    }
                })
                Name (NR04, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x24
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x25
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x26
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x27
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (NAPC)
                        {
                            Return (NR04) /* \_SB_.PCI0.GPP3.NR04 */
                        }
                        Else
                        {
                            Return (AR04) /* \_SB_.PCI0.GPP3.AR04 */
                        }
                    }
                    Else
                    {
                        Return (PR04) /* \_SB_.PCI0.GPP3.PR04 */
                    }
                }

                Device (PXSX)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    OperationRegion (RPXX, PCI_Config, Zero, 0x10)
                    Field (RPXX, AnyAcc, NoLock, Preserve)
                    {
                        VDID,   32
                    }

                    OperationRegion (FLDR, PCI_Config, 0x44, 0x06)
                    Field (FLDR, ByteAcc, NoLock, Preserve)
                    {
                        DCAP,   32, 
                        DCTR,   16
                    }

                    Name (SPLX, Package (0x04)
                    {
                        Zero, 
                        Package (0x03)
                        {
                            0x80000000, 
                            0x80000000, 
                            0x80000000
                        }, 

                        Package (0x03)
                        {
                            0x80000000, 
                            0x80000000, 
                            0x80000000
                        }, 

                        Package (0x03)
                        {
                            0x80000000, 
                            0x80000000, 
                            0x80000000
                        }
                    })
                    Method (SPLC, 0, Serialized)
                    {
                        DerefOf (SPLX [One]) [Zero] = 0x07
                        DerefOf (SPLX [One]) [One] = 0x0640
                        DerefOf (SPLX [One]) [0x02] = 0x7530
                        DerefOf (SPLX [0x02]) [Zero] = 0x10
                        DerefOf (SPLX [0x02]) [One] = 0x0640
                        DerefOf (SPLX [0x02]) [0x02] = 0x7530
                        DerefOf (SPLX [0x03]) [Zero] = 0x14
                        DerefOf (SPLX [0x03]) [One] = 0x041A
                        DerefOf (SPLX [0x03]) [0x02] = 0x7530
                        Return (SPLX) /* \_SB_.PCI0.GPP3.PXSX.SPLX */
                    }

                    PowerResource (WRST, 0x05, 0x0000)
                    {
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            Return (One)
                        }

                        Method (_ON, 0, NotSerialized)  // _ON_: Power On
                        {
                        }

                        Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
                        {
                        }

                        Method (_RST, 0, NotSerialized)  // _RST: Device Reset
                        {
                            If ((DCAP & 0x10000000))
                            {
                                Local0 = DCTR /* \_SB_.PCI0.GPP3.PXSX.DCTR */
                                Local0 |= 0x8000
                                DCTR = Local0
                            }
                        }
                    }

                    Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
                    {
                        WRST
                    })
                    Name (WANX, Package (0x03)
                    {
                        Zero, 
                        Package (0x03)
                        {
                            0x80000000, 
                            0x80000000, 
                            0x80000000
                        }, 

                        Package (0x03)
                        {
                            0x80000000, 
                            0x80000000, 
                            0x80000000
                        }
                    })
                    Method (WAND, 0, Serialized)
                    {
                        DerefOf (WANX [One]) [Zero] = Zero
                        DerefOf (WANX [One]) [One] = 0x32
                        DerefOf (WANX [One]) [0x02] = 0x32
                        DerefOf (WANX [0x02]) [Zero] = One
                        DerefOf (WANX [0x02]) [One] = 0x32
                        DerefOf (WANX [0x02]) [0x02] = 0x32
                        Return (WANX) /* \_SB_.PCI0.GPP3.PXSX.WANX */
                    }

                    Name (WRDX, Package (0x03)
                    {
                        Zero, 
                        Package (0x02)
                        {
                            0x80000000, 
                            0x8000
                        }, 

                        Package (0x02)
                        {
                            0x80000000, 
                            0x8000
                        }
                    })
                    Method (WRDD, 0, Serialized)
                    {
                        DerefOf (WRDX [One]) [Zero] = 0x07
                        If ((SPRG == 0x0D))
                        {
                            DerefOf (WRDX [One]) [One] = 0x4944
                        }
                        Else
                        {
                            DerefOf (WRDX [One]) [One] = 0x4150
                        }

                        DerefOf (WRDX [0x02]) [Zero] = 0x10
                        If ((SPRG == 0x0D))
                        {
                            DerefOf (WRDX [0x02]) [One] = 0x4944
                        }
                        Else
                        {
                            DerefOf (WRDX [0x02]) [One] = 0x4150
                        }

                        Return (WRDX) /* \_SB_.PCI0.GPP3.PXSX.WRDX */
                    }

                    Name (WRDY, Package (0x03)
                    {
                        Zero, 
                        Package (0x0C)
                        {
                            0x07, 
                            0x80, 
                            0x80, 
                            0x80, 
                            0x80, 
                            0x80, 
                            0x80, 
                            0x80, 
                            0x80, 
                            0x80, 
                            0x80, 
                            0x80
                        }, 

                        Package (0x06)
                        {
                            0x10, 
                            0x80, 
                            0x80, 
                            0x80, 
                            0x80, 
                            0x80
                        }
                    })
                    Method (WRDS, 0, Serialized)
                    {
                        DerefOf (WRDY [One]) [One] = Zero
                        DerefOf (WRDY [One]) [0x02] = Zero
                        DerefOf (WRDY [One]) [0x03] = Zero
                        DerefOf (WRDY [One]) [0x04] = Zero
                        DerefOf (WRDY [One]) [0x05] = Zero
                        DerefOf (WRDY [One]) [0x06] = Zero
                        DerefOf (WRDY [One]) [0x07] = Zero
                        DerefOf (WRDY [One]) [0x08] = Zero
                        DerefOf (WRDY [One]) [0x09] = Zero
                        DerefOf (WRDY [One]) [0x0A] = Zero
                        DerefOf (WRDY [One]) [0x0B] = Zero
                        DerefOf (WRDY [0x02]) [One] = One
                        DerefOf (WRDY [0x02]) [0x02] = Zero
                        DerefOf (WRDY [0x02]) [0x03] = Zero
                        DerefOf (WRDY [0x02]) [0x04] = Zero
                        DerefOf (WRDY [0x02]) [0x05] = Zero
                        Return (WRDY) /* \_SB_.PCI0.GPP3.PXSX.WRDY */
                    }

                    Method (AWVC, 0, Serialized)
                    {
                        Return (Zero)
                    }

                    Method (WOWG, 0, Serialized)
                    {
                        Return (Zero)
                    }

                    Method (WIST, 0, Serialized)
                    {
                        If (CondRefOf (VDID))
                        {
                            Switch (ToInteger (VDID))
                            {
                                Case (0x095A8086)
                                {
                                    Return (One)
                                }
                                Case (0x095B8086)
                                {
                                    Return (One)
                                }
                                Case (0x31658086)
                                {
                                    Return (One)
                                }
                                Case (0x31668086)
                                {
                                    Return (One)
                                }
                                Case (0x08B18086)
                                {
                                    Return (One)
                                }
                                Case (0x08B28086)
                                {
                                    Return (One)
                                }
                                Case (0x08B38086)
                                {
                                    Return (One)
                                }
                                Case (0x08B48086)
                                {
                                    Return (One)
                                }
                                Case (0x24F38086)
                                {
                                    Return (One)
                                }
                                Case (0x24F48086)
                                {
                                    Return (One)
                                }
                                Case (0x24F58086)
                                {
                                    Return (One)
                                }
                                Case (0x24F68086)
                                {
                                    Return (One)
                                }
                                Case (0x24FD8086)
                                {
                                    Return (One)
                                }
                                Case (0x24FB8086)
                                {
                                    Return (One)
                                }
                                Case (0x25268086)
                                {
                                    Return (One)
                                }
                                Case (0x27238086)
                                {
                                    Return (One)
                                }
                                Default
                                {
                                    Return (Zero)
                                }

                            }
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }
                }
            }

            Device (GPP4)
            {
                Name (_ADR, 0x00020002)  // _ADR: Address
                Name (PR05, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKA, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKB, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKC, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKD, 
                        Zero
                    }
                })
                Name (AR05, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x10
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x11
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x12
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x13
                    }
                })
                Name (NR05, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x28
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x29
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x2A
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x2B
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (NAPC)
                        {
                            Return (NR05) /* \_SB_.PCI0.GPP4.NR05 */
                        }
                        Else
                        {
                            Return (AR05) /* \_SB_.PCI0.GPP4.AR05 */
                        }
                    }
                    Else
                    {
                        Return (PR05) /* \_SB_.PCI0.GPP4.PR05 */
                    }
                }
            }

            Device (GPP5)
            {
                Name (_ADR, 0x00020003)  // _ADR: Address
                Name (PR06, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKE, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKF, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKG, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKH, 
                        Zero
                    }
                })
                Name (AR06, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x14
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x15
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x16
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x17
                    }
                })
                Name (NR06, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x2C
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x2D
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x2E
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x2F
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (NAPC)
                        {
                            Return (NR06) /* \_SB_.PCI0.GPP5.NR06 */
                        }
                        Else
                        {
                            Return (AR06) /* \_SB_.PCI0.GPP5.AR06 */
                        }
                    }
                    Else
                    {
                        Return (PR06) /* \_SB_.PCI0.GPP5.PR06 */
                    }
                }
            }

            Device (GPP6)
            {
                Name (_ADR, 0x00020004)  // _ADR: Address
                Name (PR07, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKA, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKB, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKC, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKD, 
                        Zero
                    }
                })
                Name (AR07, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x10
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x11
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x12
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x13
                    }
                })
                Name (NR07, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x30
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x31
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x32
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x33
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (NAPC)
                        {
                            Return (NR07) /* \_SB_.PCI0.GPP6.NR07 */
                        }
                        Else
                        {
                            Return (AR07) /* \_SB_.PCI0.GPP6.AR07 */
                        }
                    }
                    Else
                    {
                        Return (PR07) /* \_SB_.PCI0.GPP6.PR07 */
                    }
                }
            }

            Device (GP17)
            {
                Name (_ADR, 0x00080001)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x19, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x19, Zero))
                    }
                }

                Name (PR17, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKG, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKH, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKE, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKF, 
                        Zero
                    }
                })
                Name (AR17, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x16
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x17
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x14
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x15
                    }
                })
                Name (NR17, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x26
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x27
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x24
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x25
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (NAPC)
                        {
                            Return (NR17) /* \_SB_.PCI0.GP17.NR17 */
                        }
                        Else
                        {
                            Return (AR17) /* \_SB_.PCI0.GP17.AR17 */
                        }
                    }
                    Else
                    {
                        Return (PR17) /* \_SB_.PCI0.GP17.PR17 */
                    }
                }

                Device (VGA)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Name (DOSA, Zero)
                    Method (_DOS, 1, NotSerialized)  // _DOS: Disable Output Switching
                    {
                        DOSA = Arg0
                    }

                    Method (_DOD, 0, NotSerialized)  // _DOD: Display Output Devices
                    {
                        Return (Package (0x07)
                        {
                            0x00010110, 
                            0x00010210, 
                            0x00010220, 
                            0x00010230, 
                            0x00010240, 
                            0x00031000, 
                            0x00032000
                        })
                    }

                    Device (LCD)
                    {
                        Name (_ADR, 0x0110)  // _ADR: Address
                        Name (BCLB, Package (0x34)
                        {
                            0x5A, 
                            0x3C, 
                            0x02, 
                            0x04, 
                            0x06, 
                            0x08, 
                            0x0A, 
                            0x0C, 
                            0x0E, 
                            0x10, 
                            0x12, 
                            0x14, 
                            0x16, 
                            0x18, 
                            0x1A, 
                            0x1C, 
                            0x1E, 
                            0x20, 
                            0x22, 
                            0x24, 
                            0x26, 
                            0x28, 
                            0x2A, 
                            0x2C, 
                            0x2E, 
                            0x30, 
                            0x32, 
                            0x34, 
                            0x36, 
                            0x38, 
                            0x3A, 
                            0x3C, 
                            0x3E, 
                            0x40, 
                            0x42, 
                            0x44, 
                            0x46, 
                            0x48, 
                            0x4A, 
                            0x4C, 
                            0x4E, 
                            0x50, 
                            0x52, 
                            0x54, 
                            0x56, 
                            0x58, 
                            0x5A, 
                            0x5C, 
                            0x5E, 
                            0x60, 
                            0x62, 
                            0x64
                        })
                        Method (_BCL, 0, NotSerialized)  // _BCL: Brightness Control Levels
                        {
                            Return (QBCL) /* \_SB_.QBCL */
                        }

                        Method (_BCM, 1, NotSerialized)  // _BCM: Brightness Control Method
                        {
                            Local1 = Arg0
                            Local0 = QBCM (Local1)
                            AFN7 (Local0)
                            BRTL = Arg0
                        }
                    }
                }

                Device (PSP)
                {
                    Name (_ADR, 0x02)  // _ADR: Address
                }

                Device (ACP)
                {
                    Name (_ADR, 0x05)  // _ADR: Address
                    Method (_WOV, 0, NotSerialized)
                    {
                        Return (WOVS) /* \WOVS */
                    }
                }

                Device (AZAL)
                {
                    Name (_ADR, 0x06)  // _ADR: Address
                }

                Device (HDAU)
                {
                    Name (_ADR, One)  // _ADR: Address
                }

                Device (XHC0)
                {
                    Name (_ADR, 0x03)  // _ADR: Address
                    Name (_S0W, Zero)  // _S0W: S0 Device Wake State
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        If ((USS4 == One))
                        {
                            Return (GPRW (0x19, 0x04))
                        }
                        Else
                        {
                            Return (GPRW (0x19, 0x03))
                        }
                    }

                    Method (GPLD, 2, Serialized)
                    {
                        Name (PCKG, Package (0x01)
                        {
                            Buffer (0x10) {}
                        })
                        CreateField (DerefOf (PCKG [Zero]), Zero, 0x07, REV)
                        REV = 0x02
                        CreateField (DerefOf (PCKG [Zero]), 0x07, One, RGB)
                        RGB = One
                        CreateField (DerefOf (PCKG [Zero]), 0x40, One, VISI)
                        VISI = Arg0
                        CreateField (DerefOf (PCKG [Zero]), 0x57, 0x08, GPOS)
                        GPOS = Arg1
                        Return (PCKG) /* \_SB_.PCI0.GP17.XHC0.GPLD.PCKG */
                    }

                    Method (GUPC, 2, Serialized)
                    {
                        Name (PCKG, Package (0x04)
                        {
                            0xFF, 
                            0xFF, 
                            Zero, 
                            Zero
                        })
                        PCKG [Zero] = Arg0
                        PCKG [One] = Arg1
                        Return (PCKG) /* \_SB_.PCI0.GP17.XHC0.GUPC.PCKG */
                    }

                    Device (RHUB)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Device (PRT1)
                        {
                            Name (_ADR, One)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                If ((BID5 == One))
                                {
                                    Return (GUPC (One, 0x09))
                                }

                                Return (GUPC (Zero, 0xFF))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                If ((BID5 == One))
                                {
                                    Return (GPLD (One, One))
                                }

                                Return (GPLD (Zero, Zero))
                            }
                        }

                        Device (PRT2)
                        {
                            Name (_ADR, 0x02)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One, 0x03))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                Return (GPLD (One, 0x02))
                            }
                        }

                        Device (PRT3)
                        {
                            Name (_ADR, 0x03)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One, 0xFF))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                Return (GPLD (Zero, 0x03))
                            }
                        }

                        Device (PRT4)
                        {
                            Name (_ADR, 0x04)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One, 0xFF))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                Return (GPLD (Zero, 0x04))
                            }
                        }

                        Device (PRT5)
                        {
                            Name (_ADR, 0x05)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                If ((BID5 == One))
                                {
                                    Return (GUPC (One, 0x09))
                                }

                                Return (GUPC (Zero, 0xFF))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                If ((BID5 == One))
                                {
                                    Return (GPLD (One, One))
                                }

                                Return (GPLD (Zero, Zero))
                            }
                        }

                        Device (PRT6)
                        {
                            Name (_ADR, 0x06)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One, 0x03))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                Return (GPLD (One, 0x02))
                            }
                        }
                    }
                }

                Device (XHC1)
                {
                    Name (_ADR, 0x04)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        If ((USS4 == One))
                        {
                            Return (GPRW (0x19, 0x04))
                        }
                        Else
                        {
                            Return (GPRW (0x19, 0x03))
                        }
                    }

                    Method (GPLD, 2, Serialized)
                    {
                        Name (PCKG, Package (0x01)
                        {
                            Buffer (0x10) {}
                        })
                        CreateField (DerefOf (PCKG [Zero]), Zero, 0x07, REV)
                        REV = 0x02
                        CreateField (DerefOf (PCKG [Zero]), 0x07, One, RGB)
                        RGB = One
                        CreateField (DerefOf (PCKG [Zero]), 0x40, One, VISI)
                        VISI = Arg0
                        CreateField (DerefOf (PCKG [Zero]), 0x57, 0x08, GPOS)
                        GPOS = Arg1
                        Return (PCKG) /* \_SB_.PCI0.GP17.XHC1.GPLD.PCKG */
                    }

                    Method (GUPC, 2, Serialized)
                    {
                        Name (PCKG, Package (0x04)
                        {
                            0xFF, 
                            0xFF, 
                            Zero, 
                            Zero
                        })
                        PCKG [Zero] = Arg0
                        PCKG [One] = Arg1
                        Return (PCKG) /* \_SB_.PCI0.GP17.XHC1.GUPC.PCKG */
                    }

                    Device (RHUB)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Device (PRT1)
                        {
                            Name (_ADR, One)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One, 0xFF))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                Return (GPLD (Zero, 0x05))
                            }
                        }

                        Device (PRT2)
                        {
                            Name (_ADR, 0x02)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One, 0x03))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                Return (GPLD (One, 0x06))
                            }
                        }

                        Device (PRT3)
                        {
                            Name (_ADR, 0x03)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One, Zero))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                Return (GPLD (One, 0x07))
                            }
                        }

                        Device (PRT4)
                        {
                            Name (_ADR, 0x04)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One, 0xFF))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                Return (GPLD (Zero, 0x08))
                            }

                            Device (WCAM)
                            {
                                Name (_ADR, 0x04)  // _ADR: Address
                                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                                {
                                    ToPLD (
                                        PLD_Revision           = 0x2,
                                        PLD_IgnoreColor        = 0x1,
                                        PLD_Red                = 0x0,
                                        PLD_Green              = 0x0,
                                        PLD_Blue               = 0x0,
                                        PLD_Width              = 0x0,
                                        PLD_Height             = 0x0,
                                        PLD_UserVisible        = 0x1,
                                        PLD_Dock               = 0x0,
                                        PLD_Lid                = 0x1,
                                        PLD_Panel              = "FRONT",
                                        PLD_VerticalPosition   = "UPPER",
                                        PLD_HorizontalPosition = "CENTER",
                                        PLD_Shape              = "UNKNOWN",
                                        PLD_GroupOrientation   = 0x0,
                                        PLD_GroupToken         = 0x0,
                                        PLD_GroupPosition      = 0x0,
                                        PLD_Bay                = 0x0,
                                        PLD_Ejectable          = 0x0,
                                        PLD_EjectRequired      = 0x0,
                                        PLD_CabinetNumber      = 0x0,
                                        PLD_CardCageNumber     = 0x0,
                                        PLD_Reference          = 0x0,
                                        PLD_Rotation           = 0x0,
                                        PLD_Order              = 0x0,
                                        PLD_VerticalOffset     = 0xFFFF,
                                        PLD_HorizontalOffset   = 0xFFFF)

                                })
                            }
                        }

                        Device (PRT5)
                        {
                            Name (_ADR, 0x05)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (Zero, 0xFF))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                Return (GPLD (Zero, Zero))
                            }
                        }

                        Device (PRT6)
                        {
                            Name (_ADR, 0x06)  // _ADR: Address
                            Method (_UPC, 0, NotSerialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (One, 0x03))
                            }

                            Method (_PLD, 0, NotSerialized)  // _PLD: Physical Location of Device
                            {
                                Return (GPLD (One, 0x06))
                            }
                        }
                    }
                }

                Device (MP2C)
                {
                    Name (_ADR, 0x07)  // _ADR: Address
                }
            }

            Device (GP18)
            {
                Name (_ADR, 0x00080002)  // _ADR: Address
                Name (PR18, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKC, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKD, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKA, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKB, 
                        Zero
                    }
                })
                Name (AR18, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x12
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x13
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x10
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x11
                    }
                })
                Name (NR18, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x22
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x23
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x20
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x21
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (NAPC)
                        {
                            Return (NR18) /* \_SB_.PCI0.GP18.NR18 */
                        }
                        Else
                        {
                            Return (AR18) /* \_SB_.PCI0.GP18.AR18 */
                        }
                    }
                    Else
                    {
                        Return (PR18) /* \_SB_.PCI0.GP18.PR18 */
                    }
                }

                Device (SATA)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                }

                Device (SAT1)
                {
                    Name (_ADR, One)  // _ADR: Address
                }
            }

            Device (GP19)
            {
                Name (_ADR, 0x00080003)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x08, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x08, Zero))
                    }
                }

                Name (PR19, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        LNKG, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        LNKH, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        LNKE, 
                        Zero
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        LNKF, 
                        Zero
                    }
                })
                Name (AR19, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x16
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x17
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x14
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x15
                    }
                })
                Name (NR19, Package (0x04)
                {
                    Package (0x04)
                    {
                        0xFFFF, 
                        Zero, 
                        Zero, 
                        0x1E
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        One, 
                        Zero, 
                        0x1F
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x02, 
                        Zero, 
                        0x1C
                    }, 

                    Package (0x04)
                    {
                        0xFFFF, 
                        0x03, 
                        Zero, 
                        0x1D
                    }
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        If (NAPC)
                        {
                            Return (NR19) /* \_SB_.PCI0.GP19.NR19 */
                        }
                        Else
                        {
                            Return (AR19) /* \_SB_.PCI0.GP19.AR19 */
                        }
                    }
                    Else
                    {
                        Return (PR19) /* \_SB_.PCI0.GP19.PR19 */
                    }
                }
            }

            Device (HPET)
            {
                Name (_HID, EisaId ("PNP0103") /* HPET System Timer */)  // _HID: Hardware ID
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    If ((HPEN == One))
                    {
                        If ((OSTB >= 0x40))
                        {
                            Return (0x0F)
                        }

                        HPEN = Zero
                        Return (One)
                    }

                    Return (One)
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Name (BUF0, ResourceTemplate ()
                    {
                        IRQNoFlags ()
                            {0}
                        IRQNoFlags ()
                            {8}
                        Memory32Fixed (ReadOnly,
                            0xFED00000,         // Address Base
                            0x00000400,         // Address Length
                            _Y07)
                    })
                    CreateDWordField (BUF0, \_SB.PCI0.HPET._CRS._Y07._BAS, HPEB)  // _BAS: Base Address
                    Local0 = 0xFED00000
                    HPEB = (Local0 & 0xFFFFFC00)
                    Return (BUF0) /* \_SB_.PCI0.HPET._CRS.BUF0 */
                }
            }

            Device (SMBS)
            {
                Name (_ADR, 0x00140000)  // _ADR: Address
            }

            Device (LPC0)
            {
                Name (_ADR, 0x00140003)  // _ADR: Address
                Device (DMAC)
                {
                    Name (_HID, EisaId ("PNP0200") /* PC-class DMA Controller */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x01,               // Alignment
                            0x10,               // Length
                            )
                        IO (Decode16,
                            0x0081,             // Range Minimum
                            0x0081,             // Range Maximum
                            0x01,               // Alignment
                            0x0F,               // Length
                            )
                        IO (Decode16,
                            0x00C0,             // Range Minimum
                            0x00C0,             // Range Maximum
                            0x01,               // Alignment
                            0x20,               // Length
                            )
                        DMA (Compatibility, NotBusMaster, Transfer8_16, )
                            {4}
                    })
                }

                Device (COPR)
                {
                    Name (_HID, EisaId ("PNP0C04") /* x87-compatible Floating Point Processing Unit */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x00F0,             // Range Minimum
                            0x00F0,             // Range Maximum
                            0x01,               // Alignment
                            0x0F,               // Length
                            )
                        IRQNoFlags ()
                            {13}
                    })
                }

                Device (PIC)
                {
                    Name (_HID, EisaId ("PNP0000") /* 8259-compatible Programmable Interrupt Controller */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0020,             // Range Minimum
                            0x0020,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00A0,             // Range Minimum
                            0x00A0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IRQNoFlags ()
                            {2}
                    })
                }

                Device (RTC)
                {
                    Name (_HID, EisaId ("PNP0B00") /* AT Real-Time Clock */)  // _HID: Hardware ID
                    Name (BUF0, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0070,             // Range Minimum
                            0x0070,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                    })
                    Name (BUF1, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0070,             // Range Minimum
                            0x0070,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IRQNoFlags ()
                            {8}
                    })
                    Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                    {
                        If ((HPEN == One))
                        {
                            Return (BUF0) /* \_SB_.PCI0.LPC0.RTC_.BUF0 */
                        }

                        Return (BUF1) /* \_SB_.PCI0.LPC0.RTC_.BUF1 */
                    }
                }

                Device (SPKR)
                {
                    Name (_HID, EisaId ("PNP0800") /* Microsoft Sound System Compatible Device */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0061,             // Range Minimum
                            0x0061,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                    })
                }

                Device (TMR)
                {
                    Name (_HID, EisaId ("PNP0100") /* PC-class System Timer */)  // _HID: Hardware ID
                    Name (BUF0, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0040,             // Range Minimum
                            0x0040,             // Range Maximum
                            0x01,               // Alignment
                            0x04,               // Length
                            )
                    })
                    Name (BUF1, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0040,             // Range Minimum
                            0x0040,             // Range Maximum
                            0x01,               // Alignment
                            0x04,               // Length
                            )
                        IRQNoFlags ()
                            {0}
                    })
                    Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                    {
                        If ((HPEN == One))
                        {
                            Return (BUF0) /* \_SB_.PCI0.LPC0.TMR_.BUF0 */
                        }

                        Return (BUF1) /* \_SB_.PCI0.LPC0.TMR_.BUF1 */
                    }
                }

                Device (KBC0)
                {
                    Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
                    {
                        If ((TPOS >= 0x60))
                        {
                            Return ("1025152B")
                        }
                        Else
                        {
                            Return (0x0303D041)
                        }
                    }

                    Name (_CID, EisaId ("PNP0303") /* IBM Enhanced Keyboard (101/102-key, PS/2 Mouse) */)  // _CID: Compatible ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0060,             // Range Minimum
                            0x0060,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0064,             // Range Minimum
                            0x0064,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IRQNoFlags ()
                            {1}
                    })
                }

                Device (PS2M)
                {
                    Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
                    {
                        If ((TPVD == 0x53))
                        {
                            Return (0x8A1B2E4F)
                        }
                        ElseIf ((PTFP == One))
                        {
                            Return (0x1C058416)
                        }
                        Else
                        {
                            Return (0x18058416)
                        }
                    }

                    Name (_CID, EisaId ("PNP0F13") /* PS/2 Mouse */)  // _CID: Compatible ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If ((PTPS == Zero))
                        {
                            Return (0x0F)
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IRQNoFlags ()
                            {12}
                    })
                }

                Device (SYSR)
                {
                    Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                    Name (_UID, One)  // _UID: Unique ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0010,             // Range Minimum
                            0x0010,             // Range Maximum
                            0x01,               // Alignment
                            0x10,               // Length
                            )
                        IO (Decode16,
                            0x0072,             // Range Minimum
                            0x0072,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0080,             // Range Minimum
                            0x0080,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x00B0,             // Range Minimum
                            0x00B0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0092,             // Range Minimum
                            0x0092,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0400,             // Range Minimum
                            0x0400,             // Range Maximum
                            0x01,               // Alignment
                            0xD0,               // Length
                            )
                        IO (Decode16,
                            0x04D0,             // Range Minimum
                            0x04D0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x04D6,             // Range Minimum
                            0x04D6,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0C00,             // Range Minimum
                            0x0C00,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0C14,             // Range Minimum
                            0x0C14,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0C50,             // Range Minimum
                            0x0C50,             // Range Maximum
                            0x01,               // Alignment
                            0x03,               // Length
                            )
                        IO (Decode16,
                            0x0C6C,             // Range Minimum
                            0x0C6C,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0C6F,             // Range Minimum
                            0x0C6F,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0CD0,             // Range Minimum
                            0x0CD0,             // Range Maximum
                            0x01,               // Alignment
                            0x0C,               // Length
                            )
                    })
                }

                Device (MEM)
                {
                    Name (_HID, EisaId ("PNP0C01") /* System Board */)  // _HID: Hardware ID
                    Name (MSRC, ResourceTemplate ()
                    {
                        Memory32Fixed (ReadWrite,
                            0xFFF00000,         // Address Base
                            0x00100000,         // Address Length
                            _Y08)
                    })
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        CreateDWordField (MSRC, \_SB.PCI0.LPC0.MEM._Y08._LEN, PSIZ)  // _LEN: Length
                        CreateDWordField (MSRC, \_SB.PCI0.LPC0.MEM._Y08._BAS, PBAS)  // _BAS: Base Address
                        PSIZ = ROMS /* \ROMS */
                        Local0 = (ROMS - One)
                        PBAS = (Ones - Local0)
                        Return (MSRC) /* \_SB_.PCI0.LPC0.MEM_.MSRC */
                    }
                }

                Device (SMKB)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Name (_HID, "10251229")  // _HID: Hardware ID
                    Name (_UID, One)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }
                }

                Device (EC0)
                {
                    Name (_HID, EisaId ("PNP0C09") /* Embedded Controller Device */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0062,             // Range Minimum
                            0x0062,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0066,             // Range Minimum
                            0x0066,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                    })
                    Name (_GPE, 0x03)  // _GPE: General Purpose Events
                    Name (SEL0, 0xF0)
                    Name (BFLG, Zero)
                    Name (RDBT, Zero)
                    Name (RDWL, Zero)
                    Name (RD3G, Zero)
                    Name (RDRF, Zero)
                    Name (GHKE, Zero)
                    Name (GHKN, Zero)
                    Method (_REG, 2, NotSerialized)  // _REG: Region Availability
                    {
                        If ((Arg0 == 0x03))
                        {
                            Local0 = Arg1
                            If (Local0)
                            {
                                ECOK = One
                            }
                            Else
                            {
                                ECOK = Zero
                            }
                        }

                        If (ECOK)
                        {
                            Acquire (MUT1, 0xFFFF)
                            If ((TPOS >= 0x60))
                            {
                                OSW8 = One
                                ^^^^RDWL = One
                                ^^^^RDBT = One
                                ^^^^RD3G = One
                            }
                            Else
                            {
                                OSW8 = Zero
                            }

                            TOHP = TPDS /* \_SB_.TPDS */
                            TPRD = One
                            WLST = ^^^^RDWL /* \_SB_.RDWL */
                            BLTS = ^^^^RDBT /* \_SB_.RDBT */
                            ED3G = ^^^^RD3G /* \_SB_.RD3G */
                            CPLE = One
                            UPTM ()
                            Release (MUT1)
                        }

                        If ((TPOS == 0x50))
                        {
                            CSBM = 0x07
                        }
                        Else
                        {
                            CSBM = Zero
                        }
                    }

                    OperationRegion (VERM, EmbeddedControl, Zero, 0xFF)
                    Field (VERM, ByteAcc, NoLock, Preserve)
                    {
                        LNPS,   8
                    }

                    OperationRegion (ERAM, SystemMemory, 0xFE708500, 0x0100)
                    Field (ERAM, ByteAcc, NoLock, Preserve)
                    {
                        ECTM,   8, 
                        Offset (0x04), 
                        CMCM,   8, 
                        CMD1,   8, 
                        CMD2,   8, 
                        CMD3,   8, 
                        Offset (0x18), 
                        SMPR,   8, 
                        SMST,   8, 
                        SMAD,   8, 
                        SMCM,   8, 
                        SMD0,   256, 
                        BCNT,   8, 
                        SMAA,   8, 
                        BATD,   16, 
                        ACDF,   1, 
                        Offset (0x41), 
                            ,   1, 
                        APBF,   1, 
                            ,   3, 
                        FLS4,   1, 
                        Offset (0x42), 
                        FLS3,   1, 
                            ,   1, 
                        S0EF,   1, 
                            ,   4, 
                        PECE,   1, 
                            ,   1, 
                        LMAT,   1, 
                            ,   1, 
                            ,   1, 
                        TPFM,   1, 
                        Offset (0x45), 
                        ECPF,   8, 
                        DGDX,   8, 
                        Offset (0x48), 
                        KBBL,   1, 
                            ,   1, 
                        RFST,   1, 
                            ,   2, 
                        BTST,   1, 
                        Offset (0x49), 
                        ERCT,   8, 
                        Offset (0x4B), 
                        TBLV,   8, 
                        ARCD,   1, 
                            ,   3, 
                        DOCK,   1, 
                        LANC,   1, 
                        LIDT,   1, 
                        CRTS,   1, 
                        Offset (0x4E), 
                        TJMX,   2, 
                            ,   1, 
                            ,   1, 
                        VGAF,   1, 
                        EDTS,   1, 
                        Offset (0x53), 
                        DOFF,   8, 
                            ,   7, 
                        TCBM,   1, 
                        FNLV,   8, 
                        Offset (0x58), 
                        CTMP,   8, 
                        RG59,   8, 
                        RG5A,   8, 
                        Offset (0x5C), 
                        CPUF,   16, 
                        Offset (0x60), 
                        WLAN,   1, 
                        BLTH,   1, 
                        ST3G,   1, 
                        CPLE,   1, 
                        SAMP,   1, 
                        ED3G,   1, 
                        WLST,   1, 
                        BLTS,   1, 
                            ,   1, 
                        DPBL,   1, 
                            ,   4, 
                        NIWM,   1, 
                        TOHP,   1, 
                        Offset (0x63), 
                        WLPH,   1, 
                        BBST,   1, 
                        ODST,   1, 
                        GPSW,   1, 
                        Offset (0x64), 
                        Offset (0x65), 
                            ,   6, 
                        TSLM,   1, 
                        Offset (0x66), 
                        Offset (0x6A), 
                        GPUF,   16, 
                        Offset (0x6D), 
                        ACTP,   8, 
                        Offset (0x70), 
                        BTMD,   8, 
                        MBTS,   1, 
                        MBTF,   1, 
                            ,   1, 
                        MFCF,   1, 
                            ,   2, 
                        MBDX,   1, 
                        MBAD,   1, 
                        MBTC,   1, 
                            ,   4, 
                        MBPC,   1, 
                        Offset (0x74), 
                            ,   4, 
                        BHUS,   1, 
                        BHCS,   1, 
                        BCUS,   1, 
                        BCCS,   1, 
                        Offset (0x77), 
                        BA1C,   8, 
                        MCYC,   16, 
                        MTMP,   16, 
                        MDAT,   16, 
                        MCUR,   16, 
                        MBRM,   16, 
                        MBVG,   16, 
                        BHVC,   16, 
                        BLVC,   16, 
                        LFCC,   16, 
                        BTSN,   16, 
                        BTDC,   16, 
                        BTDV,   16, 
                        BTMN,   8, 
                        Offset (0xBB), 
                        TARU,   8, 
                        TARN,   8, 
                        TARD,   8, 
                        Offset (0xC0), 
                        ROMD,   8, 
                        Offset (0xD0), 
                        EBPL,   1, 
                            ,   1, 
                            ,   1, 
                        TPRD,   1, 
                        Offset (0xD1), 
                            ,   1, 
                        ECS4,   1, 
                        ECS3,   1, 
                        RFAT,   1, 
                        OSW8,   1, 
                        WOLF,   1, 
                        WOWL,   1, 
                        Offset (0xD5), 
                        ECDY,   8, 
                        DBPL,   8, 
                        CPTS,   8
                    }

                    OperationRegion (EUBC, SystemMemory, 0xFE708BA0, 0x30)
                    Field (EUBC, ByteAcc, NoLock, Preserve)
                    {
                        VER1,   8, 
                        VER2,   8, 
                        RSV1,   8, 
                        RSV2,   8, 
                        CCI0,   8, 
                        CCI1,   8, 
                        CCI2,   8, 
                        CCI3,   8, 
                        CTL0,   8, 
                        CTL1,   8, 
                        CTL2,   8, 
                        CTL3,   8, 
                        CTL4,   8, 
                        CTL5,   8, 
                        CTL6,   8, 
                        CTL7,   8, 
                        MGI0,   8, 
                        MGI1,   8, 
                        MGI2,   8, 
                        MGI3,   8, 
                        MGI4,   8, 
                        MGI5,   8, 
                        MGI6,   8, 
                        MGI7,   8, 
                        MGI8,   8, 
                        MGI9,   8, 
                        MGIA,   8, 
                        MGIB,   8, 
                        MGIC,   8, 
                        MGID,   8, 
                        MGIE,   8, 
                        MGIF,   8, 
                        MGO0,   8, 
                        MGO1,   8, 
                        MGO2,   8, 
                        MGO3,   8, 
                        MGO4,   8, 
                        MGO5,   8, 
                        MGO6,   8, 
                        MGO7,   8, 
                        MGO8,   8, 
                        MGO9,   8, 
                        MGOA,   8, 
                        MGOB,   8, 
                        MGOC,   8, 
                        MGOD,   8, 
                        MGOE,   8, 
                        MGOF,   8
                    }

                    Scope (\_SB)
                    {
                        OperationRegion (EROM, SystemMemory, 0xFE708900, 0x0100)
                        Field (EROM, ByteAcc, NoLock, Preserve)
                        {
                            Offset (0x19), 
                            EPXE,   8, 
                            Offset (0x29), 
                            SPRG,   8, 
                            Offset (0x40), 
                            BCL0,   8, 
                            BCL1,   8, 
                            BCL2,   8, 
                            BCL3,   8, 
                            BCL4,   8, 
                            BCL5,   8, 
                            BCL6,   8, 
                            BCL7,   8, 
                            BCL8,   8, 
                            BCL9,   8, 
                            Offset (0xF6), 
                            C6SW,   8, 
                            Offset (0xFC), 
                            TPVD,   8, 
                            SIMU,   8, 
                            Offset (0xFF), 
                            PJNA,   8
                        }

                        OperationRegion (ERM2, SystemMemory, 0xFE708F00, 0x0100)
                        Field (ERM2, ByteAcc, NoLock, Preserve)
                        {
                            Offset (0x4D), 
                            MCID,   8
                        }

                        OperationRegion (EMBX, SystemMemory, 0xFE708A00, 0x0100)
                        Field (EMBX, ByteAcc, NoLock, Preserve)
                        {
                            Offset (0x80), 
                            ODB0,   8, 
                            ODB1,   8, 
                            ODB2,   8, 
                            ODB3,   8, 
                            ODB4,   8, 
                            ODB5,   8, 
                            ODB6,   8, 
                            ODB7,   8, 
                            ODB8,   8, 
                            ODB9,   8, 
                            ODBA,   8, 
                            ODBB,   8, 
                            ODBC,   8, 
                            ODBD,   8, 
                            ODBE,   8, 
                            ODBF,   8, 
                            ODX0,   32, 
                            ODX1,   32, 
                            ODX2,   32, 
                            ODX3,   32, 
                            Offset (0xA5), 
                            BL86,   8, 
                            BL87,   8, 
                            BL88,   8, 
                            BL89,   8, 
                            BL8A,   8, 
                            BLVA,   8, 
                            OSS4,   1, 
                            Offset (0xAC), 
                            Offset (0xAE), 
                                ,   1, 
                            Offset (0xAF), 
                            WUSB,   1, 
                            WPBN,   1, 
                            WRTC,   1, 
                            Offset (0xB0), 
                            Offset (0xB1), 
                            U3DE,   1, 
                            Offset (0xB3), 
                            DDRF,   8, 
                            VSSD,   16, 
                            Offset (0xB8), 
                            AUES,   1, 
                            CRES,   1, 
                            UPES,   1, 
                            BTES,   1, 
                            CDES,   1, 
                            Offset (0xC0), 
                            VSID,   8, 
                            VRID,   8, 
                            DVID,   16, 
                            Offset (0xC8), 
                            PWSF,   1, 
                            ODEF,   1, 
                                ,   1, 
                                ,   1, 
                                ,   1, 
                                ,   1, 
                            TMLF,   1, 
                            Offset (0xC9), 
                            KBBF,   1, 
                            USCB,   1, 
                            RFBS,   1, 
                            USCF,   1, 
                            HKEY,   1, 
                            ZPOD,   1, 
                                ,   1, 
                            IOAC,   1, 
                            TBS4,   1, 
                            USS4,   1, 
                            TBTW,   1, 
                            Offset (0xCB), 
                            Offset (0xCC), 
                            Offset (0xD0), 
                            CFID,   8, 
                            CPSI,   8, 
                            PPCD,   8, 
                            CPTB,   1, 
                            DCTB,   1, 
                            Offset (0xD4), 
                            VGAD,   2, 
                            Offset (0xD5), 
                            PPDC,   8, 
                            SGST,   8, 
                            EDSP,   8, 
                            BLVL,   8, 
                            BBTP,   8, 
                            Offset (0xDB), 
                            VRDY,   8, 
                            APS4,   8, 
                            Offset (0xDE), 
                            CDSB,   8, 
                            GPDT,   8, 
                            PMNL,   8, 
                            PMNH,   8, 
                            PPDL,   8, 
                            PPDH,   8, 
                            IPWM,   8, 
                            QPCU,   8, 
                            QPCN,   8, 
                            QPCD,   8, 
                            TPMS,   1, 
                            GSEN,   1, 
                            FPRS,   1, 
                            SMCD,   1, 
                            Offset (0xE9), 
                            DEFL,   1, 
                            Offset (0xEA), 
                                ,   1, 
                                ,   1, 
                                ,   1, 
                                ,   1, 
                            Offset (0xEB), 
                            Offset (0xEC), 
                            PTPS,   8, 
                            BID0,   1, 
                            BID1,   1, 
                            BID2,   1, 
                            BID3,   1, 
                            BID4,   1, 
                            BID5,   1, 
                            BID6,   1, 
                            BID7,   1, 
                            BID8,   1, 
                            BID9,   1, 
                            BIDA,   1, 
                            BIDB,   1, 
                            BIDC,   1, 
                            BIDD,   1, 
                            BIDE,   1, 
                            BIDF,   1, 
                            IFIL,   1, 
                            IF3L,   1, 
                            Offset (0xF0), 
                            SRAM,   1, 
                            SDTU,   1, 
                            Offset (0xF1), 
                            DRID,   8, 
                            TPID,   8, 
                                ,   1, 
                            NKST,   1, 
                            BOTY,   1, 
                            Offset (0xF4), 
                            S4CT,   8, 
                            LFCT,   8, 
                            LLCT,   8, 
                            XPS5,   8, 
                            IWLN,   1, 
                            IWWL,   1, 
                            IWS3,   1, 
                            IWS4,   1, 
                            Offset (0xF9), 
                            Offset (0xFB), 
                            WFVD,   8, 
                            ISWR,   8, 
                            IECM,   8
                        }
                    }

                    Mutex (MUT1, 0x00)
                    Mutex (MUT0, 0x00)
                    Method (APOL, 1, NotSerialized)
                    {
                        DBPL = Arg0
                        EBPL = One
                    }

                    OperationRegion (ECIO, SystemIO, 0x60, 0x10)
                    Field (ECIO, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x02), 
                        EDAT,   8, 
                        Offset (0x06), 
                        CMDS,   8, 
                        Offset (0x08), 
                        EC68,   8, 
                        Offset (0x0A), 
                        EC6A,   8, 
                        Offset (0x0C), 
                        EC6C,   8, 
                        Offset (0x0E), 
                        EC6E,   8
                    }

                    Method (IBE2, 0, Serialized)
                    {
                        While ((EC6E & 0x02))
                        {
                            Sleep (0x50)
                        }
                    }

                    Method (ECMD, 1, Serialized)
                    {
                        IBE2 ()
                        EC6E = Arg0
                        IBE2 ()
                    }

                    Method (_Q01, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        HKEV (One, One)
                    }

                    Method (_Q02, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        HKEV (0x02, One)
                        Notify (SMKB, 0x80) // Status Change
                    }

                    Method (_Q04, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        HKEV (One, 0x83)
                    }

                    Method (_Q05, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        HKEV (One, 0x82)
                        TPDS = TOHP /* \_SB_.PCI0.LPC0.EC0_.TOHP */
                    }

                    Method (_Q06, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        HKEV (One, 0x82)
                        TPDS = TOHP /* \_SB_.PCI0.LPC0.EC0_.TOHP */
                    }

                    Method (_Q0A, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        HKEV (One, 0x22)
                    }

                    Method (_Q0B, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        HKEV (One, 0x24)
                    }

                    Method (_Q0C, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        HKEV (One, 0x23)
                    }

                    Method (_Q0E, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        If ((LMAT == One))
                        {
                            HKEV (One, 0x64)
                        }
                        Else
                        {
                            HKDS ()
                        }
                    }

                    Method (_Q0F, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        HKEV (0x02, 0x64)
                    }

                    Method (_Q12, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        HKEV (One, 0x21)
                    }

                    Name (BATO, 0x80)
                    Name (BATN, Zero)
                    Name (ECEV, 0xC0)
                    Name (Q29F, Zero)
                    Method (_Q20, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        If ((SMST & 0x40))
                        {
                            Local0 = SMAA /* \_SB_.PCI0.LPC0.EC0_.SMAA */
                            If ((Local0 == 0x14))
                            {
                                SELE ()
                                If ((0x40 & ECEV))
                                {
                                    Notify (BAT1, 0x81) // Information Change
                                    BINH ()
                                }

                                If ((0x02 & ECEV))
                                {
                                    Notify (ACAD, Zero) // Bus Check
                                    HKEV (0x08, Zero)
                                    AINH ()
                                }

                                ^^^^BAT1.RCAP = Zero
                                Notify (BAT1, 0x80) // Status Change
                                BATO = BATD /* \_SB_.PCI0.LPC0.EC0_.BATD */
                                SMST &= 0xBF
                            }
                        }
                    }

                    Method (_Q29, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        If (ACDF)
                        {
                            _QC8 ()
                        }
                        Else
                        {
                            _QC9 ()
                        }
                    }

                    Method (_Q57, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        HKEV (One, 0x84)
                    }

                    Method (_Q58, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        HKEV (One, 0x84)
                    }

                    Method (_Q5B, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        HKEV (One, 0x24)
                    }

                    Method (_Q62, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        HKEV (One, 0x25)
                    }

                    Method (_Q63, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        If ((LMAT == One))
                        {
                            If ((TPOS >= 0x60)) {}
                            ElseIf ((RFST == Zero))
                            {
                                RFST = One
                                If ((WLAN == One))
                                {
                                    WLST = One
                                }

                                If ((ST3G == One))
                                {
                                    ED3G = One
                                }
                            }
                            Else
                            {
                                RFST = Zero
                                If ((WLAN == One))
                                {
                                    WLST = Zero
                                }

                                If ((ST3G == One))
                                {
                                    ED3G = Zero
                                }
                            }
                        }

                        HKEV (One, 0x02)
                    }

                    Method (_Q68, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        ^^^WMID.FEBC [Zero] = One
                        Notify (WMID, 0xBD) // Device-Specific
                    }

                    Method (_Q80, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        Notify (\_TZ.TZ01, 0x80) // Thermal Status Change
                    }

                    Method (_Q85, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        Notify (BAT1, 0x81) // Information Change
                    }

                    Method (_Q8E, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        Local0 = BLVL /* \_SB_.BLVL */
                        BRTN = Local0
                        Notify (^^^GP17.VGA.LCD, 0x86) // Device-Specific
                        If ((LMAT == One))
                        {
                            HKEV (One, 0x61)
                        }
                    }

                    Method (_Q8F, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        Local0 = BLVL /* \_SB_.BLVL */
                        BRTN = Local0
                        Notify (^^^GP17.VGA.LCD, 0x87) // Device-Specific
                        If ((LMAT == One))
                        {
                            HKEV (One, 0x62)
                        }
                    }

                    Method (_Q90, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        ^^^^RDWL = WLST /* \_SB_.PCI0.LPC0.EC0_.WLST */
                    }

                    Method (_Q91, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        ^^^^RDWL = WLST /* \_SB_.PCI0.LPC0.EC0_.WLST */
                    }

                    Method (_Q92, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        ^^^^RDBT = BLTS /* \_SB_.PCI0.LPC0.EC0_.BLTS */
                    }

                    Method (_Q93, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        ^^^^RDBT = BLTS /* \_SB_.PCI0.LPC0.EC0_.BLTS */
                    }

                    Method (_Q9B, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        Notify (LID0, 0x80) // Status Change
                    }

                    Method (_Q9C, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        Notify (LID0, 0x80) // Status Change
                    }

                    Method (_Q9D, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        HKEV (One, 0x63)
                    }

                    Method (_Q9E, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        HKEV (One, 0x63)
                    }

                    Method (_QA0, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        ^^^^RD3G = ED3G /* \_SB_.PCI0.LPC0.EC0_.ED3G */
                    }

                    Method (_QA1, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        ^^^^RD3G = ED3G /* \_SB_.PCI0.LPC0.EC0_.ED3G */
                    }

                    Method (_QC0, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        HKEV (One, 0x8D)
                    }

                    Method (_QC6, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        Notify (BAT1, 0x80) // Status Change
                    }

                    Mutex (PPCF, 0x00)
                    Method (_QC8, 0, Serialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        If (((VGAF == One) && (DDRF == 0x55)))
                        {
                            Acquire (PPCF, 0xFFFF)
                            Local0 = DGDX /* \_SB_.PCI0.LPC0.EC0_.DGDX */
                            Switch (Local0)
                            {
                                Case (Zero)
                                {
                                    AFN2 (Zero, 0x02)
                                }
                                Case (One)
                                {
                                    AFN2 (Zero, 0x02)
                                }
                                Case (0x02)
                                {
                                    AFN2 (0x03, 0x02)
                                }
                                Case (0x03)
                                {
                                    AFN2 (0x07, 0x02)
                                }
                                Case (0x04)
                                {
                                    AFN2 (0x07, 0x02)
                                }
                                Case (0x05)
                                {
                                    AFN2 (0x07, 0x02)
                                }
                                Default
                                {
                                    AFN2 (Zero, 0x02)
                                }

                            }

                            Release (PPCF)
                        }

                        Notify (\_TZ.TZ01, 0x80) // Thermal Status Change
                    }

                    Method (_QC9, 0, Serialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        If (((VGAF == One) && (DDRF == 0x55)))
                        {
                            Acquire (PPCF, 0xFFFF)
                            Local0 = DGDX /* \_SB_.PCI0.LPC0.EC0_.DGDX */
                            Switch (Local0)
                            {
                                Case (Zero)
                                {
                                    AFN2 (Zero, 0x02)
                                }
                                Case (One)
                                {
                                    AFN2 (Zero, 0x02)
                                }
                                Case (0x02)
                                {
                                    AFN2 (0x03, 0x02)
                                }
                                Case (0x03)
                                {
                                    AFN2 (0x07, 0x02)
                                }
                                Case (0x04)
                                {
                                    AFN2 (0x07, 0x02)
                                }
                                Case (0x05)
                                {
                                    AFN2 (0x07, 0x02)
                                }
                                Default
                                {
                                    AFN2 (Zero, 0x02)
                                }

                            }

                            Release (PPCF)
                        }

                        Notify (\_TZ.TZ01, 0x80) // Thermal Status Change
                    }

                    Method (_QCA, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        HKEV (0x09, Zero)
                    }

                    Method (_QE4, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        UPTM ()
                    }

                    Method (_QE5, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                    }

                    Method (_QE6, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        BCUS = Zero
                        HKEV (0x0B, Zero)
                    }

                    Method (_QE7, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        BCUS = Zero
                        HKEV (0x0B, One)
                    }

                    Method (SELE, 0, NotSerialized)
                    {
                        BATN = BATD /* \_SB_.PCI0.LPC0.EC0_.BATD */
                        ECEV = Zero
                        If ((0xC0 & BATN))
                        {
                            ECEV |= One
                            If ((0x0300 & BATN))
                            {
                                ECEV |= 0x04
                            }
                        }

                        Local0 = (BATN & One)
                        Local1 = (BATO & One)
                        If (Local0)
                        {
                            ECEV |= 0x0100
                        }
                        Else
                        {
                            ECEV &= 0xFEFF
                        }

                        If (~(Local0 == Local1))
                        {
                            ECEV |= 0x40
                        }

                        Local0 = (BATN & 0x02)
                        Local1 = (BATO & 0x02)
                        If (Local0)
                        {
                            ECEV |= 0x0200
                        }
                        Else
                        {
                            ECEV &= 0xFDFF
                        }

                        If (~(Local0 == Local1))
                        {
                            ECEV |= 0x80
                        }

                        Local0 = (BATN & 0xC0)
                        Local1 = (BATO & 0xC0)
                        If (~(Local0 == Local1))
                        {
                            ECEV |= 0x02
                        }

                        If ((One & ECEV))
                        {
                            If ((0x04 & ECEV))
                            {
                                If ((BATN & 0x20))
                                {
                                    ECEV |= 0x10
                                }
                                Else
                                {
                                    ECEV |= 0x20
                                }
                            }
                        }
                    }

                    Method (BINH, 0, NotSerialized)
                    {
                    }

                    Method (AINH, 0, NotSerialized)
                    {
                    }

                    Method (HKEV, 2, NotSerialized)
                    {
                        ^^^WMID.FEBC [Zero] = Arg0
                        ^^^WMID.FEBC [One] = Arg1
                        ^^^WMID.FEBC [0x02] = Zero
                        ^^^WMID.FEBC [0x03] = Zero
                        Notify (WMID, 0xBC) // Device-Specific
                    }

                    Method (HKDS, 0, NotSerialized)
                    {
                        AFN0 ()
                    }

                    Name (TT10, Package (0x05)
                    {
                        0x4E20, 
                        0x61A8, 
                        0x7530, 
                        0x55, 
                        0x12
                    })
                    Name (TT11, Package (0x05)
                    {
                        0x4E20, 
                        0x61A8, 
                        0x7530, 
                        0x55, 
                        0x12
                    })
                    Name (TT12, Package (0x05)
                    {
                        0x4E20, 
                        0x61A8, 
                        0x7530, 
                        0x55, 
                        0x12
                    })
                    Name (TT13, Package (0x05)
                    {
                        0x4E20, 
                        0x61A8, 
                        0x7530, 
                        0x55, 
                        0x12
                    })
                    Name (TT14, Package (0x05)
                    {
                        0x4E20, 
                        0x61A8, 
                        0x7530, 
                        0x55, 
                        0x12
                    })
                    Name (TT15, Package (0x05)
                    {
                        0x4E20, 
                        0x61A8, 
                        0x7530, 
                        0x55, 
                        0x12
                    })
                    Name (TT16, Package (0x05)
                    {
                        0x4E20, 
                        0x61A8, 
                        0x7530, 
                        0x50, 
                        0x12
                    })
                    Name (TT17, Package (0x05)
                    {
                        0x4E20, 
                        0x61A8, 
                        0x7530, 
                        0x50, 
                        0x0E
                    })
                    Name (TT18, Package (0x05)
                    {
                        0x4650, 
                        0x4650, 
                        0x4650, 
                        0x50, 
                        0x0E
                    })
                    Name (TT19, Package (0x05)
                    {
                        0x2EE0, 
                        0x2EE0, 
                        0x2EE0, 
                        0x50, 
                        0x0E
                    })
                    Name (TT1A, Package (0x05)
                    {
                        0x2EE0, 
                        0x2EE0, 
                        0x2EE0, 
                        0x50, 
                        0x0E
                    })
                    Name (TT1B, Package (0x05)
                    {
                        0x2EE0, 
                        0x2EE0, 
                        0x2EE0, 
                        0x50, 
                        0x0E
                    })
                    Name (TT20, Package (0x05)
                    {
                        0x3A98, 
                        0x61A8, 
                        0x7530, 
                        0x55, 
                        0x12
                    })
                    Name (TT21, Package (0x05)
                    {
                        0x3A98, 
                        0x61A8, 
                        0x7530, 
                        0x55, 
                        0x12
                    })
                    Name (TT22, Package (0x05)
                    {
                        0x3A98, 
                        0x61A8, 
                        0x7530, 
                        0x55, 
                        0x12
                    })
                    Name (TT23, Package (0x05)
                    {
                        0x3A98, 
                        0x61A8, 
                        0x7530, 
                        0x55, 
                        0x12
                    })
                    Name (TT24, Package (0x05)
                    {
                        0x3A98, 
                        0x61A8, 
                        0x7530, 
                        0x55, 
                        0x12
                    })
                    Name (TT25, Package (0x05)
                    {
                        0x3A98, 
                        0x61A8, 
                        0x7530, 
                        0x50, 
                        0x12
                    })
                    Name (TT26, Package (0x05)
                    {
                        0x3A98, 
                        0x61A8, 
                        0x7530, 
                        0x50, 
                        0x0C
                    })
                    Name (TT27, Package (0x05)
                    {
                        0x2EE0, 
                        0x2EE0, 
                        0x2EE0, 
                        0x50, 
                        0x0C
                    })
                    Name (TT28, Package (0x05)
                    {
                        0x2710, 
                        0x2710, 
                        0x2710, 
                        0x50, 
                        0x0C
                    })
                    Name (TT29, Package (0x05)
                    {
                        0x2710, 
                        0x2710, 
                        0x2710, 
                        0x50, 
                        0x0C
                    })
                    Name (TT2A, Package (0x05)
                    {
                        0x2710, 
                        0x2710, 
                        0x2710, 
                        0x50, 
                        0x0C
                    })
                    Name (TT30, Package (0x05)
                    {
                        0x61A8, 
                        0x6D60, 
                        0x7530, 
                        0x55, 
                        0x12
                    })
                    Name (TT31, Package (0x05)
                    {
                        0x61A8, 
                        0x6D60, 
                        0x7530, 
                        0x55, 
                        0x12
                    })
                    Name (TT32, Package (0x05)
                    {
                        0x61A8, 
                        0x6D60, 
                        0x7530, 
                        0x55, 
                        0x12
                    })
                    Name (TT33, Package (0x05)
                    {
                        0x61A8, 
                        0x6D60, 
                        0x7530, 
                        0x55, 
                        0x12
                    })
                    Name (TT34, Package (0x05)
                    {
                        0x61A8, 
                        0x6D60, 
                        0x7530, 
                        0x55, 
                        0x12
                    })
                    Name (TT35, Package (0x05)
                    {
                        0x61A8, 
                        0x6D60, 
                        0x7530, 
                        0x55, 
                        0x12
                    })
                    Name (TT36, Package (0x05)
                    {
                        0x61A8, 
                        0x6D60, 
                        0x7530, 
                        0x50, 
                        0x12
                    })
                    Name (TT37, Package (0x05)
                    {
                        0x61A8, 
                        0x6D60, 
                        0x7530, 
                        0x50, 
                        0x12
                    })
                    Name (TT38, Package (0x05)
                    {
                        0x55F0, 
                        0x55F0, 
                        0x55F0, 
                        0x50, 
                        0x12
                    })
                    Name (TT39, Package (0x05)
                    {
                        0x3A98, 
                        0x3A98, 
                        0x3A98, 
                        0x50, 
                        0x12
                    })
                    Name (TT3A, Package (0x05)
                    {
                        0x3A98, 
                        0x3A98, 
                        0x3A98, 
                        0x50, 
                        0x12
                    })
                    Name (TT3B, Package (0x05)
                    {
                        0x3A98, 
                        0x3A98, 
                        0x3A98, 
                        0x50, 
                        0x12
                    })
                    Name (TT40, Package (0x04)
                    {
                        0x4E20, 
                        0x61A8, 
                        0x7530, 
                        0x55
                    })
                    Name (TT41, Package (0x04)
                    {
                        0x4E20, 
                        0x61A8, 
                        0x7530, 
                        0x55
                    })
                    Name (TT42, Package (0x04)
                    {
                        0x4E20, 
                        0x61A8, 
                        0x7530, 
                        0x55
                    })
                    Name (TT43, Package (0x04)
                    {
                        0x4E20, 
                        0x61A8, 
                        0x7530, 
                        0x55
                    })
                    Name (TT44, Package (0x04)
                    {
                        0x4E20, 
                        0x61A8, 
                        0x7530, 
                        0x55
                    })
                    Name (TT45, Package (0x04)
                    {
                        0x4E20, 
                        0x61A8, 
                        0x7530, 
                        0x55
                    })
                    Name (TT46, Package (0x04)
                    {
                        0x4E20, 
                        0x61A8, 
                        0x7530, 
                        0x55
                    })
                    Name (TT47, Package (0x04)
                    {
                        0x4E20, 
                        0x61A8, 
                        0x7530, 
                        0x55
                    })
                    Name (TT48, Package (0x04)
                    {
                        0x4650, 
                        0x4650, 
                        0x4650, 
                        0x55
                    })
                    Name (TT49, Package (0x04)
                    {
                        0x2EE0, 
                        0x2EE0, 
                        0x2EE0, 
                        0x55
                    })
                    Name (TT4A, Package (0x04)
                    {
                        0x2EE0, 
                        0x2EE0, 
                        0x2EE0, 
                        0x55
                    })
                    Name (TT4B, Package (0x04)
                    {
                        0x2EE0, 
                        0x2EE0, 
                        0x2EE0, 
                        0x55
                    })
                    Name (TT50, Package (0x04)
                    {
                        0x3A98, 
                        0x61A8, 
                        0x7530, 
                        0x55
                    })
                    Name (TT51, Package (0x04)
                    {
                        0x3A98, 
                        0x61A8, 
                        0x7530, 
                        0x55
                    })
                    Name (TT52, Package (0x04)
                    {
                        0x3A98, 
                        0x61A8, 
                        0x7530, 
                        0x55
                    })
                    Name (TT53, Package (0x04)
                    {
                        0x3A98, 
                        0x61A8, 
                        0x7530, 
                        0x55
                    })
                    Name (TT54, Package (0x04)
                    {
                        0x3A98, 
                        0x61A8, 
                        0x7530, 
                        0x55
                    })
                    Name (TT55, Package (0x04)
                    {
                        0x3A98, 
                        0x61A8, 
                        0x7530, 
                        0x55
                    })
                    Name (TT56, Package (0x04)
                    {
                        0x3A98, 
                        0x61A8, 
                        0x7530, 
                        0x55
                    })
                    Name (TT57, Package (0x04)
                    {
                        0x2EE0, 
                        0x2EE0, 
                        0x2EE0, 
                        0x55
                    })
                    Name (TT58, Package (0x04)
                    {
                        0x2710, 
                        0x2710, 
                        0x2710, 
                        0x55
                    })
                    Name (TT59, Package (0x04)
                    {
                        0x2710, 
                        0x2710, 
                        0x2710, 
                        0x55
                    })
                    Name (TT5A, Package (0x04)
                    {
                        0x2710, 
                        0x2710, 
                        0x2710, 
                        0x55
                    })
                    Name (TT60, Package (0x04)
                    {
                        0x61A8, 
                        0x6D60, 
                        0x7530, 
                        0x55
                    })
                    Name (TT61, Package (0x04)
                    {
                        0x61A8, 
                        0x6D60, 
                        0x7530, 
                        0x55
                    })
                    Name (TT62, Package (0x04)
                    {
                        0x61A8, 
                        0x6D60, 
                        0x7530, 
                        0x55
                    })
                    Name (TT63, Package (0x04)
                    {
                        0x61A8, 
                        0x6D60, 
                        0x7530, 
                        0x55
                    })
                    Name (TT64, Package (0x04)
                    {
                        0x61A8, 
                        0x6D60, 
                        0x7530, 
                        0x55
                    })
                    Name (TT65, Package (0x04)
                    {
                        0x61A8, 
                        0x6D60, 
                        0x7530, 
                        0x55
                    })
                    Name (TT66, Package (0x04)
                    {
                        0x61A8, 
                        0x6D60, 
                        0x7530, 
                        0x55
                    })
                    Name (TT67, Package (0x04)
                    {
                        0x61A8, 
                        0x6D60, 
                        0x7530, 
                        0x55
                    })
                    Name (TT68, Package (0x04)
                    {
                        0x55F0, 
                        0x55F0, 
                        0x55F0, 
                        0x55
                    })
                    Name (TT69, Package (0x04)
                    {
                        0x3A98, 
                        0x3A98, 
                        0x3A98, 
                        0x55
                    })
                    Name (TT6A, Package (0x04)
                    {
                        0x3A98, 
                        0x3A98, 
                        0x3A98, 
                        0x55
                    })
                    Name (TT6B, Package (0x04)
                    {
                        0x3A98, 
                        0x3A98, 
                        0x3A98, 
                        0x55
                    })
                    Method (UPTM, 0, Serialized)
                    {
                        Name (CFMD, Zero)
                        If ((TPFM == One))
                        {
                            CFMD = 0x02
                        }
                        ElseIf ((TSLM == One))
                        {
                            CFMD = One
                        }
                        Else
                        {
                            CFMD = Zero
                        }

                        If (VSID)
                        {
                            Switch (CFMD)
                            {
                                Case (Zero)
                                {
                                    Switch (FNLV)
                                    {
                                        Case (Zero)
                                        {
                                            MTHA (TT10)
                                        }
                                        Case (One)
                                        {
                                            MTHA (TT11)
                                        }
                                        Case (0x02)
                                        {
                                            MTHA (TT12)
                                        }
                                        Case (0x03)
                                        {
                                            MTHA (TT13)
                                        }
                                        Case (0x04)
                                        {
                                            MTHA (TT14)
                                        }
                                        Case (0x05)
                                        {
                                            MTHA (TT15)
                                        }
                                        Case (0x06)
                                        {
                                            MTHA (TT16)
                                        }
                                        Case (0x07)
                                        {
                                            MTHA (TT17)
                                        }
                                        Case (0x08)
                                        {
                                            MTHA (TT18)
                                        }
                                        Case (0x09)
                                        {
                                            MTHA (TT19)
                                        }
                                        Case (0x0A)
                                        {
                                            MTHA (TT1A)
                                        }
                                        Case (0x0B)
                                        {
                                            MTHA (TT1B)
                                        }

                                    }
                                }
                                Case (One)
                                {
                                    Switch (FNLV)
                                    {
                                        Case (Zero)
                                        {
                                            MTHA (TT20)
                                        }
                                        Case (One)
                                        {
                                            MTHA (TT21)
                                        }
                                        Case (0x02)
                                        {
                                            MTHA (TT22)
                                        }
                                        Case (0x03)
                                        {
                                            MTHA (TT23)
                                        }
                                        Case (0x04)
                                        {
                                            MTHA (TT24)
                                        }
                                        Case (0x05)
                                        {
                                            MTHA (TT25)
                                        }
                                        Case (0x06)
                                        {
                                            MTHA (TT26)
                                        }
                                        Case (0x07)
                                        {
                                            MTHA (TT27)
                                        }
                                        Case (0x08)
                                        {
                                            MTHA (TT28)
                                        }
                                        Case (0x09)
                                        {
                                            MTHA (TT29)
                                        }
                                        Case (0x0A)
                                        {
                                            MTHA (TT2A)
                                        }

                                    }
                                }
                                Case (0x02)
                                {
                                    Switch (FNLV)
                                    {
                                        Case (Zero)
                                        {
                                            MTHA (TT30)
                                        }
                                        Case (One)
                                        {
                                            MTHA (TT31)
                                        }
                                        Case (0x02)
                                        {
                                            MTHA (TT32)
                                        }
                                        Case (0x03)
                                        {
                                            MTHA (TT33)
                                        }
                                        Case (0x04)
                                        {
                                            MTHA (TT34)
                                        }
                                        Case (0x05)
                                        {
                                            MTHA (TT35)
                                        }
                                        Case (0x06)
                                        {
                                            MTHA (TT36)
                                        }
                                        Case (0x07)
                                        {
                                            MTHA (TT37)
                                        }
                                        Case (0x08)
                                        {
                                            MTHA (TT38)
                                        }
                                        Case (0x09)
                                        {
                                            MTHA (TT39)
                                        }
                                        Case (0x0A)
                                        {
                                            MTHA (TT3A)
                                        }
                                        Case (0x0B)
                                        {
                                            MTHA (TT3B)
                                        }

                                    }
                                }

                            }
                        }
                        Else
                        {
                            Switch (CFMD)
                            {
                                Case (Zero)
                                {
                                    Switch (FNLV)
                                    {
                                        Case (Zero)
                                        {
                                            MTHB (TT40)
                                        }
                                        Case (One)
                                        {
                                            MTHB (TT41)
                                        }
                                        Case (0x02)
                                        {
                                            MTHB (TT42)
                                        }
                                        Case (0x03)
                                        {
                                            MTHB (TT43)
                                        }
                                        Case (0x04)
                                        {
                                            MTHB (TT44)
                                        }
                                        Case (0x05)
                                        {
                                            MTHB (TT45)
                                        }
                                        Case (0x06)
                                        {
                                            MTHB (TT46)
                                        }
                                        Case (0x07)
                                        {
                                            MTHB (TT47)
                                        }
                                        Case (0x08)
                                        {
                                            MTHB (TT48)
                                        }
                                        Case (0x09)
                                        {
                                            MTHB (TT49)
                                        }
                                        Case (0x0A)
                                        {
                                            MTHB (TT4A)
                                        }
                                        Case (0x0B)
                                        {
                                            MTHB (TT4B)
                                        }

                                    }
                                }
                                Case (One)
                                {
                                    Switch (FNLV)
                                    {
                                        Case (Zero)
                                        {
                                            MTHB (TT50)
                                        }
                                        Case (One)
                                        {
                                            MTHB (TT51)
                                        }
                                        Case (0x02)
                                        {
                                            MTHB (TT52)
                                        }
                                        Case (0x03)
                                        {
                                            MTHB (TT53)
                                        }
                                        Case (0x04)
                                        {
                                            MTHB (TT54)
                                        }
                                        Case (0x05)
                                        {
                                            MTHB (TT55)
                                        }
                                        Case (0x06)
                                        {
                                            MTHB (TT56)
                                        }
                                        Case (0x07)
                                        {
                                            MTHB (TT57)
                                        }
                                        Case (0x08)
                                        {
                                            MTHB (TT58)
                                        }
                                        Case (0x09)
                                        {
                                            MTHB (TT59)
                                        }
                                        Case (0x0A)
                                        {
                                            MTHB (TT5A)
                                        }

                                    }
                                }
                                Case (0x02)
                                {
                                    Switch (FNLV)
                                    {
                                        Case (Zero)
                                        {
                                            MTHB (TT60)
                                        }
                                        Case (One)
                                        {
                                            MTHB (TT61)
                                        }
                                        Case (0x02)
                                        {
                                            MTHB (TT62)
                                        }
                                        Case (0x03)
                                        {
                                            MTHB (TT63)
                                        }
                                        Case (0x04)
                                        {
                                            MTHB (TT64)
                                        }
                                        Case (0x05)
                                        {
                                            MTHB (TT65)
                                        }
                                        Case (0x06)
                                        {
                                            MTHB (TT66)
                                        }
                                        Case (0x07)
                                        {
                                            MTHB (TT67)
                                        }
                                        Case (0x08)
                                        {
                                            MTHB (TT68)
                                        }
                                        Case (0x09)
                                        {
                                            MTHB (TT69)
                                        }
                                        Case (0x0A)
                                        {
                                            MTHB (TT6A)
                                        }
                                        Case (0x0B)
                                        {
                                            MTHB (TT6B)
                                        }

                                    }
                                }

                            }
                        }
                    }

                    Name (TMBF, Buffer (0x07) {})
                    CreateWordField (TMBF, Zero, SSZE)
                    CreateByteField (TMBF, 0x02, SMUF)
                    CreateDWordField (TMBF, 0x03, SMUD)
                    Method (MTHA, 1, NotSerialized)
                    {
                        SSZE = 0x07
                        SMUF = 0x05
                        SMUD = DerefOf (Arg0 [Zero])
                        ALIB (0x0C, TMBF)
                        SMUF = 0x07
                        SMUD = DerefOf (Arg0 [One])
                        ALIB (0x0C, TMBF)
                        SMUF = 0x06
                        SMUD = DerefOf (Arg0 [0x02])
                        ALIB (0x0C, TMBF)
                        SMUF = 0x03
                        SMUD = DerefOf (Arg0 [0x03])
                        ALIB (0x0C, TMBF)
                        If (((VGAF == One) && (DDRF == 0x55)))
                        {
                            Local0 = (DerefOf (Arg0 [0x04]) << 0x08)
                            AFNC (0x02, Local0)
                        }
                    }

                    Method (MTHB, 1, NotSerialized)
                    {
                        SSZE = 0x07
                        SMUF = 0x05
                        SMUD = DerefOf (Arg0 [Zero])
                        ALIB (0x0C, TMBF)
                        SMUF = 0x07
                        SMUD = DerefOf (Arg0 [One])
                        ALIB (0x0C, TMBF)
                        SMUF = 0x06
                        SMUD = DerefOf (Arg0 [0x02])
                        ALIB (0x0C, TMBF)
                        SMUF = 0x03
                        SMUD = DerefOf (Arg0 [0x03])
                        ALIB (0x0C, TMBF)
                    }
                }

                Mutex (PSMX, 0x00)
            }

            Scope (GPP1)
            {
            }

            Scope (GPP2)
            {
                Method (RHRS, 0, NotSerialized)
                {
                    Name (RBUF, ResourceTemplate ()
                    {
                        GpioInt (Edge, ActiveLow, ExclusiveAndWake, PullNone, 0x0000,
                            "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x0018
                            }
                    })
                    Return (RBUF) /* \_SB_.PCI0.GPP2.RHRS.RBUF */
                }
            }

            Scope (GPP3)
            {
                Method (RHRS, 0, NotSerialized)
                {
                    Name (RBUF, ResourceTemplate ()
                    {
                        GpioInt (Edge, ActiveLow, ExclusiveAndWake, PullNone, 0x0000,
                            "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x0012
                            }
                    })
                    Return (RBUF) /* \_SB_.PCI0.GPP3.RHRS.RBUF */
                }
            }
        }

        OperationRegion (PIRQ, SystemIO, 0x0C00, 0x02)
        Field (PIRQ, ByteAcc, NoLock, Preserve)
        {
            PIDX,   8, 
            PDAT,   8
        }

        IndexField (PIDX, PDAT, ByteAcc, NoLock, Preserve)
        {
            PIRA,   8, 
            PIRB,   8, 
            PIRC,   8, 
            PIRD,   8, 
            PIRE,   8, 
            PIRF,   8, 
            PIRG,   8, 
            PIRH,   8, 
            Offset (0x0C), 
            SIRA,   8, 
            SIRB,   8, 
            SIRC,   8, 
            SIRD,   8, 
            PIRS,   8, 
            Offset (0x13), 
            HDAD,   8, 
            Offset (0x17), 
            SDCL,   8, 
            Offset (0x1A), 
            SDIO,   8, 
            Offset (0x30), 
            USB1,   8, 
            Offset (0x34), 
            USB3,   8, 
            Offset (0x41), 
            SATA,   8, 
            Offset (0x62), 
            GIOC,   8, 
            Offset (0x70), 
            I2C0,   8, 
            I2C1,   8, 
            I2C2,   8, 
            I2C3,   8, 
            URT0,   8, 
            URT1,   8
        }

        Method (DSPI, 0, NotSerialized)
        {
            INTA (0x1F)
            INTB (0x1F)
            INTC (0x1F)
            INTD (0x1F)
            PIRE = 0x1F
            PIRF = 0x1F
            PIRG = 0x1F
            PIRH = 0x1F
        }

        Method (INTA, 1, NotSerialized)
        {
            PIRA = Arg0
            If (PICM)
            {
                HDAD = Arg0
                SDCL = Arg0
            }
        }

        Method (INTB, 1, NotSerialized)
        {
            PIRB = Arg0
        }

        Method (INTC, 1, NotSerialized)
        {
            PIRC = Arg0
            If (PICM)
            {
                USB1 = Arg0
                USB3 = Arg0
            }
        }

        Method (INTD, 1, NotSerialized)
        {
            PIRD = Arg0
            If (PICM)
            {
                SATA = Arg0
            }
        }

        Name (PRS1, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {3,5,6,10,11}
        })
        Name (BUFA, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {15}
        })
        Device (LNKA)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PIRA && (PIRA != 0x1F)))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                INTA (0x1F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRA) /* \_SB_.PIRA */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRA = Local0
            }
        }

        Device (LNKB)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PIRB && (PIRB != 0x1F)))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                INTB (0x1F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRB) /* \_SB_.PIRB */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRB = Local0
            }
        }

        Device (LNKC)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PIRC && (PIRC != 0x1F)))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                INTC (0x1F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRC) /* \_SB_.PIRC */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRC = Local0
            }
        }

        Device (LNKD)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x04)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PIRD && (PIRD != 0x1F)))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                INTD (0x1F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRD) /* \_SB_.PIRD */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRD = Local0
            }
        }

        Device (LNKE)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x05)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PIRE && (PIRE != 0x1F)))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRE = 0x1F
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRE) /* \_SB_.PIRE */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRE = Local0
            }
        }

        Device (LNKF)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x06)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PIRF && (PIRF != 0x1F)))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRF = 0x1F
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRF) /* \_SB_.PIRF */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRF = Local0
            }
        }

        Device (LNKG)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x07)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PIRG && (PIRG != 0x1F)))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRG = 0x1F
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRG) /* \_SB_.PIRG */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRG = Local0
            }
        }

        Device (LNKH)
        {
            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
            Name (_UID, 0x08)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PIRH && (PIRH != 0x1F)))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (0x09)
                }
            }

            Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
            {
                Return (PRS1) /* \_SB_.PRS1 */
            }

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {
                PIRH = 0x1F
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                CreateWordField (BUFA, One, IRQX)
                IRQX = (One << PIRH) /* \_SB_.PIRH */
                Return (BUFA) /* \_SB_.BUFA */
            }

            Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
            {
                CreateWordField (Arg0, One, IRA)
                FindSetRightBit (IRA, Local0)
                Local0--
                PIRH = Local0
            }
        }

        Method (GSMI, 1, NotSerialized)
        {
            APMD = Arg0
            APMC = 0xE4
            Sleep (0x02)
        }

        Method (S80H, 1, NotSerialized)
        {
            P80H = Arg0
        }

        Method (BSMI, 1, NotSerialized)
        {
            APMD = Arg0
            APMC = 0xBE
            Sleep (One)
        }

        Name (LINX, Zero)
        Name (BRTN, Zero)
        Scope (\_SB)
        {
            Name (ECOK, Zero)
            Method (VTOB, 1, NotSerialized)
            {
                Local0 = One
                Local0 <<= Arg0
                Return (Local0)
            }

            Method (BTOV, 1, NotSerialized)
            {
                Local0 = (Arg0 >> One)
                Local1 = Zero
                While (Local0)
                {
                    Local1++
                    Local0 >>= One
                }

                Return (Local1)
            }

            Method (MKWD, 2, NotSerialized)
            {
                If ((Arg1 & 0x80))
                {
                    Local0 = 0xFFFF0000
                }
                Else
                {
                    Local0 = Zero
                }

                Local0 |= Arg0
                Local0 |= (Arg1 << 0x08)
                Return (Local0)
            }

            Method (POSW, 1, NotSerialized)
            {
                If ((Arg0 & 0x8000))
                {
                    If ((Arg0 == 0xFFFF))
                    {
                        Return (Ones)
                    }
                    Else
                    {
                        Local0 = ~Arg0
                        Local0++
                        Local0 &= 0xFFFF
                        Return (Local0)
                    }
                }
                Else
                {
                    Return (Arg0)
                }
            }

            Method (GBFE, 3, NotSerialized)
            {
                CreateByteField (Arg0, Arg1, TIDX)
                Arg2 = TIDX /* \_SB_.GBFE.TIDX */
            }

            Method (PBFE, 3, NotSerialized)
            {
                CreateByteField (Arg0, Arg1, TIDX)
                TIDX = Arg2
            }

            Method (ITOS, 1, NotSerialized)
            {
                Local0 = Buffer (0x09)
                    {
                        /* 0000 */  0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // 0.......
                        /* 0008 */  0x00                                             // .
                    }
                Local7 = Buffer (0x11)
                    {
                        "0123456789ABCDEF"
                    }
                Local1 = 0x08
                Local2 = Zero
                Local3 = Zero
                While (Local1)
                {
                    Local1--
                    Local4 = ((Arg0 >> (Local1 << 0x02)) & 0x0F)
                    If (Local4)
                    {
                        Local3 = Ones
                    }

                    If (Local3)
                    {
                        GBFE (Local7, Local4, RefOf (Local5))
                        PBFE (Local0, Local2, Local5)
                        Local2++
                    }
                }

                Return (Local0)
            }

            Device (SLPB)
            {
                Name (_HID, EisaId ("PNP0C0E") /* Sleep Button Device */)  // _HID: Hardware ID
            }
        }

        Scope (\_SB)
        {
            OperationRegion (NBOR, SystemMemory, 0xF8000000, 0x1000)
            Field (NBOR, DWordAcc, Lock, Preserve)
            {
                Offset (0xB8), 
                SMID,   32
            }

            BankField (NBOR, SMID, 0x03B10528, DWordAcc, Lock, Preserve)
            {
                Offset (0xBC), 
                SMMI,   32
            }

            BankField (NBOR, SMID, 0x03B10564, DWordAcc, Lock, Preserve)
            {
                Offset (0xBC), 
                SMRS,   32
            }

            BankField (NBOR, SMID, 0x03B10998, DWordAcc, Lock, Preserve)
            {
                Offset (0xBC), 
                SMA0,   32
            }

            BankField (NBOR, SMID, 0x03B1099C, DWordAcc, Lock, Preserve)
            {
                Offset (0xBC), 
                SMA1,   32
            }

            BankField (NBOR, SMID, 0x03B109A0, DWordAcc, Lock, Preserve)
            {
                Offset (0xBC), 
                SMA2,   32
            }

            BankField (NBOR, SMID, 0x03B109A4, DWordAcc, Lock, Preserve)
            {
                Offset (0xBC), 
                SMA3,   32
            }

            BankField (NBOR, SMID, 0x03B109A8, DWordAcc, Lock, Preserve)
            {
                Offset (0xBC), 
                SMA4,   32
            }

            BankField (NBOR, SMID, 0x03B109AC, DWordAcc, Lock, Preserve)
            {
                Offset (0xBC), 
                SMA5,   32
            }

            Method (SPAO, 1, Serialized)
            {
                SMRS = Zero
                While ((SMRS != Zero)) {}
                SMA0 = Arg0
                SMA1 = Zero
                SMA2 = Zero
                SMA3 = Zero
                SMA4 = Zero
                SMA5 = Zero
                SMMI = 0x21
                While ((SMRS == Zero)) {}
            }

            Device (ACAD)
            {
                Name (_HID, "ACPI0003" /* Power Source Device */)  // _HID: Hardware ID
                Name (_PCL, Package (0x01)  // _PCL: Power Consumer List
                {
                    _SB
                })
                Name (ACST, 0xFF)
                Name (ACWT, 0xFF)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                }

                Name (XX00, Buffer (0x03) {})
                Method (_PSR, 0, NotSerialized)  // _PSR: Power Source
                {
                    ACWT = ACST /* \_SB_.ACAD.ACST */
                    CreateWordField (XX00, Zero, SSZE)
                    CreateByteField (XX00, 0x02, ACSS)
                    SSZE = 0x03
                    If ((SIMU == 0x53))
                    {
                        ACST = Zero
                    }
                    ElseIf (ECOK)
                    {
                        ACST = ^^PCI0.LPC0.EC0.ACDF /* \_SB_.PCI0.LPC0.EC0_.ACDF */
                    }
                    Else
                    {
                        ACST = One
                    }

                    If (ACST)
                    {
                        Local0 = One
                        ^^BAT1.BCRI = Zero
                    }
                    Else
                    {
                        Local0 = Zero
                    }

                    If ((ACWT != ACST))
                    {
                        If (ACST)
                        {
                            AFN4 (One)
                            ACSS = Zero
                        }
                        Else
                        {
                            AFN4 (0x02)
                            ACSS = One
                        }

                        ALIB (One, XX00)
                        ^^PCI0.LPC0.EC0.UPTM ()
                        SPAO (0x61A8)
                    }

                    Return (Local0)
                }
            }
        }

        Scope (\_SB)
        {
            Device (BAT1)
            {
                Name (_HID, EisaId ("PNP0C0A") /* Control Method Battery */)  // _HID: Hardware ID
                Name (_UID, One)  // _UID: Unique ID
                Name (CBTI, Zero)
                Name (PBTI, Zero)
                Name (BTIN, Zero)
                Name (BTCH, Zero)
                Name (BIFI, Zero)
                Name (SEL0, Zero)
                Name (BCRI, Zero)
                Name (PBIF, Package (0x0D)
                {
                    One, 
                    0x1130, 
                    0x1130, 
                    One, 
                    0x2B5C, 
                    0x012C, 
                    0x84, 
                    0x20, 
                    0x20, 
                    "BAT1      ", 
                    "11        ", 
                    "11        ", 
                    "11        "
                })
                Name (PBIX, Package (0x14)
                {
                    Zero, 
                    One, 
                    0x1130, 
                    0x1130, 
                    One, 
                    0x2B5C, 
                    0x012C, 
                    0x84, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    0x20, 
                    0x20, 
                    "BAT1      ", 
                    "11        ", 
                    "11        ", 
                    "11        "
                })
                Name (PBST, Package (0x04)
                {
                    Zero, 
                    Ones, 
                    Ones, 
                    0x2710
                })
                Name (ERRC, Zero)
                Name (_PCL, Package (0x01)  // _PCL: Power Consumer List
                {
                    _SB
                })
                Name (BTPF, Zero)
                Method (_BTP, 1, NotSerialized)  // _BTP: Battery Trip Point
                {
                    BTPF = Arg0
                }

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    If (ECOK)
                    {
                        If (^^PCI0.LPC0.EC0.MBTS)
                        {
                            Return (0x1F)
                        }
                        Else
                        {
                            Return (0x0F)
                        }
                    }
                    Else
                    {
                        Return (0x0F)
                    }
                }

                Method (_BIF, 0, NotSerialized)  // _BIF: Battery Information
                {
                    IVBI ()
                    If (ECOK)
                    {
                        If (^^PCI0.LPC0.EC0.MBTS)
                        {
                            UBIF ()
                        }
                    }

                    Return (PBIF) /* \_SB_.BAT1.PBIF */
                }

                Method (_BIX, 0, NotSerialized)  // _BIX: Battery Information Extended
                {
                    IVBX ()
                    If (ECOK)
                    {
                        If (^^PCI0.LPC0.EC0.MBTS)
                        {
                            UBIX ()
                        }
                    }

                    Return (PBIX) /* \_SB_.BAT1.PBIX */
                }

                Method (IVBI, 0, NotSerialized)
                {
                    PBIF [One] = Ones
                    PBIF [0x02] = Ones
                    PBIF [0x04] = Ones
                    PBIF [0x09] = "Bad"
                    PBIF [0x0A] = "      "
                    PBIF [0x0B] = "Bad"
                    PBIF [0x0C] = "Bad"
                }

                Name (LFCC, 0x1130)
                Method (UBIF, 0, Serialized)
                {
                    If (ECOK)
                    {
                        Acquire (^^PCI0.LPC0.EC0.MUT1, 0xFFFF)
                        Local0 = ^^PCI0.LPC0.EC0.BTDC /* \_SB_.PCI0.LPC0.EC0_.BTDC */
                        Local1 = ^^PCI0.LPC0.EC0.LFCC /* \_SB_.PCI0.LPC0.EC0_.LFCC */
                        Local2 = ^^PCI0.LPC0.EC0.BTDV /* \_SB_.PCI0.LPC0.EC0_.BTDV */
                        Local3 = ^^PCI0.LPC0.EC0.BTMD /* \_SB_.PCI0.LPC0.EC0_.BTMD */
                        Local4 = ^^PCI0.LPC0.EC0.BTMN /* \_SB_.PCI0.LPC0.EC0_.BTMN */
                        Local5 = ^^PCI0.LPC0.EC0.BTSN /* \_SB_.PCI0.LPC0.EC0_.BTSN */
                        Release (^^PCI0.LPC0.EC0.MUT1)
                        PBIF [One] = Local0
                        PBIF [0x02] = Local1
                        PBIF [0x04] = Local2
                        LFCC = Local1
                        Local7 = (Local1 * 0x04)
                        Local7 /= 0x64
                        PBIF [0x06] = Local7
                        PBIF [0x0B] = "LION"
                        Switch (Local3)
                        {
                            Case (One)
                            {
                                PBIF [0x09] = "AP18C8K"
                            }
                            Case (0x02)
                            {
                                PBIF [0x09] = "AP18C4K"
                            }
                            Case (0x03)
                            {
                                PBIF [0x09] = "AC14B8K"
                            }
                            Case (0x04)
                            {
                                PBIF [0x09] = "AP19B5L"
                            }
                            Case (0x05)
                            {
                                PBIF [0x09] = "AP20CBL"
                            }
                            Case (0x06)
                            {
                                PBIF [0x09] = "AP19B8K"
                            }
                            Case (0x07)
                            {
                                PBIF [0x09] = "AP19B5K"
                            }
                            Case (0x08)
                            {
                                PBIF [0x09] = "AP18C7K"
                            }
                            Default
                            {
                                PBIF [0x09] = "xxxxxxx"
                            }

                        }

                        Switch (Local4)
                        {
                            Case (0x03)
                            {
                                PBIF [0x0C] = "SANYO"
                            }
                            Case (0x04)
                            {
                                PBIF [0x0C] = "SONY"
                            }
                            Case (0x05)
                            {
                                PBIF [0x0C] = "PANASONIC"
                            }
                            Case (0x06)
                            {
                                PBIF [0x0C] = "SAMSUNG"
                            }
                            Case (0x07)
                            {
                                PBIF [0x0C] = "SIMPLO"
                            }
                            Case (0x08)
                            {
                                PBIF [0x0C] = "MOTOROLA"
                            }
                            Case (0x09)
                            {
                                PBIF [0x0C] = "CELXPERT"
                            }
                            Case (0x0A)
                            {
                                PBIF [0x0C] = "LGC"
                            }
                            Case (0x0B)
                            {
                                PBIF [0x0C] = "GETAC"
                            }
                            Case (0x0C)
                            {
                                PBIF [0x0C] = "MURATA"
                            }
                            Case (0x0D)
                            {
                                PBIF [0x0C] = "COSMX"
                            }
                            Default
                            {
                                PBIF [0x0C] = "UNKNOWN"
                            }

                        }

                        PBIF [0x0A] = ITOS (ToBCD (Local5))
                    }
                }

                Method (IVBX, 0, NotSerialized)
                {
                    PBIX [0x02] = Ones
                    PBIX [0x03] = Ones
                    PBIX [0x05] = Ones
                    PBIX [0x10] = "Bad"
                    PBIX [0x11] = "      "
                    PBIX [0x12] = "Bad"
                    PBIX [0x13] = "Bad"
                }

                Method (UBIX, 0, Serialized)
                {
                    If (ECOK)
                    {
                        Acquire (^^PCI0.LPC0.EC0.MUT1, 0xFFFF)
                        Local0 = ^^PCI0.LPC0.EC0.BTDC /* \_SB_.PCI0.LPC0.EC0_.BTDC */
                        Local1 = ^^PCI0.LPC0.EC0.LFCC /* \_SB_.PCI0.LPC0.EC0_.LFCC */
                        Local2 = ^^PCI0.LPC0.EC0.BTDV /* \_SB_.PCI0.LPC0.EC0_.BTDV */
                        Local3 = ^^PCI0.LPC0.EC0.BTMD /* \_SB_.PCI0.LPC0.EC0_.BTMD */
                        Local4 = ^^PCI0.LPC0.EC0.BTMN /* \_SB_.PCI0.LPC0.EC0_.BTMN */
                        Local5 = ^^PCI0.LPC0.EC0.BTSN /* \_SB_.PCI0.LPC0.EC0_.BTSN */
                        Release (^^PCI0.LPC0.EC0.MUT1)
                        PBIX [0x02] = Local0
                        PBIX [0x03] = Local1
                        PBIX [0x05] = Local2
                        LFCC = Local1
                        Local7 = (Local1 * 0x04)
                        Local7 /= 0x64
                        PBIX [0x07] = Local7
                        PBIX [0x12] = "LION"
                        Switch (Local3)
                        {
                            Case (One)
                            {
                                PBIX [0x10] = "AP18C8K"
                            }
                            Case (0x02)
                            {
                                PBIX [0x10] = "AP18C4K"
                            }
                            Case (0x03)
                            {
                                PBIX [0x10] = "AC14B8K"
                            }
                            Case (0x04)
                            {
                                PBIX [0x10] = "AP19B5L"
                            }
                            Case (0x05)
                            {
                                PBIX [0x10] = "AP20CBL"
                            }
                            Case (0x06)
                            {
                                PBIX [0x10] = "AP19B8K"
                            }
                            Case (0x07)
                            {
                                PBIX [0x10] = "AP19B5K"
                            }
                            Case (0x08)
                            {
                                PBIX [0x10] = "AP18C7K"
                            }
                            Default
                            {
                                PBIX [0x10] = "UNKNOWN"
                            }

                        }

                        Switch (Local4)
                        {
                            Case (0x03)
                            {
                                PBIX [0x13] = "SANYO"
                            }
                            Case (0x04)
                            {
                                PBIX [0x13] = "SONY"
                            }
                            Case (0x05)
                            {
                                PBIX [0x13] = "PANASONIC"
                            }
                            Case (0x06)
                            {
                                PBIX [0x13] = "SAMSUNG"
                            }
                            Case (0x07)
                            {
                                PBIX [0x13] = "SIMPLO"
                            }
                            Case (0x08)
                            {
                                PBIX [0x13] = "MOTOROLA"
                            }
                            Case (0x09)
                            {
                                PBIX [0x13] = "CELXPERT"
                            }
                            Case (0x0A)
                            {
                                PBIX [0x13] = "LGC"
                            }
                            Case (0x0B)
                            {
                                PBIX [0x13] = "GETAC"
                            }
                            Case (0x0C)
                            {
                                PBIX [0x13] = "MURATA"
                            }
                            Case (0x0D)
                            {
                                PBIX [0x13] = "COSMX"
                            }
                            Default
                            {
                                PBIX [0x13] = "UNKNOWN"
                            }

                        }

                        PBIX [0x11] = ITOS (ToBCD (Local5))
                    }
                }

                Name (RCAP, Zero)
                Method (_BST, 0, NotSerialized)  // _BST: Battery Status
                {
                    If (ECOK)
                    {
                        Local0 = ^^PCI0.LPC0.EC0.MBTS /* \_SB_.PCI0.LPC0.EC0_.MBTS */
                        If ((Local0 == Zero))
                        {
                            PBST [Zero] = Zero
                            PBST [One] = Ones
                            PBST [0x02] = Ones
                            PBST [0x03] = Ones
                            RCAP = Zero
                            Return (PBST) /* \_SB_.BAT1.PBST */
                        }

                        Local1 = ^^PCI0.LPC0.EC0.MBRM /* \_SB_.PCI0.LPC0.EC0_.MBRM */
                        PBST [0x02] = Local1
                        RCAP = Local1
                        Local3 = ^^PCI0.LPC0.EC0.MCUR /* \_SB_.PCI0.LPC0.EC0_.MCUR */
                        PBST [One] = POSW (Local3)
                        If (^^PCI0.LPC0.EC0.MFCF)
                        {
                            PBST [Zero] = Zero
                        }
                        ElseIf (^^PCI0.LPC0.EC0.MBPC)
                        {
                            PBST [Zero] = 0x02
                        }
                        ElseIf (^^PCI0.LPC0.EC0.MBDX)
                        {
                            PBST [Zero] = One
                        }
                        Else
                        {
                            PBST [Zero] = Zero
                        }

                        PBST [0x03] = ^^PCI0.LPC0.EC0.MBVG /* \_SB_.PCI0.LPC0.EC0_.MBVG */
                    }
                    Else
                    {
                        PBST [Zero] = Zero
                        PBST [One] = Ones
                        PBST [0x02] = Ones
                        PBST [0x03] = Ones
                        RCAP = Zero
                    }

                    Return (PBST) /* \_SB_.BAT1.PBST */
                }
            }
        }

        Scope (\_SB)
        {
            Device (LID0)
            {
                Name (_HID, EisaId ("PNP0C0D") /* Lid Device */)  // _HID: Hardware ID
                Method (_LID, 0, NotSerialized)  // _LID: Lid Status
                {
                    If (((^^PCI0.LPC0.EC0.ECTM & 0x08) == 0x08))
                    {
                        Return (One)
                    }

                    If ((EPXE == 0x45))
                    {
                        Return (One)
                    }

                    If (^^PCI0.LPC0.EC0.LIDT)
                    {
                        Return (Zero)
                    }
                    Else
                    {
                        Return (One)
                    }
                }
            }
        }

        Scope (\_TZ)
        {
            ThermalZone (TZ01)
            {
                Method (_TMP, 0, NotSerialized)  // _TMP: Temperature
                {
                    If (\_SB.ECOK)
                    {
                        Local0 = \_SB.PCI0.LPC0.EC0.CTMP
                        Return (((Local0 * 0x0A) + 0x0AAC))
                    }
                    Else
                    {
                        Return (0x0C3C)
                    }
                }

                Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
                {
                    Return (0x0F5C)
                }

                Name (_PSL, Package (0x01)  // _PSL: Passive List
                {
                    \_SB.PLTF.C000
                })
                Name (_TSP, 0x28)  // _TSP: Thermal Sampling Period
                Name (_TC1, 0x02)  // _TC1: Thermal Constant 1
                Name (_TC2, 0x03)  // _TC2: Thermal Constant 2
                Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
                {
                    Return (0x0EC6)
                }
            }
        }

        Scope (\_SB)
        {
            Name (QBCL, Package (0x0D)
            {
                0x64, 
                0x1E, 
                Zero, 
                0x0A, 
                0x14, 
                0x1E, 
                0x28, 
                0x32, 
                0x3C, 
                0x46, 
                0x50, 
                0x5A, 
                0x64
            })
            Name (LC0L, Zero)
            Name (LC0V, Zero)
            Method (QBCM, 1, Serialized)
            {
                LC0V = Arg0
                Switch (Arg0)
                {
                    Case (Zero)
                    {
                        LC0L = Zero
                        Local0 = BCL0 /* \_SB_.BCL0 */
                    }
                    Case (0x0A)
                    {
                        LC0L = One
                        Local0 = BCL1 /* \_SB_.BCL1 */
                    }
                    Case (0x14)
                    {
                        LC0L = 0x02
                        Local0 = BCL2 /* \_SB_.BCL2 */
                    }
                    Case (0x1E)
                    {
                        LC0L = 0x03
                        Local0 = BCL3 /* \_SB_.BCL3 */
                    }
                    Case (0x28)
                    {
                        LC0L = 0x04
                        Local0 = BCL4 /* \_SB_.BCL4 */
                    }
                    Case (0x32)
                    {
                        LC0L = 0x05
                        Local0 = BCL5 /* \_SB_.BCL5 */
                    }
                    Case (0x3C)
                    {
                        LC0L = 0x06
                        Local0 = BCL6 /* \_SB_.BCL6 */
                    }
                    Case (0x46)
                    {
                        LC0L = 0x07
                        Local0 = BCL7 /* \_SB_.BCL7 */
                    }
                    Case (0x50)
                    {
                        LC0L = 0x08
                        Local0 = BCL8 /* \_SB_.BCL8 */
                    }
                    Case (0x5A)
                    {
                        LC0L = 0x09
                        Local0 = BCL9 /* \_SB_.BCL9 */
                    }
                    Case (0x64)
                    {
                        LC0L = 0x0A
                        Local0 = BLVA /* \_SB_.BLVA */
                    }

                }

                Return (Local0)
            }
        }

        Scope (\_SB)
        {
            OperationRegion (EXCO, SystemIO, 0x72, 0x02)
            Field (EXCO, ByteAcc, NoLock, Preserve)
            {
                INDX,   8, 
                DATA,   8
            }

            IndexField (INDX, DATA, ByteAcc, NoLock, Preserve)
            {
                Offset (0x87), 
                RDWL,   1, 
                RDBT,   1, 
                RD3G,   1, 
                TPDS,   1, 
                PTWL,   1, 
                PTBT,   1, 
                PT3G,   1, 
                RDTS,   1, 
                Offset (0x8A), 
                PTFP,   1, 
                Offset (0xEE), 
                CSBM,   8, 
                Offset (0xFF), 
                Offset (0x100)
            }
        }

        Scope (\_SB)
        {
            Device (A_CC)
            {
                Name (_HID, "SMO8820")  // _HID: Hardware ID
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    If ((BID2 == One))
                    {
                        Return (0x0F)
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }

                Name (_UID, One)  // _UID: Unique ID
                Name (BUF2, ResourceTemplate ()
                {
                    GpioInt (Edge, ActiveLow, Exclusive, PullDefault, 0x0000,
                        "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0055
                        }
                })
                Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                {
                    Return (BUF2) /* \_SB_.A_CC.BUF2 */
                }

                Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
                {
                    Return (BUF2) /* \_SB_.A_CC.BUF2 */
                }
            }
        }
    }

    Name (TSOS, 0x75)
    If (CondRefOf (\_OSI))
    {
        If (_OSI ("Windows 2009"))
        {
            TSOS = 0x50
        }

        If (_OSI ("Windows 2015"))
        {
            TSOS = 0x70
        }
    }

    Scope (_SB)
    {
        OperationRegion (SMIC, SystemMemory, 0xFED80000, 0x00800000)
        Field (SMIC, ByteAcc, NoLock, Preserve)
        {
            Offset (0x36A), 
            SMIB,   8
        }

        OperationRegion (SSMI, SystemIO, SMIB, 0x02)
        Field (SSMI, AnyAcc, NoLock, Preserve)
        {
            SMIW,   16
        }

        OperationRegion (ECMC, SystemIO, 0x72, 0x02)
        Field (ECMC, AnyAcc, NoLock, Preserve)
        {
            ECMI,   8, 
            ECMD,   8
        }

        IndexField (ECMI, ECMD, ByteAcc, NoLock, Preserve)
        {
            Offset (0x08), 
            FRTB,   32
        }

        OperationRegion (FRTP, SystemMemory, FRTB, 0x0100)
        Field (FRTP, AnyAcc, NoLock, Preserve)
        {
            PEBA,   32, 
                ,   5, 
            IC0E,   1, 
            IC1E,   1, 
            IC2E,   1, 
            IC3E,   1, 
            IC4E,   1, 
            IC5E,   1, 
            UT0E,   1, 
            UT1E,   1, 
                ,   1, 
                ,   1, 
            ST_E,   1, 
            UT2E,   1, 
                ,   1, 
            EMMD,   2, 
                ,   3, 
            XHCE,   1, 
                ,   1, 
                ,   1, 
            UT3E,   1, 
            ESPI,   1, 
            EMME,   1, 
            HFPE,   1, 
            Offset (0x08), 
            PCEF,   1, 
                ,   4, 
            IC0D,   1, 
            IC1D,   1, 
            IC2D,   1, 
            IC3D,   1, 
            IC4D,   1, 
            IC5D,   1, 
            UT0D,   1, 
            UT1D,   1, 
                ,   1, 
                ,   1, 
            ST_D,   1, 
            UT2D,   1, 
                ,   1, 
            EHCD,   1, 
                ,   4, 
            XHCD,   1, 
            SD_D,   1, 
                ,   1, 
            UT3D,   1, 
                ,   1, 
            EMD3,   1, 
                ,   2, 
            S03D,   1, 
            FW00,   16, 
            FW01,   32, 
            FW02,   16, 
            FW03,   32, 
            SDS0,   8, 
            SDS1,   8, 
            CZFG,   1, 
            Offset (0x20), 
            SD10,   32, 
            EH10,   32, 
            XH10,   32, 
            STBA,   32
        }

        OperationRegion (FCFG, SystemMemory, PEBA, 0x01000000)
        Field (FCFG, DWordAcc, NoLock, Preserve)
        {
            Offset (0xA3044), 
            IPDE,   32, 
            IMPE,   32, 
            Offset (0xA3078), 
                ,   2, 
            LDQ0,   1, 
            Offset (0xA30CB), 
                ,   7, 
            AUSS,   1
        }

        OperationRegion (IOMX, SystemMemory, 0xFED80D00, 0x0100)
        Field (IOMX, AnyAcc, NoLock, Preserve)
        {
            Offset (0x15), 
            IM15,   8, 
            IM16,   8, 
            Offset (0x1F), 
            IM1F,   8, 
            IM20,   8, 
            Offset (0x44), 
            IM44,   8, 
            Offset (0x46), 
            IM46,   8, 
            Offset (0x4A), 
            IM4A,   8, 
            IM4B,   8, 
            Offset (0x57), 
            IM57,   8, 
            IM58,   8, 
            Offset (0x68), 
            IM68,   8, 
            IM69,   8, 
            IM6A,   8, 
            IM6B,   8, 
            Offset (0x6D), 
            IM6D,   8
        }

        OperationRegion (FACR, SystemMemory, 0xFED81E00, 0x0100)
        Field (FACR, AnyAcc, NoLock, Preserve)
        {
            Offset (0x80), 
                ,   28, 
            RD28,   1, 
                ,   1, 
            RQTY,   1, 
            Offset (0x84), 
                ,   28, 
            SD28,   1, 
                ,   1, 
            Offset (0xA0), 
            PG1A,   1
        }

        OperationRegion (EMMX, SystemMemory, 0xFEDD5800, 0x0130)
        Field (EMMX, AnyAcc, NoLock, Preserve)
        {
            Offset (0xD0), 
                ,   17, 
            FC18,   1, 
            FC33,   1, 
                ,   7, 
            CD_T,   1, 
            WP_T,   1
        }

        OperationRegion (EMMB, SystemMemory, 0xFEDD5800, 0x0130)
        Field (EMMB, AnyAcc, NoLock, Preserve)
        {
            Offset (0xA4), 
            E0A4,   32, 
            E0A8,   32, 
            Offset (0xB0), 
            E0B0,   32, 
            Offset (0xD0), 
            E0D0,   32, 
            Offset (0x116), 
            E116,   32
        }

        Name (SVBF, Buffer (0x0100)
        {
             0x00                                             // .
        })
        CreateDWordField (SVBF, Zero, S0A4)
        CreateDWordField (SVBF, 0x04, S0A8)
        CreateDWordField (SVBF, 0x08, S0B0)
        CreateDWordField (SVBF, 0x0C, S0D0)
        CreateDWordField (SVBF, 0x10, S116)
        Method (SECR, 0, Serialized)
        {
            S116 = E116 /* \_SB_.E116 */
            RQTY = Zero
            RD28 = One
            Local0 = SD28 /* \_SB_.SD28 */
            While (Local0)
            {
                Local0 = SD28 /* \_SB_.SD28 */
            }
        }

        Method (RECR, 0, Serialized)
        {
            E116 = S116 /* \_SB_.S116 */
        }

        OperationRegion (LUIE, SystemMemory, 0xFEDC0020, 0x04)
        Field (LUIE, AnyAcc, NoLock, Preserve)
        {
            IER0,   1, 
            IER1,   1, 
            IER2,   1, 
            IER3,   1, 
            UOL0,   1, 
            UOL1,   1, 
            UOL2,   1, 
            UOL3,   1, 
            WUR0,   2, 
            WUR1,   2, 
            WUR2,   2, 
            WUR3,   2
        }

        Method (FRUI, 2, Serialized)
        {
            If ((Arg0 == Zero))
            {
                Arg1 = IUA0 /* \_SB_.IUA0 */
            }

            If ((Arg0 == One))
            {
                Arg1 = IUA1 /* \_SB_.IUA1 */
            }

            If ((Arg0 == 0x02))
            {
                Arg1 = IUA2 /* \_SB_.IUA2 */
            }

            If ((Arg0 == 0x03))
            {
                Arg1 = IUA3 /* \_SB_.IUA3 */
            }
        }

        Method (SRAD, 2, Serialized)
        {
            Local0 = (Arg0 << One)
            Local0 += 0xFED81E40
            OperationRegion (ADCR, SystemMemory, Local0, 0x02)
            Field (ADCR, ByteAcc, NoLock, Preserve)
            {
                ADTD,   2, 
                ADPS,   1, 
                ADPD,   1, 
                ADSO,   1, 
                ADSC,   1, 
                ADSR,   1, 
                ADIS,   1, 
                ADDS,   3
            }

            ADIS = One
            ADSR = Zero
            Stall (Arg1)
            ADSR = One
            ADIS = Zero
            Stall (Arg1)
        }

        Method (DSAD, 2, Serialized)
        {
            Local0 = (Arg0 << One)
            Local0 += 0xFED81E40
            OperationRegion (ADCR, SystemMemory, Local0, 0x02)
            Field (ADCR, ByteAcc, NoLock, Preserve)
            {
                ADTD,   2, 
                ADPS,   1, 
                ADPD,   1, 
                ADSO,   1, 
                ADSC,   1, 
                ADSR,   1, 
                ADIS,   1, 
                ADDS,   3
            }

            If ((Arg0 != ADTD))
            {
                If ((Arg1 == Zero))
                {
                    ADTD = Zero
                    ADPD = One
                    Local0 = ADDS /* \_SB_.DSAD.ADDS */
                    While ((Local0 != 0x07))
                    {
                        Local0 = ADDS /* \_SB_.DSAD.ADDS */
                    }
                }

                If ((Arg1 == 0x03))
                {
                    ADPD = Zero
                    Local0 = ADDS /* \_SB_.DSAD.ADDS */
                    While ((Local0 != Zero))
                    {
                        Local0 = ADDS /* \_SB_.DSAD.ADDS */
                    }

                    ADTD = 0x03
                }
            }
        }

        Method (HSAD, 2, Serialized)
        {
            Local3 = (One << Arg0)
            Local0 = (Arg0 << One)
            Local0 += 0xFED81E40
            OperationRegion (ADCR, SystemMemory, Local0, 0x02)
            Field (ADCR, ByteAcc, NoLock, Preserve)
            {
                ADTD,   2, 
                ADPS,   1, 
                ADPD,   1, 
                ADSO,   1, 
                ADSC,   1, 
                ADSR,   1, 
                ADIS,   1, 
                ADDS,   3
            }

            If ((Arg1 != ADTD))
            {
                If ((Arg1 == Zero))
                {
                    PG1A = One
                    ADTD = Zero
                    ADPD = One
                    Local0 = ADDS /* \_SB_.HSAD.ADDS */
                    While ((Local0 != 0x07))
                    {
                        Local0 = ADDS /* \_SB_.HSAD.ADDS */
                    }

                    RQTY = One
                    RD28 = One
                    Local0 = SD28 /* \_SB_.SD28 */
                    While (!Local0)
                    {
                        Local0 = SD28 /* \_SB_.SD28 */
                    }
                }

                If ((Arg1 == 0x03))
                {
                    RQTY = Zero
                    RD28 = One
                    Local0 = SD28 /* \_SB_.SD28 */
                    While (Local0)
                    {
                        Local0 = SD28 /* \_SB_.SD28 */
                    }

                    ADPD = Zero
                    Local0 = ADDS /* \_SB_.HSAD.ADDS */
                    While ((Local0 != Zero))
                    {
                        Local0 = ADDS /* \_SB_.HSAD.ADDS */
                    }

                    ADTD = 0x03
                    PG1A = Zero
                }
            }
        }

        OperationRegion (FPIC, SystemIO, 0x0C00, 0x02)
        Field (FPIC, AnyAcc, NoLock, Preserve)
        {
            FPII,   8, 
            FPID,   8
        }

        IndexField (FPII, FPID, ByteAcc, NoLock, Preserve)
        {
            Offset (0xF4), 
            IUA0,   8, 
            IUA1,   8, 
            Offset (0xF8), 
            IUA2,   8, 
            IUA3,   8
        }

        Device (HFP1)
        {
            Name (_HID, "AMDI0060")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (HFPE)
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0xFEC11000,         // Address Base
                        0x00000100,         // Address Length
                        )
                })
                Return (RBUF) /* \_SB_.HFP1._CRS.RBUF */
            }
        }

        Device (GPIO)
        {
            Name (_HID, "AMDI0030")  // _HID: Hardware ID
            Name (_CID, "AMDI0030")  // _CID: Compatible ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
                    {
                        0x00000007,
                    }
                    Memory32Fixed (ReadWrite,
                        0xFED81500,         // Address Base
                        0x00000400,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0xFED81200,         // Address Base
                        0x00000100,         // Address Length
                        )
                })
                Return (RBUF) /* \_SB_.GPIO._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (FUR0)
        {
            Name (_HID, "AMDI0020")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {3}
                Memory32Fixed (ReadWrite,
                    0xFEDC9000,         // Address Base
                    0x00001000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFEDC7000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((UT0E == One))
                    {
                        If (IER0)
                        {
                            Return (Zero)
                        }

                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (FUR1)
        {
            Name (_HID, "AMDI0020")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {4}
                Memory32Fixed (ReadWrite,
                    0xFEDCA000,         // Address Base
                    0x00001000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFEDC8000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((UT1E == One))
                    {
                        If (IER1)
                        {
                            Return (Zero)
                        }

                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (FUR2)
        {
            Name (_HID, "AMDI0020")  // _HID: Hardware ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {3}
                Memory32Fixed (ReadWrite,
                    0xFEDCE000,         // Address Base
                    0x00001000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFEDCC000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((UT2E == One))
                    {
                        If (IER2)
                        {
                            Return (Zero)
                        }

                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (FUR3)
        {
            Name (_HID, "AMDI0020")  // _HID: Hardware ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {4}
                Memory32Fixed (ReadWrite,
                    0xFEDCF000,         // Address Base
                    0x00001000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFEDCD000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((UT3E == One))
                    {
                        If (IER3)
                        {
                            Return (Zero)
                        }

                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }

        Device (I2CA)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {10}
                Memory32Fixed (ReadWrite,
                    0xFEDC2000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC0E == One))
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x05, 0xC8)
            }
        }

        Device (I2CB)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {11}
                Memory32Fixed (ReadWrite,
                    0xFEDC3000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC1E == One))
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x06, 0xC8)
            }
        }

        Device (I2CC)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {4}
                Memory32Fixed (ReadWrite,
                    0xFEDC4000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC2E == One))
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x07, 0xC8)
            }
        }

        Device (I2CD)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {6}
                Memory32Fixed (ReadWrite,
                    0xFEDC5000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC3E == One))
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x08, 0xC8)
            }
        }

        Device (I2CE)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, 0x04)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {14}
                Memory32Fixed (ReadWrite,
                    0xFEDC6000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC4E == One))
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x09, 0xC8)
            }
        }

        Device (I2CF)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, 0x05)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {15}
                Memory32Fixed (ReadWrite,
                    0xFEDCB000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC5E == One))
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x0A, 0xC8)
            }
        }

        Method (EPIN, 0, NotSerialized)
        {
            IPDE = Zero
            IMPE = Zero
            IM15 = One
            IM16 = One
            IM20 = One
            IM44 = One
            IM46 = One
            IM68 = One
            IM69 = One
            IM6A = One
            IM6B = One
            IM4A = One
            IM58 = One
            IM4B = One
            IM57 = One
            IM6D = One
            IM1F = One
            SECR ()
        }

        Name (NCRS, ResourceTemplate ()
        {
            Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
            {
                0x00000005,
            }
            Memory32Fixed (ReadWrite,
                0xFEDD5000,         // Address Base
                0x00001000,         // Address Length
                )
        })
        Name (DCRS, ResourceTemplate ()
        {
            Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
            {
                0x00000005,
            }
            Memory32Fixed (ReadWrite,
                0xFEDD5000,         // Address Base
                0x00001000,         // Address Length
                )
            GpioInt (Edge, ActiveBoth, SharedAndWake, PullUp, 0x0BB8,
                "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                )
                {   // Pin list
                    0x0044
                }
            GpioIo (Shared, PullUp, 0x0000, 0x0000, IoRestrictionNone,
                "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                )
                {   // Pin list
                    0x0044
                }
        })
        Name (AHID, "AMDI0040")
        Name (ACID, "AMDI0040")
        Name (SHID, 0x400DD041)
        Name (SCID, "PCICC_080501")
        Device (EMM0)
        {
            Method (_HID, 0, Serialized)  // _HID: Hardware ID
            {
                If (EMMD)
                {
                    Return (SHID) /* \_SB_.SHID */
                }
                Else
                {
                    Return (AHID) /* \_SB_.AHID */
                }
            }

            Method (_CID, 0, Serialized)  // _CID: Compatible ID
            {
                If (EMMD)
                {
                    Return (SCID) /* \_SB_.SCID */
                }
                Else
                {
                    Return (ACID) /* \_SB_.ACID */
                }
            }

            Name (_UID, Zero)  // _UID: Unique ID
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                If (EMD3)
                {
                    Return (DCRS) /* \_SB_.DCRS */
                }
                Else
                {
                    Return (NCRS) /* \_SB_.NCRS */
                }
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If (EMME)
                    {
                        Return (0x0F)
                    }

                    Return (Zero)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                If (EMME)
                {
                    EPIN ()
                }
            }

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {
                If ((EMD3 && EMME))
                {
                    Return (0x04)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If ((EMD3 && EMME))
                {
                    HSAD (0x1C, Zero)
                    RECR ()
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                If ((EMD3 && EMME))
                {
                    HSAD (0x1C, 0x03)
                }
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Device (UAR1)
        {
            Name (_HID, EisaId ("PNP0500") /* Standard PC COM Serial Port */)  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (_DDN, "COM1")  // _DDN: DOS Device Name
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (IER0)
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x02E8,             // Range Minimum
                        0x02E8,             // Range Maximum
                        0x01,               // Alignment
                        0x08,               // Length
                        _Y09)
                    IRQNoFlags (_Y0A)
                        {3}
                })
                CreateByteField (BUF0, \_SB.PCI0.UAR1._CRS._Y09._MIN, IOLO)  // _MIN: Minimum Base Address
                CreateByteField (BUF0, 0x03, IOHI)
                CreateByteField (BUF0, \_SB.PCI0.UAR1._CRS._Y09._MAX, IORL)  // _MAX: Maximum Base Address
                CreateByteField (BUF0, 0x05, IORH)
                CreateWordField (BUF0, \_SB.PCI0.UAR1._CRS._Y0A._INT, IRQL)  // _INT: Interrupts
                FRUI (WUR0, IRQL)
                Return (BUF0) /* \_SB_.PCI0.UAR1._CRS.BUF0 */
            }
        }

        Device (UAR2)
        {
            Name (_HID, EisaId ("PNP0500") /* Standard PC COM Serial Port */)  // _HID: Hardware ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Name (_DDN, "COM2")  // _DDN: DOS Device Name
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (IER1)
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x02F8,             // Range Minimum
                        0x02F8,             // Range Maximum
                        0x01,               // Alignment
                        0x08,               // Length
                        _Y0B)
                    IRQNoFlags (_Y0C)
                        {4}
                })
                CreateByteField (BUF0, \_SB.PCI0.UAR2._CRS._Y0B._MIN, IOLO)  // _MIN: Minimum Base Address
                CreateByteField (BUF0, 0x03, IOHI)
                CreateByteField (BUF0, \_SB.PCI0.UAR2._CRS._Y0B._MAX, IORL)  // _MAX: Maximum Base Address
                CreateByteField (BUF0, 0x05, IORH)
                CreateWordField (BUF0, \_SB.PCI0.UAR2._CRS._Y0C._INT, IRQL)  // _INT: Interrupts
                FRUI (WUR1, IRQL)
                Return (BUF0) /* \_SB_.PCI0.UAR2._CRS.BUF0 */
            }
        }

        Device (UAR3)
        {
            Name (_HID, EisaId ("PNP0500") /* Standard PC COM Serial Port */)  // _HID: Hardware ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Name (_DDN, "COM3")  // _DDN: DOS Device Name
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (IER2)
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x03E8,             // Range Minimum
                        0x03E8,             // Range Maximum
                        0x01,               // Alignment
                        0x08,               // Length
                        _Y0D)
                    IRQNoFlags (_Y0E)
                        {3}
                })
                CreateByteField (BUF0, \_SB.PCI0.UAR3._CRS._Y0D._MIN, IOLO)  // _MIN: Minimum Base Address
                CreateByteField (BUF0, 0x03, IOHI)
                CreateByteField (BUF0, \_SB.PCI0.UAR3._CRS._Y0D._MAX, IORL)  // _MAX: Maximum Base Address
                CreateByteField (BUF0, 0x05, IORH)
                CreateWordField (BUF0, \_SB.PCI0.UAR3._CRS._Y0E._INT, IRQL)  // _INT: Interrupts
                FRUI (WUR2, IRQL)
                Return (BUF0) /* \_SB_.PCI0.UAR3._CRS.BUF0 */
            }
        }

        Device (UAR4)
        {
            Name (_HID, EisaId ("PNP0500") /* Standard PC COM Serial Port */)  // _HID: Hardware ID
            Name (_UID, 0x04)  // _UID: Unique ID
            Name (_DDN, "COM4")  // _DDN: DOS Device Name
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (IER3)
                {
                    Return (0x0F)
                }

                Return (Zero)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x03F8,             // Range Minimum
                        0x03F8,             // Range Maximum
                        0x01,               // Alignment
                        0x08,               // Length
                        _Y0F)
                    IRQNoFlags (_Y10)
                        {4}
                })
                CreateByteField (BUF0, \_SB.PCI0.UAR4._CRS._Y0F._MIN, IOLO)  // _MIN: Minimum Base Address
                CreateByteField (BUF0, 0x03, IOHI)
                CreateByteField (BUF0, \_SB.PCI0.UAR4._CRS._Y0F._MAX, IORL)  // _MAX: Maximum Base Address
                CreateByteField (BUF0, 0x05, IORH)
                CreateWordField (BUF0, \_SB.PCI0.UAR4._CRS._Y10._INT, IRQL)  // _INT: Interrupts
                FRUI (WUR3, IRQL)
                Return (BUF0) /* \_SB_.PCI0.UAR4._CRS.BUF0 */
            }
        }
    }

    Scope (_SB.I2CA)
    {
        Name (SBFS, ResourceTemplate ()
        {
            I2cSerialBusV2 (0x002C, ControllerInitiated, 0x00061A80,
                AddressingMode7Bit, "\\_SB.I2CA",
                0x00, ResourceConsumer, , Exclusive,
                )
        })
        Name (SBFE, ResourceTemplate ()
        {
            I2cSerialBusV2 (0x0015, ControllerInitiated, 0x00061A80,
                AddressingMode7Bit, "\\_SB.I2CA",
                0x00, ResourceConsumer, , Exclusive,
                )
        })
        Method (_REG, 2, NotSerialized)  // _REG: Region Availability
        {
            If ((Arg1 == One))
            {
                If ((TPOS >= 0x61))
                {
                    ^^PCI0.LPC0.EC0.TOHP = TPDS /* \_SB_.TPDS */
                    ^^PCI0.LPC0.EC0.TPRD = One
                }
            }
        }

        Device (TPDD)
        {
            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {
                If ((TPVD == 0x53))
                {
                    Return ("SYNA7DB5")
                }
                ElseIf ((PTFP == One))
                {
                    Return ("ELAN0515")
                }
                Else
                {
                    Return ("ELAN050A")
                }
            }

            Name (_CID, "PNP0C50" /* HID Protocol Device (I2C bus) */)  // _CID: Compatible ID
            Name (_UID, 0x05)  // _UID: Unique ID
            Name (HID2, Zero)
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (SBFI, ResourceTemplate ()
                {
                    GpioInt (Level, ActiveLow, Exclusive, PullNone, 0x0000,
                        "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0009
                        }
                })
                If ((TPVD == 0x53))
                {
                    HID2 = 0x20
                    Return (ConcatenateResTemplate (SBFS, SBFI))
                }
                Else
                {
                    HID2 = One
                    Return (ConcatenateResTemplate (SBFE, SBFI))
                }
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PTPS == Zero))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (0x0F)
                }
            }

            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {
                If (Arg0) {}
                Else
                {
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                {
                    Switch (ToInteger (Arg2))
                    {
                        Case (Zero)
                        {
                            Switch (ToInteger (Arg1))
                            {
                                Case (One)
                                {
                                    Return (Buffer (One)
                                    {
                                         0x03                                             // .
                                    })
                                }
                                Default
                                {
                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                }

                            }
                        }
                        Case (One)
                        {
                            Return (HID2) /* \_SB_.I2CA.TPDD.HID2 */
                        }
                        Default
                        {
                            Return (Zero)
                        }

                    }
                }
                Else
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }
        }
    }
}



FACP
----
[000h 0000   4]                    Signature : "FACP"    [Fixed ACPI Description Table (FADT)]
[004h 0004   4]                 Table Length : 0000010C
[008h 0008   1]                     Revision : 05
[009h 0009   1]                     Checksum : E3
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   4]                 FACS Address : CCEF5000
[028h 0040   4]                 DSDT Address : CDFDC000
[02Ch 0044   1]                        Model : 00
[02Dh 0045   1]                   PM Profile : 02 [Mobile]
[02Eh 0046   2]                SCI Interrupt : 0009
[030h 0048   4]             SMI Command Port : 000000B0
[034h 0052   1]            ACPI Enable Value : A0
[035h 0053   1]           ACPI Disable Value : A1
[036h 0054   1]               S4BIOS Command : 00
[037h 0055   1]              P-State Control : 00
[038h 0056   4]     PM1A Event Block Address : 00000400
[03Ch 0060   4]     PM1B Event Block Address : 00000000
[040h 0064   4]   PM1A Control Block Address : 00000404
[044h 0068   4]   PM1B Control Block Address : 00000000
[048h 0072   4]    PM2 Control Block Address : 00000800
[04Ch 0076   4]       PM Timer Block Address : 00000408
[050h 0080   4]           GPE0 Block Address : 00000420
[054h 0084   4]           GPE1 Block Address : 00000000
[058h 0088   1]       PM1 Event Block Length : 04
[059h 0089   1]     PM1 Control Block Length : 02
[05Ah 0090   1]     PM2 Control Block Length : 01
[05Bh 0091   1]        PM Timer Block Length : 04
[05Ch 0092   1]            GPE0 Block Length : 08
[05Dh 0093   1]            GPE1 Block Length : 00
[05Eh 0094   1]             GPE1 Base Offset : 00
[05Fh 0095   1]                 _CST Support : 00
[060h 0096   2]                   C2 Latency : 0064
[062h 0098   2]                   C3 Latency : 03E9
[064h 0100   2]               CPU Cache Size : 0000
[066h 0102   2]           Cache Flush Stride : 0000
[068h 0104   1]            Duty Cycle Offset : 01
[069h 0105   1]             Duty Cycle Width : 03
[06Ah 0106   1]          RTC Day Alarm Index : 0D
[06Bh 0107   1]        RTC Month Alarm Index : 00
[06Ch 0108   1]            RTC Century Index : 00
[06Dh 0109   2]   Boot Flags (decoded below) : 0013
               Legacy Devices Supported (V2) : 1
            8042 Present on ports 60/64 (V2) : 1
                        VGA Not Present (V4) : 0
                      MSI Not Supported (V4) : 0
                PCIe ASPM Not Supported (V4) : 1
                   CMOS RTC Not Present (V5) : 0
[06Fh 0111   1]                     Reserved : 00
[070h 0112   4]        Flags (decoded below) : 0000C5AD
      WBINVD instruction is operational (V1) : 1
              WBINVD flushes all caches (V1) : 0
                    All CPUs support C1 (V1) : 1
                  C2 works on MP system (V1) : 1
            Control Method Power Button (V1) : 0
            Control Method Sleep Button (V1) : 1
        RTC wake not in fixed reg space (V1) : 0
            RTC can wake system from S4 (V1) : 1
                        32-bit PM Timer (V1) : 1
                      Docking Supported (V1) : 0
               Reset Register Supported (V2) : 1
                            Sealed Case (V3) : 0
                    Headless - No Video (V3) : 0
        Use native instr after SLP_TYPx (V3) : 0
              PCIEXP_WAK Bits Supported (V4) : 1
                     Use Platform Timer (V4) : 1
               RTC_STS valid on S4 wake (V4) : 0
                Remote Power-on capable (V4) : 0
                 Use APIC Cluster Model (V4) : 0
     Use APIC Physical Destination Mode (V4) : 0
                       Hardware Reduced (V5) : 0
                      Low Power S0 Idle (V5) : 0

[074h 0116  12]               Reset Register : [Generic Address Structure]
[074h 0116   1]                     Space ID : 01 [SystemIO]
[075h 0117   1]                    Bit Width : 08
[076h 0118   1]                   Bit Offset : 00
[077h 0119   1]         Encoded Access Width : 01 [Byte Access:8]
[078h 0120   8]                      Address : 00000000000000B0

[080h 0128   1]         Value to cause reset : FB
[081h 0129   2]    ARM Flags (decoded below) : 0000
                              PSCI Compliant : 0
                       Must use HVC for PSCI : 0

[083h 0131   1]          FADT Minor Revision : 00
[084h 0132   8]                 FACS Address : 0000000000000000
[08Ch 0140   8]                 DSDT Address : 00000000CDFDC000
[094h 0148  12]             PM1A Event Block : [Generic Address Structure]
[094h 0148   1]                     Space ID : 01 [SystemIO]
[095h 0149   1]                    Bit Width : 20
[096h 0150   1]                   Bit Offset : 00
[097h 0151   1]         Encoded Access Width : 03 [DWord Access:32]
[098h 0152   8]                      Address : 0000000000000400

[0A0h 0160  12]             PM1B Event Block : [Generic Address Structure]
[0A0h 0160   1]                     Space ID : 00 [SystemMemory]
[0A1h 0161   1]                    Bit Width : 00
[0A2h 0162   1]                   Bit Offset : 00
[0A3h 0163   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0A4h 0164   8]                      Address : 0000000000000000

[0ACh 0172  12]           PM1A Control Block : [Generic Address Structure]
[0ACh 0172   1]                     Space ID : 01 [SystemIO]
[0ADh 0173   1]                    Bit Width : 10
[0AEh 0174   1]                   Bit Offset : 00
[0AFh 0175   1]         Encoded Access Width : 02 [Word Access:16]
[0B0h 0176   8]                      Address : 0000000000000404

[0B8h 0184  12]           PM1B Control Block : [Generic Address Structure]
[0B8h 0184   1]                     Space ID : 00 [SystemMemory]
[0B9h 0185   1]                    Bit Width : 00
[0BAh 0186   1]                   Bit Offset : 00
[0BBh 0187   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0BCh 0188   8]                      Address : 0000000000000000

[0C4h 0196  12]            PM2 Control Block : [Generic Address Structure]
[0C4h 0196   1]                     Space ID : 01 [SystemIO]
[0C5h 0197   1]                    Bit Width : 08
[0C6h 0198   1]                   Bit Offset : 00
[0C7h 0199   1]         Encoded Access Width : 01 [Byte Access:8]
[0C8h 0200   8]                      Address : 0000000000000800

[0D0h 0208  12]               PM Timer Block : [Generic Address Structure]
[0D0h 0208   1]                     Space ID : 01 [SystemIO]
[0D1h 0209   1]                    Bit Width : 20
[0D2h 0210   1]                   Bit Offset : 00
[0D3h 0211   1]         Encoded Access Width : 03 [DWord Access:32]
[0D4h 0212   8]                      Address : 0000000000000408

[0DCh 0220  12]                   GPE0 Block : [Generic Address Structure]
[0DCh 0220   1]                     Space ID : 01 [SystemIO]
[0DDh 0221   1]                    Bit Width : 40
[0DEh 0222   1]                   Bit Offset : 00
[0DFh 0223   1]         Encoded Access Width : 04 [QWord Access:64]
[0E0h 0224   8]                      Address : 0000000000000420

[0E8h 0232  12]                   GPE1 Block : [Generic Address Structure]
[0E8h 0232   1]                     Space ID : 00 [SystemMemory]
[0E9h 0233   1]                    Bit Width : 00
[0EAh 0234   1]                   Bit Offset : 00
[0EBh 0235   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0ECh 0236   8]                      Address : 0000000000000000


[0F4h 0244  12]       Sleep Control Register : [Generic Address Structure]
[0F4h 0244   1]                     Space ID : 00 [SystemMemory]
[0F5h 0245   1]                    Bit Width : 00
[0F6h 0246   1]                   Bit Offset : 00
[0F7h 0247   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0F8h 0248   8]                      Address : 0000000000000000

[100h 0256  12]        Sleep Status Register : [Generic Address Structure]
[100h 0256   1]                     Space ID : 00 [SystemMemory]
[101h 0257   1]                    Bit Width : 00
[102h 0258   1]                   Bit Offset : 00
[103h 0259   1]         Encoded Access Width : 00 [Undefined/Legacy]
[104h 0260   8]                      Address : 0000000000000000

/**** ACPI table terminates in the middle of a data structure! (dump table) */

Raw Table Data: Length 268 (0x10C)

    0000: 46 41 43 50 0C 01 00 00 05 E3 41 43 52 53 59 53  // FACP......ACRSYS
    0010: 41 43 52 50 52 44 43 54 02 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 00 50 EF CC 00 C0 FD CD 00 02 09 00  // .....P..........
    0030: B0 00 00 00 A0 A1 00 00 00 04 00 00 00 00 00 00  // ................
    0040: 04 04 00 00 00 00 00 00 00 08 00 00 08 04 00 00  // ................
    0050: 20 04 00 00 00 00 00 00 04 02 01 04 08 00 00 00  //  ...............
    0060: 64 00 E9 03 00 00 00 00 01 03 0D 00 00 13 00 00  // d...............
    0070: AD C5 00 00 01 08 00 01 B0 00 00 00 00 00 00 00  // ................
    0080: FB 00 00 00 00 00 00 00 00 00 00 00 00 C0 FD CD  // ................
    0090: 00 00 00 00 01 20 00 03 00 04 00 00 00 00 00 00  // ..... ..........
    00A0: 00 00 00 00 00 00 00 00 00 00 00 00 01 10 00 02  // ................
    00B0: 04 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    00C0: 00 00 00 00 01 08 00 01 00 08 00 00 00 00 00 00  // ................
    00D0: 01 20 00 03 08 04 00 00 00 00 00 00 01 40 00 04  // . ...........@..
    00E0: 20 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00  //  ...............
    00F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0100: 00 00 00 00 00 00 00 00 00 00 00 00              // ............


FACS
----
[000h 0000   4]                    Signature : "FACS"
[004h 0004   4]                       Length : 00000040
[008h 0008   4]           Hardware Signature : 20A6AF2C
[00Ch 0012   4]    32 Firmware Waking Vector : 00000000
[010h 0016   4]                  Global Lock : 00000000
[014h 0020   4]        Flags (decoded below) : 00000000
                      S4BIOS Support Present : 0
                  64-bit Wake Supported (V2) : 0
[018h 0024   8]    64 Firmware Waking Vector : 0000000000000000
[020h 0032   1]                      Version : 02
[021h 0033   3]                     Reserved : 000000
[024h 0036   4]    OspmFlags (decoded below) : 00000000
               64-bit Wake Env Required (V2) : 0

Raw Table Data: Length 64 (0x40)

    0000: 46 41 43 53 40 00 00 00 2C AF A6 20 00 00 00 00  // FACS@...,.. ....
    0010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0020: 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................


FPDT
----
[000h 0000   4]                    Signature : "FPDT"    [Firmware Performance Data Table]
[004h 0004   4]                 Table Length : 00000044
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 61
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000


[024h 0036   2]                Subtable Type : 0000
[026h 0038   1]                       Length : 10
[027h 0039   1]                     Revision : 01
[028h 0040   4]                     Reserved : 00000000
[02Ch 0044   8]     FPDT Boot Record Address : 00000000CAD7F000

[034h 0052   2]                Subtable Type : 0001
[036h 0054   1]                       Length : 10
[037h 0055   1]                     Revision : 01
[038h 0056   4]                     Reserved : 00000000
[03Ch 0060   8]          S3PT Record Address : 00000000CBD7E000

Raw Table Data: Length 68 (0x44)

    0000: 46 50 44 54 44 00 00 00 01 61 41 43 52 53 59 53  // FPDTD....aACRSYS
    0010: 41 43 52 50 52 44 43 54 02 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 00 00 10 01 00 00 00 00 00 F0 D7 CA  // ................
    0030: 00 00 00 00 01 00 10 01 00 00 00 00 00 E0 D7 CB  // ................
    0040: 00 00 00 00                                      // ....


HPET
----
[000h 0000   4]                    Signature : "HPET"    [High Precision Event Timer Table]
[004h 0004   4]                 Table Length : 00000038
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 8E
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   4]            Hardware Block ID : 10228210

[028h 0040  12]         Timer Block Register : [Generic Address Structure]
[028h 0040   1]                     Space ID : 00 [SystemMemory]
[029h 0041   1]                    Bit Width : 00
[02Ah 0042   1]                   Bit Offset : 00
[02Bh 0043   1]         Encoded Access Width : 00 [Undefined/Legacy]
[02Ch 0044   8]                      Address : 00000000FED00000

[034h 0052   1]              Sequence Number : 00
[035h 0053   2]          Minimum Clock Ticks : 0080
[037h 0055   1]        Flags (decoded below) : 00
                             4K Page Protect : 0
                            64K Page Protect : 0

Raw Table Data: Length 56 (0x38)

    0000: 48 50 45 54 38 00 00 00 01 8E 41 43 52 53 59 53  // HPET8.....ACRSYS
    0010: 41 43 52 50 52 44 43 54 02 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 10 82 22 10 00 00 00 00 00 00 D0 FE  // ......".........
    0030: 00 00 00 00 00 80 00 00                          // ........


IVRS
----
[000h 0000   4]                    Signature : "IVRS"    [I/O Virtualization Reporting Structure]
[004h 0004   4]                 Table Length : 000001A4
[008h 0008   1]                     Revision : 02
[009h 0009   1]                     Checksum : E9
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   4]          Virtualization Info : 00203041
[028h 0040   8]                     Reserved : 0000000000000000

[030h 0048   1]                Subtable Type : 10 [Hardware Definition Block (IVHD)]
[031h 0049   1]        Flags (decoded below) : B0
                                     HtTunEn : 0
                                      PassPW : 0
                                   ResPassPW : 0
                                Isoc Control : 0
                               Iotlb Support : 1
                                    Coherent : 1
                            Prefetch Support : 0
                                 PPR Support : 1
[032h 0050   2]                       Length : 0048
[034h 0052   2]                     DeviceId : 0002
[036h 0054   2]            Capability Offset : 0040
[038h 0056   8]                 Base Address : 00000000FDF00000
[040h 0064   2]            PCI Segment Group : 0000
[042h 0066   2]          Virtualization Info : 0000
[044h 0068   4]            Feature Reporting : 80048F6F

[048h 0072   1]                Subtable Type : 03 [Device Entry: Start of Range]
[049h 0073   2]                    Device ID : 0008
[04Bh 0075   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[04Ch 0076   1]                Subtable Type : 04 [Device Entry: End of Range]
[04Dh 0077   2]                    Device ID : FFFE
[04Fh 0079   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[050h 0080   1]                Subtable Type : 43 [Device Entry: Alias Start of Range]
[051h 0081   2]                    Device ID : FF00
[053h 0083   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[054h 0084   1]                     Reserved : 00
[055h 0085   2]        Source Used Device ID : 00A5
[057h 0087   1]                     Reserved : 00

[058h 0088   1]                Subtable Type : 04 [Device Entry: End of Range]
[059h 0089   2]                    Device ID : FFFF
[05Bh 0091   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[05Ch 0092   1]                Subtable Type : 00 [Unknown/Reserved Device Entry Type]
[05Dh 0093   2]                    Device ID : 0000
[05Fh 0095   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[060h 0096   1]                Subtable Type : 48 [Device Entry: Special Device]
[061h 0097   2]                    Device ID : 0000
[063h 0099   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[064h 0100   1]                       Handle : 00
[065h 0101   2]        Source Used Device ID : 00A0
[067h 0103   1]                      Variety : 02

[068h 0104   1]                Subtable Type : 48 [Device Entry: Special Device]
[069h 0105   2]                    Device ID : 0000
[06Bh 0107   1] Data Setting (decoded below) : D7
                                    INITPass : 1
                                    EIntPass : 1
                                     NMIPass : 1
                                    Reserved : 0
                                 System MGMT : 1
                                  LINT0 Pass : 1
                                  LINT1 Pass : 1
[06Ch 0108   1]                       Handle : 21
[06Dh 0109   2]        Source Used Device ID : 00A0
[06Fh 0111   1]                      Variety : 01

[070h 0112   1]                Subtable Type : 48 [Device Entry: Special Device]
[071h 0113   2]                    Device ID : 0000
[073h 0115   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[074h 0116   1]                       Handle : 22
[075h 0117   2]        Source Used Device ID : 0001
[077h 0119   1]                      Variety : 01

[078h 0120   1]                Subtable Type : 11 [Hardware Definition Block (IVHD)]
[079h 0121   1]        Flags (decoded below) : B0
                                     HtTunEn : 0
                                      PassPW : 0
                                   ResPassPW : 0
                                Isoc Control : 0
                               Iotlb Support : 1
                                    Coherent : 1
                            Prefetch Support : 0
                                 PPR Support : 1
[07Ah 0122   2]                       Length : 0058
[07Ch 0124   2]                     DeviceId : 0002
[07Eh 0126   2]            Capability Offset : 0040
[080h 0128   8]                 Base Address : 00000000FDF00000
[088h 0136   2]            PCI Segment Group : 0000
[08Ah 0138   2]          Virtualization Info : 0000
[08Ch 0140   4]                   Attributes : 00040200
[090h 0144   8]                    EFR Image : 206D73EF22254ADE
[098h 0152   8]                     Reserved : 0000000000000000

[0A0h 0160   1]                Subtable Type : 03 [Device Entry: Start of Range]
[0A1h 0161   2]                    Device ID : 0008
[0A3h 0163   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0A4h 0164   1]                Subtable Type : 04 [Device Entry: End of Range]
[0A5h 0165   2]                    Device ID : FFFE
[0A7h 0167   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0A8h 0168   1]                Subtable Type : 43 [Device Entry: Alias Start of Range]
[0A9h 0169   2]                    Device ID : FF00
[0ABh 0171   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[0ACh 0172   1]                     Reserved : 00
[0ADh 0173   2]        Source Used Device ID : 00A5
[0AFh 0175   1]                     Reserved : 00

[0B0h 0176   1]                Subtable Type : 04 [Device Entry: End of Range]
[0B1h 0177   2]                    Device ID : FFFF
[0B3h 0179   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0B4h 0180   1]                Subtable Type : 00 [Unknown/Reserved Device Entry Type]
[0B5h 0181   2]                    Device ID : 0000
[0B7h 0183   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0B8h 0184   1]                Subtable Type : 48 [Device Entry: Special Device]
[0B9h 0185   2]                    Device ID : 0000
[0BBh 0187   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[0BCh 0188   1]                       Handle : 00
[0BDh 0189   2]        Source Used Device ID : 00A0
[0BFh 0191   1]                      Variety : 02

[0C0h 0192   1]                Subtable Type : 48 [Device Entry: Special Device]
[0C1h 0193   2]                    Device ID : 0000
[0C3h 0195   1] Data Setting (decoded below) : D7
                                    INITPass : 1
                                    EIntPass : 1
                                     NMIPass : 1
                                    Reserved : 0
                                 System MGMT : 1
                                  LINT0 Pass : 1
                                  LINT1 Pass : 1
[0C4h 0196   1]                       Handle : 21
[0C5h 0197   2]        Source Used Device ID : 00A0
[0C7h 0199   1]                      Variety : 01

[0C8h 0200   1]                Subtable Type : 48 [Device Entry: Special Device]
[0C9h 0201   2]                    Device ID : 0000
[0CBh 0203   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[0CCh 0204   1]                       Handle : 22
[0CDh 0205   2]        Source Used Device ID : 0001
[0CFh 0207   1]                      Variety : 01

[0D0h 0208   1]                Subtable Type : 40 [Hardware Definition Block - Mixed Format (IVHD)]
[0D1h 0209   1]        Flags (decoded below) : B0
                                     HtTunEn : 0
                                      PassPW : 0
                                   ResPassPW : 0
                                Isoc Control : 0
                               Iotlb Support : 1
                                    Coherent : 1
                            Prefetch Support : 0
                                 PPR Support : 1
[0D2h 0210   2]                       Length : 00D4
[0D4h 0212   2]                     DeviceId : 0002
[0D6h 0214   2]            Capability Offset : 0040
[0D8h 0216   8]                 Base Address : 00000000FDF00000
[0E0h 0224   2]            PCI Segment Group : 0000
[0E2h 0226   2]          Virtualization Info : 0000
[0E4h 0228   4]                   Attributes : 00040200
[0E8h 0232   8]                    EFR Image : 206D73EF22254ADE
[0F0h 0240   8]                     Reserved : 0000000000000000

[0F8h 0248   1]                Subtable Type : 03 [Device Entry: Start of Range]
[0F9h 0249   2]                    Device ID : 0008
[0FBh 0251   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0FCh 0252   1]                Subtable Type : 04 [Device Entry: End of Range]
[0FDh 0253   2]                    Device ID : FFFE
[0FFh 0255   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[100h 0256   1]                Subtable Type : 43 [Device Entry: Alias Start of Range]
[101h 0257   2]                    Device ID : FF00
[103h 0259   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[104h 0260   1]                     Reserved : 00
[105h 0261   2]        Source Used Device ID : 00A5
[107h 0263   1]                     Reserved : 00

[108h 0264   1]                Subtable Type : 04 [Device Entry: End of Range]
[109h 0265   2]                    Device ID : FFFF
[10Bh 0267   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[10Ch 0268   1]                Subtable Type : 00 [Unknown/Reserved Device Entry Type]
[10Dh 0269   2]                    Device ID : 0000
[10Fh 0271   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[110h 0272   1]                Subtable Type : 48 [Device Entry: Special Device]
[111h 0273   2]                    Device ID : 0000
[113h 0275   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[114h 0276   1]                       Handle : 00
[115h 0277   2]        Source Used Device ID : 00A0
[117h 0279   1]                      Variety : 02

[118h 0280   1]                Subtable Type : 48 [Device Entry: Special Device]
[119h 0281   2]                    Device ID : 0000
[11Bh 0283   1] Data Setting (decoded below) : D7
                                    INITPass : 1
                                    EIntPass : 1
                                     NMIPass : 1
                                    Reserved : 0
                                 System MGMT : 1
                                  LINT0 Pass : 1
                                  LINT1 Pass : 1
[11Ch 0284   1]                       Handle : 21
[11Dh 0285   2]        Source Used Device ID : 00A0
[11Fh 0287   1]                      Variety : 01

[120h 0288   1]                Subtable Type : 48 [Device Entry: Special Device]
[121h 0289   2]                    Device ID : 0000
[123h 0291   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[124h 0292   1]                       Handle : 22
[125h 0293   2]        Source Used Device ID : 0001
[127h 0295   1]                      Variety : 01

[128h 0296   1]                Subtable Type : F0 [Device Entry: ACPI HID Named Device]
[129h 0297   2]                    Device ID : 00A5
[12Bh 0299   1] Data Setting (decoded below) : 40
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 1
                                  LINT1 Pass : 0
[12Ch 0300   8]                     ACPI HID : "AMDI0020"
[134h 0308   8]                     ACPI CID : 0000000000000000
[13Ch 0316   1]                   UID Format : 02
[13Dh 0317   1]                   UID Length : 09
[13Eh 0318   9]                          UID : "\_SB.FUR0"

[147h 0327   1]                Subtable Type : F0 [Device Entry: ACPI HID Named Device]
[148h 0328   2]                    Device ID : 00A5
[14Ah 0330   1] Data Setting (decoded below) : 40
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 1
                                  LINT1 Pass : 0
[14Bh 0331   8]                     ACPI HID : "AMDI0020"
[153h 0339   8]                     ACPI CID : 0000000000000000
[15Bh 0347   1]                   UID Format : 02
[15Ch 0348   1]                   UID Length : 09
[15Dh 0349   9]                          UID : "\_SB.FUR1"

[166h 0358   1]                Subtable Type : F0 [Device Entry: ACPI HID Named Device]
[167h 0359   2]                    Device ID : 00A5
[169h 0361   1] Data Setting (decoded below) : 40
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 1
                                  LINT1 Pass : 0
[16Ah 0362   8]                     ACPI HID : "AMDI0020"
[172h 0370   8]                     ACPI CID : 0000000000000000
[17Ah 0378   1]                   UID Format : 02
[17Bh 0379   1]                   UID Length : 09
[17Ch 0380   9]                          UID : "\_SB.FUR2"

[185h 0389   1]                Subtable Type : F0 [Device Entry: ACPI HID Named Device]
[186h 0390   2]                    Device ID : 00A5
[188h 0392   1] Data Setting (decoded below) : 40
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 1
                                  LINT1 Pass : 0
[189h 0393   8]                     ACPI HID : "AMDI0020"
[191h 0401   8]                     ACPI CID : 0000000000000000
[199h 0409   1]                   UID Format : 02
[19Ah 0410   1]                   UID Length : 09
[19Bh 0411   9]                          UID : "\_SB.FUR3"

Raw Table Data: Length 420 (0x1A4)

    0000: 49 56 52 53 A4 01 00 00 02 E9 41 43 52 53 59 53  // IVRS......ACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 41 30 20 00 00 00 00 00 00 00 00 00  // ....A0 .........
    0030: 10 B0 48 00 02 00 40 00 00 00 F0 FD 00 00 00 00  // ..H...@.........
    0040: 00 00 00 00 6F 8F 04 80 03 08 00 00 04 FE FF 00  // ....o...........
    0050: 43 00 FF 00 00 A5 00 00 04 FF FF 00 00 00 00 00  // C...............
    0060: 48 00 00 00 00 A0 00 02 48 00 00 D7 21 A0 00 01  // H.......H...!...
    0070: 48 00 00 00 22 01 00 01 11 B0 58 00 02 00 40 00  // H...".....X...@.
    0080: 00 00 F0 FD 00 00 00 00 00 00 00 00 00 02 04 00  // ................
    0090: DE 4A 25 22 EF 73 6D 20 00 00 00 00 00 00 00 00  // .J%".sm ........
    00A0: 03 08 00 00 04 FE FF 00 43 00 FF 00 00 A5 00 00  // ........C.......
    00B0: 04 FF FF 00 00 00 00 00 48 00 00 00 00 A0 00 02  // ........H.......
    00C0: 48 00 00 D7 21 A0 00 01 48 00 00 00 22 01 00 01  // H...!...H..."...
    00D0: 40 B0 D4 00 02 00 40 00 00 00 F0 FD 00 00 00 00  // @.....@.........
    00E0: 00 00 00 00 00 02 04 00 DE 4A 25 22 EF 73 6D 20  // .........J%".sm 
    00F0: 00 00 00 00 00 00 00 00 03 08 00 00 04 FE FF 00  // ................
    0100: 43 00 FF 00 00 A5 00 00 04 FF FF 00 00 00 00 00  // C...............
    0110: 48 00 00 00 00 A0 00 02 48 00 00 D7 21 A0 00 01  // H.......H...!...
    0120: 48 00 00 00 22 01 00 01 F0 A5 00 40 41 4D 44 49  // H..."......@AMDI
    0130: 30 30 32 30 00 00 00 00 00 00 00 00 02 09 5C 5F  // 0020..........\_
    0140: 53 42 2E 46 55 52 30 F0 A5 00 40 41 4D 44 49 30  // SB.FUR0...@AMDI0
    0150: 30 32 30 00 00 00 00 00 00 00 00 02 09 5C 5F 53  // 020..........\_S
    0160: 42 2E 46 55 52 31 F0 A5 00 40 41 4D 44 49 30 30  // B.FUR1...@AMDI00
    0170: 32 30 00 00 00 00 00 00 00 00 02 09 5C 5F 53 42  // 20..........\_SB
    0180: 2E 46 55 52 32 F0 A5 00 40 41 4D 44 49 30 30 32  // .FUR2...@AMDI002
    0190: 30 00 00 00 00 00 00 00 00 02 09 5C 5F 53 42 2E  // 0..........\_SB.
    01A0: 46 55 52 33                                      // FUR3


MCFG
----
[000h 0000   4]                    Signature : "MCFG"    [Memory Mapped Configuration Table]
[004h 0004   4]                 Table Length : 0000003C
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 79
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   8]                     Reserved : 0000000000000000

[02Ch 0044   8]                 Base Address : 00000000F8000000
[034h 0052   2]         Segment Group Number : 0000
[036h 0054   1]             Start Bus Number : 00
[037h 0055   1]               End Bus Number : 3F
[038h 0056   4]                     Reserved : 00000000

Raw Table Data: Length 60 (0x3C)

    0000: 4D 43 46 47 3C 00 00 00 01 79 41 43 52 53 59 53  // MCFG<....yACRSYS
    0010: 41 43 52 50 52 44 43 54 02 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00 F8  // ................
    0030: 00 00 00 00 00 00 00 3F 00 00 00 00              // .......?....


MSDM
----
[000h 0000   4]                    Signature : "MSDM"    [Microsoft Data Management Table]
[004h 0004   4]                 Table Length : 00000055
[008h 0008   1]                     Revision : 03
[009h 0009   1]                     Checksum : C8
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036  49] Software Licensing Structure : 20 6C 72 10 00 00 00 00 21 81 4D 10 00 00 00 00 /*  lr.....!.M..... */\
/* 034h 0052  16 */                            22 4C 54 10 00 00 00 00 23 61 2F 10 00 00 00 00 /* "LT.....#a/..... */\
/* 044h 0068  16 */                            24 2C 36 10 00 00 00 00 25 4A 4B 90 00 00 00 00 /* $,6.....%JK..... */\
/* 054h 0084   1 */                            26                                              /* & */\

Raw Table Data: Length 85 (0x55)

    0000: 4D 53 44 4D 55 00 00 00 03 C8 41 43 52 53 59 53  // MSDMU.....ACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 01 00 00 00 00 00 00 00 01 00 00 00  // ................
    0030: 00 00 00 00 1D 00 00 00 43 4A 36 4B 34 2D 4E 51  // ........CJ6K4-NQ
    0040: 47 54 42 2D 44 37 56 56 32 2D 4D 58 46 37 37 2D  // GTB-D7VV2-MXF77-
    0050: 4B 48 4A 56 44                                   // KHJVD


SSDT1
-----
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00000002)
{
    External (_SB_.PCI0.GP18.SATA, DeviceObj)

    Scope (\_SB.PCI0.GP18.SATA)
    {
        Device (PRT0)
        {
            Name (_ADR, 0xFFFF)  // _ADR: Address
            Name (NOP, Buffer (0x07)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00         // .......
            })
            Name (SGTF, Buffer (0x07)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF5         // .......
            })
            Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
            {
                If (Zero)
                {
                    Return (SGTF) /* \_SB_.PCI0.GP18.SATA.PRT0.SGTF */
                }
                Else
                {
                    Return (NOP) /* \_SB_.PCI0.GP18.SATA.PRT0.NOP_ */
                }
            }
        }
    }
}



SSDT10
------
DefinitionBlock ("", "SSDT", 2, "ACRSYS", "ACRPRDCT", 0x00000002)
{
    Scope (\_SB)
    {
        Name (AGRB, 0xF8000000)
        Name (ADBG, Buffer (0x0100) {})
        Name (ADAT, Buffer (0x0520)
        {
            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0020 */  0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00,  // ........
            /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,  // ........
            /* 0038 */  0x00, 0x00, 0x00, 0x10, 0x13, 0xFF, 0xFF, 0x01,  // ........
            /* 0040 */  0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0048 */  0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00,  // ........
            /* 0050 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0058 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,  // ........
            /* 0060 */  0x00, 0x00, 0x00, 0x06, 0x06, 0xFF, 0xFF, 0x03,  // ........
            /* 0068 */  0x00, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0070 */  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x07,  // ........
            /* 0078 */  0x07, 0xFF, 0xFF, 0x04, 0x00, 0x02, 0x01, 0x00,  // ........
            /* 0080 */  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,  // ........
            /* 0088 */  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0090 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0098 */  0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00,  // ........
            /* 00A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0100 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0108 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0110 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0118 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0120 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0128 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0130 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0138 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0140 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0148 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0150 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0158 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0160 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0168 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0170 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0178 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0180 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0188 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0190 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0198 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0200 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0208 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0210 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0218 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0220 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0228 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0230 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0238 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0240 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0248 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0250 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0258 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0260 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0268 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0270 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0278 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0280 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0288 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0290 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0298 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0300 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0308 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0310 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0318 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0320 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0328 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0330 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0338 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0340 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0348 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0350 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0358 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0360 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0368 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0370 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0378 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0380 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0388 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0390 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0398 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0400 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0408 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0410 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0418 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0420 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0428 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0430 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0438 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0440 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0448 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0450 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0458 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0460 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0468 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0470 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0478 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0480 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0488 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0490 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0498 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0500 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0508 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0510 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0518 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
        })
        Method (ALIB, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                CreateWordField (Arg1, 0x00, A013)
                CreateWordField (Arg1, 0x02, A014)
                CreateDWordField (Arg1, 0x04, A015)
                Local0 = Buffer (0x0100) {}
                CreateWordField (Local0, 0x00, A016)
                A016 = A013 /* \_SB_.ALIB.A013 */
                CreateWordField (Local0, 0x02, A017)
                A017 = A014 /* \_SB_.ALIB.A014 */
                CreateDWordField (Local0, 0x04, A018)
                A018 = A015 /* \_SB_.ALIB.A015 */
                A018 &= ~0x0F
                If ((DerefOf (\_SB.ADAT [0x00]) > 0x00))
                {
                    Local1 = 0x0F
                }
                Else
                {
                    Local1 = 0x01
                }

                A018 |= Local1
                Return (Local0)
            }

            If ((Arg0 == 0x01))
            {
                Local0 = DerefOf (Arg1 [0x02])
                Return (A019 (Local0))
            }

            If ((Arg0 == 0x02))
            {
                Local0 = Buffer (0x0100)
                    {
                         0x03, 0x00, 0x00                                 // ...
                    }
                Return (Local0)
            }

            If ((Arg0 == 0x03))
            {
                Local0 = Buffer (0x0100)
                    {
                         0x03, 0x00, 0x00                                 // ...
                    }
                Return (Local0)
            }

            If ((Arg0 == 0x06))
            {
                Local0 = DerefOf (Arg1 [0x04])
                Local1 = DerefOf (Arg1 [0x02])
                Return (A022 (Local0, Local1))
            }

            If ((Arg0 == 0x0A))
            {
                Local0 = DerefOf (Arg1 [0x02])
                Return (A023 (Local0))
            }

            If ((Arg0 == 0x0B))
            {
                Local0 = DerefOf (Arg1 [0x02])
                Local1 = DerefOf (Arg1 [0x03])
                Local2 = DerefOf (Arg1 [0x04])
                Local2 |= (DerefOf (Arg1 [0x05]) << 0x08)
                Local2 |= (DerefOf (Arg1 [0x06]) << 0x10)
                Local2 |= (DerefOf (Arg1 [0x07]) << 0x18)
                Local3 = DerefOf (Arg1 [0x08])
                Local3 |= (DerefOf (Arg1 [0x09]) << 0x08)
                Local3 |= (DerefOf (Arg1 [0x0A]) << 0x10)
                Local3 |= (DerefOf (Arg1 [0x0B]) << 0x18)
                Local4 = DerefOf (Arg1 [0x0C])
                Local4 |= (DerefOf (Arg1 [0x0D]) << 0x08)
                Local4 |= (DerefOf (Arg1 [0x0E]) << 0x10)
                Local4 |= (DerefOf (Arg1 [0x0F]) << 0x18)
                Return (A024 (Local0, Local1, Local2, Local3, Local4))
            }

            If ((Arg0 == 0x0C))
            {
                A025 (Arg1)
            }

            If ((Arg0 == 0x10))
            {
                Local7 = Buffer (0x18) {}
                CreateDWordField (Local7, 0x00, A026)
                CreateDWordField (Local7, 0x04, A027)
                CreateDWordField (Local7, 0x08, A028)
                CreateDWordField (Local7, 0x0C, A029)
                CreateDWordField (Local7, 0x10, A030)
                CreateDWordField (Local7, 0x14, A031)
                A026 = 0x00
                A027 = 0x00
                A028 = 0x00
                A029 = 0x00
                A030 = 0x00
                A031 = 0x00
                A011 (0x26, Local7)
            }

            If ((Arg0 == 0x11))
            {
                Local6 = Buffer (0x18) {}
                CreateDWordField (Local6, 0x00, A005)
                CreateDWordField (Local6, 0x04, A006)
                CreateDWordField (Local6, 0x08, A007)
                CreateDWordField (Local6, 0x0C, A008)
                CreateDWordField (Local6, 0x10, A009)
                CreateDWordField (Local6, 0x14, A010)
                A005 = 0x00
                A006 = 0x00
                A007 = 0x00
                A008 = 0x00
                A009 = 0x00
                A010 = 0x00
                A011 (0x25, Local6)
            }

            If ((Arg0 == 0xAA))
            {
                Local6 = Buffer (0x18) {}
                CreateDWordField (Local6, 0x00, A032)
                CreateDWordField (Local6, 0x04, A033)
                CreateDWordField (Local6, 0x08, A034)
                CreateDWordField (Local6, 0x0C, A035)
                CreateDWordField (Local6, 0x10, A036)
                CreateDWordField (Local6, 0x14, A037)
                A032 = 0x00
                A033 = 0x00
                A034 = 0x00
                A035 = 0x00
                A036 = 0x00
                A037 = 0x00
                A038 (Arg1)
            }

            Return (0x00)
        }

        Method (A022, 2, NotSerialized)
        {
            Local0 = 0x00
            While ((Local0 < 0x0A))
            {
                Local1 = A089 (Local0, Arg1)
                If ((Local1 == 0x01))
                {
                    Local2 = A090 (Local0, Arg0)
                    Break
                }

                Local0++
            }

            Local7 = Buffer (0x0A) {}
            CreateWordField (Local7, 0x00, A016)
            CreateByteField (Local7, 0x02, A040)
            CreateByteField (Local7, 0x03, A091)
            A016 = 0x04
            A040 = 0x00
            If ((Local2 == 0x00))
            {
                A091 = 0x00
            }
            Else
            {
                A091 = 0x01
            }

            Return (Local7)
        }

        Method (A089, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A084 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A084 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A084 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A084 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A084 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A084 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A084 (Arg1))
            }
        }

        Method (A090, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A085 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A085 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A085 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A085 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A085 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A085 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A085 (Arg1))
            }
        }

        Name (AD00, 0x00)
        Name (DK00, 0x00)
        Method (A019, 1, NotSerialized)
        {
            AD00 = Arg0
            A004 ()
        }

        Method (A023, 1, NotSerialized)
        {
            DK00 = Arg0
        }

        Method (A024, 5, NotSerialized)
        {
        }

        Name (AP01, 0x00)
        Name (AP02, 0x00)
        Name (AP03, 0x00)
        Name (AP05, 0x00)
        Name (AP0B, 0xFF)
        Name (AP10, 0x00)
        Method (A039, 1, NotSerialized)
        {
            Local7 = Buffer (0x0100) {}
            CreateWordField (Local7, 0x00, A016)
            A016 = 0x03
            CreateByteField (Local7, 0x02, A040)
            A040 = 0x01
            If ((DerefOf (\_SB.ADAT [0x00]) == 0x01))
            {
                A040 = 0x02
                Return (Local7)
            }

            If ((DerefOf (\_SB.ADAT [0x00]) == 0x00))
            {
                A040 = 0x01
                Return (Local7)
            }

            A041 (Arg0)
            If ((AP05 != 0x01))
            {
                Return (Local7)
            }

            A042 ()
            A040 = 0x02
            Return (Local7)
        }

        Method (A043, 0, NotSerialized)
        {
            If ((DerefOf (\_SB.ADAT [0x00]) <= 0x01))
            {
                Return (0x00)
            }

            If ((AP05 != 0x01))
            {
                Return (0x00)
            }

            A042 ()
        }

        Method (A044, 1, NotSerialized)
        {
            If ((Arg0 == 0x03))
            {
                AP01 = 0x00
            }
        }

        Method (A045, 1, NotSerialized)
        {
            AP10 = 0x01
        }

        Method (A046, 1, NotSerialized)
        {
            AP05 = Arg0
            If ((DerefOf (\_SB.ADAT [0x00]) <= 0x01))
            {
                Return (0x00)
            }

            Local1 = AP0B /* \_SB_.AP0B */
            If ((AP05 == 0x00))
            {
                Local0 = 0x00
                While ((Local0 < 0x0A))
                {
                    A047 (Local0)
                    Local0++
                }

                AP0B = 0x00
            }

            A042 ()
            AP0B = Local1
            Local7 = Buffer (0x0100) {}
            Local7 [0x00] = 0x03
            Local7 [0x01] = 0x00
            Local7 [0x02] = 0x00
            Return (Local7)
        }

        Method (A048, 0, NotSerialized)
        {
            If ((AP0B != 0xFF))
            {
                Return (AP0B) /* \_SB_.AP0B */
            }

            Return (AD00) /* \_SB_.AD00 */
        }

        Method (A041, 1, NotSerialized)
        {
            CreateWordField (Arg0, 0x02, AP06)
            CreateWordField (Arg0, 0x04, AP07)
            CreateWordField (Arg0, 0x06, AP08)
            CreateByteField (Arg0, 0x08, AP09)
            CreateByteField (Arg0, 0x09, AP0A)
            Local0 = 0x00
            While ((Local0 < 0x0A))
            {
                If ((A049 (Local0, AP06) == 0x01))
                {
                    If (((AP07 & AP08) == 0x01))
                    {
                        Local1 = A050 (Local0)
                        A051 (Local0, Local1)
                    }
                    Else
                    {
                        A051 (Local0, AP0A)
                    }

                    Break
                }

                Local0++
            }
        }

        Method (A052, 0, NotSerialized)
        {
            AP02 = 0x01
            Local0 = 0x00
            While ((Local0 < 0x0A))
            {
                Local1 = A053 (Local0)
                If ((Local1 > AP02))
                {
                    AP02 = Local1
                }

                Local0++
            }
        }

        Method (A054, 0, NotSerialized)
        {
            AP03 = 0x00
            Local0 = 0x00
            While ((Local0 < 0x0A))
            {
                Local1 = A055 (Local0)
                If ((Local1 > AP03))
                {
                    AP03 = Local1
                }

                Local0++
            }
        }

        Method (A042, 0, NotSerialized)
        {
            A054 ()
            A052 ()
            If ((AP02 != AP01))
            {
                A012 (AP02, AP01)
            }

            If ((AP02 > AP01))
            {
                AP01 = AP02 /* \_SB_.AP02 */
            }

            Local0 = 0x00
            While ((Local0 < 0x0A))
            {
                Local1 = A053 (Local0)
                Local2 = A056 (Local0)
                If ((Local1 != Local2))
                {
                    A057 (Local0, Local1)
                }
                ElseIf ((AP10 == 0x01))
                {
                    A057 (Local0, Local1)
                }

                Local0++
            }

            If ((AP02 < AP01))
            {
                AP01 = AP02 /* \_SB_.AP02 */
            }
            ElseIf ((AP10 == 0x01))
            {
                AP01 = AP02 /* \_SB_.AP02 */
            }

            AP10 = 0x00
        }

        Method (A057, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A058 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A058 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A058 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A058 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A058 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A058 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A058 (Arg1))
            }

            If ((Arg0 == 0x07))
            {
                Return (\_SB.AWR0.ABR7.A058 (Arg1))
            }
        }

        Method (A056, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A059 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A059 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A059 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A059 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A059 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A059 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A059 ())
            }

            If ((Arg0 == 0x07))
            {
                Return (\_SB.AWR0.ABR7.A059 ())
            }
        }

        Method (A053, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A060 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A060 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A060 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A060 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A060 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A060 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A060 ())
            }

            If ((Arg0 == 0x07))
            {
                Return (\_SB.AWR0.ABR7.A060 ())
            }
        }

        Method (A055, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A061 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A061 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A061 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A061 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A061 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A061 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A061 ())
            }

            If ((Arg0 == 0x07))
            {
                Return (\_SB.AWR0.ABR7.A061 ())
            }
        }

        Method (A050, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A062 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A062 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A062 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A062 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A062 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A062 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A062 ())
            }

            If ((Arg0 == 0x07))
            {
                Return (\_SB.AWR0.ABR7.A062 ())
            }
        }

        Method (A051, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A063 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A063 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A063 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A063 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A063 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A063 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A063 (Arg1))
            }

            If ((Arg0 == 0x07))
            {
                Return (\_SB.AWR0.ABR7.A063 (Arg1))
            }
        }

        Method (A049, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A064 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A064 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A064 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A064 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A064 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A064 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A064 (Arg1))
            }

            If ((Arg0 == 0x07))
            {
                Return (\_SB.AWR0.ABR7.A064 (Arg1))
            }
        }

        Method (A047, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A065 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A065 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A065 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A065 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A065 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A065 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A065 ())
            }

            If ((Arg0 == 0x07))
            {
                Return (\_SB.AWR0.ABR7.A065 ())
            }
        }

        OperationRegion (A120, SystemMemory, AGRB, 0x1000)
        Field (A120, DWordAcc, Lock, Preserve)
        {
            Offset (0xB8), 
            A121,   32
        }

        BankField (A120, A121, 0x03B10528, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A118,   32
        }

        BankField (A120, A121, 0x03B10564, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A111,   32
        }

        BankField (A120, A121, 0x03B10998, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A112,   32
        }

        BankField (A120, A121, 0x03B1099C, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A113,   32
        }

        BankField (A120, A121, 0x03B109A0, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A114,   32
        }

        BankField (A120, A121, 0x03B109A4, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A115,   32
        }

        BankField (A120, A121, 0x03B109A8, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A116,   32
        }

        BankField (A120, A121, 0x03B109AC, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A117,   32
        }

        BankField (A120, A121, 0x13B00084, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A094,   32
        }

        BankField (A120, A121, 0x11140280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A102,   32
        }

        BankField (A120, A121, 0x11141280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A103,   32
        }

        BankField (A120, A121, 0x11142280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A104,   32
        }

        BankField (A120, A121, 0x11240280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A095,   32
        }

        BankField (A120, A121, 0x11241280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A096,   32
        }

        BankField (A120, A121, 0x11242280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A097,   32
        }

        BankField (A120, A121, 0x11243280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A098,   32
        }

        BankField (A120, A121, 0x11244280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A099,   32
        }

        BankField (A120, A121, 0x11245280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A100,   32
        }

        BankField (A120, A121, 0x11246280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A101,   32
        }

        Method (A092, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A073 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A073 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A073 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A073 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A073 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A073 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A073 (Arg1))
            }

            If ((Arg0 == 0x07))
            {
                Return (\_SB.AWR0.ABR7.A073 (Arg1))
            }

            If ((Arg0 == 0x08))
            {
                Return (\_SB.AWR0.ABR8.A073 (Arg1))
            }

            If ((Arg0 == 0x09))
            {
                Return (\_SB.AWR0.ABR9.A073 (Arg1))
            }
        }

        Method (A093, 2, NotSerialized)
        {
            If ((Arg1 == 0x01))
            {
                If ((Arg0 == 0x00))
                {
                    Local0 = 0x00190300
                }

                If ((Arg0 == 0x01))
                {
                    Local0 = 0x001A0300
                }

                If ((Arg0 == 0x02))
                {
                    Local0 = 0x001B0300
                }

                If ((Arg0 == 0x03))
                {
                    Local0 = 0x001C0300
                }

                If ((Arg0 == 0x04))
                {
                    Local0 = 0x001D0300
                }

                If ((Arg0 == 0x05))
                {
                    Local0 = 0x001E0300
                }

                If ((Arg0 == 0x06))
                {
                    Local0 = 0x001F0300
                }

                If ((Arg0 == 0x06))
                {
                    Local0 = 0x00090300
                }

                If ((Arg0 == 0x06))
                {
                    Local0 = 0x000A0300
                }

                If ((Arg0 == 0x06))
                {
                    Local0 = 0x000B0300
                }

                Local1 = A094 /* \_SB_.A094 */
                Local1 &= 0xFF00FCFF
                A094 = (Local0 | Local1)
                Local1 = A094 /* \_SB_.A094 */
                A094 = (0xFFFFFDFF & Local1)
            }
            ElseIf ((Arg1 == 0x00))
            {
                If ((Arg0 == 0x00))
                {
                    Local1 = A095 /* \_SB_.A095 */
                    A095 = (0x00400000 | Local1)
                    Local1 = A095 /* \_SB_.A095 */
                    A095 = (0xFFBFFFFF & Local1)
                }

                If ((Arg0 == 0x01))
                {
                    Local1 = A096 /* \_SB_.A096 */
                    A096 = (0x00400000 | Local1)
                    Local1 = A096 /* \_SB_.A096 */
                    A096 = (0xFFBFFFFF & Local1)
                }

                If ((Arg0 == 0x02))
                {
                    Local1 = A097 /* \_SB_.A097 */
                    A097 = (0x00400000 | Local1)
                    Local1 = A097 /* \_SB_.A097 */
                    A097 = (0xFFBFFFFF & Local1)
                }

                If ((Arg0 == 0x03))
                {
                    Local1 = A098 /* \_SB_.A098 */
                    A098 = (0x00400000 | Local1)
                    Local1 = A098 /* \_SB_.A098 */
                    A098 = (0xFFBFFFFF & Local1)
                }

                If ((Arg0 == 0x04))
                {
                    Local1 = A099 /* \_SB_.A099 */
                    A099 = (0x00400000 | Local1)
                    Local1 = A099 /* \_SB_.A099 */
                    A099 = (0xFFBFFFFF & Local1)
                }

                If ((Arg0 == 0x05))
                {
                    Local1 = A100 /* \_SB_.A100 */
                    A100 = (0x00400000 | Local1)
                    Local1 = A100 /* \_SB_.A100 */
                    A100 = (0xFFBFFFFF & Local1)
                }

                If ((Arg0 == 0x06))
                {
                    Local1 = A101 /* \_SB_.A101 */
                    A101 = (0x00400000 | Local1)
                    Local1 = A101 /* \_SB_.A101 */
                    A101 = (0xFFBFFFFF & Local1)
                }

                If ((Arg0 == 0x07))
                {
                    Local1 = A102 /* \_SB_.A102 */
                    A102 = (0x00400000 | Local1)
                    Local1 = A102 /* \_SB_.A102 */
                    A102 = (0xFFBFFFFF & Local1)
                }

                If ((Arg0 == 0x08))
                {
                    Local1 = A103 /* \_SB_.A103 */
                    A103 = (0x00400000 | Local1)
                    Local1 = A103 /* \_SB_.A103 */
                    A103 = (0xFFBFFFFF & Local1)
                }

                If ((Arg0 == 0x09))
                {
                    Local1 = A104 /* \_SB_.A104 */
                    A104 = (0x00400000 | Local1)
                    Local1 = A104 /* \_SB_.A104 */
                    A104 = (0xFFBFFFFF & Local1)
                }
            }
        }

        Method (A003, 2, NotSerialized)
        {
            Local0 = 0x00
            While ((Local0 < 0x0A))
            {
                Local1 = A092 (Local0, Arg1)
                If ((Local1 == 0x01))
                {
                    A093 (Local0, Arg1)
                    Break
                }

                Local0++
            }
        }

        Method (A011, 2, Serialized)
        {
            CreateDWordField (Arg1, 0x00, A105)
            CreateDWordField (Arg1, 0x04, A106)
            CreateDWordField (Arg1, 0x08, A107)
            CreateDWordField (Arg1, 0x0C, A108)
            CreateDWordField (Arg1, 0x10, A109)
            CreateDWordField (Arg1, 0x14, A110)
            A111 = 0x00
            While ((A111 != 0x00)) {}
            A112 = A105 /* \_SB_.A011.A105 */
            A113 = A106 /* \_SB_.A011.A106 */
            A114 = A107 /* \_SB_.A011.A107 */
            A115 = A108 /* \_SB_.A011.A108 */
            A116 = A109 /* \_SB_.A011.A109 */
            A117 = A110 /* \_SB_.A011.A110 */
            A118 = Arg0
            While ((A111 == 0x00)) {}
        }

        Method (A087, 5, NotSerialized)
        {
            Local7 = Buffer (0x18) {}
            CreateDWordField (Local7, 0x00, A005)
            CreateDWordField (Local7, 0x04, A006)
            CreateDWordField (Local7, 0x08, A007)
            CreateDWordField (Local7, 0x0C, A008)
            CreateDWordField (Local7, 0x10, A009)
            CreateDWordField (Local7, 0x14, A010)
            A005 = Arg0
            A006 = Arg1
            A007 = Arg2
            A008 = Arg3
            A011 (0x09, Local7)
        }

        Method (A025, 1, Serialized)
        {
            CreateWordField (Arg0, 0x00, A119)
            Local7 = Buffer (0x18) {}
            CreateDWordField (Local7, 0x00, A005)
            CreateDWordField (Local7, 0x04, A006)
            CreateDWordField (Local7, 0x08, A007)
            CreateDWordField (Local7, 0x0C, A008)
            CreateDWordField (Local7, 0x10, A009)
            CreateDWordField (Local7, 0x14, A010)
            Local0 = 0x02
            While ((Local0 < A119))
            {
                Local1 = DerefOf (Arg0 [Local0])
                Local0++
                Local2 = DerefOf (Arg0 [Local0])
                Local0++
                Local2 |= (DerefOf (Arg0 [Local0]) << 0x08)
                Local0++
                Local2 |= (DerefOf (Arg0 [Local0]) << 0x10)
                Local0++
                Local2 |= (DerefOf (Arg0 [Local0]) << 0x18)
                Local0++
                A005 = 0x00
                A006 = 0x00
                A007 = 0x00
                A008 = 0x00
                A009 = 0x00
                A010 = 0x00
                If ((Local1 == 0x01))
                {
                    A005 = Local2
                    A011 (0x18, Local7)
                }

                If ((Local1 == 0x03))
                {
                    A005 = Local2
                    A011 (0x19, Local7)
                }

                If ((Local1 == 0x05))
                {
                    A005 = Local2
                    A011 (0x14, Local7)
                }

                If ((Local1 == 0x06))
                {
                    A005 = Local2
                    A011 (0x15, Local7)
                }

                If ((Local1 == 0x07))
                {
                    A005 = Local2
                    A011 (0x16, Local7)
                }

                If ((Local1 == 0x08))
                {
                    A005 = Local2
                    A011 (0x17, Local7)
                }

                If ((Local1 == 0x09))
                {
                    A005 = Local2
                    A011 (0x20, Local7)
                }

                If ((Local1 == 0x0B))
                {
                    A005 = Local2
                    A011 (0x1A, Local7)
                }

                If ((Local1 == 0x0C))
                {
                    A005 = Local2
                    A011 (0x1C, Local7)
                }

                If ((Local1 == 0x0D))
                {
                    A005 = Local2
                    A011 (0x1E, Local7)
                }

                If ((Local1 == 0x0E))
                {
                    A005 = Local2
                    A011 (0x1B, Local7)
                }

                If ((Local1 == 0x0F))
                {
                    A005 = Local2
                    A011 (0x1F, Local7)
                }

                If ((DerefOf (\_SB.ADAT [0x08]) == 0x01))
                {
                    If ((Local1 == 0x10))
                    {
                        If ((Local2 == 0x00))
                        {
                            A011 (0x26, Local7)
                        }
                        Else
                        {
                            A011 (0x25, Local7)
                        }
                    }
                }

                If ((Local1 == 0x11))
                {
                    A005 = Local2
                    A011 (0x1D, Local7)
                }

                If ((Local1 == 0x12))
                {
                    A005 = Local2
                    A011 (0x5E, Local7)
                }

                If ((Local1 == 0x20))
                {
                    A005 = Local2
                    A011 (0x36, Local7)
                }

                If ((Local1 == 0x21))
                {
                    A005 = Local2
                    A011 (0x37, Local7)
                }

                If ((Local1 == 0x22))
                {
                    A005 = Local2
                    A011 (0x38, Local7)
                }

                If ((Local1 == 0x23))
                {
                    A005 = Local2
                    A011 (0x39, Local7)
                }

                If ((Local1 == 0x24))
                {
                    A005 = Local2
                    A011 (0x3A, Local7)
                }

                If ((Local1 == 0x25))
                {
                    A005 = Local2
                    A011 (0x3B, Local7)
                }

                If ((Local1 == 0x26))
                {
                    A005 = Local2
                    A011 (0x3C, Local7)
                }

                If ((Local1 == 0x27))
                {
                    A005 = Local2
                    A011 (0x3D, Local7)
                }

                If ((Local1 == 0x28))
                {
                    A005 = Local2
                    A011 (0x3E, Local7)
                }

                If ((Local1 == 0x29))
                {
                    A005 = Local2
                    A011 (0x3F, Local7)
                }

                If ((Local1 == 0x2A))
                {
                    A005 = Local2
                    A011 (0x40, Local7)
                }

                If ((Local1 == 0x2B))
                {
                    A005 = Local2
                    A011 (0x41, Local7)
                }

                If ((Local1 == 0x2C))
                {
                    A005 = Local2
                    A011 (0x42, Local7)
                }

                If ((Local1 == 0x2D))
                {
                    A005 = Local2
                    A011 (0x43, Local7)
                }

                If ((Local1 == 0x2E))
                {
                    A005 = Local2
                    A011 (0x53, Local7)
                }
            }
        }

        Device (AWR0)
        {
            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
            Name (_UID, 0x90)  // _UID: Unique ID
            Device (ABR0)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x80)  // _UID: Unique ID
                Name (AB12, 0x20)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A077, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A077, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A071,   8, 
                    A072,   8, 
                    Offset (0x68), 
                    A078,   2, 
                        ,   2, 
                    A079,   1, 
                    A080,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A081,   1, 
                    Offset (0x88), 
                    A082,   4, 
                        ,   1, 
                    A083,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A066, 0, NotSerialized)
                {
                    Local0 = A048 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR0.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR0.AB0E */
                    }
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A067, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR0.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A060, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR0.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR0.AB0E */
                    }

                    Local0 = A067 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR0.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A066 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A059, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR0.AB02 */
                }

                Method (A062, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR0.AB00 */
                }

                Method (A058, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A068 (Arg0)
                    If ((AB10 != 0x00)) {}
                    Else
                    {
                    }

                    A069 (0x00)
                    Name (A070, 0x00)
                    A069 (0x01)
                }

                Method (A063, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A064, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A071) && (Local0 <= A072)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A073, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A065, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A068, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)) {}
                    If ((Arg0 >= 0x03)) {}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)) {}
                    }
                    Else
                    {
                    }
                }

                Method (A074, 1, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A075 (Local0, 0x00)
                    Local2 = A075 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A075 (0x00, Local0)
                                    Local5 = 0x00
                                    If ((((Local4 & 0x09) == 0x00) && (Local4 != 0x00)))
                                    {
                                        If (((Local4 & 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A075 (0x00, Local0)
                                        }

                                        If ((Arg0 != 0x00))
                                        {
                                            A076 (0x23, (Local4 & 0xFFFFFFF0), 0x00)
                                            A076 (0x24, Local5, 0x00)
                                            A076 (0x26, 0x00, 0x00)
                                            A076 (0x05, 0x00, (0x01 << 0x0A))
                                            A076 (0x25, 0x00, 0x00)
                                            Break
                                        }
                                        Else
                                        {
                                            A076 (0x26, 0x00, 0x00)
                                            A076 (0x07, 0x00, (0x01 << 0x0A))
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A088, 2, NotSerialized)
                {
                    If ((A075 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A075 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A075 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A069, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A075 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A075 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A088 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A075 (Local0, (Local1 + 0x10))
                                A086 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A086 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A086, 3, Serialized)
                {
                    Local0 = (AGRB + (A072 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A075, 2, Serialized)
                {
                    Local0 = (AGRB + (A072 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR0.A075.ADRR */
                }

                Method (A084, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A073 (Arg0))
                }

                Method (A085, 1, NotSerialized)
                {
                    Name (A070, 0x00)
                    Local2 = 0x00
                    A070 = A078 /* \_SB_.AWR0.ABR0.A078 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A079 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A069 (0x00)
                        Local0 = A075 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A086 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A075 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A086 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A079 = 0x01
                        Local0 = 0x05
                    }

                    A078 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A087 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A075 (0x00, 0x00)
                            A087 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A078 = A070 /* \_SB_.AWR0.ABR0.A085.A070 */
                    If ((A070 != 0x00))
                    {
                        A069 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR1)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x81)  // _UID: Unique ID
                Name (AB12, 0x34)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A077, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A077, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A071,   8, 
                    A072,   8, 
                    Offset (0x68), 
                    A078,   2, 
                        ,   2, 
                    A079,   1, 
                    A080,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A081,   1, 
                    Offset (0x88), 
                    A082,   4, 
                        ,   1, 
                    A083,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A066, 0, NotSerialized)
                {
                    Local0 = A048 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR1.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR1.AB0E */
                    }
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A067, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR1.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A060, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR1.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR1.AB0E */
                    }

                    Local0 = A067 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR1.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A066 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A059, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR1.AB02 */
                }

                Method (A062, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR1.AB00 */
                }

                Method (A058, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A068 (Arg0)
                    If ((AB10 != 0x00)) {}
                    Else
                    {
                    }

                    A069 (0x00)
                    Name (A070, 0x00)
                    A069 (0x01)
                }

                Method (A063, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A064, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A071) && (Local0 <= A072)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A073, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A065, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A068, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)) {}
                    If ((Arg0 >= 0x03)) {}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)) {}
                    }
                    Else
                    {
                    }
                }

                Method (A074, 1, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A075 (Local0, 0x00)
                    Local2 = A075 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A075 (0x00, Local0)
                                    Local5 = 0x00
                                    If ((((Local4 & 0x09) == 0x00) && (Local4 != 0x00)))
                                    {
                                        If (((Local4 & 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A075 (0x00, Local0)
                                        }

                                        If ((Arg0 != 0x00))
                                        {
                                            A076 (0x23, (Local4 & 0xFFFFFFF0), 0x00)
                                            A076 (0x24, Local5, 0x00)
                                            A076 (0x26, 0x00, 0x00)
                                            A076 (0x05, 0x00, (0x01 << 0x0A))
                                            A076 (0x25, 0x00, 0x00)
                                            Break
                                        }
                                        Else
                                        {
                                            A076 (0x26, 0x00, 0x00)
                                            A076 (0x07, 0x00, (0x01 << 0x0A))
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A088, 2, NotSerialized)
                {
                    If ((A075 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A075 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A075 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A069, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A075 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A075 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A088 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A075 (Local0, (Local1 + 0x10))
                                A086 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A086 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A086, 3, Serialized)
                {
                    Local0 = (AGRB + (A072 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A075, 2, Serialized)
                {
                    Local0 = (AGRB + (A072 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR1.A075.ADRR */
                }

                Method (A084, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A073 (Arg0))
                }

                Method (A085, 1, NotSerialized)
                {
                    Name (A070, 0x00)
                    Local2 = 0x00
                    A070 = A078 /* \_SB_.AWR0.ABR1.A078 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A079 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A069 (0x00)
                        Local0 = A075 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A086 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A075 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A086 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A079 = 0x01
                        Local0 = 0x05
                    }

                    A078 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A087 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A075 (0x00, 0x00)
                            A087 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A078 = A070 /* \_SB_.AWR0.ABR1.A085.A070 */
                    If ((A070 != 0x00))
                    {
                        A069 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR2)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x82)  // _UID: Unique ID
                Name (AB12, 0x48)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A077, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A077, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A071,   8, 
                    A072,   8, 
                    Offset (0x68), 
                    A078,   2, 
                        ,   2, 
                    A079,   1, 
                    A080,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A081,   1, 
                    Offset (0x88), 
                    A082,   4, 
                        ,   1, 
                    A083,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A066, 0, NotSerialized)
                {
                    Local0 = A048 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR2.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR2.AB0E */
                    }
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A067, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR2.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A060, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR2.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR2.AB0E */
                    }

                    Local0 = A067 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR2.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A066 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A059, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR2.AB02 */
                }

                Method (A062, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR2.AB00 */
                }

                Method (A058, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A068 (Arg0)
                    If ((AB10 != 0x00)) {}
                    Else
                    {
                    }

                    A069 (0x00)
                    Name (A070, 0x00)
                    A069 (0x01)
                }

                Method (A063, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A064, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A071) && (Local0 <= A072)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A073, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A065, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A068, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)) {}
                    If ((Arg0 >= 0x03)) {}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)) {}
                    }
                    Else
                    {
                    }
                }

                Method (A074, 1, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A075 (Local0, 0x00)
                    Local2 = A075 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A075 (0x00, Local0)
                                    Local5 = 0x00
                                    If ((((Local4 & 0x09) == 0x00) && (Local4 != 0x00)))
                                    {
                                        If (((Local4 & 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A075 (0x00, Local0)
                                        }

                                        If ((Arg0 != 0x00))
                                        {
                                            A076 (0x23, (Local4 & 0xFFFFFFF0), 0x00)
                                            A076 (0x24, Local5, 0x00)
                                            A076 (0x26, 0x00, 0x00)
                                            A076 (0x05, 0x00, (0x01 << 0x0A))
                                            A076 (0x25, 0x00, 0x00)
                                            Break
                                        }
                                        Else
                                        {
                                            A076 (0x26, 0x00, 0x00)
                                            A076 (0x07, 0x00, (0x01 << 0x0A))
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A088, 2, NotSerialized)
                {
                    If ((A075 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A075 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A075 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A069, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A075 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A075 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A088 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A075 (Local0, (Local1 + 0x10))
                                A086 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A086 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A086, 3, Serialized)
                {
                    Local0 = (AGRB + (A072 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A075, 2, Serialized)
                {
                    Local0 = (AGRB + (A072 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR2.A075.ADRR */
                }

                Method (A084, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A073 (Arg0))
                }

                Method (A085, 1, NotSerialized)
                {
                    Name (A070, 0x00)
                    Local2 = 0x00
                    A070 = A078 /* \_SB_.AWR0.ABR2.A078 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A079 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A069 (0x00)
                        Local0 = A075 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A086 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A075 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A086 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A079 = 0x01
                        Local0 = 0x05
                    }

                    A078 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A087 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A075 (0x00, 0x00)
                            A087 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A078 = A070 /* \_SB_.AWR0.ABR2.A085.A070 */
                    If ((A070 != 0x00))
                    {
                        A069 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR3)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x83)  // _UID: Unique ID
                Name (AB12, 0x5C)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A077, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A077, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A071,   8, 
                    A072,   8, 
                    Offset (0x68), 
                    A078,   2, 
                        ,   2, 
                    A079,   1, 
                    A080,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A081,   1, 
                    Offset (0x88), 
                    A082,   4, 
                        ,   1, 
                    A083,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A066, 0, NotSerialized)
                {
                    Local0 = A048 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR3.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR3.AB0E */
                    }
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A067, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR3.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A060, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR3.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR3.AB0E */
                    }

                    Local0 = A067 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR3.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A066 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A059, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR3.AB02 */
                }

                Method (A062, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR3.AB00 */
                }

                Method (A058, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A068 (Arg0)
                    If ((AB10 != 0x00)) {}
                    Else
                    {
                    }

                    A069 (0x00)
                    Name (A070, 0x00)
                    A069 (0x01)
                }

                Method (A063, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A064, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A071) && (Local0 <= A072)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A073, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A065, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A068, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)) {}
                    If ((Arg0 >= 0x03)) {}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)) {}
                    }
                    Else
                    {
                    }
                }

                Method (A074, 1, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A075 (Local0, 0x00)
                    Local2 = A075 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A075 (0x00, Local0)
                                    Local5 = 0x00
                                    If ((((Local4 & 0x09) == 0x00) && (Local4 != 0x00)))
                                    {
                                        If (((Local4 & 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A075 (0x00, Local0)
                                        }

                                        If ((Arg0 != 0x00))
                                        {
                                            A076 (0x23, (Local4 & 0xFFFFFFF0), 0x00)
                                            A076 (0x24, Local5, 0x00)
                                            A076 (0x26, 0x00, 0x00)
                                            A076 (0x05, 0x00, (0x01 << 0x0A))
                                            A076 (0x25, 0x00, 0x00)
                                            Break
                                        }
                                        Else
                                        {
                                            A076 (0x26, 0x00, 0x00)
                                            A076 (0x07, 0x00, (0x01 << 0x0A))
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A088, 2, NotSerialized)
                {
                    If ((A075 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A075 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A075 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A069, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A075 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A075 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A088 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A075 (Local0, (Local1 + 0x10))
                                A086 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A086 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A086, 3, Serialized)
                {
                    Local0 = (AGRB + (A072 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A075, 2, Serialized)
                {
                    Local0 = (AGRB + (A072 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR3.A075.ADRR */
                }

                Method (A084, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A073 (Arg0))
                }

                Method (A085, 1, NotSerialized)
                {
                    Name (A070, 0x00)
                    Local2 = 0x00
                    A070 = A078 /* \_SB_.AWR0.ABR3.A078 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A079 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A069 (0x00)
                        Local0 = A075 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A086 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A075 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A086 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A079 = 0x01
                        Local0 = 0x05
                    }

                    A078 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A087 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A075 (0x00, 0x00)
                            A087 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A078 = A070 /* \_SB_.AWR0.ABR3.A085.A070 */
                    If ((A070 != 0x00))
                    {
                        A069 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR4)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x84)  // _UID: Unique ID
                Name (AB12, 0x70)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A077, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A077, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A071,   8, 
                    A072,   8, 
                    Offset (0x68), 
                    A078,   2, 
                        ,   2, 
                    A079,   1, 
                    A080,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A081,   1, 
                    Offset (0x88), 
                    A082,   4, 
                        ,   1, 
                    A083,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A066, 0, NotSerialized)
                {
                    Local0 = A048 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR4.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR4.AB0E */
                    }
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A067, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR4.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A060, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR4.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR4.AB0E */
                    }

                    Local0 = A067 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR4.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A066 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A059, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR4.AB02 */
                }

                Method (A062, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR4.AB00 */
                }

                Method (A058, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A068 (Arg0)
                    If ((AB10 != 0x00)) {}
                    Else
                    {
                    }

                    A069 (0x00)
                    Name (A070, 0x00)
                    A069 (0x01)
                }

                Method (A063, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A064, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A071) && (Local0 <= A072)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A073, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A065, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A068, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)) {}
                    If ((Arg0 >= 0x03)) {}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)) {}
                    }
                    Else
                    {
                    }
                }

                Method (A074, 1, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A075 (Local0, 0x00)
                    Local2 = A075 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A075 (0x00, Local0)
                                    Local5 = 0x00
                                    If ((((Local4 & 0x09) == 0x00) && (Local4 != 0x00)))
                                    {
                                        If (((Local4 & 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A075 (0x00, Local0)
                                        }

                                        If ((Arg0 != 0x00))
                                        {
                                            A076 (0x23, (Local4 & 0xFFFFFFF0), 0x00)
                                            A076 (0x24, Local5, 0x00)
                                            A076 (0x26, 0x00, 0x00)
                                            A076 (0x05, 0x00, (0x01 << 0x0A))
                                            A076 (0x25, 0x00, 0x00)
                                            Break
                                        }
                                        Else
                                        {
                                            A076 (0x26, 0x00, 0x00)
                                            A076 (0x07, 0x00, (0x01 << 0x0A))
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A088, 2, NotSerialized)
                {
                    If ((A075 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A075 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A075 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A069, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A075 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A075 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A088 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A075 (Local0, (Local1 + 0x10))
                                A086 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A086 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A086, 3, Serialized)
                {
                    Local0 = (AGRB + (A072 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A075, 2, Serialized)
                {
                    Local0 = (AGRB + (A072 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR4.A075.ADRR */
                }

                Method (A084, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A073 (Arg0))
                }

                Method (A085, 1, NotSerialized)
                {
                    Name (A070, 0x00)
                    Local2 = 0x00
                    A070 = A078 /* \_SB_.AWR0.ABR4.A078 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A079 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A069 (0x00)
                        Local0 = A075 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A086 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A075 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A086 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A079 = 0x01
                        Local0 = 0x05
                    }

                    A078 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A087 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A075 (0x00, 0x00)
                            A087 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A078 = A070 /* \_SB_.AWR0.ABR4.A085.A070 */
                    If ((A070 != 0x00))
                    {
                        A069 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR5)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x85)  // _UID: Unique ID
                Name (AB12, 0x84)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A077, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A077, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A071,   8, 
                    A072,   8, 
                    Offset (0x68), 
                    A078,   2, 
                        ,   2, 
                    A079,   1, 
                    A080,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A081,   1, 
                    Offset (0x88), 
                    A082,   4, 
                        ,   1, 
                    A083,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A066, 0, NotSerialized)
                {
                    Local0 = A048 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR5.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR5.AB0E */
                    }
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A067, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR5.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A060, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR5.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR5.AB0E */
                    }

                    Local0 = A067 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR5.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A066 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A059, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR5.AB02 */
                }

                Method (A062, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR5.AB00 */
                }

                Method (A058, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A068 (Arg0)
                    If ((AB10 != 0x00)) {}
                    Else
                    {
                    }

                    A069 (0x00)
                    Name (A070, 0x00)
                    A069 (0x01)
                }

                Method (A063, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A064, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A071) && (Local0 <= A072)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A073, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A065, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A068, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)) {}
                    If ((Arg0 >= 0x03)) {}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)) {}
                    }
                    Else
                    {
                    }
                }

                Method (A074, 1, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A075 (Local0, 0x00)
                    Local2 = A075 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A075 (0x00, Local0)
                                    Local5 = 0x00
                                    If ((((Local4 & 0x09) == 0x00) && (Local4 != 0x00)))
                                    {
                                        If (((Local4 & 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A075 (0x00, Local0)
                                        }

                                        If ((Arg0 != 0x00))
                                        {
                                            A076 (0x23, (Local4 & 0xFFFFFFF0), 0x00)
                                            A076 (0x24, Local5, 0x00)
                                            A076 (0x26, 0x00, 0x00)
                                            A076 (0x05, 0x00, (0x01 << 0x0A))
                                            A076 (0x25, 0x00, 0x00)
                                            Break
                                        }
                                        Else
                                        {
                                            A076 (0x26, 0x00, 0x00)
                                            A076 (0x07, 0x00, (0x01 << 0x0A))
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A088, 2, NotSerialized)
                {
                    If ((A075 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A075 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A075 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A069, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A075 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A075 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A088 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A075 (Local0, (Local1 + 0x10))
                                A086 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A086 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A086, 3, Serialized)
                {
                    Local0 = (AGRB + (A072 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A075, 2, Serialized)
                {
                    Local0 = (AGRB + (A072 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR5.A075.ADRR */
                }

                Method (A084, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A073 (Arg0))
                }

                Method (A085, 1, NotSerialized)
                {
                    Name (A070, 0x00)
                    Local2 = 0x00
                    A070 = A078 /* \_SB_.AWR0.ABR5.A078 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A079 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A069 (0x00)
                        Local0 = A075 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A086 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A075 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A086 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A079 = 0x01
                        Local0 = 0x05
                    }

                    A078 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A087 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A075 (0x00, 0x00)
                            A087 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A078 = A070 /* \_SB_.AWR0.ABR5.A085.A070 */
                    If ((A070 != 0x00))
                    {
                        A069 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR6)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x86)  // _UID: Unique ID
                Name (AB12, 0x98)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A077, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A077, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A071,   8, 
                    A072,   8, 
                    Offset (0x68), 
                    A078,   2, 
                        ,   2, 
                    A079,   1, 
                    A080,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A081,   1, 
                    Offset (0x88), 
                    A082,   4, 
                        ,   1, 
                    A083,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A066, 0, NotSerialized)
                {
                    Local0 = A048 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR6.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR6.AB0E */
                    }
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A067, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR6.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A060, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR6.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR6.AB0E */
                    }

                    Local0 = A067 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR6.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A066 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A059, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR6.AB02 */
                }

                Method (A062, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR6.AB00 */
                }

                Method (A058, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A068 (Arg0)
                    If ((AB10 != 0x00)) {}
                    Else
                    {
                    }

                    A069 (0x00)
                    Name (A070, 0x00)
                    A069 (0x01)
                }

                Method (A063, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A064, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A071) && (Local0 <= A072)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A073, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A065, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A068, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)) {}
                    If ((Arg0 >= 0x03)) {}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)) {}
                    }
                    Else
                    {
                    }
                }

                Method (A074, 1, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A075 (Local0, 0x00)
                    Local2 = A075 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A075 (0x00, Local0)
                                    Local5 = 0x00
                                    If ((((Local4 & 0x09) == 0x00) && (Local4 != 0x00)))
                                    {
                                        If (((Local4 & 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A075 (0x00, Local0)
                                        }

                                        If ((Arg0 != 0x00))
                                        {
                                            A076 (0x23, (Local4 & 0xFFFFFFF0), 0x00)
                                            A076 (0x24, Local5, 0x00)
                                            A076 (0x26, 0x00, 0x00)
                                            A076 (0x05, 0x00, (0x01 << 0x0A))
                                            A076 (0x25, 0x00, 0x00)
                                            Break
                                        }
                                        Else
                                        {
                                            A076 (0x26, 0x00, 0x00)
                                            A076 (0x07, 0x00, (0x01 << 0x0A))
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A088, 2, NotSerialized)
                {
                    If ((A075 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A075 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A075 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A069, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A075 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A075 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A088 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A075 (Local0, (Local1 + 0x10))
                                A086 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A086 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A086, 3, Serialized)
                {
                    Local0 = (AGRB + (A072 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A075, 2, Serialized)
                {
                    Local0 = (AGRB + (A072 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR6.A075.ADRR */
                }

                Method (A084, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A073 (Arg0))
                }

                Method (A085, 1, NotSerialized)
                {
                    Name (A070, 0x00)
                    Local2 = 0x00
                    A070 = A078 /* \_SB_.AWR0.ABR6.A078 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A079 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A069 (0x00)
                        Local0 = A075 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A086 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A075 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A086 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A079 = 0x01
                        Local0 = 0x05
                    }

                    A078 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A087 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A075 (0x00, 0x00)
                            A087 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A078 = A070 /* \_SB_.AWR0.ABR6.A085.A070 */
                    If ((A070 != 0x00))
                    {
                        A069 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR7)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x87)  // _UID: Unique ID
                Name (AB12, 0xAC)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A077, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A077, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A071,   8, 
                    A072,   8, 
                    Offset (0x68), 
                    A078,   2, 
                        ,   2, 
                    A079,   1, 
                    A080,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A081,   1, 
                    Offset (0x88), 
                    A082,   4, 
                        ,   1, 
                    A083,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A066, 0, NotSerialized)
                {
                    Local0 = A048 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR7.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR7.AB0E */
                    }
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A067, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR7.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A060, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR7.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR7.AB0E */
                    }

                    Local0 = A067 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR7.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A066 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A059, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR7.AB02 */
                }

                Method (A062, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR7.AB00 */
                }

                Method (A058, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A068 (Arg0)
                    If ((AB10 != 0x00)) {}
                    Else
                    {
                    }

                    A069 (0x00)
                    Name (A070, 0x00)
                    A069 (0x01)
                }

                Method (A063, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A064, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A071) && (Local0 <= A072)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A073, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A065, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A068, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)) {}
                    If ((Arg0 >= 0x03)) {}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)) {}
                    }
                    Else
                    {
                    }
                }

                Method (A074, 1, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A075 (Local0, 0x00)
                    Local2 = A075 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A075 (0x00, Local0)
                                    Local5 = 0x00
                                    If ((((Local4 & 0x09) == 0x00) && (Local4 != 0x00)))
                                    {
                                        If (((Local4 & 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A075 (0x00, Local0)
                                        }

                                        If ((Arg0 != 0x00))
                                        {
                                            A076 (0x23, (Local4 & 0xFFFFFFF0), 0x00)
                                            A076 (0x24, Local5, 0x00)
                                            A076 (0x26, 0x00, 0x00)
                                            A076 (0x05, 0x00, (0x01 << 0x0A))
                                            A076 (0x25, 0x00, 0x00)
                                            Break
                                        }
                                        Else
                                        {
                                            A076 (0x26, 0x00, 0x00)
                                            A076 (0x07, 0x00, (0x01 << 0x0A))
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A088, 2, NotSerialized)
                {
                    If ((A075 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A075 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A075 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A069, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A075 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A075 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A088 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A075 (Local0, (Local1 + 0x10))
                                A086 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A086 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A086, 3, Serialized)
                {
                    Local0 = (AGRB + (A072 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A075, 2, Serialized)
                {
                    Local0 = (AGRB + (A072 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR7.A075.ADRR */
                }

                Method (A084, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A073 (Arg0))
                }

                Method (A085, 1, NotSerialized)
                {
                    Name (A070, 0x00)
                    Local2 = 0x00
                    A070 = A078 /* \_SB_.AWR0.ABR7.A078 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A079 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A069 (0x00)
                        Local0 = A075 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A086 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A075 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A086 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A079 = 0x01
                        Local0 = 0x05
                    }

                    A078 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A087 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A075 (0x00, 0x00)
                            A087 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A078 = A070 /* \_SB_.AWR0.ABR7.A085.A070 */
                    If ((A070 != 0x00))
                    {
                        A069 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR8)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x88)  // _UID: Unique ID
                Name (AB12, 0xC0)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A077, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A077, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A071,   8, 
                    A072,   8, 
                    Offset (0x68), 
                    A078,   2, 
                        ,   2, 
                    A079,   1, 
                    A080,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A081,   1, 
                    Offset (0x88), 
                    A082,   4, 
                        ,   1, 
                    A083,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A066, 0, NotSerialized)
                {
                    Local0 = A048 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR8.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR8.AB0E */
                    }
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A067, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR8.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A060, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR8.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR8.AB0E */
                    }

                    Local0 = A067 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR8.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A066 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A059, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR8.AB02 */
                }

                Method (A062, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR8.AB00 */
                }

                Method (A058, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A068 (Arg0)
                    If ((AB10 != 0x00)) {}
                    Else
                    {
                    }

                    A069 (0x00)
                    Name (A070, 0x00)
                    A069 (0x01)
                }

                Method (A063, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A064, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A071) && (Local0 <= A072)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A073, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A065, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A068, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)) {}
                    If ((Arg0 >= 0x03)) {}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)) {}
                    }
                    Else
                    {
                    }
                }

                Method (A074, 1, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A075 (Local0, 0x00)
                    Local2 = A075 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A075 (0x00, Local0)
                                    Local5 = 0x00
                                    If ((((Local4 & 0x09) == 0x00) && (Local4 != 0x00)))
                                    {
                                        If (((Local4 & 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A075 (0x00, Local0)
                                        }

                                        If ((Arg0 != 0x00))
                                        {
                                            A076 (0x23, (Local4 & 0xFFFFFFF0), 0x00)
                                            A076 (0x24, Local5, 0x00)
                                            A076 (0x26, 0x00, 0x00)
                                            A076 (0x05, 0x00, (0x01 << 0x0A))
                                            A076 (0x25, 0x00, 0x00)
                                            Break
                                        }
                                        Else
                                        {
                                            A076 (0x26, 0x00, 0x00)
                                            A076 (0x07, 0x00, (0x01 << 0x0A))
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A088, 2, NotSerialized)
                {
                    If ((A075 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A075 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A075 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A069, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A075 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A075 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A088 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A075 (Local0, (Local1 + 0x10))
                                A086 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A086 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A086, 3, Serialized)
                {
                    Local0 = (AGRB + (A072 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A075, 2, Serialized)
                {
                    Local0 = (AGRB + (A072 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR8.A075.ADRR */
                }

                Method (A084, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A073 (Arg0))
                }

                Method (A085, 1, NotSerialized)
                {
                    Name (A070, 0x00)
                    Local2 = 0x00
                    A070 = A078 /* \_SB_.AWR0.ABR8.A078 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A079 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A069 (0x00)
                        Local0 = A075 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A086 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A075 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A086 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A079 = 0x01
                        Local0 = 0x05
                    }

                    A078 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A087 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A075 (0x00, 0x00)
                            A087 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A078 = A070 /* \_SB_.AWR0.ABR8.A085.A070 */
                    If ((A070 != 0x00))
                    {
                        A069 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR9)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x89)  // _UID: Unique ID
                Name (AB12, 0xD4)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A077, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A077, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A071,   8, 
                    A072,   8, 
                    Offset (0x68), 
                    A078,   2, 
                        ,   2, 
                    A079,   1, 
                    A080,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A081,   1, 
                    Offset (0x88), 
                    A082,   4, 
                        ,   1, 
                    A083,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A066, 0, NotSerialized)
                {
                    Local0 = A048 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR9.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR9.AB0E */
                    }
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A067, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR9.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A060, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR9.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR9.AB0E */
                    }

                    Local0 = A067 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR9.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A066 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A059, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR9.AB02 */
                }

                Method (A062, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR9.AB00 */
                }

                Method (A058, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A068 (Arg0)
                    If ((AB10 != 0x00)) {}
                    Else
                    {
                    }

                    A069 (0x00)
                    Name (A070, 0x00)
                    A069 (0x01)
                }

                Method (A063, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A064, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A071) && (Local0 <= A072)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A073, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A065, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A068, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)) {}
                    If ((Arg0 >= 0x03)) {}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)) {}
                    }
                    Else
                    {
                    }
                }

                Method (A074, 1, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A075 (Local0, 0x00)
                    Local2 = A075 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A075 (0x00, Local0)
                                    Local5 = 0x00
                                    If ((((Local4 & 0x09) == 0x00) && (Local4 != 0x00)))
                                    {
                                        If (((Local4 & 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A075 (0x00, Local0)
                                        }

                                        If ((Arg0 != 0x00))
                                        {
                                            A076 (0x23, (Local4 & 0xFFFFFFF0), 0x00)
                                            A076 (0x24, Local5, 0x00)
                                            A076 (0x26, 0x00, 0x00)
                                            A076 (0x05, 0x00, (0x01 << 0x0A))
                                            A076 (0x25, 0x00, 0x00)
                                            Break
                                        }
                                        Else
                                        {
                                            A076 (0x26, 0x00, 0x00)
                                            A076 (0x07, 0x00, (0x01 << 0x0A))
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A088, 2, NotSerialized)
                {
                    If ((A075 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A075 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A075 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A069, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A075 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A075 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A088 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A075 (Local0, (Local1 + 0x10))
                                A086 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A086 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A086, 3, Serialized)
                {
                    Local0 = (AGRB + (A072 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A075, 2, Serialized)
                {
                    Local0 = (AGRB + (A072 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR9.A075.ADRR */
                }

                Method (A084, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A073 (Arg0))
                }

                Method (A085, 1, NotSerialized)
                {
                    Name (A070, 0x00)
                    Local2 = 0x00
                    A070 = A078 /* \_SB_.AWR0.ABR9.A078 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A079 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A069 (0x00)
                        Local0 = A075 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A086 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A075 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A086 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A079 = 0x01
                        Local0 = 0x05
                    }

                    A078 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A087 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A075 (0x00, 0x00)
                            A087 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A078 = A070 /* \_SB_.AWR0.ABR9.A085.A070 */
                    If ((A070 != 0x00))
                    {
                        A069 (0x01)
                    }

                    Return (Local2)
                }
            }
        }

        Method (A122, 1, Serialized)
        {
            If ((DerefOf (\_SB.ADAT [0x08]) == 0x01))
            {
                Local0 = 0x00
                While ((Local0 < 0x0A))
                {
                    A123 (Local0, Arg0)
                    Local0++
                }
            }
        }

        Method (A076, 3, NotSerialized)
        {
            Local7 = Buffer (0x18) {}
            CreateDWordField (Local7, 0x00, A005)
            CreateDWordField (Local7, 0x04, A006)
            CreateDWordField (Local7, 0x08, A007)
            CreateDWordField (Local7, 0x0C, A008)
            CreateDWordField (Local7, 0x10, A009)
            CreateDWordField (Local7, 0x14, A010)
            A005 = Arg1
            A006 = Arg2
            A011 (Arg0, Local7)
        }

        Method (A123, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A074 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A074 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A074 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A074 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A074 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A074 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A074 (Arg1))
            }

            If ((Arg0 == 0x07))
            {
                Return (\_SB.AWR0.ABR7.A074 (Arg1))
            }

            If ((Arg0 == 0x08))
            {
                Return (\_SB.AWR0.ABR8.A074 (Arg1))
            }

            If ((Arg0 == 0x09))
            {
                Return (\_SB.AWR0.ABR9.A074 (Arg1))
            }
        }

        Method (A038, 1, Serialized)
        {
            Local0 = 0x00
            Local6 = DerefOf (Arg0 [Local0])
            Local7 = Buffer (0x18) {}
            CreateDWordField (Local7, 0x00, A005)
            CreateDWordField (Local7, 0x04, A006)
            CreateDWordField (Local7, 0x08, A007)
            CreateDWordField (Local7, 0x0C, A008)
            CreateDWordField (Local7, 0x10, A009)
            CreateDWordField (Local7, 0x14, A010)
            Local0 = 0x02
            Local1 = DerefOf (Arg0 [Local0])
            Local0++
            Local2 = DerefOf (Arg0 [Local0])
            Local0++
            Local2 |= (DerefOf (Arg0 [Local0]) << 0x08)
            A005 = 0x00
            A006 = 0x00
            A007 = 0x00
            A008 = 0x00
            A009 = 0x00
            A010 = 0x00
            If ((Local1 == 0x00))
            {
                A005 = Local2
                A122 (0x00)
            }

            If ((Local1 == 0x01))
            {
                A005 = Local2
                A122 (0x01)
            }

            If ((Local1 == 0x02))
            {
                A005 = Local2
                A011 (0x25, Local7)
            }

            If ((Local1 == 0x03))
            {
                A005 = Local2
                A011 (0x26, Local7)
            }
        }

        Name (A001, 0x01)
        Name (A002, 0x00)
        Method (APTS, 1, NotSerialized)
        {
            If ((Arg0 == 0x03)) {}
        }

        Method (AWAK, 1, NotSerialized)
        {
            If ((Arg0 == 0x03)) {}
        }

        Method (APPM, 1, NotSerialized)
        {
            Local0 = DerefOf (Arg0 [0x04])
            Local1 = DerefOf (Arg0 [0x02])
            A003 (Local0, Local1)
        }

        Method (A004, 0, NotSerialized)
        {
            Local7 = Buffer (0x18) {}
            CreateDWordField (Local7, 0x00, A005)
            CreateDWordField (Local7, 0x04, A006)
            CreateDWordField (Local7, 0x08, A007)
            CreateDWordField (Local7, 0x0C, A008)
            CreateDWordField (Local7, 0x10, A009)
            CreateDWordField (Local7, 0x14, A010)
            A005 = 0x00
            A006 = 0x00
            A007 = 0x00
            A008 = 0x00
            A009 = 0x00
            A010 = 0x00
            If ((AD00 == 0x00))
            {
                A011 (0x11, Local7)
            }
            Else
            {
                A011 (0x12, Local7)
            }
        }

        Method (A012, 2, NotSerialized)
        {
        }
    }
}



SSDT11
------
DefinitionBlock ("", "SSDT", 2, "ACRSYS", "ACRPRDCT", 0x00000001)
{
    External (_SB_.PLTF.C000, DeviceObj)
    External (_SB_.PLTF.C001, DeviceObj)
    External (_SB_.PLTF.C002, DeviceObj)
    External (_SB_.PLTF.C003, DeviceObj)
    External (_SB_.PLTF.C004, DeviceObj)
    External (_SB_.PLTF.C005, DeviceObj)
    External (_SB_.PLTF.C006, DeviceObj)
    External (_SB_.PLTF.C007, DeviceObj)

    Scope (\_SB.PLTF.C000)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000A28, 
                0x00000C60, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x000004FD, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000A28, 
                0x00000C60, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x000004FD, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_SB_.PLTF.C000.PPCV */
        }

        Name (_CST, Package (0x04)  // _CST: C-States
        {
            0x03, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000415, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x03, 
                0x015E, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
        Name (_LPI, Package (0x06)  // _LPI: Low Power Idle States
        {
            0x0000, 
            0x0000000000000000, 
            0x0003, 
            Package (0x0A)
            {
                0x00000002, 
                0x00000001, 
                0x00000001, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                "C1"
            }, 

            Package (0x0A)
            {
                0x00000024, 
                0x00000012, 
                0x00000001, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                "C2"
            }, 

            Package (0x0A)
            {
                0x000002BC, 
                0x0000015E, 
                0x00000001, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000415, // Address
                        0x01,               // Access Size
                        )
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                "C3"
            }
        })
        Name (_CPC, Package (0x17)  // _CPC: Continuous Performance Control
        {
            0x17, 
            0x03, 
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x18,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x10,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x10,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E7, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E8, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x02,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B2, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x01,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B1, // Address
                    0x04,               // Access Size
                    )
            }, 

            0x00000001, 
            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x18,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            0x00000190, 
            0x00000A28
        })
    }

    Scope (\_SB.PLTF.C001)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000A28, 
                0x00000C60, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x000004FD, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000A28, 
                0x00000C60, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x000004FD, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_SB_.PLTF.C001.PPCV */
        }

        Name (_CST, Package (0x04)  // _CST: C-States
        {
            0x03, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000415, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x03, 
                0x015E, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
        Name (_LPI, Package (0x06)  // _LPI: Low Power Idle States
        {
            0x0000, 
            0x0000000000000000, 
            0x0003, 
            Package (0x0A)
            {
                0x00000002, 
                0x00000001, 
                0x00000001, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                "C1"
            }, 

            Package (0x0A)
            {
                0x00000024, 
                0x00000012, 
                0x00000001, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                "C2"
            }, 

            Package (0x0A)
            {
                0x000002BC, 
                0x0000015E, 
                0x00000001, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000415, // Address
                        0x01,               // Access Size
                        )
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                "C3"
            }
        })
        Name (_CPC, Package (0x17)  // _CPC: Continuous Performance Control
        {
            0x17, 
            0x03, 
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x18,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x10,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x10,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E7, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E8, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x02,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B2, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x01,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B1, // Address
                    0x04,               // Access Size
                    )
            }, 

            0x00000001, 
            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x18,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            0x00000190, 
            0x00000A28
        })
    }

    Scope (\_SB.PLTF.C002)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000A28, 
                0x00000C60, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x000004FD, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000A28, 
                0x00000C60, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x000004FD, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000001, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_SB_.PLTF.C002.PPCV */
        }

        Name (_CST, Package (0x04)  // _CST: C-States
        {
            0x03, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000415, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x03, 
                0x015E, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000001, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
        Name (_LPI, Package (0x06)  // _LPI: Low Power Idle States
        {
            0x0000, 
            0x0000000000000000, 
            0x0003, 
            Package (0x0A)
            {
                0x00000002, 
                0x00000001, 
                0x00000001, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                "C1"
            }, 

            Package (0x0A)
            {
                0x00000024, 
                0x00000012, 
                0x00000001, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                "C2"
            }, 

            Package (0x0A)
            {
                0x000002BC, 
                0x0000015E, 
                0x00000001, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000415, // Address
                        0x01,               // Access Size
                        )
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                "C3"
            }
        })
        Name (_CPC, Package (0x17)  // _CPC: Continuous Performance Control
        {
            0x17, 
            0x03, 
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x18,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x10,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x10,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E7, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E8, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x02,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B2, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x01,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B1, // Address
                    0x04,               // Access Size
                    )
            }, 

            0x00000001, 
            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x18,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            0x00000190, 
            0x00000A28
        })
    }

    Scope (\_SB.PLTF.C003)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000A28, 
                0x00000C60, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x000004FD, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000A28, 
                0x00000C60, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x000004FD, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000001, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_SB_.PLTF.C003.PPCV */
        }

        Name (_CST, Package (0x04)  // _CST: C-States
        {
            0x03, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000415, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x03, 
                0x015E, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000001, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
        Name (_LPI, Package (0x06)  // _LPI: Low Power Idle States
        {
            0x0000, 
            0x0000000000000000, 
            0x0003, 
            Package (0x0A)
            {
                0x00000002, 
                0x00000001, 
                0x00000001, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                "C1"
            }, 

            Package (0x0A)
            {
                0x00000024, 
                0x00000012, 
                0x00000001, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                "C2"
            }, 

            Package (0x0A)
            {
                0x000002BC, 
                0x0000015E, 
                0x00000001, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000415, // Address
                        0x01,               // Access Size
                        )
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                "C3"
            }
        })
        Name (_CPC, Package (0x17)  // _CPC: Continuous Performance Control
        {
            0x17, 
            0x03, 
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x18,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x10,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x10,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E7, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E8, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x02,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B2, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x01,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B1, // Address
                    0x04,               // Access Size
                    )
            }, 

            0x00000001, 
            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x18,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            0x00000190, 
            0x00000A28
        })
    }

    Scope (\_SB.PLTF.C004)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000A28, 
                0x00000C60, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x000004FD, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000A28, 
                0x00000C60, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x000004FD, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000002, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_SB_.PLTF.C004.PPCV */
        }

        Name (_CST, Package (0x04)  // _CST: C-States
        {
            0x03, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000415, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x03, 
                0x015E, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000002, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
        Name (_LPI, Package (0x06)  // _LPI: Low Power Idle States
        {
            0x0000, 
            0x0000000000000000, 
            0x0003, 
            Package (0x0A)
            {
                0x00000002, 
                0x00000001, 
                0x00000001, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                "C1"
            }, 

            Package (0x0A)
            {
                0x00000024, 
                0x00000012, 
                0x00000001, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                "C2"
            }, 

            Package (0x0A)
            {
                0x000002BC, 
                0x0000015E, 
                0x00000001, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000415, // Address
                        0x01,               // Access Size
                        )
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                "C3"
            }
        })
        Name (_CPC, Package (0x17)  // _CPC: Continuous Performance Control
        {
            0x17, 
            0x03, 
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x18,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x10,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x10,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E7, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E8, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x02,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B2, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x01,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B1, // Address
                    0x04,               // Access Size
                    )
            }, 

            0x00000001, 
            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x18,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            0x00000190, 
            0x00000A28
        })
    }

    Scope (\_SB.PLTF.C005)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000A28, 
                0x00000C60, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x000004FD, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000A28, 
                0x00000C60, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x000004FD, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000002, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_SB_.PLTF.C005.PPCV */
        }

        Name (_CST, Package (0x04)  // _CST: C-States
        {
            0x03, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000415, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x03, 
                0x015E, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000002, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
        Name (_LPI, Package (0x06)  // _LPI: Low Power Idle States
        {
            0x0000, 
            0x0000000000000000, 
            0x0003, 
            Package (0x0A)
            {
                0x00000002, 
                0x00000001, 
                0x00000001, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                "C1"
            }, 

            Package (0x0A)
            {
                0x00000024, 
                0x00000012, 
                0x00000001, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                "C2"
            }, 

            Package (0x0A)
            {
                0x000002BC, 
                0x0000015E, 
                0x00000001, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000415, // Address
                        0x01,               // Access Size
                        )
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                "C3"
            }
        })
        Name (_CPC, Package (0x17)  // _CPC: Continuous Performance Control
        {
            0x17, 
            0x03, 
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x18,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x10,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x10,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E7, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E8, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x02,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B2, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x01,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B1, // Address
                    0x04,               // Access Size
                    )
            }, 

            0x00000001, 
            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x18,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            0x00000190, 
            0x00000A28
        })
    }

    Scope (\_SB.PLTF.C006)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000A28, 
                0x00000C60, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x000004FD, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000A28, 
                0x00000C60, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x000004FD, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000003, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_SB_.PLTF.C006.PPCV */
        }

        Name (_CST, Package (0x04)  // _CST: C-States
        {
            0x03, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000415, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x03, 
                0x015E, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000003, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
        Name (_LPI, Package (0x06)  // _LPI: Low Power Idle States
        {
            0x0000, 
            0x0000000000000000, 
            0x0003, 
            Package (0x0A)
            {
                0x00000002, 
                0x00000001, 
                0x00000001, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                "C1"
            }, 

            Package (0x0A)
            {
                0x00000024, 
                0x00000012, 
                0x00000001, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                "C2"
            }, 

            Package (0x0A)
            {
                0x000002BC, 
                0x0000015E, 
                0x00000001, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000415, // Address
                        0x01,               // Access Size
                        )
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                "C3"
            }
        })
        Name (_CPC, Package (0x17)  // _CPC: Continuous Performance Control
        {
            0x17, 
            0x03, 
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x18,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x10,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x10,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E7, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E8, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x02,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B2, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x01,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B1, // Address
                    0x04,               // Access Size
                    )
            }, 

            0x00000001, 
            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x18,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            0x00000190, 
            0x00000A28
        })
    }

    Scope (\_SB.PLTF.C007)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000A28, 
                0x00000C60, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x000004FD, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x00000A28, 
                0x00000C60, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x000006A4, 
                0x0000064F, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000578, 
                0x000004FD, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000003, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_SB_.PLTF.C007.PPCV */
        }

        Name (_CST, Package (0x04)  // _CST: C-States
        {
            0x03, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000415, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x03, 
                0x015E, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000003, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
        Name (_LPI, Package (0x06)  // _LPI: Low Power Idle States
        {
            0x0000, 
            0x0000000000000000, 
            0x0003, 
            Package (0x0A)
            {
                0x00000002, 
                0x00000001, 
                0x00000001, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                "C1"
            }, 

            Package (0x0A)
            {
                0x00000024, 
                0x00000012, 
                0x00000001, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                "C2"
            }, 

            Package (0x0A)
            {
                0x000002BC, 
                0x0000015E, 
                0x00000001, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000415, // Address
                        0x01,               // Access Size
                        )
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                "C3"
            }
        })
        Name (_CPC, Package (0x17)  // _CPC: Continuous Performance Control
        {
            0x17, 
            0x03, 
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x18,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x10,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B0, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x10,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E7, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E8, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x02,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B2, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x01,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C00102B1, // Address
                    0x04,               // Access Size
                    )
            }, 

            0x00000001, 
            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x18,               // Bit Offset
                    0x00000000C00102B3, // Address
                    0x04,               // Access Size
                    )
            }, 

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            0x00000190, 
            0x00000A28
        })
    }
}



SSDT12
------
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00000001)
{
    External (_SB_.PLTF, DeviceObj)

    Scope (\_SB.PLTF)
    {
        Name (_LPI, Package (0x04)  // _LPI: Low Power Idle States
        {
            Zero, 
            Zero, 
            One, 
            Package (0x0A)
            {
                0x000F4240, 
                0xC350, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                ResourceTemplate ()
                {
                    Register (SystemMemory, 
                        0x00,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                "S0i3"
            }
        })
    }
}



SSDT13
------
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00001000)
{
    /*
     * iASL Warning: There was 1 external control method found during
     * disassembly, but only 0 were resolved (1 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.PCI0, DeviceObj)
    External (_SB_.PCI0.LPC0.EC0_, DeviceObj)
    External (_SB_.PCI0.LPC0.EC0_.BTST, IntObj)
    External (_SB_.PCI0.LPC0.EC0_.CPUF, UnknownObj)
    External (_SB_.PCI0.LPC0.EC0_.CTMP, IntObj)
    External (_SB_.PCI0.LPC0.EC0_.GPUF, UnknownObj)
    External (_SB_.PCI0.LPC0.EC0_.RG59, IntObj)
    External (_SB_.PCI0.LPC0.EC0_.UPTM, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.VSID, UnknownObj)
    External (ACDF, IntObj)
    External (GHKE, UnknownObj)
    External (GHKN, IntObj)
    External (KBBL, UnknownObj)
    External (TOHP, UnknownObj)

    Scope (\_SB.PCI0)
    {
        Device (WMID)
        {
            Name (_HID, "PNP0C14" /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
            Name (_UID, "APGe")  // _UID: Unique ID
            OperationRegion (AGNS, SystemMemory, 0xCCEF1000, 0x00001188)
            Field (AGNS, AnyAcc, Lock, Preserve)
            {
                D2DF,   8, 
                MTID,   8, 
                WMIB,   33056, 
                ECDA,   2048, 
                HDIF,   504, 
                ODIF,   168, 
                CTID,   16, 
                LMST,   8, 
                EPMS,   8, 
                DCST,   8, 
                APUS,   8, 
                RFDS,   8, 
                ODST,   8, 
                HSST,   8, 
                PSST,   8, 
                TMGB,   16, 
                TOPT,   8, 
                PSSP,   8
            }

            Name (_WDG, Buffer (0x0118)
            {
                /* 0000 */  0x5E, 0xA1, 0x6A, 0x67, 0x47, 0x6A, 0x9F, 0x4D,  // ^.jgGj.M
                /* 0008 */  0xA2, 0xCC, 0x1E, 0x6D, 0x18, 0xD1, 0x40, 0x26,  // ...m..@&
                /* 0010 */  0xBC, 0x00, 0x01, 0x08, 0xE2, 0x3C, 0x6B, 0x2E,  // .....<k.
                /* 0018 */  0x58, 0x6A, 0xF2, 0x4A, 0x87, 0x67, 0x46, 0x40,  // Xj.J.gF@
                /* 0020 */  0xCA, 0x8A, 0x38, 0xE3, 0xAE, 0x00, 0x01, 0x08,  // ..8.....
                /* 0028 */  0xEA, 0x69, 0xEF, 0x61, 0x5C, 0x86, 0xC3, 0x4B,  // .i.a\..K
                /* 0030 */  0xA5, 0x02, 0xA0, 0xDE, 0xBA, 0x0C, 0xB5, 0x31,  // .......1
                /* 0038 */  0x41, 0x41, 0x01, 0x02, 0x57, 0xBC, 0xA0, 0x1E,  // AA..W...
                /* 0040 */  0x1E, 0x52, 0x1B, 0x46, 0xA7, 0xA9, 0x5D, 0x36,  // .R.F..]6
                /* 0048 */  0xF1, 0x41, 0xA8, 0x2A, 0x41, 0x45, 0x01, 0x02,  // .A.*AE..
                /* 0050 */  0xC5, 0x2E, 0x77, 0x79, 0xB1, 0x04, 0xFD, 0x4B,  // ..wy...K
                /* 0058 */  0x84, 0x3C, 0x61, 0xE7, 0xF7, 0x7B, 0x6C, 0xC9,  // .<a..{l.
                /* 0060 */  0x42, 0x45, 0x01, 0x02, 0xC6, 0x2E, 0x77, 0x79,  // BE....wy
                /* 0068 */  0xB1, 0x04, 0xFD, 0x4B, 0x84, 0x3C, 0x61, 0xE7,  // ...K.<a.
                /* 0070 */  0xF7, 0x7B, 0x6C, 0xC9, 0x42, 0x46, 0x01, 0x02,  // .{l.BF..
                /* 0078 */  0x66, 0x56, 0x5F, 0xF7, 0xB3, 0xB8, 0x5D, 0x4A,  // fV_...]J
                /* 0080 */  0xA9, 0x1C, 0x74, 0x88, 0xF6, 0x2E, 0x56, 0x37,  // ..t...V7
                /* 0088 */  0x42, 0x4B, 0x01, 0x02, 0xDA, 0xBB, 0x1D, 0xFE,  // BK......
                /* 0090 */  0x14, 0x30, 0x56, 0x48, 0x87, 0x0C, 0x5B, 0x3A,  // .0VH..[:
                /* 0098 */  0x74, 0x4B, 0xF3, 0x41, 0x42, 0x4C, 0x01, 0x02,  // tK.ABL..
                /* 00A0 */  0xA7, 0xC3, 0xB0, 0x77, 0x1D, 0xF7, 0xCB, 0x43,  // ...w...C
                /* 00A8 */  0xB7, 0x49, 0x91, 0xCB, 0xFF, 0x5D, 0xDC, 0x43,  // .I...].C
                /* 00B0 */  0x42, 0x47, 0x01, 0x02, 0xE7, 0xDF, 0x4D, 0x7A,  // BG....Mz
                /* 00B8 */  0x5D, 0x5B, 0xB4, 0x40, 0x85, 0x95, 0x44, 0x08,  // ][.@..D.
                /* 00C0 */  0xE0, 0xCC, 0x7F, 0x56, 0x42, 0x48, 0x01, 0x02,  // ...VBH..
                /* 00C8 */  0x43, 0x34, 0xB5, 0x4B, 0x8A, 0x48, 0x0D, 0x43,  // C4.K.H.C
                /* 00D0 */  0xA2, 0x5C, 0x87, 0x46, 0x60, 0xE2, 0x3B, 0xDD,  // .\.F`.;.
                /* 00D8 */  0x41, 0x43, 0x01, 0x02, 0xF6, 0x7E, 0xD7, 0xA9,  // AC...~..
                /* 00E0 */  0xE0, 0x55, 0x06, 0x47, 0xB1, 0x39, 0x96, 0xAC,  // .U.G.9..
                /* 00E8 */  0xE1, 0x3F, 0x22, 0x69, 0xBD, 0x00, 0x01, 0x08,  // .?"i....
                /* 00F0 */  0x0E, 0x13, 0x98, 0x9F, 0x48, 0x3B, 0xB3, 0x40,  // ....H;.@
                /* 00F8 */  0x94, 0x02, 0xDE, 0x8E, 0x16, 0x0F, 0x30, 0xCC,  // ......0.
                /* 0100 */  0x41, 0x42, 0x01, 0x02, 0x21, 0x12, 0x90, 0x05,  // AB..!...
                /* 0108 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,  // f.......
                /* 0110 */  0xC9, 0x06, 0x29, 0x10, 0x41, 0x42, 0x01, 0x00   // ..).AB..
            })
            Name (BFFB, Buffer (0x02)
            {
                 0x00, 0x00                                       // ..
            })
            Name (FEBC, Buffer (0x08)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (AAST, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (AAGT, Buffer (0x08)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BEBI, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BEGB, Buffer (0x08)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BESB, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BKCP, Buffer (0x08)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BKGP, Buffer (0x0C)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BKGB, Buffer (0x14)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BKSU, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BKSS, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BKSB, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BLCP, Buffer (0x08)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BLSP, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (ACSB, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (ACGB, Buffer (0x0804)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0048 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0050 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0058 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0060 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0068 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0070 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0078 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0080 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0088 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0090 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0098 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0100 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0108 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0110 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0118 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0120 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0128 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0130 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0138 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0140 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0148 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0150 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0158 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0160 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0168 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0170 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0178 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0180 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0188 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0190 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0198 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0200 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0208 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0210 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0218 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0220 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0228 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0230 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0238 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0240 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0248 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0250 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0258 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0260 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0268 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0270 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0278 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0280 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0288 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0290 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0298 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0300 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0308 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0310 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0318 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0320 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0328 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0330 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0338 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0340 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0348 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0350 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0358 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0360 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0368 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0370 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0378 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0380 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0388 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0390 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0398 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0400 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0408 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0410 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0418 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0420 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0428 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0430 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0438 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0440 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0448 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0450 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0458 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0460 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0468 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0470 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0478 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0480 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0488 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0490 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0498 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0500 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0508 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0510 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0518 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0520 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0528 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0530 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0538 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0540 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0548 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0550 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0558 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0560 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0568 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0570 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0578 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0580 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0588 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0590 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0598 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0600 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0608 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0610 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0618 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0620 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0628 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0630 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0638 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0640 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0648 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0650 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0658 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0660 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0668 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0670 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0678 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0680 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0688 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0690 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0698 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0700 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0708 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0710 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0718 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0720 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0728 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0730 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0738 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0740 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0748 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0750 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0758 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0760 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0768 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0770 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0778 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0780 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0788 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0790 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0798 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0800 */  0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (ACFB, Buffer (0x05)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00                     // .....
            })
            Name (BLLB, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BLSD, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BLGD, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BLDR, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BLGP, Buffer (0x20)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BHSK, Buffer (0x04)
            {
                 0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (BHGK, Buffer (0x08)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BHLK, Buffer (0x10)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BGS3, Buffer (0x02)
            {
                 0x00, 0x00                                       // ..
            })
            Name (BKMN, Buffer (0x58)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0048 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0050 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BKSN, Buffer (0x30)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BKAT, Buffer (0x48)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BKGU, Buffer (0x48)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BKGS, Buffer (0x48)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Name (BHPK, Buffer (0x0202)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0048 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0050 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0058 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0060 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0068 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0070 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0078 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0080 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0088 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0090 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0098 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0100 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0108 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0110 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0118 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0120 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0128 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0130 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0138 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0140 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0148 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0150 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0158 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0160 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0168 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0170 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0178 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0180 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0188 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0190 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0198 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0200 */  0x00, 0x00                                       // ..
            })
            Name (BLGB, Buffer (0x100C)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0048 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0050 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0058 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0060 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0068 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0070 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0078 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0080 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0088 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0090 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0098 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 00F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0100 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0108 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0110 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0118 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0120 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0128 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0130 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0138 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0140 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0148 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0150 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0158 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0160 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0168 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0170 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0178 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0180 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0188 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0190 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0198 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 01F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0200 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0208 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0210 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0218 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0220 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0228 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0230 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0238 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0240 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0248 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0250 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0258 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0260 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0268 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0270 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0278 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0280 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0288 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0290 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0298 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 02F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0300 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0308 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0310 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0318 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0320 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0328 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0330 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0338 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0340 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0348 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0350 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0358 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0360 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0368 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0370 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0378 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0380 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0388 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0390 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0398 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 03F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0400 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0408 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0410 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0418 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0420 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0428 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0430 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0438 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0440 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0448 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0450 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0458 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0460 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0468 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0470 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0478 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0480 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0488 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0490 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0498 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 04F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0500 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0508 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0510 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0518 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0520 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0528 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0530 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0538 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0540 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0548 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0550 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0558 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0560 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0568 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0570 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0578 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0580 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0588 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0590 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0598 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 05F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0600 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0608 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0610 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0618 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0620 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0628 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0630 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0638 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0640 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0648 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0650 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0658 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0660 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0668 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0670 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0678 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0680 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0688 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0690 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0698 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 06F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0700 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0708 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0710 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0718 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0720 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0728 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0730 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0738 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0740 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0748 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0750 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0758 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0760 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0768 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0770 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0778 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0780 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0788 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0790 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0798 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 07F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0800 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0808 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0810 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0818 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0820 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0828 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0830 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0838 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0840 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0848 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0850 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0858 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0860 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0868 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0870 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0878 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0880 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0888 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0890 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0898 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 08F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0900 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0908 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0910 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0918 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0920 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0928 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0930 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0938 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0940 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0948 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0950 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0958 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0960 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0968 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0970 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0978 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0980 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0988 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0990 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0998 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 09F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A00 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A08 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A10 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A18 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A20 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A28 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A30 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A38 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A40 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A48 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A50 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A58 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A60 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A68 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A70 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A78 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A80 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A88 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A90 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0A98 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AA0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AA8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AB0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AB8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AC0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AC8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AD0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AD8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AE0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AE8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AF0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0AF8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B00 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B08 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B10 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B18 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B20 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B28 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B30 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B38 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B40 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B48 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B50 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B58 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B60 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B68 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B70 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B78 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B80 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B88 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B90 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0B98 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BA0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BA8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BB0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BB8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BC0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BC8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BD0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BD8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BE0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BE8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BF0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0BF8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C00 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C08 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C10 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C18 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C20 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C28 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C30 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C38 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C40 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C48 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C50 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C58 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C60 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C68 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C70 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C78 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C80 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C88 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C90 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0C98 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CA0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CA8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CB0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CB8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CC0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CC8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CD0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CD8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CE0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CE8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CF0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0CF8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D00 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D08 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D10 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D18 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D20 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D28 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D30 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D38 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D40 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D48 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D50 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D58 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D60 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D68 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D70 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D78 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D80 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D88 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D90 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0D98 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DA0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DA8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DB0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DB8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DC0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DC8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DD0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DD8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DE0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DE8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DF0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0DF8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E00 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E08 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E10 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E18 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E20 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E28 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E30 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E38 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E40 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E48 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E50 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E58 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E60 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E68 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E70 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E78 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E80 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E88 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E90 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0E98 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EA0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EA8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EB0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EB8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EC0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EC8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0ED0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0ED8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EE0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EE8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EF0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0EF8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F00 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F08 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F10 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F18 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F20 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F28 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F30 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F38 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F40 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F48 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F50 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F58 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F60 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F68 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F70 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F78 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F80 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F88 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F90 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0F98 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FA0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FA8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FB0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FB8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FC0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FC8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FD0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FD8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FE0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FE8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FF0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0FF8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 1000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 1008 */  0x00, 0x00, 0x00, 0x00                           // ....
            })
            Name (ABST, Buffer (0x02)
            {
                 0x00, 0x00                                       // ..
            })
            Name (ABGT, Buffer (0x84)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0048 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0050 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0058 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0060 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0068 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0070 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0078 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0080 */  0x00, 0x00, 0x00, 0x00                           // ....
            })
            Scope (\_SB.PCI0.LPC0.EC0)
            {
                Method (GCMS, 1, NotSerialized)
                {
                    Local0 = Zero
                    Arg0 = Local0
                    Return (Zero)
                }

                Method (GOTS, 2, Serialized)
                {
                    Local0 = Zero
                    Local1 = (Arg0 & 0xFF)
                    Switch (Local1)
                    {
                        Case (0x82)
                        {
                            If ((TOHP == Zero))
                            {
                                Local0 |= 0x02
                            }
                        }
                        Case (0x84)
                        {
                            If ((KBBL == One))
                            {
                                Local0 |= 0x08
                            }
                        }

                    }

                    Arg1 = Local0
                    Return (Zero)
                }

                Method (GBL1, 1, NotSerialized)
                {
                    Local0 = Zero
                    Arg0 = Local0
                    Return (Zero)
                }

                Method (GBL2, 1, NotSerialized)
                {
                    Local0 = Zero
                    Arg0 = Local0
                    Return (Zero)
                }

                Method (GSTY, 1, NotSerialized)
                {
                    Local0 = Zero
                    Arg0 = Local0
                    Return (Zero)
                }

                Method (GSDA, 1, NotSerialized)
                {
                    Local0 = Zero
                    Arg0 = Local0
                    Return (Zero)
                }

                Method (GTTY, 1, NotSerialized)
                {
                    Local0 = Zero
                    Arg0 = Local0
                    Return (Zero)
                }

                Method (GTDA, 1, NotSerialized)
                {
                    Local0 = Zero
                    Arg0 = Local0
                    Return (Zero)
                }

                Method (GACS, 1, NotSerialized)
                {
                    Local0 = Zero
                    If (ACDF)
                    {
                        Arg0 = One
                    }
                    Else
                    {
                        Arg0 = Zero
                    }

                    Return (Zero)
                }

                Method (GBBS, 1, NotSerialized)
                {
                    Local0 = Zero
                    Local0 = \_SB.PCI0.LPC0.EC0.BTST /* External reference */
                    Arg0 = Local0
                    Return (Zero)
                }

                Method (GBSI, 1, NotSerialized)
                {
                    Local0 = Zero
                    Arg0 = Local0
                    Return (Zero)
                }

                Method (GBBC, 1, NotSerialized)
                {
                    Local0 = Zero
                    Local0 = DerefOf (\_SB.PCI0.WMID.FEBC [One])
                    Arg0 = Local0
                    Return (Zero)
                }

                Method (GSKS, 1, NotSerialized)
                {
                    Local0 = Zero
                    Arg0 = Local0
                    Return (Zero)
                }

                Method (GDDP, 1, NotSerialized)
                {
                    Local0 = Zero
                    Arg0 = Local0
                    Return (Zero)
                }

                Method (SHME, 1, NotSerialized)
                {
                    Local0 = Zero
                    Arg0 = Local0
                    Return (Zero)
                }

                Method (CPCM, 1, NotSerialized)
                {
                    Local0 = Zero
                    Arg0 = Local0
                    Return (Zero)
                }

                Method (GHKF, 1, NotSerialized)
                {
                    Local0 = Zero
                    If ((GHKE == One))
                    {
                        Arg0 = One
                    }
                    Else
                    {
                        Arg0 = 0x02
                    }

                    Return (Zero)
                }

                Method (GHKD, 1, NotSerialized)
                {
                    Local0 = Zero
                    Arg0 = GHKN /* External reference */
                    Return (Zero)
                }

                Method (GGSI, 2, Serialized)
                {
                    Local0 = Zero
                    Local1 = DerefOf (Arg0 [Zero])
                    Local2 = DerefOf (Arg0 [One])
                    If ((Local1 == Zero))
                    {
                        Local0 = 0x07
                        If ((\_SB.VSID == One))
                        {
                            Local0 = 0x0227
                        }

                        Arg1 = Local0
                    }
                    ElseIf ((Local1 == One))
                    {
                        Switch (Local2)
                        {
                            Case (One)
                            {
                                Local0 = \_SB.PCI0.LPC0.EC0.CTMP /* External reference */
                            }
                            Case (0x02)
                            {
                                Local5 = (\_SB.PCI0.LPC0.EC0.CPUF & 0xFF)
                                Local5 <<= 0x08
                                Local6 = (\_SB.PCI0.LPC0.EC0.CPUF >> 0x08)
                                Local0 = (Local6 | Local5)
                            }
                            Case (0x03)
                            {
                                Local0 = \_SB.PCI0.LPC0.EC0.CTMP /* External reference */
                            }
                            Case (0x04)
                            {
                            }
                            Case (0x05)
                            {
                            }
                            Case (0x06)
                            {
                                Local5 = (\_SB.PCI0.LPC0.EC0.GPUF & 0xFF)
                                Local5 <<= 0x08
                                Local6 = (\_SB.PCI0.LPC0.EC0.GPUF >> 0x08)
                                Local0 = (Local6 | Local5)
                            }
                            Case (0x07)
                            {
                            }
                            Case (0x08)
                            {
                            }
                            Case (0x09)
                            {
                            }
                            Case (0x0A)
                            {
                                Local0 = \_SB.PCI0.LPC0.EC0.RG59 /* External reference */
                            }
                            Case (0x0B)
                            {
                            }
                            Case (0x0C)
                            {
                            }
                            Case (0x0D)
                            {
                            }
                            Case (0x0E)
                            {
                            }
                            Case (0x0F)
                            {
                            }
                            Case (0x10)
                            {
                            }
                            Case (0x11)
                            {
                            }

                        }

                        Arg1 = Local0
                    }
                    ElseIf ((Local1 == 0x02))
                    {
                        Local0 = \_SB.PCI0.LPC0.EC0.BTST /* External reference */
                        Arg1 = Local0
                    }

                    Return (Zero)
                }

                Method (NWFS, 1, NotSerialized)
                {
                    Return (One)
                }
            }

            OperationRegion (XCMS, SystemIO, 0x72, 0x02)
            Field (XCMS, ByteAcc, NoLock, Preserve)
            {
                CMSI,   8, 
                CMSD,   8
            }

            Method (CMSW, 2, NotSerialized)
            {
                CMSI = Arg0
                CMSD = Arg1
            }

            Method (CLBC, 2, NotSerialized)
            {
                Local1 = Arg0
                Local2 = Arg1
                Local2 += Local1
                While (One)
                {
                    FEBC [Local1] = Zero
                    Local1 += One
                    If ((Local1 == Local2))
                    {
                        Break
                    }
                }
            }

            Method (CMSR, 1, NotSerialized)
            {
                CMSI = Arg0
                Return (CMSD) /* \_SB_.PCI0.WMID.CMSD */
            }

            OperationRegion (CSPR, SystemIO, PSSP, 0x02)
            Field (CSPR, ByteAcc, NoLock, Preserve)
            {
                WSSP,   8
            }

            Method (WSMI, 2, NotSerialized)
            {
                MTID = Arg0
                WMIB = Arg1
                WSSP = 0xD0
            }

            Method (OSMI, 1, NotSerialized)
            {
                MTID = Arg0
                WSSP = 0xD0
            }

            Name (WQAB, Buffer (0x3227)
            {
                /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
                /* 0008 */  0x17, 0x32, 0x00, 0x00, 0xC6, 0x73, 0x01, 0x00,  // .2...s..
                /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
                /* 0018 */  0xA8, 0xCA, 0xB1, 0x01, 0x01, 0x08, 0x09, 0x42,  // .......B
                /* 0020 */  0x58, 0x07, 0x84, 0x48, 0x08, 0x81, 0x44, 0x40,  // X..H..D@
                /* 0028 */  0x28, 0x32, 0x0B, 0x83, 0x21, 0x04, 0x8E, 0x0B,  // (2..!...
                /* 0030 */  0x21, 0x07, 0x10, 0x12, 0x07, 0x85, 0x12, 0x02,  // !.......
                /* 0038 */  0xA1, 0xFE, 0x04, 0xF2, 0x2B, 0x00, 0xA1, 0x43,  // ....+..C
                /* 0040 */  0x01, 0x32, 0x05, 0x18, 0x14, 0xE0, 0x14, 0x41,  // .2.....A
                /* 0048 */  0x04, 0xBD, 0x0A, 0xB0, 0x29, 0xC0, 0xA4, 0x00,  // ....)...
                /* 0050 */  0x8B, 0x02, 0xB4, 0x0B, 0xB0, 0x2C, 0x40, 0xB7,  // .....,@.
                /* 0058 */  0x00, 0xE9, 0xB0, 0x44, 0x24, 0x38, 0x4A, 0x0C,  // ...D$8J.
                /* 0060 */  0x38, 0x4A, 0x27, 0xB6, 0x70, 0xC3, 0x06, 0x2F,  // 8J'.p../
                /* 0068 */  0x14, 0x45, 0x33, 0x88, 0x92, 0xA0, 0x72, 0x01,  // .E3...r.
                /* 0070 */  0xBE, 0x11, 0x04, 0x5E, 0xAE, 0x00, 0xC9, 0x13,  // ...^....
                /* 0078 */  0x90, 0x66, 0x01, 0x86, 0x05, 0x58, 0x17, 0x20,  // .f...X. 
                /* 0080 */  0x7B, 0x08, 0x54, 0xEA, 0x10, 0x50, 0x72, 0x86,  // {.T..Pr.
                /* 0088 */  0x80, 0x1A, 0x40, 0xAB, 0x13, 0x10, 0x7E, 0xA5,  // ..@...~.
                /* 0090 */  0x53, 0x42, 0x12, 0x84, 0x33, 0x56, 0xF1, 0xF8,  // SB..3V..
                /* 0098 */  0x9A, 0x45, 0xD3, 0x73, 0x92, 0x73, 0x0C, 0x39,  // .E.s.s.9
                /* 00A0 */  0x1E, 0x17, 0x7A, 0x10, 0x3C, 0xAC, 0x04, 0x10,  // ..z.<...
                /* 00A8 */  0x16, 0x60, 0xC8, 0x8A, 0x07, 0x83, 0xD2, 0x30,  // .`.....0
                /* 00B0 */  0x16, 0xEA, 0x62, 0xD4, 0xA8, 0x91, 0xB2, 0x01,  // ..b.....
                /* 00B8 */  0x19, 0xA2, 0x24, 0x38, 0xD4, 0xA8, 0x2D, 0x51,  // ..$8..-Q
                /* 00C0 */  0x80, 0xF9, 0x71, 0x68, 0x76, 0x6D, 0x8F, 0x85,  // ..qhvm..
                /* 00C8 */  0x40, 0x32, 0x69, 0x43, 0x41, 0x49, 0x81, 0xD0,  // @2iCAI..
                /* 00D0 */  0xD8, 0xCE, 0xD4, 0x33, 0x8A, 0x78, 0xA4, 0x86,  // ...3.x..
                /* 00D8 */  0x49, 0xE0, 0x51, 0x44, 0x36, 0x1A, 0x87, 0xC6,  // I.QD6...
                /* 00E0 */  0x0E, 0xC3, 0xC3, 0x0C, 0x76, 0x10, 0x87, 0x71,  // ....v..q
                /* 00E8 */  0xCC, 0x91, 0x13, 0x78, 0x42, 0x47, 0x7A, 0xE4,  // ...xBGz.
                /* 00F0 */  0x85, 0xCD, 0x53, 0xA8, 0x31, 0x9A, 0x83, 0x22,  // ..S.1.."
                /* 00F8 */  0x73, 0x78, 0x14, 0xC0, 0x8E, 0x29, 0xEC, 0xD1,  // sx...)..
                /* 0100 */  0xC6, 0x3E, 0x5F, 0x0B, 0x1F, 0xAC, 0x30, 0x8E,  // .>_...0.
                /* 0108 */  0xE0, 0xB8, 0x12, 0xFC, 0xFF, 0x4F, 0xFC, 0x50,  // .....O.P
                /* 0110 */  0x7A, 0x84, 0x93, 0xA0, 0x29, 0x52, 0x90, 0xA3,  // z...)R..
                /* 0118 */  0xC6, 0xC8, 0xC2, 0x91, 0xD6, 0x59, 0x91, 0xB9,  // .....Y..
                /* 0120 */  0x1B, 0xD8, 0x40, 0x95, 0x09, 0xD0, 0x75, 0x5E,  // ..@...u^
                /* 0128 */  0x90, 0xB1, 0x61, 0x90, 0x01, 0x1D, 0x09, 0x46,  // ..a....F
                /* 0130 */  0x06, 0x84, 0x3C, 0x1F, 0x0C, 0x34, 0x44, 0x13,  // ..<..4D.
                /* 0138 */  0xD8, 0xBD, 0x00, 0x6D, 0x02, 0xBC, 0x41, 0x68,  // ...m..Ah
                /* 0140 */  0x20, 0x11, 0xE2, 0xB6, 0x36, 0x0B, 0xD9, 0xC2,  //  ...6...
                /* 0148 */  0x21, 0x13, 0x8B, 0x15, 0x25, 0xC6, 0x41, 0x1D,  // !...%.A.
                /* 0150 */  0x5A, 0x8D, 0x28, 0x42, 0x3A, 0x89, 0x57, 0x83,  // Z.(B:.W.
                /* 0158 */  0x08, 0x51, 0x62, 0x86, 0x8C, 0x18, 0x2C, 0xC8,  // .Qb...,.
                /* 0160 */  0x81, 0xC4, 0xF0, 0x18, 0x0D, 0x17, 0xA9, 0xFD,  // ........
                /* 0168 */  0x41, 0x10, 0x79, 0xAF, 0x09, 0x1D, 0x08, 0x1C,  // A.y.....
                /* 0170 */  0x69, 0x34, 0xA8, 0xD3, 0x82, 0x0F, 0x05, 0x9E,  // i4......
                /* 0178 */  0xDD, 0x43, 0x82, 0x07, 0x77, 0xD2, 0x41, 0x4E,  // .C..w.AN
                /* 0180 */  0xF4, 0xE0, 0x9E, 0x21, 0x9E, 0x06, 0x3C, 0x6E,  // ...!..<n
                /* 0188 */  0x76, 0x4D, 0xF0, 0xE1, 0xC2, 0xC7, 0x03, 0xBC,  // vM......
                /* 0190 */  0x6B, 0x40, 0xDD, 0x0B, 0x9E, 0x0A, 0xD8, 0x2C,  // k@.....,
                /* 0198 */  0xC3, 0x61, 0x86, 0xE8, 0xC1, 0x86, 0x3B, 0x81,  // .a....;.
                /* 01A0 */  0x43, 0x64, 0x80, 0x1E, 0xD2, 0x03, 0x01, 0x76,  // Cd.....v
                /* 01A8 */  0x6E, 0x27, 0x73, 0xEC, 0x2F, 0x14, 0xCD, 0x5E,  // n's./..^
                /* 01B0 */  0x25, 0x08, 0xC1, 0xF1, 0xF8, 0x16, 0xC1, 0x26,  // %......&
                /* 01B8 */  0x9C, 0xC0, 0xF2, 0x07, 0x81, 0x1A, 0x99, 0xA1,  // ........
                /* 01C0 */  0x3D, 0xD4, 0xD3, 0x7A, 0x1B, 0xF0, 0x39, 0xC0,  // =..z..9.
                /* 01C8 */  0x04, 0x16, 0x0B, 0x21, 0x05, 0x10, 0x1A, 0x0F,  // ...!....
                /* 01D0 */  0xF8, 0x15, 0x9F, 0x3C, 0xC8, 0x95, 0xC1, 0xF3,  // ...<....
                /* 01D8 */  0xF5, 0x21, 0x42, 0x47, 0x0B, 0x19, 0x59, 0x85,  // .!BG..Y.
                /* 01E0 */  0xC7, 0x43, 0xCF, 0x0B, 0xBE, 0x24, 0x60, 0x6E,  // .C...$`n
                /* 01E8 */  0x0C, 0x1E, 0xBA, 0x87, 0xF4, 0x7C, 0x60, 0x49,  // .....|`I
                /* 01F0 */  0xB0, 0xFA, 0xFF, 0x9F, 0x02, 0x2C, 0x6A, 0xE4,  // .....,j.
                /* 01F8 */  0xF4, 0x54, 0xC1, 0x0F, 0x14, 0x0C, 0x36, 0x68,  // .T....6h
                /* 0200 */  0x58, 0x0F, 0xE6, 0x9C, 0xFC, 0x69, 0xF1, 0xD8,  // X....i..
                /* 0208 */  0xE0, 0x03, 0xE2, 0xBD, 0xCF, 0x9A, 0x8C, 0xE0,  // ........
                /* 0210 */  0x64, 0x0D, 0xE8, 0xC3, 0x03, 0xEE, 0x54, 0x01,  // d.....T.
                /* 0218 */  0x5E, 0x98, 0xC3, 0xE2, 0xF7, 0x0A, 0xD8, 0x87,  // ^.......
                /* 0220 */  0x05, 0x8F, 0x92, 0x8F, 0xC6, 0x43, 0x38, 0x8B,  // .....C8.
                /* 0228 */  0xA7, 0x01, 0xC3, 0x18, 0xFD, 0x29, 0x00, 0xF6,  // .....)..
                /* 0230 */  0x0D, 0xC3, 0x63, 0xF1, 0x49, 0xC7, 0x47, 0x1D,  // ..c.I.G.
                /* 0238 */  0x70, 0x0C, 0x8E, 0xDF, 0x61, 0x70, 0x47, 0x1D,  // p...apG.
                /* 0240 */  0xE0, 0x31, 0xD7, 0x47, 0x1D, 0xB0, 0x9D, 0x0F,  // .1.G....
                /* 0248 */  0xD8, 0x31, 0x07, 0x4C, 0xFF, 0xFF, 0x63, 0x0E,  // .1.L..c.
                /* 0250 */  0xE0, 0x15, 0x3D, 0x58, 0xAC, 0x77, 0x86, 0xC7,  // ..=X.w..
                /* 0258 */  0x1C, 0x60, 0x74, 0x16, 0x38, 0xA5, 0xB3, 0x79,  // .`t.8..y
                /* 0260 */  0xC3, 0x89, 0x70, 0x12, 0x2F, 0x38, 0x0F, 0x36,  // ..p./8.6
                /* 0268 */  0xAF, 0x37, 0xEF, 0x39, 0x0F, 0x3A, 0x9E, 0xD8,  // .7.9.:..
                /* 0270 */  0x63, 0x8E, 0xB1, 0x82, 0x84, 0xB2, 0xC2, 0x31,  // c......1
                /* 0278 */  0xC8, 0x19, 0xAA, 0x50, 0x42, 0x3C, 0xEE, 0xF8,  // ...PB<..
                /* 0280 */  0xAA, 0x60, 0x24, 0x23, 0x9F, 0xCA, 0x5B, 0x8E,  // .`$#..[.
                /* 0288 */  0xB1, 0x1E, 0x73, 0x00, 0x0B, 0xFF, 0xFF, 0x63,  // ..s....c
                /* 0290 */  0x0E, 0xC0, 0xB5, 0x53, 0x05, 0xDC, 0x63, 0x0E,  // ...S..c.
                /* 0298 */  0xF0, 0xFE, 0xFF, 0x1F, 0x73, 0xE0, 0x0E, 0x8E,  // ....s...
                /* 02A0 */  0x1D, 0x10, 0x81, 0xD5, 0x31, 0x07, 0xB8, 0x88,  // ....1...
                /* 02A8 */  0xB0, 0x00, 0xC2, 0x82, 0xBC, 0x11, 0x14, 0xFB,  // ........
                /* 02B0 */  0x98, 0x43, 0x61, 0x7C, 0xCC, 0x01, 0x5C, 0x4D,  // .Ca|..\M
                /* 02B8 */  0xD2, 0xE7, 0x2E, 0xB0, 0x5C, 0x59, 0x8C, 0xF5,  // ....\Y..
                /* 02C0 */  0xD4, 0xF0, 0x32, 0x65, 0xA4, 0x30, 0x9E, 0x9B,  // ..2e.0..
                /* 02C8 */  0x8F, 0x3A, 0xE0, 0xFD, 0xFF, 0x1F, 0x75, 0x60,  // .:....u`
                /* 02D0 */  0xA2, 0x3E, 0x14, 0xFA, 0x88, 0xF3, 0x74, 0xF3,  // .>....t.
                /* 02D8 */  0x8E, 0x60, 0x9C, 0x07, 0x44, 0x76, 0xD5, 0x89,  // .`..Dv..
                /* 02E0 */  0xFF, 0xA8, 0x63, 0x94, 0x57, 0x1C, 0xA3, 0xC4,  // ..c.W...
                /* 02E8 */  0x79, 0x53, 0xF4, 0x29, 0x91, 0x81, 0x1C, 0xA4,  // yS.)....
                /* 02F0 */  0x71, 0xC3, 0xC5, 0x0A, 0x11, 0x3C, 0x46, 0xF0,  // q....<F.
                /* 02F8 */  0x18, 0x8F, 0x3A, 0x4C, 0xEE, 0x51, 0x07, 0xA0,  // ..:L.Q..
                /* 0300 */  0x89, 0xE0, 0xA3, 0x0E, 0xA8, 0xA4, 0x1D, 0x75,  // .......u
                /* 0308 */  0x80, 0xC2, 0xFF, 0xFF, 0xA8, 0x03, 0xAE, 0x61,  // .......a
                /* 0310 */  0xFB, 0x64, 0x01, 0x7C, 0x8E, 0x3B, 0xC0, 0xF7,  // .d.|.;..
                /* 0318 */  0x80, 0x83, 0x3B, 0x24, 0xC2, 0x1C, 0x20, 0x9B,  // ..;$.. .
                /* 0320 */  0x1F, 0xF6, 0xC8, 0x03, 0x18, 0x8A, 0x6A, 0xE2,  // ......j.
                /* 0328 */  0x94, 0x88, 0x91, 0xB5, 0x76, 0x7A, 0x50, 0x84,  // ....vzP.
                /* 0330 */  0xFF, 0xFF, 0x3F, 0x5E, 0x03, 0x26, 0x31, 0x9E,  // ..?^.&1.
                /* 0338 */  0x3B, 0x2C, 0x1A, 0x50, 0x23, 0x78, 0x86, 0x80,  // ;,.P#x..
                /* 0340 */  0x7D, 0xBC, 0x86, 0x7F, 0xA5, 0xF6, 0x35, 0xD1,  // }.....5.
                /* 0348 */  0x93, 0x0A, 0x72, 0x28, 0x4F, 0x3A, 0x86, 0x79,  // ..r(O:.y
                /* 0350 */  0xDC, 0x79, 0xB2, 0xF6, 0xD0, 0x1E, 0x7A, 0x82,  // .y....z.
                /* 0358 */  0x3C, 0xE5, 0x3C, 0x5E, 0x1B, 0xE9, 0xC1, 0xDA,  // <.<^....
                /* 0360 */  0x28, 0x06, 0x39, 0xB3, 0xA8, 0xD1, 0xA2, 0x18,  // (.9.....
                /* 0368 */  0x2F, 0x48, 0xB4, 0x88, 0x47, 0xF0, 0xB8, 0xC3,  // /H..G...
                /* 0370 */  0x62, 0x1D, 0x08, 0xF4, 0xA9, 0xF2, 0x71, 0x07,  // b.....q.
                /* 0378 */  0xF0, 0xF2, 0xFF, 0x3F, 0xEE, 0x00, 0x1E, 0xE4,  // ...?....
                /* 0380 */  0x1D, 0x85, 0x41, 0x35, 0x2A, 0x7E, 0x65, 0x60,  // ..A5*~e`
                /* 0388 */  0x67, 0x12, 0x60, 0x12, 0xE5, 0xE9, 0xA1, 0x71,  // g.`....q
                /* 0390 */  0x5A, 0xE3, 0x73, 0x40, 0x36, 0x4E, 0x44, 0x74,  // Z.s@6NDt
                /* 0398 */  0x10, 0x56, 0x42, 0xA5, 0x33, 0x9F, 0x31, 0xDF,  // .VB.3.1.
                /* 03A0 */  0x1A, 0xE2, 0x3E, 0x1B, 0x78, 0x3E, 0x98, 0xF4,  // ..>.x>..
                /* 03A8 */  0x07, 0x05, 0x9D, 0x83, 0x0C, 0xEE, 0xDC, 0x24,  // .......$
                /* 03B0 */  0xCA, 0x3D, 0x20, 0x0A, 0xEF, 0xA4, 0xC7, 0x21,  // .= ....!
                /* 03B8 */  0x0A, 0x62, 0x40, 0xC7, 0x80, 0x90, 0x95, 0x83,  // .b@.....
                /* 03C0 */  0x00, 0xFA, 0x3A, 0xE1, 0x23, 0x83, 0xCF, 0x19,  // ..:.#...
                /* 03C8 */  0x51, 0xCE, 0xC8, 0x07, 0x8C, 0xC7, 0x05, 0x36,  // Q......6
                /* 03D0 */  0x1C, 0x1F, 0x04, 0xF8, 0x01, 0xC5, 0x37, 0x03,  // ......7.
                /* 03D8 */  0x63, 0x5B, 0xCD, 0x91, 0x07, 0x05, 0x66, 0xF8,  // c[....f.
                /* 03E0 */  0x17, 0x18, 0x13, 0xF8, 0x9E, 0xF1, 0xC6, 0x03,  // ........
                /* 03E8 */  0x96, 0x9B, 0x99, 0x09, 0xEA, 0xC3, 0xA5, 0xFF,  // ........
                /* 03F0 */  0xFF, 0xC3, 0x00, 0x5C, 0x20, 0x4F, 0xDF, 0x27,  // ...\ O.'
                /* 03F8 */  0x9A, 0x47, 0x00, 0x36, 0x86, 0x87, 0x1A, 0xA3,  // .G.6....
                /* 0400 */  0x19, 0x9D, 0xC7, 0x9F, 0x2B, 0x2A, 0xF0, 0x5C,  // ....+*.\
                /* 0408 */  0x29, 0x88, 0xE7, 0xEA, 0x30, 0x10, 0x72, 0x32,  // )...0.r2
                /* 0410 */  0x57, 0xD4, 0xED, 0xC5, 0x23, 0xB2, 0xCF, 0xA9,  // W...#...
                /* 0418 */  0x92, 0xC1, 0x72, 0x82, 0x28, 0xAF, 0x1A, 0xB0,  // ..r.(...
                /* 0420 */  0x0E, 0x02, 0x11, 0xD9, 0x3C, 0x7C, 0x5F, 0xC2,  // ....<|_.
                /* 0428 */  0xCF, 0x96, 0x0F, 0xC6, 0x57, 0x09, 0xF8, 0xC3,  // ....W...
                /* 0430 */  0xE5, 0xA7, 0x92, 0x77, 0x93, 0x04, 0x16, 0x38,  // ...w...8
                /* 0438 */  0x5D, 0x90, 0xC3, 0x63, 0x04, 0xAD, 0x47, 0xCF,  // ]..c..G.
                /* 0440 */  0x49, 0xDF, 0xA7, 0x3C, 0x2E, 0x7E, 0x3B, 0xF0,  // I..<.~;.
                /* 0448 */  0x8D, 0x87, 0xDD, 0x69, 0x70, 0x17, 0x32, 0x0C,  // ...ip.2.
                /* 0450 */  0xAC, 0x47, 0xCA, 0x61, 0x8D, 0x16, 0xF6, 0x80,  // .G.a....
                /* 0458 */  0xDF, 0x38, 0x7C, 0x5C, 0xF1, 0xCC, 0x8C, 0x11,  // .8|\....
                /* 0460 */  0xD6, 0xF7, 0x14, 0x70, 0xDC, 0xCD, 0xE0, 0x07,  // ...p....
                /* 0468 */  0xB8, 0x02, 0x81, 0xE4, 0xFF, 0x7F, 0x05, 0x82,  // ........
                /* 0470 */  0x73, 0xD6, 0x60, 0xD7, 0x32, 0x83, 0xBC, 0x28,  // s.`.2..(
                /* 0478 */  0xF9, 0x5C, 0x63, 0xF4, 0x40, 0xEF, 0x1B, 0xF8,  // .\c.@...
                /* 0480 */  0x9B, 0x10, 0xEC, 0x1B, 0x08, 0x9C, 0xA1, 0xF8,  // ........
                /* 0488 */  0x06, 0x02, 0x1C, 0x8E, 0x11, 0xB8, 0x1B, 0x08,  // ........
                /* 0490 */  0xB0, 0xBE, 0x43, 0xB0, 0x1B, 0x08, 0xB0, 0x3C,  // ..C....<
                /* 0498 */  0xBD, 0xE0, 0x6E, 0x20, 0xC0, 0xE7, 0xFF, 0x7F,  // ..n ....
                /* 04A0 */  0x03, 0x01, 0xDF, 0xFD, 0x85, 0xDD, 0x40, 0x80,  // ......@.
                /* 04A8 */  0xF9, 0xA8, 0x7D, 0x03, 0x01, 0x2C, 0x9D, 0x35,  // ..}..,.5
                /* 04B0 */  0xD8, 0x0D, 0x04, 0xFC, 0x02, 0x54, 0x1C, 0xB2,  // .....T..
                /* 04B8 */  0x31, 0x22, 0x17, 0x4E, 0xCF, 0xD9, 0xC0, 0xE5,  // 1".N....
                /* 04C0 */  0xFF, 0x7F, 0xCE, 0x06, 0x6C, 0x9D, 0x14, 0x81,  // ....l...
                /* 04C8 */  0xC7, 0x45, 0xD1, 0x77, 0x43, 0xDF, 0x11, 0x7D,  // .E.wC..}
                /* 04D0 */  0x37, 0x7C, 0xBF, 0x36, 0x46, 0xF8, 0x58, 0x3E,  // 7|.6F.X>
                /* 04D8 */  0x62, 0x33, 0x94, 0x68, 0xAF, 0x89, 0x46, 0x0B,  // b3.h..F.
                /* 04E0 */  0x71, 0x84, 0xF1, 0x3C, 0xBA, 0x97, 0x95, 0x60,  // q..<...`
                /* 04E8 */  0xCF, 0x07, 0xD1, 0x02, 0x86, 0x78, 0xD1, 0x36,  // .....x.6
                /* 04F0 */  0x70, 0x8C, 0x27, 0x45, 0x16, 0xEE, 0xA4, 0x08,  // p.'E....
                /* 04F8 */  0xA8, 0xFB, 0xFF, 0x9F, 0x14, 0x81, 0xEB, 0x79,  // .......y
                /* 0500 */  0x18, 0xCC, 0xC7, 0x05, 0xDC, 0x61, 0x11, 0x98,  // .....a..
                /* 0508 */  0x44, 0x3A, 0x2C, 0x52, 0x9D, 0x87, 0x45, 0x40,  // D:,R..E@
                /* 0510 */  0xFD, 0xFF, 0xFF, 0xB0, 0x08, 0x30, 0x45, 0xD4,  // .....0E.
                /* 0518 */  0x61, 0x11, 0xD0, 0x13, 0xE2, 0x26, 0x04, 0xD2,  // a....&..
                /* 0520 */  0xFF, 0xFF, 0x4D, 0x08, 0x77, 0x5C, 0x04, 0x16,  // ..M.w\..
                /* 0528 */  0x77, 0x10, 0x38, 0xC7, 0x45, 0x80, 0x99, 0xFF,  // w.8.E...
                /* 0530 */  0xFF, 0xE3, 0x22, 0xF0, 0xBE, 0x83, 0x80, 0xEF,  // ..".....
                /* 0538 */  0xB8, 0x08, 0x7C, 0xEF, 0x20, 0xC0, 0xE0, 0xC0,  // ..|. ...
                /* 0540 */  0x08, 0x2C, 0x82, 0xFA, 0x38, 0x2D, 0x62, 0xC4,  // .,..8-b.
                /* 0548 */  0x1D, 0x18, 0x81, 0xD2, 0xFF, 0xFF, 0xC0, 0x08,  // ........
                /* 0550 */  0xD8, 0x38, 0x81, 0xF2, 0x2B, 0x8D, 0x01, 0x0F,  // .8..+...
                /* 0558 */  0xFD, 0xED, 0xC0, 0xF7, 0x45, 0x70, 0x1E, 0x18,  // ....Ep..
                /* 0560 */  0xE1, 0x0F, 0xEB, 0x8D, 0x20, 0x44, 0x58, 0x1F,  // .... DX.
                /* 0568 */  0x52, 0xCE, 0xEC, 0x6D, 0xD1, 0x20, 0x2F, 0x8B,  // R..m. /.
                /* 0570 */  0x27, 0x17, 0xE9, 0x81, 0xD1, 0xC7, 0x46, 0x03,  // '.....F.
                /* 0578 */  0x45, 0x89, 0x18, 0xC6, 0xB3, 0x88, 0x72, 0x72,  // E.....rr
                /* 0580 */  0x21, 0xC3, 0x85, 0x08, 0xFC, 0xC8, 0x11, 0x29,  // !......)
                /* 0588 */  0x7C, 0x6C, 0x5F, 0x36, 0x22, 0x3C, 0x30, 0xB2,  // |l_6"<0.
                /* 0590 */  0x50, 0x07, 0x46, 0x40, 0xDD, 0xFF, 0xFF, 0xC0,  // P.F@....
                /* 0598 */  0x08, 0x5C, 0x2F, 0x00, 0xCF, 0x2F, 0x60, 0xB8,  // .\/../`.
                /* 05A0 */  0x0A, 0x84, 0x3D, 0x77, 0xCF, 0xE0, 0x5C, 0x62,  // ..=w..\b
                /* 05A8 */  0x7B, 0x80, 0x0F, 0x8B, 0xC0, 0x24, 0xC2, 0x0A,  // {....$..
                /* 05B0 */  0x35, 0x4C, 0x27, 0x7A, 0xCE, 0xE8, 0x62, 0xC5,  // 5L'z..b.
                /* 05B8 */  0x39, 0xAC, 0xFC, 0x7D, 0xA0, 0xF3, 0x16, 0x3B,  // 9..}...;
                /* 05C0 */  0x2E, 0x9C, 0xE0, 0x8B, 0xD0, 0x29, 0x19, 0xC7,  // .....)..
                /* 05C8 */  0xA3, 0xF6, 0xF0, 0x3D, 0x22, 0x2B, 0x85, 0xD4,  // ...="+..
                /* 05D0 */  0xD5, 0x8A, 0x6B, 0x84, 0x91, 0xC2, 0xE7, 0x81,  // ..k.....
                /* 05D8 */  0xCE, 0x47, 0x5C, 0x13, 0x8C, 0xE0, 0x0C, 0xE2,  // .G\.....
                /* 05E0 */  0x63, 0x89, 0x93, 0x40, 0xC8, 0xC8, 0x49, 0x00,  // c..@..I.
                /* 05E8 */  0x35, 0x3A, 0xDF, 0x56, 0xF0, 0xE3, 0x0B, 0xF4,  // 5:.V....
                /* 05F0 */  0xC8, 0x90, 0xE0, 0xC4, 0x5E, 0xAE, 0xC0, 0x7B,  // ....^..{
                /* 05F8 */  0xE7, 0xF1, 0xF5, 0x08, 0x1C, 0xB7, 0x01, 0x07,  // ........
                /* 0600 */  0x99, 0x14, 0x5A, 0x0B, 0x88, 0x20, 0x0F, 0xCA,  // ..Z.. ..
                /* 0608 */  0xFF, 0xFF, 0xA3, 0xC4, 0x73, 0x28, 0x76, 0x50,  // ....s(vP
                /* 0610 */  0x60, 0x3D, 0xEB, 0xF1, 0x41, 0x81, 0xE7, 0x8C,  // `=..A...
                /* 0618 */  0xE6, 0x41, 0xE1, 0x94, 0x5C, 0x04, 0x7C, 0x6B,  // .A..\.|k
                /* 0620 */  0x21, 0x97, 0x14, 0x1F, 0x29, 0x3C, 0x26, 0x30,  // !...)<&0
                /* 0628 */  0x5F, 0x9D, 0xF8, 0x98, 0xC0, 0x93, 0x62, 0x4C,  // _.....bL
                /* 0630 */  0xE8, 0xBB, 0x0F, 0xBB, 0x51, 0xB0, 0x63, 0xC5,  // ....Q.c.
                /* 0638 */  0x53, 0x92, 0xA7, 0x04, 0x5E, 0x24, 0x4F, 0x09,  // S...^$O.
                /* 0640 */  0x5C, 0xA1, 0xA6, 0xE4, 0x63, 0x05, 0x9D, 0x35,  // \...c..5
                /* 0648 */  0xBF, 0x19, 0xF0, 0x49, 0x71, 0x82, 0x09, 0x20,  // ...Iq.. 
                /* 0650 */  0x74, 0x97, 0xF1, 0x98, 0xE0, 0xDD, 0xD5, 0xF0,  // t.......
                /* 0658 */  0x73, 0x79, 0xEE, 0x78, 0x49, 0xF1, 0x15, 0xDF,  // sy.xI...
                /* 0660 */  0x43, 0x83, 0xF1, 0xFF, 0x1F, 0x9A, 0xE7, 0xE0,  // C.......
                /* 0668 */  0xA1, 0x81, 0xEB, 0xBE, 0x07, 0x2C, 0x5E, 0x0F,  // .....,^.
                /* 0670 */  0xBE, 0x80, 0xF0, 0xC8, 0x27, 0x08, 0x0A, 0xE2,  // ....'...
                /* 0678 */  0x03, 0x82, 0xE3, 0x1C, 0x1F, 0x7D, 0x01, 0x41,  // .....}.A
                /* 0680 */  0x1F, 0x1C, 0x3C, 0xA0, 0xA7, 0x26, 0x0F, 0xE9,  // ..<..&..
                /* 0688 */  0x54, 0xDE, 0x2D, 0x7C, 0xB7, 0x61, 0x17, 0x3E,  // T.-|.a.>
                /* 0690 */  0x70, 0x5F, 0xE8, 0x7C, 0xE1, 0x03, 0xCF, 0x79,  // p_.|...y
                /* 0698 */  0xC9, 0x17, 0x3E, 0xE0, 0x22, 0xE7, 0x10, 0x0B,  // ..>."...
                /* 06A0 */  0x48, 0xF8, 0xFF, 0x5F, 0xF8, 0x60, 0x5E, 0x9D,  // H.._.`^.
                /* 06A8 */  0x7C, 0x3B, 0x03, 0xDB, 0xD1, 0x8C, 0x1F, 0x61,  // |;.....a
                /* 06B0 */  0x31, 0xA7, 0x0B, 0x76, 0xDA, 0x03, 0x1F, 0xC1,  // 1..v....
                /* 06B8 */  0xB4, 0xEF, 0x0A, 0x5D, 0x8C, 0x70, 0xA9, 0x96,  // ...].p..
                /* 06C0 */  0xAE, 0x43, 0x20, 0xBB, 0x18, 0xC1, 0x4C, 0x01,  // .C ...L.
                /* 06C8 */  0xA9, 0x8B, 0x11, 0xD7, 0x0F, 0x23, 0x7D, 0x17,  // .....#}.
                /* 06D0 */  0x23, 0x94, 0xA2, 0x8B, 0x11, 0x05, 0xF1, 0xC5,  // #.......
                /* 06D8 */  0x08, 0x60, 0xC3, 0xFF, 0xFF, 0x62, 0x04, 0x38,  // .`...b.8
                /* 06E0 */  0x3A, 0x93, 0x7A, 0x4C, 0x38, 0x1D, 0xC0, 0xE4,  // :.zL8...
                /* 06E8 */  0x5C, 0x70, 0x42, 0x0F, 0x46, 0xC0, 0x36, 0xD3,  // \pB.F.6.
                /* 06F0 */  0xC1, 0x08, 0x0D, 0xEC, 0x93, 0x01, 0x1F, 0x14,  // ........
                /* 06F8 */  0xBB, 0x17, 0x81, 0xF9, 0x16, 0xE3, 0x7B, 0x11,  // ......{.
                /* 0700 */  0x70, 0xFE, 0xFF, 0xDF, 0x8B, 0xE0, 0xC9, 0x7B,  // p......{
                /* 0708 */  0x19, 0xE8, 0xFE, 0xC1, 0x05, 0xC1, 0xE8, 0x00,  // ........
                /* 0710 */  0x61, 0x10, 0xCF, 0xC9, 0xF7, 0x22, 0xC0, 0x4D,  // a....".M
                /* 0718 */  0x94, 0x71, 0xA1, 0xEF, 0x68, 0x70, 0x46, 0x05,  // .q..hpF.
                /* 0720 */  0xEE, 0x63, 0x81, 0x47, 0x05, 0xBE, 0x63, 0x1A,  // .c.G..c.
                /* 0728 */  0xFE, 0x2E, 0xE4, 0x43, 0x1A, 0xE6, 0xA0, 0xC1,  // ...C....
                /* 0730 */  0x8E, 0x01, 0x1E, 0x14, 0xB8, 0x6E, 0x69, 0xB8,  // .....ni.
                /* 0738 */  0xB1, 0xC1, 0xF3, 0x70, 0x7D, 0x00, 0xC5, 0xFF,  // ...p}...
                /* 0740 */  0xFF, 0xFA, 0x80, 0xBB, 0x66, 0x01, 0xEF, 0x73,  // ....f..s
                /* 0748 */  0x3A, 0xF0, 0xBD, 0x66, 0x81, 0xF9, 0x94, 0x8E,  // :..f....
                /* 0750 */  0xB9, 0x66, 0x81, 0x57, 0x96, 0x93, 0xE1, 0xB0,  // .f.W....
                /* 0758 */  0xD3, 0xB3, 0xE5, 0xAE, 0x9B, 0xC2, 0xF8, 0x90,  // ........
                /* 0760 */  0x0E, 0xBC, 0xFF, 0xFF, 0x87, 0x74, 0x70, 0x9E,  // .....tp.
                /* 0768 */  0x9B, 0x7C, 0x00, 0x00, 0xC7, 0xF1, 0xE1, 0x0C,  // .|......
                /* 0770 */  0x4E, 0x21, 0xDA, 0xDB, 0xBE, 0x67, 0xFE, 0xFA,  // N!...g..
                /* 0778 */  0xE4, 0x21, 0x45, 0x09, 0x18, 0x2F, 0x46, 0xDC,  // .!E../F.
                /* 0780 */  0x90, 0x3E, 0x57, 0xFB, 0xE2, 0x6C, 0xA0, 0x78,  // .>W..l.x
                /* 0788 */  0x87, 0x15, 0x36, 0xCE, 0x7B, 0x80, 0x8F, 0xCF,  // ..6.{...
                /* 0790 */  0xEF, 0x01, 0x3E, 0x1C, 0x18, 0xE8, 0x4C, 0x5F,  // ..>...L_
                /* 0798 */  0x02, 0x60, 0x1F, 0xD5, 0x61, 0x7B, 0x9B, 0x9C,  // .`..a{..
                /* 07A0 */  0x20, 0x22, 0x04, 0x7E, 0xB3, 0x38, 0xA7, 0xD6,  //  ".~.8..
                /* 07A8 */  0xAE, 0xE8, 0x1A, 0xE1, 0x21, 0x3E, 0xC1, 0x45,  // ....!>.E
                /* 07B0 */  0x7F, 0x54, 0xF7, 0x50, 0x1E, 0x9F, 0xA2, 0x46,  // .T.P...F
                /* 07B8 */  0x39, 0x85, 0x30, 0x2F, 0xE9, 0x01, 0xA3, 0x3C,  // 9.0/...<
                /* 07C0 */  0x9C, 0x44, 0x8B, 0x1A, 0xF8, 0x2D, 0x21, 0xB6,  // .D...-!.
                /* 07C8 */  0x41, 0x03, 0xBD, 0xA9, 0x7B, 0x04, 0x8F, 0xEA,  // A...{...
                /* 07D0 */  0x2C, 0xDA, 0x51, 0x1D, 0x50, 0xFA, 0xFF, 0x3F,  // ,.Q.P..?
                /* 07D8 */  0xAA, 0x03, 0xA7, 0xFB, 0x8C, 0x8F, 0x30, 0xF0,  // ......0.
                /* 07E0 */  0xCF, 0x01, 0x4F, 0x0A, 0xB8, 0xCB, 0x93, 0xEF,  // ..O.....
                /* 07E8 */  0x0C, 0x18, 0x02, 0x9F, 0xD6, 0x81, 0x47, 0x3C,  // ......G<
                /* 07F0 */  0x1F, 0xE7, 0x01, 0x16, 0x9B, 0x42, 0x97, 0x48,  // .....B.H
                /* 07F8 */  0x7E, 0x96, 0x71, 0xC8, 0xE5, 0xEA, 0x12, 0xC9,  // ~.q.....
                /* 0800 */  0xA7, 0xC4, 0x2E, 0x08, 0x86, 0x3F, 0x84, 0x20,  // .....?. 
                /* 0808 */  0x1E, 0x16, 0x9B, 0x82, 0xCF, 0x08, 0x26, 0x70,  // ......&p
                /* 0810 */  0x9C, 0x13, 0x17, 0x1D, 0xBC, 0x83, 0x50, 0x28,  // ......P(
                /* 0818 */  0xCA, 0xFD, 0x16, 0x25, 0x1E, 0x46, 0x70, 0x06,  // ...%.Fp.
                /* 0820 */  0xF1, 0x58, 0x1C, 0x08, 0x42, 0x3F, 0x15, 0x0A,  // .X..B?..
                /* 0828 */  0x49, 0xCE, 0x27, 0x9E, 0xD4, 0xC9, 0x62, 0xE7,  // I.'...b.
                /* 0830 */  0x82, 0x9B, 0x9D, 0x0F, 0x22, 0x09, 0x9E, 0x7A,  // ...."..z
                /* 0838 */  0x5E, 0x25, 0xC1, 0x7B, 0xE7, 0x78, 0x53, 0x02,  // ^%.{.xS.
                /* 0840 */  0xCB, 0x4D, 0xE3, 0x95, 0xE3, 0x7D, 0x93, 0x0D,  // .M...}..
                /* 0848 */  0x8C, 0xFF, 0xFF, 0xCF, 0x92, 0x7C, 0x60, 0xF8,  // .....|`.
                /* 0850 */  0xA3, 0xC0, 0x71, 0x9D, 0x14, 0x78, 0xC7, 0xEC,  // ..q..x..
                /* 0858 */  0x49, 0x81, 0xED, 0x74, 0x07, 0x2C, 0xC2, 0xA3,  // I..t.,..
                /* 0860 */  0x53, 0x18, 0xC7, 0x1D, 0x12, 0x05, 0xF1, 0xE9,  // S.......
                /* 0868 */  0xC0, 0xC7, 0x36, 0x8F, 0x16, 0x37, 0x13, 0x8F,  // ..6..7..
                /* 0870 */  0xE8, 0xED, 0x0E, 0x77, 0x6C, 0x03, 0xFB, 0x48,  // ...wl..H
                /* 0878 */  0x7C, 0x6C, 0x03, 0xCF, 0x68, 0xD9, 0x61, 0x0C,  // |l..h.a.
                /* 0880 */  0x98, 0x08, 0x39, 0x8C, 0x81, 0x6E, 0xC8, 0x3E,  // ..9..n.>
                /* 0888 */  0x8C, 0xF1, 0xFF, 0xFF, 0x61, 0x0C, 0x38, 0x1E,  // ....a.8.
                /* 0890 */  0x03, 0x7C, 0x78, 0x02, 0xC7, 0x3D, 0x8C, 0x1F,  // .|x..=..
                /* 0898 */  0x98, 0xB0, 0x40, 0xCF, 0x1E, 0x1C, 0xE7, 0xC9,  // ..@.....
                /* 08A0 */  0xC9, 0xC0, 0x1C, 0x8C, 0x5D, 0x4D, 0xB0, 0xB7,  // ....]M..
                /* 08A8 */  0x09, 0x8F, 0x48, 0xF7, 0x67, 0x94, 0x3C, 0x08,  // ..H.g.<.
                /* 08B0 */  0x85, 0x7E, 0x1D, 0xE9, 0xAC, 0x82, 0x9D, 0x06,  // .~......
                /* 08B8 */  0x3B, 0xC9, 0x1C, 0xA2, 0xAF, 0x2E, 0x9E, 0xF7,  // ;.......
                /* 08C0 */  0x0B, 0x0D, 0xF6, 0x20, 0xF0, 0x8A, 0xE4, 0x6B,  // ... ...k
                /* 08C8 */  0x83, 0xAF, 0xD1, 0x8E, 0x35, 0x00, 0x9D, 0x57,  // ....5..W
                /* 08D0 */  0x78, 0x20, 0x18, 0x49, 0x3B, 0x77, 0xA2, 0xC4,  // x .I;w..
                /* 08D8 */  0x1C, 0x5B, 0x28, 0x88, 0xCF, 0x4D, 0x3E, 0x22,  // .[(..M>"
                /* 08E0 */  0xC3, 0x39, 0x87, 0xC0, 0x3A, 0x46, 0x03, 0xCB,  // .9..:F..
                /* 08E8 */  0x30, 0x83, 0x42, 0xEB, 0x01, 0x24, 0xB7, 0x3B,  // 0.B..$.;
                /* 08F0 */  0xCC, 0xFF, 0xFF, 0x0C, 0xC0, 0x8C, 0x02, 0x69,  // .......i
                /* 08F8 */  0x5C, 0xEC, 0x20, 0x0D, 0x3C, 0x53, 0x9D, 0x3A,  // \. .<S.:
                /* 0900 */  0xD1, 0x87, 0x3B, 0x1F, 0x4A, 0xD8, 0x45, 0x1A,  // ..;.J.E.
                /* 0908 */  0x7B, 0x08, 0x06, 0xEF, 0xD9, 0xC0, 0xF7, 0x69,  // {......i
                /* 0910 */  0x60, 0x71, 0xAE, 0x01, 0x16, 0xA2, 0x4F, 0x0F,  // `q....O.
                /* 0918 */  0x28, 0x99, 0xA7, 0x07, 0x0A, 0xE2, 0x43, 0x30,  // (.....C0
                /* 0920 */  0x3F, 0x19, 0xE0, 0x46, 0xE9, 0x93, 0x01, 0x8C,  // ?..F....
                /* 0928 */  0xB9, 0x04, 0x79, 0x53, 0xF3, 0x69, 0x8F, 0x1D,  // ..yS.i..
                /* 0930 */  0x6D, 0xC0, 0x7B, 0xDA, 0xC6, 0xFF, 0xFF, 0xE7,  // m.{.....
                /* 0938 */  0x0B, 0x3F, 0xD6, 0x69, 0x1B, 0xCA, 0xF1, 0x07,  // .?.i....
                /* 0940 */  0x7F, 0xC0, 0x05, 0xF7, 0x9D, 0xC0, 0x63, 0x83,  // ......c.
                /* 0948 */  0x77, 0xDD, 0x06, 0x5F, 0xBC, 0xB1, 0xA1, 0x59,  // w.._...Y
                /* 0950 */  0x7C, 0x04, 0x80, 0x71, 0x4E, 0xC1, 0x8E, 0x0F,  // |..qN...
                /* 0958 */  0xDC, 0xA7, 0x21, 0x9F, 0xAF, 0xE1, 0x9E, 0x87,  // ..!.....
                /* 0960 */  0x81, 0xF3, 0x99, 0x09, 0x7C, 0xFF, 0xFF, 0xE3,  // ....|...
                /* 0968 */  0x88, 0xCF, 0x4C, 0x80, 0x9B, 0xEB, 0x0F, 0x16,  // ..L.....
                /* 0970 */  0xE8, 0xE9, 0x08, 0x87, 0xF3, 0x76, 0x84, 0x05,  // .....v..
                /* 0978 */  0x7A, 0x4E, 0xC0, 0x9D, 0x99, 0x58, 0xBC, 0x35,  // zN...X.5
                /* 0980 */  0xEB, 0xCC, 0xC4, 0x0F, 0x66, 0x0E, 0xF5, 0x56,  // ....f..V
                /* 0988 */  0x10, 0xE6, 0x33, 0x13, 0xB8, 0x8E, 0x89, 0x3A,  // ..3....:
                /* 0990 */  0x30, 0xA1, 0x64, 0xC3, 0x28, 0xE8, 0x19, 0x05,  // 0.d.(...
                /* 0998 */  0x15, 0xED, 0x8C, 0x42, 0x41, 0x7C, 0x1C, 0xF0,  // ...BA|..
                /* 09A0 */  0x81, 0x09, 0xF0, 0x91, 0xE5, 0x1C, 0x03, 0xFD,  // ........
                /* 09A8 */  0xFF, 0x7F, 0x18, 0x60, 0xF8, 0x8F, 0xC6, 0x3E,  // ...`...>
                /* 09B0 */  0xD4, 0xBE, 0x2F, 0x01, 0xCF, 0x34, 0xB3, 0x42,  // ../..4.B
                /* 09B8 */  0x5F, 0x4D, 0xC0, 0x31, 0x2D, 0xB0, 0xDE, 0x95,  // _M.1-...
                /* 09C0 */  0xC0, 0x97, 0xEB, 0x04, 0x83, 0x9E, 0x8B, 0x8F,  // ........
                /* 09C8 */  0x55, 0x30, 0xAE, 0x73, 0x3E, 0x57, 0x81, 0xF9,  // U0.s>W..
                /* 09D0 */  0xE8, 0xE0, 0xB9, 0xC1, 0xBA, 0x17, 0x81, 0xEF,  // ........
                /* 09D8 */  0x5C, 0x05, 0x0C, 0xFE, 0xFF, 0x04, 0x0E, 0x73,  // \......s
                /* 09E0 */  0xC6, 0x45, 0xC9, 0x3F, 0xE3, 0x52, 0x10, 0xCF,  // .E.?.R..
                /* 09E8 */  0xC9, 0xC7, 0x4F, 0x2B, 0x39, 0x7E, 0x02, 0xB5,  // ..O+9~..
                /* 09F0 */  0x03, 0x80, 0x8F, 0x9F, 0xE0, 0x39, 0x97, 0x3F,  // .....9.?
                /* 09F8 */  0x94, 0x27, 0xF0, 0x41, 0xD8, 0xA3, 0xC2, 0x9D,  // .'.A....
                /* 0A00 */  0x32, 0xD8, 0xC9, 0x00, 0xEF, 0x73, 0x3E, 0x74,  // 2....s>t
                /* 0A08 */  0x60, 0x60, 0x3F, 0x1B, 0x78, 0x60, 0xE0, 0x3B,  // ``?.x`.;
                /* 0A10 */  0x23, 0x01, 0x8F, 0x27, 0x81, 0xCF, 0x48, 0xE0,  // #..'..H.
                /* 0A18 */  0xB2, 0x72, 0x46, 0x02, 0xE5, 0xFF, 0xFF, 0x8C,  // .rF.....
                /* 0A20 */  0x04, 0x6E, 0xC1, 0x67, 0x24, 0xD0, 0x1C, 0x86,  // .n.g$...
                /* 0A28 */  0xD8, 0x19, 0x09, 0x6C, 0xF7, 0x23, 0x6B, 0x5B,  // ...l.#k[
                /* 0A30 */  0x74, 0x02, 0x12, 0x64, 0xC8, 0x92, 0xB8, 0x60,  // t..d...`
                /* 0A38 */  0x0A, 0xE3, 0xC3, 0x87, 0xCF, 0x08, 0xF8, 0x51,  // .......Q
                /* 0A40 */  0x1F, 0xF4, 0xB1, 0x1E, 0x16, 0x3B, 0x8C, 0x1B,  // .....;..
                /* 0A48 */  0x8E, 0x1F, 0x08, 0x3C, 0xAC, 0x73, 0x39, 0x8D,  // ...<.s9.
                /* 0A50 */  0x53, 0x39, 0x7B, 0xCF, 0x2B, 0x24, 0x93, 0x36,  // S9{.+$.6
                /* 0A58 */  0x3E, 0xD4, 0x89, 0xCB, 0x67, 0x82, 0xC3, 0xF1,  // >...g...
                /* 0A60 */  0xF5, 0x21, 0xE2, 0x3B, 0xB9, 0x61, 0x12, 0xF8,  // .!.;.a..
                /* 0A68 */  0x28, 0xC0, 0xD0, 0x38, 0x34, 0x76, 0x18, 0xBE,  // (..84v..
                /* 0A70 */  0x23, 0x04, 0x3B, 0x88, 0x13, 0xF4, 0xC9, 0x9D,  // #.;.....
                /* 0A78 */  0x4D, 0xE8, 0x54, 0x9F, 0xE8, 0xDF, 0x1D, 0x9E,  // M.T.....
                /* 0A80 */  0xD1, 0xA3, 0xC6, 0x68, 0x0E, 0x8A, 0x1C, 0x24,  // ...h...$
                /* 0A88 */  0x3C, 0x72, 0x70, 0xCC, 0xF7, 0x0C, 0x9E, 0x88,  // <rp.....
                /* 0A90 */  0x8C, 0x70, 0xCA, 0x0F, 0x3B, 0xBE, 0x19, 0x18,  // .p..;...
                /* 0A98 */  0xE5, 0x6D, 0x97, 0x21, 0x19, 0xD5, 0x88, 0xEF,  // .m.!....
                /* 0AA0 */  0x03, 0x1E, 0xE3, 0x93, 0x42, 0xA4, 0x5A, 0x67,  // ....B.Zg
                /* 0AA8 */  0x46, 0x40, 0x9F, 0x79, 0xF9, 0x25, 0xFA, 0xE4,  // F@.y.%..
                /* 0AB0 */  0x5F, 0x5A, 0x5E, 0x28, 0x12, 0xF8, 0x74, 0xE5,  // _Z^(..t.
                /* 0AB8 */  0xD1, 0xF0, 0xE3, 0x81, 0x3D, 0x5F, 0x2C, 0xC8,  // ....=_,.
                /* 0AC0 */  0x31, 0x81, 0xB9, 0xBF, 0x09, 0xE9, 0x2A, 0x11,  // 1.....*.
                /* 0AC8 */  0xF4, 0x90, 0xDE, 0x09, 0x22, 0xC4, 0xF8, 0xFF,  // ...."...
                /* 0AD0 */  0xBF, 0x4F, 0xB4, 0x75, 0xA8, 0xD6, 0xDC, 0x22,  // .O.u..."
                /* 0AD8 */  0x1D, 0x5D, 0x94, 0x10, 0x47, 0xD0, 0xDA, 0x0D,  // .]..G...
                /* 0AE0 */  0x43, 0x28, 0x41, 0x7A, 0xC3, 0xD2, 0xAC, 0xA2,  // C(Az....
                /* 0AE8 */  0x04, 0x0A, 0x1A, 0x31, 0x68, 0xA0, 0x78, 0x11,  // ...1h.x.
                /* 0AF0 */  0xC2, 0x1C, 0x40, 0x9C, 0x20, 0x81, 0xDB, 0x1F,  // ..@. ...
                /* 0AF8 */  0x04, 0x89, 0x76, 0x28, 0xD0, 0x09, 0xC5, 0x91,  // ..v(....
                /* 0B00 */  0x46, 0x83, 0x3A, 0x95, 0xF0, 0x9B, 0x8F, 0x2F,  // F.:..../
                /* 0B08 */  0x97, 0x1E, 0xE6, 0x5B, 0x92, 0x07, 0xF7, 0xB8,  // ...[....
                /* 0B10 */  0xF5, 0x44, 0xE0, 0xB1, 0xB3, 0x61, 0xFB, 0x54,  // .D...a.T
                /* 0B18 */  0x02, 0xE7, 0x44, 0x15, 0xF0, 0x8D, 0xD6, 0x07,  // ..D.....
                /* 0B20 */  0x0B, 0x70, 0x1C, 0x4B, 0xE0, 0x8F, 0xC7, 0x47,  // .p.K...G
                /* 0B28 */  0x01, 0xCF, 0xE7, 0x84, 0x9F, 0x73, 0xC8, 0x20,  // .....s. 
                /* 0B30 */  0x50, 0x67, 0x1C, 0x3E, 0xCC, 0x87, 0x29, 0x76,  // Pg.>..)v
                /* 0B38 */  0x7A, 0x31, 0x81, 0x4F, 0x95, 0x7C, 0x3C, 0xE0,  // z1.O.|<.
                /* 0B40 */  0x3F, 0x61, 0x3F, 0x16, 0x3C, 0x62, 0x18, 0xDB,  // ?a?.<b..
                /* 0B48 */  0x07, 0x05, 0xDF, 0x61, 0x7C, 0x6A, 0x81, 0x6F,  // ...a|j.o
                /* 0B50 */  0xF5, 0xA6, 0x80, 0xBC, 0x73, 0xE1, 0x09, 0x1E,  // ....s...
                /* 0B58 */  0x3E, 0x9E, 0x21, 0xB0, 0x23, 0xE0, 0xC7, 0x80,  // >.!.#...
                /* 0B60 */  0x27, 0x18, 0x36, 0x82, 0x97, 0x18, 0x4F, 0xE2,  // '.6...O.
                /* 0B68 */  0x80, 0x7C, 0xBA, 0x30, 0x42, 0xF8, 0x87, 0x8A,  // .|.0B...
                /* 0B70 */  0x87, 0x0C, 0x1F, 0xBC, 0x3D, 0x87, 0x57, 0x11,  // ....=.W.
                /* 0B78 */  0x13, 0x38, 0x2F, 0xF1, 0x11, 0x11, 0x3D, 0xEF,  // .8/...=.
                /* 0B80 */  0x18, 0xFD, 0xFF, 0xCF, 0x7D, 0xFC, 0x48, 0x60,  // ....}.H`
                /* 0B88 */  0x05, 0x4F, 0x04, 0xE1, 0x3F, 0x93, 0x04, 0x3E,  // .O..?..>
                /* 0B90 */  0x9B, 0x47, 0x82, 0x63, 0x78, 0xA8, 0x60, 0xB7,  // .G.cx.`.
                /* 0B98 */  0x95, 0x27, 0x0A, 0x4F, 0xD7, 0x99, 0x1F, 0x07,  // .'.O....
                /* 0BA0 */  0x3A, 0xF2, 0xF1, 0xB4, 0x30, 0x52, 0x75, 0xE4,  // :...0Ru.
                /* 0BA8 */  0x43, 0xE9, 0x38, 0xF2, 0x51, 0x10, 0x1F, 0x1A,  // C.8.Q...
                /* 0BB0 */  0x7C, 0x7C, 0xC2, 0x0F, 0xCE, 0x93, 0xC0, 0x4F,  // ||.....O
                /* 0BB8 */  0xF7, 0xA5, 0xC6, 0xE7, 0x5E, 0x5D, 0xF9, 0x40,  // ....^].@
                /* 0BC0 */  0x7C, 0x73, 0xF1, 0xB5, 0x08, 0x4C, 0xA1, 0xCE,  // |s...L..
                /* 0BC8 */  0x69, 0xE8, 0x81, 0x79, 0xA6, 0x30, 0x6E, 0x69,  // i..y.0ni
                /* 0BD0 */  0xE0, 0x1D, 0x90, 0xEF, 0x7D, 0xC0, 0x22, 0xC6,  // ....}.".
                /* 0BD8 */  0x19, 0x04, 0x0D, 0xCC, 0x06, 0xF6, 0xFC, 0xF1,  // ........
                /* 0BE0 */  0xC0, 0x6F, 0xCC, 0x33, 0xF3, 0xE8, 0xC1, 0x7A,  // .o.3...z
                /* 0BE8 */  0x3D, 0xF0, 0xE8, 0xB1, 0xFF, 0xFF, 0xDB, 0x07,  // =.......
                /* 0BF0 */  0xFC, 0x8B, 0x1C, 0xB0, 0x88, 0x75, 0x91, 0x43,  // .....u.C
                /* 0BF8 */  0x5D, 0x90, 0x3C, 0x69, 0x83, 0x78, 0x62, 0xBE,  // ].<i.xb.
                /* 0C00 */  0x6F, 0xDB, 0xC9, 0xD5, 0x01, 0x7D, 0x90, 0xC3,  // o....}..
                /* 0C08 */  0x4D, 0xD7, 0x27, 0x0C, 0x5F, 0xD1, 0xC0, 0x0F,  // M.'._...
                /* 0C10 */  0xE5, 0x2B, 0x1A, 0x78, 0x2E, 0x3A, 0x0F, 0x41,  // .+.x.:.A
                /* 0C18 */  0x87, 0x47, 0xC6, 0x85, 0x16, 0x75, 0x79, 0x80,  // .G...uy.
                /* 0C20 */  0x32, 0x81, 0x30, 0x27, 0x12, 0xFC, 0x49, 0x24,  // 2.0'..I$
                /* 0C28 */  0xC2, 0x53, 0x91, 0x6F, 0x62, 0xEC, 0xD6, 0x07,  // .S.ob...
                /* 0C30 */  0x4C, 0xC7, 0xC6, 0x6F, 0x73, 0x60, 0xFD, 0xFF,  // L..os`..
                /* 0C38 */  0xDF, 0xE6, 0x60, 0x88, 0xB8, 0xCD, 0x81, 0xEE,  // ..`.....
                /* 0C40 */  0x9E, 0xC1, 0x6F, 0x73, 0xC0, 0xF3, 0xBA, 0xE1,  // ..os....
                /* 0C48 */  0x4B, 0x18, 0x58, 0xAE, 0x38, 0xFC, 0x12, 0xC6,  // K.X.8...
                /* 0C50 */  0xAF, 0x60, 0x06, 0x09, 0x13, 0xF3, 0xCD, 0x91,  // .`......
                /* 0C58 */  0xA1, 0xC6, 0x79, 0x10, 0x63, 0x48, 0x4F, 0x09,  // ..y.cHO.
                /* 0C60 */  0xD8, 0x93, 0x87, 0xF3, 0xDD, 0x7B, 0x50, 0x43,  // .....{PC
                /* 0C68 */  0x71, 0xA6, 0xEB, 0x33, 0xE2, 0xF4, 0x02, 0x23,  // q..3...#
                /* 0C70 */  0xC7, 0xC5, 0x19, 0x95, 0x00, 0x46, 0xFA, 0x97,  // .....F..
                /* 0C78 */  0xAF, 0xC3, 0x06, 0x57, 0x7C, 0xFB, 0xA1, 0x20,  // ...W|.. 
                /* 0C80 */  0xBE, 0x92, 0xF8, 0xBC, 0xEB, 0x6B, 0x0F, 0x4E,  // .....k.N
                /* 0C88 */  0x0F, 0x88, 0xCE, 0x96, 0xC7, 0x7E, 0x08, 0x0F,  // .....~..
                /* 0C90 */  0x3E, 0xC0, 0xF9, 0xFF, 0x7F, 0xF0, 0xC1, 0x9D,  // >.......
                /* 0C98 */  0x77, 0xE1, 0x4C, 0x0B, 0xD6, 0xCD, 0x07, 0x70,  // w.L....p
                /* 0CA0 */  0x70, 0x04, 0x80, 0xF3, 0xCC, 0x3A, 0xF9, 0x23,  // p....:.#
                /* 0CA8 */  0x7B, 0x04, 0x00, 0x36, 0xA7, 0x1F, 0x70, 0x1C,  // {..6..p.
                /* 0CB0 */  0x01, 0xC0, 0x30, 0x2D, 0x58, 0x47, 0x00, 0xE0,  // ..0-XG..
                /* 0CB8 */  0x74, 0x82, 0x06, 0xDB, 0xFF, 0xFF, 0x2E, 0x05,  // t.......
                /* 0CC0 */  0xDC, 0x86, 0xE9, 0xBB, 0x14, 0x70, 0xFE, 0x42,  // .....p.B
                /* 0CC8 */  0xF8, 0x3E, 0xC2, 0x23, 0x5F, 0x23, 0x28, 0x88,  // .>.#_#(.
                /* 0CD0 */  0xAF, 0x08, 0xBE, 0x4B, 0x01, 0xCF, 0xE3, 0x33,  // ...K...3
                /* 0CD8 */  0xB8, 0x2E, 0x48, 0xC0, 0x47, 0xC2, 0x05, 0x09,  // ..H.G...
                /* 0CE0 */  0x54, 0xFF, 0xFF, 0x7B, 0x82, 0x4F, 0xFE, 0xFC,  // T..{.O..
                /* 0CE8 */  0x82, 0x04, 0x3C, 0x51, 0x7D, 0x7C, 0x06, 0xD7,  // ..<Q}|..
                /* 0CF0 */  0xFD, 0x08, 0x9C, 0x5A, 0x7F, 0x14, 0xBA, 0x1F,  // ...Z....
                /* 0CF8 */  0x71, 0x0E, 0x2B, 0x5D, 0xB4, 0x3C, 0x0E, 0x82,  // q.+].<..
                /* 0D00 */  0x5C, 0x70, 0x8F, 0xF3, 0x2D, 0xE7, 0x1D, 0xC0,  // \p..-...
                /* 0D08 */  0x38, 0x9E, 0x8B, 0xCF, 0x13, 0xC6, 0x4F, 0x50,  // 8.....OP
                /* 0D10 */  0x19, 0xA4, 0x6E, 0x48, 0x5C, 0x13, 0x8C, 0xB4,  // ..nH\...
                /* 0D18 */  0x1D, 0x34, 0x51, 0x6A, 0x0E, 0x9A, 0x14, 0xC4,  // .4Qj....
                /* 0D20 */  0x07, 0x4D, 0xC0, 0xE5, 0xFF, 0xFF, 0x7A, 0x04,  // .M....z.
                /* 0D28 */  0x9C, 0xC3, 0x8C, 0x1F, 0x3D, 0x19, 0xDF, 0x09,  // ....=...
                /* 0D30 */  0xF0, 0xE7, 0x67, 0x1F, 0x49, 0x7C, 0x06, 0x7F,  // ..g.I|..
                /* 0D38 */  0x3C, 0x02, 0xA6, 0xF7, 0x19, 0x60, 0x11, 0xFB,  // <....`..
                /* 0D40 */  0xF6, 0x80, 0x0A, 0x7A, 0x7B, 0xA0, 0x20, 0xBE,  // ...z{. .
                /* 0D48 */  0x94, 0xF8, 0xAC, 0x09, 0x18, 0xF9, 0xFF, 0xDF,  // ........
                /* 0D50 */  0x67, 0x30, 0x97, 0x0C, 0xFC, 0xF5, 0x9F, 0xDD,  // g0......
                /* 0D58 */  0x1F, 0x1E, 0xD0, 0x7D, 0xC5, 0xE0, 0xA7, 0x4C,  // ...}...L
                /* 0D60 */  0xE0, 0x79, 0x28, 0x60, 0x97, 0x0C, 0x18, 0x77,  // .y(`...w
                /* 0D68 */  0x18, 0x8F, 0x8A, 0x13, 0x38, 0xC4, 0x30, 0xE8,  // ....8.0.
                /* 0D70 */  0xA0, 0xC0, 0x75, 0xC8, 0xE0, 0x0B, 0xF2, 0xFD,  // ..u.....
                /* 0D78 */  0x08, 0xEE, 0x25, 0x03, 0x5C, 0xC1, 0x86, 0x86,  // ..%.\...
                /* 0D80 */  0x96, 0x72, 0x4C, 0xA0, 0xC7, 0x1B, 0x76, 0x8E,  // .rL...v.
                /* 0D88 */  0xF7, 0xBD, 0x87, 0x0D, 0x0E, 0xDC, 0x87, 0x0C,  // ........
                /* 0D90 */  0x0F, 0x0E, 0xDE, 0x6D, 0xC3, 0x83, 0x03, 0xD7,  // ...m....
                /* 0D98 */  0x55, 0x0A, 0xF3, 0xFF, 0xBF, 0x4A, 0x81, 0x3D,  // U....J.=
                /* 0DA0 */  0xF8, 0xD8, 0x51, 0x57, 0x29, 0x70, 0x9C, 0xEB,  // ..QW)p..
                /* 0DA8 */  0xF8, 0x55, 0x0A, 0x78, 0x0E, 0xF0, 0x55, 0x0A,  // .U.x..U.
                /* 0DB0 */  0x2C, 0xD7, 0x26, 0x36, 0x87, 0xE7, 0x26, 0x7E,  // ,.&6..&~
                /* 0DB8 */  0x95, 0xF2, 0xA1, 0x06, 0x7B, 0x85, 0xF1, 0xF5,  // ....{...
                /* 0DC0 */  0x46, 0xA7, 0x56, 0x14, 0x87, 0xA3, 0x9C, 0x5A,  // F.V....Z
                /* 0DC8 */  0x11, 0xB7, 0x28, 0x98, 0xD2, 0xCF, 0xAD, 0x28,  // ..(....(
                /* 0DD0 */  0xD1, 0x30, 0x92, 0x7C, 0x6E, 0x45, 0x89, 0x3C,  // .0.|nE.<
                /* 0DD8 */  0xB7, 0x52, 0x10, 0x9F, 0x10, 0x7C, 0x8B, 0x02,  // .R...|..
                /* 0DE0 */  0xC6, 0xFF, 0xFF, 0x5B, 0x14, 0x60, 0xF2, 0xD0,  // ...[.`..
                /* 0DE8 */  0x0A, 0x07, 0xF0, 0x31, 0x0A, 0x70, 0x70, 0x11,  // ...1.pp.
                /* 0DF0 */  0xF5, 0x35, 0x08, 0xFE, 0x98, 0xC0, 0x8A, 0xE4,  // .5......
                /* 0DF8 */  0x31, 0x81, 0x2D, 0xD0, 0x1D, 0x01, 0xFD, 0xFF,  // 1.-.....
                /* 0E00 */  0x57, 0x71, 0x09, 0x42, 0xDE, 0x10, 0xC0, 0xBB,  // Wq.B....
                /* 0E08 */  0x1C, 0x9F, 0x58, 0x61, 0xDE, 0x10, 0xC0, 0x75,  // ..Xa...u
                /* 0E10 */  0x61, 0x05, 0x58, 0x74, 0x2C, 0x02, 0xD3, 0xFF,  // a.Xt,...
                /* 0E18 */  0xFF, 0x58, 0xC4, 0x6E, 0x06, 0xFC, 0x58, 0x04,  // .X.n..X.
                /* 0E20 */  0xF8, 0xB8, 0xB0, 0xF2, 0x63, 0x11, 0xF8, 0xC2,  // ....c...
                /* 0E28 */  0x1C, 0x8B, 0x10, 0x22, 0xC7, 0x21, 0x84, 0x87,  // ...".!..
                /* 0E30 */  0x1B, 0x18, 0x04, 0xC5, 0x1F, 0x8B, 0x50, 0xB2,  // ......P.
                /* 0E38 */  0x61, 0x24, 0xFA, 0x58, 0x84, 0x92, 0x79, 0x2C,  // a$.X..y,
                /* 0E40 */  0xA2, 0x20, 0x3E, 0x63, 0x38, 0xC8, 0x05, 0x05,  // . >c8...
                /* 0E48 */  0x7D, 0x50, 0xF3, 0xA0, 0x5E, 0x69, 0xD9, 0xF9,  // }P..^i..
                /* 0E50 */  0xC3, 0x83, 0xE3, 0xA7, 0x22, 0xE0, 0x79, 0x91,  // ....".y.
                /* 0E58 */  0x87, 0x33, 0x55, 0x78, 0xA7, 0x14, 0xD8, 0xFF,  // .3Ux....
                /* 0E60 */  0xFF, 0x6B, 0x11, 0x70, 0xBC, 0x65, 0x01, 0xC3,  // .k.p.e..
                /* 0E68 */  0x53, 0x11, 0xB0, 0xB8, 0x00, 0x30, 0xE4, 0xE6,  // S....0..
                /* 0E70 */  0xAF, 0x09, 0xE4, 0x54, 0x04, 0x4C, 0x2F, 0x62,  // ...T.L/b
                /* 0E78 */  0x70, 0xEE, 0x8F, 0x30, 0x8E, 0x08, 0xE0, 0x05,  // p..0....
                /* 0E80 */  0xF6, 0xB9, 0x08, 0xE6, 0xFF, 0xFF, 0x5C, 0x04,  // ......\.
                /* 0E88 */  0x30, 0x2E, 0xF6, 0xB9, 0x08, 0x74, 0xB0, 0xFC,  // 0....t..
                /* 0E90 */  0x5C, 0x04, 0xAC, 0xFE, 0xFF, 0xE7, 0x22, 0x18,  // \.....".
                /* 0E98 */  0x73, 0x7C, 0x2E, 0x02, 0xDB, 0xED, 0x83, 0x81,  // s|......
                /* 0EA0 */  0x84, 0x7B, 0x49, 0xC1, 0x9E, 0x38, 0x1C, 0xEF,  // .{I..8..
                /* 0EA8 */  0x2D, 0xA1, 0x63, 0x11, 0xBF, 0x40, 0x38, 0xD0,  // -.c..@8.
                /* 0EB0 */  0x1A, 0x05, 0x1B, 0xF0, 0x1C, 0xBA, 0x1E, 0xBA,  // ........
                /* 0EB8 */  0x40, 0x3D, 0x81, 0x1A, 0x27, 0x21, 0x90, 0x43,  // @=..'!.C
                /* 0EC0 */  0x0C, 0x7E, 0x00, 0xC7, 0x66, 0xB0, 0x18, 0xD1,  // .~..f...
                /* 0EC8 */  0x9E, 0x93, 0x5E, 0x83, 0x8C, 0x75, 0xD4, 0xBE,  // ..^..u..
                /* 0ED0 */  0x2A, 0xF9, 0x4E, 0x22, 0x78, 0x1D, 0x8E, 0xB8,  // *.N"x...
                /* 0ED8 */  0x5C, 0x18, 0x89, 0xFD, 0x5F, 0xE8, 0x08, 0xC1,  // \..._...
                /* 0EE0 */  0xE5, 0x9D, 0x91, 0x28, 0x88, 0xC7, 0xE7, 0x1C,  // ...(....
                /* 0EE8 */  0x97, 0x10, 0x1F, 0x8E, 0x40, 0xA1, 0xF9, 0x70,  // ....@..p
                /* 0EF0 */  0x04, 0xE2, 0xE3, 0x07, 0xB8, 0xE6, 0x04, 0x67,  // .......g
                /* 0EF8 */  0xFE, 0xEF, 0x07, 0xA7, 0xF4, 0x9C, 0xE2, 0x73,  // .......s
                /* 0F00 */  0x81, 0x11, 0x0E, 0xEB, 0x9C, 0xC0, 0x7B, 0x27,  // ......{'
                /* 0F08 */  0x02, 0xDF, 0x75, 0xC7, 0x73, 0xC2, 0xFC, 0xFF,  // ..u.s...
                /* 0F10 */  0xEF, 0x32, 0x6C, 0x4E, 0x8F, 0x02, 0x15, 0x63,  // .2lN...c
                /* 0F18 */  0xEA, 0x7E, 0x10, 0x3D, 0xCA, 0xB3, 0x83, 0xC7,  // .~.=....
                /* 0F20 */  0x04, 0xD6, 0x73, 0x81, 0xA7, 0x0D, 0xFE, 0xB3,  // ..s.....
                /* 0F28 */  0xDA, 0x03, 0xD1, 0x3B, 0x85, 0xCF, 0x2A, 0x86,  // ...;..*.
                /* 0F30 */  0x8D, 0xEA, 0x39, 0x81, 0xF7, 0x2E, 0xCD, 0xA7,  // ..9.....
                /* 0F38 */  0x0D, 0xEE, 0xFB, 0xC9, 0x19, 0x9D, 0xF4, 0x3B,  // .......;
                /* 0F40 */  0xCA, 0x93, 0x01, 0x3B, 0x77, 0x78, 0x4C, 0x60,  // ...;wxL`
                /* 0F48 */  0x3D, 0x0B, 0x81, 0x6F, 0x4C, 0x60, 0x38, 0x8E,  // =..oL`8.
                /* 0F50 */  0x1C, 0x13, 0x78, 0xEF, 0xF9, 0xB8, 0xFF, 0xFF,  // ..x.....
                /* 0F58 */  0x98, 0xC0, 0x71, 0xB0, 0x82, 0x73, 0x7A, 0xE5,  // ..q..sz.
                /* 0F60 */  0x77, 0x03, 0x7E, 0xB0, 0x02, 0xF3, 0xD1, 0xD8,  // w.~.....
                /* 0F68 */  0x43, 0x83, 0x75, 0xCB, 0x07, 0xDF, 0xC1, 0x0A,  // C.u.....
                /* 0F70 */  0x30, 0xE9, 0xE1, 0x60, 0x05, 0x44, 0xFF, 0xFF,  // 0..`.D..
                /* 0F78 */  0x07, 0x2B, 0x18, 0x22, 0x16, 0xAB, 0x83, 0x15,  // .+."....
                /* 0F80 */  0xB8, 0x6E, 0x06, 0xFC, 0x60, 0x05, 0x3C, 0x6F,  // .n..`.<o
                /* 0F88 */  0x85, 0x3E, 0x58, 0x81, 0xE3, 0x28, 0xC5, 0x07,  // .>X..(..
                /* 0F90 */  0xF1, 0x2A, 0xC5, 0x51, 0x9E, 0xA5, 0xF0, 0x70,  // .*.Q...p
                /* 0F98 */  0xBE, 0x4B, 0xC1, 0x39, 0x5F, 0x59, 0xF8, 0x1B,  // .K.9_Y..
                /* 0FA0 */  0x43, 0xE7, 0x2B, 0x2E, 0xE9, 0x34, 0xE5, 0x35,  // C.+..4.5
                /* 0FA8 */  0xEB, 0xB4, 0xC5, 0xC6, 0x7F, 0x18, 0xAF, 0x50,  // .......P
                /* 0FB0 */  0x9E, 0x48, 0xDC, 0xD8, 0x71, 0x23, 0x9F, 0xC0,  // .H..q#..
                /* 0FB8 */  0x09, 0x9D, 0x8E, 0xC1, 0x1E, 0xB5, 0x74, 0x7E,  // ......t~
                /* 0FC0 */  0xA5, 0x67, 0x1E, 0x02, 0x23, 0xF9, 0x87, 0x08,  // .g..#...
                /* 0FC8 */  0x94, 0x60, 0x18, 0xC1, 0x19, 0xC4, 0xE7, 0x00,  // .`......
                /* 0FD0 */  0x1F, 0x63, 0x7D, 0x53, 0xC1, 0x69, 0x39, 0x86,  // .c}S.i9.
                /* 0FD8 */  0x21, 0xAE, 0x10, 0x1E, 0x94, 0x07, 0xF2, 0x70,  // !......p
                /* 0FE0 */  0xEF, 0xAB, 0x15, 0x30, 0xFB, 0xFF, 0x5F, 0x40,  // ...0.._@
                /* 0FE8 */  0xB0, 0x29, 0x06, 0x85, 0x06, 0xF6, 0xA0, 0x22,  // .)....."
                /* 0FF0 */  0x3E, 0x37, 0x9D, 0xFE, 0x33, 0x91, 0x07, 0xEA,  // >7..3...
                /* 0FF8 */  0x9B, 0x15, 0xB0, 0x3C, 0xA3, 0x00, 0x8B, 0x58,  // ...<...X
                /* 1000 */  0xE7, 0x01, 0x54, 0x90, 0xF3, 0x00, 0x05, 0xF1,  // ..T.....
                /* 1008 */  0xC0, 0x1C, 0x66, 0xAC, 0xE8, 0x33, 0x0A, 0xDC,  // ..f..3..
                /* 1010 */  0x2B, 0xC6, 0x33, 0x0A, 0x98, 0x4F, 0x5D, 0xE0,  // +.3..O].
                /* 1018 */  0x0B, 0x76, 0x17, 0x42, 0x9F, 0xBA, 0x7C, 0x67,  // .v.B..|g
                /* 1020 */  0x85, 0x41, 0x30, 0xC4, 0x61, 0x88, 0x8E, 0x0A,  // .A0.a...
                /* 1028 */  0x5C, 0xA7, 0x21, 0x3E, 0x46, 0x0E, 0xF2, 0xFF,  // \.!>F...
                /* 1030 */  0x3F, 0x38, 0x18, 0xB7, 0x2F, 0xF0, 0x1D, 0x67,  // ?8../..g
                /* 1038 */  0x80, 0xC7, 0xBB, 0xC0, 0xC7, 0x19, 0x70, 0x9D,  // ......p.
                /* 1040 */  0x7C, 0x7C, 0x9C, 0x01, 0xAE, 0x82, 0x8F, 0x9D,  // ||......
                /* 1048 */  0xA0, 0xBB, 0xB9, 0x70, 0x94, 0x47, 0x17, 0x38,  // ...p.G.8
                /* 1050 */  0x58, 0x41, 0x1F, 0xC0, 0x7C, 0x97, 0xF0, 0x0D,  // XA..|...
                /* 1058 */  0x9F, 0xA5, 0x3F, 0xCC, 0xA0, 0xCE, 0x4B, 0xCE,  // ..?...K.
                /* 1060 */  0xBC, 0x62, 0x79, 0x3C, 0xCC, 0x80, 0x60, 0x06,  // .by<..`.
                /* 1068 */  0x38, 0x82, 0xD9, 0xCE, 0x33, 0xA8, 0x54, 0x30,  // 8...3.T0
                /* 1070 */  0xD2, 0x7F, 0xE0, 0x40, 0x29, 0x3E, 0x70, 0x50,  // ...@)>pP
                /* 1078 */  0x10, 0x9F, 0x67, 0x30, 0xFF, 0xFF, 0xF3, 0x0C,  // ..g0....
                /* 1080 */  0x76, 0x30, 0xEC, 0x3C, 0x03, 0xAC, 0x2F, 0x7B,  // v0.<../{
                /* 1088 */  0xB0, 0x8E, 0x1B, 0xF8, 0xFB, 0x0C, 0xE0, 0x4A,  // .......J
                /* 1090 */  0xD4, 0x8F, 0x40, 0xF7, 0x01, 0x2E, 0x03, 0x46,  // ..@....F
                /* 1098 */  0x33, 0x32, 0x88, 0x6F, 0x27, 0xBE, 0xCF, 0x00,  // 32.o'...
                /* 10A0 */  0x1E, 0xFE, 0xFF, 0xD3, 0xC5, 0xDF, 0x1A, 0xF0,  // ........
                /* 10A8 */  0xC0, 0xBE, 0x11, 0x30, 0xCC, 0x43, 0x3A, 0x17,  // ...0.C:.
                /* 10B0 */  0x0F, 0x0A, 0xEC, 0xF7, 0x18, 0xF0, 0x5D, 0x06,  // ......].
                /* 10B8 */  0x7D, 0x65, 0xF0, 0xD0, 0x71, 0xC0, 0xAF, 0x15,  // }e..q...
                /* 10C0 */  0xEF, 0xD2, 0xBE, 0x55, 0x05, 0x3D, 0xA6, 0x27,  // ...U.=.'
                /* 10C8 */  0x13, 0x9F, 0x28, 0x5F, 0x06, 0xC1, 0x7F, 0x2A,  // ..(_...*
                /* 10D0 */  0xF0, 0x65, 0x10, 0x3C, 0xC6, 0x04, 0x68, 0xBB,  // .e.<..h.
                /* 10D8 */  0x0C, 0x02, 0x99, 0xEB, 0x0E, 0xF8, 0xC0, 0x7D,  // .......}
                /* 10E0 */  0xDD, 0x01, 0x1E, 0xFF, 0xFF, 0xEB, 0x0E, 0x70,  // .......p
                /* 10E8 */  0xB9, 0xBF, 0xB0, 0xEB, 0x0E, 0x18, 0x03, 0x5C,  // .......\
                /* 10F0 */  0x77, 0x50, 0xA2, 0xAE, 0xEA, 0x5E, 0xB1, 0x46,  // wP...^.F
                /* 10F8 */  0xE2, 0xD3, 0x4A, 0x60, 0x83, 0x3C, 0xCF, 0x9D,  // ..J`.<..
                /* 1100 */  0xF2, 0x5B, 0x3B, 0x3C, 0x81, 0x97, 0x1D, 0x94,  // .[;<....
                /* 1108 */  0x34, 0x18, 0x05, 0xB8, 0xEC, 0xA0, 0x24, 0x5F,  // 4.....$_
                /* 1110 */  0x76, 0x28, 0x88, 0x8F, 0x01, 0xBE, 0xB5, 0x03,  // v(......
                /* 1118 */  0x36, 0x0E, 0x44, 0x70, 0x0E, 0x3B, 0x78, 0xFC,  // 6.Dp.;x.
                /* 1120 */  0x83, 0x02, 0xF3, 0x69, 0x07, 0x2C, 0xFF, 0xFF,  // ...i.,..
                /* 1128 */  0xD3, 0x0E, 0xF0, 0x09, 0x76, 0x20, 0x40, 0x45,  // ....v @E
                /* 1130 */  0x39, 0x10, 0x50, 0x10, 0x5F, 0x06, 0x01, 0x37,  // 9.P._..7
                /* 1138 */  0xD1, 0x2E, 0x83, 0xE8, 0x61, 0xF1, 0x2B, 0x01,  // ....a.+.
                /* 1140 */  0xEE, 0xE8, 0x70, 0x38, 0xEC, 0x36, 0x08, 0xF8,  // ..p8.6..
                /* 1148 */  0xFC, 0xFF, 0x4B, 0x38, 0xCF, 0x80, 0xCE, 0xC4,  // ..K8....
                /* 1150 */  0x79, 0x06, 0xE8, 0x1E, 0x76, 0xF8, 0x5D, 0x19,  // y...v.].
                /* 1158 */  0x0C, 0x87, 0x17, 0xCC, 0x51, 0x19, 0x6C, 0x04,  // ....Q.l.
                /* 1160 */  0xB3, 0xBF, 0x3E, 0x74, 0xA0, 0xE1, 0x1C, 0xCE,  // ..>t....
                /* 1168 */  0xBE, 0x68, 0x9D, 0x71, 0x98, 0xC8, 0x61, 0x08,  // .h.q..a.
                /* 1170 */  0x21, 0x7C, 0xE8, 0xA3, 0x89, 0x70, 0x0E, 0x8F,  // !|...p..
                /* 1178 */  0xD0, 0x1E, 0x1F, 0xCB, 0x0A, 0xA9, 0xE3, 0x0C,  // ........
                /* 1180 */  0x4F, 0x09, 0x23, 0x55, 0x67, 0x35, 0x94, 0x8E,  // O.#Ug5..
                /* 1188 */  0xB3, 0x1A, 0x05, 0xF1, 0xD9, 0xC1, 0x57, 0x15,  // ......W.
                /* 1190 */  0x9F, 0xB0, 0x70, 0xC7, 0x19, 0x78, 0xD7, 0x6C,  // ..p..x.l
                /* 1198 */  0x1F, 0x67, 0xC0, 0x3A, 0x44, 0x5F, 0xAF, 0xC0,  // .g.:D_..
                /* 11A0 */  0x74, 0x15, 0xF4, 0xA0, 0xF8, 0xFF, 0xFF, 0xA4,  // t.......
                /* 11A8 */  0xC6, 0xA7, 0xCA, 0x90, 0x5F, 0xC1, 0x0E, 0xCB,  // ...._...
                /* 11B0 */  0x63, 0x02, 0xEF, 0x6C, 0x3D, 0x26, 0xB0, 0xC5,  // c..l=&..
                /* 11B8 */  0x3A, 0x8F, 0xA0, 0x6F, 0x3C, 0x30, 0x13, 0x5C,  // :..o<0.\
                /* 11C0 */  0x47, 0xE8, 0xA4, 0xE0, 0xDD, 0x46, 0xE0, 0x81,  // G....F..
                /* 11C8 */  0x79, 0x6E, 0xB0, 0x8E, 0x2E, 0xE0, 0xBB, 0xF8,  // yn......
                /* 11D0 */  0x00, 0x8B, 0x38, 0x4B, 0xD2, 0xD5, 0x81, 0x07,  // ..8K....
                /* 11D8 */  0xB8, 0x5F, 0x51, 0x10, 0x0F, 0xCB, 0x77, 0x3D,  // ._Q...w=
                /* 11E0 */  0x3B, 0xB9, 0xF8, 0x80, 0xE6, 0xAE, 0x07, 0x6E,  // ;......n
                /* 11E8 */  0x28, 0xDF, 0xF5, 0xD8, 0xFF, 0x7F, 0xBA, 0x60,  // (......`
                /* 11F0 */  0x70, 0x26, 0x40, 0x19, 0x24, 0xB9, 0x1F, 0xF9,  // p&@.$...
                /* 11F8 */  0x86, 0x81, 0x47, 0x7D, 0x74, 0x79, 0xA1, 0xC5,  // ..G}ty..
                /* 1200 */  0xDE, 0x08, 0x81, 0xF1, 0xFD, 0x08, 0xCE, 0xF1,  // ........
                /* 1208 */  0x04, 0xDE, 0xFD, 0x08, 0xDC, 0x63, 0xF2, 0xF0,  // .....c..
                /* 1210 */  0xE0, 0x5D, 0x80, 0xF8, 0x2D, 0x13, 0xDC, 0x73,  // .]..-..s
                /* 1218 */  0xC3, 0x9F, 0x22, 0x9E, 0x81, 0x7C, 0x08, 0x00,  // .."..|..
                /* 1220 */  0xFB, 0x29, 0xC2, 0x87, 0x00, 0xD8, 0xFF, 0xFF,  // .)......
                /* 1228 */  0x43, 0x00, 0x58, 0xEE, 0x5C, 0xC0, 0xE9, 0xAE,  // C.X.\...
                /* 1230 */  0xE4, 0xE1, 0xC1, 0x3B, 0xA7, 0xF3, 0x3B, 0x17,  // ...;..;.
                /* 1238 */  0xF0, 0x8D, 0x7D, 0x46, 0x40, 0xDD, 0xB9, 0xC0,  // ..}F@...
                /* 1240 */  0xA1, 0xE2, 0xCE, 0x05, 0x74, 0xE7, 0xF8, 0x4A,  // ....t..J
                /* 1248 */  0x0A, 0xB6, 0x23, 0x07, 0x03, 0x79, 0xF7, 0xF5,  // ..#..y..
                /* 1250 */  0x39, 0x02, 0x77, 0x32, 0xB2, 0xA6, 0x85, 0xEA,  // 9.w2....
                /* 1258 */  0xB6, 0xF5, 0xFF, 0x7F, 0x1B, 0xC5, 0x28, 0xFA,  // ......(.
                /* 1260 */  0xF3, 0x08, 0x9C, 0x5D, 0x27, 0x7C, 0x1B, 0x62,  // ...]'|.b
                /* 1268 */  0x18, 0x2F, 0x61, 0xBE, 0xA7, 0x18, 0xDC, 0x57,  // ./a....W
                /* 1270 */  0x15, 0x9F, 0x54, 0x58, 0xFA, 0x6B, 0x22, 0xBD,  // ..TX.k".
                /* 1278 */  0x00, 0x39, 0x37, 0x89, 0x72, 0x9F, 0x06, 0x28,  // .97.r..(
                /* 1280 */  0x9C, 0x93, 0x1E, 0x99, 0x28, 0x88, 0x01, 0x7D,  // ....(..}
                /* 1288 */  0x97, 0xF2, 0x29, 0x07, 0x77, 0x30, 0xF0, 0xF9,  // ..).w0..
                /* 1290 */  0xC0, 0x03, 0xF1, 0xB0, 0x1E, 0x1D, 0xD8, 0x75,  // .......u
                /* 1298 */  0x0B, 0x18, 0xDE, 0x70, 0xD8, 0x05, 0x09, 0x58,  // ...p...X
                /* 12A0 */  0xC4, 0x9F, 0x2B, 0x2A, 0xF0, 0x5C, 0x29, 0x88,  // ..+*.\).
                /* 12A8 */  0xE7, 0xEA, 0x9B, 0x8F, 0xAD, 0xDC, 0x7C, 0xD0,  // ......|.
                /* 12B0 */  0x23, 0xF2, 0xE5, 0x83, 0x0D, 0x96, 0xDF, 0x52,  // #......R
                /* 12B8 */  0xC0, 0x3E, 0x18, 0xDF, 0x52, 0xC0, 0x73, 0x4A,  // .>..R.sJ
                /* 12C0 */  0x29, 0xED, 0x6C, 0x0D, 0xF9, 0xFF, 0x7F, 0xF1,  // ).l.....
                /* 12C8 */  0x00, 0x5F, 0xF0, 0x8B, 0x07, 0xE8, 0xC6, 0xE9,  // ._......
                /* 12D0 */  0x8B, 0x07, 0x70, 0x1D, 0xE0, 0x8B, 0x07, 0xD8,  // ..p.....
                /* 12D8 */  0xE6, 0x7B, 0xA4, 0x2F, 0x1E, 0xBE, 0x6B, 0xC0,  // .{./..k.
                /* 12E0 */  0x38, 0x37, 0x32, 0x3D, 0x37, 0x0F, 0x14, 0x87,  // 872=7...
                /* 12E8 */  0xD5, 0xBC, 0x14, 0x34, 0xE9, 0x37, 0x0F, 0xB8,  // ...4.7..
                /* 12F0 */  0xF7, 0x0E, 0x30, 0x1E, 0x1E, 0x70, 0xF7, 0x0E,  // ..0..p..
                /* 12F8 */  0xE0, 0xFB, 0xFF, 0xBF, 0x39, 0xE0, 0xEE, 0x1D,  // ....9...
                /* 1300 */  0xC0, 0xF2, 0xCC, 0x82, 0xBB, 0x77, 0x00, 0xFF,  // .....w..
                /* 1308 */  0x73, 0x1E, 0xBF, 0x77, 0x00, 0xEF, 0x0B, 0x86,  // s..w....
                /* 1310 */  0xEF, 0x1D, 0xC0, 0xFE, 0xFF, 0x7F, 0xEF, 0x80,  // ........
                /* 1318 */  0x75, 0xD1, 0x60, 0xF7, 0x0E, 0x30, 0xE4, 0xBE,  // u.`..0..
                /* 1320 */  0x77, 0xA0, 0x53, 0xDF, 0x3B, 0x10, 0xE0, 0xBE,  // w.S.;...
                /* 1328 */  0x14, 0x18, 0xD7, 0x48, 0x6F, 0xB1, 0x67, 0x72,  // ...Ho.gr
                /* 1330 */  0x46, 0x9E, 0xE4, 0xBB, 0xAF, 0xEE, 0xBD, 0xF4,  // F.......
                /* 1338 */  0xD0, 0xE0, 0x7C, 0x14, 0x52, 0x71, 0x79, 0x47,  // ..|.RqyG
                /* 1340 */  0x5D, 0x3D, 0x0C, 0x67, 0x10, 0x03, 0x3A, 0xD4,  // ]=.g..:.
                /* 1348 */  0x99, 0x0E, 0x7D, 0xFA, 0xF3, 0x34, 0x38, 0xC2,  // ..}..48.
                /* 1350 */  0x31, 0x19, 0xE2, 0xB5, 0x15, 0xCC, 0x5B, 0xF1,  // 1.....[.
                /* 1358 */  0xF9, 0x03, 0xE6, 0xF9, 0x1F, 0xB0, 0xFC, 0xFF,  // ........
                /* 1360 */  0xBF, 0x7F, 0xC0, 0x39, 0xFF, 0x03, 0xBE, 0x8E,  // ...9....
                /* 1368 */  0xC8, 0xE0, 0xBB, 0xAB, 0x00, 0x6F, 0x1B, 0x77,  // .....o.w
                /* 1370 */  0x15, 0x40, 0xC9, 0xFF, 0xFF, 0xAE, 0x82, 0xBB,  // .@......
                /* 1378 */  0x86, 0x70, 0x94, 0xB7, 0x13, 0x63, 0x3C, 0x9E,  // .p...c<.
                /* 1380 */  0xE0, 0x0E, 0x2B, 0xCE, 0xF8, 0x3E, 0xD0, 0x5D,  // ..+..>.]
                /* 1388 */  0x85, 0xCB, 0x83, 0x50, 0xA6, 0xD5, 0xEA, 0x08,  // ...P....
                /* 1390 */  0xC6, 0x26, 0xE0, 0x61, 0x9C, 0x83, 0xE7, 0x75,  // .&.a...u
                /* 1398 */  0x00, 0x87, 0x11, 0xFB, 0x28, 0x3D, 0xB6, 0x03,  // ....(=..
                /* 13A0 */  0x38, 0x1A, 0xDF, 0x18, 0x5E, 0x5F, 0x0C, 0xF2,  // 8...^_..
                /* 13A8 */  0xEA, 0x8C, 0x57, 0x7D, 0xDF, 0xA6, 0x07, 0x04,  // ..W}....
                /* 13B0 */  0xEB, 0x85, 0x91, 0x8E, 0x03, 0x07, 0x2A, 0xF9,  // ......*.
                /* 13B8 */  0x99, 0x82, 0x82, 0x18, 0xD0, 0x47, 0x77, 0x60,  // .....Gw`
                /* 13C0 */  0x08, 0xED, 0x3B, 0x0B, 0xE0, 0x42, 0xE6, 0x6E,  // ..;..B.n
                /* 13C8 */  0x35, 0x67, 0x2E, 0xEC, 0xF4, 0x43, 0x41, 0x3C,  // 5g...CA<
                /* 13D0 */  0x34, 0xDF, 0x59, 0x80, 0xC9, 0xFF, 0xFF, 0xCE,  // 4.Y.....
                /* 13D8 */  0x02, 0x6C, 0x8E, 0xD9, 0x1E, 0x16, 0x6E, 0x18,  // .l....n.
                /* 13E0 */  0xBE, 0x30, 0xC0, 0x1D, 0x17, 0xB8, 0x6F, 0x2B,  // .0....o+
                /* 13E8 */  0xE0, 0xBB, 0xDA, 0x00, 0xCF, 0x61, 0x79, 0x74,  // .....ayt
                /* 13F0 */  0xF0, 0xA0, 0x7C, 0xB5, 0x01, 0xCE, 0x32, 0x9E,  // ..|...2.
                /* 13F8 */  0x08, 0xBA, 0xDA, 0xC0, 0xFA, 0xFF, 0x5F, 0x6D,  // ......_m
                /* 1400 */  0x60, 0xE9, 0xB8, 0xDA, 0x00, 0xDD, 0x23, 0x83,  // `.....#.
                /* 1408 */  0x6F, 0xA7, 0xE0, 0x3A, 0xCC, 0xE0, 0x70, 0x5E,  // o..:..p^
                /* 1410 */  0x66, 0xB0, 0x40, 0xBE, 0x4C, 0x60, 0x60, 0x7D,  // f.@.L``}
                /* 1418 */  0x9A, 0xC0, 0xDC, 0x70, 0x9C, 0xEF, 0x86, 0x83,  // ...p....
                /* 1420 */  0xCE, 0xB3, 0x68, 0x5D, 0x78, 0xD8, 0x0D, 0x07,  // ..h]x...
                /* 1428 */  0xAC, 0x8A, 0x6F, 0x38, 0x28, 0xAD, 0x30, 0x4A,  // ..o8(.0J
                /* 1430 */  0x74, 0xC3, 0x41, 0x65, 0xB8, 0xA1, 0x51, 0x10,  // t.Ae..Q.
                /* 1438 */  0x1F, 0x07, 0x1C, 0xE5, 0xE0, 0x81, 0x3E, 0xCC,  // ......>.
                /* 1440 */  0x78, 0x1C, 0x30, 0x35, 0x1F, 0x57, 0x41, 0x7C,  // x.05.WA|
                /* 1448 */  0x92, 0x00, 0xD3, 0xFF, 0xFF, 0x1A, 0x04, 0x1C,  // ........
                /* 1450 */  0xA1, 0x3C, 0x36, 0x58, 0x07, 0x19, 0xF0, 0x1D,  // .<6X....
                /* 1458 */  0x05, 0x01, 0x93, 0xF7, 0x1B, 0xC0, 0xC3, 0xFF,  // ........
                /* 1460 */  0xFF, 0x28, 0x08, 0xAE, 0xFB, 0x0D, 0xE0, 0xC9,  // .(......
                /* 1468 */  0xC7, 0xFD, 0x06, 0xD0, 0x72, 0x14, 0xE4, 0xF7,  // ....r...
                /* 1470 */  0x1B, 0x70, 0x2B, 0xBA, 0x0C, 0xA3, 0x24, 0x1D,  // .p+...$.
                /* 1478 */  0xEC, 0xFD, 0x84, 0x90, 0xCE, 0x31, 0x68, 0x26,  // .....1h&
                /* 1480 */  0x3E, 0xBC, 0x1C, 0xC0, 0x51, 0x07, 0x31, 0xC4,  // >...Q.1.
                /* 1488 */  0x9B, 0x0D, 0xFE, 0x54, 0x0F, 0xEF, 0xFF, 0x7F,  // ...T....
                /* 1490 */  0xAA, 0x07, 0xF8, 0xFF, 0xFF, 0xBF, 0x7F, 0xC0,  // ........
                /* 1498 */  0x18, 0x8B, 0x6F, 0xB6, 0x80, 0x93, 0x9B, 0x06,  // ..o.....
                /* 14A0 */  0x6E, 0x14, 0x8F, 0x1A, 0xD6, 0x08, 0xA1, 0x8B,  // n.......
                /* 14A8 */  0x07, 0xF6, 0x04, 0x4F, 0x9E, 0x07, 0x09, 0x48,  // ...O...H
                /* 14B0 */  0x9C, 0xD7, 0x80, 0x44, 0x2E, 0x96, 0xC2, 0xF8,  // ...D....
                /* 14B8 */  0x46, 0xE1, 0xF3, 0x01, 0x7E, 0x06, 0x07, 0x7C,  // F...~..|
                /* 14C0 */  0x9C, 0x87, 0xC4, 0xEE, 0x20, 0x86, 0xE3, 0x23,  // .... ..#
                /* 14C8 */  0xF6, 0x04, 0x0F, 0xE5, 0x70, 0x4E, 0xE3, 0xCC,  // ....pN..
                /* 14D0 */  0x3D, 0xA7, 0x90, 0xEC, 0x52, 0xE1, 0xB1, 0xF1,  // =...R...
                /* 14D8 */  0xA3, 0x83, 0x07, 0x76, 0x66, 0x67, 0xF5, 0x6E,  // ...vfg.n
                /* 14E0 */  0xE2, 0x53, 0x93, 0x61, 0x12, 0xF8, 0x18, 0xC0,  // .S.a....
                /* 14E8 */  0x66, 0x19, 0x8D, 0x41, 0x63, 0x87, 0xE1, 0xFB,  // f..Ac...
                /* 14F0 */  0x41, 0xB0, 0x83, 0x38, 0x8C, 0x77, 0x00, 0x13,  // A..8.w..
                /* 14F8 */  0x78, 0x42, 0x27, 0x58, 0xEE, 0xBD, 0x41, 0xE2,  // xB'X..A.
                /* 1500 */  0x51, 0x85, 0xD1, 0x1C, 0x14, 0x09, 0x30, 0x6A,  // Q.....0j
                /* 1508 */  0xD0, 0x9C, 0x19, 0xDE, 0x5E, 0x8C, 0x16, 0xE1,  // ....^...
                /* 1510 */  0x90, 0x0F, 0xD8, 0xB7, 0x02, 0xA3, 0x9C, 0x78,  // .......x
                /* 1518 */  0xBC, 0xA8, 0x41, 0x2A, 0x1C, 0xA7, 0xD6, 0x7C,  // ..A*...|
                /* 1520 */  0x1E, 0x51, 0xA2, 0x19, 0x3B, 0xB8, 0xB1, 0x7B,  // .Q..;..{
                /* 1528 */  0xC6, 0xD1, 0x41, 0x21, 0x54, 0xAD, 0x93, 0x23,  // ..A!T..#
                /* 1530 */  0xFF, 0x7F, 0x98, 0x63, 0x60, 0x40, 0x6F, 0x13,  // ...c`@o.
                /* 1538 */  0xAF, 0x25, 0x6F, 0x47, 0x8D, 0x5D, 0xB3, 0x10,  // .%oG.]..
                /* 1540 */  0xF7, 0x21, 0x04, 0x84, 0xA0, 0xDF, 0x2B, 0x7C,  // .!....+|
                /* 1548 */  0x4A, 0x60, 0xEE, 0x8F, 0x03, 0xF2, 0x26, 0xC0,  // J`....&.
                /* 1550 */  0x1A, 0x86, 0x20, 0x9E, 0x4C, 0x22, 0xD8, 0xD6,  // .. .L"..
                /* 1558 */  0x54, 0x84, 0x1E, 0xE2, 0xF5, 0x22, 0xCA, 0x11,  // T...."..
                /* 1560 */  0x1E, 0x54, 0xB0, 0xA8, 0x51, 0x5E, 0x2A, 0x8E,  // .T..Q^*.
                /* 1568 */  0xF1, 0x1C, 0x4E, 0x2C, 0x4A, 0xDC, 0x58, 0x01,  // ..N,J.X.
                /* 1570 */  0x23, 0x44, 0x0E, 0x7B, 0x26, 0x2F, 0x16, 0xC1,  // #D.{&/..
                /* 1578 */  0x0D, 0x1B, 0xAB, 0xFD, 0x41, 0x90, 0x58, 0xE7,  // ....A.X.
                /* 1580 */  0x02, 0xDD, 0xAD, 0x1C, 0x69, 0x34, 0xA8, 0xF3,  // ....i4..
                /* 1588 */  0x2B, 0xBF, 0xCC, 0xF8, 0x42, 0xED, 0x51, 0x04,  // +...B.Q.
                /* 1590 */  0x79, 0xE8, 0xF1, 0x89, 0xE1, 0xA1, 0xC0, 0xC3,  // y.......
                /* 1598 */  0x67, 0xA7, 0x11, 0x1F, 0x4A, 0xE0, 0xB8, 0x06,  // g...J...
                /* 15A0 */  0xD4, 0xF5, 0xE0, 0xB9, 0x02, 0x2C, 0xA7, 0x12,  // .....,..
                /* 15A8 */  0xF8, 0xE3, 0xF1, 0x69, 0xC0, 0xB3, 0x37, 0x81,  // ...i..7.
                /* 15B0 */  0xE5, 0x0F, 0x02, 0x75, 0xED, 0xE1, 0x43, 0x3D,  // ...u..C=
                /* 15B8 */  0xAD, 0xD7, 0x00, 0x9F, 0xC8, 0x4C, 0xE0, 0x13,  // .....L..
                /* 15C0 */  0x2B, 0x1F, 0x0F, 0xF8, 0x15, 0x1F, 0x0B, 0x84,  // +.......
                /* 15C8 */  0xF0, 0xE6, 0xE0, 0xF9, 0xFA, 0x6C, 0xC9, 0x0E,  // .....l..
                /* 15D0 */  0x2D, 0xF0, 0x2F, 0x0B, 0xFC, 0x2A, 0xC5, 0x0E,  // -./..*..
                /* 15D8 */  0x0B, 0xFC, 0xC8, 0xA1, 0x43, 0x04, 0x1A, 0x9E,  // ....C...
                /* 15E0 */  0x1F, 0x02, 0xFE, 0xFF, 0x8F, 0x2F, 0x0C, 0xF8,  // ...../..
                /* 15E8 */  0x0D, 0xC6, 0x53, 0x38, 0x1C, 0x1F, 0x2F, 0x7C,  // ..S8../|
                /* 15F0 */  0x15, 0xF1, 0xA9, 0xE2, 0x29, 0xC3, 0x67, 0x88,  // ....).g.
                /* 15F8 */  0xF3, 0x79, 0x5E, 0x38, 0xA3, 0x27, 0x1E, 0x96,  // .y^8.'..
                /* 1600 */  0x64, 0x2B, 0x8F, 0x1B, 0x24, 0xED, 0x8D, 0x0A,  // d+..$...
                /* 1608 */  0x25, 0x0A, 0x42, 0x29, 0x17, 0x2B, 0xFC, 0x37,  // %.B).+.7
                /* 1610 */  0x98, 0xC7, 0x2C, 0x1F, 0x08, 0x8E, 0xE1, 0xA9,  // ..,.....
                /* 1618 */  0x82, 0x5D, 0x55, 0x1E, 0x29, 0x3C, 0x83, 0xB3,  // .]U.)<..
                /* 1620 */  0x78, 0xCE, 0x78, 0xD2, 0xF2, 0x08, 0x58, 0xA2,  // x.x...X.
                /* 1628 */  0x33, 0x36, 0x1D, 0xB9, 0xB3, 0x50, 0xE8, 0x4A,  // 36...P.J
                /* 1630 */  0x05, 0xFF, 0xD4, 0x80, 0x1B, 0x3A, 0x9B, 0xC5,  // .....:..
                /* 1638 */  0x13, 0x43, 0x84, 0xB3, 0xF6, 0x1D, 0xC0, 0x57,  // .C.....W
                /* 1640 */  0x2A, 0x60, 0x76, 0x5F, 0xC0, 0x5E, 0xA9, 0x80,  // *`v_.^..
                /* 1648 */  0x45, 0xA4, 0xF3, 0x24, 0x2A, 0xC4, 0xA9, 0x8C,  // E..$*...
                /* 1650 */  0x82, 0x78, 0x62, 0xBE, 0x7F, 0xFB, 0x4A, 0x85,  // .xb...J.
                /* 1658 */  0x3B, 0x4F, 0xC2, 0xBD, 0x53, 0x01, 0x8F, 0xFF,  // ;O..S...
                /* 1660 */  0xFF, 0x9D, 0x0A, 0x3C, 0xF7, 0x12, 0x8F, 0x0B,  // ...<....
                /* 1668 */  0xF7, 0x5E, 0xF0, 0x51, 0x01, 0xE6, 0x95, 0x88,  // .^.Q....
                /* 1670 */  0x8D, 0x0C, 0xDC, 0xF7, 0x05, 0x5F, 0xBE, 0x80,  // ....._..
                /* 1678 */  0xF7, 0xDD, 0xCD, 0x97, 0x2F, 0x70, 0xDD, 0x70,  // ..../p.p
                /* 1680 */  0xF9, 0xE5, 0x0B, 0x78, 0x5E, 0x4B, 0xDE, 0x9B,  // ...x^K..
                /* 1688 */  0xC0, 0x73, 0x29, 0xE1, 0x93, 0x08, 0xF6, 0x6C,  // .s)....l
                /* 1690 */  0x80, 0x45, 0x8A, 0xF6, 0x6E, 0xE0, 0xFF, 0xFF,  // .E..n...
                /* 1698 */  0xDD, 0xC0, 0x03, 0xF3, 0x3D, 0xC8, 0x87, 0x0E,  // ....=...
                /* 16A0 */  0xCB, 0xB8, 0xA6, 0xA0, 0xAE, 0x57, 0x8E, 0xBE,  // .....W..
                /* 16A8 */  0x4E, 0xDD, 0xC6, 0xD9, 0xEC, 0xA3, 0xC7, 0x7F,  // N.......
                /* 16B0 */  0x7A, 0xF2, 0x45, 0x26, 0xF0, 0xF3, 0x02, 0xFE,  // z.E&....
                /* 16B8 */  0x46, 0x86, 0x0F, 0x78, 0xCE, 0xA0, 0x10, 0x8E,  // F..x....
                /* 16C0 */  0x46, 0xA1, 0xD3, 0x30, 0xDC, 0xE3, 0x06, 0xF0,  // F..0....
                /* 16C8 */  0x24, 0xF0, 0x29, 0x02, 0x7C, 0xC1, 0xC6, 0x85,  // $.).|...
                /* 16D0 */  0x3E, 0x2A, 0x78, 0xCA, 0xE0, 0xBA, 0x3D, 0x02,  // >*x...=.
                /* 16D8 */  0x7E, 0xFE, 0xFF, 0x27, 0x0E, 0x78, 0x12, 0x4E,  // ~..'.x.N
                /* 16E0 */  0xC3, 0xA0, 0x3B, 0x64, 0xF3, 0x13, 0x07, 0xF0,  // ..;d....
                /* 16E8 */  0x44, 0xF5, 0x89, 0x03, 0x1C, 0xE7, 0x0B, 0x76,  // D......v
                /* 16F0 */  0xE0, 0xF0, 0xE9, 0x80, 0xC3, 0x3C, 0xEC, 0xB1,  // .....<..
                /* 16F8 */  0x4B, 0x07, 0x8C, 0xAB, 0x1C, 0x3B, 0x0B, 0x63,  // K....;.c
                /* 1700 */  0x12, 0xFD, 0xEA, 0x74, 0xE6, 0xC0, 0xA5, 0x58,  // ...t...X
                /* 1708 */  0xB2, 0xAE, 0x61, 0xEC, 0xCC, 0x01, 0x36, 0xAD,  // ..a...6.
                /* 1710 */  0xE0, 0xBA, 0x6C, 0x71, 0x95, 0x30, 0xD2, 0x48,  // ..lq.0.H
                /* 1718 */  0xA2, 0x33, 0x07, 0x57, 0x75, 0xE7, 0xA2, 0x20,  // .3.Wu.. 
                /* 1720 */  0xBE, 0xF1, 0x39, 0x0A, 0x84, 0x94, 0x9C, 0x39,  // ..9....9
                /* 1728 */  0xD0, 0x03, 0xC1, 0x5F, 0x11, 0xDE, 0x01, 0x7C,  // ..._...|
                /* 1730 */  0xDD, 0x02, 0x16, 0xFF, 0xFF, 0x5B, 0x04, 0xEC,  // .....[..
                /* 1738 */  0x03, 0xE2, 0xAB, 0x61, 0x82, 0xA1, 0xCE, 0xF3,  // ...a....
                /* 1740 */  0xE8, 0x81, 0x79, 0x54, 0x78, 0x82, 0x09, 0x6E,  // ..yTx..n
                /* 1748 */  0xF3, 0x74, 0x4E, 0xF0, 0x2E, 0xF3, 0xF0, 0x06,  // .tN.....
                /* 1750 */  0xE4, 0xA9, 0xC1, 0x3A, 0x06, 0xF1, 0xC3, 0x3C,  // ...:...<
                /* 1758 */  0x78, 0x86, 0xE6, 0xF1, 0xE3, 0xCE, 0x26, 0xE0,  // x.....&.
                /* 1760 */  0x3B, 0x04, 0x80, 0xF5, 0x96, 0xE0, 0x43, 0x00,  // ;.....C.
                /* 1768 */  0xD8, 0xAE, 0x70, 0xC0, 0x62, 0xDF, 0xBE, 0x41,  // ..p.b..A
                /* 1770 */  0xF0, 0xC8, 0x73, 0xA7, 0x20, 0x1E, 0x94, 0x2F,  // ..s. ../
                /* 1778 */  0x41, 0x60, 0xFA, 0xFF, 0x5F, 0x6C, 0xC0, 0x0E,  // A`.._l..
                /* 1780 */  0xE5, 0x8B, 0x0D, 0xE0, 0x09, 0xD2, 0x17, 0x1B,  // ........
                /* 1788 */  0xC0, 0xC9, 0x25, 0x86, 0x5D, 0x6C, 0xC0, 0x2A,  // ..%.]l.*
                /* 1790 */  0xFB, 0x62, 0x83, 0x3A, 0x12, 0x58, 0xEC, 0x4A,  // .b.:.X.J
                /* 1798 */  0x75, 0xD9, 0x61, 0x57, 0xD6, 0x37, 0x54, 0x36,  // u.aW.7T6
                /* 17A0 */  0x1B, 0x1F, 0xAC, 0x7D, 0x50, 0xF3, 0xA8, 0xDF,  // ...}P...
                /* 17A8 */  0x16, 0xD8, 0x60, 0x1F, 0x81, 0x31, 0xFF, 0xFF,  // ..`..1..
                /* 17B0 */  0x03, 0xAA, 0xEE, 0x35, 0x28, 0x39, 0x30, 0x0A,  // ...5(90.
                /* 17B8 */  0x70, 0x8C, 0x40, 0x49, 0xBE, 0x9A, 0x51, 0x10,  // p.@I..Q.
                /* 17C0 */  0x1F, 0x00, 0x7C, 0x28, 0x05, 0x5C, 0x24, 0xB9,  // ..|(.\$.
                /* 17C8 */  0xAB, 0xA0, 0xB5, 0x9C, 0x04, 0xC8, 0x25, 0xCF,  // ......%.
                /* 17D0 */  0x87, 0xBD, 0x03, 0x3D, 0xF1, 0x93, 0x7A, 0x01,  // ...=..z.
                /* 17D8 */  0x7E, 0x2A, 0x67, 0x93, 0x02, 0xEB, 0x70, 0x7D,  // ~*g...p}
                /* 17E0 */  0x4C, 0x01, 0xCE, 0x61, 0x0E, 0x04, 0x28, 0xF9,  // L..a..(.
                /* 17E8 */  0x07, 0x02, 0x0A, 0xE2, 0xAB, 0x1F, 0xB0, 0xFA,  // ........
                /* 17F0 */  0xFF, 0xDF, 0x47, 0x81, 0x49, 0x98, 0x73, 0x03,  // ..G.I.s.
                /* 17F8 */  0xFA, 0xE8, 0xEC, 0xCB, 0x04, 0x9C, 0xC3, 0x0C,  // ........
                /* 1800 */  0xF0, 0x3B, 0x9D, 0xE3, 0x0F, 0x33, 0xC0, 0xE3,  // .;...3..
                /* 1808 */  0x49, 0xE0, 0xC3, 0x0C, 0xB8, 0xC0, 0x7D, 0x98,  // I.....}.
                /* 1810 */  0x01, 0xAE, 0x82, 0x2F, 0x7D, 0xA0, 0x3B, 0xC8,  // .../}.;.
                /* 1818 */  0xB3, 0xFF, 0x3F, 0x8A, 0x2F, 0x06, 0x3E, 0xB9,  // ..?./.>.
                /* 1820 */  0x70, 0x9C, 0xD3, 0x7A, 0x3A, 0xE0, 0x30, 0x81,  // p..z:.0.
                /* 1828 */  0xDF, 0x0E, 0xD8, 0x91, 0xC3, 0xE2, 0xEF, 0x7C,  // .......|
                /* 1830 */  0x68, 0xB9, 0x67, 0x19, 0xC8, 0xB7, 0x1C, 0x4F,  // h.g....O
                /* 1838 */  0xC7, 0x03, 0x78, 0x5E, 0xF0, 0x9D, 0x04, 0x77,  // ..x^...w
                /* 1840 */  0x98, 0x01, 0xD8, 0xF8, 0xFF, 0x3F, 0xCC, 0x00,  // .....?..
                /* 1848 */  0x36, 0x6F, 0x13, 0x30, 0x0E, 0x33, 0x80, 0x39,  // 6o.0.3.9
                /* 1850 */  0x11, 0x87, 0x19, 0xD0, 0x99, 0x38, 0xCC, 0x80,  // .....8..
                /* 1858 */  0xF4, 0xFF, 0x7F, 0x98, 0x01, 0xF3, 0x4D, 0xC3,  // ......M.
                /* 1860 */  0x87, 0x19, 0xE0, 0x00, 0xFD, 0x74, 0x80, 0xB9,  // .....t..
                /* 1868 */  0xCC, 0xF8, 0x0A, 0x82, 0xB9, 0x73, 0x98, 0x60,  // .....s.`
                /* 1870 */  0xBC, 0x77, 0x83, 0x8E, 0x33, 0x7C, 0x28, 0xBE,  // .w..3|(.
                /* 1878 */  0xC6, 0x7B, 0x14, 0x6C, 0xFC, 0xEF, 0x7D, 0x46,  // .{.l..}F
                /* 1880 */  0xF1, 0x01, 0x20, 0xFE, 0xFB, 0x80, 0x43, 0xDD,  // .. ...C.
                /* 1888 */  0xE6, 0x51, 0x71, 0x28, 0x74, 0xCE, 0x00, 0x1C,  // .Qq(t...
                /* 1890 */  0xDC, 0xE6, 0xC1, 0x79, 0xCE, 0x80, 0x33, 0x57,  // ...y..3W
                /* 1898 */  0x18, 0xF7, 0x78, 0xE0, 0xF0, 0xFF, 0x3F, 0x67,  // ..x...?g
                /* 18A0 */  0x00, 0xEB, 0xD0, 0x10, 0x3A, 0x67, 0x80, 0x4B,  // ....:g.K
                /* 18A8 */  0xC5, 0x39, 0x03, 0xE8, 0x8A, 0x3C, 0x67, 0x80,  // .9...<g.
                /* 18B0 */  0xEE, 0x68, 0xCA, 0x60, 0xD8, 0xC5, 0xD4, 0x73,  // .h.`...s
                /* 18B8 */  0x7F, 0xBE, 0x60, 0x42, 0x4F, 0x5F, 0xA8, 0x21,  // ..`BO_.!
                /* 18C0 */  0x58, 0xEA, 0x05, 0x1E, 0x71, 0x47, 0x80, 0x21,  // X...qG.!
                /* 18C8 */  0xEF, 0xD8, 0x85, 0x12, 0x06, 0x23, 0x59, 0x37,  // .....#Y7
                /* 18D0 */  0x77, 0x94, 0x90, 0x9B, 0x3B, 0x05, 0xF1, 0xCD,  // w...;...
                /* 18D8 */  0x1D, 0xD8, 0xFC, 0xFF, 0x6F, 0xEE, 0x80, 0xF1,  // ....o...
                /* 18E0 */  0x1C, 0xE7, 0x10, 0xF4, 0xD0, 0x7C, 0x27, 0x80,  // .....|'.
                /* 18E8 */  0x71, 0x66, 0x07, 0x66, 0xA7, 0x10, 0xEC, 0x99,  // qf.f....
                /* 18F0 */  0x1D, 0xF8, 0xFF, 0xFF, 0xCF, 0xEC, 0x80, 0xC5,  // ........
                /* 18F8 */  0x43, 0x0C, 0xF8, 0xC6, 0xE9, 0x43, 0x0C, 0xE0,  // C....C..
                /* 1900 */  0xE4, 0xCC, 0xCE, 0x0F, 0x31, 0xF0, 0x92, 0xAE,  // ....1...
                /* 1908 */  0x53, 0x87, 0x18, 0xCE, 0xE1, 0x9C, 0x0F, 0x05,  // S.......
                /* 1910 */  0x4D, 0x3D, 0xFC, 0x31, 0xF9, 0x46, 0x7A, 0x82,  // M=.1.Fz.
                /* 1918 */  0x7D, 0x4E, 0x40, 0xE3, 0xB0, 0x66, 0x24, 0x9D,  // }N@..f$.
                /* 1920 */  0x05, 0x8E, 0xF1, 0xE9, 0xC0, 0xB9, 0xCE, 0x2F,  // ......./
                /* 1928 */  0xF4, 0xCC, 0xE0, 0x44, 0x14, 0xCA, 0x73, 0x76,  // ...D..sv
                /* 1930 */  0x40, 0x25, 0x30, 0xF0, 0xFF, 0x87, 0x63, 0x20,  // @%0...c 
                /* 1938 */  0x1E, 0xBE, 0x8F, 0x31, 0x00, 0x77, 0xAE, 0x28,  // ...1.w.(
                /* 1940 */  0x80, 0xB5, 0xFF, 0xFF, 0x9D, 0x14, 0x78, 0x5C,  // ......x\
                /* 1948 */  0x51, 0x80, 0x47, 0xF0, 0x2B, 0x0A, 0xE8, 0x6C,  // Q.G.+..l
                /* 1950 */  0x5C, 0x51, 0x80, 0xEE, 0x00, 0x5F, 0x51, 0xC0,  // \Q..._Q.
                /* 1958 */  0x72, 0x2B, 0xE1, 0x83, 0x78, 0x2C, 0xE1, 0xC7,  // r+..x,..
                /* 1960 */  0x4D, 0x76, 0x2D, 0xC1, 0x5C, 0x52, 0x58, 0xEC,  // Mv-.\RX.
                /* 1968 */  0x7B, 0x26, 0x8A, 0xC3, 0xA1, 0xEF, 0x99, 0x88,  // {&......
                /* 1970 */  0x5B, 0x38, 0x3F, 0xB5, 0xD8, 0x38, 0xB4, 0xA6,  // [8?..8..
                /* 1978 */  0xE8, 0xCB, 0xA7, 0x09, 0x86, 0xBC, 0x69, 0xA2,  // ......i.
                /* 1980 */  0xE2, 0x51, 0x28, 0xDC, 0xE9, 0x01, 0x75, 0xDB,  // .Q(...u.
                /* 1988 */  0xF4, 0x7D, 0x93, 0xDF, 0x34, 0xC1, 0xF1, 0xFF,  // .}..4...
                /* 1990 */  0xBF, 0x69, 0x02, 0xF7, 0x70, 0xD7, 0x14, 0xF4,  // .i..p...
                /* 1998 */  0x38, 0x3C, 0x5B, 0x8E, 0xFC, 0x12, 0xE0, 0x7B,  // 8<[....{
                /* 19A0 */  0x8A, 0xEF, 0x03, 0x36, 0x0F, 0x49, 0x42, 0x9C,  // ...6.IB.
                /* 19A8 */  0x54, 0xE8, 0xC0, 0xC0, 0x75, 0x54, 0xC1, 0x5D,  // T...uT.]
                /* 19B0 */  0x39, 0xE1, 0x5E, 0x55, 0xC0, 0x75, 0xD6, 0x00,  // 9.^U.u..
                /* 19B8 */  0xDE, 0x63, 0xF1, 0x59, 0x03, 0xF8, 0xFC, 0xFF,  // .c.Y....
                /* 19C0 */  0xCF, 0x1A, 0xC0, 0xE1, 0xA2, 0x0C, 0xE3, 0x7C,  // .......|
                /* 19C8 */  0xE5, 0xD3, 0x05, 0xEE, 0xAC, 0xC1, 0x12, 0xDC,  // ........
                /* 19D0 */  0x39, 0x51, 0x1C, 0xD6, 0x7F, 0xE7, 0x44, 0x9C,  // 9Q....D.
                /* 19D8 */  0x35, 0x60, 0xEA, 0xBD, 0x75, 0xA2, 0x94, 0xC2,  // 5`..u...
                /* 19E0 */  0x48, 0xE7, 0xAD, 0x13, 0xA5, 0xEC, 0x9A, 0x45,  // H......E
                /* 19E8 */  0x41, 0x7C, 0xEB, 0x04, 0x78, 0xF3, 0xFF, 0x3F,  // A|..x..?
                /* 19F0 */  0x65, 0xF0, 0x60, 0x43, 0x43, 0xCF, 0xC2, 0x67,  // e.`CC..g
                /* 19F8 */  0x12, 0x98, 0x83, 0x03, 0x46, 0x07, 0x05, 0xDF,  // ....F...
                /* 1A00 */  0xC5, 0x00, 0xEB, 0xC7, 0x4F, 0xE0, 0x7E, 0xA1,  // ....O.~.
                /* 1A08 */  0xF9, 0xFF, 0xBF, 0xD0, 0x80, 0xCD, 0xC8, 0x85,  // ........
                /* 1A10 */  0x06, 0xD0, 0x72, 0xFC, 0xE4, 0x17, 0x1A, 0xF8,  // ..r.....
                /* 1A18 */  0x81, 0x0F, 0xA0, 0x28, 0x51, 0x10, 0x8A, 0xF9,  // ...(Q...
                /* 1A20 */  0x54, 0xD0, 0xFD, 0x86, 0x4D, 0xC3, 0xDA, 0x07,  // T...M...
                /* 1A28 */  0x21, 0x58, 0xCF, 0xE6, 0x59, 0xC3, 0x77, 0x1A,  // !X..Y.w.
                /* 1A30 */  0x9F, 0x47, 0x3D, 0x27, 0x46, 0x30, 0xD2, 0x11,  // .G='F0..
                /* 1A38 */  0x14, 0x15, 0x86, 0x42, 0xE1, 0x8F, 0x03, 0x14,  // ...B....
                /* 1A40 */  0xCE, 0x71, 0xCF, 0x0F, 0x14, 0xC4, 0x80, 0xCE,  // .q......
                /* 1A48 */  0x72, 0x7E, 0x40, 0x9F, 0x36, 0x3C, 0x11, 0xDC,  // r~@.6<..
                /* 1A50 */  0x99, 0xE0, 0x0D, 0xE4, 0x00, 0x83, 0x3C, 0x31,  // ......<1
                /* 1A58 */  0xB0, 0x33, 0x0D, 0x30, 0x3C, 0x3E, 0xB0, 0xD3,  // .3.0<>..
                /* 1A60 */  0x07, 0x9C, 0xFF, 0xFF, 0xE9, 0x03, 0x8C, 0xD7,  // ........
                /* 1A68 */  0x38, 0x0F, 0x97, 0x07, 0xB8, 0xCB, 0x51, 0x10,  // 8.....Q.
                /* 1A70 */  0xDF, 0xE5, 0x80, 0xEB, 0x68, 0x7C, 0xFA, 0x00,  // ....h|..
                /* 1A78 */  0xDF, 0xB8, 0xE0, 0x9C, 0x0A, 0x70, 0x77, 0x05,  // .....pw.
                /* 1A80 */  0xDC, 0xFD, 0x13, 0xF0, 0xB6, 0x6C, 0x1F, 0x52,  // .....l.R
                /* 1A88 */  0xC0, 0x75, 0xA7, 0xFA, 0xFF, 0x3F, 0xA4, 0x00,  // .u...?..
                /* 1A90 */  0x5B, 0xC1, 0x97, 0x38, 0xD0, 0x9D, 0x1D, 0x7C,  // [..8...|
                /* 1A98 */  0x30, 0xE0, 0xB7, 0x6E, 0xC3, 0xBD, 0x84, 0x1A,  // 0..n....
                /* 1AA0 */  0xF5, 0xC1, 0x84, 0xDD, 0x54, 0x7C, 0x3A, 0xE0,  // ....T|:.
                /* 1AA8 */  0x07, 0x15, 0x96, 0x68, 0xBD, 0x3A, 0xA8, 0xE0,  // ...h.:..
                /* 1AB0 */  0x72, 0xBC, 0xAC, 0x74, 0x6E, 0x61, 0x07, 0x15,  // r..tna..
                /* 1AB8 */  0x30, 0x68, 0x86, 0xD5, 0x41, 0x85, 0xAB, 0x85,  // 0h..A...
                /* 1AC0 */  0x91, 0xD6, 0x07, 0x80, 0x8E, 0x1A, 0x5C, 0xDD,  // ......\.
                /* 1AC8 */  0x8D, 0x8E, 0x82, 0xF8, 0x42, 0xE2, 0xAB, 0x1C,  // ....B...
                /* 1AD0 */  0x60, 0xF2, 0xFF, 0x7F, 0x95, 0x03, 0xC6, 0x39,  // `......9
                /* 1AD8 */  0xC6, 0x8F, 0x86, 0xF1, 0xC9, 0xC5, 0x97, 0x23,  // .......#
                /* 1AE0 */  0x8F, 0xEC, 0xC9, 0xE0, 0x5D, 0x82, 0xCD, 0x1E,  // ....]...
                /* 1AE8 */  0xAC, 0xE7, 0x03, 0xCF, 0x1E, 0x6C, 0x57, 0x23,  // .....lW#
                /* 1AF0 */  0xE0, 0x88, 0xE4, 0xAB, 0x11, 0xD8, 0x0E, 0x12,  // ........
                /* 1AF8 */  0x3E, 0xDB, 0x80, 0x67, 0x54, 0x60, 0x3D, 0x31,  // >..gT`=1
                /* 1B00 */  0x78, 0x54, 0xFE, 0xFF, 0xDF, 0x9F, 0x80, 0xEF,  // xT......
                /* 1B08 */  0x65, 0x10, 0x70, 0x70, 0xF1, 0xF1, 0xC5, 0x08,  // e.pp....
                /* 1B10 */  0xF0, 0x34, 0x68, 0x5F, 0x8C, 0x80, 0xDB, 0xFF,  // .4h_....
                /* 1B18 */  0xFF, 0x62, 0x04, 0xDE, 0xCB, 0x20, 0xBF, 0x18,  // .b... ..
                /* 1B20 */  0x81, 0x2F, 0xD0, 0x61, 0x1F, 0x75, 0x04, 0x70,  // ./.a.u.p
                /* 1B28 */  0xB0, 0xC3, 0x3E, 0xC2, 0x2A, 0x82, 0x2E, 0x06,  // ..>.*...
                /* 1B30 */  0x2C, 0xD0, 0x41, 0x1F, 0x15, 0x85, 0x42, 0x41,  // ,.A...BA
                /* 1B38 */  0x4E, 0x0F, 0x28, 0xE9, 0x70, 0x14, 0xC4, 0x07,  // N.(.p...
                /* 1B40 */  0x7D, 0xC0, 0x4F, 0x10, 0x60, 0xD4, 0xB8, 0x7C,  // }.O.`..|
                /* 1B48 */  0x18, 0xF0, 0x4C, 0x31, 0x17, 0x3E, 0x60, 0x78,  // ..L1.>`x
                /* 1B50 */  0x1E, 0xF0, 0xF1, 0xC0, 0xA3, 0xEA, 0xF9, 0x84,  // ........
                /* 1B58 */  0x01, 0xF1, 0xFF, 0x7F, 0xC2, 0x00, 0xE7, 0x4D,  // .......M
                /* 1B60 */  0xD3, 0x27, 0x0C, 0x70, 0x49, 0x39, 0x61, 0x00,  // .'.pI9a.
                /* 1B68 */  0x5D, 0x79, 0x37, 0x39, 0xD0, 0x9D, 0x0A, 0xF8,  // ]y79....
                /* 1B70 */  0xC5, 0xC2, 0xD2, 0x4E, 0xF6, 0xA8, 0x91, 0x5B,  // ...N...[
                /* 1B78 */  0xE2, 0xC9, 0x1E, 0x71, 0x3D, 0xC0, 0x48, 0x3B,  // ...q=.H;
                /* 1B80 */  0xD5, 0xA3, 0x44, 0xC1, 0x48, 0xD2, 0xA9, 0x1E,  // ..D.H...
                /* 1B88 */  0x25, 0xE2, 0xE6, 0x4A, 0x41, 0x7C, 0xAA, 0x07,  // %..JA|..
                /* 1B90 */  0x1C, 0xFD, 0xFF, 0xAF, 0x6E, 0x80, 0x9B, 0x0C,  // ....n...
                /* 1B98 */  0x07, 0x10, 0xB4, 0x8A, 0x03, 0x08, 0xF2, 0xE2,  // ........
                /* 1BA0 */  0x06, 0xCC, 0x8E, 0x1F, 0xD8, 0xAB, 0x3C, 0x60,  // ......<`
                /* 1BA8 */  0xF7, 0xFF, 0x7F, 0xDC, 0x02, 0x9E, 0xA7, 0x17,  // ........
                /* 1BB0 */  0xF0, 0x59, 0x39, 0xBD, 0x00, 0x5A, 0x8E, 0x5B,  // .Y9..Z.[
                /* 1BB8 */  0xFC, 0xF4, 0x82, 0x8B, 0x7A, 0xCA, 0x42, 0x71,  // ....z.Bq
                /* 1BC0 */  0x38, 0xE8, 0x29, 0x0B, 0x81, 0xEB, 0x09, 0x78,  // 8.)....x
                /* 1BC8 */  0x4A, 0x67, 0x57, 0xE7, 0x39, 0x40, 0xC3, 0x7B,  // JgW.9@.{
                /* 1BD0 */  0xB1, 0x8F, 0xE4, 0xE3, 0x16, 0x3B, 0x69, 0xF1,  // .....;i.
                /* 1BD8 */  0x48, 0x14, 0x3A, 0x6D, 0xF9, 0xE0, 0xC0, 0x23,  // H.:m...#
                /* 1BE0 */  0xC0, 0x51, 0x10, 0x9F, 0xB4, 0x80, 0xDF, 0xFF,  // .Q......
                /* 1BE8 */  0xFF, 0xA4, 0x05, 0xFE, 0x40, 0x27, 0x13, 0xF4,  // ....@'..
                /* 1BF0 */  0x38, 0x3C, 0x5B, 0x98, 0xA7, 0x2D, 0xC0, 0x5C,  // 8<[..-.\
                /* 1BF8 */  0xF0, 0x03, 0x06, 0xE8, 0xB4, 0x1C, 0x30, 0x80,  // ......0.
                /* 1C00 */  0xEE, 0x00, 0x9F, 0xB6, 0xC0, 0x76, 0x32, 0xE0,  // .....v2.
                /* 1C08 */  0xFF, 0xFF, 0x93, 0x81, 0x71, 0xDE, 0x0C, 0x70,  // ....q..p
                /* 1C10 */  0x47, 0x43, 0x26, 0xFA, 0xC8, 0x85, 0xE2, 0xB0,  // GC&.....
                /* 1C18 */  0xE4, 0x23, 0x17, 0xE2, 0x9E, 0x00, 0xF3, 0xEC,  // .#......
                /* 1C20 */  0xE5, 0x63, 0x17, 0x17, 0x07, 0x23, 0x69, 0xC7,  // .c...#i.
                /* 1C28 */  0x2E, 0x94, 0x98, 0x63, 0x17, 0x05, 0xF1, 0xB1,  // ...c....
                /* 1C30 */  0x0B, 0xE0, 0xCF, 0xE9, 0xDA, 0xA7, 0x11, 0xDC,  // ........
                /* 1C38 */  0x2C, 0x7C, 0x2B, 0x80, 0x39, 0x7F, 0xD8, 0xFF,  // ,|+.9...
                /* 1C40 */  0xFF, 0xA3, 0x17, 0xC0, 0xC7, 0xA3, 0x0C, 0xF8,  // ........
                /* 1C48 */  0xBC, 0x1C, 0x65, 0x40, 0xFF, 0xFF, 0x3F, 0xCA,  // ..e@..?.
                /* 1C50 */  0x00, 0xAF, 0xA3, 0x17, 0x3F, 0xCA, 0xC0, 0x3F,  // ....?..?
                /* 1C58 */  0x7F, 0xC1, 0x9C, 0x4A, 0x85, 0x43, 0x17, 0x46,  // ...J.C.F
                /* 1C60 */  0x9F, 0x07, 0x00, 0x72, 0x83, 0x66, 0xF8, 0xC7,  // ...r.f..
                /* 1C68 */  0xF2, 0xFC, 0x05, 0xD8, 0x1C, 0x17, 0x6E, 0x1C,  // ......n.
                /* 1C70 */  0x9E, 0x2D, 0xCC, 0xF3, 0x17, 0xB0, 0xFA, 0xFF,  // .-......
                /* 1C78 */  0x9F, 0x32, 0x00, 0x27, 0x70, 0x3E, 0x7F, 0x01,  // .2.'p>..
                /* 1C80 */  0x6E, 0x4E, 0x06, 0x0C, 0xC4, 0x37, 0x03, 0x9F,  // nN...7..
                /* 1C88 */  0xF4, 0x31, 0x47, 0x03, 0xDF, 0x32, 0x2C, 0x64,  // .1G..2,d
                /* 1C90 */  0xAD, 0x3A, 0x65, 0xE0, 0x64, 0xFC, 0x9D, 0x74,  // .:e.d..t
                /* 1C98 */  0xE8, 0x60, 0xF7, 0x04, 0x98, 0xB1, 0xCF, 0x5F,  // .`....._
                /* 1CA0 */  0xA8, 0xC0, 0xE7, 0x2F, 0xA0, 0xFA, 0xFF, 0x3F,  // .../...?
                /* 1CA8 */  0x7F, 0x01, 0xCE, 0xC7, 0x8F, 0x9B, 0x85, 0x6F,  // .......o
                /* 1CB0 */  0x05, 0x30, 0xCF, 0x5F, 0xC0, 0x6C, 0xFE, 0xD8,  // .0._.l..
                /* 1CB8 */  0xF3, 0x17, 0xB0, 0x08, 0x75, 0xE4, 0x41, 0xC5,  // ....u.A.
                /* 1CC0 */  0x38, 0xF2, 0x50, 0x10, 0x1F, 0x79, 0xE0, 0xFE,  // 8.P..y..
                /* 1CC8 */  0xFF, 0xCF, 0x5F, 0x80, 0x83, 0xF3, 0x83, 0xC7,  // .._.....
                /* 1CD0 */  0x85, 0x93, 0x74, 0x7E, 0x80, 0x02, 0x5E, 0x3C,  // ..t~..^<
                /* 1CD8 */  0xB6, 0xAE, 0x22, 0x3E, 0x66, 0xF8, 0x5C, 0x72,  // ..">f.\r
                /* 1CE0 */  0x6A, 0x1E, 0x1A, 0xB8, 0x6F, 0x14, 0x3E, 0xF4,  // j...o.>.
                /* 1CE8 */  0x00, 0x9E, 0xCC, 0x1C, 0x7A, 0x80, 0xDA, 0xFF,  // ....z...
                /* 1CF0 */  0xFF, 0xA4, 0x06, 0x1C, 0x0E, 0x3D, 0xF0, 0x57,  // .....=.W
                /* 1CF8 */  0xEA, 0x43, 0x0F, 0x3F, 0x14, 0x38, 0xF4, 0x49,  // .C.?.8.I
                /* 1D00 */  0x0D, 0xD2, 0x4C, 0x42, 0x1B, 0x22, 0xC1, 0x98,  // ..LB."..
                /* 1D08 */  0x07, 0x35, 0x54, 0x40, 0x0A, 0xC5, 0x3B, 0x66,  // .5T@..;f
                /* 1D10 */  0xA0, 0xCE, 0x6A, 0x06, 0x33, 0x88, 0x0F, 0x6A,  // ..j.3..j
                /* 1D18 */  0x80, 0x9F, 0x78, 0xA7, 0x1E, 0x34, 0x8B, 0x71,  // ..x..4.q
                /* 1D20 */  0xCF, 0xEA, 0x48, 0x63, 0x9E, 0x76, 0xCD, 0x37,  // ..Hc.v.7
                /* 1D28 */  0x3E, 0x72, 0x2E, 0xF0, 0xC0, 0x8E, 0x17, 0x13,  // >r......
                /* 1D30 */  0xE2, 0x5C, 0x41, 0x47, 0x06, 0xAE, 0x9B, 0x0F,  // .\AG....
                /* 1D38 */  0x87, 0xF1, 0x81, 0x0D, 0xEE, 0xD1, 0x07, 0xCE,  // ........
                /* 1D40 */  0xFF, 0xFF, 0xE8, 0x03, 0xEF, 0xAC, 0x01, 0x3C,  // .......<
                /* 1D48 */  0x24, 0x2C, 0x47, 0x67, 0x0D, 0x70, 0x5D, 0x82,  // $,Gg.p].
                /* 1D50 */  0x7C, 0xD6, 0x00, 0xAE, 0xA8, 0x3E, 0xAF, 0x81,  // |....>..
                /* 1D58 */  0xFB, 0xC2, 0xEB, 0x43, 0x02, 0x0C, 0xB0, 0x10,  // ...C....
                /* 1D60 */  0x2F, 0x09, 0xEC, 0xC0, 0x61, 0xB9, 0x07, 0x0E,  // /...a...
                /* 1D68 */  0xB4, 0xC4, 0x87, 0x93, 0x0E, 0x6D, 0x30, 0x4E,  // .....m0N
                /* 1D70 */  0x0C, 0x18, 0x51, 0x87, 0x35, 0x7A, 0x84, 0xB2,  // ..Q.5z..
                /* 1D78 */  0x1C, 0x0A, 0x89, 0x39, 0x70, 0xA0, 0xE2, 0x9F,  // ...9p...
                /* 1D80 */  0x11, 0x28, 0x88, 0x01, 0x9D, 0xED, 0x24, 0x01,  // .(....$.
                /* 1D88 */  0xCA, 0x1B, 0x19, 0xEE, 0xFF, 0x7F, 0x23, 0x03,  // ......#.
                /* 1D90 */  0x17, 0x8C, 0x0F, 0x6F, 0x30, 0xEF, 0x11, 0xE0,  // ...o0...
                /* 1D98 */  0x3A, 0x3B, 0x03, 0x26, 0x8F, 0xA1, 0xC0, 0xFD,  // :;.&....
                /* 1DA0 */  0x1C, 0x02, 0x3E, 0x37, 0xE7, 0x10, 0x28, 0xFF,  // ..>7..(.
                /* 1DA8 */  0xFF, 0x73, 0x08, 0xE0, 0xE0, 0x08, 0x05, 0xEF,  // .s......
                /* 1DB0 */  0x1C, 0x02, 0x8E, 0xD0, 0x5A, 0x07, 0xC2, 0xE2,  // ....Z...
                /* 1DB8 */  0x8C, 0x59, 0x62, 0x57, 0x4C, 0x61, 0x7C, 0xAE,  // .YbWLa|.
                /* 1DC0 */  0xF0, 0x21, 0x01, 0x3F, 0xEC, 0xA3, 0x3E, 0xD8,  // .!.?..>.
                /* 1DC8 */  0xE3, 0x62, 0x27, 0x39, 0xC3, 0xF1, 0x13, 0x81,  // .b'9....
                /* 1DD0 */  0xC7, 0xD5, 0xFC, 0x54, 0x34, 0x8A, 0xD3, 0xF7,  // ...T4...
                /* 1DD8 */  0xC4, 0x42, 0x32, 0x69, 0x03, 0x44, 0x49, 0x39,  // .B2i.DI9
                /* 1DE0 */  0xD5, 0x91, 0x09, 0x9D, 0x5C, 0xED, 0x88, 0xBA,  // ....\...
                /* 1DE8 */  0x3E, 0x18, 0x26, 0x81, 0xCF, 0x02, 0x0C, 0x8D,  // >.&.....
                /* 1DF0 */  0x43, 0x63, 0x87, 0xE1, 0x4B, 0x42, 0xB0, 0x83,  // Cc..KB..
                /* 1DF8 */  0x78, 0xDF, 0xF6, 0x59, 0x82, 0x4D, 0xE8, 0x5C,  // x..Y.M.\
                /* 1E00 */  0xCB, 0xBD, 0x3C, 0xE8, 0x8E, 0x17, 0x35, 0x46,  // ..<...5F
                /* 1E08 */  0x73, 0x50, 0x24, 0xC0, 0xD0, 0x41, 0x73, 0x70,  // sP$..Asp
                /* 1E10 */  0x38, 0x83, 0xB7, 0x3E, 0x36, 0xE2, 0xE7, 0x30,  // 8..>6..0
                /* 1E18 */  0xCF, 0x99, 0x01, 0xC6, 0x8B, 0xF1, 0x60, 0x73,  // ......`s
                /* 1E20 */  0x7C, 0x0C, 0xB4, 0x67, 0x1C, 0x69, 0x04, 0xD4,  // |..g.i..
                /* 1E28 */  0xCD, 0xCF, 0xF0, 0xFC, 0xB6, 0x10, 0xEA, 0xD2,  // ........
                /* 1E30 */  0x8F, 0xCE, 0xD8, 0x91, 0x18, 0xD0, 0x33, 0xC5,  // ......3.
                /* 1E38 */  0x03, 0xC0, 0x33, 0xC9, 0xFF, 0xFF, 0x81, 0x32,  // ..3....2
                /* 1E40 */  0xC1, 0x59, 0x1C, 0x10, 0xE6, 0x88, 0xE0, 0x09,  // .Y......
                /* 1E48 */  0xBC, 0x5C, 0xF8, 0xA8, 0xC0, 0xDC, 0x0B, 0xF0,  // .\......
                /* 1E50 */  0x76, 0x26, 0xD0, 0xD8, 0x8E, 0x2A, 0xC2, 0x59,  // v&...*.Y
                /* 1E58 */  0x3C, 0x51, 0xC4, 0x69, 0x4B, 0x80, 0xB5, 0xA3,  // <Q.iK...
                /* 1E60 */  0x81, 0x20, 0x02, 0x45, 0x39, 0x42, 0xC3, 0xC4,  // . .E9B..
                /* 1E68 */  0x88, 0x72, 0x0A, 0x91, 0xCE, 0x31, 0x44, 0x28,  // .r...1D(
                /* 1E70 */  0x63, 0x19, 0x28, 0x6C, 0x8C, 0x93, 0x8B, 0x10,  // c.(l....
                /* 1E78 */  0x39, 0x78, 0xB0, 0x37, 0xCD, 0xF6, 0x4F, 0x5D,  // 9x.7..O]
                /* 1E80 */  0xEC, 0x5C, 0xA0, 0xF3, 0x8C, 0x23, 0x8D, 0x06,  // .\...#..
                /* 1E88 */  0x75, 0xDE, 0xE6, 0xE7, 0x82, 0x67, 0x05, 0x5F,  // u....g._
                /* 1E90 */  0x13, 0x7C, 0x51, 0x64, 0x77, 0xF7, 0xA3, 0xF4,  // .|Qdw...
                /* 1E98 */  0xF0, 0xD9, 0x91, 0xC4, 0x27, 0x13, 0x38, 0xAE,  // ....'.8.
                /* 1EA0 */  0x01, 0x75, 0x3D, 0x78, 0xB8, 0x00, 0xCB, 0xD1,  // .u=x....
                /* 1EA8 */  0x04, 0xFE, 0x78, 0x7C, 0x1A, 0xF0, 0x09, 0xC0,  // ..x|....
                /* 1EB0 */  0x04, 0x96, 0x3F, 0x08, 0xD4, 0xC8, 0x0C, 0xED,  // ..?.....
                /* 1EB8 */  0x31, 0xBF, 0x05, 0xB0, 0xB3, 0xC2, 0x61, 0xB1,  // 1.....a.
                /* 1EC0 */  0x63, 0x8F, 0x0F, 0x33, 0x1E, 0x0F, 0xF8, 0x4F,  // c..3...O
                /* 1EC8 */  0xFD, 0x6F, 0x05, 0x11, 0xDE, 0x1C, 0x3C, 0x5F,  // .o....<_
                /* 1ED0 */  0x1F, 0x1F, 0x7C, 0x72, 0x01, 0xC3, 0x98, 0x7C,  // ..|r...|
                /* 1ED8 */  0x4A, 0xF0, 0x79, 0x01, 0x77, 0x5D, 0xC0, 0x13,  // J.y.w]..
                /* 1EE0 */  0x58, 0xE4, 0x41, 0x02, 0x3D, 0x06, 0x7E, 0x10,  // X.A.=.~.
                /* 1EE8 */  0x38, 0x81, 0xFF, 0xFF, 0x73, 0x8C, 0xC7, 0xF0,  // 8...s...
                /* 1EF0 */  0x2A, 0xE3, 0x69, 0x1C, 0x92, 0x8F, 0x18, 0x46,  // *.i....F
                /* 1EF8 */  0x88, 0xFF, 0x64, 0xF1, 0xA4, 0xE1, 0xE3, 0xC8,  // ..d.....
                /* 1F00 */  0x69, 0x1C, 0xC4, 0x59, 0xBD, 0x0F, 0x78, 0xD0,  // i..Y..x.
                /* 1F08 */  0x5A, 0x8D, 0xCE, 0x94, 0x56, 0x79, 0xC8, 0x42,  // Z...Vy.B
                /* 1F10 */  0x1D, 0x41, 0xAC, 0xE7, 0x90, 0x85, 0x98, 0x12,  // .A......
                /* 1F18 */  0xEE, 0xD4, 0xC1, 0x26, 0x10, 0xE7, 0x79, 0x83,  // ...&..y.
                /* 1F20 */  0xA7, 0x3F, 0x1F, 0xD2, 0xC1, 0x3B, 0x37, 0x89,  // .?...;7.
                /* 1F28 */  0x72, 0x8F, 0x89, 0xC2, 0x39, 0xE9, 0x19, 0x88,  // r...9...
                /* 1F30 */  0x82, 0x18, 0xD0, 0x31, 0x20, 0x64, 0xE5, 0x3C,  // ...1 d.<
                /* 1F38 */  0x80, 0x1E, 0xC5, 0x71, 0x3C, 0x39, 0xF8, 0xD4,  // ...q<9..
                /* 1F40 */  0xF1, 0x58, 0xC4, 0xCE, 0xD9, 0xC0, 0xF0, 0x76,  // .X.....v
                /* 1F48 */  0xF1, 0x90, 0xE2, 0xBB, 0x15, 0xB0, 0xB8, 0x9C,  // ........
                /* 1F50 */  0x79, 0xAE, 0x3C, 0xF0, 0x5C, 0x29, 0x88, 0xE7,  // y.<.\)..
                /* 1F58 */  0xEA, 0x30, 0x77, 0x2B, 0xF4, 0x5D, 0xC6, 0x73,  // .0w+.].s
                /* 1F60 */  0xF5, 0x91, 0xE7, 0x54, 0x3D, 0x58, 0x7E, 0xB5,  // ...T=X~.
                /* 1F68 */  0x02, 0x4E, 0xFF, 0xFF, 0xAB, 0x15, 0xB0, 0xBC,  // .N......
                /* 1F70 */  0xE0, 0xF9, 0x6A, 0x05, 0xAE, 0xBB, 0x25, 0xBF,  // ..j...%.
                /* 1F78 */  0x5A, 0x01, 0xCF, 0x3B, 0xD1, 0xAB, 0x15, 0xD8,  // Z..;....
                /* 1F80 */  0xAE, 0x23, 0xFC, 0x38, 0x84, 0x3F, 0x6D, 0x60,  // .#.8.?m`
                /* 1F88 */  0x81, 0xDE, 0xE4, 0x8C, 0x16, 0xC8, 0xA7, 0x20,  // ....... 
                /* 1F90 */  0xDF, 0xB1, 0x3C, 0x06, 0x7E, 0xEC, 0x25, 0x18,  // ..<.~.%.
                /* 1F98 */  0xAF, 0x8D, 0x68, 0x2D, 0x57, 0x10, 0x48, 0x67,  // ..h-W.Hg
                /* 1FA0 */  0x81, 0x97, 0x80, 0x27, 0x04, 0x76, 0x01, 0x01,  // ...'.v..
                /* 1FA8 */  0x46, 0xFF, 0xFF, 0x0B, 0x08, 0xC0, 0xD3, 0xB3,  // F.......
                /* 1FB0 */  0x22, 0xF8, 0x46, 0xED, 0x0B, 0x08, 0x38, 0xFE,  // ".F...8.
                /* 1FB8 */  0xFF, 0x67, 0x45, 0xE0, 0x7D, 0x01, 0x81, 0x77,  // .gE.}..w
                /* 1FC0 */  0xD6, 0x60, 0x20, 0x6F, 0x71, 0xF1, 0x0E, 0x32,  // .` oq..2
                /* 1FC8 */  0xDA, 0xBB, 0xA0, 0xD1, 0x83, 0x3E, 0x4C, 0xF8,  // .....>L.
                /* 1FD0 */  0x38, 0x05, 0xE7, 0x58, 0xCC, 0x8E, 0x53, 0xC0,  // 8..X..S.
                /* 1FD8 */  0xE6, 0x08, 0x81, 0xBB, 0x7D, 0x00, 0xEB, 0xFB,  // ....}...
                /* 1FE0 */  0x03, 0xBB, 0x7D, 0x00, 0xC7, 0xFF, 0xFF, 0xC9,  // ..}.....
                /* 1FE8 */  0x05, 0x7B, 0xFB, 0x00, 0xFE, 0x77, 0x17, 0x76,  // .{...w.v
                /* 1FF0 */  0x9C, 0x02, 0xE6, 0x90, 0x3E, 0x4E, 0x01, 0x4E,  // ....>N.N
                /* 1FF8 */  0xEE, 0xF3, 0xFC, 0x38, 0x05, 0x8C, 0xFE, 0xFF,  // ...8....
                /* 2000 */  0xC7, 0x29, 0xCC, 0x15, 0x04, 0xC6, 0x71, 0x0A,  // .)....q.
                /* 2008 */  0xCC, 0x17, 0x10, 0x80, 0xA9, 0xFF, 0xFF, 0xE3,  // ........
                /* 2010 */  0x14, 0xF0, 0x39, 0x27, 0xFB, 0x38, 0x05, 0x38,  // ..9'.8.8
                /* 2018 */  0xB9, 0x80, 0xC0, 0x3F, 0x4E, 0xC1, 0x55, 0x78,  // ...?N.Ux
                /* 2020 */  0x9C, 0x02, 0xC9, 0xF0, 0x1F, 0xA9, 0x4F, 0xE7,  // ......O.
                /* 2028 */  0x4D, 0xC3, 0xC7, 0x91, 0xE8, 0x6F, 0x1F, 0x80,  // M....o..
                /* 2030 */  0xA7, 0xFF, 0xFF, 0xED, 0x03, 0x60, 0x95, 0x90,  // .....`..
                /* 2038 */  0xDB, 0x07, 0xE8, 0x60, 0xF9, 0xED, 0x03, 0x78,  // ...`...x
                /* 2040 */  0x1E, 0x03, 0x3C, 0x36, 0xF6, 0xFF, 0xBF, 0x7D,  // ..<6...}
                /* 2048 */  0x80, 0xFD, 0xB4, 0xC1, 0x86, 0x61, 0xA8, 0x38,  // .....a.8
                /* 2050 */  0xCF, 0x1B, 0x1C, 0x34, 0xCE, 0xCB, 0x14, 0xF6,  // ...4....
                /* 2058 */  0x02, 0x82, 0xE3, 0xB0, 0x9A, 0xA3, 0x2E, 0xA4,  // ........
                /* 2060 */  0x1B, 0x40, 0x88, 0x47, 0xFE, 0x2E, 0x21, 0x74,  // .@.G..!t
                /* 2068 */  0xFF, 0x00, 0x98, 0xF6, 0xFF, 0xBF, 0x7F, 0x00,  // ........
                /* 2070 */  0x4E, 0xA4, 0xDC, 0x3F, 0x40, 0x77, 0x37, 0xF0,  // N..?@w7.
                /* 2078 */  0xFD, 0x03, 0xB8, 0x8E, 0xDF, 0x67, 0x5D, 0xE0,  // .....g].
                /* 2080 */  0x30, 0xDC, 0x40, 0x0F, 0x53, 0x41, 0x5E, 0x36,  // 0.@.SA^6
                /* 2088 */  0xE2, 0x3D, 0x82, 0xBC, 0x6D, 0xC4, 0x8E, 0x17,  // .=..m...
                /* 2090 */  0xF3, 0x90, 0x1E, 0x43, 0x8C, 0xEE, 0x29, 0x18,  // ...C..).
                /* 2098 */  0xD5, 0x17, 0x10, 0x78, 0x27, 0x2A, 0x18, 0x17,  // ...x'*..
                /* 20A0 */  0x10, 0x30, 0xFE, 0xFF, 0x2F, 0x20, 0x00, 0xFF,  // .0../ ..
                /* 20A8 */  0xFF, 0xFF, 0x17, 0x10, 0xE6, 0xE1, 0x02, 0x02,  // ........
                /* 20B0 */  0x68, 0x39, 0x50, 0xC1, 0xBF, 0x80, 0x80, 0xEB,  // h9P.....
                /* 20B8 */  0xFE, 0x8E, 0x3B, 0x16, 0x58, 0xD5, 0x89, 0x0A,  // ..;.X...
                /* 20C0 */  0xD2, 0x15, 0x18, 0x3B, 0x03, 0xEC, 0x25, 0x04,  // ...;..%.
                /* 20C8 */  0x8C, 0x27, 0x09, 0xDC, 0x25, 0x04, 0x58, 0x5F,  // .'..%.X_
                /* 20D0 */  0x23, 0xD8, 0x25, 0x04, 0xE6, 0xFF, 0xFF, 0x12,  // #.%.....
                /* 20D8 */  0x02, 0x5C, 0x0E, 0x30, 0xB8, 0x4B, 0x08, 0xF0,  // .\.0.K..
                /* 20E0 */  0xBF, 0xC2, 0xB0, 0x4B, 0x08, 0x30, 0x91, 0x71,  // ...K.0.q
                /* 20E8 */  0x09, 0x01, 0x1D, 0xB8, 0x2F, 0x21, 0xC0, 0x75,  // ..../!.u
                /* 20F0 */  0x16, 0x4F, 0x55, 0x60, 0xFD, 0xFF, 0x5F, 0xE1,  // .OU`.._.
                /* 20F8 */  0xE1, 0x1F, 0x41, 0x60, 0x5C, 0x41, 0x60, 0x9D,  // ..A`\A`.
                /* 2100 */  0xA9, 0x60, 0x5C, 0x41, 0x80, 0xCD, 0xB9, 0x0A,  // .`\A....
                /* 2108 */  0xE0, 0xD5, 0xFF, 0xFF, 0x5C, 0x05, 0x8C, 0xAF,  // ....\...
                /* 2110 */  0x20, 0xE0, 0x33, 0x71, 0x05, 0x01, 0xB4, 0x9C,  //  .3q....
                /* 2118 */  0xAB, 0xE0, 0x5F, 0x41, 0xC0, 0x37, 0x52, 0x6B,  // .._A.7Rk
                /* 2120 */  0x3A, 0x55, 0x41, 0x3A, 0xD7, 0xB3, 0x6B, 0x3D,  // :UA:..k=
                /* 2128 */  0xFE, 0xA2, 0x08, 0xCE, 0x43, 0x15, 0x8C, 0xFF,  // ....C...
                /* 2130 */  0xFF, 0xA1, 0x0A, 0xE0, 0xED, 0x45, 0x1E, 0x7C,  // .....E.|
                /* 2138 */  0x2A, 0x6E, 0x20, 0xD0, 0xFE, 0xFF, 0x17, 0x79,  // *n ....y
                /* 2140 */  0xE0, 0x7F, 0xA8, 0x82, 0x7F, 0xDE, 0x60, 0x58,  // ......`X
                /* 2148 */  0xBE, 0x83, 0xF8, 0x0E, 0x10, 0x3E, 0xCC, 0x2B,  // .....>.+
                /* 2150 */  0x07, 0xFE, 0x9E, 0x88, 0xBF, 0x82, 0xF0, 0x53,  // .......S
                /* 2158 */  0x15, 0x8C, 0x2B, 0x08, 0x30, 0x39, 0x54, 0x01,  // ..+.09T.
                /* 2160 */  0x1E, 0xFF, 0xFF, 0x87, 0x2A, 0x80, 0x01, 0x57,  // ....*..W
                /* 2168 */  0x10, 0xF0, 0x8D, 0xD3, 0x57, 0x10, 0xC0, 0xC9,  // ....W...
                /* 2170 */  0xA1, 0x0A, 0xFE, 0x15, 0x04, 0xD6, 0xFF, 0xFF,  // ........
                /* 2178 */  0x0A, 0x02, 0x43, 0xDF, 0x15, 0x04, 0x25, 0x09,  // ..C...%.
                /* 2180 */  0x42, 0x7A, 0x4E, 0x55, 0x50, 0xCF, 0x02, 0xB1,  // BzNUP...
                /* 2188 */  0xCF, 0xF6, 0x09, 0x84, 0x9D, 0xA9, 0x00, 0xD6,  // ........
                /* 2190 */  0xFE, 0xFF, 0x2F, 0x89, 0xC0, 0xF9, 0xA6, 0xE1,  // ../.....
                /* 2198 */  0x73, 0x2F, 0xE0, 0xEC, 0x02, 0x02, 0xE7, 0xC2,  // s/......
                /* 21A0 */  0x81, 0xB9, 0x24, 0xB2, 0xFB, 0x07, 0x9C, 0x23,  // ..$....#
                /* 21A8 */  0x15, 0xBC, 0xFB, 0x07, 0xB8, 0x0F, 0x54, 0xC0,  // ......T.
                /* 21B0 */  0xE3, 0xFF, 0x7F, 0xE8, 0x05, 0x18, 0x6B, 0xE3,  // ......k.
                /* 21B8 */  0xFE, 0x01, 0x64, 0xFE, 0xFF, 0x87, 0x5E, 0x60,  // ..d...^`
                /* 21C0 */  0x7A, 0xFF, 0x00, 0xC7, 0xA1, 0x17, 0x2C, 0x1A,  // z.....,.
                /* 21C8 */  0x61, 0x04, 0xF2, 0xD0, 0x0B, 0xB0, 0xE8, 0xFF,  // a.......
                /* 21D0 */  0x7F, 0xE8, 0x05, 0xBC, 0xEB, 0x38, 0xF4, 0x02,  // .....8..
                /* 21D8 */  0xDA, 0xCE, 0x1B, 0xEC, 0xD0, 0x0B, 0x3C, 0xE6,  // ......<.
                /* 21E0 */  0xF0, 0xFF, 0x7F, 0x05, 0x01, 0x1E, 0x87, 0x2A,  // .......*
                /* 21E8 */  0x80, 0xB7, 0xFF, 0xFF, 0x2B, 0x08, 0x30, 0xF0,  // ....+.0.
                /* 21F0 */  0x71, 0xE8, 0x05, 0xB4, 0x5D, 0x41, 0xC0, 0x73,  // q...]A.s
                /* 21F8 */  0xE8, 0x05, 0xCB, 0x1C, 0x18, 0xD8, 0x19, 0x44,  // .......D
                /* 2200 */  0x3B, 0x56, 0x76, 0xA6, 0x02, 0x2C, 0xFD, 0xFF,  // ;Vv..,..
                /* 2208 */  0x0F, 0xBD, 0x00, 0x07, 0xC7, 0xE2, 0x4B, 0x22,  // ......K"
                /* 2210 */  0xF0, 0xFE, 0xFF, 0x9F, 0xA9, 0x80, 0xCF, 0x85,  // ........
                /* 2218 */  0x03, 0x73, 0xE8, 0x05, 0xD7, 0xFD, 0x03, 0x18,  // .s......
                /* 2220 */  0x1C, 0xA8, 0x00, 0xDE, 0xFC, 0xFF, 0x0F, 0xBD,  // ........
                /* 2228 */  0x80, 0x41, 0x23, 0x87, 0x5E, 0x40, 0xDB, 0xFD,  // .A#.^@..
                /* 2230 */  0x03, 0x1C, 0xCA, 0xCE, 0x53, 0xA0, 0x3A, 0x03,  // ....S.:.
                /* 2238 */  0xC4, 0xA8, 0x78, 0xB4, 0xE4, 0xFE, 0x01, 0xAE,  // ..x.....
                /* 2240 */  0xFF, 0xFF, 0x79, 0x0A, 0xE0, 0xF3, 0x7A, 0x7C,  // ..y...z|
                /* 2248 */  0xFF, 0x00, 0xD7, 0xFF, 0x5F, 0xC9, 0xFD, 0x03,  // ...._...
                /* 2250 */  0xE8, 0x0A, 0x3E, 0x4F, 0x01, 0x9D, 0xDB, 0x06,  // ..>O....
                /* 2258 */  0xE6, 0xF2, 0xC1, 0x24, 0xBE, 0x14, 0x74, 0xF9,  // ...$..t.
                /* 2260 */  0xC0, 0x09, 0x1B, 0xB4, 0x0E, 0x53, 0xF0, 0x2E,  // .....S..
                /* 2268 */  0x1F, 0xB8, 0xDB, 0x8C, 0x8F, 0x07, 0x86, 0x30,  // .......0
                /* 2270 */  0x85, 0x2F, 0x44, 0xC0, 0x9F, 0xC0, 0x17, 0x22,  // ./D...."
                /* 2278 */  0xE0, 0xF8, 0xFF, 0x3F, 0x41, 0x00, 0x87, 0x43,  // ...?A..C
                /* 2280 */  0x88, 0x4F, 0x10, 0x80, 0x93, 0x0B, 0x11, 0x78,  // .O.....x
                /* 2288 */  0x4E, 0x10, 0x78, 0xF1, 0xE7, 0x6F, 0xB4, 0xC0,  // N.x..o..
                /* 2290 */  0xDB, 0x10, 0x24, 0x97, 0x77, 0x57, 0x21, 0x04,  // ..$.wW!.
                /* 2298 */  0x3A, 0x8E, 0xAE, 0xE1, 0x05, 0x15, 0xE9, 0xA8,  // :.......
                /* 22A0 */  0x1F, 0x17, 0x98, 0x14, 0x60, 0xDD, 0x87, 0xB8,  // ....`...
                /* 22A8 */  0x08, 0x0A, 0x89, 0xA0, 0xD1, 0x19, 0x82, 0xC7,  // ........
                /* 22B0 */  0x3E, 0x43, 0x50, 0x10, 0x03, 0x3A, 0xD3, 0x05,  // >CP..:..
                /* 22B8 */  0xCB, 0x63, 0xA1, 0xF7, 0x21, 0x78, 0x09, 0x20,  // .c..!x. 
                /* 22C0 */  0x24, 0xE1, 0x3E, 0x04, 0xF5, 0x04, 0x81, 0xBF,  // $.>.....
                /* 22C8 */  0x18, 0x9C, 0x6C, 0xB1, 0x27, 0x06, 0x7A, 0x2D,  // ..l.'.z-
                /* 22D0 */  0x82, 0x39, 0x4D, 0xE3, 0xFE, 0xFF, 0xDF, 0x23,  // .9M....#
                /* 22D8 */  0xC0, 0x20, 0xEE, 0x58, 0x04, 0x90, 0x48, 0xD2,  // . .X..H.
                /* 22E0 */  0x29, 0x04, 0x74, 0x03, 0xF6, 0x29, 0x04, 0x38,  // ).t..).8
                /* 22E8 */  0xFE, 0xFF, 0x4F, 0x21, 0x3C, 0xC2, 0xB1, 0x08,  // ..O!<...
                /* 22F0 */  0x68, 0xDC, 0x3A, 0x62, 0x35, 0x7F, 0x07, 0x11,  // h.:b5...
                /* 22F8 */  0x6E, 0xAC, 0x78, 0x07, 0xF4, 0x14, 0xEE, 0x93,  // n.x.....
                /* 2300 */  0x07, 0xFE, 0x28, 0x0E, 0xEB, 0x78, 0xA0, 0xE3,  // ..(..x..
                /* 2308 */  0x08, 0x3A, 0xF2, 0xF9, 0x08, 0xD2, 0x71, 0x04,  // .:....q.
                /* 2310 */  0x66, 0xB8, 0x13, 0x12, 0x2A, 0x16, 0x85, 0x42,  // f...*..B
                /* 2318 */  0x1D, 0x47, 0x50, 0x31, 0xE0, 0x28, 0x88, 0x0F,  // .GP1.(..
                /* 2320 */  0x04, 0x8E, 0x72, 0x7D, 0xA4, 0x87, 0x09, 0xFC,  // ..r}....
                /* 2328 */  0xF1, 0xE0, 0x60, 0x7C, 0x63, 0x38, 0xAA, 0x73,  // ..`|c8.s
                /* 2330 */  0xF5, 0x5D, 0x91, 0x9D, 0x90, 0xC0, 0x7D, 0x13,  // .]....}.
                /* 2338 */  0x01, 0x57, 0xB0, 0x33, 0x0B, 0xFA, 0xC4, 0x01,  // .W.3....
                /* 2340 */  0x2F, 0xC4, 0xA1, 0x85, 0x8E, 0x0A, 0x5C, 0xA7,  // /.....\.
                /* 2348 */  0x16, 0xEE, 0x03, 0x9C, 0xC2, 0xF1, 0xFF, 0xFF,  // ........
                /* 2350 */  0xC1, 0x03, 0x3F, 0x38, 0x70, 0x9D, 0x3B, 0x80,  // ..?8p.;.
                /* 2358 */  0xF7, 0x79, 0xCC, 0xE7, 0x0E, 0xC0, 0xC9, 0x61,  // .y.....a
                /* 2360 */  0x0A, 0xFE, 0xB9, 0x03, 0xDC, 0x4A, 0xCF, 0x1D,  // .....J..
                /* 2368 */  0x68, 0x4D, 0xA7, 0x2A, 0x48, 0x63, 0x0F, 0x72,  // hM.*Hc.r
                /* 2370 */  0x5A, 0x46, 0x63, 0xD3, 0x32, 0x96, 0x09, 0x7C,  // ZFc.2..|
                /* 2378 */  0x69, 0x85, 0xF7, 0xFF, 0xBF, 0xB4, 0x02, 0x0C,  // i.......
                /* 2380 */  0x17, 0x73, 0x0F, 0x81, 0xFC, 0xFF, 0xBF, 0x87,  // .s......
                /* 2388 */  0xC0, 0xD0, 0x72, 0x0F, 0x01, 0xBA, 0xE2, 0xAF,  // ..r.....
                /* 2390 */  0x53, 0x40, 0xE3, 0xBC, 0xC1, 0xE1, 0x0E, 0x2D,  // S@.....-
                /* 2398 */  0xC2, 0x6B, 0xA2, 0x51, 0x9E, 0x0B, 0x0C, 0xF5,  // .k.Q....
                /* 23A0 */  0x18, 0xEE, 0x43, 0x07, 0xEE, 0x12, 0x02, 0xF3,  // ..C.....
                /* 23A8 */  0x2E, 0x05, 0xE3, 0x12, 0x02, 0x4C, 0x4E, 0x12,  // .....LN.
                /* 23B0 */  0xB8, 0x4B, 0x08, 0xB0, 0xBE, 0x46, 0xB0, 0x4B,  // .K...F.K
                /* 23B8 */  0x08, 0xF6, 0xFF, 0x7F, 0x09, 0x01, 0x5E, 0x07,  // ......^.
                /* 23C0 */  0x5F, 0xE0, 0x77, 0x09, 0x01, 0xD7, 0xC1, 0x17,  // _.w.....
                /* 23C8 */  0xF8, 0x5C, 0x42, 0xC0, 0xE7, 0xE5, 0x12, 0x02,  // .\B.....
                /* 23D0 */  0x68, 0xB9, 0x6B, 0xF8, 0xFF, 0x7F, 0x09, 0x01,  // h.k.....
                /* 23D8 */  0x2E, 0x99, 0x5E, 0x75, 0xBA, 0x84, 0xF0, 0xCB,  // ..^u....
                /* 23E0 */  0x80, 0x73, 0xAC, 0x5B, 0xA0, 0xEC, 0x22, 0xF0,  // .s.[..".
                /* 23E8 */  0x14, 0xD0, 0xEA, 0x81, 0x41, 0xA7, 0xAC, 0x43,  // ....A..C
                /* 23F0 */  0xF1, 0x24, 0xCE, 0xE1, 0x10, 0x1E, 0xB7, 0x8C,  // .$......
                /* 23F8 */  0xCF, 0xE0, 0x42, 0x05, 0xAA, 0x19, 0x47, 0x67,  // ..B...Gg
                /* 2400 */  0x72, 0xA6, 0x16, 0x5C, 0xD7, 0x10, 0xAE, 0x13,  // r..\....
                /* 2408 */  0x46, 0x79, 0x8E, 0x88, 0xA8, 0x04, 0xB7, 0x11,  // Fy......
                /* 2410 */  0x0A, 0xE2, 0xF3, 0x80, 0x73, 0x1C, 0x11, 0xA1,  // ....s...
                /* 2418 */  0x0C, 0xE5, 0x60, 0x3C, 0x0A, 0x2C, 0xCA, 0x7B,  // ..`<.,.{
                /* 2420 */  0x08, 0x78, 0x2F, 0x7D, 0xE0, 0xCA, 0x75, 0x41,  // .x/}..uA
                /* 2428 */  0x44, 0xCF, 0xC5, 0x73, 0xF2, 0x8C, 0x03, 0x1E,  // D..s....
                /* 2430 */  0x54, 0xD4, 0xA3, 0x7D, 0x8E, 0x64, 0x93, 0xF2,  // T..}.d..
                /* 2438 */  0x2D, 0x19, 0xBC, 0xBB, 0xF6, 0xDC, 0x60, 0x1D,  // -.....`.
                /* 2440 */  0x10, 0xC1, 0x77, 0x65, 0xF1, 0xFF, 0xFF, 0xCA,  // ..we....
                /* 2448 */  0x02, 0x0C, 0xAE, 0xA2, 0xBE, 0x17, 0xF0, 0x20,  // ....... 
                /* 2450 */  0xF7, 0x02, 0x0A, 0xE2, 0x81, 0xF9, 0xCA, 0xE2,  // ........
                /* 2458 */  0x7B, 0x01, 0x6E, 0xAC, 0xBE, 0x88, 0xE2, 0xA6,  // {.n.....
                /* 2460 */  0xF2, 0xE6, 0xE1, 0x39, 0xFB, 0x2A, 0x0A, 0xF6,  // ...9.*..
                /* 2468 */  0xAB, 0x83, 0xAF, 0xA2, 0xE0, 0x1F, 0x96, 0xAF,  // ........
                /* 2470 */  0x19, 0x0F, 0x16, 0xBE, 0x59, 0xF8, 0x2E, 0xC2,  // ....Y...
                /* 2478 */  0xAE, 0xA2, 0xE0, 0x1E, 0x23, 0x1F, 0x1C, 0x1C,  // ....#...
                /* 2480 */  0x28, 0x5F, 0x45, 0x81, 0xB3, 0x84, 0xEB, 0x0D,  // (_E.....
                /* 2488 */  0x84, 0xFF, 0xFF, 0xF5, 0x06, 0x36, 0x9C, 0xAF,  // .....6..
                /* 2490 */  0x37, 0xC0, 0x15, 0xD5, 0x67, 0x36, 0x70, 0x1D,  // 7...g6p.
                /* 2498 */  0x63, 0x18, 0xC8, 0x6B, 0x0C, 0x3C, 0xB4, 0x47,  // c..k.<.G
                /* 24A0 */  0x16, 0xEC, 0xD1, 0xC6, 0xD9, 0x6E, 0x36, 0xE8,  // .....n6.
                /* 24A8 */  0x3C, 0x4B, 0xD6, 0x95, 0x87, 0xDD, 0x6C, 0xC0,  // <K....l.
                /* 24B0 */  0xA6, 0xFA, 0x66, 0x83, 0xD2, 0x0B, 0x23, 0x15,  // ..f...#.
                /* 24B8 */  0x47, 0x0E, 0xD4, 0x99, 0xCD, 0x70, 0x06, 0x31,  // G....p.1
                /* 24C0 */  0xA0, 0x43, 0x1D, 0x26, 0xD0, 0x4A, 0x0E, 0x13,  // .C.&.J..
                /* 24C8 */  0x90, 0x2E, 0x2D, 0xE0, 0x85, 0xF6, 0x01, 0x07,  // ..-.....
                /* 24D0 */  0xBC, 0xFF, 0xFF, 0x4B, 0x0B, 0x70, 0x12, 0xBA,  // ...K.p..
                /* 24D8 */  0x59, 0x4D, 0x99, 0x4B, 0x83, 0xD1, 0x94, 0x0D,  // YM.K....
                /* 24E0 */  0xE2, 0xA1, 0xF9, 0xD2, 0x02, 0x3C, 0xCF, 0x3C,  // .....<.<
                /* 24E8 */  0xE0, 0x0B, 0x34, 0x2C, 0xF4, 0xDB, 0xC0, 0xC3,  // ..4,....
                /* 24F0 */  0xC2, 0x9D, 0xA2, 0xE0, 0x5C, 0x6E, 0x80, 0x6B,  // ....\n.k
                /* 24F8 */  0xB4, 0x6B, 0x14, 0xA8, 0x6E, 0x37, 0xE0, 0xFA,  // .k..n7..
                /* 2500 */  0xFF, 0xDF, 0xA3, 0xE0, 0xDC, 0x6E, 0x00, 0x7F,  // .....n..
                /* 2508 */  0x66, 0x6E, 0x37, 0x80, 0x96, 0xC3, 0x20, 0xBF,  // fn7... .
                /* 2510 */  0xDD, 0x80, 0x33, 0x83, 0x8D, 0x81, 0xB0, 0x6B,  // ..3....k
                /* 2518 */  0x98, 0x25, 0xAE, 0x98, 0xC2, 0xF8, 0xAC, 0xE2,  // .%......
                /* 2520 */  0xA3, 0x02, 0x7E, 0xD8, 0x47, 0x7D, 0xB0, 0xC7,  // ..~.G}..
                /* 2528 */  0xC5, 0x24, 0xC1, 0xA1, 0x4E, 0x04, 0x1E, 0xD7,  // .$..N...
                /* 2530 */  0x0B, 0xFD, 0x91, 0xBC, 0x29, 0xB2, 0xC9, 0x24,  // ....)..$
                /* 2538 */  0xF8, 0xFF, 0x87, 0xF4, 0x8D, 0xC7, 0x03, 0xE4,  // ........
                /* 2540 */  0x57, 0x2E, 0xCF, 0x87, 0x1D, 0xE8, 0x7D, 0x25,  // W.....}%
                /* 2548 */  0x31, 0x4C, 0x02, 0x9F, 0x05, 0x18, 0x1A, 0x87,  // 1L......
                /* 2550 */  0xC6, 0x0E, 0xC3, 0x97, 0x84, 0x13, 0xF4, 0x30,  // .......0
                /* 2558 */  0x5E, 0x3B, 0xD8, 0x21, 0xC2, 0x27, 0x84, 0x72,  // ^;.!.'.r
                /* 2560 */  0x2F, 0xA6, 0x3A, 0x53, 0x46, 0x8D, 0xD1, 0x1C,  // /.:SF...
                /* 2568 */  0x14, 0x39, 0x4F, 0x78, 0xE8, 0xE0, 0x18, 0xF8,  // .9Ox....
                /* 2570 */  0xBB, 0xA4, 0xD1, 0x1E, 0x25, 0x7D, 0x97, 0xF4,  // ....%}..
                /* 2578 */  0xD5, 0xC0, 0x28, 0x01, 0xE3, 0xC5, 0x38, 0x14,  // ..(...8.
                /* 2580 */  0x8F, 0x9C, 0xDD, 0x1C, 0xC2, 0x45, 0x79, 0x54,  // .....EyT
                /* 2588 */  0x88, 0x52, 0xEB, 0xCC, 0x08, 0xE8, 0x01, 0x30,  // .R.....0
                /* 2590 */  0xA0, 0x37, 0xDD, 0x93, 0x7F, 0xA0, 0x68, 0xEC,  // .7....h.
                /* 2598 */  0x04, 0x83, 0x18, 0x0D, 0x3F, 0x1F, 0x18, 0xFD,  // ....?...
                /* 25A0 */  0xC5, 0xC2, 0xE7, 0x04, 0xE6, 0x5E, 0x80, 0xB7,  // .....^..
                /* 25A8 */  0x69, 0x09, 0x22, 0x42, 0xE4, 0xB7, 0x89, 0xB3,  // i."B....
                /* 25B0 */  0x79, 0x74, 0x6D, 0x6B, 0x6C, 0x1A, 0x5C, 0x85,  // ytmkl.\.
                /* 25B8 */  0xF0, 0x42, 0x09, 0x52, 0xF1, 0x85, 0x40, 0xA8,  // .B.R..@.
                /* 25C0 */  0x51, 0x8E, 0x21, 0xCC, 0xF3, 0x6F, 0xC0, 0x28,  // Q.!..o.(
                /* 25C8 */  0x11, 0xA3, 0x45, 0x0D, 0x5C, 0x23, 0x36, 0x01,  // ..E.\#6.
                /* 25D0 */  0x0D, 0x14, 0x2B, 0xC2, 0x11, 0xB4, 0x3F, 0x08,  // ..+...?.
                /* 25D8 */  0x12, 0xED, 0x50, 0xA0, 0xE3, 0x88, 0x23, 0x8D,  // ..P...#.
                /* 25E0 */  0x06, 0x75, 0xDA, 0xF0, 0xC1, 0xC0, 0x57, 0x65,  // .u....We
                /* 25E8 */  0x4F, 0xEC, 0x08, 0xDF, 0x40, 0x7D, 0x09, 0xB5,  // O...@}..
                /* 25F0 */  0xCE, 0x13, 0x01, 0x19, 0x3B, 0x1B, 0xB6, 0x8F,  // ....;...
                /* 25F8 */  0x30, 0x70, 0x0E, 0x0D, 0x01, 0xDF, 0x0D, 0x9E,  // 0p......
                /* 2600 */  0x2C, 0xC0, 0x72, 0xE6, 0x85, 0x3F, 0x1E, 0x1F,  // ,.r..?..
                /* 2608 */  0x05, 0x7C, 0xBF, 0xE6, 0xF2, 0x07, 0x41, 0xFF,  // .|....A.
                /* 2610 */  0xFF, 0x97, 0x6A, 0xDC, 0x91, 0xD5, 0x37, 0x02,  // ..j...7.
                /* 2618 */  0xDF, 0x2A, 0x4C, 0xE0, 0x43, 0x8B, 0x8F, 0x36,  // .*L.C..6
                /* 2620 */  0x1E, 0x0F, 0xF8, 0x8F, 0x00, 0x8F, 0x05, 0x11,  // ........
                /* 2628 */  0x5E, 0x1B, 0x3C, 0x5F, 0x1F, 0x17, 0x7C, 0x6C,  // ^.<_..|l
                /* 2630 */  0x01, 0xC3, 0x51, 0x81, 0xDF, 0x14, 0xD8, 0x61,  // ..Q....a
                /* 2638 */  0x20, 0x86, 0xE7, 0xC5, 0x4E, 0x0E, 0x4C, 0xE4,  //  ...N.L.
                /* 2640 */  0x19, 0x02, 0x3D, 0x02, 0x7E, 0x0C, 0x78, 0x84,  // ..=.~.x.
                /* 2648 */  0x61, 0x23, 0x78, 0x8B, 0xF1, 0x24, 0x0E, 0xC8,  // a#x..$..
                /* 2650 */  0xA7, 0x0B, 0x23, 0x84, 0x7F, 0xA8, 0x78, 0xC8,  // ..#...x.
                /* 2658 */  0xF0, 0x29, 0xE1, 0x8C, 0xCE, 0xE1, 0x9C, 0x9E,  // .)......
                /* 2660 */  0xA8, 0x99, 0x2E, 0x15, 0xE7, 0x01, 0x16, 0xF1,  // ........
                /* 2668 */  0xCE, 0x8E, 0xE2, 0x70, 0xAC, 0xE5, 0xEA, 0x26,  // ...p...&
                /* 2670 */  0xC7, 0xA6, 0x84, 0x9D, 0x45, 0xFC, 0x83, 0x08,  // ....E...
                /* 2678 */  0x91, 0xC0, 0x31, 0xCE, 0x59, 0x74, 0xE4, 0x0E,  // ..1.Yt..
                /* 2680 */  0x40, 0xA1, 0x00, 0x17, 0x36, 0x94, 0xE4, 0x2B,  // @...6..+
                /* 2688 */  0x27, 0x05, 0xF1, 0x40, 0x9C, 0xE5, 0x20, 0x85,  // '..@.. .
                /* 2690 */  0x3E, 0x2B, 0x78, 0x96, 0xF8, 0x93, 0x83, 0x27,  // >+x....'
                /* 2698 */  0xE6, 0x03, 0xB2, 0x0F, 0xB7, 0xC0, 0xF2, 0xEA,  // ........
                /* 26A0 */  0xF4, 0xFF, 0x3F, 0x2B, 0xAC, 0x8E, 0xFB, 0x0A,  // ..?+....
                /* 26A8 */  0xB9, 0x83, 0x78, 0x52, 0xBE, 0x28, 0x78, 0x48,  // ..xR.(xH
                /* 26B0 */  0x60, 0xBD, 0xD2, 0x02, 0xEB, 0x53, 0x3D, 0xFC,  // `....S=.
                /* 26B8 */  0xDB, 0xA0, 0x2F, 0xAB, 0xB8, 0x01, 0x1C, 0xEA,  // ../.....
                /* 26C0 */  0x73, 0x83, 0x21, 0xDE, 0xE6, 0x30, 0xA7, 0x7A,  // s.!..0.z
                /* 26C8 */  0x70, 0x0F, 0xC5, 0xA7, 0x7A, 0xF0, 0x1C, 0x61,  // p...z..a
                /* 26D0 */  0x9E, 0x5F, 0x9E, 0xEA, 0x81, 0xCB, 0xC9, 0x0B,  // ._......
                /* 26D8 */  0x7C, 0x17, 0x03, 0xFE, 0xFF, 0x3F, 0x79, 0x01,  // |....?y.
                /* 26E0 */  0x3E, 0x0E, 0x4A, 0xF8, 0x33, 0x97, 0x2F, 0x23,  // >.J.3./#
                /* 26E8 */  0xEC, 0x94, 0x14, 0x86, 0x1D, 0x9B, 0xD8, 0x9D,  // ........
                /* 26F0 */  0x89, 0x5D, 0x88, 0x8E, 0xEE, 0x0D, 0xEC, 0x94,  // .]......
                /* 26F8 */  0x1F, 0xE8, 0x99, 0xC0, 0x13, 0x0A, 0xEA, 0xB8,  // ........
                /* 2700 */  0x65, 0x51, 0x27, 0x14, 0xC4, 0x55, 0x04, 0xEE,  // eQ'..U..
                /* 2708 */  0xF8, 0x75, 0x44, 0x41, 0x85, 0x27, 0x51, 0xF8,  // .uDA.'Q.
                /* 2710 */  0x23, 0x04, 0x2A, 0xEE, 0xD8, 0x29, 0x88, 0x01,  // #.*..)..
                /* 2718 */  0x7D, 0x44, 0x01, 0xAC, 0x1C, 0x40, 0xC0, 0xFC,  // }D...@..
                /* 2720 */  0xFF, 0x3F, 0x80, 0x00, 0x2E, 0x06, 0xE3, 0x03,  // .?......
                /* 2728 */  0x08, 0xE0, 0xE9, 0x80, 0xCA, 0x0F, 0x20, 0x80,  // ...... .
                /* 2730 */  0xBF, 0xFF, 0xFF, 0x01, 0x04, 0xA7, 0xE8, 0x00,  // ........
                /* 2738 */  0x82, 0x3A, 0x28, 0x58, 0xC5, 0x01, 0x04, 0x71,  // .:(X...q
                /* 2740 */  0x6A, 0xC2, 0x66, 0x3F, 0x67, 0xD1, 0x11, 0x3B,  // j.f?g..;
                /* 2748 */  0x35, 0x89, 0x52, 0x1F, 0x1F, 0x50, 0x39, 0x8F,  // 5.R..P9.
                /* 2750 */  0x08, 0x14, 0xC4, 0x80, 0xBE, 0x48, 0x01, 0xAF,  // .....H..
                /* 2758 */  0x8B, 0x07, 0xC0, 0xA3, 0xFF, 0xFF, 0xC5, 0x03,  // ........
                /* 2760 */  0x98, 0xDD, 0x9D, 0xF9, 0xC5, 0x03, 0x70, 0x19,  // ......p.
                /* 2768 */  0xED, 0x41, 0xE1, 0xEB, 0x30, 0x15, 0x79, 0x23,  // .A..0.y#
                /* 2770 */  0x06, 0x24, 0xFE, 0xFF, 0x6F, 0xC4, 0x60, 0x9D,  // .$..o.`.
                /* 2778 */  0xC5, 0x43, 0xEF, 0x03, 0x80, 0xD1, 0x0D, 0xF7,  // .C......
                /* 2780 */  0x8C, 0xE0, 0x23, 0x31, 0xEC, 0x1B, 0x31, 0xFC,  // ..#1..1.
                /* 2788 */  0x33, 0xB0, 0x07, 0x76, 0x32, 0x67, 0xF1, 0x40,  // 3..v2g.@
                /* 2790 */  0x11, 0xE6, 0x51, 0xF8, 0x41, 0xD8, 0xE0, 0xA7,  // ..Q.A...
                /* 2798 */  0xF5, 0x46, 0x6C, 0xA8, 0xE3, 0x7A, 0x81, 0x8D,  // .Fl..z..
                /* 27A0 */  0x12, 0x31, 0x54, 0x9C, 0x23, 0x8C, 0x12, 0x22,  // .1T.#.."
                /* 27A8 */  0x5C, 0xD8, 0x40, 0x31, 0x23, 0xB4, 0x86, 0x29,  // \.@1#..)
                /* 27B0 */  0x84, 0x38, 0x41, 0x7D, 0x23, 0x66, 0xE1, 0x6E,  // .8A}#f.n
                /* 27B8 */  0xC4, 0x00, 0x4D, 0x2E, 0xC0, 0xEC, 0xFF, 0x7F,  // ..M.....
                /* 27C0 */  0x6C, 0x81, 0x7D, 0x54, 0xF0, 0x4D, 0x01, 0x77,  // l.}T.M.w
                /* 27C8 */  0x24, 0x86, 0x71, 0x25, 0x06, 0x26, 0x62, 0xDF,  // $.q%.&b.
                /* 27D0 */  0x03, 0x3A, 0xE8, 0x58, 0xE8, 0x95, 0x18, 0x2D,  // .:.X...-
                /* 27D8 */  0x6B, 0xBD, 0xBA, 0xFE, 0xB3, 0x39, 0xE1, 0xC7,  // k....9..
                /* 27E0 */  0x79, 0x46, 0xEF, 0x07, 0x4C, 0xC6, 0x05, 0x11,  // yF..L...
                /* 27E8 */  0x45, 0xE1, 0x0B, 0x22, 0xF8, 0x2E, 0x10, 0x27,  // E.."...'
                /* 27F0 */  0xF1, 0xC2, 0xE2, 0x0B, 0x22, 0xE0, 0xEF, 0x64,  // ...."..d
                /* 27F8 */  0xE4, 0xE1, 0xF2, 0xD0, 0xC3, 0xA5, 0x20, 0x1E,  // ...... .
                /* 2800 */  0xAE, 0x03, 0x1D, 0xAC, 0xD0, 0xC3, 0x65, 0xFF,  // ......e.
                /* 2808 */  0xFF, 0xE1, 0x62, 0x2F, 0x01, 0x98, 0xA3, 0x15,  // ..b/....
                /* 2810 */  0x60, 0x4E, 0xC8, 0x95, 0x17, 0xD0, 0x73, 0x0C,  // `N....s.
                /* 2818 */  0xF0, 0x81, 0x08, 0x1C, 0x43, 0x78, 0xDB, 0x60,  // ....Cx.`
                /* 2820 */  0x77, 0x21, 0x38, 0x38, 0xAF, 0x06, 0x1C, 0xE5,  // w!88....
                /* 2828 */  0xED, 0x0A, 0xBE, 0x48, 0x1F, 0x47, 0x2B, 0xCC,  // ...H.G+.
                /* 2830 */  0x49, 0xC4, 0xA7, 0x2B, 0xEC, 0xFF, 0xFF, 0x74,  // I..+...t
                /* 2838 */  0x05, 0xD8, 0x3C, 0xFF, 0x78, 0x38, 0x9E, 0x30,  // ..<.x8.0
                /* 2840 */  0x66, 0xFE, 0xBE, 0x01, 0x18, 0xD2, 0xB7, 0x35,  // f......5
                /* 2848 */  0x36, 0xFD, 0x47, 0x1E, 0x76, 0xB9, 0x82, 0x7D,  // 6.G.v..}
                /* 2850 */  0xBA, 0x82, 0x3F, 0xAE, 0x13, 0x89, 0xF0, 0x3E,  // ..?....>
                /* 2858 */  0xF5, 0x5A, 0x10, 0xE5, 0x79, 0xCA, 0x57, 0x2B,  // .Z..y.W+
                /* 2860 */  0xA3, 0x47, 0x38, 0xA1, 0xA7, 0x2B, 0x36, 0xBD,  // .G8..+6.
                /* 2868 */  0xF7, 0x2B, 0xE3, 0x9C, 0x44, 0xC8, 0x17, 0x8C,  // .+..D...
                /* 2870 */  0x28, 0xD1, 0xDE, 0xAF, 0x7C, 0xD5, 0x88, 0x10,  // (...|...
                /* 2878 */  0xED, 0xE9, 0x22, 0x56, 0xC4, 0xF8, 0xAF, 0x57,  // .."V...W
                /* 2880 */  0x3E, 0x5D, 0xB1, 0x90, 0xA7, 0x2B, 0x20, 0xFE,  // >]...+ .
                /* 2888 */  0xFF, 0x3F, 0x5D, 0x01, 0xB6, 0x86, 0xE1, 0x93,  // .?].....
                /* 2890 */  0x0B, 0xFC, 0x13, 0x03, 0x3F, 0x08, 0xBC, 0x25,  // ....?..%
                /* 2898 */  0x78, 0x7E, 0xAF, 0xA3, 0x86, 0x7F, 0x43, 0x8A,  // x~....C.
                /* 28A0 */  0xF3, 0x82, 0xE0, 0xBB, 0x0E, 0x76, 0x1E, 0xEC,  // .....v..
                /* 28A8 */  0x84, 0x05, 0x4C, 0xE2, 0xAE, 0x55, 0x87, 0x02,  // ..L..U..
                /* 28B0 */  0xEB, 0x7E, 0x23, 0xE8, 0x84, 0x85, 0xD3, 0x4D,  // .~#....M
                /* 28B8 */  0xA5, 0x23, 0x05, 0x9B, 0x15, 0x3F, 0x57, 0x3C,  // .#...?W<
                /* 28C0 */  0x5E, 0x60, 0x70, 0x12, 0x58, 0xE7, 0x81, 0x8B,  // ^`p.X...
                /* 28C8 */  0x0E, 0xDF, 0x0A, 0x61, 0xA4, 0x8F, 0x44, 0x67,  // ...a..Dg
                /* 28D0 */  0x24, 0xAE, 0xE8, 0xA0, 0x45, 0x41, 0x7C, 0x74,  // $...EA|t
                /* 28D8 */  0x70, 0x94, 0x33, 0x12, 0x7A, 0x74, 0x3E, 0xB1,  // p.3.zt>.
                /* 28E0 */  0xF0, 0xC3, 0xCC, 0xC3, 0xAC, 0xC7, 0x75, 0xD2,  // ......u.
                /* 28E8 */  0xAF, 0x37, 0x26, 0x78, 0xD6, 0x79, 0xC0, 0x82,  // .7&x.y..
                /* 28F0 */  0xFB, 0xFF, 0x3F, 0x60, 0xC1, 0xBD, 0xBF, 0xF8,  // ..?`....
                /* 28F8 */  0x82, 0x04, 0xA6, 0x50, 0xC7, 0x30, 0x8F, 0x96,  // ...P.0..
                /* 2900 */  0x8E, 0xCA, 0x03, 0xF3, 0xA8, 0xF0, 0x04, 0x13,  // ........
                /* 2908 */  0xDC, 0xAC, 0x3C, 0x27, 0xA8, 0x97, 0x28, 0xFC,  // ..<'..(.
                /* 2910 */  0x60, 0x1E, 0x07, 0xDE, 0x16, 0x3C, 0x20, 0x4F,  // `....< O
                /* 2918 */  0x0D, 0xD6, 0x01, 0x89, 0x5F, 0xC5, 0xC0, 0x73,  // ...._..s
                /* 2920 */  0xE4, 0xF2, 0xD0, 0x70, 0x2A, 0x0E, 0x31, 0xE4,  // ...p*.1.
                /* 2928 */  0xD6, 0x60, 0x88, 0x03, 0x03, 0x33, 0x8D, 0x07,  // .`...3..
                /* 2930 */  0x06, 0xEB, 0xEA, 0xCE, 0xAF, 0x6C, 0xC0, 0x76,  // .....l.v
                /* 2938 */  0xD7, 0xBE, 0x3F, 0xF0, 0xC8, 0x33, 0xA7, 0x20,  // ..?..3. 
                /* 2940 */  0x9E, 0x93, 0xE3, 0x40, 0xC8, 0x09, 0x27, 0xFD,  // ...@..'.
                /* 2948 */  0xFF, 0xDF, 0x1F, 0xF8, 0x3D, 0xCA, 0x03, 0x7A,  // ....=..z
                /* 2950 */  0xF0, 0xF0, 0x90, 0x9E, 0xAD, 0x31, 0x37, 0x36,  // .....176
                /* 2958 */  0xB0, 0x43, 0xF9, 0xC6, 0x06, 0x9E, 0x43, 0xCF,  // .C....C.
                /* 2960 */  0x53, 0xCF, 0x1B, 0x1B, 0x70, 0x89, 0x0D, 0xA1,  // S...p...
                /* 2968 */  0x1B, 0x1B, 0xE0, 0x66, 0x8E, 0x2F, 0x59, 0x60,  // ...f./Y`
                /* 2970 */  0xB9, 0xBD, 0xB0, 0x43, 0x16, 0xEE, 0xFA, 0x02,  // ...C....
                /* 2978 */  0x43, 0xFB, 0x5D, 0x06, 0xAD, 0x7D, 0xB1, 0x3A,  // C.]..}.:
                /* 2980 */  0xBF, 0xB1, 0xBB, 0x0C, 0x4C, 0xAD, 0x77, 0x19,  // ....L.w.
                /* 2988 */  0xFA, 0xFF, 0x3F, 0x34, 0x58, 0x25, 0x8C, 0xF2,  // ..?4X%..
                /* 2990 */  0x1C, 0x1E, 0x50, 0x09, 0x60, 0x04, 0x67, 0x10,  // ..P.`.g.
                /* 2998 */  0x8F, 0xDF, 0x77, 0x19, 0x80, 0x3B, 0x77, 0x14,  // ..w..;w.
                /* 29A0 */  0x60, 0x11, 0xEA, 0x5E, 0x80, 0x8A, 0x71, 0x2F,  // `..^..q/
                /* 29A8 */  0xA0, 0x20, 0x1E, 0x98, 0xEF, 0x28, 0x60, 0xFF,  // . ...(`.
                /* 29B0 */  0xFF, 0xDF, 0x51, 0xC0, 0x74, 0x75, 0xF0, 0x1D,  // ..Q.tu..
                /* 29B8 */  0x05, 0x7C, 0x37, 0x03, 0xFC, 0x95, 0xC3, 0x67,  // .|7....g
                /* 29C0 */  0x21, 0x0C, 0xC1, 0x10, 0x07, 0x03, 0x3A, 0x28,  // !.....:(
                /* 29C8 */  0x70, 0x5D, 0x86, 0x70, 0xD7, 0x19, 0xB8, 0x37,  // p].p...7
                /* 29D0 */  0x03, 0x70, 0xDD, 0x66, 0x80, 0xF7, 0xB9, 0x89,  // .p.f....
                /* 29D8 */  0xDF, 0x66, 0x80, 0xF9, 0xFF, 0xFF, 0x36, 0x03,  // .f....6.
                /* 29E0 */  0xEB, 0x3A, 0xCB, 0x6F, 0x33, 0x70, 0x83, 0xAF,  // .:.o3p..
                /* 29E8 */  0x4F, 0xB7, 0x19, 0x7E, 0x4A, 0x75, 0xD8, 0x43,  // O..~Ju.C
                /* 29F0 */  0x85, 0xC0, 0x99, 0x55, 0x64, 0xDD, 0x33, 0x0D,  // ...Ud.3.
                /* 29F8 */  0xF3, 0xCA, 0xEA, 0x3B, 0xA1, 0x8F, 0xEF, 0x41,  // ...;...A
                /* 2A00 */  0x9E, 0xFC, 0x7C, 0x2C, 0x34, 0xDC, 0xFB, 0x82,  // ..|,4...
                /* 2A08 */  0xEF, 0x15, 0x1E, 0x02, 0x8B, 0x74, 0xC8, 0xA0,  // .....t..
                /* 2A10 */  0x10, 0x0E, 0x43, 0xA1, 0x28, 0x67, 0x0D, 0x94,  // ..C.(g..
                /* 2A18 */  0x78, 0x38, 0x0A, 0xE2, 0xB3, 0x06, 0x70, 0x25,  // x8....p%
                /* 2A20 */  0xF0, 0x59, 0x03, 0x7C, 0x37, 0x1F, 0x1F, 0xE3,  // .Y.|7...
                /* 2A28 */  0x71, 0x87, 0x5E, 0x4F, 0xF9, 0x20, 0x8E, 0xF7,  // q.^O. ..
                /* 2A30 */  0x64, 0xB1, 0x87, 0x49, 0x1F, 0xC3, 0xC1, 0x7D,  // d..I...}
                /* 2A38 */  0xCC, 0x00, 0x36, 0xFF, 0xFF, 0x63, 0x06, 0x58,  // ..6..c.X
                /* 2A40 */  0x8E, 0xF1, 0x3E, 0x66, 0x80, 0x0B, 0x96, 0x1F,  // ..>f....
                /* 2A48 */  0x33, 0x80, 0x27, 0xAA, 0x8F, 0x19, 0xE0, 0xBA,  // 3.'.....
                /* 2A50 */  0x58, 0x30, 0x90, 0x27, 0x0B, 0x1C, 0xCE, 0x9B,  // X0.'....
                /* 2A58 */  0x05, 0xEE, 0xF8, 0xEC, 0xA3, 0x05, 0x56, 0xA1,  // ......V.
                /* 2A60 */  0x4D, 0x9F, 0x1A, 0x8D, 0x5A, 0x35, 0x28, 0x53,  // M...Z5(S
                /* 2A68 */  0xA3, 0x4C, 0x83, 0x5A, 0x7D, 0x2A, 0x35, 0x66,  // .L.Z}*5f
                /* 2A70 */  0xCC, 0xC8, 0x81, 0x43, 0x92, 0xD6, 0xAC, 0x41,  // ...C...A
                /* 2A78 */  0x3B, 0x10, 0x08, 0x8D, 0xFE, 0xC6, 0x11, 0x88,  // ;.......
                /* 2A80 */  0xE3, 0x7B, 0x00, 0x61, 0xE2, 0x57, 0x25, 0x10,  // .{.a.W%.
                /* 2A88 */  0xC7, 0x34, 0x01, 0xC2, 0x22, 0xAF, 0x4F, 0x20,  // .4..".O 
                /* 2A90 */  0x16, 0x6C, 0x03, 0x84, 0x45, 0xD4, 0x01, 0xC2,  // .l..E...
                /* 2A98 */  0xE2, 0x3E, 0x1F, 0x04, 0x62, 0xB1, 0x3F, 0x2C,  // .>..b.?,
                /* 2AA0 */  0x81, 0x38, 0xD8, 0x4B, 0x43, 0x67, 0x08, 0xA7,  // .8.KCg..
                /* 2AA8 */  0x04, 0x11, 0x90, 0x33, 0xBD, 0x21, 0x04, 0xE4,  // ...3.!..
                /* 2AB0 */  0x84, 0x20, 0x02, 0x72, 0x76, 0x2D, 0x40, 0x4C,  // . .rv-@L
                /* 2AB8 */  0x88, 0x17, 0x20, 0x16, 0x1B, 0x44, 0x40, 0x16,  // .. ..D@.
                /* 2AC0 */  0xB1, 0x5E, 0x01, 0x39, 0xA0, 0x1B, 0x10, 0x26,  // .^.9...&
                /* 2AC8 */  0xEF, 0x09, 0xA1, 0x81, 0x11, 0x3B, 0x80, 0x2C,  // .....;.,
                /* 2AD0 */  0x1D, 0x88, 0x80, 0x9C, 0x45, 0x0F, 0x10, 0x4B,  // ....E..K
                /* 2AD8 */  0xA6, 0xE7, 0xFF, 0x0F, 0xC4, 0x72, 0x3F, 0x04,  // .....r?.
                /* 2AE0 */  0x34, 0x00, 0x62, 0x68, 0x68, 0x14, 0x44, 0x67,  // 4.bhh.Dg
                /* 2AE8 */  0x0C, 0xA2, 0x68, 0x10, 0xD4, 0xD2, 0x20, 0xA8,  // ..h... .
                /* 2AF0 */  0xA6, 0x41, 0x50, 0x4F, 0x83, 0xA0, 0x20, 0xBA,  // .APO.. .
                /* 2AF8 */  0x29, 0x12, 0x51, 0x40, 0x4C, 0x25, 0x88, 0x80,  // ).Q@L%..
                /* 2B00 */  0x1C, 0x0F, 0x88, 0x66, 0x05, 0xA2, 0x1A, 0x4D,  // ...f...M
                /* 2B08 */  0x01, 0x31, 0xC1, 0x20, 0x1A, 0x0C, 0x01, 0xA2,  // .1. ....
                /* 2B10 */  0x22, 0x54, 0x01, 0xB1, 0xCC, 0x20, 0x02, 0xB2,  // "T... ..
                /* 2B18 */  0x02, 0x57, 0x40, 0x4C, 0xE1, 0xE3, 0x3B, 0x10,  // .W@L..;.
                /* 2B20 */  0x91, 0x0B, 0x22, 0x20, 0x27, 0x05, 0xA2, 0xB1,  // .." '...
                /* 2B28 */  0x81, 0xA8, 0xDE, 0xB7, 0x9B, 0x80, 0x2C, 0x1E,  // ......,.
                /* 2B30 */  0x44, 0x03, 0x20, 0x40, 0x54, 0x80, 0x2F, 0x20,  // D. @T./ 
                /* 2B38 */  0x16, 0x03, 0x44, 0x40, 0xCE, 0x04, 0x44, 0x23,  // ..D@..D#
                /* 2B40 */  0xBC, 0x51, 0x04, 0xE4, 0x40, 0x20, 0xBA, 0xD7,  // .Q..@ ..
                /* 2B48 */  0x91, 0x8F, 0xBA, 0x80, 0x2C, 0x0D, 0x44, 0x47,  // ....,.DG
                /* 2B50 */  0x02, 0x02, 0x44, 0x03, 0x03, 0xD1, 0x50, 0xAF,  // ..D...P.
                /* 2B58 */  0xF3, 0x20, 0x44, 0xD2, 0x57, 0x4E, 0x20, 0x8E,  // . D.WN .
                /* 2B60 */  0xF5, 0x3E, 0x0F, 0x48, 0x32, 0x82, 0x08, 0xC8,  // .>.H2...
                /* 2B68 */  0xFA, 0xDE, 0x21, 0x02, 0xB2, 0x58, 0x10, 0x0D,  // ..!..X..
                /* 2B70 */  0x98, 0xFC, 0xEC, 0x05, 0x64, 0x99, 0x20, 0x02,  // ....d. .
                /* 2B78 */  0x72, 0x1A, 0x77, 0x40, 0x2C, 0x1A, 0x88, 0x80,  // r.w@,...
                /* 2B80 */  0xAC, 0x4C, 0x1E, 0x20, 0x05, 0xD1, 0x61, 0x81,  // .L. ..a.
                /* 2B88 */  0x00, 0xD1, 0xEC, 0x40, 0x34, 0xAC, 0x3D, 0x20,  // ...@4.= 
                /* 2B90 */  0x16, 0x1D, 0x44, 0x83, 0x23, 0xBF, 0x37, 0x0D,  // ..D.#.7.
                /* 2B98 */  0x8E, 0x80, 0x08, 0xC8, 0x02, 0xFD, 0x0D, 0x9A,  // ........
                /* 2BA0 */  0x82, 0x68, 0x20, 0xE4, 0x6B, 0x72, 0x20, 0x0C,  // .h .kr .
                /* 2BA8 */  0x44, 0x03, 0x22, 0x6F, 0x8C, 0x07, 0x02, 0x06,  // D."o....
                /* 2BB0 */  0x22, 0x20, 0xA7, 0x04, 0xA2, 0x91, 0x81, 0xA8,  // " ......
                /* 2BB8 */  0xF8, 0xC7, 0x4A, 0x20, 0x92, 0x04, 0x44, 0x40,  // ..J ..D@
                /* 2BC0 */  0x16, 0xFD, 0x87, 0x11, 0x90, 0x23, 0x48, 0xFC,  // .....#H.
                /* 2BC8 */  0xFF, 0x03, 0x31, 0x11, 0xCF, 0x17, 0x01, 0x59,  // ..1....Y
                /* 2BD0 */  0x12, 0x88, 0x0E, 0x08, 0xE4, 0xD1, 0x2D, 0x10,  // ......-.
                /* 2BD8 */  0x8B, 0x7B, 0x9D, 0x04, 0x21, 0x91, 0x54, 0x02,  // .{..!.T.
                /* 2BE0 */  0xB2, 0x7C, 0x20, 0x02, 0xB2, 0x4E, 0x97, 0x40,  // .| ..N.@
                /* 2BE8 */  0x4C, 0x34, 0x88, 0x06, 0x48, 0x80, 0x68, 0x72,  // L4..H.hr
                /* 2BF0 */  0x20, 0x9A, 0xF4, 0x29, 0x25, 0x20, 0xE7, 0x06,  //  ..)% ..
                /* 2BF8 */  0x11, 0x90, 0xF5, 0x7F, 0x5C, 0x02, 0x91, 0x34,  // ....\..4
                /* 2C00 */  0x20, 0x3A, 0x0C, 0x90, 0x3F, 0x54, 0x20, 0x92,  //  :..?T .
                /* 2C08 */  0x17, 0x44, 0x40, 0x96, 0xFE, 0xA0, 0x09, 0x44,  // .D@....D
                /* 2C10 */  0x72, 0x80, 0x08, 0xC8, 0x32, 0x8C, 0x02, 0x31,  // r...2..1
                /* 2C18 */  0x4D, 0x20, 0x1A, 0x14, 0x01, 0xA2, 0x59, 0x81,  // M ....Y.
                /* 2C20 */  0xA8, 0xC6, 0x87, 0xCD, 0x43, 0x04, 0x03, 0xD1,  // ....C...
                /* 2C28 */  0xC0, 0xC9, 0xDF, 0x46, 0x03, 0x27, 0x20, 0x3A,  // ...F.' :
                /* 2C30 */  0x00, 0x90, 0x87, 0x4A, 0x20, 0x92, 0x07, 0x44,  // ...J ..D
                /* 2C38 */  0x40, 0xD6, 0xA5, 0x15, 0x88, 0x89, 0x04, 0xD1,  // @.......
                /* 2C40 */  0x80, 0x08, 0x10, 0xCD, 0x0B, 0x44, 0xF3, 0x3D,  // .....D.=
                /* 2C48 */  0x71, 0x02, 0x91, 0xB4, 0x20, 0x02, 0xB2, 0xD2,  // q... ...
                /* 2C50 */  0x87, 0x9C, 0x80, 0xAC, 0x1B, 0x44, 0x40, 0xCE,  // .....D@.
                /* 2C58 */  0x0F, 0x44, 0xD5, 0xBC, 0x84, 0x02, 0x91, 0x5C,  // .D.....\
                /* 2C60 */  0x20, 0x3A, 0x98, 0x10, 0x20, 0x9A, 0xD6, 0xED,  //  :.. ...
                /* 2C68 */  0x01, 0x81, 0x82, 0x68, 0x40, 0xE4, 0xDD, 0x7E,  // ...h@..~
                /* 2C70 */  0x40, 0x0C, 0x44, 0x67, 0x25, 0x62, 0x17, 0x88,  // @.Dg%b..
                /* 2C78 */  0x69, 0x03, 0xD1, 0x41, 0x82, 0x00, 0xD1, 0x84,  // i..A....
                /* 2C80 */  0x40, 0x54, 0xA5, 0x5E, 0x20, 0x26, 0x19, 0x44,  // @T.^ &.D
                /* 2C88 */  0x07, 0x0E, 0xF2, 0x29, 0x0A, 0x44, 0xF4, 0x82,  // ...).D..
                /* 2C90 */  0xE8, 0x10, 0x4F, 0xFE, 0x7E, 0x02, 0x72, 0x08,  // ..O.~.r.
                /* 2C98 */  0x10, 0x01, 0x59, 0xCF, 0xB3, 0x3F, 0x10, 0x11,  // ..Y..?..
                /* 2CA0 */  0x07, 0xA2, 0xC3, 0x0B, 0x01, 0xA2, 0x29, 0x81,  // ......).
                /* 2CA8 */  0xA8, 0xBC, 0x47, 0x4E, 0x20, 0xA2, 0x15, 0x44,  // ..GN ..D
                /* 2CB0 */  0x07, 0x0F, 0x02, 0x44, 0x9F, 0x3E, 0x06, 0x72,  // ...D.>.r
                /* 2CB8 */  0x5E, 0x10, 0x01, 0x39, 0xBD, 0xE4, 0xFF, 0xFF,  // ^..9....
                /* 2CC0 */  0x20, 0xE8, 0xB7, 0xFF, 0x20, 0x18, 0x88, 0x0E,  //  ... ...
                /* 2CC8 */  0x1B, 0x04, 0x88, 0x66, 0x04, 0xA2, 0xE2, 0x7E,  // ...f...~
                /* 2CD0 */  0xA9, 0x02, 0xB2, 0x52, 0x10, 0x01, 0x39, 0x23,  // ...R..9#
                /* 2CD8 */  0x10, 0x0D, 0x0C, 0x44, 0x95, 0x3E, 0x7F, 0x02,  // ...D.>..
                /* 2CE0 */  0x11, 0xD9, 0x20, 0x1A, 0x08, 0x01, 0xA2, 0xE1,  // .. .....
                /* 2CE8 */  0x81, 0x68, 0x06, 0xD5, 0x87, 0x0C, 0x0A, 0xA2,  // .h......
                /* 2CF0 */  0x43, 0x03, 0x71, 0x7D, 0x68, 0xA0, 0x20, 0x02,  // C.q}h. .
                /* 2CF8 */  0x72, 0xC8, 0x4F, 0x53, 0x20, 0x92, 0x18, 0x44,  // r.OS ..D
                /* 2D00 */  0x83, 0x20, 0x6F, 0x23, 0x0D, 0x82, 0x80, 0x68,  // . o#...h
                /* 2D08 */  0xE0, 0xE4, 0x7F, 0x14, 0x88, 0x68, 0x06, 0x11,  // .....h..
                /* 2D10 */  0x90, 0xD3, 0x03, 0x51, 0x2D, 0x2F, 0x35, 0x01,  // ...Q-/5.
                /* 2D18 */  0x59, 0xE2, 0xE3, 0xE8, 0xE0, 0x19, 0x88, 0x80,  // Y.......
                /* 2D20 */  0x1C, 0x14, 0x88, 0xA6, 0x06, 0xA2, 0x21, 0x3F,  // ......!?
                /* 2D28 */  0x48, 0x3A, 0x74, 0x10, 0x10, 0x1D, 0x85, 0xC8,  // H:t.....
                /* 2D30 */  0x53, 0x4C, 0x40, 0x96, 0x0E, 0x22, 0x20, 0x07,  // SL@.." .
                /* 2D38 */  0x07, 0xA2, 0x32, 0xDE, 0x4A, 0x81, 0x88, 0xB4,  // ..2.J...
                /* 2D40 */  0x87, 0x54, 0x20, 0xA2, 0x13, 0x44, 0x87, 0x07,  // .T ..D..
                /* 2D48 */  0x02, 0x44, 0xF3, 0x02, 0xD1, 0x78, 0xE2, 0x81,  // .D...x..
                /* 2D50 */  0x58, 0x58, 0x10, 0x01, 0x59, 0xB8, 0x79, 0x20,  // XX..Y.y 
                /* 2D58 */  0x16, 0x03, 0x44, 0x07, 0x00, 0xE2, 0xFE, 0x00,  // ..D.....
                /* 2D60 */  0x40, 0x41, 0x74, 0x00, 0x20, 0xF2, 0x0F, 0x00,  // @At. ...
                /* 2D68 */  0x14, 0x44, 0x87, 0x02, 0x02, 0x44, 0x05, 0xD8,  // .D...D..
                /* 2D70 */  0x1F, 0x3C, 0x05, 0xD1, 0xA1, 0x80, 0x00, 0x51,  // .<.....Q
                /* 2D78 */  0xED, 0xFA, 0x0F, 0x27, 0x14, 0x44, 0x07, 0x0C,  // ...'.D..
                /* 2D80 */  0xE2, 0xFF, 0xA0, 0x42, 0x41, 0x74, 0x20, 0x20,  // ...BAt  
                /* 2D88 */  0x40, 0x34, 0x31, 0x10, 0xD5, 0x1F, 0xE0, 0x10,  // @41.....
                /* 2D90 */  0x40, 0x41, 0x74, 0x78, 0x22, 0xCF, 0x5D, 0x01,  // @Atx".].
                /* 2D98 */  0x39, 0x20, 0x88, 0x8E, 0x7F, 0xA4, 0x01, 0x10,  // 9 ......
                /* 2DA0 */  0x0B, 0x07, 0xA2, 0x41, 0x92, 0x0A, 0x83, 0xA4,  // ...A....
                /* 2DA8 */  0x15, 0xFE, 0xFF, 0x40, 0x2C, 0x5D, 0x86, 0x83,  // ...@,]..
                /* 2DB0 */  0x08, 0x05, 0xD1, 0x41, 0x8D, 0x94, 0x38, 0x6C,  // ...A..8l
                /* 2DB8 */  0x50, 0x10, 0x01, 0x39, 0x3C, 0x10, 0x95, 0x92,  // P..9<...
                /* 2DC0 */  0x62, 0xA0, 0x14, 0x44, 0x40, 0x0E, 0x09, 0x44,  // b..D@..D
                /* 2DC8 */  0x75, 0xD4, 0x00, 0x62, 0xA2, 0x40, 0x04, 0x64,  // u..b.@.d
                /* 2DD0 */  0x0D, 0x39, 0x80, 0x98, 0x22, 0x10, 0x01, 0x39,  // .9.."..9
                /* 2DD8 */  0x11, 0x10, 0xCD, 0x07, 0x44, 0xB5, 0xF6, 0x00,  // ....D...
                /* 2DE0 */  0x62, 0xCA, 0x41, 0x74, 0x08, 0x20, 0x45, 0x06,  // b.At. E.
                /* 2DE8 */  0x44, 0x41, 0x74, 0xB0, 0x21, 0x49, 0x80, 0x58,  // DAt.!I.X
                /* 2DF0 */  0x02, 0x10, 0x1D, 0xBE, 0x48, 0x13, 0x20, 0x26,  // ....H. &
                /* 2DF8 */  0x1F, 0x44, 0x40, 0x96, 0xF2, 0x16, 0x14, 0x90,  // .D@.....
                /* 2E00 */  0x85, 0x81, 0xE8, 0x90, 0x40, 0xB2, 0x0C, 0x82,  // ....@...
                /* 2E08 */  0x82, 0xE8, 0x60, 0x43, 0xBA, 0x00, 0x31, 0xD5,  // ..`C..1.
                /* 2E10 */  0x20, 0x02, 0xB2, 0x8A, 0x32, 0xE7, 0x3F, 0x96,  //  ...2.?.
                /* 2E18 */  0x3F, 0x0D, 0x10, 0x53, 0xDF, 0x06, 0x84, 0x25,  // ?..S...%
                /* 2E20 */  0x7E, 0x44, 0x0A, 0xD4, 0xF1, 0x41, 0x74, 0x2C,  // ~D...At,
                /* 2E28 */  0x22, 0x75, 0x8E, 0x17, 0x14, 0x44, 0x40, 0x0E,  // "u...D@.
                /* 2E30 */  0x90, 0x07, 0x88, 0xC5, 0x01, 0x11, 0x90, 0xA3,  // ........
                /* 2E38 */  0x06, 0x02, 0x62, 0xC1, 0x41, 0x74, 0x54, 0x21,  // ..b.AtT!
                /* 2E40 */  0x85, 0x8E, 0x19, 0x14, 0x44, 0x03, 0x20, 0x8D,  // ....D. .
                /* 2E48 */  0x8E, 0x49, 0x14, 0x44, 0xC7, 0x0D, 0x12, 0x09,  // .I.D....
                /* 2E50 */  0x90, 0x82, 0xE8, 0x54, 0x4B, 0x2A, 0x01, 0x31,  // ...TK*.1
                /* 2E58 */  0x8D, 0x20, 0x02, 0xB2, 0xA6, 0x4C, 0x40, 0x4C,  // . ...L@L
                /* 2E60 */  0x21, 0x88, 0x80, 0xAC, 0xFC, 0xF1, 0xAB, 0x23,  // !......#
                /* 2E68 */  0x04, 0x01, 0x11, 0x90, 0x25, 0x94, 0x02, 0x62,  // ....%..b
                /* 2E70 */  0x7A, 0x40, 0x74, 0xA4, 0x21, 0x40, 0x54, 0x4D,  // z@t.!@TM
                /* 2E78 */  0xAA, 0x23, 0x1A, 0x05, 0xD1, 0x11, 0x8D, 0x00,  // .#......
                /* 2E80 */  0xD1, 0xC4, 0xB1, 0x06, 0x49, 0x41, 0x74, 0x0C,  // ....IAt.
                /* 2E88 */  0x22, 0xB5, 0x8E, 0x41, 0x14, 0x44, 0x47, 0x18,  // "..A.DG.
                /* 2E90 */  0x92, 0x0B, 0x88, 0xA5, 0x00, 0xD1, 0xD1, 0x80,  // ........
                /* 2E98 */  0xF4, 0xFA, 0xFF, 0x1F, 0x0D, 0x28, 0x88, 0x8E,  // .....(..
                /* 2EA0 */  0x22, 0xA4, 0xD8, 0x51, 0x84, 0x82, 0x68, 0x10,  // "..Q..h.
                /* 2EA8 */  0x04, 0x88, 0xE6, 0x07, 0xA2, 0x0A, 0xA2, 0x01,  // ........
                /* 2EB0 */  0x31, 0x39, 0x20, 0x3A, 0x32, 0x10, 0x20, 0x9A,  // 19 :2. .
                /* 2EB8 */  0x11, 0x88, 0x8A, 0xAB, 0x76, 0xD4, 0xA0, 0x20,  // ....v.. 
                /* 2EC0 */  0x3A, 0x6E, 0x91, 0x6C, 0x47, 0x10, 0x0A, 0x22,  // :n.lG.."
                /* 2EC8 */  0x20, 0xAB, 0x0D, 0x77, 0x1C, 0xA1, 0x20, 0x1A,  //  ..w.. .
                /* 2ED0 */  0x28, 0x29, 0x37, 0x50, 0x0A, 0xA2, 0xE3, 0x1F,  // ()7P....
                /* 2ED8 */  0x01, 0xA2, 0x62, 0xD2, 0x1D, 0xB3, 0x68, 0xBC,  // ..b...h.
                /* 2EE0 */  0xE3, 0x17, 0x05, 0xD1, 0x51, 0x8F, 0x00, 0x51,  // ....Q..Q
                /* 2EE8 */  0x11, 0xF5, 0x8E, 0x68, 0xB4, 0x1F, 0x10, 0x53,  // ...h...S
                /* 2EF0 */  0x06, 0x22, 0x20, 0x27, 0x04, 0xA2, 0x71, 0x81,  // ." '..q.
                /* 2EF8 */  0xA8, 0xF2, 0x80, 0x87, 0x00, 0x0A, 0x22, 0x20,  // ......" 
                /* 2F00 */  0xAB, 0x2E, 0x08, 0xC4, 0x32, 0x80, 0xE8, 0x98,  // ....2...
                /* 2F08 */  0x45, 0x1A, 0x1E, 0x2B, 0x28, 0x88, 0x80, 0x9C,  // E..+(...
                /* 2F10 */  0x27, 0xE2, 0x31, 0x8F, 0x82, 0x08, 0xC8, 0xEA,  // '.1.....
                /* 2F18 */  0x2A, 0x1E, 0x81, 0x28, 0x88, 0x80, 0x9C, 0xA0,  // *..(....
                /* 2F20 */  0xE3, 0xA1, 0x81, 0x82, 0xE8, 0x90, 0x40, 0x42,  // ......@B
                /* 2F28 */  0x1E, 0x12, 0x28, 0x88, 0x80, 0x1C, 0x0E, 0x88,  // ..(.....
                /* 2F30 */  0x26, 0x05, 0xA2, 0x3A, 0x4B, 0x1E, 0xBD, 0x28,  // &..:K..(
                /* 2F38 */  0x88, 0x0E, 0x01, 0x04, 0x88, 0xC6, 0x07, 0xA2,  // ........
                /* 2F40 */  0x71, 0x53, 0x1E, 0x26, 0x28, 0x88, 0x80, 0x2C,  // qS.&(..,
                /* 2F48 */  0xA4, 0x26, 0x10, 0x93, 0x05, 0xA2, 0xA3, 0x20,  // .&..... 
                /* 2F50 */  0x01, 0xA2, 0xF1, 0x80, 0x68, 0xAC, 0x9E, 0x87,  // ....h...
                /* 2F58 */  0x01, 0x0A, 0xA2, 0x23, 0x08, 0x09, 0x0A, 0xC4,  // ...#....
                /* 2F60 */  0x84, 0x83, 0xE8, 0x48, 0x45, 0x80, 0x68, 0x74,  // ...HE.ht
                /* 2F68 */  0x20, 0x1A, 0xB5, 0xE8, 0xE1, 0x82, 0x82, 0xE8,  //  .......
                /* 2F70 */  0x60, 0x49, 0x9A, 0x1E, 0x1F, 0x69, 0x54, 0x20,  // `I...iT 
                /* 2F78 */  0x16, 0x25, 0xEA, 0xFF, 0x1F, 0x88, 0x05, 0x03,  // .%......
                /* 2F80 */  0xA2, 0x11, 0xB3, 0x1E, 0x5B, 0x28, 0x88, 0x0E,  // ....[(..
                /* 2F88 */  0x0F, 0xA4, 0xEB, 0x71, 0x8A, 0x82, 0xE8, 0xC0,  // ...q....
                /* 2F90 */  0x40, 0xC2, 0x1E, 0x18, 0x28, 0x88, 0x0E, 0x07,  // @...(...
                /* 2F98 */  0x04, 0x88, 0x8A, 0x29, 0x7B, 0x38, 0xA0, 0x6D,  // ...){8.m
                /* 2FA0 */  0x0F, 0x07, 0x14, 0x44, 0x47, 0x22, 0x02, 0x44,  // ...DG".D
                /* 2FA8 */  0x63, 0x03, 0xD1, 0x65, 0x3C, 0x60, 0x50, 0x10,  // c..e<`P.
                /* 2FB0 */  0x01, 0x39, 0x15, 0x10, 0x8D, 0x08, 0x44, 0xF5,  // .9....D.
                /* 2FB8 */  0xF5, 0x3D, 0x06, 0x52, 0x10, 0x1D, 0x22, 0x48,  // .=.R.."H
                /* 2FC0 */  0x60, 0x20, 0x26, 0x15, 0x44, 0x40, 0x0E, 0x0C,  // ` &.D@..
                /* 2FC8 */  0x44, 0xE3, 0x03, 0x51, 0x21, 0x8D, 0x07, 0x4F,  // D..Q!..O
                /* 2FD0 */  0x41, 0x34, 0x18, 0x02, 0x44, 0x63, 0x03, 0x51,  // A4..Dc.Q
                /* 2FD8 */  0x61, 0x99, 0x8F, 0x3F, 0x14, 0x44, 0x40, 0x16,  // a..?.D@.
                /* 2FE0 */  0xD5, 0x19, 0x88, 0x49, 0x04, 0xD1, 0x21, 0x82,  // ...I..!.
                /* 2FE8 */  0xA4, 0x3E, 0xCC, 0xD0, 0xD6, 0x87, 0x02, 0xFA,  // .>......
                /* 2FF0 */  0x40, 0xD7, 0x01, 0x85, 0x80, 0xE8, 0x88, 0x47,  // @......G
                /* 2FF8 */  0x6A, 0x1F, 0xF1, 0x28, 0x88, 0x8E, 0x5E, 0x24,  // j..(..^$
                /* 3000 */  0xF8, 0xD1, 0x8B, 0x82, 0xE8, 0x48, 0x43, 0x8A,  // .....HC.
                /* 3008 */  0x1F, 0x69, 0x28, 0x88, 0x80, 0x2C, 0xB5, 0xF9,  // .i(..,..
                /* 3010 */  0xF1, 0x8D, 0x82, 0xE8, 0x10, 0x42, 0xA2, 0x1F,  // .....B..
                /* 3018 */  0x42, 0x28, 0x88, 0x0E, 0x27, 0x24, 0xFB, 0x61,  // B(..'$.a
                /* 3020 */  0x80, 0x82, 0xE8, 0x68, 0x49, 0xBA, 0x03, 0xB1,  // ...hI...
                /* 3028 */  0x50, 0x20, 0x3A, 0xBA, 0x92, 0xF2, 0x40, 0x2C,  // P :...@,
                /* 3030 */  0x33, 0x88, 0x0E, 0x19, 0x24, 0xFD, 0xA1, 0x80,  // 3...$...
                /* 3038 */  0x82, 0xE8, 0x88, 0x43, 0xEA, 0x1F, 0x0D, 0x29,  // ...C...)
                /* 3040 */  0x88, 0x0E, 0x01, 0x24, 0xFF, 0xA1, 0x80, 0x82,  // ...$....
                /* 3048 */  0x08, 0xC8, 0x7F, 0xC1, 0x37, 0x9D, 0x83, 0x21,  // ....7..!
                /* 3050 */  0x20, 0x3A, 0xC2, 0x11, 0x03, 0x40, 0x4C, 0x2F,  //  :...@L/
                /* 3058 */  0x88, 0x0E, 0x1A, 0xC4, 0x01, 0x10, 0x0B, 0x07,  // ........
                /* 3060 */  0xA2, 0x03, 0x03, 0x91, 0xF0, 0xFF, 0x07, 0x62,  // .......b
                /* 3068 */  0xC1, 0x40, 0x04, 0xE4, 0xD0, 0x1A, 0x80, 0x98,  // .@......
                /* 3070 */  0x02, 0x0F, 0x40, 0x2C, 0x2F, 0x88, 0x8E, 0x55,  // ..@,/..U
                /* 3078 */  0x04, 0x88, 0xEA, 0x52, 0x01, 0xC4, 0x44, 0x82,  // ...R..D.
                /* 3080 */  0xE8, 0xE0, 0x49, 0x5C, 0x00, 0x31, 0x81, 0x20,  // ..I\.1. 
                /* 3088 */  0x3A, 0x4A, 0x12, 0x1B, 0x40, 0x2C, 0x09, 0x88,  // :J..@,..
                /* 3090 */  0x0E, 0x10, 0x44, 0x07, 0x10, 0x4B, 0x01, 0xA2,  // ..D..K..
                /* 3098 */  0xA3, 0x14, 0x11, 0x02, 0xC4, 0xA2, 0x82, 0xE8,  // ........
                /* 30A0 */  0x78, 0x47, 0x8C, 0x00, 0xB1, 0x98, 0x20, 0x3A,  // xG.... :
                /* 30A8 */  0x4A, 0x11, 0x27, 0x40, 0x4C, 0x89, 0x14, 0x20,  // J.'@L.. 
                /* 30B0 */  0x96, 0x1B, 0x44, 0x40, 0x56, 0x61, 0x05, 0x88,  // ..D@Va..
                /* 30B8 */  0xE9, 0xF3, 0x02, 0xC4, 0xC4, 0x82, 0xE8, 0x68,  // .......h
                /* 30C0 */  0x46, 0xC4, 0x00, 0x31, 0xA1, 0x20, 0x02, 0x72,  // F..1. .r
                /* 30C8 */  0x08, 0x35, 0x40, 0x2C, 0x11, 0x88, 0x8E, 0x5D,  // .5@,...]
                /* 30D0 */  0xC4, 0x0D, 0x10, 0x4B, 0x03, 0xA2, 0x63, 0x27,  // ...K..c'
                /* 30D8 */  0xB1, 0x03, 0xC4, 0x22, 0x83, 0xE8, 0x98, 0x4B,  // ..."...K
                /* 30E0 */  0xF4, 0x00, 0xB1, 0xB8, 0x20, 0x3A, 0x72, 0x12,  // .... :r.
                /* 30E8 */  0x43, 0x40, 0x4C, 0x11, 0x88, 0x0E, 0x43, 0x04,  // C@L...C.
                /* 30F0 */  0x88, 0xAA, 0x51, 0x04, 0xC4, 0x34, 0x4A, 0x02,  // ..Q..4J.
                /* 30F8 */  0x62, 0x82, 0x41, 0x74, 0x14, 0x24, 0x96, 0x06,  // b.At.$..
                /* 3100 */  0x45, 0x41, 0x74, 0x78, 0x22, 0x9E, 0x80, 0x58,  // EAtx"..X
                /* 3108 */  0x1C, 0x10, 0x1D, 0x2E, 0x88, 0xA9, 0x03, 0x00,  // ........
                /* 3110 */  0x05, 0xD1, 0xA1, 0x84, 0xA8, 0x02, 0x62, 0xC1,  // ......b.
                /* 3118 */  0x41, 0x74, 0xBC, 0x23, 0xB6, 0x06, 0x41, 0x41,  // At.#..AA
                /* 3120 */  0x74, 0x30, 0x21, 0x40, 0x54, 0x88, 0x2E, 0x20,  // t0!@T.. 
                /* 3128 */  0x26, 0x56, 0x18, 0x10, 0x53, 0x0E, 0xA2, 0x43,  // &V..S..C
                /* 3130 */  0x0C, 0x31, 0x06, 0xC4, 0x54, 0x83, 0xE8, 0x00,  // .1..T...
                /* 3138 */  0x42, 0x9C, 0x01, 0xB1, 0x88, 0x20, 0x3A, 0xBC,  // B.... :.
                /* 3140 */  0x10, 0x69, 0x40, 0x2C, 0x1E, 0x88, 0x06, 0x49,  // .i@,...I
                /* 3148 */  0xBC, 0x0D, 0x92, 0x82, 0x08, 0xC8, 0xD9, 0x80,  // ........
                /* 3150 */  0x68, 0x50, 0x20, 0x9A, 0x4B, 0xDC, 0xFF, 0x1F,  // hP .K...
                /* 3158 */  0x88, 0xA5, 0x04, 0xD1, 0x31, 0x98, 0x98, 0x03,  // ....1...
                /* 3160 */  0x62, 0xEA, 0x41, 0x74, 0xFC, 0x23, 0xEE, 0x80,  // b.At.#..
                /* 3168 */  0x58, 0x62, 0x10, 0x0D, 0x9E, 0xC8, 0x1B, 0x3C,  // Xb.....<
                /* 3170 */  0x05, 0xD1, 0xB1, 0x8C, 0xD8, 0x03, 0x62, 0xF2,  // ......b.
                /* 3178 */  0x41, 0x74, 0xE8, 0x20, 0xFA, 0x80, 0x98, 0x30,  // At. ...0
                /* 3180 */  0x10, 0x0D, 0x80, 0x18, 0x1C, 0x2A, 0x7D, 0x52,  // .....*}R
                /* 3188 */  0x3C, 0xF8, 0x30, 0x87, 0x80, 0x2C, 0x29, 0x88,  // <.0..,).
                /* 3190 */  0x8E, 0xA7, 0x44, 0x22, 0x10, 0x53, 0x0B, 0xA2,  // ..D".S..
                /* 3198 */  0x43, 0x02, 0xB1, 0x78, 0x48, 0xA0, 0x20, 0x3A,  // C..xH. :
                /* 31A0 */  0x04, 0x10, 0x8F, 0x07, 0x04, 0x0A, 0xA2, 0x43,  // .......C
                /* 31A8 */  0x16, 0x11, 0x09, 0xC4, 0x82, 0x80, 0xE8, 0x18,  // ........
                /* 31B0 */  0x47, 0x54, 0x0E, 0x96, 0x82, 0xE8, 0x20, 0x42,  // GT.... B
                /* 31B8 */  0x5C, 0x02, 0xB1, 0x64, 0x20, 0x1A, 0x3C, 0xF1,  // \..d .<.
                /* 31C0 */  0x79, 0x5C, 0xA0, 0x20, 0x54, 0xA1, 0x51, 0x40,  // y\. T.Q@
                /* 31C8 */  0x26, 0x17, 0x44, 0x87, 0x08, 0xA2, 0x74, 0x40,  // &.D...t@
                /* 31D0 */  0x14, 0x44, 0x40, 0x56, 0x23, 0x15, 0xE4, 0xD1,  // .D@V#...
                /* 31D8 */  0xCD, 0x0A, 0xB4, 0x1E, 0x20, 0x28, 0x08, 0x55,  // .... (.U
                /* 31E0 */  0x20, 0x16, 0x94, 0xC9, 0x01, 0xD1, 0x91, 0x88,  //  .......
                /* 31E8 */  0x00, 0xD1, 0x8C, 0x40, 0x54, 0xA6, 0xD9, 0xE3,  // ...@T...
                /* 31F0 */  0x08, 0x05, 0xD1, 0x60, 0x89, 0xDA, 0x63, 0x02,  // ...`..c.
                /* 31F8 */  0x05, 0xD1, 0xC1, 0x91, 0xC8, 0x3D, 0x72, 0x50,  // .....=rP
                /* 3200 */  0x10, 0x0D, 0x85, 0xD8, 0x05, 0x62, 0xD2, 0x40,  // .....b.@
                /* 3208 */  0x04, 0x64, 0x25, 0x0F, 0x93, 0x40, 0x44, 0x17,  // .d%..@D.
                /* 3210 */  0x88, 0x0E, 0xB5, 0x04, 0x88, 0xA6, 0x05, 0xA2,  // ........
                /* 3218 */  0xF9, 0x05, 0x1F, 0x29, 0xA8, 0xE1, 0xA1, 0x52,  // ...)...R
                /* 3220 */  0x10, 0x0D, 0x95, 0x00, 0xD1, 0xFF, 0x3F         // ......?
            })
            Method (WMAA, 3, Serialized)
            {
                If ((Arg1 == One))
                {
                    If ((DerefOf (Arg2 [Zero]) == 0x04))
                    {
                        Sleep (0x64)
                    }
                }

                CTID = 0x4141
                WSMI (Arg1, Arg2)
                Switch (ToInteger (Arg1))
                {
                    Case (One)
                    {
                        AAST = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        If ((DerefOf (Arg2 [Zero]) == 0x07))
                        {
                            \_SB.PCI0.LPC0.EC0.UPTM ()
                        }

                        Return (AAST) /* \_SB_.PCI0.WMID.AAST */
                    }
                    Case (0x02)
                    {
                        AAGT = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (AAGT) /* \_SB_.PCI0.WMID.AAGT */
                    }

                }

                Return (0xE1)
            }

            Method (WMAB, 3, Serialized)
            {
                CTID = 0x4241
                WSMI (Arg1, Arg2)
                Switch (ToInteger (Arg1))
                {
                    Case (One)
                    {
                        ABST = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (ABST) /* \_SB_.PCI0.WMID.ABST */
                    }
                    Case (0x02)
                    {
                        ABGT = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (ABGT) /* \_SB_.PCI0.WMID.ABGT */
                    }

                }

                Return (0xE1)
            }

            Method (WMAE, 3, Serialized)
            {
                CTID = 0x4541
                WSMI (Arg1, Arg2)
                Switch (ToInteger (Arg1))
                {
                    Case (One)
                    {
                        AAST = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (AAST) /* \_SB_.PCI0.WMID.AAST */
                    }
                    Case (0x02)
                    {
                        AAGT = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (AAGT) /* \_SB_.PCI0.WMID.AAGT */
                    }

                }

                Return (0xE1)
            }

            Method (WMBE, 3, Serialized)
            {
                CTID = 0x4542
                WSMI (Arg1, Arg2)
                Switch (ToInteger (Arg1))
                {
                    Case (0x13)
                    {
                        BEBI = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BEBI) /* \_SB_.PCI0.WMID.BEBI */
                    }
                    Case (0x14)
                    {
                        BEGB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BEGB) /* \_SB_.PCI0.WMID.BEGB */
                    }
                    Case (0x15)
                    {
                        BESB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BESB) /* \_SB_.PCI0.WMID.BESB */
                    }

                }

                Switch (ToInteger (Arg1))
                {
                    Case (0x13)
                    {
                        BEBI [0x02] = One
                        Return (BEBI) /* \_SB_.PCI0.WMID.BEBI */
                    }
                    Case (0x14)
                    {
                        BEGB [One] = One
                        Return (BEGB) /* \_SB_.PCI0.WMID.BEGB */
                    }
                    Case (0x15)
                    {
                        BESB [Zero] = One
                        Return (BESB) /* \_SB_.PCI0.WMID.BESB */
                    }

                }
            }

            Method (WMBK, 3, Serialized)
            {
                CTID = 0x4B42
                WSMI (Arg1, Arg2)
                Switch (ToInteger (Arg1))
                {
                    Case (One)
                    {
                        BKCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKCP) /* \_SB_.PCI0.WMID.BKCP */
                    }
                    Case (0x02)
                    {
                        BKCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKCP) /* \_SB_.PCI0.WMID.BKCP */
                    }
                    Case (0x03)
                    {
                        BKCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKCP) /* \_SB_.PCI0.WMID.BKCP */
                    }
                    Case (0x08)
                    {
                        BKMN = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKMN) /* \_SB_.PCI0.WMID.BKMN */
                    }
                    Case (0x09)
                    {
                        BKSN = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKSN) /* \_SB_.PCI0.WMID.BKSN */
                    }
                    Case (0x0A)
                    {
                        BKAT = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKAT) /* \_SB_.PCI0.WMID.BKAT */
                    }
                    Case (0x0B)
                    {
                        BKSB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKSB) /* \_SB_.PCI0.WMID.BKSB */
                    }
                    Case (0x0D)
                    {
                        BKSB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKSB) /* \_SB_.PCI0.WMID.BKSB */
                    }
                    Case (0x10)
                    {
                        BKGB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKGB) /* \_SB_.PCI0.WMID.BKGB */
                    }
                    Case (0x11)
                    {
                        BKSB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKSB) /* \_SB_.PCI0.WMID.BKSB */
                    }
                    Case (0x12)
                    {
                        BKCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKCP) /* \_SB_.PCI0.WMID.BKCP */
                    }
                    Case (0x13)
                    {
                        BKCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKCP) /* \_SB_.PCI0.WMID.BKCP */
                    }
                    Case (0x14)
                    {
                        BKGU = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKGU) /* \_SB_.PCI0.WMID.BKGU */
                    }
                    Case (0x15)
                    {
                        BKSU = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKSU) /* \_SB_.PCI0.WMID.BKSU */
                    }
                    Case (0x16)
                    {
                        BKGS = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKGS) /* \_SB_.PCI0.WMID.BKGS */
                    }
                    Case (0x17)
                    {
                        BKSS = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKSS) /* \_SB_.PCI0.WMID.BKSS */
                    }
                    Case (0x18)
                    {
                        BKCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKCP) /* \_SB_.PCI0.WMID.BKCP */
                    }
                    Case (0x19)
                    {
                        BKCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKCP) /* \_SB_.PCI0.WMID.BKCP */
                    }
                    Case (0x1A)
                    {
                        BKGP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKGP) /* \_SB_.PCI0.WMID.BKGP */
                    }
                    Case (0x1B)
                    {
                        BKSS = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BKSS) /* \_SB_.PCI0.WMID.BKSS */
                    }

                }

                Return (One)
            }

            Method (WMBL, 3, Serialized)
            {
                CTID = 0x4C42
                WSMI (Arg1, Arg2)
                Switch (ToInteger (Arg1))
                {
                    Case (One)
                    {
                        BLCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLCP) /* \_SB_.PCI0.WMID.BLCP */
                    }
                    Case (0x02)
                    {
                        BLSP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLSP) /* \_SB_.PCI0.WMID.BLSP */
                    }
                    Case (0x03)
                    {
                        BLGB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLGB) /* \_SB_.PCI0.WMID.BLGB */
                    }
                    Case (0x04)
                    {
                        BLSP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLSP) /* \_SB_.PCI0.WMID.BLSP */
                    }
                    Case (0x05)
                    {
                        BLSP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLSP) /* \_SB_.PCI0.WMID.BLSP */
                    }
                    Case (0x06)
                    {
                        BLLB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLLB) /* \_SB_.PCI0.WMID.BLLB */
                    }
                    Case (0x07)
                    {
                        BLSD = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLSD) /* \_SB_.PCI0.WMID.BLSD */
                    }
                    Case (0x08)
                    {
                        BLGD = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLGD) /* \_SB_.PCI0.WMID.BLGD */
                    }
                    Case (0x09)
                    {
                        BLDR = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLDR) /* \_SB_.PCI0.WMID.BLDR */
                    }
                    Case (0x0A)
                    {
                        BLGP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLGP) /* \_SB_.PCI0.WMID.BLGP */
                    }
                    Case (0x0B)
                    {
                        BLCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLCP) /* \_SB_.PCI0.WMID.BLCP */
                    }
                    Case (0x0C)
                    {
                        BLCP = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLCP) /* \_SB_.PCI0.WMID.BLCP */
                    }
                    Case (0x0D)
                    {
                        BLDR = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLDR) /* \_SB_.PCI0.WMID.BLDR */
                    }
                    Case (0x0E)
                    {
                        BLDR = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLDR) /* \_SB_.PCI0.WMID.BLDR */
                    }
                    Case (0x0F)
                    {
                        BLDR = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BLDR) /* \_SB_.PCI0.WMID.BLDR */
                    }
                    Case (0x10)
                    {
                        Return (\_SB.PCI0.LPC0.EC0.NWFS (RefOf (Arg2)))
                    }

                }

                Return (One)
            }

            Method (WMBG, 3, Serialized)
            {
                CTID = 0x4742
                WSMI (Arg1, Arg2)
                Switch (ToInteger (Arg1))
                {
                    Case (One)
                    {
                        BGS3 = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BGS3) /* \_SB_.PCI0.WMID.BGS3 */
                    }

                }

                Return (0xFFFF)
            }

            Method (WMBH, 3, Serialized)
            {
                CTID = 0x4842
                If ((Arg1 == 0x05))
                {
                    BHSK = Arg2
                    Local0 = DerefOf (BHSK [Zero])
                    Local1 = DerefOf (BHSK [One])
                    Local3 = 0x02
                    BHGK [One] = Zero
                    BHGK [0x02] = Zero
                    BHGK [0x03] = Zero
                    BHGK [0x04] = Zero
                    BHGK [0x05] = Zero
                    BHGK [0x06] = Zero
                    BHGK [0x07] = Zero
                    If ((Local0 == Zero))
                    {
                        Local3 = \_SB.PCI0.LPC0.EC0.GGSI (Arg2, RefOf (Local2))
                        If ((Local3 == Zero))
                        {
                            BHGK [0x03] = (Local2 & 0xFF)
                            Local2 >>= 0x08
                            BHGK [0x04] = (Local2 & 0xFF)
                        }
                    }
                    ElseIf ((Local0 == One))
                    {
                        Local3 = \_SB.PCI0.LPC0.EC0.GGSI (Arg2, RefOf (Local2))
                        If ((Local3 == Zero))
                        {
                            BHGK [One] = (Local2 & 0xFF)
                            Local2 >>= 0x08
                            BHGK [0x02] = (Local2 & 0xFF)
                        }
                    }
                    ElseIf ((Local0 == 0x02))
                    {
                        Local3 = \_SB.PCI0.LPC0.EC0.GGSI (Arg2, RefOf (Local2))
                        If ((Local3 == Zero))
                        {
                            BHGK [0x05] = Local2
                        }
                    }

                    BHGK [Zero] = Local3
                    Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                }

                Switch (ToInteger (Arg1))
                {
                    Case (One)
                    {
                        WSMI (Arg1, Arg2)
                        BHSK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHSK) /* \_SB_.PCI0.WMID.BHSK */
                    }
                    Case (0x02)
                    {
                        WSMI (Arg1, Arg2)
                        BHSK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHSK) /* \_SB_.PCI0.WMID.BHSK */
                    }
                    Case (0x03)
                    {
                        WSMI (Arg1, Arg2)
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x04)
                    {
                        WSMI (Arg1, Arg2)
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x06)
                    {
                        WSMI (Arg1, Arg2)
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x07)
                    {
                        WSMI (Arg1, Arg2)
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x08)
                    {
                        WSMI (Arg1, Arg2)
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x09)
                    {
                        WSMI (Arg1, Arg2)
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x0A)
                    {
                        WSMI (Arg1, Arg2)
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x0B)
                    {
                        WSMI (Arg1, Arg2)
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x0C)
                    {
                        WSMI (Arg1, Arg2)
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x0D)
                    {
                        WSMI (Arg1, Arg2)
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x0E)
                    {
                        WSMI (Arg1, Arg2)
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x0F)
                    {
                        WSMI (Arg1, Arg2)
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x10)
                    {
                        WSMI (Arg1, Arg2)
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x11)
                    {
                        WSMI (Arg1, Arg2)
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x12)
                    {
                        WSMI (Arg1, Arg2)
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x13)
                    {
                        OSMI (Arg1)
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x14)
                    {
                        WSMI (Arg1, Arg2)
                        BHSK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHSK) /* \_SB_.PCI0.WMID.BHSK */
                    }
                    Case (0x15)
                    {
                        OSMI (Arg1)
                        BHLK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHLK) /* \_SB_.PCI0.WMID.BHLK */
                    }
                    Case (0x16)
                    {
                        WSMI (Arg1, Arg2)
                        BHSK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHSK) /* \_SB_.PCI0.WMID.BHSK */
                    }
                    Case (0x17)
                    {
                        WSMI (Arg1, Arg2)
                        BHGK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHGK) /* \_SB_.PCI0.WMID.BHGK */
                    }
                    Case (0x18)
                    {
                        WSMI (Arg1, Arg2)
                        BHSK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHSK) /* \_SB_.PCI0.WMID.BHSK */
                    }
                    Case (0x19)
                    {
                        WSMI (Arg1, Arg2)
                        BHPK = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (BHPK) /* \_SB_.PCI0.WMID.BHPK */
                    }
                    Default
                    {
                        Return (One)
                    }

                }
            }

            Method (WMAC, 3, Serialized)
            {
                CTID = 0x4143
                Switch (ToInteger (Arg1))
                {
                    Case (One)
                    {
                        WSMI (Arg1, Arg2)
                        ACSB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (ACSB) /* \_SB_.PCI0.WMID.ACSB */
                    }
                    Case (0x02)
                    {
                        WSMI (Arg1, Arg2)
                        ACGB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (ACGB) /* \_SB_.PCI0.WMID.ACGB */
                    }
                    Case (0x05)
                    {
                        OSMI (Arg1)
                        ACFB = WMIB /* \_SB_.PCI0.WMID.WMIB */
                        Return (ACFB) /* \_SB_.PCI0.WMID.ACFB */
                    }

                }

                Return (One)
            }

            Method (EVBC, 0, Serialized)
            {
                Local0 = DerefOf (FEBC [Zero])
                Switch (Local0)
                {
                    Case (One)
                    {
                        CLBC (0x04, 0x04)
                        Local1 = DerefOf (FEBC [One])
                        Local2 = Zero
                        If (((Local1 > Zero) && (Local1 < 0x20)))
                        {
                            Local3 = \_SB.PCI0.LPC0.EC0.GCMS (RefOf (Local2))
                            If ((Local3 != Zero))
                            {
                                CLBC (Zero, 0x08)
                            }
                            Else
                            {
                                FEBC [0x02] = (Local2 & 0xFF)
                                Local2 >>= 0x08
                                FEBC [0x03] = (Local2 & 0xFF)
                            }
                        }
                        ElseIf (((Local1 > 0x80) && (Local1 < 0xA0)))
                        {
                            Local3 = \_SB.PCI0.LPC0.EC0.GOTS (Local1, RefOf (Local2))
                            If ((Local3 != Zero))
                            {
                                CLBC (Zero, 0x08)
                            }
                            Else
                            {
                                FEBC [0x02] = (Local2 & 0xFF)
                                Local2 >>= 0x08
                                FEBC [0x03] = (Local2 & 0xFF)
                            }
                        }
                        Else
                        {
                            FEBC [0x02] = Zero
                            FEBC [0x03] = Zero
                        }
                    }
                    Case (0x02)
                    {
                        CLBC (0x02, 0x06)
                    }
                    Case (0x03)
                    {
                        CLBC (0x02, 0x06)
                    }
                    Case (0x04)
                    {
                        CLBC (0x03, 0x05)
                        Local1 = Zero
                        Local2 = \_SB.PCI0.LPC0.EC0.GBL1 (RefOf (Local1))
                        If ((Local2 != Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            FEBC [One] = (Local1 & 0xFF)
                            Local2 = \_SB.PCI0.LPC0.EC0.GBL2 (RefOf (Local1))
                            If ((Local2 != Zero))
                            {
                                FEBC [0x02] = Zero
                            }
                            Else
                            {
                                FEBC [0x02] = (Local1 & 0xFF)
                            }
                        }
                    }
                    Case (0x05)
                    {
                        Local1 = Zero
                        Local3 = \_SB.PCI0.LPC0.EC0.GSTY (RefOf (Local1))
                        If ((Local3 != Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            FEBC [One] = (Local1 & 0xFF)
                            Local4 = Zero
                            Local5 = \_SB.PCI0.LPC0.EC0.GSDA (RefOf (Local4))
                            If ((Local5 != Zero))
                            {
                                CLBC (Zero, 0x08)
                            }
                            Else
                            {
                                FEBC [0x02] = (Local4 & 0xFF)
                                Local4 >>= 0x08
                                FEBC [0x03] = (Local4 & 0xFF)
                                Local4 >>= 0x08
                                FEBC [0x04] = (Local4 & 0xFF)
                                Local4 >>= 0x08
                                FEBC [0x05] = (Local4 & 0xFF)
                            }
                        }
                    }
                    Case (0x06)
                    {
                        CLBC (0x03, 0x05)
                        Local1 = Zero
                        Local3 = \_SB.PCI0.LPC0.EC0.GTTY (RefOf (Local1))
                        If ((Local3 != Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            FEBC [One] = (Local1 & 0xFF)
                            Local4 = Zero
                            Local5 = \_SB.PCI0.LPC0.EC0.GTDA (RefOf (Local4))
                            If ((Local5 != Zero))
                            {
                                CLBC (Zero, 0x08)
                            }
                            Else
                            {
                                FEBC [0x02] = (Local4 & 0xFF)
                            }
                        }
                    }
                    Case (0x07)
                    {
                        CLBC (0x03, 0x05)
                        Local1 = Zero
                        Local3 = \_SB.PCI0.LPC0.EC0.GHKF (RefOf (Local1))
                        If ((Local3 != Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            FEBC [One] = (Local1 & 0xFF)
                            Local4 = Zero
                            Local5 = \_SB.PCI0.LPC0.EC0.GHKD (RefOf (Local4))
                            If ((Local5 != Zero))
                            {
                                CLBC (Zero, 0x08)
                            }
                            Else
                            {
                                FEBC [0x02] = (Local4 & 0xFF)
                            }
                        }
                    }
                    Case (0x08)
                    {
                        CLBC (0x02, 0x06)
                        Local1 = Zero
                        Local3 = \_SB.PCI0.LPC0.EC0.GACS (RefOf (Local1))
                        If ((Local3 != Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            FEBC [One] = (Local1 & 0xFF)
                        }
                    }
                    Case (0x09)
                    {
                        CLBC (0x02, 0x06)
                        Local1 = Zero
                        Local3 = \_SB.PCI0.LPC0.EC0.GBBS (RefOf (Local1))
                        If ((Local3 != Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            FEBC [One] = (Local1 & 0xFF)
                        }
                    }
                    Case (0x0A)
                    {
                        CLBC (0x02, 0x06)
                        Local1 = Zero
                        Local3 = \_SB.PCI0.LPC0.EC0.GBSI (RefOf (Local1))
                        If ((Local3 != Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            FEBC [One] = (Local1 & 0xFF)
                        }
                    }
                    Case (0x0B)
                    {
                        CLBC (0x02, 0x06)
                        Local1 = Zero
                        Local3 = \_SB.PCI0.LPC0.EC0.GBBC (RefOf (Local1))
                        If ((Local3 != Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            FEBC [One] = (Local1 & 0xFF)
                        }
                    }
                    Case (0x0C)
                    {
                        CLBC (0x02, 0x06)
                        Local1 = Zero
                        Local3 = \_SB.PCI0.LPC0.EC0.GSKS (RefOf (Local1))
                        If ((Local3 != Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            FEBC [One] = (Local1 & 0xFF)
                        }
                    }
                    Case (0x0D)
                    {
                        CLBC (0x02, 0x06)
                        Local1 = Zero
                        Local3 = \_SB.PCI0.LPC0.EC0.GDDP (RefOf (Local1))
                        If ((Local3 != Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            FEBC [One] = (Local1 & 0xFF)
                        }
                    }
                    Case (0x0E)
                    {
                        Local1 = DerefOf (FEBC [One])
                        CLBC (Zero, 0x08)
                        Local3 = \_SB.PCI0.LPC0.EC0.CPCM (RefOf (Local1))
                        If ((Local3 != Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            FEBC [One] = (Local1 & 0xFF)
                        }
                    }
                    Default
                    {
                        CLBC (Zero, 0x08)
                    }

                }

                Return (FEBC) /* \_SB_.PCI0.WMID.FEBC */
            }

            Method (EVAE, 0, Serialized)
            {
                Local0 = DerefOf (FEBC [Zero])
                Switch (Local0)
                {
                    Case (One)
                    {
                        Local1 = DerefOf (FEBC [0x03])
                        Local1 <<= 0x08
                        Local1 = DerefOf (FEBC [0x02])
                        CLBC (Zero, 0x08)
                        Local3 = \_SB.PCI0.LPC0.EC0.SHME (RefOf (Local1))
                        If ((Local3 != Zero))
                        {
                            CLBC (Zero, 0x08)
                        }
                        Else
                        {
                            FEBC [0x02] = (Local1 & 0xFF)
                            Local1 >>= 0x08
                            FEBC [0x03] = (Local1 & 0xFF)
                        }
                    }
                    Default
                    {
                        CLBC (Zero, 0x08)
                    }

                }

                Return (FEBC) /* \_SB_.PCI0.WMID.FEBC */
            }

            Method (EVBD, 0, Serialized)
            {
                Local0 = DerefOf (FEBC [Zero])
                Switch (Local0)
                {
                    Case (One)
                    {
                        CLBC (0x02, 0x06)
                    }
                    Default
                    {
                        CLBC (Zero, 0x08)
                        FEBC [One] = 0xE1
                    }

                }

                Return (FEBC) /* \_SB_.PCI0.WMID.FEBC */
            }

            Method (_WED, 1, NotSerialized)  // _Wxx: Wake Event, xx=0x00-0xFF
            {
                If ((Arg0 == 0xBC))
                {
                    Return (EVBC ())
                }
                ElseIf ((Arg0 == 0xAE))
                {
                    Return (EVAE ())
                }
                ElseIf ((Arg0 == 0xBD))
                {
                    Return (EVBD ())
                }
                Else
                {
                    CLBC (Zero, 0x08)
                    Return (FEBC) /* \_SB_.PCI0.WMID.FEBC */
                }
            }
        }
    }
}



SSDT14
------
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00000001)
{
    /*
     * iASL Warning: There were 19 external control methods found during
     * disassembly, but only 0 were resolved (19 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.ALIB, IntObj)
    External (_SB_.LID_._LID, IntObj)
    External (_SB_.PCI0.GP17.VGA_, DeviceObj)
    External (M000, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (M012, MethodObj)    // Warning: Unknown method, guessing 5 arguments
    External (M013, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M019, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M020, MethodObj)    // Warning: Unknown method, guessing 5 arguments
    External (M021, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M023, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M024, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M025, UnknownObj)
    External (M026, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M043, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M049, IntObj)
    External (M084, UnknownObj)
    External (M090, IntObj)
    External (M091, IntObj)
    External (M093, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M094, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M095, MethodObj)    // Warning: Unknown method, guessing 4 arguments
    External (M097, MethodObj)    // Warning: Unknown method, guessing 7 arguments
    External (M098, IntObj)
    External (M099, IntObj)
    External (M101, IntObj)
    External (M102, IntObj)
    External (M103, IntObj)
    External (M104, IntObj)
    External (M111, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M112, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M113, MethodObj)    // Warning: Unknown method, guessing 4 arguments
    External (M131, IntObj)
    External (M133, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M232, MethodObj)    // Warning: Unknown method, guessing 7 arguments

    Scope (\_SB)
    {
        Name (MACO, Zero)
    }

    Scope (\_SB.PCI0.GP17.VGA)
    {
        Name (M189, Buffer (0x0100) {})
        Name (M190, Ones)
        Name (M191, Ones)
        Method (ATPX, 2, Serialized)
        {
            If ((Arg0 == Zero))
            {
                Return (PX00 ())
            }

            If ((Arg0 == One))
            {
                Return (PX01 ())
            }

            If ((Arg0 == 0x02))
            {
                PX02 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
            }

            If ((Arg0 == 0x03))
            {
                PX03 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
            }

            If ((Arg0 == 0x04))
            {
                PX04 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
            }

            If ((Arg0 == 0x08))
            {
                Return (PX08 ())
            }

            If ((Arg0 == 0x09))
            {
                Return (PX09 ())
            }

            If ((Arg0 == 0x0A))
            {
                PX10 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
            }

            If ((Arg0 == 0x0B))
            {
                PX11 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
            }

            CreateWordField (M189, Zero, M157)
            CreateWordField (M189, 0x02, M158)
            CreateDWordField (M189, 0x04, M160)
            M157 = Zero
            M158 = Zero
            M160 = Zero
            Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
        }

        Method (PX00, 0, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateWordField (M189, 0x02, M158)
            CreateDWordField (M189, 0x04, M160)
            M157 = 0x08
            M158 = One
            M160 = M098 /* External reference */
            If (M098)
            {
                Local5 = 0x7FFFFFFF
                Local5 |= 0x80000000
                Store (M019 (M095 (M094 (M093 (0x2C, Local0), Store (M019 (M095 (M094 (
                    Local1 = (M093 (One, Zero) + 0x2C), If ((Local0 != Local5))
                                                {
                                                    M190 = Local0
                                                }, If ((Local1 != Local5))
                                                {
                                                    M191 = Local1
                                                }), Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */)))))
            }
        }

        Method (PX01, 0, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateDWordField (M189, 0x02, M161)
            CreateDWordField (M189, 0x06, M162)
            M157 = 0x0A
            M161 = 0x0003FC80
            M162 = M099 /* External reference */
            Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
        }

        Method (PX02, 1, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateByteField (M189, 0x02, M192)
            M157 = 0x03
            M192 = (Arg0 & One)
            Local7 = Buffer (0x05) {}
            CreateWordField (Local7, Zero, M197)
            CreateField (Local7, 0x10, 0x03, M200)
            CreateField (Local7, 0x13, 0x05, M199)
            CreateByteField (Local7, 0x03, M198)
            CreateByteField (Local7, 0x04, M201)
            M197 = 0x05
            M198 = Zero
            M199 = M091 /* External reference */
            M200 = M090 /* External reference */
            Name (HPOK, Zero)
            M133 (0x11, Local0) = M049 /* External reference */
            Store (M113 (Local0, Local6, M023 (Zero, M091, M090), If ((M192 && Local6))
                    {
                        M000 (0x86)
                        M112 (Local0, Zero)
                        M111 (Local0, One)
                        Sleep (0x20)
                        M112 (Local0, 0x02)
                        M112 (Local0, One)
                        M000 (0x87)
                        HPOK = Zero
                        Sleep (0x14)
                        M201 = One
                        0x06 = \_SB.ALIB /* External reference */
                        Local7
                        Local6
                        Local2 = Zero
                        While ((Local2 < 0x0F))
                        {
                            M023 (Zero, M091, M090)
                            Local4 = One
                            Local5 = 0xC8
                            While ((Local4 && Local5))
                            {
                                0xA5 = M021 (Zero, M091, M090)
                                Local0
                                Local0 &= 0x7F
                                If (((Local0 >= 0x10) && (Local0 != 0x7F)))
                                {
                                    Local4 = Zero
                                }
                                Else
                                {
                                    Sleep (0x05)
                                    Local5--
                                }
                            }

                            If (!Local4)
                            {
                                M090 = M024 (Zero, M091)
                                Local5
                                If (Local5)
                                {
                                    M026 (Zero, M091, M090)
                                    Sleep (0x05)
                                    Local2++
                                }
                                Else
                                {
                                    Local0 = Zero
                                    If ((M025 == Zero))
                                    {
                                        M091
                                        M090
                                        Zero
                                        Ones
                                        Local0 = One
                                    }

                                    If (Local0)
                                    {
                                        M111 (M049, M133 (0x17, One))
                                        M111 (M049, M133 (0x18, One))
                                        HPOK = One
                                        Local2 = 0x10
                                    }
                                    Else
                                    {
                                        HPOK = Zero
                                        Local2 = 0x10
                                    }
                                }
                            }
                            Else
                            {
                                Local2 = 0x10
                            }
                        }

                        If (!HPOK)
                        {
                            M000 (0x88)
                            Store (M019 (M095 (M094 (M093 (Zero, Local1), Sleep (0x0A), Local4 = One), 
                                Local5 = 0x05, While ((Local4 && Local5))
                                        {
                                            0xA5 = M021 (Zero, M091, M090)
                                            Local0
                                            Local0 &= 0x7F
                                            If (((Local0 <= 0x04) || (Local0 == 0x1F)))
                                            {
                                                Local4 = Zero
                                            }
                                            Else
                                            {
                                                Store (M019 (M095 (M094 (M093 (Zero, Local0), Sleep (0x05), Local5--), 
                                                    M201 = Zero, \_SB.ALIB, 0x06), Local7, If ((M097 (Zero, 0x54 = M019 (
                                                    Zero, M091, M090), Local0, M020 (Zero, M091, M090, 0x54, (Local0 & 0xFFFF7FFC)), 
                                                    M232 (M097 (Zero, 0x10, M020 (Zero, M091, M090, 0x54, (Local0 & 0xFFFF7FFF)), 
                                                    M000 (0x89), Else
                                                                                {
                                                                                    M000 (0x8A)
                                                                                    M201 = Zero
                                                                                    \_SB.ALIB
                                                                                    0x06
                                                                                    Local7
                                                                                    M000 (0x8B)
                                                                                    M111 (M049, M133 (0x17, Zero))
                                                                                    M111 (M049, M133 (0x18, Zero))
                                                                                    M112 (Local0, Zero)
                                                                                    Sleep (0x0A)
                                                                                    M111 (Local0, Zero)
                                                                                    M023 (Zero, M091, M090)
                                                                                    Store (M019 (M095 (M094 (M093 (Zero, Local1), Sleep (0x0A), Local4 = One), 
                                                                                        Local5 = 0x05, While ((Local4 && Local5))
                                                                                                {
                                                                                                    0xA5 = M021 (Zero, M091, M090)
                                                                                                    Local0
                                                                                                    Local0 &= 0x7F
                                                                                                    If (((Local0 <= 0x04) || (Local0 == 0x1F)))
                                                                                                    {
                                                                                                        Local4 = Zero
                                                                                                    }
                                                                                                    Else
                                                                                                    {
                                                                                                        Store (M019 (M095 (M094 (M093 (Zero, Local1), Sleep (0x05), Local5--), 
                                                                                                            HPOK = 0x02, M000 (0x8C), If (HPOK)
                                                                                                                    {
                                                                                                                        Local5 = 0x7FFFFFFF
                                                                                                                        Local5 |= 0x80000000
                                                                                                                        0x54 = M019 (Zero, M091, M090)
                                                                                                                        Local1
                                                                                                                        M020 (Zero, M091, M090, 0x54, (Local1 & 0xFFFF7FFC))
                                                                                                                        Store (M019 (M095 (M094 (M093 (Zero, Local0), If (((HPOK == One) && 
                                                                                                                            (Local0 != Local5)))
                                                                                                                                        {
                                                                                                                                            M020 (M095 (M094 (M093 (0x4C, M190), Sleep (0x0A), If ((M191 != 
                                                                                                                                                Local5))
                                                                                                                                                        {
                                                                                                                                                            M020 (M095 (M094 (M191 = (M093 (One, Zero) + 0x4C), Sleep (0x0A), M020 (
                                                                                                                                                                Zero, M091, M090, 0x54, (Local1 & 0xFFFF7FFF)))))
                                                                                                                                                        })))
                                                                                                                                        })))
                                                                                                                    }))
                                                                                                    }
                                                                                                }))
                                                                                }))) != )) {})
                                            }
                                        }))
                        }
                    })
        }

        Method (PX03, 1, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateWordField (M189, 0x02, M195)
            M157 = 0x04
            M195 = (Arg0 & One)
            If (M195)
            {
                M111 (M049, M133 (0x17, One))
            }
            Else
            {
                M111 (M049, M133 (0x17, Zero))
            }
        }

        Method (PX04, 1, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateWordField (M189, 0x02, M196)
            M157 = 0x04
            M196 = (Arg0 & One)
            If (M196)
            {
                M111 (M049, M133 (0x18, One))
            }
            Else
            {
                M111 (M049, M133 (0x18, Zero))
            }
        }

        Method (PX08, 0, NotSerialized)
        {
            CreateWordField (M189, Zero, M193)
            CreateWordField (M189, 0x02, M157)
            M133 (0x19, Local0) = M049 /* External reference */
            M193 = Local0
            M157 = 0x05
            Local0 *= M157 /* \_SB_.PCI0.GP17.VGA_.PX08.M157 */
            Local1 = Zero
            While ((Local1 < Local0))
            {
                M133 ((0x1A + Local1), Local2) = M049 /* External reference */
                M189 [(0x04 + Local1)] = Local2
                Local1++
            }

            Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
        }

        Method (PX09, 0, NotSerialized)
        {
            CreateWordField (M189, Zero, M193)
            CreateWordField (M189, 0x02, M157)
            M133 (0x7E, Local0) = M049 /* External reference */
            M193 = Local0
            M157 = 0x03
            Local0 *= M157 /* \_SB_.PCI0.GP17.VGA_.PX09.M157 */
            Local1 = Zero
            While ((Local1 < Local0))
            {
                M133 ((0x7F + Local1), Local2) = M049 /* External reference */
                M189 [(0x04 + Local1)] = Local2
                Local1++
            }

            Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
        }

        Method (PX10, 1, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateByteField (M189, 0x02, M192)
            M157 = 0x03
            M192 = (Arg0 & One)
            \_SB.MACO = (Arg0 & One)
        }

        Method (PX11, 1, NotSerialized)
        {
            CreateWordField (M189, Zero, M157)
            CreateByteField (M189, 0x02, M162)
            M157 = 0x03
            M162 = (Arg0 & One)
            Local2 = M162 /* \_SB_.PCI0.GP17.VGA_.PX11.M162 */
            Local0 = M131 /* External reference */
            If (Local0)
            {
                M131 = M049 /* External reference */
                0x10
                Local0
                M131 = M049 /* External reference */
                0x11
                Local1
                Local1 = (M084 + ((Local0 * 0x0100) + Local1))
                M012 (Local1, 0x0E, Zero, One, Local2)
            }
        }

        Name (ATIB, Buffer (0x0100) {})
        Method (ATIF, 2, Serialized)
        {
            If ((Arg0 == Zero))
            {
                Return (AF00 ())
            }

            If ((Arg0 == One))
            {
                Return (AF01 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (AF02 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (AF03 (DerefOf (Arg1 [0x02]), DerefOf (Arg1 [0x04])))
            }

            If ((Arg0 == 0x04))
            {
                Return (AF04 ())
            }

            If ((Arg0 == 0x0F))
            {
                Return (AF15 ())
            }

            If ((Arg0 == 0x10))
            {
                Return (AF16 (DerefOf (Arg1 [0x02])))
            }
            Else
            {
                CreateWordField (ATIB, Zero, M157)
                CreateWordField (ATIB, 0x02, M158)
                CreateDWordField (ATIB, 0x04, M159)
                CreateDWordField (ATIB, 0x08, M160)
                M157 = Zero
                M158 = Zero
                M159 = Zero
                M160 = Zero
                Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
            }
        }

        Method (AF00, 0, NotSerialized)
        {
            CreateWordField (ATIB, Zero, M157)
            CreateWordField (ATIB, 0x02, M158)
            CreateDWordField (ATIB, 0x04, M159)
            CreateDWordField (ATIB, 0x08, M160)
            M157 = 0x0C
            M158 = One
            M159 = M101 /* External reference */
            If (!CondRefOf (\_SB.LID._LID))
            {
                M102 &= 0xFFFFFFF7
            }

            M160 = M102 /* External reference */
            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Method (AF01, 0, NotSerialized)
        {
            CreateWordField (ATIB, Zero, M157)
            CreateDWordField (ATIB, 0x02, M161)
            CreateDWordField (ATIB, 0x06, M162)
            CreateByteField (ATIB, 0x0A, M163)
            Local0 = (M103 & 0xFF000000)
            Local1 = (M103 & 0x03)
            If ((Local1 == 0x02))
            {
                M157 = 0x0B
                M161 = 0x03
                M162 = Local1
                M163 = Local0
            }
            Else
            {
                M157 = 0x0A
                M161 = 0x03
                M162 = M103 /* External reference */
            }

            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Name (M164, Buffer (0x04)
        {
             0x00, 0x00, 0x00, 0x00                           // ....
        })
        Name (M210, Zero)
        Name (M211, Zero)
        Name (M212, Zero)
        Name (M213, Zero)
        Name (M214, Zero)
        Name (M215, Zero)
        Name (M303, Zero)
        Name (M304, Zero)
        Name (SSDM, 0x0A)
        Name (SCDY, Zero)
        Method (AF02, 0, NotSerialized)
        {
            CreateBitField (M164, Zero, M165)
            CreateBitField (M164, One, M166)
            CreateBitField (M164, 0x02, M167)
            CreateBitField (M164, 0x03, M168)
            CreateBitField (M164, 0x04, M169)
            CreateBitField (M164, 0x05, M170)
            CreateBitField (M164, 0x06, M171)
            CreateBitField (M164, 0x07, M172)
            CreateBitField (M164, 0x08, M173)
            CreateBitField (M164, 0x0C, M300)
            CreateWordField (ATIB, Zero, M157)
            CreateDWordField (ATIB, 0x02, M174)
            CreateByteField (ATIB, 0x06, M175)
            CreateByteField (ATIB, 0x07, M176)
            CreateByteField (ATIB, 0x08, M177)
            CreateByteField (ATIB, 0x09, M178)
            CreateByteField (ATIB, 0x0A, M179)
            CreateByteField (ATIB, 0x0B, M180)
            CreateByteField (ATIB, 0x0C, M181)
            CreateByteField (ATIB, 0x0D, M301)
            CreateDWordField (ATIB, 0x0E, M302)
            M157 = 0x0D
            M174 = M164 /* \_SB_.PCI0.GP17.VGA_.M164 */
            If (M165)
            {
                M165 = Zero
            }

            If (M166)
            {
                M175 = M210 /* \_SB_.PCI0.GP17.VGA_.M210 */
                M210 = Zero
                M166 = Zero
            }

            If (M167)
            {
                M176 = M211 /* \_SB_.PCI0.GP17.VGA_.M211 */
                M177 = M212 /* \_SB_.PCI0.GP17.VGA_.M212 */
                M211 = Zero
                M212 = Zero
                M167 = Zero
            }

            If (M168)
            {
                M178 = M213 /* \_SB_.PCI0.GP17.VGA_.M213 */
                M179 = M214 /* \_SB_.PCI0.GP17.VGA_.M214 */
                M213 = Zero
                M214 = Zero
                M168 = Zero
            }

            If (M169)
            {
                M180 = M215 /* \_SB_.PCI0.GP17.VGA_.M215 */
                M169 = Zero
            }

            If (M171)
            {
                M171 = Zero
            }

            If (M172)
            {
                M172 = Zero
            }

            If (M173)
            {
                M173 = Zero
            }

            If (M300)
            {
                M301 = M303 /* \_SB_.PCI0.GP17.VGA_.M303 */
                M302 = M304 /* \_SB_.PCI0.GP17.VGA_.M304 */
                M303 = Zero
                M304 = Zero
                M300 = Zero
            }

            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Method (AF03, 2, NotSerialized)
        {
            CreateWordField (ATIB, Zero, M157)
            CreateWordField (ATIB, 0x02, M182)
            CreateWordField (ATIB, 0x04, M183)
            M182 = Arg0
            M183 = Arg1
            Name (M184, 0x06)
            Name (M185, 0x06)
            Name (M186, Buffer (0x14)
            {
                 0x00                                             // .
            })
            Name (M187, Zero)
            M133 (0xBF, M187) = M049 /* External reference */
            Local1 = Zero
            While ((Local1 < M187))
            {
                M133 ((0xC0 + Local1), Local2) = M049 /* External reference */
                M186 [Local1] = Local2
                Local1++
            }

            Local1 = M182 /* \_SB_.PCI0.GP17.VGA_.AF03.M182 */
            Local1 &= 0x8B
            Local2 = M183 /* \_SB_.PCI0.GP17.VGA_.AF03.M183 */
            If (CondRefOf (\_SB.LID._LID))
            {
                Local0 = \_SB.LID._LID /* External reference */
                Local2 &= 0xFFFFFFFE
                Local2 |= Local0
            }

            Local0 = Zero
            While ((Local0 < M187))
            {
                Local3 = DerefOf (M186 [Local0])
                If ((Local3 == Local1))
                {
                    M185 = Local0
                    Local0 = M187 /* \_SB_.PCI0.GP17.VGA_.AF03.M187 */
                }
                Else
                {
                    Local0++
                }
            }

            Local0 = M185 /* \_SB_.PCI0.GP17.VGA_.AF03.M185 */
            While ((Local0 < M187))
            {
                Local0++
                If ((Local0 == M187))
                {
                    Local0 = Zero
                }

                Local3 = DerefOf (M186 [Local0])
                If (((Local3 & Local2) == Local3))
                {
                    M184 = Local0
                    Local0 = M187 /* \_SB_.PCI0.GP17.VGA_.AF03.M187 */
                }
            }

            If ((M184 == M187))
            {
                M182 = Zero
            }
            Else
            {
                Local0 = M184 /* \_SB_.PCI0.GP17.VGA_.AF03.M184 */
                Local3 = DerefOf (M186 [Local0])
                M182 &= 0xFFFFFFF4
                M182 |= Local3
            }

            M157 = 0x04
            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Method (AF04, 0, NotSerialized)
        {
            CreateWordField (ATIB, Zero, M157)
            CreateByteField (ATIB, 0x02, M188)
            M157 = 0x03
            Local1 = Zero
            If (CondRefOf (\_SB.LID._LID))
            {
                Local0 = \_SB.LID._LID /* External reference */
                Local1 = (Local0 ^ One)
            }

            M188 = Local1
            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Method (AF15, 0, NotSerialized)
        {
            ATIB = M104 /* External reference */
            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Method (AF16, 1, NotSerialized)
        {
            If (Local0)
                {
                    Local1 = Zero
                    While ((Local1 < Local0))
                    {
                        M133 ((0xD4 + Local1), Local2) = M049 /* External reference */
                        ATIB [Local1] = Local2
                        Local1++
                    }
                } = M013 (M133 (0xD4, Zero), 0x10, Local0)
            Else
            {
                 = M043 (Zero, Arg0)
                Local3
                If ((ObjectType (Local3) == 0x03))
                {
                    ATIB = Local3
                }
                Else
                {
                    ATIB [Zero] = 0x05
                    ATIB [One] = Zero
                    ATIB [0x02] = Zero
                    ATIB [0x03] = Zero
                    ATIB [0x04] = 0x02
                }
            }

            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Method (AFN0, 0, Serialized)
        {
            If ((M101 & One))
            {
                CreateBitField (M164, Zero, M165)
                M165 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN1, 1, Serialized)
        {
            If ((M101 & 0x02))
            {
                Local0 = Arg0
                M210 = Local0
                CreateBitField (M164, One, M166)
                M166 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN2, 2, Serialized)
        {
            If ((M101 & 0x04))
            {
                Local0 = Arg0
                M212 = Local0
                Local0 = Arg1
                M211 = Local0 &= 0x03
                CreateBitField (M164, 0x02, M167)
                M167 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN3, 2, Serialized)
        {
            If ((M101 & 0x08))
            {
                Local0 = Arg0
                M214 = Local0
                Local0 = Arg1
                M213 = Local0 &= 0x03
                CreateBitField (M164, 0x03, M168)
                M168 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN4, 1, Serialized)
        {
            If ((M101 & 0x10))
            {
                Local0 = Arg0
                Local1 = M215 /* \_SB_.PCI0.GP17.VGA_.M215 */
                M215 = Local0
                If ((Local0 == Local1)) {}
                Else
                {
                    CreateBitField (M164, 0x04, M169)
                    M169 = One
                    Notify (VGA, 0x81) // Information Change
                }
            }
        }

        Method (AFN5, 0, Serialized)
        {
            If ((M101 & 0x20))
            {
                CreateBitField (M164, 0x05, M170)
                M170 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN6, 0, Serialized)
        {
            If ((M101 & 0x40))
            {
                CreateBitField (M164, 0x06, M171)
                M171 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN7, 1, Serialized)
        {
            If ((M101 & 0x80))
            {
                CreateBitField (M164, 0x07, M172)
                M172 = One
                CreateByteField (ATIB, 0x0C, M181)
                M181 = Arg0
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN8, 0, Serialized)
        {
            If ((M101 & 0x0100))
            {
                CreateBitField (M164, 0x08, M173)
                M173 = One
            }
        }

        Method (AFNC, 2, Serialized)
        {
            If ((M101 & 0x1000))
            {
                Local0 = (Arg0 & 0x03)
                M303 = Local0
                Local0 = (Arg1 & Ones)
                M304 = Local0
                CreateBitField (M164, 0x0C, M300)
                M300 = One
                Notify (VGA, 0x81) // Information Change
            }
        }
    }
}



SSDT2
-----
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00000001)
{
    Scope (\)
    {
        Device (AOD)
        {
            Name (DBG, Zero)
            Name (GDBG, Zero)
            Name (CDBG, Zero)
            Name (VDBG, Zero)
            Name (RDBG, Zero)
            OperationRegion (PSMI, SystemIO, 0xB0, 0x02)
            Field (PSMI, ByteAcc, NoLock, Preserve)
            {
                APMC,   8, 
                APMD,   8
            }

            Method (ASMI, 1, NotSerialized)
            {
                APMC = Arg0
                Sleep (0x0A)
            }

            Name (OBID, Package (0xC1)
            {
                0x40, 
                0x00010001, 
                0x00010002, 
                0x00020001, 
                0x00020002, 
                0x00020003, 
                0x00020004, 
                0x00020005, 
                0x00020006, 
                0x00020007, 
                0x00020008, 
                0x00020009, 
                0x0002000A, 
                0x0002000B, 
                0x0002000C, 
                0x0002000D, 
                0x0002000E, 
                0x0002000F, 
                0x00020010, 
                0x00020011, 
                0x00020012, 
                0x00020013, 
                0x00020014, 
                0x00020015, 
                0x00020016, 
                0x00020017, 
                0x00020018, 
                0x00020019, 
                0x0002001A, 
                0x0002001B, 
                0x0002001C, 
                0x0002001D, 
                0x0002001E, 
                0x0002001F, 
                0x00020020, 
                0x00020021, 
                0x00020022, 
                0x00020023, 
                0x00020024, 
                0x00020025, 
                0x00020027, 
                0x00020028, 
                0x00020029, 
                0x0002002A, 
                0x0002002B, 
                0x0002002C, 
                0x0002002D, 
                0x0002002E, 
                0x0002002F, 
                0x00020030, 
                0x00020031, 
                0x00020032, 
                0x00020033, 
                0x00020035, 
                0x00020036, 
                0x00020037, 
                0x00030001, 
                0x00040001, 
                0x00040002, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                "Get APCB Config", 
                "Get memory voltages", 
                "Set memory clock frequency", 
                "Set Tcl", 
                "Set Trcdrd", 
                "Set Trcdwr", 
                "Set Tras", 
                "Set Trp", 
                "Set ProcODT", 
                "Set Trcpage", 
                "Set Trc", 
                "Set Trfc", 
                "Set Trfc2", 
                "Set Trfc4", 
                "Set Tfaw", 
                "Set TrrdS", 
                "Set TrrdL", 
                "Set Twr", 
                "Set TwtrS", 
                "Set TwtrL", 
                "Set TCke", 
                "Set Tcwl", 
                "Set Trtp", 
                "Set TrdrdSc", 
                "Set TrdrdScL", 
                "Set TrdrdSd", 
                "Set TrdrdDd", 
                "Set TwrwrSc", 
                "Set TwrwrScL", 
                "Set TwrwrSd", 
                "Set TwrwrDd", 
                "Set Trdwr", 
                "Set Twrrd", 
                "Set GearDownEn", 
                "Set Cmd2t", 
                "Set RttNom", 
                "Set RttWR", 
                "Set RttPark", 
                "Set PowerDownEn", 
                "Software Downcore Config", 
                "Set EDC Throttler Control", 
                "Set AddrCmdSetup", 
                "Set CsOdtSetup", 
                "Set CkeSetup", 
                "Set CadBusClkDrvStren", 
                "Set CadBusAddrCmdDrvStren", 
                "Set CadBusCsOdtCmdDrvStren", 
                "Set CadBusCkeDrvStren", 
                "Set CLDO_VDDP", 
                "Set Interleave Mode", 
                "Set Interleave Size", 
                "Set FCLK OC Mode", 
                "Set FCLK Frequency", 
                "Set CCLK Fmax", 
                "Set GFXCLK Fmax", 
                "Set VDDIO", 
                "Command Buffer Start", 
                "Command Buffer End", 
                "", 
                "", 
                "", 
                "", 
                "", 
                ""
            })
            Name (OBIE, Package (0xC1)
            {
                0x40, 
                0x00050001, 
                0x00050002, 
                0x00050003, 
                0x00050004, 
                0x00050005, 
                0x0005000A, 
                0x0005000B, 
                0x0005000C, 
                0x0005000D, 
                0x0005000E, 
                0x0005000F, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                One, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                "Set PPT Limit", 
                "Set TDC Limit", 
                "Set EDC Limit", 
                "Set Scalar", 
                "Set DRAM Map Inversion", 
                "Set Curve Optimizer", 
                "Set IOD VDDG", 
                "Set Soc TDC Limit", 
                "Set Soc EDC Limit", 
                "Set Dram Latency Enhance", 
                "Get Dram Latency Enhance", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "", 
                ""
            })
            Name (OBIT, Package (0xED)
            {
                0x00020001, 
                0x014D, 
                0x0FA0, 
                0x21, 
                0x00020002, 
                0x08, 
                0x21, 
                One, 
                0x00020003, 
                0x08, 
                0x3F, 
                One, 
                0x00020004, 
                0x08, 
                0x3F, 
                One, 
                0x00020005, 
                0x15, 
                0x3A, 
                One, 
                0x00020006, 
                0x08, 
                0x3F, 
                One, 
                0x00020007, 
                Zero, 
                0x3F, 
                One, 
                0x00020008, 
                Zero, 
                0x03FF, 
                One, 
                0x00020009, 
                0x1D, 
                0x87, 
                One, 
                0x0002000A, 
                0x3C, 
                0x03DE, 
                One, 
                0x0002000B, 
                0x3C, 
                0x03DE, 
                One, 
                0x0002000C, 
                0x3C, 
                0x03DE, 
                One, 
                0x0002000D, 
                0x06, 
                0x36, 
                One, 
                0x0002000E, 
                0x04, 
                0x0C, 
                One, 
                0x0002000F, 
                0x04, 
                0x0C, 
                One, 
                0x00020010, 
                0x0A, 
                0x51, 
                One, 
                0x00020011, 
                0x02, 
                0x0E, 
                One, 
                0x00020012, 
                0x02, 
                0x0E, 
                One, 
                0x00020013, 
                One, 
                0x1F, 
                One, 
                0x00020014, 
                0x09, 
                0x16, 
                One, 
                0x00020015, 
                0x05, 
                0x0E, 
                One, 
                0x00020016, 
                One, 
                0x0F, 
                One, 
                0x00020017, 
                One, 
                0x0F, 
                One, 
                0x00020018, 
                One, 
                0x0F, 
                One, 
                0x00020019, 
                One, 
                0x0F, 
                One, 
                0x0002001A, 
                One, 
                0x0F, 
                One, 
                0x0002001B, 
                One, 
                0x3F, 
                One, 
                0x0002001C, 
                One, 
                0x0F, 
                One, 
                0x0002001D, 
                One, 
                0x0F, 
                One, 
                0x0002001E, 
                One, 
                0x1F, 
                One, 
                0x0002001F, 
                Zero, 
                0x0F, 
                One, 
                0x00020020, 
                Zero, 
                One, 
                One, 
                0x00020021, 
                Zero, 
                One, 
                One, 
                0x00020022, 
                Zero, 
                0x07, 
                One, 
                0x00020023, 
                Zero, 
                0x04, 
                One, 
                0x00020024, 
                Zero, 
                0x07, 
                One, 
                0x00020025, 
                Zero, 
                One, 
                One, 
                0x00020027, 
                Zero, 
                Ones, 
                One, 
                0x00020028, 
                Zero, 
                0x0F, 
                One, 
                0x00020029, 
                Zero, 
                0x3F, 
                One, 
                0x0002002A, 
                Zero, 
                0x3F, 
                One, 
                0x0002002B, 
                Zero, 
                0x3F, 
                One, 
                0x0002002C, 
                Zero, 
                0x1F, 
                One, 
                0x0002002D, 
                Zero, 
                0x1F, 
                One, 
                0x0002002E, 
                Zero, 
                0x1F, 
                One, 
                0x0002002F, 
                Zero, 
                0x1F, 
                One, 
                0x00020030, 
                Zero, 
                0x05DC, 
                One, 
                0x00020031, 
                Zero, 
                Ones, 
                One, 
                0x00020032, 
                Zero, 
                0x07, 
                One, 
                0x00020033, 
                Zero, 
                One, 
                One, 
                0x00020035, 
                0x014D, 
                0x0FA0, 
                0x21, 
                0x00020036, 
                0x0F3C, 
                0x1004, 
                One, 
                0x00020037, 
                0x05DC, 
                0x06A4, 
                One, 
                0x00030001, 
                0x0230, 
                0x072B, 
                0x05, 
                0x00050001, 
                Zero, 
                0xFFFFFFFE, 
                One, 
                0x00050002, 
                Zero, 
                0xFFFFFFFE, 
                One, 
                0x00050003, 
                Zero, 
                0xFFFFFFFE, 
                One, 
                0x00050004, 
                0x64, 
                0x03E8, 
                0x64, 
                0x00050005, 
                Zero, 
                0xFF, 
                One, 
                Zero
            })
            Name (OBIU, Package (0x11)
            {
                0x0005000A, 
                Zero, 
                0xFFFFFFFE, 
                One, 
                0x0005000B, 
                0x0258, 
                0x05DC, 
                One, 
                0x0005000C, 
                Zero, 
                0xFFFFFFFE, 
                One, 
                0x0005000D, 
                Zero, 
                0xFFFFFFFE, 
                One, 
                Zero
            })
            Name (OBD1, Package (0xCF)
            {
                0x00020001, 
                0x4A, 
                0x014D, 
                0x0190, 
                0x0215, 
                0x029B, 
                0x0320, 
                0x03A5, 
                0x042B, 
                0x04B0, 
                0x0535, 
                0x0557, 
                0x0578, 
                0x0599, 
                0x05BB, 
                0x05DC, 
                0x05FD, 
                0x061F, 
                0x0640, 
                0x0661, 
                0x0683, 
                0x06A4, 
                0x06C5, 
                0x06E7, 
                0x0708, 
                0x0729, 
                0x074B, 
                0x076C, 
                0x078D, 
                0x07AF, 
                0x07D0, 
                0x07F1, 
                0x0813, 
                0x0834, 
                0x0855, 
                0x0877, 
                0x0898, 
                0x08B9, 
                0x08DB, 
                0x08FC, 
                0x091D, 
                0x093F, 
                0x0960, 
                0x0981, 
                0x09A3, 
                0x09C4, 
                0x09F6, 
                0x0A28, 
                0x0A5A, 
                0x0A8C, 
                0x0ABE, 
                0x0AF0, 
                0x0B22, 
                0x0B54, 
                0x0B86, 
                0x0BB8, 
                0x0BEA, 
                0x0C1C, 
                0x0C4E, 
                0x0C80, 
                0x0CB2, 
                0x0CE4, 
                0x0D16, 
                0x0D48, 
                0x0D7A, 
                0x0DAC, 
                0x0DDE, 
                0x0E10, 
                0x0E42, 
                0x0E74, 
                0x0EA6, 
                0x0ED8, 
                0x0F0A, 
                0x0F3C, 
                0x0F6E, 
                0x0FA0, 
                0x00020002, 
                0x1A, 
                0x08, 
                0x09, 
                0x0A, 
                0x0B, 
                0x0C, 
                0x0D, 
                0x0E, 
                0x0F, 
                0x10, 
                0x11, 
                0x12, 
                0x13, 
                0x14, 
                0x15, 
                0x16, 
                0x17, 
                0x18, 
                0x19, 
                0x1A, 
                0x1B, 
                0x1C, 
                0x1D, 
                0x1E, 
                0x1F, 
                0x20, 
                0x21, 
                0x00020005, 
                0x26, 
                0x15, 
                0x16, 
                0x17, 
                0x18, 
                0x19, 
                0x1A, 
                0x1B, 
                0x1C, 
                0x1D, 
                0x1E, 
                0x1F, 
                0x20, 
                0x21, 
                0x22, 
                0x23, 
                0x24, 
                0x25, 
                0x26, 
                0x27, 
                0x28, 
                0x29, 
                0x2A, 
                0x2B, 
                0x2C, 
                0x2D, 
                0x2E, 
                0x2F, 
                0x30, 
                0x31, 
                0x32, 
                0x33, 
                0x34, 
                0x35, 
                0x36, 
                0x37, 
                0x38, 
                0x39, 
                0x3A, 
                0x00020007, 
                0x12, 
                Zero, 
                One, 
                0x02, 
                0x03, 
                0x08, 
                0x09, 
                0x0A, 
                0x0B, 
                0x18, 
                0x19, 
                0x1A, 
                0x1B, 
                0x38, 
                0x39, 
                0x3A, 
                0x3B, 
                0x3E, 
                0x3F, 
                0x00020014, 
                0x08, 
                0x09, 
                0x0A, 
                0x0B, 
                0x0C, 
                0x0E, 
                0x10, 
                0x12, 
                0x14, 
                0x0002002C, 
                0x06, 
                Zero, 
                One, 
                0x03, 
                0x07, 
                0x0F, 
                0x1F, 
                0x0002002D, 
                0x06, 
                Zero, 
                One, 
                0x03, 
                0x07, 
                0x0F, 
                0x1F, 
                0x0002002E, 
                0x06, 
                Zero, 
                One, 
                0x03, 
                0x07, 
                0x0F, 
                0x1F, 
                0x0002002F, 
                0x06, 
                Zero, 
                One, 
                0x03, 
                0x07, 
                0x0F, 
                0x1F, 
                Zero
            })
            Name (OBD2, Package (0x4E)
            {
                0x00020035, 
                0x47, 
                0x029B, 
                0x0320, 
                0x03A5, 
                0x042B, 
                0x04B0, 
                0x0535, 
                0x0557, 
                0x0578, 
                0x0599, 
                0x05BB, 
                0x05DC, 
                0x05FD, 
                0x061F, 
                0x0640, 
                0x0661, 
                0x0683, 
                0x06A4, 
                0x06C5, 
                0x06E7, 
                0x0708, 
                0x0729, 
                0x074B, 
                0x076C, 
                0x078D, 
                0x07AF, 
                0x07D0, 
                0x07F1, 
                0x0813, 
                0x0834, 
                0x0855, 
                0x0877, 
                0x0898, 
                0x08B9, 
                0x08DB, 
                0x08FC, 
                0x091D, 
                0x093F, 
                0x0960, 
                0x0981, 
                0x09A3, 
                0x09C4, 
                0x09F6, 
                0x0A28, 
                0x0A5A, 
                0x0A8C, 
                0x0ABE, 
                0x0AF0, 
                0x0B22, 
                0x0B54, 
                0x0B86, 
                0x0BB8, 
                0x0BEA, 
                0x0C1C, 
                0x0C4E, 
                0x0C80, 
                0x0CB2, 
                0x0CE4, 
                0x0D16, 
                0x0D48, 
                0x0D7A, 
                0x0DAC, 
                0x0DDE, 
                0x0E10, 
                0x0E42, 
                0x0E74, 
                0x0EA6, 
                0x0ED8, 
                0x0F0A, 
                0x0F3C, 
                0x0F6E, 
                0x0FA0, 
                0x0005000E, 
                0x02, 
                Zero, 
                One, 
                Zero
            })
            Method (BM01, 0, NotSerialized)
            {
            }

            Method (XINI, 0, NotSerialized)
            {
            }

            Method (EM01, 0, NotSerialized)
            {
            }

            Method (BM05, 1, NotSerialized)
            {
            }

            Method (EM05, 1, NotSerialized)
            {
            }

            Method (HM06, 0, NotSerialized)
            {
            }

            Method (HM07, 1, NotSerialized)
            {
            }

            Method (SBSL, 1, NotSerialized)
            {
                OperationRegion (PMRG, SystemMemory, 0xFED80300, 0x0100)
                Field (PMRG, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x2E), 
                    SBSL,   8
                }

                Local0 = (Arg0 | One)
                SBSL = Local0
            }

            Method (SETV, 2, NotSerialized)
            {
            }

            Method (GETV, 1, NotSerialized)
            {
            }

            Method (CPTB, 2, NotSerialized)
            {
                Name (LOID, Zero)
                CreateDWordField (Arg1, Zero, BUF0)
                CreateDWordField (Arg1, 0x04, BUF1)
                CreateDWordField (Arg1, 0x08, BUF2)
                CreateDWordField (Arg1, 0x0C, BUF3)
                Local0 = Zero
                LOID = DerefOf (OBIT [Local0])
                While (LOID)
                {
                    If ((LOID == Arg0))
                    {
                        BUF0 = DerefOf (OBIT [(Local0 + Zero)])
                        BUF1 = DerefOf (OBIT [(Local0 + One)])
                        BUF2 = DerefOf (OBIT [(Local0 + 0x02)])
                        BUF3 = DerefOf (OBIT [(Local0 + 0x03)])
                        Break
                    }

                    Local0 += 0x04
                    LOID = DerefOf (OBIT [Local0])
                }

                If ((LOID == Zero))
                {
                    Local0 = Zero
                    LOID = DerefOf (OBIU [Local0])
                    While (LOID)
                    {
                        If ((LOID == Arg0))
                        {
                            BUF0 = DerefOf (OBIU [(Local0 + Zero)])
                            BUF1 = DerefOf (OBIU [(Local0 + One)])
                            BUF2 = DerefOf (OBIU [(Local0 + 0x02)])
                            BUF3 = DerefOf (OBIU [(Local0 + 0x03)])
                            Break
                        }

                        Local0 += 0x04
                        LOID = DerefOf (OBIU [Local0])
                    }
                }

                If ((LOID == Zero))
                {
                    Return (0xFF)
                }

                Return (Zero)
            }

            Name (GF01, Zero)
            Name (GVBF, Buffer (0x05)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00                     // .....
            })
            CreateDWordField (GVBF, Zero, GVB1)
            CreateByteField (GVBF, 0x04, GVB2)
            Method (AM01, 0, NotSerialized)
            {
                Return (CMDV) /* \AOD_.CMDV */
            }

            Method (AM02, 0, NotSerialized)
            {
                If (!GF01)
                {
                    BM01 ()
                    XINI ()
                    EM01 ()
                    GF01 = One
                }

                Return (Zero)
            }

            Method (AM03, 0, NotSerialized)
            {
                Return (OBID) /* \AOD_.OBID */
            }

            Method (AM04, 1, NotSerialized)
            {
                Name (LODT, Package (0x66)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })
                Local0 = Zero
                While (One)
                {
                    If ((DerefOf (OBD1 [Local0]) == Arg0))
                    {
                        Local4 = Zero
                        Break
                    }

                    If ((DerefOf (OBD1 [Local0]) == Zero))
                    {
                        Local4 = 0x04
                        Break
                    }

                    Local0 += DerefOf (OBD1 [(Local0 + One)])
                    Local0 += 0x02
                }

                If ((Local4 == Zero))
                {
                    Local1 = DerefOf (OBD1 [(Local0 + One)])
                    Local1 += 0x02
                    Local2 = Zero
                    While (Local1)
                    {
                        LODT [Local2] = DerefOf (OBD1 [Local0])
                        Local1--
                        Local0++
                        Local2++
                    }

                    Return (LODT) /* \AOD_.AM04.LODT */
                }

                Local0 = Zero
                While (One)
                {
                    If ((DerefOf (OBD2 [Local0]) == Arg0))
                    {
                        Local4 = Zero
                        Break
                    }

                    If ((DerefOf (OBD2 [Local0]) == Zero))
                    {
                        Local4 = 0x04
                        Break
                    }

                    Local0 += DerefOf (OBD2 [(Local0 + One)])
                    Local0 += 0x02
                }

                If ((Local4 == Zero))
                {
                    Local1 = DerefOf (OBD2 [(Local0 + One)])
                    Local1 += 0x02
                    Local2 = Zero
                    While (Local1)
                    {
                        LODT [Local2] = DerefOf (OBD2 [Local0])
                        Local1--
                        Local0++
                        Local2++
                    }

                    Return (LODT) /* \AOD_.AM04.LODT */
                }

                Return (LODT) /* \AOD_.AM04.LODT */
            }

            Method (AM05, 1, NotSerialized)
            {
                CreateDWordField (Arg0, Zero, ACMD)
                CreateField (OBUF, Zero, (SizeOf (OBUF) * 0x08), TEMP)
                TEMP = Zero
                CreateWordField (OBUF, Zero, BSCD)
                CreateDWordField (OBUF, 0x02, BSTS)
                CreateWordField (OBUF, 0x06, BSD1)
                CreateDWordField (OBUF, 0x08, BBSN)
                CreateDWordField (OBUF, 0x0C, BBVS)
                CreateDWordField (OBUF, 0x10, BBCB)
                CreateWordField (OBUF, 0x14, BBMC)
                CreateByteField (OBUF, 0x16, BTCL)
                CreateByteField (OBUF, 0x17, BTRR)
                CreateByteField (OBUF, 0x18, BTRW)
                CreateByteField (OBUF, 0x19, BRAS)
                CreateByteField (OBUF, 0x1A, BTRP)
                CreateWordField (OBUF, 0x1B, BVIO)
                CreateWordField (OBUF, 0x1D, BVTT)
                CreateWordField (OBUF, 0x1F, BVPP)
                CreateWordField (OBUF, 0x21, BODT)
                CreateWordField (OBUF, 0x23, BRPG)
                CreateByteField (OBUF, 0x25, BTRC)
                CreateWordField (OBUF, 0x26, BRFC)
                CreateWordField (OBUF, 0x28, BRF2)
                CreateWordField (OBUF, 0x2A, BRF4)
                CreateByteField (OBUF, 0x2C, BFAW)
                CreateByteField (OBUF, 0x2D, BRRS)
                CreateByteField (OBUF, 0x2E, BRRL)
                CreateByteField (OBUF, 0x2F, BTWR)
                CreateByteField (OBUF, 0x30, BWTS)
                CreateByteField (OBUF, 0x31, BWTL)
                CreateByteField (OBUF, 0x32, BCKE)
                CreateByteField (OBUF, 0x33, BCWL)
                CreateByteField (OBUF, 0x34, BRTP)
                CreateByteField (OBUF, 0x35, BRSC)
                CreateByteField (OBUF, 0x36, BRSL)
                CreateByteField (OBUF, 0x37, BRSD)
                CreateByteField (OBUF, 0x38, BRDD)
                CreateByteField (OBUF, 0x39, BWSC)
                CreateByteField (OBUF, 0x3A, BWSL)
                CreateByteField (OBUF, 0x3B, BWSD)
                CreateByteField (OBUF, 0x3C, BWDD)
                CreateByteField (OBUF, 0x3D, BRWR)
                CreateByteField (OBUF, 0x3E, BWRD)
                CreateByteField (OBUF, 0x3F, BRDN)
                CreateByteField (OBUF, 0x40, BM2T)
                CreateByteField (OBUF, 0x41, RBNM)
                CreateByteField (OBUF, 0x42, RBWR)
                CreateByteField (OBUF, 0x43, RBPK)
                CreateByteField (OBUF, 0x44, BPWD)
                CreateByteField (OBUF, 0x45, BOCD)
                CreateDWordField (OBUF, 0x46, BOCV)
                CreateDWordField (OBUF, 0x4A, BOCF)
                CreateByteField (OBUF, 0x4E, BSMT)
                CreateDWordField (OBUF, 0x4F, BTOF)
                CreateByteField (OBUF, 0x53, BEDC)
                CreateWordField (OBUF, 0x54, BCNT)
                CreateByteField (OBUF, 0x56, BACS)
                CreateByteField (OBUF, 0x57, BCOS)
                CreateByteField (OBUF, 0x58, BCES)
                CreateByteField (OBUF, 0x59, BCBC)
                CreateByteField (OBUF, 0x5A, BCBA)
                CreateByteField (OBUF, 0x5B, BCBO)
                CreateByteField (OBUF, 0x5C, BCBE)
                CreateDWordField (OBUF, 0x5D, BCVP)
                CreateByteField (OBUF, 0x5F, BEDO)
                CreateDWordField (OBUF, 0x60, BNLC)
                CreateDWordField (OBUF, 0x64, BNLM)
                CreateDWordField (OBUF, 0x68, BNLS)
                CreateDWordField (OBUF, 0x6C, BPPL)
                CreateDWordField (OBUF, 0x70, BTDL)
                CreateDWordField (OBUF, 0x74, BEDL)
                CreateByteField (OBUF, 0x78, BFOC)
                CreateByteField (OBUF, 0x79, BSVD)
                CreateWordField (OBUF, 0x7A, BFCK)
                CreateByteField (OBUF, 0x7C, BDPC)
                CreateByteField (OBUF, 0x7D, BCPS)
                CreateWordField (OBUF, 0x7E, BFMX)
                CreateWordField (OBUF, 0x80, BGMX)
                CreateWordField (OBUF, 0x82, BVDG)
                CreateDWordField (OBUF, 0x84, BEOG)
                CreateDWordField (OBUF, 0x88, BEOS)
                CreateDWordField (OBUF, 0x8C, BPPT)
                CreateDWordField (OBUF, 0x90, BTDC)
                CreateDWordField (OBUF, 0x94, BEDM)
                CreateDWordField (OBUF, 0x98, BSCA)
                CreateByteField (OBUF, 0x9C, BDMI)
                CreateByteField (OBUF, 0x9D, BGAS)
                CreateByteField (OBUF, 0x9E, BGAG)
                CreateByteField (OBUF, 0x9F, BNPS)
                CreateByteField (OBUF, 0xA0, BNPG)
                CreateDWordField (OBUF, 0xA1, BPCS)
                CreateWordField (OBUF, 0xA5, BIOD)
                CreateWordField (OBUF, 0xA7, BGFV)
                CreateWordField (OBUF, 0xA9, BGFX)
                CreateDWordField (OBUF, 0xAB, BSTD)
                CreateDWordField (OBUF, 0xAF, BSED)
                CreateByteField (OBUF, 0xB3, BSLC)
                CreateByteField (OBUF, 0xB4, BGLC)
                If ((ACMD == 0x00010001))
                {
                    R101 (Arg0)
                }
                ElseIf ((ACMD == 0x00010002))
                {
                    R102 (Arg0)
                }
                ElseIf ((ACMD == 0x00020001))
                {
                    R201 (Arg0)
                }
                ElseIf ((ACMD == 0x00020002))
                {
                    R202 (Arg0)
                }
                ElseIf ((ACMD == 0x00020003))
                {
                    R203 (Arg0)
                }
                ElseIf ((ACMD == 0x00020004))
                {
                    R204 (Arg0)
                }
                ElseIf ((ACMD == 0x00020005))
                {
                    R205 (Arg0)
                }
                ElseIf ((ACMD == 0x00020006))
                {
                    R206 (Arg0)
                }
                ElseIf ((ACMD == 0x00020007))
                {
                    R207 (Arg0)
                }
                ElseIf ((ACMD == 0x00020008))
                {
                    R208 (Arg0)
                }
                ElseIf ((ACMD == 0x00020009))
                {
                    R209 (Arg0)
                }
                ElseIf ((ACMD == 0x0002000A))
                {
                    R20A (Arg0)
                }
                ElseIf ((ACMD == 0x0002000B))
                {
                    R20B (Arg0)
                }
                ElseIf ((ACMD == 0x0002000C))
                {
                    R20C (Arg0)
                }
                ElseIf ((ACMD == 0x0002000D))
                {
                    R20D (Arg0)
                }
                ElseIf ((ACMD == 0x0002000E))
                {
                    R20E (Arg0)
                }
                ElseIf ((ACMD == 0x0002000F))
                {
                    R20F (Arg0)
                }
                ElseIf ((ACMD == 0x00020010))
                {
                    R210 (Arg0)
                }
                ElseIf ((ACMD == 0x00020011))
                {
                    R211 (Arg0)
                }
                ElseIf ((ACMD == 0x00020012))
                {
                    R212 (Arg0)
                }
                ElseIf ((ACMD == 0x00020013))
                {
                    R213 (Arg0)
                }
                ElseIf ((ACMD == 0x00020014))
                {
                    R214 (Arg0)
                }
                ElseIf ((ACMD == 0x00020015))
                {
                    R215 (Arg0)
                }
                ElseIf ((ACMD == 0x00020016))
                {
                    R216 (Arg0)
                }
                ElseIf ((ACMD == 0x00020017))
                {
                    R217 (Arg0)
                }
                ElseIf ((ACMD == 0x00020018))
                {
                    R218 (Arg0)
                }
                ElseIf ((ACMD == 0x00020019))
                {
                    R219 (Arg0)
                }
                ElseIf ((ACMD == 0x0002001A))
                {
                    R21A (Arg0)
                }
                ElseIf ((ACMD == 0x0002001B))
                {
                    R21B (Arg0)
                }
                ElseIf ((ACMD == 0x0002001C))
                {
                    R21C (Arg0)
                }
                ElseIf ((ACMD == 0x0002001D))
                {
                    R21D (Arg0)
                }
                ElseIf ((ACMD == 0x0002001E))
                {
                    R21E (Arg0)
                }
                ElseIf ((ACMD == 0x0002001F))
                {
                    R21F (Arg0)
                }
                ElseIf ((ACMD == 0x00020020))
                {
                    R220 (Arg0)
                }
                ElseIf ((ACMD == 0x00020021))
                {
                    R221 (Arg0)
                }
                ElseIf ((ACMD == 0x00020022))
                {
                    R222 (Arg0)
                }
                ElseIf ((ACMD == 0x00020023))
                {
                    R223 (Arg0)
                }
                ElseIf ((ACMD == 0x00020024))
                {
                    R224 (Arg0)
                }
                ElseIf ((ACMD == 0x00020025))
                {
                    R225 (Arg0)
                }
                ElseIf ((ACMD == 0x00020026))
                {
                    R226 (Arg0)
                }
                ElseIf ((ACMD == 0x00020027))
                {
                    R227 (Arg0)
                }
                ElseIf ((ACMD == 0x00020028))
                {
                    R228 (Arg0)
                }
                ElseIf ((ACMD == 0x00020029))
                {
                    R229 (Arg0)
                }
                ElseIf ((ACMD == 0x0002002A))
                {
                    R22A (Arg0)
                }
                ElseIf ((ACMD == 0x0002002B))
                {
                    R22B (Arg0)
                }
                ElseIf ((ACMD == 0x0002002C))
                {
                    R22C (Arg0)
                }
                ElseIf ((ACMD == 0x0002002D))
                {
                    R22D (Arg0)
                }
                ElseIf ((ACMD == 0x0002002E))
                {
                    R22E (Arg0)
                }
                ElseIf ((ACMD == 0x0002002F))
                {
                    R22F (Arg0)
                }
                ElseIf ((ACMD == 0x00020030))
                {
                    R230 (Arg0)
                }
                ElseIf ((ACMD == 0x00020031))
                {
                    R231 (Arg0)
                }
                ElseIf ((ACMD == 0x00020032))
                {
                    R232 (Arg0)
                }
                ElseIf ((ACMD == 0x00020033))
                {
                    R233 (Arg0)
                }
                ElseIf ((ACMD == 0x00020034))
                {
                    R234 (Arg0)
                }
                ElseIf ((ACMD == 0x00020035))
                {
                    R235 (Arg0)
                }
                ElseIf ((ACMD == 0x00020036))
                {
                    R236 (Arg0)
                }
                ElseIf ((ACMD == 0x00020037))
                {
                    R237 (Arg0)
                }
                ElseIf ((ACMD == 0x00020038))
                {
                    R238 (Arg0)
                }
                ElseIf ((ACMD == 0x00020039))
                {
                    R239 (Arg0)
                }
                ElseIf ((ACMD == 0x0002003A))
                {
                    R23A (Arg0)
                }
                ElseIf ((ACMD == 0x00050001))
                {
                    R23B (Arg0)
                }
                ElseIf ((ACMD == 0x00050002))
                {
                    R23C (Arg0)
                }
                ElseIf ((ACMD == 0x00050003))
                {
                    R23D (Arg0)
                }
                ElseIf ((ACMD == 0x00050004))
                {
                    R23E (Arg0)
                }
                ElseIf ((ACMD == 0x00050005))
                {
                    R23F (Arg0)
                }
                ElseIf ((ACMD == 0x00030001))
                {
                    R301 (Arg0)
                }
                ElseIf ((ACMD == 0x00030002))
                {
                    R302 (Arg0)
                }
                ElseIf ((ACMD == 0x00030003))
                {
                    R303 (Arg0)
                }
                ElseIf ((ACMD == 0x00050006))
                {
                    R304 (Arg0)
                }
                ElseIf ((ACMD == 0x00050007))
                {
                    R305 (Arg0)
                }
                ElseIf ((ACMD == 0x00050008))
                {
                    R306 (Arg0)
                }
                ElseIf ((ACMD == 0x00050009))
                {
                    R307 (Arg0)
                }
                ElseIf ((ACMD == 0x0005000A))
                {
                    R308 (Arg0)
                }
                ElseIf ((ACMD == 0x0005000B))
                {
                    R309 (Arg0)
                }
                ElseIf ((ACMD == 0x0005000C))
                {
                    R30A (Arg0)
                }
                ElseIf ((ACMD == 0x0005000D))
                {
                    R30B (Arg0)
                }
                ElseIf ((ACMD == 0x0005000E))
                {
                    R30C (Arg0)
                }
                ElseIf ((ACMD == 0x0005000F))
                {
                    R30D (Arg0)
                }
                ElseIf ((ACMD == 0x00040001))
                {
                    R401 (Arg0)
                }
                ElseIf ((ACMD == 0x00040002))
                {
                    R402 (Arg0)
                }
                Else
                {
                }

                BSCD = ASCD /* \AOD_.ASCD */
                BSTS = ASTS /* \AOD_.ASTS */
                BSD1 = RSD1 /* \AOD_.RSD1 */
                BBSN = MBSN /* \AOD_.MBSN */
                BBVS = MBVS /* \AOD_.MBVS */
                BBCB = MBCB /* \AOD_.MBCB */
                BBMC = MBMC /* \AOD_.MBMC */
                BTCL = TTCL /* \AOD_.TTCL */
                BTRR = TRCR /* \AOD_.TRCR */
                BTRW = TRCW /* \AOD_.TRCW */
                BRAS = TRAS /* \AOD_.TRAS */
                BTRP = TTRP /* \AOD_.TTRP */
                BVIO = VDIO /* \AOD_.VDIO */
                BVTT = VMTT /* \AOD_.VMTT */
                BVPP = VMPP /* \AOD_.VMPP */
                BODT = PODT /* \AOD_.PODT */
                BRPG = TRPG /* \AOD_.TRPG */
                BTRC = TTRC /* \AOD_.TTRC */
                BRFC = TRFC /* \AOD_.TRFC */
                BRF2 = TRF2 /* \AOD_.TRF2 */
                BRF4 = TRF4 /* \AOD_.TRF4 */
                BFAW = TFAW /* \AOD_.TFAW */
                BRRS = TRRS /* \AOD_.TRRS */
                BRRL = TRRL /* \AOD_.TRRL */
                BTWR = TTWR /* \AOD_.TTWR */
                BWTS = TWTS /* \AOD_.TWTS */
                BWTL = TWTL /* \AOD_.TWTL */
                BCKE = TCKE /* \AOD_.TCKE */
                BCWL = TCWL /* \AOD_.TCWL */
                BRTP = TRTP /* \AOD_.TRTP */
                BRSC = TRSC /* \AOD_.TRSC */
                BRSL = TRSL /* \AOD_.TRSL */
                BRSD = TRSD /* \AOD_.TRSD */
                BRDD = TRDD /* \AOD_.TRDD */
                BWSC = TWSC /* \AOD_.TWSC */
                BWSL = TWSL /* \AOD_.TWSL */
                BWSD = TWSD /* \AOD_.TWSD */
                BWDD = TWDD /* \AOD_.TWDD */
                BRWR = TRWR /* \AOD_.TRWR */
                BWRD = TWRD /* \AOD_.TWRD */
                BRDN = GRDN /* \AOD_.GRDN */
                BM2T = CM2T /* \AOD_.CM2T */
                RBNM = RTNM /* \AOD_.RTNM */
                RBWR = RTWR /* \AOD_.RTWR */
                RBPK = RTPK /* \AOD_.RTPK */
                BPWD = PWDE /* \AOD_.PWDE */
                BOCD = OCDS /* \AOD_.OCDS */
                BOCV = OCVM /* \AOD_.OCVM */
                BOCF = OCFM /* \AOD_.OCFM */
                BSMT = SMTE /* \AOD_.SMTE */
                BTOF = TOFF /* \AOD_.TOFF */
                BEDC = EDCT /* \AOD_.EDCT */
                BCNT = ACNT /* \AOD_.ACNT */
                BACS = ACSP /* \AOD_.ACSP */
                BCOS = COSP /* \AOD_.COSP */
                BCES = CESP /* \AOD_.CESP */
                BCBC = CBCK /* \AOD_.CBCK */
                BCBA = CBAC /* \AOD_.CBAC */
                BCBO = CBCO /* \AOD_.CBCO */
                BCBE = CBCE /* \AOD_.CBCE */
                BCVP = CDVP /* \AOD_.CDVP */
                BEDO = EDCO /* \AOD_.EDCO */
                BNLC = INLC /* \AOD_.INLC */
                BNLM = INLM /* \AOD_.INLM */
                BNLS = INLS /* \AOD_.INLS */
                BPPL = PPTL /* \AOD_.PPTL */
                BTDL = TDCL /* \AOD_.TDCL */
                BEDL = EDCL /* \AOD_.EDCL */
                BFOC = FCOC /* \AOD_.FCOC */
                BSVD = SVID /* \AOD_.SVID */
                BFCK = FCLK /* \AOD_.FCLK */
                BDPC = MDPC /* \AOD_.MDPC */
                BCPS = MCPS /* \AOD_.MCPS */
                BFMX = FMAX /* \AOD_.FMAX */
                BGMX = GMAX /* \AOD_.GMAX */
                BVDG = CVDG /* \AOD_.CVDG */
                BEOG = ECOG /* \AOD_.ECOG */
                BEOS = ECOS /* \AOD_.ECOS */
                BPPT = PPTS /* \AOD_.PPTS */
                BTDC = TDCS /* \AOD_.TDCS */
                BEDM = EDCS /* \AOD_.EDCS */
                BSCA = SCAS /* \AOD_.SCAS */
                BDMI = DMIS /* \AOD_.DMIS */
                BGAS = GAMS /* \AOD_.GAMS */
                BGAG = GAMG /* \AOD_.GAMG */
                BNPS = NPSS /* \AOD_.NPSS */
                BNPG = NPSG /* \AOD_.NPSG */
                BPCS = COPS /* \AOD_.COPS */
                BIOD = IVDG /* \AOD_.IVDG */
                BGFV = OGFV /* \AOD_.OGFV */
                BGFX = OGFX /* \AOD_.OGFX */
                BSTD = OTDC /* \AOD_.OTDC */
                BSED = OEDC /* \AOD_.OEDC */
                BSLC = DMLC /* \AOD_.DMLC */
                BGLC = DMLG /* \AOD_.DMLG */
                Return (OBUF) /* \AOD_.OBUF */
            }

            Method (AM06, 1, NotSerialized)
            {
                Name (INFO, Buffer (0x10)
                {
                    /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                })
                CPTB (Arg0, INFO)
                Return (INFO) /* \AOD_.AM06.INFO */
            }

            Method (AM07, 1, NotSerialized)
            {
                Name (BSPD, Buffer (0x0214) {})
                If ((Arg0 > 0x0F))
                {
                    Return (BSPD) /* \AOD_.AM07.BSPD */
                }

                If ((Arg0 == Zero))
                {
                    BSPD = DSPD /* \AOD_.DSPD */
                    Return (BSPD) /* \AOD_.AM07.BSPD */
                }

                Local0 = Zero
                Local0 += (Arg0 * 0x0214)
                Local1 = 0x0214
                Local2 = Zero
                While (Local1)
                {
                    BSPD [Local2] = DerefOf (DSPD [Local0])
                    Local1--
                    Local0++
                    Local2++
                }

                Return (BSPD) /* \AOD_.AM07.BSPD */
            }

            Method (AM08, 0, NotSerialized)
            {
                Return (OBIE) /* \AOD_.OBIE */
            }

            Name (CMDV, 0x05)
            Name (OBUF, Buffer (0xC8) {})
            OperationRegion (AODT, SystemMemory, 0xCCF3D018, 0x220C)
            Field (AODT, AnyAcc, NoLock, Preserve)
            {
                ASCD,   16, 
                ASTS,   32, 
                RSD1,   16, 
                MBSN,   32, 
                MBVS,   32, 
                MBCB,   32, 
                MBMC,   16, 
                TTCL,   8, 
                TRCR,   8, 
                TRCW,   8, 
                TRAS,   8, 
                TTRP,   8, 
                VDIO,   16, 
                VMTT,   16, 
                VMPP,   16, 
                PODT,   16, 
                TRPG,   16, 
                TTRC,   8, 
                TRFC,   16, 
                TRF2,   16, 
                TRF4,   16, 
                TFAW,   8, 
                TRRS,   8, 
                TRRL,   8, 
                TTWR,   8, 
                TWTS,   8, 
                TWTL,   8, 
                TCKE,   8, 
                TCWL,   8, 
                TRTP,   8, 
                TRSC,   8, 
                TRSL,   8, 
                TRSD,   8, 
                TRDD,   8, 
                TWSC,   8, 
                TWSL,   8, 
                TWSD,   8, 
                TWDD,   8, 
                TRWR,   8, 
                TWRD,   8, 
                GRDN,   8, 
                CM2T,   8, 
                RTNM,   8, 
                RTWR,   8, 
                RTPK,   8, 
                PWDE,   8, 
                OCDS,   8, 
                OCVM,   32, 
                OCFM,   32, 
                SMTE,   8, 
                TOFF,   32, 
                EDCT,   8, 
                ACNT,   16, 
                ACSP,   8, 
                COSP,   8, 
                CESP,   8, 
                CBCK,   8, 
                CBAC,   8, 
                CBCO,   8, 
                CBCE,   8, 
                CDVP,   16, 
                EDCO,   8, 
                INLC,   32, 
                INLM,   32, 
                INLS,   32, 
                PPTL,   32, 
                TDCL,   32, 
                EDCL,   32, 
                FCOC,   8, 
                SVID,   8, 
                FCLK,   16, 
                MDPC,   8, 
                MCPS,   8, 
                FMAX,   16, 
                GMAX,   16, 
                CVDG,   16, 
                ECOG,   32, 
                ECOS,   32, 
                PPTS,   32, 
                TDCS,   32, 
                EDCS,   32, 
                SCAS,   32, 
                DMIS,   8, 
                GAMS,   8, 
                GAMG,   8, 
                NPSS,   8, 
                NPSG,   8, 
                COPS,   32, 
                IVDG,   16, 
                OGFV,   16, 
                OGFX,   16, 
                OTDC,   32, 
                OEDC,   32, 
                DMLC,   8, 
                DMLG,   8, 
                MRSD,   88, 
                RSD2,   64, 
                NDPC,   8, 
                NCPS,   8, 
                RSD3,   16, 
                DSPD,   68096
            }

            Method (R101, 1, NotSerialized)
            {
                MBVS = 0x05
                MBCB = 0x80000000
                ASMI (0x9D)
            }

            Method (R102, 1, NotSerialized)
            {
                MBVS = 0x05
                Local0 = 0x40000000
                MBCB = Local0
                ASMI (0x9E)
            }

            Method (R201, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, MCLK)
                MBVS = 0x05
                MBMC = MCLK /* \AOD_.R201.MCLK */
                MBCB = One
                ASMI (0x9D)
            }

            Method (R202, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, MTCL)
                MBVS = 0x05
                TTCL = MTCL /* \AOD_.R202.MTCL */
                MBCB = 0x02
                ASMI (0x9D)
            }

            Method (R203, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, MRDD)
                MBVS = 0x05
                TRCR = MRDD /* \AOD_.R203.MRDD */
                MBCB = 0x04
                ASMI (0x9D)
            }

            Method (R204, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, MRDW)
                MBVS = 0x05
                TRCW = MRDW /* \AOD_.R204.MRDW */
                MBCB = 0x08
                ASMI (0x9D)
            }

            Method (R205, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, MTRS)
                MBVS = 0x05
                TRAS = MTRS /* \AOD_.R205.MTRS */
                MBCB = 0x20
                ASMI (0x9D)
            }

            Method (R206, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, MTRP)
                MBVS = 0x05
                TTRP = MTRP /* \AOD_.R206.MTRP */
                MBCB = 0x10
                ASMI (0x9D)
            }

            Method (R207, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, MPOT)
                MBVS = 0x05
                PODT = MPOT /* \AOD_.R207.MPOT */
                MBCB = 0x3000
                ASMI (0x9D)
            }

            Method (R208, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, MRPG)
                MBVS = 0x05
                TRPG = MRPG /* \AOD_.R208.MRPG */
                MBCB = 0x4000
                ASMI (0x9D)
            }

            Method (R209, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TTRC = SVAL /* \AOD_.R209.SVAL */
                MBCB = 0x5000
                ASMI (0x9D)
            }

            Method (R20A, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRFC = SVAL /* \AOD_.R20A.SVAL */
                MBCB = 0x6000
                ASMI (0x9D)
            }

            Method (R20B, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRF2 = SVAL /* \AOD_.R20B.SVAL */
                MBCB = 0x7000
                ASMI (0x9D)
            }

            Method (R20C, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRF4 = SVAL /* \AOD_.R20C.SVAL */
                MBCB = 0x8000
                ASMI (0x9D)
            }

            Method (R20D, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TFAW = SVAL /* \AOD_.R20D.SVAL */
                MBCB = 0x9000
                ASMI (0x9D)
            }

            Method (R20E, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRRS = SVAL /* \AOD_.R20E.SVAL */
                MBCB = 0xA000
                ASMI (0x9D)
            }

            Method (R20F, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRRL = SVAL /* \AOD_.R20F.SVAL */
                MBCB = 0xB000
                ASMI (0x9D)
            }

            Method (R210, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TTWR = SVAL /* \AOD_.R210.SVAL */
                MBCB = 0xC000
                ASMI (0x9D)
            }

            Method (R211, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TWTS = SVAL /* \AOD_.R211.SVAL */
                MBCB = 0xD000
                ASMI (0x9D)
            }

            Method (R212, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TWTL = SVAL /* \AOD_.R212.SVAL */
                MBCB = 0xE000
                ASMI (0x9D)
            }

            Method (R213, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TCKE = SVAL /* \AOD_.R213.SVAL */
                MBCB = 0xF000
                ASMI (0x9D)
            }

            Method (R214, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TCWL = SVAL /* \AOD_.R214.SVAL */
                MBCB = 0x00010000
                ASMI (0x9D)
            }

            Method (R215, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRTP = SVAL /* \AOD_.R215.SVAL */
                MBCB = 0x00020000
                ASMI (0x9D)
            }

            Method (R216, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRSC = SVAL /* \AOD_.R216.SVAL */
                MBCB = 0x00030000
                ASMI (0x9D)
            }

            Method (R217, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRSL = SVAL /* \AOD_.R217.SVAL */
                MBCB = 0x00040000
                ASMI (0x9D)
            }

            Method (R218, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRSD = SVAL /* \AOD_.R218.SVAL */
                MBCB = 0x00050000
                ASMI (0x9D)
            }

            Method (R219, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRDD = SVAL /* \AOD_.R219.SVAL */
                MBCB = 0x00060000
                ASMI (0x9D)
            }

            Method (R21A, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TWSC = SVAL /* \AOD_.R21A.SVAL */
                MBCB = 0x00070000
                ASMI (0x9D)
            }

            Method (R21B, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TWSL = SVAL /* \AOD_.R21B.SVAL */
                MBCB = 0x00080000
                ASMI (0x9D)
            }

            Method (R21C, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TWSD = SVAL /* \AOD_.R21C.SVAL */
                MBCB = 0x00090000
                ASMI (0x9D)
            }

            Method (R21D, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TWDD = SVAL /* \AOD_.R21D.SVAL */
                MBCB = 0x000A0000
                ASMI (0x9D)
            }

            Method (R21E, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TRWR = SVAL /* \AOD_.R21E.SVAL */
                MBCB = 0x000B0000
                ASMI (0x9D)
            }

            Method (R21F, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TWRD = SVAL /* \AOD_.R21F.SVAL */
                MBCB = 0x000C0000
                ASMI (0x9D)
            }

            Method (R220, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                GRDN = SVAL /* \AOD_.R220.SVAL */
                MBCB = 0x000D0000
                ASMI (0x9D)
            }

            Method (R221, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                CM2T = SVAL /* \AOD_.R221.SVAL */
                MBCB = 0x000E0000
                ASMI (0x9D)
            }

            Method (R222, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                RTNM = SVAL /* \AOD_.R222.SVAL */
                MBCB = 0x000F0000
                ASMI (0x9D)
            }

            Method (R223, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                RTWR = SVAL /* \AOD_.R223.SVAL */
                MBCB = 0x00100000
                ASMI (0x9D)
            }

            Method (R224, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                RTPK = SVAL /* \AOD_.R224.SVAL */
                MBCB = 0x00200000
                ASMI (0x9D)
            }

            Method (R225, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                PWDE = SVAL /* \AOD_.R225.SVAL */
                MBCB = 0x00300000
                ASMI (0x9D)
            }

            Method (R226, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                SMTE = SVAL /* \AOD_.R226.SVAL */
                MBCB = 0x00400000
                ASMI (0x9D)
            }

            Method (R227, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                ACNT = SVAL /* \AOD_.R227.SVAL */
                MBCB = 0x00500000
                ASMI (0x9D)
            }

            Method (R228, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                EDCT = SVAL /* \AOD_.R228.SVAL */
                MBCB = 0x00600000
                ASMI (0x9D)
            }

            Method (R229, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                ACSP = SVAL /* \AOD_.R229.SVAL */
                MBCB = 0x00800000
                ASMI (0x9D)
            }

            Method (R22A, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                COSP = SVAL /* \AOD_.R22A.SVAL */
                MBCB = 0x00900000
                ASMI (0x9D)
            }

            Method (R22B, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                CESP = SVAL /* \AOD_.R22B.SVAL */
                MBCB = 0x00A00000
                ASMI (0x9D)
            }

            Method (R22C, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                CBCK = SVAL /* \AOD_.R22C.SVAL */
                MBCB = 0x00B00000
                ASMI (0x9D)
            }

            Method (R22D, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                CBAC = SVAL /* \AOD_.R22D.SVAL */
                MBCB = 0x00C00000
                ASMI (0x9D)
            }

            Method (R22E, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                CBCO = SVAL /* \AOD_.R22E.SVAL */
                MBCB = 0x00D00000
                ASMI (0x9D)
            }

            Method (R22F, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                CBCE = SVAL /* \AOD_.R22F.SVAL */
                MBCB = 0x00E00000
                ASMI (0x9D)
            }

            Method (R230, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                CDVP = SVAL /* \AOD_.R230.SVAL */
                MBCB = 0x00700000
                ASMI (0x9D)
            }

            Method (R231, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                INLM = SVAL /* \AOD_.R231.SVAL */
                MBCB = 0x00100001
                ASMI (0x9D)
            }

            Method (R232, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                INLS = SVAL /* \AOD_.R232.SVAL */
                MBCB = 0x00100002
                ASMI (0x9D)
            }

            Method (R233, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                FCOC = SVAL /* \AOD_.R233.SVAL */
                MBCB = 0x00100003
                ASMI (0x9D)
            }

            Method (R234, 1, NotSerialized)
            {
                CreateByteField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                SVID = SVAL /* \AOD_.R234.SVAL */
                MBCB = 0x00100004
                ASMI (0x9D)
            }

            Method (R235, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                FCLK = SVAL /* \AOD_.R235.SVAL */
                MBCB = 0x00100005
                ASMI (0x9D)
            }

            Method (R236, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                FMAX = SVAL /* \AOD_.R236.SVAL */
                MBCB = 0x00100006
                ASMI (0x9D)
            }

            Method (R237, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                GMAX = SVAL /* \AOD_.R237.SVAL */
                MBCB = 0x00100007
                ASMI (0x9D)
            }

            Method (R238, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                CVDG = SVAL /* \AOD_.R238.SVAL */
                MBCB = 0x00100008
                ASMI (0x9D)
            }

            Method (R239, 1, NotSerialized)
            {
                MBVS = 0x05
                Local0 = 0x00100009
                MBCB = Local0
                ASMI (0x9D)
            }

            Method (R23A, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                ECOS = SVAL /* \AOD_.R23A.SVAL */
                MBCB = 0x0010000A
                ASMI (0x9D)
            }

            Method (R23B, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                PPTS = SVAL /* \AOD_.R23B.SVAL */
                MBCB = 0x0010000B
                ASMI (0x9D)
            }

            Method (R23C, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                TDCS = SVAL /* \AOD_.R23C.SVAL */
                MBCB = 0x0010000C
                ASMI (0x9D)
            }

            Method (R23D, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                EDCS = SVAL /* \AOD_.R23D.SVAL */
                MBCB = 0x0010000D
                ASMI (0x9D)
            }

            Method (R23E, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                SCAS = SVAL /* \AOD_.R23E.SVAL */
                MBCB = 0x0010000E
                ASMI (0x9D)
            }

            Method (R23F, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                DMIS = SVAL /* \AOD_.R23F.SVAL */
                MBCB = 0x0010000F
                ASMI (0x9D)
            }

            Method (R301, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, MVIO)
                MBVS = 0x05
                VDIO = MVIO /* \AOD_.R301.MVIO */
                MBCB = 0x0100
                ASMI (0x9E)
            }

            Method (R302, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, MVTT)
                MBVS = 0x05
                VMTT = MVTT /* \AOD_.R302.MVTT */
                MBCB = 0x0200
                ASMI (0x9E)
            }

            Method (R303, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, MVPP)
                MBVS = 0x05
                VMPP = MVPP /* \AOD_.R303.MVPP */
                MBCB = 0x2000
                ASMI (0x9E)
            }

            Method (R304, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                GAMS = SVAL /* \AOD_.R304.SVAL */
                MBCB = 0x00100010
                ASMI (0x9D)
            }

            Method (R305, 1, NotSerialized)
            {
                MBVS = 0x05
                Local0 = 0x00100020
                MBCB = Local0
                ASMI (0x9D)
            }

            Method (R306, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                NPSS = SVAL /* \AOD_.R306.SVAL */
                MBCB = 0x00100030
                ASMI (0x9D)
            }

            Method (R307, 1, NotSerialized)
            {
                MBVS = 0x05
                Local0 = 0x00100031
                MBCB = Local0
                ASMI (0x9D)
            }

            Method (R308, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                COPS = SVAL /* \AOD_.R308.SVAL */
                MBCB = 0x00100032
                ASMI (0x9D)
            }

            Method (R309, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                IVDG = SVAL /* \AOD_.R309.SVAL */
                MBCB = 0x00100033
                ASMI (0x9D)
            }

            Method (R30A, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                OTDC = SVAL /* \AOD_.R30A.SVAL */
                MBCB = 0x00100034
                ASMI (0x9D)
            }

            Method (R30B, 1, NotSerialized)
            {
                CreateDWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                OEDC = SVAL /* \AOD_.R30B.SVAL */
                MBCB = 0x00100035
                ASMI (0x9D)
            }

            Method (R30C, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, SVAL)
                MBVS = 0x05
                DMLC = SVAL /* \AOD_.R30C.SVAL */
                MBCB = 0x00100036
                ASMI (0x9D)
            }

            Method (R30D, 1, NotSerialized)
            {
                MBVS = 0x05
                Local0 = 0x00100037
                MBCB = Local0
                ASMI (0x9D)
            }

            Method (R401, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, MVPP)
                MBVS = 0x05
                MBCB = 0x01000000
                ASMI (0x9E)
            }

            Method (R402, 1, NotSerialized)
            {
                CreateWordField (Arg0, 0x04, MVPP)
                MBVS = 0x05
                MBCB = 0x02000000
                ASMI (0x9E)
            }

            Method (R505, 1, NotSerialized)
            {
                MBVS = 0x05
            }

            Name (WQBA, Buffer (0x0A57)
            {
                /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
                /* 0008 */  0x47, 0x0A, 0x00, 0x00, 0x38, 0x37, 0x00, 0x00,  // G...87..
                /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
                /* 0018 */  0x18, 0xDB, 0x9A, 0x00, 0x01, 0x06, 0x18, 0x42,  // .......B
                /* 0020 */  0x10, 0x0F, 0x10, 0x22, 0x21, 0x04, 0x12, 0x01,  // ..."!...
                /* 0028 */  0xA1, 0xC8, 0x2C, 0x0C, 0x86, 0x10, 0x38, 0x2E,  // ..,...8.
                /* 0030 */  0x84, 0x1C, 0x40, 0x48, 0x1C, 0x14, 0x4A, 0x08,  // ..@H..J.
                /* 0038 */  0x84, 0xFA, 0x13, 0xC8, 0xAF, 0x00, 0x84, 0x0E,  // ........
                /* 0040 */  0x05, 0xC8, 0x14, 0x60, 0x50, 0x80, 0x53, 0x04,  // ...`P.S.
                /* 0048 */  0x11, 0xF4, 0x2A, 0xC0, 0xA6, 0x00, 0x93, 0x02,  // ..*.....
                /* 0050 */  0x2C, 0x0A, 0xD0, 0x2E, 0xC0, 0xB2, 0x00, 0xDD,  // ,.......
                /* 0058 */  0x02, 0xA4, 0xC3, 0x12, 0x91, 0xE0, 0x28, 0x31,  // ......(1
                /* 0060 */  0xE0, 0x28, 0x9D, 0xD8, 0xC2, 0x0D, 0x1B, 0xBC,  // .(......
                /* 0068 */  0x50, 0x14, 0xCD, 0x20, 0x4A, 0x82, 0xCA, 0x05,  // P.. J...
                /* 0070 */  0xF8, 0x46, 0x10, 0x78, 0xB9, 0x02, 0x24, 0x4F,  // .F.x..$O
                /* 0078 */  0x40, 0x9A, 0x05, 0x18, 0x16, 0x60, 0x5D, 0x80,  // @....`].
                /* 0080 */  0xEC, 0x21, 0x50, 0xA9, 0x43, 0x40, 0xC9, 0x19,  // .!P.C@..
                /* 0088 */  0x02, 0x6A, 0x00, 0xAD, 0x4E, 0x40, 0xF8, 0x95,  // .j..N@..
                /* 0090 */  0x4E, 0x09, 0x49, 0x10, 0xCE, 0x58, 0xC5, 0xE3,  // N.I..X..
                /* 0098 */  0x6B, 0x16, 0x4D, 0xCF, 0x49, 0xCE, 0x31, 0xE4,  // k.M.I.1.
                /* 00A0 */  0x78, 0x5C, 0xE8, 0x41, 0xF0, 0x50, 0x1A, 0x40,  // x\.A.P.@
                /* 00A8 */  0x98, 0xFC, 0x21, 0x2B, 0x06, 0x0C, 0x4A, 0xC2,  // ..!+..J.
                /* 00B0 */  0x58, 0xA8, 0x8B, 0x51, 0xA3, 0x46, 0xCA, 0x06,  // X..Q.F..
                /* 00B8 */  0x64, 0x88, 0xD2, 0x46, 0x8D, 0x1E, 0xD0, 0xF9,  // d..F....
                /* 00C0 */  0x1D, 0xC9, 0xD9, 0x1D, 0xDD, 0x91, 0x24, 0x30,  // ......$0
                /* 00C8 */  0xEA, 0x31, 0x1D, 0x63, 0x61, 0x33, 0x12, 0x6A,  // .1.ca3.j
                /* 00D0 */  0x8C, 0xE6, 0xA0, 0x48, 0xB8, 0x41, 0xA3, 0x25,  // ...H.A.%
                /* 00D8 */  0xC2, 0x6A, 0x5C, 0xB1, 0xCF, 0xCC, 0xC2, 0x87,  // .j\.....
                /* 00E0 */  0x25, 0x8C, 0x23, 0x38, 0xB0, 0x83, 0xB5, 0x68,  // %.#8...h
                /* 00E8 */  0x18, 0xA1, 0x15, 0x04, 0xA7, 0x41, 0x1C, 0x45,  // .....A.E
                /* 00F0 */  0x94, 0x30, 0x0C, 0xCF, 0x98, 0x81, 0x8E, 0x92,  // .0......
                /* 00F8 */  0x21, 0x85, 0x09, 0x7A, 0x02, 0x41, 0x4E, 0x9E,  // !..z.AN.
                /* 0100 */  0x61, 0x19, 0xE2, 0x0C, 0x38, 0x56, 0x8C, 0x50,  // a...8V.P
                /* 0108 */  0x21, 0x31, 0x03, 0x09, 0xFE, 0xFF, 0x3F, 0x81,  // !1....?.
                /* 0110 */  0xAE, 0x31, 0xE4, 0x19, 0x88, 0xDC, 0x03, 0x4E,  // .1.....N
                /* 0118 */  0x20, 0x48, 0xF4, 0x28, 0xC1, 0x8D, 0x6B, 0x54,  //  H.(..kT
                /* 0120 */  0x36, 0xA6, 0xB3, 0xC1, 0x0D, 0xCC, 0x04, 0x71,  // 6......q
                /* 0128 */  0x0E, 0x0F, 0x23, 0x03, 0x42, 0x13, 0x88, 0x1F,  // ..#.B...
                /* 0130 */  0x3B, 0x7C, 0x02, 0xBB, 0x3F, 0x0E, 0x48, 0x21,  // ;|..?.H!
                /* 0138 */  0x82, 0x2E, 0x04, 0x67, 0x5A, 0xA3, 0x80, 0x77,  // ...gZ..w
                /* 0140 */  0xC4, 0xB3, 0x43, 0x5B, 0x10, 0x3A, 0x0B, 0xC4,  // ..C[.:..
                /* 0148 */  0x6A, 0x0C, 0x45, 0x10, 0x11, 0x82, 0x46, 0x31,  // j.E...F1
                /* 0150 */  0x5E, 0x84, 0x50, 0x21, 0xA2, 0x44, 0x3D, 0xE7,  // ^.P!.D=.
                /* 0158 */  0x20, 0xB5, 0x09, 0x50, 0x06, 0x22, 0xB4, 0x60,  //  ..P.".`
                /* 0160 */  0x46, 0x60, 0xF6, 0xCF, 0x00, 0xCC, 0x02, 0xC4,  // F`......
                /* 0168 */  0x1F, 0x81, 0x25, 0x9C, 0x08, 0x64, 0x64, 0x34,  // ..%..dd4
                /* 0170 */  0xF4, 0xB0, 0xE0, 0x93, 0x00, 0x3B, 0x20, 0x78,  // .....; x
                /* 0178 */  0x3E, 0xA7, 0x66, 0x02, 0x07, 0x86, 0x10, 0xAF,  // >.f.....
                /* 0180 */  0x04, 0x88, 0x3A, 0x5A, 0x50, 0x02, 0x4B, 0x39,  // ..:ZP.K9
                /* 0188 */  0x1A, 0x10, 0xDB, 0x03, 0xD3, 0x3D, 0xE0, 0x08,  // .....=..
                /* 0190 */  0xCF, 0xDD, 0x97, 0x83, 0x53, 0xF3, 0x4F, 0xC3,  // ....S.O.
                /* 0198 */  0xD3, 0x7C, 0x48, 0xC0, 0x0C, 0xD1, 0x63, 0x3D,  // .|H...c=
                /* 01A0 */  0x88, 0x80, 0x87, 0xC8, 0x4E, 0x09, 0x06, 0xC4,  // ....N...
                /* 01A8 */  0x7B, 0xBF, 0x16, 0x90, 0x11, 0xBC, 0x24, 0x18,  // {.....$.
                /* 01B0 */  0xD0, 0x93, 0x78, 0x40, 0x00, 0xCB, 0x41, 0xE3,  // ..x@..A.
                /* 01B8 */  0xC0, 0x4F, 0xA8, 0xE2, 0x3B, 0x00, 0x3D, 0x12,  // .O..;.=.
                /* 01C0 */  0xB0, 0x19, 0xC5, 0x37, 0x41, 0x59, 0xC7, 0x07,  // ...7AY..
                /* 01C8 */  0xF4, 0x9C, 0xA3, 0x3D, 0x3B, 0xBC, 0x2C, 0x34,  // ...=;.,4
                /* 01D0 */  0x7B, 0xC5, 0x20, 0x04, 0xAF, 0x01, 0xBE, 0x29,  // {. ....)
                /* 01D8 */  0xF8, 0x34, 0x62, 0x51, 0xAB, 0x93, 0x93, 0x55,  // .4bQ...U
                /* 01E0 */  0x79, 0xC4, 0x14, 0xDC, 0x43, 0xE0, 0x32, 0xE0,  // y...C.2.
                /* 01E8 */  0x34, 0x74, 0x8F, 0x17, 0x1C, 0x0A, 0xC6, 0x4B,  // 4t.....K
                /* 01F0 */  0xFF, 0xFF, 0xE3, 0x05, 0xF7, 0xBC, 0x8E, 0x17,  // ........
                /* 01F8 */  0x2C, 0xC7, 0x84, 0x87, 0x8D, 0xAA, 0x20, 0x34,  // ,..... 4
                /* 0200 */  0x88, 0x03, 0x6E, 0x7E, 0x00, 0xE4, 0x6A, 0xE1,  // ..n~..j.
                /* 0208 */  0x11, 0xB3, 0xB9, 0x9C, 0x15, 0x3B, 0xA2, 0xF0,  // .....;..
                /* 0210 */  0xE1, 0xF1, 0x61, 0x78, 0xC4, 0xEF, 0x0D, 0xC5,  // ..ax....
                /* 0218 */  0x82, 0x48, 0x20, 0x84, 0xCE, 0x0C, 0x47, 0x0E,  // .H ...G.
                /* 0220 */  0x16, 0x67, 0x27, 0x08, 0x11, 0x58, 0xDA, 0xD0,  // .g'..X..
                /* 0228 */  0xD1, 0x43, 0xF6, 0xA8, 0x5E, 0x62, 0x8C, 0xF1,  // .C..^b..
                /* 0230 */  0x44, 0x60, 0xD4, 0x53, 0x3A, 0x7A, 0xF0, 0x01,  // D`.S:z..
                /* 0238 */  0x7A, 0xF4, 0x80, 0xCF, 0xFF, 0xFF, 0xE8, 0x71,  // z......q
                /* 0240 */  0x92, 0xC6, 0x2C, 0x11, 0xA3, 0x47, 0x9F, 0x23,  // ..,..G.#
                /* 0248 */  0x3C, 0x9D, 0xB7, 0x1F, 0x7E, 0x14, 0x49, 0xE0,  // <...~.I.
                /* 0250 */  0xF8, 0x10, 0x1A, 0x3D, 0x78, 0x4E, 0x3F, 0x1E,  // ...=xN?.
                /* 0258 */  0x3D, 0xF8, 0xC7, 0xE8, 0xD1, 0x83, 0x67, 0x0C,  // =.....g.
                /* 0260 */  0xE7, 0x86, 0xBB, 0xDA, 0x78, 0xE4, 0x60, 0x1F,  // ....x.`.
                /* 0268 */  0x2F, 0x5E, 0xDE, 0x71, 0x0B, 0x14, 0x3E, 0x67,  // /^.q..>g
                /* 0270 */  0x4F, 0x06, 0xF0, 0x1E, 0x84, 0x3B, 0x6F, 0x01,  // O....;o.
                /* 0278 */  0x97, 0x11, 0x70, 0xC1, 0x4F, 0x1D, 0x9F, 0xAB,  // ..p.O...
                /* 0280 */  0xA8, 0x44, 0x18, 0xD4, 0xD1, 0x0A, 0x5C, 0xFF,  // .D....\.
                /* 0288 */  0xFF, 0xA3, 0x15, 0xC0, 0x84, 0xFB, 0xC3, 0xAB,  // ........
                /* 0290 */  0xD5, 0xA3, 0x15, 0xD8, 0x43, 0xBE, 0x24, 0xF4,  // ....C.$.
                /* 0298 */  0x23, 0x70, 0x6C, 0x08, 0x39, 0x39, 0x5A, 0xA1,  // #pl.99Z.
                /* 02A0 */  0x4E, 0x46, 0xB8, 0xA0, 0x07, 0x2B, 0xA0, 0x7B,  // NF...+.{
                /* 02A8 */  0xD0, 0xC0, 0x1D, 0x0F, 0xE0, 0xFC, 0xFF, 0x8F,  // ........
                /* 02B0 */  0x07, 0x7C, 0x60, 0xFC, 0xF4, 0x02, 0x3E, 0x11,  // .|`...>.
                /* 02B8 */  0x47, 0x21, 0x9F, 0xCA, 0xA0, 0x9F, 0x20, 0x3D,  // G!.... =
                /* 02C0 */  0x5A, 0xF0, 0x1C, 0xAB, 0x80, 0xC3, 0xA9, 0x0C,  // Z.......
                /* 02C8 */  0x38, 0x0C, 0x19, 0x7C, 0xF2, 0x0E, 0x53, 0xE8,  // 8..|..S.
                /* 02D0 */  0x03, 0x89, 0xA7, 0x50, 0xEB, 0x2D, 0x84, 0xC0,  // ...P.-..
                /* 02D8 */  0x1E, 0x90, 0x8F, 0x12, 0x41, 0x4E, 0x24, 0xC2,  // ....AN$.
                /* 02E0 */  0xB9, 0xF8, 0x38, 0x05, 0x98, 0xF8, 0xFF, 0x8F,  // ..8.....
                /* 02E8 */  0x1A, 0x7F, 0xCB, 0x60, 0xD7, 0x29, 0x30, 0x9C,  // ...`.)0.
                /* 02F0 */  0x82, 0xE0, 0x4D, 0xCA, 0xE3, 0x07, 0xDF, 0xB1,  // ..M.....
                /* 02F8 */  0x07, 0x77, 0x0A, 0x82, 0xE7, 0x71, 0x48, 0x42,  // .w...qHB
                /* 0300 */  0x3E, 0x8F, 0x97, 0x00, 0xDC, 0x45, 0x08, 0x7F,  // >....E..
                /* 0308 */  0x10, 0x02, 0x3E, 0xB2, 0x16, 0x4A, 0x4F, 0x41,  // ..>..JOA
                /* 0310 */  0x16, 0x02, 0x83, 0x3A, 0x08, 0x01, 0x2E, 0xFF,  // ...:....
                /* 0318 */  0xFF, 0x07, 0x21, 0x60, 0xE7, 0xED, 0xB6, 0xA1,  // ..!`....
                /* 0320 */  0x6B, 0x90, 0x6F, 0x03, 0x4F, 0x03, 0xAF, 0x11,  // k.o.O...
                /* 0328 */  0x51, 0x1E, 0x84, 0x7C, 0x13, 0x7A, 0x21, 0x88,  // Q..|.z!.
                /* 0330 */  0x10, 0xE5, 0x78, 0x4F, 0x20, 0xC2, 0xD3, 0x90,  // ..xO ...
                /* 0338 */  0x27, 0x1C, 0x26, 0xDC, 0xC9, 0x46, 0x79, 0x69,  // '.&..Fyi
                /* 0340 */  0x08, 0x63, 0xE8, 0x58, 0x81, 0x22, 0xC7, 0x0F,  // .c.X."..
                /* 0348 */  0xE1, 0x4B, 0x85, 0x0F, 0x42, 0x2C, 0xCA, 0x79,  // .K..B,.y
                /* 0350 */  0x40, 0x3F, 0x02, 0x9F, 0x3F, 0x6C, 0xE4, 0x2C,  // @?..?l.,
                /* 0358 */  0x82, 0x3A, 0x09, 0xF8, 0xD0, 0xE1, 0x41, 0x3D,  // .:....A=
                /* 0360 */  0x21, 0x60, 0x42, 0x9F, 0xEC, 0x40, 0x75, 0x14,  // !`B..@u.
                /* 0368 */  0x02, 0xCE, 0x07, 0x10, 0x78, 0x21, 0x0F, 0xAD,  // ....x!..
                /* 0370 */  0xA0, 0x3B, 0x92, 0x83, 0xE3, 0x50, 0x17, 0x39,  // .;...P.9
                /* 0378 */  0xEE, 0x03, 0x0D, 0xF6, 0xEC, 0xC1, 0xFF, 0xFF,  // ........
                /* 0380 */  0x67, 0x0F, 0xE0, 0x21, 0xED, 0xE0, 0x81, 0x12,  // g..!....
                /* 0388 */  0x73, 0xF6, 0x00, 0x48, 0x73, 0xD9, 0x78, 0xF7,  // s..Hs.x.
                /* 0390 */  0xF0, 0xA5, 0xE7, 0x4C, 0x9F, 0x3D, 0x3C, 0xD7,  // ...L.=<.
                /* 0398 */  0x77, 0x0E, 0x1F, 0xEB, 0x8C, 0x62, 0x88, 0xF7,  // w....b..
                /* 03A0 */  0x0F, 0x1F, 0x0A, 0xA2, 0x44, 0x3C, 0xD7, 0x28,  // ....D<.(
                /* 03A8 */  0x87, 0x1C, 0x25, 0x6E, 0x84, 0x30, 0xCF, 0x77,  // ..%n.0.w
                /* 03B0 */  0xC6, 0x89, 0x11, 0x2A, 0x02, 0x03, 0x7D, 0xF6,  // ...*..}.
                /* 03B8 */  0x60, 0x71, 0xCE, 0x1E, 0x50, 0xB1, 0xCF, 0xE6,  // `q..P...
                /* 03C0 */  0x8D, 0x23, 0xC2, 0x6B, 0xC0, 0x39, 0xFE, 0xFF,  // .#.k.9..
                /* 03C8 */  0xCF, 0xC7, 0x67, 0x0F, 0xC0, 0x9B, 0x94, 0xB7,  // ..g.....
                /* 03D0 */  0x9B, 0xCE, 0x1E, 0xE0, 0x3A, 0xC2, 0xE2, 0xCE,  // ....:...
                /* 03D8 */  0x1E, 0xF0, 0xC6, 0x8D, 0x3D, 0x7D, 0x00, 0x3B,  // ....=}.;
                /* 03E0 */  0x19, 0xAF, 0x01, 0x1F, 0x3D, 0x68, 0xF0, 0x03,  // ....=h..
                /* 03E8 */  0x2A, 0xD0, 0xFE, 0xFF, 0x1F, 0x50, 0x01, 0x97,  // *....P..
                /* 03F0 */  0x87, 0x8F, 0x07, 0x54, 0xB0, 0x4B, 0x7F, 0x0E,  // ...T.K..
                /* 03F8 */  0xE8, 0x53, 0xE0, 0xE0, 0x07, 0x54, 0xF4, 0x70,  // .S...T.p
                /* 0400 */  0x7C, 0x9C, 0xC3, 0x9C, 0x50, 0x01, 0x9B, 0xFF,  // |...P...
                /* 0408 */  0x7F, 0x02, 0x1F, 0x6E, 0xE1, 0x00, 0x87, 0xF4,  // ...n....
                /* 0410 */  0x58, 0xC1, 0x76, 0x3E, 0x05, 0x0E, 0x63, 0x05,  // X.v>..c.
                /* 0418 */  0xCF, 0xC0, 0xF8, 0x58, 0x81, 0xC5, 0xC4, 0x9E,  // ...X....
                /* 0420 */  0x3D, 0x8E, 0x15, 0x6C, 0xA7, 0x52, 0xE0, 0x30,  // =..l.R.0
                /* 0428 */  0x56, 0x30, 0x0D, 0x8C, 0x8D, 0x15, 0x7C, 0x12,  // V0....|.
                /* 0430 */  0xCE, 0xC5, 0xE8, 0x31, 0xFA, 0xDA, 0x72, 0x40,  // ...1..r@
                /* 0438 */  0x9E, 0x47, 0x84, 0xA7, 0x7C, 0xF6, 0xFF, 0x27,  // .G..|..'
                /* 0440 */  0x70, 0xDC, 0xE1, 0x82, 0xEA, 0x5C, 0xE3, 0xE1,  // p....\..
                /* 0448 */  0x82, 0x5F, 0xDE, 0x70, 0x41, 0x33, 0x36, 0x38,  // ._.pA368
                /* 0450 */  0x23, 0x06, 0xDF, 0xD1, 0xC9, 0xE7, 0x58, 0xB0,  // #.....X.
                /* 0458 */  0x5C, 0x22, 0xD8, 0x59, 0x80, 0x4D, 0x07, 0x7F,  // \".Y.M..
                /* 0460 */  0x95, 0xC5, 0x9F, 0x99, 0x80, 0x91, 0xE4, 0xC7,  // ........
                /* 0468 */  0x92, 0x09, 0x14, 0xE0, 0x74, 0x20, 0x51, 0x2F,  // ....t Q/
                /* 0470 */  0x02, 0x0A, 0xE3, 0x43, 0x8D, 0xCF, 0x4C, 0x70,  // ...C..Lp
                /* 0478 */  0x25, 0xC1, 0xA1, 0xCE, 0x69, 0xEC, 0x74, 0x7C,  // %...i.t|
                /* 0480 */  0x72, 0x27, 0xF2, 0x7A, 0xE0, 0xC9, 0x3D, 0x3C,  // r'.z..=<
                /* 0488 */  0xC1, 0x38, 0x26, 0x78, 0x5A, 0x27, 0x65, 0xED,  // .8&xZ'e.
                /* 0490 */  0x47, 0x20, 0xF2, 0xFF, 0xBF, 0x66, 0xB1, 0xB3,  // G ...f..
                /* 0498 */  0x02, 0x47, 0xE3, 0x27, 0x29, 0xB0, 0x5E, 0x18,  // .G.').^.
                /* 04A0 */  0x7C, 0x4C, 0x00, 0xC7, 0xAC, 0x5F, 0xA3, 0x30,  // |L..._.0
                /* 04A8 */  0x58, 0xA1, 0x62, 0x34, 0x7A, 0x0D, 0x22, 0xA0,  // X.b4z.".
                /* 04B0 */  0xC7, 0xD7, 0xD7, 0x30, 0x74, 0x27, 0x30, 0x54,  // ...0t'0T
                /* 04B8 */  0xC4, 0x10, 0x6F, 0x06, 0x76, 0x79, 0x1E, 0x42,  // ..o.vy.B
                /* 04C0 */  0x1E, 0x9A, 0xC0, 0x85, 0xFD, 0xD0, 0x04, 0xF6,  // ........
                /* 04C8 */  0x50, 0x67, 0x32, 0x1A, 0x69, 0x34, 0xA8, 0x73,  // Pg2.i4.s
                /* 04D0 */  0x3A, 0x3F, 0x10, 0x3C, 0x72, 0xF9, 0xD8, 0x61,  // :?.<r..a
                /* 04D8 */  0x90, 0x13, 0x3D, 0xAD, 0xC7, 0x85, 0xA7, 0x01,  // ..=.....
                /* 04E0 */  0x8F, 0x9B, 0x5D, 0x13, 0xFC, 0x41, 0xF0, 0xF1,  // ..]..A..
                /* 04E8 */  0x00, 0x7F, 0x80, 0x08, 0x78, 0xA2, 0x4F, 0x1E,  // ....x.O.
                /* 04F0 */  0xB0, 0x4E, 0x20, 0xF8, 0xA3, 0x06, 0xFC, 0xF1,  // .N .....
                /* 04F8 */  0xF8, 0x18, 0xE0, 0x63, 0x07, 0x97, 0x3F, 0x08,  // ...c..?.
                /* 0500 */  0xD4, 0x51, 0x91, 0x8F, 0xF4, 0xB4, 0xDE, 0x06,  // .Q......
                /* 0508 */  0x7C, 0x48, 0x38, 0x2C, 0x76, 0xE6, 0xF0, 0xC9,  // |H8,v...
                /* 0510 */  0x08, 0xFF, 0xFF, 0x1F, 0x0F, 0x38, 0x8F, 0xED,  // .....8..
                /* 0518 */  0x0F, 0x19, 0xBE, 0x32, 0x78, 0xBE, 0x3E, 0xD1,  // ...2x.>.
                /* 0520 */  0x82, 0xE5, 0xD6, 0xE1, 0x43, 0x43, 0xA8, 0xA7,  // ....CC..
                /* 0528 */  0x0E, 0xCF, 0xE0, 0xFD, 0xC2, 0x27, 0x10, 0x60,  // .....'.`
                /* 0530 */  0x22, 0xCA, 0xCC, 0x10, 0x98, 0xD0, 0x75, 0xCA,  // ".....u.
                /* 0538 */  0xC6, 0x59, 0x93, 0x9E, 0x07, 0x2C, 0xF7, 0x80,  // .Y...,..
                /* 0540 */  0xA0, 0x6B, 0x04, 0xE6, 0x06, 0x11, 0xC4, 0xC3,  // .k......
                /* 0548 */  0x7F, 0xA3, 0xE0, 0x87, 0x46, 0x01, 0xEA, 0x60,  // ....F..`
                /* 0550 */  0x66, 0x08, 0x4B, 0xA3, 0x90, 0x30, 0x08, 0x8D,  // f.K..0..
                /* 0558 */  0xC8, 0x47, 0x0F, 0x02, 0x47, 0x41, 0x3C, 0x7A,  // .G..GA<z
                /* 0560 */  0xC7, 0x3C, 0x3E, 0xA1, 0x87, 0xEA, 0x63, 0x80,  // .<>...c.
                /* 0568 */  0x27, 0x81, 0x0B, 0x75, 0xF0, 0xA1, 0xC7, 0x05,  // '..u....
                /* 0570 */  0x3C, 0xDE, 0x03, 0xB1, 0xCF, 0x01, 0x6C, 0xEC,  // <.....l.
                /* 0578 */  0xB8, 0x93, 0x07, 0xDC, 0x71, 0xE0, 0x4F, 0x9C,  // ....q.O.
                /* 0580 */  0xF8, 0xB3, 0x1A, 0x3F, 0xF5, 0x80, 0xF3, 0xC8,  // ...?....
                /* 0588 */  0x89, 0xFB, 0xFF, 0x1F, 0x0E, 0xE0, 0x01, 0xF9,  // ........
                /* 0590 */  0x3E, 0x60, 0xA5, 0x67, 0x02, 0x3A, 0x87, 0x10,  // >`.g.:..
                /* 0598 */  0x61, 0xA2, 0x19, 0x1E, 0x13, 0xF8, 0xF8, 0x44,  // a......D
                /* 05A0 */  0x4F, 0xA4, 0x1E, 0x17, 0x1F, 0xA5, 0xCF, 0x30,  // O......0
                /* 05A8 */  0x0C, 0xFB, 0x11, 0xC5, 0xC7, 0xC4, 0x03, 0x7C,  // .......|
                /* 05B0 */  0x39, 0x78, 0xE6, 0xC3, 0xC0, 0x7A, 0xDC, 0x1C,  // 9x...z..
                /* 05B8 */  0xD6, 0x68, 0x61, 0x0F, 0xF7, 0x19, 0xC2, 0xF7,  // .ha.....
                /* 05C0 */  0x0F, 0xCF, 0xCC, 0xD7, 0x46, 0x9F, 0x3C, 0xC0,  // ....F.<.
                /* 05C8 */  0x72, 0x94, 0x82, 0x3F, 0x54, 0xDC, 0x59, 0x00,  // r..?T.Y.
                /* 05D0 */  0xEE, 0x81, 0x89, 0xCD, 0xE1, 0x69, 0x00, 0x2F,  // .....i./
                /* 05D8 */  0xF3, 0x10, 0x81, 0x1A, 0x88, 0x45, 0x2E, 0x50,  // .....E.P
                /* 05E0 */  0xC7, 0x15, 0x8F, 0xC4, 0x04, 0x96, 0x77, 0x80,  // ......w.
                /* 05E8 */  0x40, 0x9D, 0x1F, 0x2C, 0xEB, 0x00, 0x81, 0x12,  // @..,....
                /* 05F0 */  0x02, 0x47, 0x41, 0x7C, 0x80, 0xF0, 0x31, 0xDD,  // .GA|..1.
                /* 05F8 */  0x46, 0x0E, 0x10, 0xE8, 0x03, 0x0C, 0x83, 0x78,  // F......x
                /* 0600 */  0xE8, 0x34, 0x81, 0x8F, 0x32, 0x3E, 0x40, 0x00,  // .4..2>@.
                /* 0608 */  0x8F, 0x71, 0xE0, 0x0F, 0x10, 0xF0, 0xFE, 0xFF,  // .q......
                /* 0610 */  0x04, 0x3E, 0x01, 0x03, 0x9F, 0xF3, 0x03, 0x38,  // .>.....8
                /* 0618 */  0x4E, 0xA2, 0x3E, 0x3F, 0x80, 0xEB, 0x04, 0xE0,  // N.>?....
                /* 0620 */  0xF3, 0x03, 0x70, 0x1D, 0xE0, 0xA3, 0x00, 0x58,  // ..p....X
                /* 0628 */  0xCE, 0x64, 0x6C, 0x0E, 0x2F, 0x35, 0x67, 0xFE,  // .dl./5g.
                /* 0630 */  0xCA, 0xE4, 0x13, 0x2F, 0xE6, 0xD4, 0xCB, 0x75,  // .../...u
                /* 0638 */  0x8D, 0x80, 0x44, 0x3C, 0x43, 0xA0, 0x06, 0xE1,  // ..D<C...
                /* 0640 */  0x83, 0xB9, 0x8F, 0x13, 0xCC, 0xE7, 0x21, 0x48,  // ......!H
                /* 0648 */  0xAA, 0x51, 0x04, 0xEF, 0x5B, 0x01, 0x8B, 0x70,  // .Q..[..p
                /* 0650 */  0x8C, 0x40, 0x89, 0xA7, 0x90, 0xF4, 0x63, 0x04,  // .@....c.
                /* 0658 */  0x4A, 0x2C, 0x1C, 0x05, 0xF1, 0xA8, 0x7D, 0x90,  // J,....}.
                /* 0660 */  0xB0, 0x8D, 0xB3, 0x2D, 0xFA, 0x30, 0xCC, 0x8F,  // ...-.0..
                /* 0668 */  0x02, 0xFC, 0x14, 0x01, 0xF7, 0xFF, 0x3F, 0x0B,  // ......?.
                /* 0670 */  0x9F, 0xC2, 0x70, 0x47, 0x0F, 0x70, 0x5C, 0xC4,  // ..pG.p\.
                /* 0678 */  0x0E, 0xED, 0xEC, 0x1E, 0x12, 0xA2, 0xC4, 0x3C,  // .......<
                /* 0680 */  0x83, 0x37, 0x3F, 0x03, 0x86, 0x8D, 0xE6, 0x31,  // .7?....1
                /* 0688 */  0xE2, 0x70, 0xCE, 0xD1, 0x17, 0x35, 0xCF, 0x29,  // .p...5.)
                /* 0690 */  0xD6, 0xE3, 0x1B, 0x3F, 0x52, 0xC0, 0x45, 0xF1,  // ...?R.E.
                /* 0698 */  0x91, 0x02, 0xEE, 0x4C, 0xCE, 0x03, 0xA3, 0x6E,  // ...L...n
                /* 06A0 */  0x2C, 0x82, 0xF7, 0xB5, 0x10, 0x7F, 0xB0, 0x00,  // ,.......
                /* 06A8 */  0x1E, 0xC7, 0x25, 0x1F, 0x2C, 0xC0, 0x05, 0xE9,  // ..%.,...
                /* 06B0 */  0x83, 0x05, 0x70, 0x3D, 0x1F, 0xF8, 0x74, 0x00,  // ..p=..t.
                /* 06B8 */  0xD6, 0x0B, 0x19, 0xBF, 0x1F, 0xB0, 0xFF, 0xFF,  // ........
                /* 06C0 */  0xFD, 0x00, 0x77, 0xC2, 0x80, 0x71, 0x3E, 0xC0,  // ..w..q>.
                /* 06C8 */  0xDC, 0x30, 0x1C, 0x6B, 0xA5, 0x3A, 0x61, 0xE0,  // .0.k.:a.
                /* 06D0 */  0x62, 0x3D, 0x28, 0x34, 0x10, 0x36, 0xBC, 0xE7,  // b=(4.6..
                /* 06D8 */  0x9F, 0x27, 0x43, 0x7E, 0x98, 0x61, 0x51, 0xE0,  // .'C~.aQ.
                /* 06E0 */  0x74, 0xB4, 0xF0, 0xC9, 0xC2, 0x21, 0x28, 0x74,  // t....!(t
                /* 06E8 */  0x10, 0xF3, 0x09, 0x83, 0x8B, 0x39, 0x61, 0x50,  // .....9aP
                /* 06F0 */  0x10, 0x03, 0x3A, 0xE9, 0x39, 0x0C, 0x7D, 0xDA,  // ..:.9.}.
                /* 06F8 */  0xF4, 0xB1, 0x81, 0xDD, 0xEE, 0x7D, 0xBF, 0xF0,  // .....}..
                /* 0700 */  0x5C, 0x3C, 0x67, 0x8E, 0xE7, 0xF3, 0x32, 0x43,  // \<g...2C
                /* 0708 */  0x7D, 0x33, 0x01, 0xCF, 0x95, 0x82, 0x1D, 0xE7,  // }3......
                /* 0710 */  0x31, 0xB7, 0x49, 0x76, 0xE0, 0x64, 0xC7, 0x02,  // 1.Iv.d..
                /* 0718 */  0xA3, 0x1C, 0xEF, 0x6B, 0xA1, 0xD5, 0xDC, 0x15,  // ...k....
                /* 0720 */  0x50, 0x33, 0xC2, 0x10, 0x78, 0xC0, 0x3E, 0x89,  // P3..x.>.
                /* 0728 */  0x81, 0x49, 0xDF, 0x8D, 0x02, 0xE4, 0xE8, 0x5C,  // .I.....\
                /* 0730 */  0xE8, 0xE8, 0x51, 0x07, 0x00, 0x1F, 0xED, 0xF8,  // ..Q.....
                /* 0738 */  0xE8, 0x7D, 0xC4, 0xF6, 0x71, 0x05, 0xEE, 0xE1,  // .}..q...
                /* 0740 */  0xCE, 0x67, 0x28, 0x70, 0xFC, 0xFF, 0xCF, 0x50,  // .g(p...P
                /* 0748 */  0xC0, 0x65, 0x60, 0x9E, 0xE1, 0x13, 0x0A, 0xB8,  // .e`.....
                /* 0750 */  0xEE, 0x0F, 0xFC, 0xA2, 0x8A, 0x99, 0xC8, 0xB3,  // ........
                /* 0758 */  0x30, 0x8C, 0x53, 0x0A, 0xF0, 0x18, 0xBD, 0x4F,  // 0.S....O
                /* 0760 */  0x29, 0xE0, 0x3A, 0x00, 0xF8, 0x94, 0x02, 0x5C,  // ).:....\
                /* 0768 */  0xE7, 0xF8, 0x50, 0x00, 0x96, 0x33, 0x4A, 0x14,  // ..P..3J.
                /* 0770 */  0xDF, 0x7F, 0x3D, 0x11, 0x1B, 0x1F, 0x3E, 0xBD,  // ..=...>.
                /* 0778 */  0xA0, 0x78, 0x2C, 0xCF, 0xE6, 0xEC, 0x4C, 0xA9,  // .x,...L.
                /* 0780 */  0xB3, 0x09, 0x3A, 0xDA, 0xEB, 0x41, 0x83, 0x7E,  // ..:..A.~
                /* 0788 */  0x50, 0xF1, 0xEC, 0xC3, 0x1F, 0x5F, 0x84, 0xE7,  // P...._..
                /* 0790 */  0x53, 0x03, 0xFF, 0xFF, 0x13, 0x38, 0xCE, 0xD9,  // S....8..
                /* 0798 */  0x04, 0x15, 0x84, 0x42, 0xC7, 0x4E, 0x1F, 0x27,  // ...B.N.'
                /* 07A0 */  0xB8, 0xA4, 0xE3, 0x04, 0x05, 0x31, 0xA0, 0xF3,  // .....1..
                /* 07A8 */  0x1E, 0xF1, 0x3C, 0x0C, 0x7A, 0x9C, 0xE0, 0xA7,  // ..<.z...
                /* 07B0 */  0x3E, 0xDF, 0x12, 0x8E, 0xE3, 0x09, 0x24, 0xC1,  // >.....$.
                /* 07B8 */  0x7C, 0x27, 0x01, 0x7A, 0x39, 0x81, 0x77, 0x5E,  // |'.z9.w^
                /* 07C0 */  0x07, 0xCF, 0x28, 0xBC, 0x93, 0xB3, 0x60, 0x08,  // ..(...`.
                /* 07C8 */  0x6F, 0xD6, 0xEC, 0x38, 0x81, 0xBF, 0x1C, 0x3C,  // o..8...<
                /* 07D0 */  0x2B, 0x3C, 0xA8, 0xF3, 0xEB, 0x09, 0xCC, 0x7B,  // +<.....{
                /* 07D8 */  0x1E, 0xB8, 0x8E, 0x27, 0xC0, 0x42, 0xE6, 0x01,  // ...'.B..
                /* 07E0 */  0x00, 0x75, 0x6C, 0xF4, 0xC1, 0x91, 0x1F, 0x00,  // .ul.....
                /* 07E8 */  0x1C, 0xFA, 0x78, 0x82, 0x9E, 0x89, 0x8F, 0x45,  // ..x....E
                /* 07F0 */  0x4F, 0x25, 0xBE, 0x00, 0xF0, 0xB3, 0x9B, 0xCE,  // O%......
                /* 07F8 */  0x27, 0xA0, 0x38, 0x67, 0x82, 0x67, 0x1C, 0xEC,  // '.8g.g..
                /* 0800 */  0x0A, 0x80, 0x3F, 0x03, 0x60, 0xFE, 0xFF, 0x27,  // ..?.`..'
                /* 0808 */  0x14, 0x38, 0x47, 0x32, 0xF0, 0x4D, 0xC4, 0xA7,  // .8G2.M..
                /* 0810 */  0x8A, 0x03, 0xC1, 0x9E, 0x64, 0x81, 0x37, 0x2C,  // ....d.7,
                /* 0818 */  0x3F, 0xC9, 0x02, 0x3E, 0x6E, 0x23, 0xD8, 0x59,  // ?..>n#.Y
                /* 0820 */  0x3C, 0x93, 0x30, 0x82, 0x91, 0x8F, 0x26, 0xA8,  // <.0...&.
                /* 0828 */  0x23, 0xB2, 0x83, 0x9E, 0xC2, 0x10, 0xE3, 0x7C,  // #......|
                /* 0830 */  0xAC, 0x30, 0x46, 0xE4, 0xE2, 0x47, 0xAD, 0xC9,  // .0F..G..
                /* 0838 */  0xF8, 0x6C, 0xE6, 0xCB, 0x3A, 0x3B, 0xFC, 0xE0,  // .l..:;..
                /* 0840 */  0x08, 0x06, 0x3A, 0xA0, 0xA0, 0x8E, 0x63, 0x3E,  // ..:...c>
                /* 0848 */  0x8B, 0x81, 0xEB, 0xFF, 0x7F, 0x16, 0x03, 0x78,  // .......x
                /* 0850 */  0x70, 0x76, 0xF7, 0xE8, 0xF9, 0xB1, 0x9D, 0x83,  // pv......
                /* 0858 */  0x78, 0xF4, 0x0E, 0x7F, 0x16, 0x83, 0x1E, 0xF6,  // x.......
                /* 0860 */  0x2C, 0x06, 0xB4, 0x05, 0x9F, 0xC5, 0x40, 0x79,  // ,.....@y
                /* 0868 */  0x8B, 0xC0, 0xFF, 0xFF, 0x6F, 0x11, 0xB8, 0x33,  // ....o..3
                /* 0870 */  0x28, 0xF0, 0x5A, 0x9B, 0x4F, 0x28, 0xE0, 0xBA,  // (.Z.O(..
                /* 0878 */  0x33, 0xF8, 0x84, 0x02, 0x5C, 0x8F, 0x00, 0xB8,  // 3...\...
                /* 0880 */  0x33, 0x28, 0x38, 0x4E, 0x00, 0xCC, 0xD7, 0x0D,  // 3(8N....
                /* 0888 */  0x80, 0x82, 0x3C, 0x02, 0xE0, 0xAF, 0xF0, 0x3E,  // ..<....>
                /* 0890 */  0x98, 0xE0, 0xE2, 0x9D, 0x54, 0x50, 0x1C, 0x8E,  // ....TP..
                /* 0898 */  0x77, 0x52, 0x41, 0x4C, 0x25, 0xF2, 0x5B, 0x8B,  // wRAL%.[.
                /* 08A0 */  0x27, 0x10, 0xFE, 0xE0, 0xE2, 0xBC, 0x9F, 0xF1,  // '.......
                /* 08A8 */  0x53, 0x19, 0x0C, 0x51, 0x07, 0x0B, 0x94, 0x8C,  // S..Q....
                /* 08B0 */  0x83, 0x05, 0x05, 0x31, 0xA0, 0x33, 0x9E, 0x52,  // ...1.3.R
                /* 08B8 */  0xD0, 0xA7, 0x32, 0x7E, 0x19, 0xF1, 0xC0, 0x12,  // ..2~....
                /* 08C0 */  0xCC, 0x74, 0x4D, 0x81, 0xFA, 0xFF, 0x47, 0xF6,  // .tM...G.
                /* 08C8 */  0x05, 0x04, 0x37, 0x60, 0xB8, 0x60, 0x0F, 0x12,  // ..7`.`..
                /* 08D0 */  0x46, 0x78, 0x4D, 0xF6, 0x3C, 0x30, 0x47, 0x14,  // FxM.<0G.
                /* 08D8 */  0xC0, 0x86, 0xE4, 0xA1, 0xA3, 0x44, 0x0E, 0x9D,  // .....D..
                /* 08E0 */  0x82, 0x78, 0xE8, 0xA6, 0xF1, 0x11, 0x05, 0x37,  // .x.....7
                /* 08E8 */  0x56, 0x76, 0x21, 0x80, 0x15, 0xF5, 0x94, 0x02,  // Vv!.....
                /* 08F0 */  0x0A, 0x91, 0xC3, 0x07, 0xCD, 0x38, 0x8E, 0xEE,  // .....8..
                /* 08F8 */  0xA9, 0xC7, 0xF3, 0xE0, 0x77, 0x62, 0x1F, 0xF3,  // ....wb..
                /* 0900 */  0xE0, 0x9E, 0x54, 0x70, 0xA7, 0x46, 0xDC, 0x49,  // ..Tp.F.I
                /* 0908 */  0x05, 0x0C, 0x73, 0xC4, 0x9E, 0xCA, 0xC0, 0xF1,  // ..s.....
                /* 0910 */  0xFF, 0x3F, 0x82, 0x02, 0x47, 0x0F, 0x47, 0x50,  // .?..G.GP
                /* 0918 */  0x40, 0xCB, 0x21, 0x85, 0x1F, 0x33, 0x30, 0x57,  // @.!..30W
                /* 0920 */  0x03, 0x7E, 0x04, 0xC5, 0xC4, 0x7C, 0x3E, 0xE8,  // .~...|>.
                /* 0928 */  0x7C, 0xC2, 0x8F, 0x06, 0x0E, 0xF4, 0x2A, 0x10,  // |.....*.
                /* 0930 */  0x38, 0x3B, 0xEB, 0xE3, 0x2E, 0x07, 0x3E, 0x61,  // 8;....>a
                /* 0938 */  0x98, 0x60, 0x84, 0xD3, 0x04, 0x85, 0xB0, 0x78,  // .`.....x
                /* 0940 */  0x0A, 0x49, 0x3F, 0x54, 0xA0, 0xC4, 0xC2, 0x51,  // .I?T...Q
                /* 0948 */  0x10, 0x1F, 0x2A, 0x2C, 0xE4, 0x50, 0x81, 0x3E,  // ..*,.P.>
                /* 0950 */  0x46, 0xE1, 0x83, 0x9F, 0x28, 0x40, 0x71, 0x01,  // F...(@q.
                /* 0958 */  0x78, 0x64, 0x07, 0xEF, 0x7D, 0x9D, 0xFD, 0xFF,  // xd..}...
                /* 0960 */  0xEF, 0xEB, 0x98, 0x41, 0xE2, 0x2E, 0x2A, 0x1E,  // ...A..*.
                /* 0968 */  0xB2, 0x0F, 0xEC, 0x98, 0x79, 0xFA, 0x68, 0x01,  // ....y.h.
                /* 0970 */  0x8F, 0xC0, 0xA7, 0x47, 0xF0, 0xC1, 0xFB, 0x30,  // ...G...0
                /* 0978 */  0x05, 0xBC, 0xCE, 0x7A, 0x3E, 0x58, 0x80, 0x0B,  // ...z>X..
                /* 0980 */  0xDC, 0x07, 0x0B, 0xE0, 0x7A, 0xFB, 0xF1, 0xE9,  // ....z...
                /* 0988 */  0x00, 0xAC, 0xA3, 0x3D, 0xE6, 0xF3, 0x8D, 0xF3,  // ...=....
                /* 0990 */  0x7E, 0x00, 0xE3, 0xA6, 0xF2, 0x10, 0xE9, 0x7B,  // ~......{
                /* 0998 */  0x80, 0xF1, 0xD9, 0xF9, 0x00, 0x7B, 0x25, 0xF2,  // .....{%.
                /* 09A0 */  0xF1, 0x59, 0x36, 0x7D, 0x6A, 0x34, 0x6A, 0xD5,  // .Y6}j4j.
                /* 09A8 */  0xA0, 0x4C, 0x8D, 0x32, 0x0D, 0x6A, 0xF5, 0xA9,  // .L.2.j..
                /* 09B0 */  0xD4, 0x98, 0x31, 0x4F, 0x50, 0xFA, 0xFF, 0x47,  // ..1OP..G
                /* 09B8 */  0x58, 0xB8, 0x46, 0xEE, 0x50, 0x4F, 0x09, 0x81,  // X.F.PO..
                /* 09C0 */  0x38, 0xEE, 0xF2, 0x35, 0x7A, 0xF2, 0x3A, 0x11,  // 8..5z.:.
                /* 09C8 */  0x88, 0x85, 0xA8, 0x00, 0x61, 0x62, 0x16, 0x29,  // ....ab.)
                /* 09D0 */  0x10, 0x4B, 0x5D, 0xA4, 0x40, 0x1C, 0xC5, 0x07,  // .K].@...
                /* 09D8 */  0x08, 0x0B, 0xA8, 0x04, 0x84, 0x45, 0xB5, 0x02,  // .....E..
                /* 09E0 */  0x44, 0xB5, 0x80, 0xB0, 0x58, 0x5E, 0x40, 0x58,  // D...X^@X
                /* 09E8 */  0xB0, 0x85, 0x0A, 0xC4, 0x61, 0xDC, 0x80, 0x30,  // ....a..0
                /* 09F0 */  0x29, 0x2F, 0x08, 0x0D, 0x86, 0xD8, 0x39, 0x42,  // )/....9B
                /* 09F8 */  0xEB, 0xAC, 0x6B, 0x10, 0x01, 0x39, 0xB4, 0x1F,  // ..k..9..
                /* 0A00 */  0x20, 0x26, 0x61, 0xFD, 0x02, 0xB2, 0x70, 0x45,  //  &a...pE
                /* 0A08 */  0x40, 0x2C, 0x06, 0x88, 0x80, 0xAC, 0xC3, 0x12,  // @,......
                /* 0A10 */  0x10, 0x13, 0x05, 0x22, 0x20, 0x4B, 0xD3, 0x04,  // ..." K..
                /* 0A18 */  0xC4, 0x84, 0x82, 0x08, 0xC8, 0x21, 0x45, 0x01,  // .....!E.
                /* 0A20 */  0xB1, 0xC4, 0x20, 0x02, 0x72, 0x78, 0x53, 0x40,  // .. .rxS@
                /* 0A28 */  0x4C, 0x8A, 0x2A, 0x20, 0xA6, 0xFE, 0xA1, 0x20,  // L.* ... 
                /* 0A30 */  0x20, 0x47, 0x01, 0x11, 0x90, 0x03, 0xD9, 0x02,  //  G......
                /* 0A38 */  0x62, 0xF1, 0x40, 0x04, 0x64, 0x85, 0xEF, 0x51,  // b.@.d..Q
                /* 0A40 */  0x01, 0x59, 0x2E, 0x88, 0x80, 0x1C, 0xC1, 0x18,  // .Y......
                /* 0A48 */  0x10, 0x0B, 0x04, 0x22, 0x20, 0xCB, 0x92, 0x06,  // ..." ...
                /* 0A50 */  0xC4, 0x44, 0x82, 0x08, 0xC8, 0xFF, 0x7F         // .D.....
            })
            Name (_HID, EisaId ("PNP0C14") /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
            Name (_UID, "AOD")  // _UID: Unique ID
            Name (_WDG, Buffer (0x28)
            {
                /* 0000 */  0x6A, 0x0F, 0xBC, 0xAB, 0xA1, 0x8E, 0xD1, 0x11,  // j.......
                /* 0008 */  0x00, 0xA0, 0xC9, 0x06, 0x29, 0x10, 0x00, 0x00,  // ....)...
                /* 0010 */  0x41, 0x41, 0x01, 0x02, 0x21, 0x12, 0x90, 0x05,  // AA..!...
                /* 0018 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,  // f.......
                /* 0020 */  0xC9, 0x06, 0x29, 0x10, 0x42, 0x41, 0x01, 0x00   // ..).BA..
            })
            Method (WMAA, 3, NotSerialized)
            {
                If ((Arg0 == Zero))
                {
                    If ((((Arg1 != One) || (Arg1 != 0x02)) || 
                        (Arg1 != 0x06)))
                    {
                        CreateDWordField (Arg2, Zero, WIID)
                    }

                    If ((Arg1 == One))
                    {
                        Return (AM01 ())
                    }
                    ElseIf ((Arg1 == 0x02))
                    {
                        Return (AM02 ())
                    }
                    ElseIf ((Arg1 == 0x03))
                    {
                        Return (AM03 ())
                    }
                    ElseIf ((Arg1 == 0x04))
                    {
                        Return (AM04 (WIID))
                    }
                    ElseIf ((Arg1 == 0x05))
                    {
                        Return (AM05 (Arg2))
                    }
                    ElseIf ((Arg1 == 0x06))
                    {
                        Return (AM06 (WIID))
                    }
                    ElseIf ((Arg1 == 0x07))
                    {
                        Return (AM07 (WIID))
                    }
                    ElseIf ((Arg1 == 0x08))
                    {
                        Return (AM08 ())
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }
            }
        }
    }
}



SSDT3
-----
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00000001)
{
    External (_SB_.PCI0, DeviceObj)

    Scope (\_SB.PCI0)
    {
        Device (P010)
        {
            Name (_ADR, 0x00010000)  // _ADR: Address
            Name (_STA, 0x0B)  // _STA: Status
        }

        Device (P020)
        {
            Name (_ADR, 0x00020000)  // _ADR: Address
            Name (_STA, 0x0B)  // _STA: Status
        }

        Device (P080)
        {
            Name (_ADR, 0x00080000)  // _ADR: Address
            Name (_STA, 0x0B)  // _STA: Status
        }

        Device (P180)
        {
            Name (_ADR, 0x00180000)  // _ADR: Address
            Name (_STA, 0x0B)  // _STA: Status
        }

        Device (P181)
        {
            Name (_ADR, 0x00180001)  // _ADR: Address
            Name (_STA, 0x0B)  // _STA: Status
        }

        Device (P182)
        {
            Name (_ADR, 0x00180002)  // _ADR: Address
            Name (_STA, 0x0B)  // _STA: Status
        }

        Device (P183)
        {
            Name (_ADR, 0x00180003)  // _ADR: Address
            Name (_STA, 0x0B)  // _STA: Status
        }

        Device (P184)
        {
            Name (_ADR, 0x00180004)  // _ADR: Address
            Name (_STA, 0x0B)  // _STA: Status
        }

        Device (P185)
        {
            Name (_ADR, 0x00180005)  // _ADR: Address
            Name (_STA, 0x0B)  // _STA: Status
        }

        Device (P186)
        {
            Name (_ADR, 0x00180006)  // _ADR: Address
            Name (_STA, 0x0B)  // _STA: Status
        }

        Device (P187)
        {
            Name (_ADR, 0x00180007)  // _ADR: Address
            Name (_STA, 0x0B)  // _STA: Status
        }
    }
}



SSDT4
-----
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00000001)
{
    /*
     * iASL Warning: There were 5 external control methods found during
     * disassembly, but only 0 were resolved (5 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.PCI0.GP17.ACP_, DeviceObj)
    External (_SB_.PCI0.GP17.AZAL, DeviceObj)
    External (M000, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (M017, MethodObj)    // Warning: Unknown method, guessing 5 arguments
    External (M019, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M249, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M250, MethodObj)    // Warning: Unknown method, guessing 5 arguments

    Name (M278, One)
    Name (M279, One)
    Name (M27A, One)
    Name (APGE, Zero)
    Name (ACGE, One)
    Method (M276, 0, NotSerialized)
    {
        If ((M27A == Zero))
        {
            M278 = Zero
        }

        If (((M278 == One) || (M279 == One)))
        {
            0x08 = M017 (Zero, 0x08, One, 0x19, Zero)
            Local0
             = M019 (Local0, Zero, 0x05)
            Local1
            If ((M27A == Zero))
            {
                Local1 = 0x15E21022
            }

            If (((Local0 != Zero) && (Local0 != 0xFF)))
            {
                If ((Local1 != Ones))
                {
                    M000 (0xB4)
                    If ((ACGE != Zero))
                    {
                        M250 (Zero, Zero, Zero, 0x03B10564, Zero)
                        M250 (Zero, Zero, Zero, 0x03B10998, 0xC8)
                        M250 (Zero, Zero, Zero, 0x03B10528, 0x59)
                        0x03B10564 = M249 (Zero, Zero, Zero)
                        Local4
                        While ((Local4 == Zero))
                        {
                            0x03B10564 = M249 (Zero, Zero, Zero)
                            Local4
                            If ((Local4 != Zero))
                            {
                                Break
                            }
                        }
                    }

                    If ((APGE != Zero))
                    {
                        M250 (Zero, Zero, Zero, 0x0900E784, 0x0103)
                        Local4 = One
                        Local5 = 0x64
                        While (((Local4 != Zero) && Local5))
                        {
                            0x0900E784 = M249 (Zero, Zero, Zero)
                            Local4
                            Local4 |= 0x06
                            Local4 &= 0xFFFFFF0F
                            M250 (Zero, Zero, Zero, 0x0900E784, Local4)
                            0x0900E78C = M249 (Zero, Zero, Zero)
                            Local4
                            Local4 &= 0x03
                            Local5--
                            Stall (0x63)
                        }

                        M250 (Zero, Zero, Zero, 0x0900E784, Zero)
                        M000 (0xB5)
                    }
                }
            }
        }
    }

    Method (M277, 0, NotSerialized)
    {
        If ((M27A == Zero))
        {
            M278 = Zero
        }

        If (((M278 == Zero) && (M279 == Zero)))
        {
            0x08 = M017 (Zero, 0x08, One, 0x19, Zero)
            Local0
             = M019 (Local0, Zero, 0x05)
            Local1
            If ((M27A == Zero))
            {
                Local1 = 0x15E21022
            }

            If (((Local0 != Zero) && (Local0 != 0xFF)))
            {
                If ((Local1 != Ones))
                {
                    M000 (0xB6)
                    If ((ACGE != Zero))
                    {
                        M250 (Zero, Zero, Zero, 0x03B10564, Zero)
                        M250 (Zero, Zero, Zero, 0x03B10998, Zero)
                        M250 (Zero, Zero, Zero, 0x03B10528, 0x59)
                        0x03B10564 = M249 (Zero, Zero, Zero)
                        Local4
                        While ((Local4 == Zero))
                        {
                            0x03B10564 = M249 (Zero, Zero, Zero)
                            Local4
                            If ((Local4 != Zero))
                            {
                                Break
                            }
                        }
                    }

                    If ((APGE != Zero))
                    {
                        M250 (Zero, Zero, Zero, 0x0900E784, 0x0101)
                        Local4 = One
                        Local5 = 0x64
                        While (((Local4 != 0x02) && Local5))
                        {
                            0x0900E784 = M249 (Zero, Zero, Zero)
                            Local4
                            Local4 |= 0x06
                            Local4 &= 0xFFFFFF0F
                            M250 (Zero, Zero, Zero, 0x0900E784, Local4)
                            0x0900E78C = M249 (Zero, Zero, Zero)
                            Local4
                            Local4 &= 0x03
                            Local5--
                            Stall (0x63)
                        }

                        M250 (Zero, Zero, Zero, 0x0900E784, Zero)
                        M000 (0xB7)
                    }
                }
            }
        }
    }

    Scope (\_SB.PCI0.GP17.ACP)
    {
        Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
        {
            M278 = One
            M276 ()
        }

        Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
        {
            M278 = Zero
            M277 ()
        }

        Method (MSG0, 3, Serialized)
        {
            M000 (0x5511)
            OperationRegion (VARM, SystemIO, 0x80, 0x04)
            Field (VARM, DWordAcc, NoLock, Preserve)
            {
                VARR,   32
            }

            If ((Arg2 != 0x09))
            {
                M000 (0x5518)
                M250 (Zero, Zero, Zero, 0x00058A74, Arg0)
                M250 (Zero, Zero, Zero, 0x00058A54, Arg1)
                M250 (Zero, Zero, Zero, 0x00058A14, Arg2)
                0x00058A74 = M249 (Zero, Zero, Zero)
                Local0
                While ((Local0 == Zero))
                {
                    0x00058A74 = M249 (Zero, Zero, Zero)
                    Local0
                    If ((Local0 != Zero))
                    {
                        Break
                    }
                }

                M000 (0x5519)
                0x00058A54 = M249 (Zero, Zero, Zero)
                Local1
                Return (Local1)
            }

            Name (MBOX, Buffer (0x04) {})
            0x03810570 = M249 (Zero, Zero, Zero)
            Local0
            VARR = Local0
            MBOX = Local0
            CreateWordField (MBOX, Zero, STAS)
            CreateByteField (MBOX, 0x02, CMDI)
            CreateField (MBOX, 0x18, 0x05, RESV)
            CreateBitField (MBOX, 0x1D, RSET)
            CreateBitField (MBOX, 0x1E, RCOV)
            CreateBitField (MBOX, 0x1F, REDY)
            VARR = MBOX /* \_SB_.PCI0.GP17.ACP_.MSG0.MBOX */
            While (((REDY != One) || (CMDI != Zero)))
            {
                0x03810570 = M249 (Zero, Zero, Zero)
                Local0
                MBOX = Local0
                M000 (0x5516)
                VARR = MBOX /* \_SB_.PCI0.GP17.ACP_.MSG0.MBOX */
            }

            Local0 = Zero
            MBOX = Local0
            REDY = Zero
            CMDI = 0x33
            M000 (0x5514)
            Local0 = MBOX /* \_SB_.PCI0.GP17.ACP_.MSG0.MBOX */
            VARR = Local0
            M250 (Zero, Zero, Zero, 0x03810570, Local0)
            Sleep (One)
            M000 (0x5515)
            0x03810570 = M249 (Zero, Zero, Zero)
            Local0
            MBOX = Local0
            VARR = MBOX /* \_SB_.PCI0.GP17.ACP_.MSG0.MBOX */
            While ((CMDI != Zero))
            {
                0x03810570 = M249 (Zero, Zero, Zero)
                Local0
                MBOX = Local0
                M000 (0x5517)
                VARR = MBOX /* \_SB_.PCI0.GP17.ACP_.MSG0.MBOX */
            }

            If ((STAS != Zero))
            {
                M000 (0x5513)
            }

            M000 (0x5512)
            Return (Local0)
        }
    }

    Scope (\_SB.PCI0.GP17.AZAL)
    {
        Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
        {
            M279 = One
            M276 ()
        }

        Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
        {
            M279 = Zero
            M277 ()
        }
    }
}



SSDT5
-----
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00001000)
{
    Scope (\_SB)
    {
        Name (MDSZ, 0x01E0)
        OperationRegion (PDSP, SystemIO, 0xB0, One)
        Field (PDSP, ByteAcc, NoLock, Preserve)
        {
            IOB2,   8
        }

        OperationRegion (GPCD, SystemMemory, 0xCCAE3000, 0x0200)
        Field (GPCD, AnyAcc, NoLock, Preserve)
        {
            DTSZ,   32, 
            TKNO,   32, 
            PTYP,   8, 
            I_PS,   8, 
            PACT,   8, 
            RSVD,   40, 
            PGUI,   128, 
            DBUF,   3840
        }

        Method (PCDE, 2, Serialized)
        {
            PGUI = Arg0
            TKNO = Arg1
            Local0 = Zero
            IOB2 = 0x17
            If ((I_PS == Zero))
            {
                If ((DTSZ <= MDSZ))
                {
                    Mid (DBUF, Zero, DTSZ, Local0)
                }
            }

            Return (Local0)
        }

        Method (HBID, 0, NotSerialized)
        {
            Local0 = \_SB.PCDE (Buffer (0x10)
                    {
                        /* 0000 */  0x83, 0x18, 0x1F, 0xC5, 0x00, 0xDF, 0x6A, 0x4F,  // ......jO
                        /* 0008 */  0x08, 0xA0, 0x36, 0x9F, 0x60, 0x98, 0xFD, 0xAF   // ..6.`...
                    }, 0x20000032)
            Return (Local0)
        }
    }
}



SSDT6
-----
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00000001)
{
    /*
     * iASL Warning: There were 21 external control methods found during
     * disassembly, but only 0 were resolved (21 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_GPE.SP00, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_GPE.SP01, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_GPE.SP02, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_GPE.SP03, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_GPE.SP04, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_GPE.SP05, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_GPE.SP06, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_GPE.SP07, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.ALIB, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.GPIO, DeviceObj)
    External (_SB_.IPTS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.IWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.M263, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.M264, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.M284, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.PTBR.PTST.TPTS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.PTBR.PTST.TWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCXX.GPXX.SAXX.TPTS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCXX.GPXX.SAXX.TWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCXX.SAXX.TPTS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCXX.SAXX.TWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (M038, IntObj)
    External (M039, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (MOEM, IntObj)

    OperationRegion (CPNV, SystemMemory, 0xCDF68018, 0x000100D8)
    Field (CPNV, AnyAcc, Lock, Preserve)
    {
        M082,   32, 
        M083,   32, 
        M084,   32, 
        M085,   8, 
        M221,   8, 
        M086,   16, 
        M229,   8, 
        M231,   16, 
        M235,   8, 
        M233,   32, 
            ,   1, 
            ,   2, 
            ,   1, 
            ,   1, 
            ,   1, 
            ,   1, 
        Offset (0x19), 
        M087,   1, 
            ,   1, 
        Offset (0x1C), 
        M088,   16, 
        M089,   16, 
        M090,   3, 
        M091,   5, 
        M092,   8, 
        M093,   3, 
        M094,   5, 
        M095,   8, 
        M096,   8, 
        M097,   8, 
        M098,   32, 
        M099,   32, 
        M100,   32, 
        M101,   32, 
        M102,   32, 
        M103,   32, 
        M104,   224, 
        M105,   32, 
        M106,   32768, 
        M378,   32768, 
        M379,   32768, 
        M380,   32768, 
        M381,   32768, 
        M382,   32768, 
        M383,   32768, 
        M384,   32768, 
        M385,   32768, 
        M386,   32768, 
        M387,   32768, 
        M388,   32768, 
        M389,   32768, 
        M390,   32768, 
        M391,   32768, 
        M392,   32768, 
        M107,   64, 
        M320,   32, 
        M321,   32, 
        M322,   32, 
        M323,   32, 
        M324,   32, 
        M325,   32, 
        M326,   32, 
        M327,   16, 
        M328,   8, 
        M128,   32, 
        M108,   32, 
        M109,   32, 
        M110,   32, 
        M122,   32, 
        M131,   32, 
        M132,   32, 
        M133,   32, 
        M134,   32, 
        M135,   32, 
        M136,   32, 
        M220,   32, 
        M226,   32, 
        M251,   32, 
        M310,   32, 
        M280,   32, 
        M290,   32, 
        M331,   32, 
        M414,   16, 
        M444,   72
    }

    Method (M000, 1, Serialized)
    {
        Name (M285, Buffer (0x04)
        {
             0x01, 0x03, 0x80, 0x00                           // ....
        })
        CreateByteField (M285, Zero, M286)
        CreateByteField (M285, One, M287)
        CreateWordField (M285, 0x02, M288)
        If ((ToInteger (M286) == One))
        {
            Local0 = (Arg0 + 0xB0000C00)
            Local1 = ToInteger (M288)
            If ((ToInteger (M287) == 0x03))
            {
                OperationRegion (VARM, SystemIO, Local1, 0x04)
                Field (VARM, DWordAcc, NoLock, Preserve)
                {
                    VARR,   32
                }

                VARR = Local0
            }
            ElseIf ((ToInteger (M287) == 0x02))
            {
                OperationRegion (VARN, SystemIO, Local1, 0x02)
                Field (VARN, WordAcc, NoLock, Preserve)
                {
                    VARS,   16
                }

                VARS = (Local0 & 0xFFFF)
            }
            ElseIf ((ToInteger (M287) == One))
            {
                OperationRegion (VARO, SystemIO, Local1, One)
                Field (VARO, ByteAcc, NoLock, Preserve)
                {
                    VART,   8
                }

                VART = (Local0 & 0xFF)
            }
        }
    }

    Method (M019, 4, Serialized)
    {
        Return (M017 (Arg0, Arg1, Arg2, Arg3, Zero, 0x20))
    }

    Method (M020, 5, Serialized)
    {
        M018 (Arg0, Arg1, Arg2, Arg3, Zero, 0x20, Arg4)
    }

    Mutex (M421, 0x00)
    Method (M422, 4, Serialized)
    {
        Local0 = M049 (M128, 0x81)
        If ((Local0 == Zero))
        {
            Return (Ones)
        }

        Local0 = (M083 + (Local0 << 0x14))
        Local0 += 0xE0
        Acquire (M421, 0xFFFF)
        OperationRegion (VARM, SystemMemory, Local0, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        Local1 = VAR1 /* \M422.VAR1 */
        Local2 = VAR2 /* \M422.VAR2 */
        VAR1 = Local1
        Release (M421)
        Return (Local2)
    }

    Method (M423, 5, Serialized)
    {
        Local0 = M049 (M128, 0x81)
        If ((Local0 != Zero))
        {
            Local0 = (M083 + (Local0 << 0x14))
            Local0 += 0xE0
            Acquire (M421, 0xFFFF)
            OperationRegion (VARM, SystemMemory, Local0, 0x08)
            Field (VARM, DWordAcc, NoLock, Preserve)
            {
                VAR1,   32
            }

            BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                VAR2,   32
            }

            Local1 = VAR1 /* \M423.VAR1 */
            VAR2 = Arg4
            VAR1 = Local1
            Release (M421)
        }
    }

    Mutex (M253, 0x00)
    Method (M249, 4, Serialized)
    {
        If ((((Arg0 + Arg1) + Arg2) == Zero))
        {
            Local0 = Zero
        }
        Else
        {
            Local0 = M252 (Arg0, Arg1, Arg2)
        }

        If ((Local0 == Ones))
        {
            Return (Ones)
        }

        Local0 = (M083 + (Local0 << 0x14))
        Local0 += 0xB8
        Acquire (M253, 0xFFFF)
        OperationRegion (VARM, SystemMemory, Local0, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        Local1 = VAR1 /* \M249.VAR1 */
        Local2 = VAR2 /* \M249.VAR2 */
        VAR1 = Local1
        Release (M253)
        Return (Local2)
    }

    Method (M250, 5, Serialized)
    {
        If ((((Arg0 + Arg1) + Arg2) == Zero))
        {
            Local0 = Zero
        }
        Else
        {
            Local0 = M252 (Arg0, Arg1, Arg2)
        }

        If ((Local0 != Ones))
        {
            Local0 = (M083 + (Local0 << 0x14))
            Local0 += 0xB8
            Acquire (M253, 0xFFFF)
            OperationRegion (VARM, SystemMemory, Local0, 0x08)
            Field (VARM, DWordAcc, NoLock, Preserve)
            {
                VAR1,   32
            }

            BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                VAR2,   32
            }

            Local1 = VAR1 /* \M250.VAR1 */
            VAR2 = Arg4
            VAR1 = Local1
            Release (M253)
        }
    }

    Method (M021, 4, Serialized)
    {
        Local0 = (M083 + (Arg0 << 0x14))
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        Local0 += 0xE0
        OperationRegion (VARM, SystemMemory, Local0, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        Local0 = VAR2 /* \M021.VAR2 */
        Return (Local0)
    }

    Method (M022, 5, Serialized)
    {
        Local0 = (M083 + (Arg0 << 0x14))
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        Local0 += 0xE0
        OperationRegion (VARM, SystemMemory, Local0, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        VAR2 = Arg4
    }

    Method (M023, 3, Serialized)
    {
        M018 (Arg0, Arg1, Arg2, 0x70, 0x03, One, Zero)
        M018 (Arg0, Arg1, Arg2, 0x70, 0x13, One, One)
    }

    Method (M024, 3, Serialized)
    {
        Local0 = M019 (Arg0, Arg1, Arg2, 0x0128)
        If ((Local0 & 0x00020000))
        {
            Return (Ones)
        }
        Else
        {
            Return (Zero)
        }
    }

    Method (M026, 3, Serialized)
    {
        Local0 = M021 (Arg0, Arg1, Arg2, 0xA2)
        Local0 &= 0xFFFFFFF8
        Local1 = (Local0 >> 0x04)
        Local1 &= 0x07
        Local0 |= Local1
        Local0 |= 0x0100
        M022 (Arg0, Arg1, Arg2, 0xA2, Local0)
    }

    Method (M025, 4, Serialized)
    {
        M429 (Arg0, Arg1, Arg2, 0x68, 0x05, One, Zero)
        If (Arg3)
        {
            M429 (Arg0, Arg1, Arg2, 0x88, Zero, 0x04, Arg3)
        }

        M429 (Arg0, Arg1, Arg2, 0x68, 0x05, One, One)
        Local1 = 0x64
        Local2 = One
        While ((Local1 && Local2))
        {
            Sleep (One)
            Local3 = M430 (Arg0, Arg1, Arg2)
            If ((Local3 & 0x0800))
            {
                Local1--
            }
            Else
            {
                Local2 = Zero
            }
        }

        M429 (Arg0, Arg1, Arg2, 0x68, 0x05, One, Zero)
        If (!Local2)
        {
            Return (Ones)
        }
        Else
        {
            Return (Zero)
        }
    }

    Method (M430, 3, Serialized)
    {
        Local0 = M017 (Arg0, Arg1, Arg2, 0x68, 0x10, 0x10)
        Return (Local0)
    }

    Method (M412, 1, Serialized)
    {
        Local0 = (Arg0 >> 0x07)
        Local0 &= One
        Local1 = (Arg0 >> 0x04)
        Local1 &= 0x07
        Local1 += \_GPE.M411
        Local2 = (Arg0 & 0x0F)
        Local3 = M409 (Local0, Local1, Zero)
        Local3 >>= Local2
        Local3 &= One
        Return (Local3)
    }

    Method (M413, 2, Serialized)
    {
        Local0 = (Arg0 >> 0x07)
        Local0 &= One
        Local1 = (Arg0 >> 0x04)
        Local1 &= 0x07
        Local1 += \_GPE.M411
        Local2 = (Arg0 & 0x0F)
        Local3 = M409 (Local0, Local1, One)
        Local3 &= (Ones ^ (One << Local2))
        Local3 |= (Arg1 << Local2)
        M410 (Local0, Local1, One, Local3)
    }

    Method (M440, 1, Serialized)
    {
        M012 (0xFEC30000, Zero, Arg0, One, Zero)
        Local0 = M011 (0xFEC30000, 0x04, Arg0, One)
        Return (Local0)
    }

    Method (M441, 2, Serialized)
    {
        M012 (0xFEC30000, Zero, Arg0, One, One)
        M012 (0xFEC30000, 0x08, Arg0, One, Arg1)
    }

    Method (M009, 1, Serialized)
    {
        Local0 = (Arg0 >> 0x08)
        Local0 &= 0x07
        Local1 = (Arg0 & 0xFF)
        Local2 = Zero
        If (((Local0 == Zero) || (Local0 == One)))
        {
            If ((M085 >= 0x02))
            {
                Local2 = (Arg0 & 0xF800)
                If ((Local2 == Zero))
                {
                    If ((Local0 == Zero))
                    {
                        Local2 = M011 ((M084 + 0x1502), (Local1 * 0x04), Zero, 
                            One)
                    }
                    Else
                    {
                        Local2 = M011 ((M084 + 0x1202), (Local1 * 0x04), Zero, 
                            One)
                    }
                }
                Else
                {
                    Local3 = (Arg0 >> 0x0F)
                    Local3 &= One
                    Local4 = (Arg0 >> 0x0D)
                    Local4 &= 0x03
                    Local5 = (Arg0 >> 0x0B)
                    Local5 &= 0x03
                    If ((Local0 == Zero))
                    {
                        Local6 = (0x02D02500 + (Local1 * 0x04))
                    }
                    Else
                    {
                        Local6 = (0x02D02200 + (Local1 * 0x04))
                    }

                    Local2 = M249 (Local3, Local4, Local5, Local6)
                    Local2 >>= 0x10
                    Local2 &= One
                }
            }
            Else
            {
                Local2 = M011 ((M084 + 0x0100), Local1, 0x07, One)
            }
        }
        ElseIf (((Local0 == 0x04) || (Local0 == 0x05)))
        {
            Local3 = (Arg0 >> 0x0F)
            Local3 &= One
            Local4 = (Arg0 >> 0x0D)
            Local4 &= 0x03
            Local5 = (Arg0 >> 0x0B)
            Local5 &= 0x03
            If ((Local0 == 0x04))
            {
                Local6 = (0x02D02500 + (Local1 * 0x04))
            }
            Else
            {
                Local6 = (0x02D02200 + (Local1 * 0x04))
            }

            Local2 = M422 (Local3, Local4, Local5, Local6)
            Local2 >>= 0x10
            Local2 &= One
        }
        ElseIf ((Local0 == 0x02))
        {
            If ((M049 (M128, 0x77) == One))
            {
                (Local1 + 0x08) = M038 /* External reference */
                Local2
            }
            Else
            {
                Local2 = 0xFF
            }
        }
        ElseIf ((Local0 == 0x03))
        {
            Local2 = M440 (Local1)
        }
        ElseIf ((Local0 == 0x06))
        {
            Local2 = M412 (Local1)
        }

        Return (Local2)
    }

    Method (M010, 2, Serialized)
    {
        Local0 = (Arg0 >> 0x08)
        Local0 &= 0x07
        Local1 = (Arg0 & 0xFF)
        If (((Local0 == Zero) || (Local0 == One)))
        {
            If ((M085 >= 0x02))
            {
                Local2 = (Arg0 & 0xF800)
                If ((Local2 == Zero))
                {
                    If ((Local0 == Zero))
                    {
                        M012 ((M084 + 0x1502), (Local1 * 0x04), 0x06, 0x02, (
                            0x02 | Arg1))
                    }
                    Else
                    {
                        M012 ((M084 + 0x1202), (Local1 * 0x04), 0x06, 0x02, (
                            0x02 | Arg1))
                    }
                }
                Else
                {
                    Local3 = (Arg0 >> 0x0F)
                    Local3 &= One
                    Local4 = (Arg0 >> 0x0D)
                    Local4 &= 0x03
                    Local5 = (Arg0 >> 0x0B)
                    Local5 &= 0x03
                    If ((Local0 == Zero))
                    {
                        Local6 = (0x02D02500 + (Local1 * 0x04))
                    }
                    Else
                    {
                        Local6 = (0x02D02200 + (Local1 * 0x04))
                    }

                    Local2 = M249 (Local3, Local4, Local5, Local6)
                    Local2 &= 0xCF3FFFFF
                    Local2 |= 0x00800000
                    Local2 |= (Arg1 << 0x16)
                    M250 (Local3, Local4, Local5, Local6, Local2)
                }
            }
            Else
            {
                M012 ((M084 + 0x0100), Local1, 0x06, One, Arg1)
                M012 ((M084 + 0x0100), Local1, 0x05, One, Zero)
            }
        }
        ElseIf (((Local0 == 0x04) || (Local0 == 0x05)))
        {
            Local3 = (Arg0 >> 0x0F)
            Local3 &= One
            Local4 = (Arg0 >> 0x0D)
            Local4 &= 0x03
            Local5 = (Arg0 >> 0x0B)
            Local5 &= 0x03
            If ((Local0 == 0x04))
            {
                Local6 = (0x02D02500 + (Local1 * 0x04))
            }
            Else
            {
                Local6 = (0x02D02200 + (Local1 * 0x04))
            }

            Local2 = M422 (Local3, Local4, Local5, Local6)
            Local2 &= 0xCF3FFFFF
            Local2 |= 0x00800000
            Local2 |= (Arg1 << 0x16)
            M423 (Local3, Local4, Local5, Local6, Local2)
        }
        ElseIf ((Local0 == 0x02))
        {
            If ((M049 (M128, 0x77) == One))
            {
                M039 ((Local1 + 0x08), Arg1)
            }
        }
        ElseIf ((Local0 == 0x03))
        {
            M441 (Local1, Arg1)
        }
        ElseIf ((Local0 == 0x06))
        {
            M413 (Local1, Arg1)
        }
    }

    Name (M037, Buffer (0x17)
    {
        /* 0000 */  0x7E, 0x81, 0x03, 0x16, 0x04, 0x15, 0x0E, 0x05,  // ~.......
        /* 0008 */  0x02, 0x20, 0x06, 0x07, 0x10, 0x11, 0x12, 0x18,  // . ......
        /* 0010 */  0x17, 0x19, 0x0B, 0x01, 0x0F, 0x0D, 0x09         // .......
    })
    Name (M227, Buffer (0x18)
    {
        /* 0000 */  0x41, 0x42, 0x03, 0x16, 0x04, 0x15, 0x0E, 0x05,  // AB......
        /* 0008 */  0x02, 0x44, 0x06, 0x07, 0x10, 0x11, 0x12, 0x18,  // .D......
        /* 0010 */  0x17, 0x45, 0x0B, 0x01, 0x0F, 0x0D, 0x09, 0x08   // .E......
    })
    Name (M329, Buffer (0x18)
    {
        /* 0000 */  0x59, 0x5A, 0x03, 0x16, 0x04, 0x15, 0x5B, 0x05,  // YZ....[.
        /* 0008 */  0x02, 0x56, 0x06, 0x4C, 0x10, 0x11, 0x12, 0x18,  // .V.L....
        /* 0010 */  0x17, 0x81, 0x54, 0x01, 0x28, 0x00, 0x09, 0x08   // ..T.(...
    })
    Name (M32A, Buffer (0x18)
    {
        /* 0000 */  0x59, 0x5A, 0x03, 0x16, 0x04, 0x15, 0x5B, 0x05,  // YZ....[.
        /* 0008 */  0x02, 0x56, 0x06, 0x4C, 0x10, 0x11, 0x1D, 0x1E,  // .V.L....
        /* 0010 */  0x17, 0x81, 0x54, 0x01, 0x28, 0x00, 0x09, 0x08   // ..T.(...
    })
    Name (M330, Buffer (0x18)
    {
        /* 0000 */  0x59, 0x5A, 0x03, 0x16, 0x04, 0x15, 0x5B, 0x05,  // YZ....[.
        /* 0008 */  0x02, 0x56, 0x06, 0x07, 0x10, 0x11, 0x12, 0x18,  // .V......
        /* 0010 */  0x17, 0x81, 0x54, 0x01, 0x28, 0x00, 0x09, 0x08   // ..T.(...
    })
    Name (M32B, Buffer (0x18)
    {
        /* 0000 */  0x59, 0x5A, 0x03, 0x16, 0x04, 0x0B, 0x5B, 0x05,  // YZ....[.
        /* 0008 */  0x02, 0x1D, 0x06, 0x07, 0x10, 0x11, 0x12, 0x18,  // ........
        /* 0010 */  0x17, 0x20, 0x54, 0x01, 0x28, 0x00, 0x09, 0x08   // . T.(...
    })
    Method (M029, 1, Serialized)
    {
        If ((M085 == 0x02))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M037 [Arg0]) * 
                0x04), Zero, One))
        }
        ElseIf ((M085 < 0x02))
        {
            Return (M011 ((M084 + 0x0160), Arg0, 0x07, One))
        }
        ElseIf (((M085 > 0x02) && (M085 < 0x08)))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M227 [Arg0]) * 
                0x04), Zero, One))
        }
        ElseIf ((M085 == 0x08))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M329 [Arg0]) * 
                0x04), Zero, One))
        }
        ElseIf (((M085 == 0x09) || (M085 == 0x0A)))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M330 [Arg0]) * 
                0x04), Zero, One))
        }
        ElseIf (((M085 == 0x0B) || (M085 == 0x0C)))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M32A [Arg0]) * 
                0x04), Zero, One))
        }
        ElseIf (((M085 == 0x0D) || (M085 == 0x0E)))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M330 [Arg0]) * 
                0x04), Zero, One))
        }
        ElseIf ((M085 == 0x0F))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M32B [Arg0]) * 
                0x04), Zero, One))
        }
    }

    Method (M031, 1, Serialized)
    {
        Local0 = M011 ((M084 + 0x0240), Arg0, Zero, 0x05)
        Return (M011 ((M084 + 0x0208), (Local0 / 0x08), (Local0 & 
            0x07), One))
    }

    Method (M032, 2, Serialized)
    {
        Local0 = M011 ((M084 + 0x0240), Arg0, Zero, 0x05)
        M012 ((M084 + 0x0208), (Local0 / 0x08), (Local0 & 0x07
            ), One, Arg1)
    }

    Method (M013, 4, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, 0x04)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VARR,   32
        }

        Local1 = VARR /* \M013.VARR */
        Local5 = 0x7FFFFFFF
        Local5 |= 0x80000000
        Local2 = ((Local1 >> Arg2) & (Local5 >> (0x20 - Arg3)
            ))
        Return (Local2)
    }

    Method (M014, 5, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, 0x04)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VARR,   32
        }

        Local1 = VARR /* \M014.VARR */
        Local5 = 0x7FFFFFFF
        Local5 |= 0x80000000
        Local2 = (Arg2 + Arg3)
        Local2 = (0x20 - Local2)
        Local2 = (((Local5 << Local2) & Local5) >> Local2)
        Local2 = ((Local2 >> Arg2) << Arg2)
        Local3 = (Arg4 << Arg2)
        Local4 = ((Local1 & (Local5 ^ Local2)) | Local3)
        VARR = Local4
    }

    Method (M011, 4, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, One)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            VARR,   8
        }

        Local1 = VARR /* \M011.VARR */
        Local2 = ((Local1 >> Arg2) & (0xFF >> (0x08 - Arg3)
            ))
        Return (Local2)
    }

    Method (M012, 5, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, One)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            VARR,   8
        }

        Local1 = VARR /* \M012.VARR */
        Local2 = (Arg2 + Arg3)
        Local2 = (0x08 - Local2)
        Local2 = (((0xFF << Local2) & 0xFF) >> Local2)
        Local2 = ((Local2 >> Arg2) << Arg2)
        Local3 = (Arg4 << Arg2)
        Local4 = ((Local1 & (0xFF ^ Local2)) | Local3)
        VARR = Local4
    }

    Method (M017, 6, Serialized)
    {
        Local0 = M083 /* \M083 */
        Local1 = (M083 >> 0x14)
        Local2 = (Local1 & 0x0F00)
        Local2 += 0x0100
        If (((Local1 + Arg0) >= Local2))
        {
            Local3 = 0x7FFFFFFF
            Local3 |= 0x80000000
            Local4 = ((Local3 >> Arg4) & (Local3 >> (0x20 - Arg5)
                ))
            Return (Local4)
        }

        Local0 += (Arg0 << 0x14)
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        Return (M013 (Local0, Arg3, Arg4, Arg5))
    }

    Method (M018, 7, Serialized)
    {
        Local0 = M083 /* \M083 */
        Local1 = (M083 >> 0x14)
        Local2 = (Local1 & 0x0F00)
        Local2 += 0x0100
        If (((Local1 + Arg0) < Local2))
        {
            Local0 += (Arg0 << 0x14)
            Local0 += (Arg1 << 0x0F)
            Local0 += (Arg2 << 0x0C)
            Local3 = 0x7FFFFFFF
            Local3 |= 0x80000000
            If ((M013 (Local0, Zero, Zero, 0x20) != Local3))
            {
                M014 (Local0, Arg3, Arg4, Arg5, Arg6)
            }
        }
    }

    Method (M428, 6, Serialized)
    {
        Local0 = M083 /* \M083 */
        Local1 = (M083 >> 0x14)
        Local2 = (Local1 & 0x0F00)
        Local2 += 0x0100
        If (((Local1 + Arg0) >= Local2))
        {
            Local3 = 0xFF
            Local4 = ((Local3 >> Arg4) & (Local3 >> (0x08 - Arg5)
                ))
            Return (Local4)
        }

        Local0 += (Arg0 << 0x14)
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        Return (M011 (Local0, Arg3, Arg4, Arg5))
    }

    Method (M429, 7, Serialized)
    {
        Local0 = M083 /* \M083 */
        Local1 = (M083 >> 0x14)
        Local2 = (Local1 & 0x0F00)
        Local2 += 0x0100
        If (((Local1 + Arg0) < Local2))
        {
            Local0 += (Arg0 << 0x14)
            Local0 += (Arg1 << 0x0F)
            Local0 += (Arg2 << 0x0C)
            Local3 = 0x7FFFFFFF
            Local3 |= 0x80000000
            If ((M013 (Local0, Zero, Zero, 0x20) != Local3))
            {
                M012 (Local0, Arg3, Arg4, Arg5, Arg6)
            }
        }
    }

    Method (M265, 3, Serialized)
    {
        Local0 = Zero
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, Zero, 0x08)
        While ((Local1 != Zero))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, Zero, 0x08)
            If (((Local2 == Zero) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                Local3 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x0C), 0x12, One)
                Local4 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x10), 0x08, One)
                If (((Local3 == One) && (Local4 == One)))
                {
                    Local0 = One
                }

                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + One), Zero, 0x08)
        }

        Return (Local0)
    }

    Method (M033, 3, Serialized)
    {
        Local0 = Zero
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, Zero, 0x08)
        While ((Local1 != Zero))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, Zero, 0x08)
            If (((Local2 == Zero) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                Local0 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x0C), 0x0A, 0x02)
                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + One), Zero, 0x08)
        }

        Return (Local0)
    }

    Method (M027, 3, Serialized)
    {
        Local0 = Zero
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, Zero, 0x08)
        While ((Local1 != Zero))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, Zero, 0x08)
            If (((Local2 == Zero) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                Local0 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x10), Zero, 0x02)
                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + One), Zero, 0x08)
        }

        Return (Local0)
    }

    Method (M028, 4, Serialized)
    {
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, Zero, 0x08)
        While (((Local1 != Zero) && (Local1 < 0xFF)))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, Zero, 0x08)
            If (((Local2 == Zero) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                M018 (Arg0, Arg1, Arg2, (Local1 + 0x10), Zero, 0x02, Arg3)
                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + One), Zero, 0x08)
        }
    }

    Method (M034, 1, Serialized)
    {
        Return (M011 ((M084 + 0x0700), Arg0, Zero, 0x08))
    }

    Method (M015, 1, Serialized)
    {
        Return (M011 ((M084 + 0x0400), Arg0, Zero, 0x08))
    }

    Method (M016, 2, Serialized)
    {
        M012 ((M084 + 0x0400), Arg0, Zero, 0x08, Arg1)
    }

    Method (M035, 1, Serialized)
    {
        Return (M011 (M084, Arg0, Zero, 0x08))
    }

    Method (M036, 2, Serialized)
    {
        M012 (M084, Arg0, Zero, 0x08, Arg1)
    }

    Method (M001, 2, Serialized)
    {
        Local0 = Zero
        If ((Arg0 == 0x15))
        {
            Local0 = One
        }

        Return (Local0)
    }

    Method (M003, 3, Serialized)
    {
        Local0 = (Arg0 << 0x05)
        Local1 = (Local0 + Arg1)
        Local2 = (Local1 << 0x18)
        Local3 = (Local2 + Arg2)
        Return (Local3)
    }

    Method (M004, 1, Serialized)
    {
        OperationRegion (VARM, SystemIO, 0x0CD8, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg0, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        Local0 = VAR2 /* \M004.VAR2 */
        Return (Local0)
    }

    Method (M005, 2, Serialized)
    {
        OperationRegion (VARM, SystemIO, 0x0CD8, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg0, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        VAR2 = Arg1
    }

    Method (M006, 3, Serialized)
    {
        Local0 = (M004 (Arg0) & Arg1)
        Local1 = (Local0 | Arg2)
        M005 (Arg0, Local1)
    }

    Method (M002, 2, Serialized)
    {
        If ((Arg0 == Zero))
        {
            If ((Arg1 == Zero))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFEFFF, Zero)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFEFE, Zero)
            }

            If ((Arg1 == One))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFDFFF, Zero)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFDFD, Zero)
            }

            If ((Arg1 == 0x02))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFBFFF, Zero)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFBFB, Zero)
            }

            If ((Arg1 == 0x03))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFF7FFF, Zero)
                M006 (M003 (One, Zero, 0x65), 0xFFFFF7F7, Zero)
            }

            Sleep (One)
        }

        If ((Arg0 == One))
        {
            If ((Arg1 == Zero))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFEFFF, 0x1000)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFEFE, 0x0101)
            }

            If ((Arg1 == One))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFDFFF, 0x2000)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFDFD, 0x0202)
            }

            If ((Arg1 == 0x02))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFFBFFF, 0x4000)
                M006 (M003 (One, Zero, 0x65), 0xFFFFFBFB, 0x0404)
            }

            If ((Arg1 == 0x03))
            {
                M006 (M003 (0x06, Zero, 0xC0), 0xFFFF7FFF, 0x8000)
                M006 (M003 (One, Zero, 0x65), 0xFFFFF7F7, 0x0808)
            }

            Sleep (One)
        }

        If ((Arg0 == Zero))
        {
            M008 (Arg1)
            Local0 = M004 (M003 (0x03, Arg1, 0xA5))
            Local0 &= 0xFF
            Local1 = 0x01F4
            While (((Local1 > Zero) && (Local0 != 0x10)))
            {
                Local0 = M004 (M003 (0x03, Arg1, 0xA5))
                Local0 &= 0xFF
                Local1--
                Sleep (One)
            }

            If ((Local0 != 0x10))
            {
                M007 (Arg1)
            }
        }
    }

    Method (M008, 1, Serialized)
    {
        Local0 = M019 (Zero, 0x15, Arg0, 0x88)
        Local1 = ((Local0 & 0xFFFFFFF0) | 0x02)
        M020 (Zero, 0x15, Arg0, 0x88, Local1)
        M006 (M003 (0x03, Arg0, 0xA4), 0xFFFFFFFE, One)
        M006 (M003 (0x03, Arg0, 0xA2), 0xFFFFDFFF, 0x2000)
        M006 (M003 (0x03, Arg0, 0xC0), 0xFFFF7FFF, 0x8000)
        M006 (M003 (0x03, Arg0, 0xA4), 0xDFFFFFFF, 0x20000000)
        Sleep (One)
    }

    Method (M007, 1, Serialized)
    {
        Local0 = M019 (Zero, 0x15, Arg0, 0x88)
        Local1 = ((Local0 & 0xFFFFFFF0) | One)
        M020 (Zero, 0x15, Arg0, 0x88, Local1)
        M006 (M003 (0x03, Arg0, 0xA4), 0xFFFFFFFE, Zero)
        M006 (M003 (0x03, Arg0, 0xA2), 0xFFFFDFFF, 0x2000)
        Sleep (One)
    }

    Method (M111, 2, Serialized)
    {
        If ((Arg0 != Zero))
        {
            Local0 = M110 /* \M110 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        Local3 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                        If ((Local3 != Zero))
                        {
                            Local4 = M013 ((Local0 + Local1), 0x02, Zero, 0x08)
                            If ((Local4 == Zero))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                                Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                                M010 (Local5, Local6)
                            }

                            If ((Local4 == One))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                                Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                                While ((M009 (Local5) != Local6)) {}
                            }

                            If ((Local4 == 0x02))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x20)
                                Sleep (((Local5 + 0x03E7) / 0x03E8))
                            }
                        }
                    }

                    Local1 += 0x08
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                }
            }
        }
    }

    Method (M228, 1, Serialized)
    {
        If ((Arg0 > 0x03))
        {
            Local0 = M110 /* \M110 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local3 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                    If ((Local3 == Arg0))
                    {
                        Local4 = M013 ((Local0 + Local1), 0x02, Zero, 0x08)
                        If ((Local4 == Zero))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                            M010 (Local5, Local6)
                        }

                        If ((Local4 == One))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                            While ((M009 (Local5) != Local6)) {}
                        }

                        If ((Local4 == 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x20)
                            Sleep (((Local5 + 0x03E7) / 0x03E8))
                        }
                    }

                    Local1 += 0x08
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                }
            }
        }
    }

    Method (M219, 2, Serialized)
    {
        If ((Arg0 != Zero))
        {
            Local0 = M221 /* \M221 */
            If ((Local0 & 0x02))
            {
                Local0 = M220 /* \M220 */
                If (Local0)
                {
                    Local0 += 0x10
                    Local1 = Zero
                    Local2 = One
                    While ((Local2 != 0xFF))
                    {
                        Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                        Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                        Local4 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                        Local5 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                        Local7 = M013 ((Local0 + Local1), 0x08, Zero, 0x20)
                        If ((Local4 == Arg0))
                        {
                            If (((Local2 < 0x0A) && (Local5 & 0x80)))
                            {
                                If ((Arg1 == Zero))
                                {
                                    If ((M085 >= 0x04))
                                    {
                                        If (((Local7 >> 0x10) > Zero))
                                        {
                                            If (((Local7 >> 0x1C) == 0x02))
                                            {
                                                Local6 = M249 (((Local7 >> 0x18) & 0x0F), ((
                                                    Local7 >> 0x14) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D02300)
                                            }
                                            Else
                                            {
                                                Local6 = M249 (((Local7 >> 0x18) & 0x0F), ((
                                                    Local7 >> 0x14) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D01E00)
                                            }

                                            Local6 &= (Ones ^ (0x03 << (Local2 << One)))
                                            If (((Local7 >> 0x1C) == 0x02))
                                            {
                                                M250 (((Local7 >> 0x18) & 0x0F), ((Local7 >> 0x14
                                                    ) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D02300, Local6)
                                            }
                                            Else
                                            {
                                                M250 (((Local7 >> 0x18) & 0x0F), ((Local7 >> 0x14
                                                    ) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D01E00, Local6)
                                            }
                                        }
                                        ElseIf ((Local2 >= 0x04))
                                        {
                                            M012 ((M084 + 0x0E00), One, ((Local2 - 0x04) * 0x02
                                                ), 0x02, Zero)
                                        }
                                        Else
                                        {
                                            M012 ((M084 + 0x0E00), Zero, (Local2 * 0x02), 0x02, Zero)
                                        }
                                    }
                                    Else
                                    {
                                        M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                            One) * 0x04), 0x04, Zero)
                                    }
                                }
                                ElseIf ((Local5 & 0x04))
                                {
                                    If ((Arg1 == One))
                                    {
                                        If ((M085 >= 0x04))
                                        {
                                            If (((Local7 >> 0x10) > Zero))
                                            {
                                                If (((Local7 >> 0x1C) == 0x02))
                                                {
                                                    Local6 = M249 (((Local7 >> 0x18) & 0x0F), ((
                                                        Local7 >> 0x14) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D02300)
                                                }
                                                Else
                                                {
                                                    Local6 = M249 (((Local7 >> 0x18) & 0x0F), ((
                                                        Local7 >> 0x14) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D01E00)
                                                }

                                                Local6 &= (Ones ^ (0x03 << (Local2 << One)))
                                                Local6 |= (0x03 << (Local2 << One))
                                                If (((Local7 >> 0x1C) == 0x02))
                                                {
                                                    M250 (((Local7 >> 0x18) & 0x0F), ((Local7 >> 0x14
                                                        ) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D02300, Local6)
                                                }
                                                Else
                                                {
                                                    M250 (((Local7 >> 0x18) & 0x0F), ((Local7 >> 0x14
                                                        ) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D01E00, Local6)
                                                }
                                            }
                                            ElseIf ((Local2 >= 0x04))
                                            {
                                                M012 ((M084 + 0x0E00), One, ((Local2 - 0x04) * 0x02
                                                    ), 0x02, 0x03)
                                            }
                                            Else
                                            {
                                                M012 ((M084 + 0x0E00), Zero, (Local2 * 0x02), 0x02, 0x03)
                                            }
                                        }
                                        Else
                                        {
                                            M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                                One) * 0x04), 0x04, 0x0F)
                                        }
                                    }

                                    If ((Arg1 == 0x02))
                                    {
                                        Local6 = M017 (Zero, M013 ((Local0 + Local1), 0x05, Zero, 0x08), 
                                            M013 ((Local0 + Local1), 0x06, Zero, 0x08), 0x19, Zero, 0x08)
                                        If ((M265 (Local6, Zero, Zero) == One))
                                        {
                                            If ((M085 >= 0x04))
                                            {
                                                If (((Local7 >> 0x10) > Zero))
                                                {
                                                    If (((Local7 >> 0x1C) == 0x02))
                                                    {
                                                        Local6 = M249 (((Local7 >> 0x18) & 0x0F), ((
                                                            Local7 >> 0x14) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D02300)
                                                    }
                                                    Else
                                                    {
                                                        Local6 = M249 (((Local7 >> 0x18) & 0x0F), ((
                                                            Local7 >> 0x14) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D01E00)
                                                    }

                                                    Local6 &= (Ones ^ (0x03 << (Local2 << One)))
                                                    Local6 |= (Local3 << (Local2 << One))
                                                    If (((Local7 >> 0x1C) == 0x02))
                                                    {
                                                        M250 (((Local7 >> 0x18) & 0x0F), ((Local7 >> 0x14
                                                            ) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D02300, Local6)
                                                    }
                                                    Else
                                                    {
                                                        M250 (((Local7 >> 0x18) & 0x0F), ((Local7 >> 0x14
                                                            ) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D01E00, Local6)
                                                    }
                                                }
                                                ElseIf ((Local2 >= 0x04))
                                                {
                                                    M012 ((M084 + 0x0E00), One, ((Local2 - 0x04) * 0x02
                                                        ), 0x02, Local3)
                                                }
                                                Else
                                                {
                                                    M012 ((M084 + 0x0E00), Zero, (Local2 * 0x02), 0x02, Local3)
                                                }
                                            }
                                            Else
                                            {
                                                M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                                    One) * 0x04), 0x04, Local3)
                                            }
                                        }
                                    }
                                }
                                ElseIf ((M085 >= 0x04))
                                {
                                    M012 ((M084 + 0x0E00), Zero, (Local2 * 0x02), 0x02, 0x03)
                                }
                                Else
                                {
                                    M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                        One) * 0x04), 0x04, Local3)
                                }

                                Local2 = 0xFF
                            }
                        }

                        Local1 += 0x0C
                    }
                }
            }
        }
    }

    Method (M112, 2, Serialized)
    {
        If ((Arg0 != Zero))
        {
            Local0 = M109 /* \M109 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = One
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                    Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        If ((Local3 < 0x02))
                        {
                            Local4 = M013 ((Local0 + Local1), 0x02, Zero, 0x08)
                            If ((Local4 == Zero))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                                Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                                M010 (Local5, Local6)
                            }

                            If ((Local4 == One))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                                Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                                M010 (Local5, Local6)
                                Local7 = M009 (Local5)
                                Local4 = 0x03F2
                                While (((Local4 > Zero) && (Local7 != Local6)))
                                {
                                    Local4 = (Local4 - One)
                                    Stall (0x63)
                                    Local7 = M009 (Local5)
                                }
                            }
                        }

                        If ((Local3 == 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x20)
                            Sleep (((Local5 + 0x03E7) / 0x03E8))
                        }
                    }

                    Local1 += 0x08
                }
            }
        }
    }

    Method (M275, 2, Serialized)
    {
        Local7 = Zero
        If ((Arg0 != Zero))
        {
            Local0 = M109 /* \M109 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = One
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                    Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        If ((Local3 < 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                            If ((M009 (Local5) == Local6))
                            {
                                Local7 = One
                            }
                        }
                    }

                    Local1 += 0x08
                }
            }
        }

        Return (Local7)
    }

    Method (M113, 1, Serialized)
    {
        If ((Arg0 != Zero))
        {
            Local0 = M108 /* \M108 */
            Local7 = One
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = One
                While (((Local2 != 0xFF) && (Local2 != Zero)))
                {
                    Local2 = M013 ((Local0 + Local1), Zero, Zero, 0x08)
                    If ((Local2 == Arg0))
                    {
                        Local2 = 0xFF
                        Local3 = M013 ((Local0 + Local1), One, Zero, 0x08)
                        If ((Local3 == Zero))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                        }

                        If ((Local3 == One))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                            Local7 &= (M009 (Local5) == Local6)
                        }

                        If ((Local3 == 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                            Local7 &= (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x08, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x0A, Zero, 0x08)
                            Local7 &= (M009 (Local5) == Local6)
                        }

                        If ((Local3 == 0x03))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                            Local7 |= (M009 (Local5) == Local6)
                        }

                        If ((Local3 == 0x04))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, Zero, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, Zero, 0x08)
                            Local7 |= (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x08, Zero, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x0A, Zero, 0x08)
                            Local7 |= (M009 (Local5) == Local6)
                        }
                    }
                    Else
                    {
                        Local1 += 0x0B
                    }
                }
            }
        }
        Else
        {
            Local7 = Zero
        }

        If (Local7)
        {
            Local7 = One
        }

        Return (Local7)
    }

    Method (M114, 4, Serialized)
    {
        Local7 = Zero
        If (!M001 (Arg0, Arg1))
        {
            Name (M115, Buffer (0x05) {})
            CreateWordField (M115, Zero, M116)
            CreateField (M115, 0x10, 0x03, M117)
            CreateField (M115, 0x13, 0x05, M118)
            CreateByteField (M115, 0x03, M119)
            CreateByteField (M115, 0x04, M120)
            M116 = 0x05
            M119 = Zero
            M118 = Arg0
            M117 = Arg1
            If ((Arg2 == Zero))
            {
                If ((Arg3 != One))
                {
                    M120 = Zero
                    \_SB.ALIB (0x06)
                    M115
                }
            }
            Else
            {
                If ((Arg3 != One))
                {
                    M120 = One
                    \_SB.ALIB (0x06)
                    M115
                }

                Local0 = M017 (Zero, Arg0, Arg1, 0x19, Zero, 0x08)
                If (((Local0 != Zero) && (Local0 != 0xFF)))
                {
                    Local1 = M019 (Local0, Zero, Zero, Zero)
                    Local2 = 0x7FFFFFFF
                    Local2 |= 0x80000000
                    If (((Local1 != Zero) && (Local1 != Local2)))
                    {
                        Local7 = One
                    }
                }
            }
        }
        ElseIf ((Arg2 == Zero))
        {
            M002 (One, Arg1)
        }
        Else
        {
            M002 (Zero, Arg1)
            Local0 = M017 (Zero, Arg0, Arg1, 0x19, Zero, 0x08)
            If (((Local0 != Zero) && (Local0 != 0xFF)))
            {
                Local1 = M019 (Local0, Zero, Zero, Zero)
                Local2 = 0x7FFFFFFF
                Local2 |= 0x80000000
                If (((Local1 != Zero) && (Local1 != Local2)))
                {
                    Local7 = One
                }
            }
        }

        Return (Local7)
    }

    Method (M252, 3, Serialized)
    {
        If ((M085 >= 0x08))
        {
            Local0 = M251 /* \M251 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = Zero
                Local2 = Zero
                While ((Local2 != 0xFF))
                {
                    Local2 = M011 ((Local0 + Local1), Zero, Zero, 0x08)
                    Local3 = M011 ((Local0 + Local1), One, Zero, 0x08)
                    Local4 = M011 ((Local0 + Local1), 0x02, Zero, 0x08)
                    Local5 = M011 ((Local0 + Local1), 0x03, Zero, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        If ((Local4 == Arg2))
                        {
                            Return (Local5)
                        }
                    }

                    Local1 += 0x04
                }
            }
        }

        Return (Ones)
    }

    Name (M046, Zero)
    Name (M047, Ones)
    Method (M045, 0, Serialized)
    {
        Local0 = Zero
        If ((M047 == Ones))
        {
            M047 = Zero
            M046 = Zero
            If (CondRefOf (\_OSI))
            {
                If (\_OSI ("Windows 2012"))
                {
                    M046 = One
                }

                If (\_OSI ("Windows 2013"))
                {
                    M046 = One
                }

                If (\_OSI ("Windows 2015"))
                {
                    M046 = One
                }

                If (\_OSI ("Windows 2016"))
                {
                    M046 = One
                }

                If (\_OSI ("Windows 2017"))
                {
                    M046 = One
                }
            }
        }

        If ((M046 == One))
        {
            Local0 = One
        }

        Return (Local0)
    }

    Method (M049, 2, Serialized)
    {
        Local0 = Zero
        If ((Arg0 != Zero))
        {
            Local0 = M011 (Arg0, Arg1, Zero, 0x08)
        }

        Return (Local0)
    }

    Method (M04A, 2, Serialized)
    {
        Local0 = Zero
        If ((Arg0 != Zero))
        {
            Local0 = M011 (Arg0, Arg1, Zero, 0x08)
            Local1 = M011 (Arg0, (Arg1 + One), Zero, 0x08)
            Local0 |= (Local1 << 0x08)
        }

        Return (Local0)
    }

    Method (M04B, 2, Serialized)
    {
        Local0 = Zero
        If ((Arg0 != Zero))
        {
            Local0 = M011 (Arg0, Arg1, Zero, 0x08)
            Local1 = M011 (Arg0, (Arg1 + One), Zero, 0x08)
            Local2 = M011 (Arg0, (Arg1 + 0x02), Zero, 0x08)
            Local3 = M011 (Arg0, (Arg1 + 0x03), Zero, 0x08)
            Local0 |= (Local1 << 0x08)
            Local0 |= (Local2 << 0x10)
            Local0 |= (Local3 << 0x18)
        }

        Return (Local0)
    }

    Mutex (M230, 0x00)
    Method (M232, 3, Serialized)
    {
        Local0 = Arg0
        Local1 = Arg1
        Local2 = Arg2
        Acquire (M230, 0xFFFF)
        Local0 = Arg0
        OperationRegion (VARM, SystemIO, M231, 0x02)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            VAR1,   8, 
            VAR2,   8
        }

        VAR2 = Local1
        VAR1 = Local0
        If ((Local2 > Zero))
        {
            Sleep (Local2)
        }

        Release (M230)
    }

    Method (M043, 3, Serialized)
    {
        If (CondRefOf (MOEM))
        {
            Return (MOEM) /* External reference */
            Arg0
            Arg1
            Arg2
        }
        Else
        {
            Return (Zero)
        }
    }

    Method (MLIB, 2, Serialized)
    {
        Switch (ToInteger (Arg0))
        {
            Case (Zero)
            {
                Local0 = DerefOf (Arg1 [0x02])
                Switch (ToInteger (Local0))
                {
                    Case (0x03)
                    {
                        M228 (0x04)
                        M228 (0x05)
                    }
                    Case (0x04)
                    {
                        M228 (0x04)
                        M228 (0x06)
                    }
                    Case (0x05)
                    {
                        M228 (0x04)
                        M228 (0x07)
                    }

                }
            }

        }
    }

    Method (M248, 1, Serialized)
    {
        If ((M085 == 0x08))
        {
            If ((Arg0 == Zero))
            {
                Return (M017 (Zero, 0x07, One, 0x19, Zero, 0x08))
            }
            Else
            {
                Return (M017 (Zero, 0x08, One, 0x19, Zero, 0x08))
            }
        }
        ElseIf ((M085 >= 0x0B))
        {
            If ((M085 >= 0x0D))
            {
                Return (M017 (Zero, 0x08, (Arg0 + One), 0x19, Zero, 0x08))
            }
            ElseIf ((Arg0 == Zero))
            {
                Return (M017 (Zero, 0x07, One, 0x19, Zero, 0x08))
            }
            Else
            {
                Return (M017 (Zero, 0x08, Arg0, 0x19, Zero, 0x08))
            }
        }
        ElseIf ((M085 >= 0x09))
        {
            If ((Arg0 == Zero))
            {
                Return (M017 (Zero, 0x08, One, 0x19, Zero, 0x08))
            }
            Else
            {
                Return (M017 (Zero, 0x08, 0x02, 0x19, Zero, 0x08))
            }
        }
        Else
        {
            Return (Zero)
        }
    }

    Method (M401, 2, NotSerialized)
    {
        Local0 = (Arg0 & 0x1F)
        Local0 = ((Local0 << 0x03) | (Arg1 & 0x07))
        Local1 = Zero
        If (((M085 >= 0x09) && (M085 <= 0x0A)))
        {
            Local2 = 0x07
        }
        Else
        {
            Local2 = 0x0A
        }

        Local3 = 0x14301000
        Local4 = M249 (Zero, Zero, Zero, ((Local1 * 0x04) + Local3
            ))
        While (((Local1 < Local2) && (Local4 != Local0)))
        {
            Local1++
            Local4 = M249 (Zero, Zero, Zero, ((Local1 * 0x04) + Local3
                ))
        }

        If ((Local1 <= Local2))
        {
            Return (Local1)
        }
        Else
        {
            Return (0xFF)
        }
    }

    Method (M402, 2, NotSerialized)
    {
        Local4 = M401 (Arg0, Arg1)
        If ((Local4 != 0xFF))
        {
            If (((M085 >= 0x08) && (M085 <= 0x0B)))
            {
                Local0 = M249 (Zero, Zero, Zero, 0x11180188)
                Local0 &= 0xFFFFDFFF
                M250 (Zero, Zero, Zero, 0x11180188, (Local0 | 0x2000))
            }

            Local1 = (M019 (Zero, Zero, Zero, 0x84) & 0xFF00FCFF)
            Local2 = ((Arg0 << 0x13) | (Arg1 << 0x10))
            Local1 |= Local2
            M020 (Zero, Zero, Zero, 0x84, (Local1 | 0x0100))
            M020 (Zero, Zero, Zero, 0x84, (Local1 | 0x0300))
            If ((M085 >= 0x0C))
            {
                Local3 = M019 (Zero, Zero, Zero, 0x84)
                Local5 = 0x4EEA
                While (((Local5 > Zero) && ((Local3 & 0x0400) != 0x0400)))
                {
                    Local5 = (Local5 - One)
                    Stall (0x63)
                    Local3 = M019 (Zero, Zero, Zero, 0x84)
                }
            }

            If (((M085 == 0x0D) && (Local4 >= 0x03)))
            {
                Local2 = (0x11240294 + ((Local4 - 0x03) << 0x0C))
            }
            Else
            {
                Local2 = (0x11140294 + (Local4 << 0x0C))
            }

            Local3 = M249 (Zero, Zero, Zero, Local2)
            Local5 = 0x4EEA
            While (((Local5 > Zero) && ((Local3 & 0x3F) != 0x1F)))
            {
                Local5 = (Local5 - One)
                Stall (0x63)
                Local3 = M249 (Zero, Zero, Zero, Local2)
            }

            M020 (Zero, Zero, Zero, 0x84, (Local1 | 0x0100))
            If (((M085 >= 0x08) && (M085 <= 0x0B)))
            {
                M250 (Zero, Zero, Zero, 0x11180188, Local0)
            }
        }
    }

    Method (M403, 3, NotSerialized)
    {
        Local4 = M401 (Arg0, Arg1)
        If ((Local4 != 0xFF))
        {
            If (((M085 == 0x0D) && (Local4 >= 0x03)))
            {
                Local2 = (0x11240280 + ((Local4 - 0x03) << 0x0C))
            }
            Else
            {
                Local2 = (0x11140280 + (Local4 << 0x0C))
            }

            Local0 = M249 (Zero, Zero, Zero, Local2)
            Local0 &= 0xFFBFFFFF
            Local1 = Arg2
            Local0 |= (Local1 << 0x16)
            M250 (Zero, Zero, Zero, Local2, Local0)
        }
    }

    Name (M404, Buffer (0x07)
    {
         0x00, 0x02, 0x06, 0x08, 0x04, 0x0A, 0x0C         // .......
    })
    Method (M405, 5, Serialized)
    {
        If ((M085 >= 0x04))
        {
            Local1 = DerefOf (M404 [Arg4])
            If ((((Arg0 > Zero) || (Arg1 > Zero)) || ((Arg2 > 
                Zero) || (Arg3 > Zero))))
            {
                If ((Arg3 == 0x02))
                {
                    Local0 = M249 (Arg0, Arg1, Arg2, 0x02D02300)
                }
                Else
                {
                    Local0 = M249 (Arg0, Arg1, Arg2, 0x02D01E00)
                }

                Local0 <<= (Local1 * 0x02)
                Local0 &= 0x03
            }
            ElseIf ((Local1 >= 0x04))
            {
                Local0 = M011 ((M084 + 0x0E00), One, ((Local1 - 0x04
                    ) * 0x02), 0x02)
            }
            Else
            {
                Local0 = M011 ((M084 + 0x0E00), Zero, (Local1 * 0x02), 
                    0x02)
            }
        }
        Else
        {
            Local0 = M011 ((M084 + 0x0E00), (Arg4 / 0x02), (
                (Arg4 & One) * 0x04), 0x04)
        }

        Return (Local0)
    }

    Method (M406, 6, Serialized)
    {
        If ((M085 >= 0x04))
        {
            Local1 = DerefOf (M404 [Arg4])
            If ((((Arg0 > Zero) || (Arg1 > Zero)) || ((Arg2 > 
                Zero) || (Arg3 > Zero))))
            {
                If ((Arg3 == 0x02))
                {
                    Local0 = M249 (Arg0, Arg1, Arg2, 0x02D02300)
                }
                Else
                {
                    Local0 = M249 (Arg0, Arg1, Arg2, 0x02D01E00)
                }

                Local0 &= (Ones ^ (0x03 << (Local1 << One)))
                Local0 |= (Arg5 << (Local1 << One))
                If ((Arg3 == 0x02))
                {
                    M250 (Arg0, Arg1, Arg2, 0x02D02300, Local0)
                }
                Else
                {
                    M250 (Arg0, Arg1, Arg2, 0x02D01E00, Local0)
                }
            }
            ElseIf ((Local1 >= 0x04))
            {
                M012 ((M084 + 0x0E00), One, ((Local1 - 0x04) * 0x02
                    ), 0x02, Arg5)
            }
            Else
            {
                M012 ((M084 + 0x0E00), Zero, (Local1 * 0x02), 0x02, Arg5)
            }
        }
        Else
        {
            M012 ((M084 + 0x0E00), (Arg4 / 0x02), ((Arg4 & 
                One) * 0x04), 0x04, Arg5)
        }
    }

    Mutex (M408, 0x00)
    Method (M409, 3, Serialized)
    {
        Acquire (M408, 0xFFFF)
        Local0 = (M414 + (Arg0 << 0x05))
        OperationRegion (VARM, SystemIO, Local0, 0x09)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            SMB0,   8, 
            SMB1,   8, 
            SMB2,   8, 
            SMB3,   8, 
            SMB4,   8, 
            SMB5,   8, 
            SMB6,   8, 
            SMB7,   8, 
            SMB8,   8
        }

        Local5 = M011 ((M084 + 0x0300), 0x02, Zero, 0x08)
        M012 ((M084 + 0x0300), 0x02, Zero, 0x08, (Local5 | One))
        If ((Arg0 == One))
        {
            Local6 = SMB2 /* \M409.SMB2 */
            SMB2 = (Local6 & 0x7F)
        }

        Local1 = Zero
        Local2 = 0x64
        While (((Local2 > Zero) && ((Local1 & 0x10) != 0x10)))
        {
            SMB8 |= 0x10
            Local2 = (Local2 - One)
            Stall (0x05)
            Local1 = SMB8 /* \M409.SMB8 */
        }

        Local3 = 0x03
        While ((Local3 > Zero))
        {
            Local1 = One
            Local2 = 0x64
            While (((Local2 > Zero) && ((Local1 & One) != Zero)))
            {
                SMB0 = 0x1F
                Local2 = (Local2 - One)
                Stall (0x05)
                Local1 = SMB0 /* \M409.SMB0 */
            }

            If ((Local2 == Zero))
            {
                SMB2 = 0x02
                Local3 = (Local3 - One)
            }
            Else
            {
                Local3 = Zero
            }
        }

        If (((Local2 == Zero) && (Local3 == Zero)))
        {
            If ((Arg0 == One))
            {
                SMB2 = Local6
            }

            M012 ((M084 + 0x0300), 0x02, Zero, 0x08, Local5)
            Release (M408)
            Return (Zero)
        }

        Local3 = 0x03
        While ((Local3 > Zero))
        {
            Local1 = One
            Local2 = 0x64
            While (((Local2 > Zero) && ((Local1 & One) != Zero)))
            {
                SMB1 = 0x3F
                Local2 = (Local2 - One)
                Stall (0x05)
                Local1 = SMB1 /* \M409.SMB1 */
            }

            If ((Local2 == Zero))
            {
                SMB1 = 0x02
                Local3 = (Local3 - One)
            }
            Else
            {
                Local3 = Zero
            }
        }

        If (((Local2 == Zero) && (Local3 == Zero)))
        {
            If ((Arg0 == One))
            {
                SMB2 = Local6
            }

            M012 ((M084 + 0x0300), 0x02, Zero, 0x08, Local5)
            Release (M408)
            Return (Zero)
        }

        Local3 = 0x03
        While ((Local3 > Zero))
        {
            SMB0 = 0x1F
            SMB4 = ((Arg1 << One) | One)
            SMB3 = Arg2
            SMB2 = 0x08
            Local1 = SMB2 /* \M409.SMB2 */
            SMB2 = (0x08 | 0x40)
            Local1 = One
            Local4 = 0x03E8
            While (((Local4 > Zero) && ((Local1 & 0x0E) == Zero)))
            {
                Local2 = 0x03E8
                While (((Local2 > Zero) && ((Local1 & One) != Zero)))
                {
                    Local2 = (Local2 - One)
                    Stall (0x05)
                    Local1 = SMB0 /* \M409.SMB0 */
                }

                If ((Local2 == Zero))
                {
                    SMB2 = 0x02
                    If ((Arg0 == One))
                    {
                        SMB2 = Local6
                    }

                    M012 ((M084 + 0x0300), 0x02, Zero, 0x08, Local5)
                    Release (M408)
                    Return (Zero)
                }

                Local4 = (Local4 - One)
                Stall (0x05)
                Local1 = SMB0 /* \M409.SMB0 */
            }

            If (((Local1 & 0x04) != Zero))
            {
                Local3 = Zero
                Local4 = Zero
            }
            ElseIf (((Local1 & 0x08) != Zero))
            {
                SMB0 = 0x08
                Local3 = (Local3 - One)
                Local4 = Zero
            }
            Else
            {
                Local3 = Zero
                Local4 = SMB5 /* \M409.SMB5 */
            }
        }

        SMB0 = 0x1F
        SMB8 |= 0x20
        If ((Arg0 == One))
        {
            SMB2 = Local6
        }

        M012 ((M084 + 0x0300), 0x02, Zero, 0x08, Local5)
        Release (M408)
        Return (Local4)
    }

    Method (M410, 4, Serialized)
    {
        Acquire (M408, 0xFFFF)
        Local0 = (M414 + (Arg0 << 0x05))
        OperationRegion (VARM, SystemIO, Local0, 0x09)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            SMB0,   8, 
            SMB1,   8, 
            SMB2,   8, 
            SMB3,   8, 
            SMB4,   8, 
            SMB5,   8, 
            SMB6,   8, 
            SMB7,   8, 
            SMB8,   8
        }

        Local5 = M011 ((M084 + 0x0300), 0x02, Zero, 0x08)
        M012 ((M084 + 0x0300), 0x02, Zero, 0x08, (Local5 | One))
        If ((Arg0 == One))
        {
            Local6 = SMB2 /* \M410.SMB2 */
            SMB2 = (Local6 & 0x7F)
        }

        Local1 = Zero
        Local2 = 0x64
        While (((Local2 > Zero) && ((Local1 & 0x10) != 0x10)))
        {
            SMB8 |= 0x10
            Local2 = (Local2 - One)
            Stall (0x05)
            Local1 = SMB8 /* \M410.SMB8 */
        }

        Local3 = 0x03
        While ((Local3 > Zero))
        {
            Local1 = One
            Local2 = 0x64
            While (((Local2 > Zero) && ((Local1 & One) != Zero)))
            {
                SMB0 = 0x1F
                Local2 = (Local2 - One)
                Stall (0x05)
                Local1 = SMB0 /* \M410.SMB0 */
            }

            If ((Local2 == Zero))
            {
                SMB2 = 0x02
                Local3 = (Local3 - One)
            }
            Else
            {
                Local3 = Zero
            }
        }

        If (((Local2 == Zero) && (Local3 == Zero)))
        {
            If ((Arg0 == One))
            {
                SMB2 = Local6
            }

            M012 ((M084 + 0x0300), 0x02, Zero, 0x08, Local5)
            Release (M408)
            Return (Zero)
        }

        Local3 = 0x03
        While ((Local3 > Zero))
        {
            Local1 = One
            Local2 = 0x64
            While (((Local2 > Zero) && ((Local1 & One) != Zero)))
            {
                SMB1 = 0x3F
                Local2 = (Local2 - One)
                Stall (0x05)
                Local1 = SMB1 /* \M410.SMB1 */
            }

            If ((Local2 == Zero))
            {
                SMB1 = 0x02
                Local3 = (Local3 - One)
            }
            Else
            {
                Local3 = Zero
            }
        }

        If (((Local2 == Zero) && (Local3 == Zero)))
        {
            If ((Arg0 == One))
            {
                SMB2 = Local6
            }

            M012 ((M084 + 0x0300), 0x02, Zero, 0x08, Local5)
            Release (M408)
            Return (Zero)
        }

        Local3 = 0x03
        While ((Local3 > Zero))
        {
            SMB0 = 0x1F
            SMB4 = (Arg1 << One)
            SMB3 = Arg2
            SMB2 = 0x08
            Local1 = SMB2 /* \M410.SMB2 */
            SMB5 = Arg3
            SMB2 = (0x08 | 0x40)
            Local1 = One
            Local4 = 0x03E8
            While (((Local4 > Zero) && ((Local1 & 0x0E) == Zero)))
            {
                Local2 = 0x03E8
                While (((Local2 > Zero) && ((Local1 & One) != Zero)))
                {
                    Local2 = (Local2 - One)
                    Stall (0x05)
                    Local1 = SMB0 /* \M410.SMB0 */
                }

                If ((Local2 == Zero))
                {
                    SMB2 = 0x02
                    If ((Arg0 == One))
                    {
                        SMB2 = Local6
                    }

                    M012 ((M084 + 0x0300), 0x02, Zero, 0x08, Local5)
                    Release (M408)
                    Return (Zero)
                }

                Local4 = (Local4 - One)
                Stall (0x05)
                Local1 = SMB0 /* \M410.SMB0 */
            }

            If (((Local1 & 0x04) != Zero))
            {
                Local3 = Zero
                Local4 = Zero
            }
            ElseIf (((Local1 & 0x08) != Zero))
            {
                SMB0 = 0x08
                Local3 = (Local3 - One)
                Local4 = Zero
            }
            Else
            {
                Local3 = Zero
                Local4 = Zero
            }
        }

        SMB0 = 0x1F
        SMB8 |= 0x20
        If ((Arg0 == One))
        {
            SMB2 = Local6
        }

        M012 ((M084 + 0x0300), 0x02, Zero, 0x08, Local5)
        Release (M408)
        Return (Local4)
    }

    Method (MPTS, 1, NotSerialized)
    {
        Local0 = M049 (M128, 0x67)
        If (((Local0 & 0x03) == 0x03))
        {
            If ((M085 >= 0x08))
            {
                If (CondRefOf (\_SB.PCXX.GPXX.SAXX.TPTS))
                {
                    \_SB.PCXX.GPXX.SAXX.TPTS (Arg0)
                }

                If (CondRefOf (\_SB.PCI0.PTBR.PTST.TPTS))
                {
                    \_SB.PCI0.PTBR.PTST.TPTS (Arg0)
                }
            }
            ElseIf (CondRefOf (\_SB.PCXX.SAXX.TPTS))
            {
                \_SB.PCXX.SAXX.TPTS (Arg0)
            }
        }

        If ((M226 != Zero))
        {
            If (CondRefOf (\_SB.M263))
            {
                \_SB.M263 (Arg0)
            }
        }

        If ((M331 != Zero))
        {
            Local0 = M049 (M331, 0x10)
            Local1 = M049 (M331, 0x1D)
            If (((Local0 != Zero) && (Local1 != Zero)))
            {
                If (CondRefOf (\_SB.IPTS))
                {
                    \_SB.IPTS (Arg0)
                }
            }
        }
    }

    Method (MWAK, 1, NotSerialized)
    {
        Local0 = M049 (M128, 0x67)
        If (((Local0 & 0x03) == 0x03))
        {
            If ((M085 >= 0x08))
            {
                If (CondRefOf (\_SB.PCXX.GPXX.SAXX.TWAK))
                {
                    \_SB.PCXX.GPXX.SAXX.TWAK (Arg0)
                }

                If (CondRefOf (\_SB.PCI0.PTBR.PTST.TWAK))
                {
                    \_SB.PCI0.PTBR.PTST.TWAK (Arg0)
                }
            }
            ElseIf (CondRefOf (\_SB.PCXX.SAXX.TWAK))
            {
                \_SB.PCXX.SAXX.TWAK (Arg0)
            }
        }

        If ((M226 != Zero))
        {
            If (CondRefOf (\_SB.M264))
            {
                \_SB.M264 (Arg0)
            }
        }

        If ((M280 != Zero))
        {
            If (CondRefOf (\_SB.M284))
            {
                \_SB.M284 (Arg0)
            }
        }

        If ((M331 != Zero))
        {
            Local0 = M049 (M331, 0x10)
            Local1 = M049 (M331, 0x1D)
            If (((Local0 != Zero) && (Local1 != Zero)))
            {
                If (CondRefOf (\_SB.IWAK))
                {
                    \_SB.IWAK (Arg0)
                }
            }
        }
    }

    Scope (\_SB.GPIO)
    {
        Method (XINI, 0, NotSerialized)
        {
            If ((\_GPE.M420 != 0xFF))
            {
                Local0 = (\_GPE.M415 & One)
                Local1 = (\_GPE.M416 & 0x07)
                Local1 += \_GPE.M411
                \_GPE.M419 = M409 (Local0, Local1, Zero)
            }
        }
    }

    Scope (\_GPE)
    {
        Name (M411, 0x20)
        Name (M415, One)
        Name (M416, 0x04)
        Name (M417, 0x40)
        Name (M418, 0x40)
        Name (M419, 0xFF)
        Name (M420, 0xFF)
        Method (XL0A, 0, NotSerialized)
        {
            Local0 = (\_GPE.M415 & One)
            Local1 = (\_GPE.M416 & 0x07)
            Local1 += \_GPE.M411
            Local2 = \_GPE.M419
            Local3 = M409 (Local0, Local1, Zero)
            \_GPE.M419 = Local3
            Local3 ^= Local2
            Local3 |= \_GPE.M418
            Local3 &= \_GPE.M417
            If (((Local3 & One) == One))
            {
                If (CondRefOf (\_GPE.SP00))
                {
                    \_GPE.SP00 ()
                }
            }

            If (((Local3 & 0x02) == 0x02))
            {
                If (CondRefOf (\_GPE.SP01))
                {
                    \_GPE.SP01 ()
                }
            }

            If (((Local3 & 0x04) == 0x04))
            {
                If (CondRefOf (\_GPE.SP02))
                {
                    \_GPE.SP02 ()
                }
            }

            If (((Local3 & 0x08) == 0x08))
            {
                If (CondRefOf (\_GPE.SP03))
                {
                    \_GPE.SP03 ()
                }
            }

            If (((Local3 & 0x10) == 0x10))
            {
                If (CondRefOf (\_GPE.SP04))
                {
                    \_GPE.SP04 ()
                }
            }

            If (((Local3 & 0x20) == 0x20))
            {
                If (CondRefOf (\_GPE.SP05))
                {
                    \_GPE.SP05 ()
                }
            }

            If (((Local3 & 0x40) == 0x40))
            {
                If (CondRefOf (\_GPE.SP06))
                {
                    \_GPE.SP06 ()
                }
            }

            If (((Local3 & 0x80) == 0x80))
            {
                If (CondRefOf (\_GPE.SP07))
                {
                    \_GPE.SP07 ()
                }
            }
        }

        Method (XL0B, 0, NotSerialized)
        {
            Local0 = M049 (M128, 0x91)
            If (((Local0 & 0xC0) == 0xC0))
            {
                Local3 = Buffer (0x08) {}
                CreateWordField (Local3, Zero, M254)
                CreateByteField (Local3, 0x02, M255)
                CreateDWordField (Local3, 0x03, M256)
                M256 = Zero
                M254 = 0x07
                M255 = 0x30
                Local3 = \_SB.ALIB (0x0C)
                Local4
                If (CondRefOf (\_SB.APAD))
                {
                    \_SB.APAD.M446 [One] = Local4
                    Notify (\_SB.APAD, 0x80) // Status Change
                }
            }
        }
    }

    Scope (\_SB)
    {
        Device (APAD)
        {
            Name (_HID, "ACPI000C" /* Processor Aggregator Device */)  // _HID: Hardware ID
            Name (M446, Package (0x02)
            {
                One, 
                Zero
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (\_OSI ("Processor Aggregator Device"))
                {
                    Local0 = M049 (M128, 0x91)
                    If (((Local0 & 0x80) == 0x80))
                    {
                        Return (0x0F)
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (_PUR, 0, NotSerialized)  // _PUR: Processor Utilization Request
            {
                Return (M446) /* \_SB_.APAD.M446 */
            }
        }
    }
}



SSDT7
-----
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00001000)
{
    External (_SB_.PCI0, DeviceObj)

    Scope (\_SB.PCI0)
    {
        Device (AEVD)
        {
            Name (_HID, "1025165F")  // _HID: Hardware ID
            Name (_SUB, "10031025")  // _SUB: Subsystem ID
        }
    }
}



SSDT8
-----
DefinitionBlock ("", "SSDT", 1, "ACRSYS", "ACRPRDCT", 0x00000001)
{
    /*
     * iASL Warning: There were 33 external control methods found during
     * disassembly, but only 0 were resolved (33 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.ALIB, IntObj)
    External (_SB_.PCI0.GP17.VGA_, DeviceObj)
    External (_SB_.PCI0.GP17.VGA_.AFN0, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GP17.VGA_.AFN1, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GP17.VGA_.AFN2, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GP17.VGA_.AFN3, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GP17.VGA_.AFN4, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GP17.VGA_.AFN5, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GP17.VGA_.AFN6, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GP17.VGA_.AFN7, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GP17.VGA_.AFN8, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GP17.VGA_.AFNC, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN0, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN1, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN2, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN3, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN4, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN5, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN6, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN7, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN8, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFNC, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN0, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN1, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN2, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN3, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN4, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN5, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN6, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN7, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN8, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFNC, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M049, IntObj)
    External (M087, UnknownObj)
    External (M100, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M105, IntObj)
    External (M106, IntObj)
    External (M113, IntObj)
    External (M133, UnknownObj)
    External (M232, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M233, IntObj)
    External (M235, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M378, IntObj)
    External (M379, IntObj)
    External (M380, IntObj)
    External (M381, IntObj)
    External (M382, IntObj)
    External (M383, IntObj)
    External (M384, IntObj)
    External (M385, IntObj)
    External (M386, IntObj)
    External (M387, IntObj)
    External (M388, IntObj)
    External (M389, IntObj)
    External (M390, IntObj)
    External (M391, IntObj)
    External (M392, IntObj)
    External (M444, IntObj)

    Scope (\_SB.PCI0.GP17.VGA)
    {
        Name (M207, Buffer (0xFF) {})
        Name (M208, Buffer (0x03) {})
        Name (M204, One)
        Method (ATCS, 2, Serialized)
        {
            If ((Arg0 == Zero))
            {
                ATC0 ()
            }

            If ((Arg0 == One))
            {
                ATC1 ()
            }

            If ((Arg0 == 0x02))
            {
                ATC2 (Arg1)
            }

            If ((Arg0 == 0x03))
            {
                ATC3 ()
            }

            If ((Arg0 == 0x04))
            {
                ATC4 (Arg1)
            }

            If ((Arg0 == 0x06))
            {
                ATC6 (Arg1)
            }

            If ((Arg0 == 0x07))
            {
                ATC7 (Arg1)
            }

            If ((Arg0 == 0x08))
            {
                ATC8 (DerefOf (Arg1 [0x02]), DerefOf (Arg1 [0x03]), DerefOf (
                    Arg1 [0x04]), DerefOf (Arg1 [0x05]))
            }

            If ((Arg0 == 0x09))
            {
                ATC9 ()
            }

            Return (M207) /* \_SB_.PCI0.GP17.VGA_.M207 */
        }

        Method (ATC0, 0, NotSerialized)
        {
            CreateWordField (M207, Zero, M157)
            CreateWordField (M207, 0x02, M158)
            CreateDWordField (M207, 0x04, M160)
            M157 = 0x08
            M158 = One
            M207 = M100 (M160,  = \_SB.ALIB /* External reference */)
            M207
        }

        Method (ATC1, 0, Serialized)
        {
            CreateWordField (M207, Zero, M157)
            CreateDWordField (M207, 0x02, M161)
            CreateDWordField (M207, 0x06, M162)
            CreateField (M207, 0x30, One, M203)
            M157 = 0x0A
            M161 = One
            0x15 = M100 (M162, M133 = M049 /* External reference */)
            Local0
            If ((Local0 & 0x80))
            {
                M204 = (Local0 & One)
            }
            ElseIf ((Local0 & 0x7F))
            {
                Local0 = M113 /* External reference */
                M204
            }

            M203 = M204 /* \_SB_.PCI0.GP17.VGA_.M204 */
        }

        Method (ATC2, 1, Serialized)
        {
            CreateWordField (M207, Zero, M157)
            CreateByteField (M207, 0x02, M205)
            M157 = 0x03
            M205 = One
            0x02 = \_SB.ALIB /* External reference */
            Arg0
            M207
        }

        Method (ATC3, 0, Serialized)
        {
            CreateWordField (M207, Zero, M157)
            CreateByteField (M207, 0x02, M205)
            CreateWordField (M208, Zero, M197)
            CreateByteField (M208, 0x02, M206)
            M157 = 0x03
            M205 = One
            M197 = 0x03
            M206 = One
            0x03 = \_SB.ALIB /* External reference */
            M208
            M207
        }

        Method (ATC4, 1, Serialized)
        {
            CreateWordField (M207, Zero, M157)
            CreateByteField (M207, 0x02, M209)
            M157 = 0x03
            M209 = One
            0x04 = \_SB.ALIB /* External reference */
            Arg0
            M207
        }

        Method (ATC6, 1, Serialized)
        {
            CreateWordField (M207, Zero, M157)
            CreateDWordField (M207, 0x02, M234)
            M157 = 0x06
            M234 = M233 /* External reference */
        }

        Method (ATC7, 1, Serialized)
        {
            M232 (M235 (Zero, One))
        }

        Method (ATC8, 4, Serialized)
        {
            Local0 = Buffer (0x05) {}
            CreateWordField (Local0, Zero, M157)
            CreateByteField (Local0, 0x02, M425)
            CreateWordField (Local0, 0x03, M426)
            M157 = 0x05
            Local1 = Arg0
            Local2 = Arg1
            M426 = ((Local2 << 0x08) + Local1)
            Local3 = Arg2
            Local4 = Arg3
            If (((Local3 == Zero) && (Local4 == Zero)))
            {
                M425 = One
                \_SB.ALIB
                0xAA
                Local0
            }
            ElseIf (((Local3 == Zero) && (Local4 == One)))
            {
                M425 = Zero
                \_SB.ALIB
                0xAA
                Local0
            }
            ElseIf (((Local3 == 0x03) && (Local4 == One)))
            {
                M425 = 0x03
                \_SB.ALIB
                0xAA
                Local0
            }
        }

        Method (ATC9, 0, Serialized)
        {
            M207 = M444 /* External reference */
        }

        Method (XTRM, 2, Serialized)
        {
            If ((M105 == Zero))
            {
                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }

            Local4 = M105 /* External reference */
            If ((Local4 > 0x00010000))
            {
                Local4 = 0x00010000
            }

            Local5 = Arg0
            Local6 = Arg1
            If ((Local6 > 0x1000))
            {
                Local6 = 0x1000
            }

            If ((Local5 >= Local4))
            {
                Return (Buffer (Local6)
                {
                     0x00                                             // .
                })
            }

            If ((((Local5 & 0x0FFF) + Local6) > 0x1000))
            {
                Local6 = (0x1000 - (Local5 & 0x0FFF))
            }

            Name (M202, Buffer (0x1000)
            {
                 0x00                                             // .
            })
            If (((Local5 & 0xF000) == Zero))
            {
                M202 = M106 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x1000))
            {
                M202 = M378 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x2000))
            {
                M202 = M379 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x3000))
            {
                M202 = M380 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x4000))
            {
                M202 = M381 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x5000))
            {
                M202 = M382 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x6000))
            {
                M202 = M383 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x7000))
            {
                M202 = M384 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x8000))
            {
                M202 = M385 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x9000))
            {
                M202 = M386 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0xA000))
            {
                M202 = M387 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0xB000))
            {
                M202 = M388 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0xC000))
            {
                M202 = M389 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0xD000))
            {
                M202 = M390 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0xE000))
            {
                M202 = M391 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0xF000))
            {
                M202 = M392 /* External reference */
            }

            If (((Local5 + Local6) <= Local4))
            {
                If ((Local6 == 0x1000))
                {
                    Return (M202) /* \_SB_.PCI0.GP17.VGA_.XTRM.M202 */
                }
            }
            Else
            {
                Local6 = (Local4 - Local5)
            }

            Name (M393, Buffer (Local6)
            {
                 0x00                                             // .
            })
            CreateField (M202, ((Local5 & 0x0FFF) * 0x08), (Local6 * 0x08
                ), M394)
            M393 = M394 /* \_SB_.PCI0.GP17.VGA_.XTRM.M394 */
            Return (M393) /* \_SB_.PCI0.GP17.VGA_.XTRM.M393 */
        }
    }

    Method (AFN0, 0, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN0))
            {
                \_SB.PCI0.GP17.VGA.AFN0 ()
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN0))
            {
                \_SB.PCI0.GPP0.VGA.AFN0 ()
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN0))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN0 ()
            }
        }
    }

    Method (AFN1, 1, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN1))
            {
                \_SB.PCI0.GP17.VGA.AFN1 (Arg0)
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN1))
            {
                \_SB.PCI0.GPP0.VGA.AFN1 (Arg0)
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN1))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN1 (Arg0)
            }
        }
    }

    Method (AFN2, 2, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN2))
            {
                \_SB.PCI0.GP17.VGA.AFN2 (Arg0, Arg1)
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN2))
            {
                \_SB.PCI0.GPP0.VGA.AFN2 (Arg0, Arg1)
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN2))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN2 (Arg0, Arg1)
            }
        }
    }

    Method (AFN3, 2, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN3))
            {
                \_SB.PCI0.GP17.VGA.AFN3 (Arg0, Arg1)
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN3))
            {
                \_SB.PCI0.GPP0.VGA.AFN3 (Arg0, Arg1)
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN3))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN3 (Arg0, Arg1)
            }
        }
    }

    Method (AFN4, 1, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN4))
            {
                \_SB.PCI0.GP17.VGA.AFN4 (Arg0)
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN4))
            {
                \_SB.PCI0.GPP0.VGA.AFN4 (Arg0)
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN4))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN4 (Arg0)
            }
        }
    }

    Method (AFN5, 0, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN5))
            {
                \_SB.PCI0.GP17.VGA.AFN5 ()
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN5))
            {
                \_SB.PCI0.GPP0.VGA.AFN5 ()
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN5))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN5 ()
            }
        }
    }

    Method (AFN6, 0, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN6))
            {
                \_SB.PCI0.GP17.VGA.AFN6 ()
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN6))
            {
                \_SB.PCI0.GPP0.VGA.AFN6 ()
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN6))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN6 ()
            }
        }
    }

    Method (AFN7, 1, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN7))
            {
                \_SB.PCI0.GP17.VGA.AFN7 (Arg0)
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN7))
            {
                \_SB.PCI0.GPP0.VGA.AFN7 (Arg0)
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN7))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN7 (Arg0)
            }
        }
    }

    Method (AFN8, 0, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN8))
            {
                \_SB.PCI0.GP17.VGA.AFN8 ()
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN8))
            {
                \_SB.PCI0.GPP0.VGA.AFN8 ()
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN8))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN8 ()
            }
        }
    }

    Method (AFNC, 2, Serialized)
    {
        If ((M087 == Zero))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFNC))
            {
                \_SB.PCI0.GP17.VGA.AFNC (Arg0, Arg1)
            }
        }

        If ((M087 == One))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFNC))
            {
                \_SB.PCI0.GPP0.VGA.AFNC (Arg0, Arg1)
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFNC))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFNC (Arg0, Arg1)
            }
        }
    }
}



SSDT9
-----
DefinitionBlock ("", "SSDT", 2, "ACRSYS", "ACRPRDCT", 0x00001000)
{
    Scope (\_SB)
    {
        Device (TPM2)
        {
            Name (_HID, "MSFT0101" /* TPM 2.0 Security Device */)  // _HID: Hardware ID
            Name (_CID, "MSFT0101" /* TPM 2.0 Security Device */)  // _CID: Compatible ID
            Name (_STR, Unicode ("TPM 2.0 Device"))  // _STR: Description String
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                Memory32Fixed (ReadWrite,
                    0xCBCCD000,         // Address Base
                    0x00004000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xCBCD1000,         // Address Base
                    0x00004000,         // Address Length
                    )
            })
            OperationRegion (SMIP, SystemIO, 0xB0, One)
            Field (SMIP, ByteAcc, NoLock, Preserve)
            {
                IOB2,   8
            }

            OperationRegion (TNVS, SystemMemory, 0xCCEF7000, 0x2B)
            Field (TNVS, AnyAcc, NoLock, Preserve)
            {
                PPIN,   8, 
                PPIP,   32, 
                PPRP,   32, 
                PPRQ,   32, 
                PPRM,   32, 
                LPPR,   32, 
                FRET,   32, 
                MCIN,   8, 
                MCIP,   32, 
                MORD,   32, 
                MRET,   32, 
                CAIN,   8, 
                UCRQ,   32
            }

            OperationRegion (CONA, SystemMemory, 0xCCEF702B, 0x30)
            Field (CONA, DWordAcc, NoLock, Preserve)
            {
                HRTB,   32, 
                ERRR,   32, 
                CLFG,   32, 
                STA1,   32, 
                AccessAs (QWordAcc, 0x00), 
                INTC,   64, 
                AccessAs (DWordAcc, 0x00), 
                CMSZ,   32, 
                AccessAs (QWordAcc, 0x00), 
                CMDB,   64, 
                AccessAs (DWordAcc, 0x00), 
                RPSZ,   32, 
                AccessAs (QWordAcc, 0x00), 
                RESP,   64
            }

            Method (PTS, 1, Serialized)
            {
                If (((Arg0 < 0x06) && (Arg0 > 0x03)))
                {
                    If (!(MORD & 0x10))
                    {
                        MCIP = 0x02
                        IOB2 = MCIN /* \_SB_.TPM2.MCIN */
                    }
                }

                Return (Zero)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Method (HINF, 1, Serialized)
            {
                Switch (ToInteger (Arg0))
                {
                    Case (Zero)
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Case (One)
                    {
                        Name (TPMV, Package (0x02)
                        {
                            One, 
                            Package (0x02)
                            {
                                0x02, 
                                Zero
                            }
                        })
                        If ((_STA () == Zero))
                        {
                            Return (Package (0x01)
                            {
                                Zero
                            })
                        }

                        Return (TPMV) /* \_SB_.TPM2.HINF.TPMV */
                    }
                    Default
                    {
                        BreakPoint
                    }

                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }

            Name (TPM2, Package (0x02)
            {
                Zero, 
                Zero
            })
            Name (TPM3, Package (0x03)
            {
                Zero, 
                Zero, 
                Zero
            })
            Method (TPPI, 2, Serialized)
            {
                Switch (ToInteger (Arg0))
                {
                    Case (Zero)
                    {
                        Return (Buffer (0x02)
                        {
                             0xFF, 0x01                                       // ..
                        })
                    }
                    Case (One)
                    {
                        Return ("1.3")
                    }
                    Case (0x02)
                    {
                        PPRQ = DerefOf (Arg1 [Zero])
                        PPRM = Zero
                        PPIP = 0x02
                        IOB2 = PPIN /* \_SB_.TPM2.PPIN */
                        Return (FRET) /* \_SB_.TPM2.FRET */
                    }
                    Case (0x03)
                    {
                        TPM2 [One] = PPRQ /* \_SB_.TPM2.PPRQ */
                        Return (TPM2) /* \_SB_.TPM2.TPM2 */
                    }
                    Case (0x04)
                    {
                        Return (0x02)
                    }
                    Case (0x05)
                    {
                        PPIP = 0x05
                        IOB2 = PPIN /* \_SB_.TPM2.PPIN */
                        TPM3 [One] = LPPR /* \_SB_.TPM2.LPPR */
                        TPM3 [0x02] = PPRP /* \_SB_.TPM2.PPRP */
                        Return (TPM3) /* \_SB_.TPM2.TPM3 */
                    }
                    Case (0x06)
                    {
                        Return (0x03)
                    }
                    Case (0x07)
                    {
                        PPIP = 0x07
                        PPRQ = DerefOf (Arg1 [Zero])
                        PPRM = Zero
                        If ((PPRQ == 0x17))
                        {
                            PPRM = DerefOf (Arg1 [One])
                        }

                        IOB2 = PPIN /* \_SB_.TPM2.PPIN */
                        Return (FRET) /* \_SB_.TPM2.FRET */
                    }
                    Case (0x08)
                    {
                        PPIP = 0x08
                        UCRQ = DerefOf (Arg1 [Zero])
                        IOB2 = PPIN /* \_SB_.TPM2.PPIN */
                        Return (FRET) /* \_SB_.TPM2.FRET */
                    }
                    Default
                    {
                        BreakPoint
                    }

                }

                Return (One)
            }

            Method (TMCI, 2, Serialized)
            {
                Switch (ToInteger (Arg0))
                {
                    Case (Zero)
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Case (One)
                    {
                        MORD = DerefOf (Arg1 [Zero])
                        MCIP = One
                        IOB2 = MCIN /* \_SB_.TPM2.MCIN */
                        Return (MRET) /* \_SB_.TPM2.MRET */
                    }
                    Default
                    {
                        BreakPoint
                    }

                }

                Return (One)
            }

            Method (OASM, 1, Serialized)
            {
                Switch (ToInteger (Arg0))
                {
                    Case (Zero)
                    {
                        Return (Buffer (One)
                        {
                             0x03                                             // .
                        })
                    }
                    Case (One)
                    {
                        Return (Zero)
                    }
                    Default
                    {
                        BreakPoint
                    }

                }

                Return (One)
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("cf8e16a5-c1e8-4e25-b712-4f54a96702c8") /* Unknown UUID */))
                {
                    Return (HINF (Arg2))
                }

                If ((Arg0 == ToUUID ("3dddfaa6-361b-4eb4-a424-8d10089d1653") /* Physical Presence Interface */))
                {
                    Return (TPPI (Arg2, Arg3))
                }

                If ((Arg0 == ToUUID ("376054ed-cc13-4675-901c-4756d7f2d45d") /* Unknown UUID */))
                {
                    Return (TMCI (Arg2, Arg3))
                }

                If ((Arg0 == ToUUID ("6bbf6cab-5463-4714-b7cd-f0203c0368d4") /* Unknown UUID */))
                {
                    Return (OASM (Arg2))
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }
    }
}



TPM2
----
[000h 0000   4]                    Signature : "TPM2"    [Trusted Platform Module hardware interface Table]
[004h 0004   4]                 Table Length : 0000004C
[008h 0008   1]                     Revision : 04
[009h 0009   1]                     Checksum : F0
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   2]               Platform Class : 0000
[026h 0038   2]                     Reserved : 0000
[028h 0040   8]              Control Address : 00000000FDE10510
[030h 0048   4]                 Start Method : 02 [ACPI Start Method]

[034h 0052  12]            Method Parameters : 00 00 00 00 00 00 00 00 00 00 00 00
[040h 0064   4]           Minimum Log Length : 00010000
[044h 0068   8]                  Log Address : 00000000B55CA000

Raw Table Data: Length 76 (0x4C)

    0000: 54 50 4D 32 4C 00 00 00 04 F0 41 43 52 53 59 53  // TPM2L.....ACRSYS
    0010: 41 43 52 50 52 44 43 54 02 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 00 00 00 00 10 05 E1 FD 00 00 00 00  // ................
    0030: 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0040: 00 00 01 00 00 A0 5C B5 00 00 00 00              // ......\.....


UEFI
----
[000h 0000   4]                    Signature : "UEFI"    [UEFI Boot Optimization Table]
[004h 0004   4]                 Table Length : 00000236
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : A3
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036  16]              UUID Identifier : 9D4BF935-A674-4710-BA02-BF0AA1758C7B
[034h 0052   2]                  Data Offset : 0036

Raw Table Data: Length 566 (0x236)

    0000: 55 45 46 49 36 02 00 00 01 A3 41 43 52 53 59 53  // UEFI6.....ACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 35 F9 4B 9D 74 A6 10 47 BA 02 BF 0A  // ....5.K.t..G....
    0030: A1 75 8C 7B 36 00 24 42 56 44 54 24 00 00 00 24  // .u.{6.$BVDT$...$
    0040: 00 00 00 24 56 31 2E 35 32 00 00 00 00 00 00 00  // ...$V1.52.......
    0050: 00 00 00 00 00 00 00 00 00 00 00 00 24 5A 41 55  // ............$ZAU
    0060: 4C 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // L...............
    0070: 00 00 00 00 00 00 24 30 35 2E 34 32 2E 33 37 00  // ......$05.42.37.
    0080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0090: 00 00 00 00 00 00 00 00 00 00 00 00 FF FF FF FF  // ................
    00A0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    00B0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    00C0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    00D0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    00E0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    00F0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0100: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0110: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0120: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0130: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0140: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0150: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0160: FF FF FF FF FF 24 42 4D 45 24 00 90 EA 00 00 10  // .....$BME$......
    0170: 00 00 24 00 00 00 01 00 00 00 00 24 00 FF FF FF  // ..$........$....
    0180: FF FF FF FF FF 24 5F 4D 53 43 5F 56 45 52 3D 40  // .....$_MSC_VER=@
    0190: 06 24 52 44 41 54 45 23 10 24 24 45 53 52 54 52  // .$RDATE#.$$ESRTR
    01A0: 41 37 60 62 92 B9 12 8C 64 65 43 BA FD EB 86 9F  // A7`b....deC.....
    01B0: B7 15 2B 8B 01 00 00 24 45 4E 44 4F 46 42 56 44  // ..+....$ENDOFBVD
    01C0: 54 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // T...............
    01D0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    01E0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    01F0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0200: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0210: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0220: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    0230: FF FF FF FF FF FF                                // ......


VFCT
----
[000h 0000   4]                    Signature : "VFCT"    
[004h 0004   4]                 Table Length : 0000D884
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 53
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000


**** Unknown ACPI table signature [VFCT]


Raw Table Data: Length 55428 (0xD884)

    0000: 56 46 43 54 84 D8 00 00 01 53 41 43 52 53 59 53  // VFCT.....SACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 32 9B A3 5D BD C6 CF 49 95 A6 E8 E4  // ....2..]...I....
    0030: 2E CD 79 A7 4C 00 00 00 00 00 00 00 00 00 00 00  // ..y.L...........
    0040: 00 00 00 00 00 00 00 00 00 00 00 00 05 00 00 00  // ................
    0050: 00 00 00 00 00 00 00 00 02 10 4C 16 00 00 00 00  // ..........L.....
    0060: 01 00 00 00 00 D8 00 00 55 AA 6C E9 03 02 00 00  // ........U.l.....
    0070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0080: B4 01 00 00 00 00 49 42 4D 15 8A 90 00 00 00 00  // ......IBM.......
    0090: 00 00 00 00 00 00 00 04 20 37 36 31 32 39 35 35  // ........ 7612955
    00A0: 32 30 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // 20..............
    00B0: 8A 01 00 00 00 00 00 00 30 39 2F 31 31 2F 32 30  // ........09/11/20
    00C0: 2C 30 34 3A 35 35 3A 35 36 00 00 00 E9 33 03 00  // ,04:55:56....3..
    00D0: E9 3D 03 00 00 00 70 00 31 31 33 2D 4C 55 43 49  // .=....p.113-LUCI
    00E0: 45 4E 4E 45 2D 30 31 34 00 52 45 4E 4F 49 52 00  // ENNE-014.RENOIR.
    00F0: 50 43 49 5F 45 58 50 52 45 53 53 00 30 00 0D 0A  // PCI_EXPRESS.0...
    0100: 4C 75 63 69 65 6E 6E 65 20 47 65 6E 65 72 69 63  // Lucienne Generic
    0110: 20 56 42 49 4F 53 20 20 20 20 20 20 20 20 20 20  //  VBIOS          
    0120: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20  //                 
    0130: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20  //                 
    0140: 20 20 20 20 20 20 20 20 20 20 20 20 0D 0A 00 0D  //             ....
    0150: 0A 20 0D 0A 00 28 43 29 20 31 39 38 38 2D 32 30  // . ...(C) 1988-20
    0160: 31 38 2C 20 41 64 76 61 6E 63 65 64 20 4D 69 63  // 18, Advanced Mic
    0170: 72 6F 20 44 65 76 69 63 65 73 2C 20 49 6E 63 2E  // ro Devices, Inc.
    0180: 00 41 54 4F 4D 42 49 4F 53 42 4B 2D 41 4D 44 20  // .ATOMBIOSBK-AMD 
    0190: 56 45 52 30 31 37 2E 30 31 30 2E 30 30 30 2E 30  // VER017.010.000.0
    01A0: 32 37 2E 30 30 30 30 30 30 00 4C 43 4E 47 65 6E  // 27.000000.LCNGen
    01B0: 65 72 69 63 56 62 00 32 31 37 30 33 37 37 20 00  // ericVb.2170377 .
    01C0: 35 33 31 35 32 39 20 20 00 20 20 20 20 20 20 20  // 531529  .       
    01D0: 20 00 41 4D 44 5F 4C 55 43 49 45 4E 4E 45 5F 47  //  .AMD_LUCIENNE_G
    01E0: 45 4E 45 52 49 43 5C 63 6F 6E 66 69 67 2E 68 00  // ENERIC\config.h.
    01F0: 00 00 28 00 02 02 41 54 4F 4D 00 C0 06 03 42 01  // ..(...ATOM....B.
    0200: D9 01 96 00 78 03 00 00 00 00 02 10 02 10 B4 01  // ....x...........
    0210: D6 93 7C 94 00 00 00 00 00 00 00 00 50 43 49 52  // ..|.........PCIR
    0220: 02 10 4C 16 00 00 18 00 00 00 00 03 6C 00 0A 11  // ..L.........l...
    0230: 00 80 00 00 41 4D 44 20 41 54 4F 4D 42 49 4F 53  // ....AMD ATOMBIOS
    0240: 00 9D 35 B0 5D 00 00 00 00 00 00 00 00 00 00 00  // ..5.]...........
    0250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0270: 00 1E 06 66 50 66 51 66 52 66 53 66 55 66 56 66  // ...fPfQfRfSfUfVf
    0280: 57 0E 1F A3 14 00 8C 0E 08 00 B2 20 E8 83 2F 0B  // W.......... ../.
    0290: C0 75 14 A2 02 00 66 5F 66 5E 66 5D 66 5B 66 5A  // .u....f_f^f]f[fZ
    02A0: 66 59 66 58 07 1F CB E8 9D 30 E8 F3 00 E8 6C 2E  // fYfX.....0....l.
    02B0: 32 D2 8D 3E 8A 01 89 55 16 E8 82 11 E8 45 11 E8  // 2..>...U.....E..
    02C0: 9C 12 E8 EC 02 E8 C7 28 0B C0 74 0C E8 39 00 E8  // .......(..t..9..
    02D0: 74 56 E8 41 11 E8 C3 56 E8 A9 00 B4 80 E8 66 2E  // tV.A...V......f.
    02E0: 8A C7 66 C1 E0 10 8A E3 B0 20 66 A3 8A 90 E8 EB  // ..f...... f.....
    02F0: 02 E8 54 11 E8 93 30 66 5F 66 5E 66 5D 66 5B 66  // ..T...0f_f^f]f[f
    0300: 5A 66 59 66 58 07 1F CB 2E 8B 1E 08 00 83 3E 18  // ZfYfX.........>.
    0310: 03 00 75 04 89 1E 16 03 1E 2E 8E 1E 0E 03 9C FA  // ..u.............
    0320: 66 C7 06 08 01 65 F0 00 F0 C7 06 40 00 78 03 89  // f....e.....@.x..
    0330: 1E 42 00 C7 06 B4 01 78 03 89 1E B6 01 C7 06 7C  // .B.....x.......|
    0340: 00 6C 5E 89 1E 7E 00 C7 06 0C 01 7F 62 89 1E 0E  // .l^..~......b...
    0350: 01 C7 06 A8 04 A4 58 89 1E AA 04 2E 8E 1E 16 03  // ......X.........
    0360: 8B C3 A3 A6 58 A3 B6 58 A3 C8 58 9D 1F C3 50 4D  // ....X..X..X...PM
    0370: 49 44 78 03 D6 48 00 00 00 A0 00 B0 00 B8 00 C0  // IDx..H..........
    0380: 00 00 00 00 BB 00 00 E8 A7 10 66 C1 E8 10 A3 BA  // ..........f.....
    0390: 01 BB 0B 00 E8 9A 10 8D 3E 8A 01 66 89 45 18 C3  // ........>..f.E..
    03A0: 66 50 66 52 51 56 66 B8 52 54 53 5F BA 80 00 66  // fPfRQVf.RTS_...f
    03B0: EF B0 56 EE B0 42 EE B0 49 EE B0 4F EE B0 53 EE  // ..V..B..I..O..S.
    03C0: B0 20 EE BE 28 01 B9 19 00 AC E6 80 E2 FB 66 B8  // . ..(.........f.
    03D0: 44 4E 45 5F BA 80 00 66 EF 5E 59 66 5A 66 58 C3  // DNE_...f.^YfZfX.
    03E0: E8 82 2F 80 FC A0 75 05 E8 3D 00 EB 11 80 FC 4F  // ../...u..=.....O
    03F0: 75 05 E8 6F 44 EB 07 E8 C4 49 EB 02 B4 01 E8 89  // u..oD....I......
    0400: 2F CF E8 60 2F E8 20 00 EB 02 B4 01 E8 7B 2F CB  // /..`/. ......{/.
    0410: E8 52 2F 80 FC 4F 75 05 E8 49 44 EB 07 E8 9E 49  // .R/..Ou..ID....I
    0420: EB 02 B4 01 E8 63 2F CB 1E 06 66 50 66 51 66 52  // .....c/...fPfQfR
    0430: 66 53 66 55 66 56 66 57 0E 1F 3C 04 75 29 2E A1  // fSfUfVfW..<.u)..
    0440: 1A 00 66 C1 E0 10 2E A1 18 00 8D 36 97 00 8A 3C  // ..f........6...<
    0450: 80 EF 30 B3 02 8B EC 89 5E 0C 89 46 04 66 C1 E8  // ..0.....^..F.f..
    0460: 10 89 46 00 E9 28 01 3C 05 75 18 E8 D8 2C E8 AB  // ..F..(.<.u...,..
    0470: 2C 2E A1 08 00 8B EC 89 56 10 89 46 00 89 5E 04  // ,.......V..F..^.
    0480: E9 0C 01 3C 06 75 32 E8 8F 0F 66 D1 E0 8B EC 89  // ...<.u2...f.....
    0490: 46 14 BB 02 00 E8 99 0F 88 46 18 E8 83 0F 66 89  // F........F....f.
    04A0: 46 0C BB 09 00 E8 89 0F 33 C0 66 89 46 00 2E 8B  // F.......3.f.F...
    04B0: 16 BA 01 89 56 10 E9 D6 00 3C 0B 75 24 0A DB 75  // ....V....<.u$..u
    04C0: 11 B9 80 00 BB 02 00 8B EC 89 5E 0C 89 4E 14 E9  // ..........^..N..
    04D0: BD 00 8A C7 E8 D0 00 E8 34 01 0F 84 A9 00 E9 AE  // ........4.......
    04E0: 00 3C 17 75 1D E8 38 12 74 06 E8 95 0D E8 20 17  // .<.u..8.t..... .
    04F0: E8 EE 09 E8 01 0F 33 C9 8B C8 8B EC 89 4E 14 E9  // ......3......N..
    0500: 8D 00 3C 18 75 45 0A FF 75 10 E8 BF 11 8B EC 89  // ..<.uE..u.......
    0510: 46 0C E8 3B 0A 89 4E 10 EB 75 E8 03 12 75 68 BB  // F..;..N..u...uh.
    0520: 00 1C E8 DE 2D 66 0B C0 74 5D 23 C9 74 59 E8 D7  // ....-f..t]#.tY..
    0530: 11 BE 00 1C E8 27 0F 74 4E BE 00 1C B0 40 E8 76  // .....'.tN....@.v
    0540: 0F E8 88 11 8B EC 89 46 0C EB 44 3C 82 75 1A 80  // .......F..D<.u..
    0550: FB 05 75 15 0A FF 75 0A E8 CC 10 8B EC 89 46 14  // ..u...u.......F.
    0560: EB 2D E8 99 10 74 18 EB 26 3C 8E 75 12 80 FF 01  // .-...t..&<.u....
    0570: 74 08 80 FF 02 75 08 80 C1 02 E8 F2 10 EB 10 8B  // t....u..........
    0580: EC C6 46 19 02 EB 0F 8B EC C6 46 19 01 EB 07 32  // ..F.......F....2
    0590: E4 8B EC 88 66 19 66 5F 66 5E 66 5D 66 5B 66 5A  // ....f.f_f^f]f[fZ
    05A0: 66 59 66 58 07 1F C3 51 8A C8 B8 01 00 D3 E0 59  // fYfX...Q.......Y
    05B0: C3 E8 FC 2D C3 0C 01 C3 50 51 B0 B6 E6 43 B0 33  // ...-....PQ...C.3
    05C0: E6 42 B0 05 E6 42 E4 61 8A E0 0C 03 E6 61 8A C4  // .B...B.a.....a..
    05D0: B9 C8 00 E8 0B 29 E6 61 59 58 C3 00 1E 56 0E 1F  // .....).aYX...V..
    05E0: 80 3E 02 00 80 76 05 C6 06 02 00 80 8A 0E 02 00  // .>...v..........
    05F0: C1 E1 09 FC C6 06 21 00 00 33 F6 32 E4 AC 02 E0  // ......!..3.2....
    0600: E2 FB F6 D4 FE C4 88 26 21 00 5E 1F C3 00 57 0B  // .......&!.^...W.
    0610: C0 75 0F E8 34 0C 74 25 E8 24 00 F6 C3 04 74 F3  // .u..4.t%.$....t.
    0620: EB 11 8B C8 E8 68 25 23 C1 74 12 E8 11 00 F6 C3  // .....h%#.t......
    0630: 04 74 0A 5F 8D 5C 28 E8 4C 06 0B F6 C3 5F C3 50  // .t._.\(.L...._.P
    0640: E8 E9 0B E8 BA 24 E8 C8 24 0A C9 74 69 0A ED 74  // .....$..$..ti..t
    0650: 10 8A CD B5 02 E8 0C 28 B1 02 8D 9C 48 01 E8 46  // .......(....H..F
    0660: 2C E8 76 02 F6 C3 04 74 08 E8 FC 0C E8 2B 23 74  // ,.v....t.....+#t
    0670: 45 8D 5C 28 E8 69 00 56 83 C6 08 E8 F7 22 5E 80  // E.\(.i.V....."^.
    0680: FD 02 75 11 51 E8 18 18 59 80 FB 00 75 4D 51 B5  // ..u.Q...Y...uMQ.
    0690: 08 E8 E8 05 59 8A DD 33 C9 E8 09 17 0A C0 75 3B  // ....Y..3......u;
    06A0: E8 37 02 8A EB 8D 5C 28 80 CD 02 E8 3B 00 74 03  // .7....\(....;.t.
    06B0: 80 CD 04 E8 C6 05 8D 9C A6 00 E8 46 2C 0A C0 74  // ...........F,..t
    06C0: 1A 56 83 C6 08 E8 AD 22 5E 8A DD B9 80 00 E8 D4  // .V....."^.......
    06D0: 16 E8 D8 04 74 05 33 C9 E8 A1 05 E8 FC 01 58 C3  // ....t.3.......X.
    06E0: 51 B9 49 00 E8 A9 27 59 C3 51 E8 1A 00 75 14 E8  // Q.I...'Y.Q...u..
    06F0: B9 01 3C 01 75 0D B9 20 00 E8 27 00 75 05 80 C9  // ..<.u.. ..'.u...
    0700: 01 EB 02 33 C9 59 C3 53 E8 F8 2B 66 3D 00 FF FF  // ...3.Y.S..+f=...
    0710: FF 75 0E 83 C3 04 E8 EA 2B 66 3D FF FF FF 00 75  // .u......+f=....u
    0720: 00 5B C3 50 52 32 D2 E8 D9 2B 02 D0 02 D4 66 C1  // .[.PR2...+....f.
    0730: E8 10 02 D0 02 D4 83 C3 04 E2 EC 0A D2 5A 58 C3  // .............ZX.
    0740: E8 E9 0A 8D 9C 4C 01 E8 39 01 E8 8D 01 B5 13 F6  // .....L..9.......
    0750: C3 08 75 0C E8 11 0C 8A EA 80 FD 13 75 02 B5 03  // ..u.........u...
    0760: 66 50 8D 9C B8 02 66 33 C0 8A C5 E8 F5 2A 66 58  // fP....f3.....*fX
    0770: A9 C8 0E 74 55 E8 62 01 F6 C3 08 74 0F E8 0F 05  // ...tU.b....t....
    0780: 8D 5C 28 E8 04 01 75 04 E8 72 00 C3 B5 02 E8 23  // .\(...u..r.....#
    0790: 01 E8 46 01 F6 C3 04 74 21 8D 5C 28 E8 49 01 E8  // ..F....t!.\(.I..
    07A0: 94 03 74 05 B5 03 E8 0B 01 E8 68 04 E8 21 01 80  // ..t.......h..!..
    07B0: FD 00 75 48 B5 02 E8 0D 01 C3 8D 9C 68 01 B8 00  // ..uH........h...
    07C0: 55 E8 65 11 B5 02 E8 FD 00 C3 A9 02 00 74 2D B5  // U.e..........t-.
    07D0: 04 E8 E0 00 E8 03 01 F6 C3 08 74 03 E8 B0 04 8D  // ..........t.....
    07E0: 9C 68 01 56 E8 E3 28 8B F7 E8 68 04 5E E8 80 28  // .h.V..(...h.^..(
    07F0: E8 D3 00 8D 5C 28 E8 A0 28 E8 18 04 C3 B5 01 E8  // ....\(..(.......
    0800: B2 00 B5 02 E8 BF 00 E8 D0 00 F6 C3 04 75 10 8D  // .............u..
    0810: 9C 68 01 B8 00 55 E8 10 11 B5 02 E8 17 00 C3 E8  // .h...U..........
    0820: C6 00 B5 02 8D 5C 28 E8 6E 00 75 02 B5 01 E8 04  // .....\(.n.u.....
    0830: 00 E8 E0 03 C3 8D 9C B4 02 B1 02 E8 69 2A B5 02  // ............i*..
    0840: E8 83 00 C3 8D 9C 4C 01 E8 38 00 E8 8C 00 F6 C3  // ......L..8......
    0850: 04 74 23 8D 5C 28 E8 8F 00 E8 6E 28 8D 9C 68 01  // .t#.\(....n(..h.
    0860: 06 0E 07 B9 07 00 E8 61 26 07 E8 63 00 E8 F8 0A  // .......a&..c....
    0870: 8D 5C 28 E8 5F 28 8D 5C 28 E8 FD 27 B8 02 00 E8  // .\(._(.\(..'....
    0880: BE FE C3 B9 61 00 E8 07 26 C3 53 81 C3 05 01 E8  // ....a...&.S.....
    0890: 71 2A 24 06 3C 02 5B C3 E8 10 00 3D 01 04 75 0A  // q*$.<.[....=..u.
    08A0: 53 83 C3 18 E8 5C 2A 5B A8 01 C3 53 83 C3 12 E8  // S....\*[...S....
    08B0: 51 2A 5B C3 8D 9C B4 02 32 C9 E8 EA 29 C3 8D 9C  // Q*[.....2...)...
    08C0: B4 02 E8 3E 2A C3 8D 9C B4 02 B1 01 E8 D8 29 C3  // ...>*.........).
    08D0: 8D 9C B4 02 B1 01 E8 E6 29 C3 66 50 8D 9C 48 01  // ........).fP..H.
    08E0: E8 20 2A 8A D8 66 58 C3 55 57 51 B9 08 00 BD 00  // . *..fX.UWQ.....
    08F0: 00 BB 08 00 2B D9 D1 E3 8D 58 4E E8 05 2A E8 E3  // ....+....XN..*..
    0900: 01 E2 EE 8D 5C 4B E8 FA 29 B9 03 00 8B D0 BF 60  // ....\K..)......`
    0910: 09 85 55 06 74 17 66 8B 05 8D 9A F4 01 E8 43 29  // ..U.t.f.......C)
    0920: 8B 45 04 8D 9A F8 01 E8 51 29 83 C5 08 83 C7 08  // .E......Q)......
    0930: E2 DF 8D 7C 5E B9 04 00 33 ED 8B DF E8 C4 29 0B  // ...|^...3.....).
    0940: C0 74 09 E8 5D 01 E8 97 00 83 C5 1C 83 C7 12 E2  // .t..]...........
    0950: E9 55 32 ED E8 6F FF 8D 5C 28 E8 4E FF 3D 01 04  // .U2..o..\(.N.=..
    0960: 75 10 83 C3 14 E8 9B 29 24 70 C0 E8 04 8A E8 E8  // u......)$p......
    0970: 54 FF 5D 8D 9C A6 00 E8 89 29 0A C0 74 46 8D 9C  // T.]......)..tF..
    0980: A8 00 E8 7E 29 3C 02 75 3B 66 C1 E8 10 3C 04 72  // ...~)<.u;f...<.r
    0990: 33 8D 9C A8 00 32 E4 03 D8 8B FB B9 04 00 8B DF  // 3....2..........
    09A0: E8 60 29 0B C0 74 15 E8 F9 00 A9 80 00 75 0D E8  // .`)..t.......u..
    09B0: 2E 00 83 C5 1C 55 58 83 F8 70 73 08 83 C7 12 49  // .....UX..ps....I
    09C0: 0B C9 75 DA 59 5F 5D C3 20 03 58 02 3C 00 01 00  // ..u.Y_]. .X.<...
    09D0: 00 04 00 03 3C 00 00 08 80 02 E0 01 3C 00 20 00  // ....<.......<. .
    09E0: 51 8D 1D E8 1D 29 8D 9A 68 01 E8 8E 28 8D 5D 02  // Q....)..h...(.].
    09F0: E8 10 29 8D 9A 6A 01 E8 89 00 8D 5D 05 E8 03 29  // ..)..j.....]...)
    0A00: 8D 9A 6E 01 E8 7C 00 8D 5D 08 E8 F6 28 8B C8 8A  // ..n..|..]...(...
    0A10: DC 66 C1 C8 10 8A D0 80 E2 0F 8A F0 C0 EE 04 8A  // .f..............
    0A20: EC C0 ED 06 8A FC C0 EF 04 80 E7 03 80 E4 0F C0  // ................
    0A30: E4 04 0A D4 80 E2 3F 80 E4 C0 C0 EC 02 0A F4 8B  // ......?.........
    0A40: C3 8D 9A 74 01 E8 33 28 8D 9A 72 01 8B C1 E8 2A  // ...t..3(..r....*
    0A50: 28 8D 9A 76 01 33 C0 8A C6 E8 1F 28 8D 9A 78 01  // (..v.3.....(..x.
    0A60: 33 C0 8A C2 E8 14 28 8D 5D 0C E8 96 28 8D 9A 7A  // 3.....(.]...(..z
    0A70: 01 E8 0F 00 8D 5D 0F E8 89 28 8D 9A 7E 01 E8 FA  // .....]...(..~...
    0A80: 27 59 C3 8B C8 8A D4 66 C1 C8 10 8A F0 80 E6 0F  // 'Y.....f........
    0A90: 8A E8 C0 ED 04 8B C1 E8 E1 27 83 C3 02 8B C2 E8  // .........'......
    0AA0: D9 27 C3 8D 5D 11 E8 5A 28 8A E0 BA 06 00 C0 E8  // .'..]..Z(.......
    0AB0: 07 74 03 80 CA 80 8A C4 C0 E8 03 24 03 3C 02 75  // .t.........$.<.u
    0AC0: 03 80 CA 40 3C 03 75 12 8A C4 D0 E8 A8 01 74 03  // ...@<.u.......t.
    0AD0: 80 E2 FD A8 02 74 03 80 E2 FB 8B C2 8D 9A 80 01  // .....t..........
    0AE0: E8 98 27 C3 3C 01 74 3D 8B D0 0F B6 C6 24 3F 04  // ..'.<.t=.....$?.
    0AF0: 3C 8D 9A F8 01 E8 83 27 0F B6 C2 83 C0 1F C1 E0  // <......'........
    0B00: 03 8D 9A F4 01 E8 73 27 0F B6 DE C1 EB 06 C1 E3  // ......s'........
    0B10: 02 2E F7 A7 C0 0A 2E F7 B7 BE 0A 8D 9A F6 01 E8  // ................
    0B20: 59 27 83 C5 08 C3 10 00 0A 00 04 00 03 00 05 00  // Y'..............
    0B30: 04 00 10 00 09 00 8D 9C A6 00 E8 C6 27 0A C0 74  // ............'..t
    0B40: 1F 8D 9C A8 00 51 B1 03 E8 18 00 59 0B DB 74 10  // .....Q.....Y..t.
    0B50: E8 B0 27 32 C0 66 3D 00 03 0C 00 75 03 0B DB C3  // ..'2.f=....u....
    0B60: 33 DB C3 66 50 52 E8 9A 27 3C 02 75 39 80 FC 03  // 3..fPR..'<.u9...
    0B70: 72 34 66 C1 E8 10 32 E4 3C 04 76 2A 03 C3 8B D0  // r4f...2.<.v*....
    0B80: 83 C3 04 3B DA 73 1F E8 79 27 8A E0 80 E4 E0 C0  // ...;.s..y'......
    0B90: EC 05 24 1F 38 CC 74 08 32 E4 FE C0 03 D8 EB E3  // ..$.8.t.2.......
    0BA0: 0B DB 5A 66 58 C3 33 DB 5A 66 58 C3 51 8D 9C A6  // ..ZfX.3.ZfX.Q...
    0BB0: 00 E8 4F 27 0A C0 74 1B 8D 9C A8 00 B1 12 E8 18  // ..O'..t.........
    0BC0: 00 74 10 E8 3D 27 66 C1 E8 10 80 E4 07 75 04 B0  // .t..='f......u..
    0BD0: 01 EB 02 32 C0 0A C0 59 C3 66 50 52 E8 24 27 3C  // ...2...Y.fPR.$'<
    0BE0: 70 75 2B 66 C1 E8 10 32 E4 83 C3 05 03 C3 8B D0  // pu+f...2........
    0BF0: 3B DA 73 1A E8 0C 27 38 C8 74 0D 66 C1 E8 10 32  // ;.s...'8.t.f...2
    0C00: E4 83 C0 03 03 D8 EB E8 0B DB 5A 66 58 C3 33 DB  // ..........ZfX.3.
    0C10: 5A 66 58 C3 57 66 51 8D 9C 68 01 8B FB 8B DF E8  // ZfX.WfQ..h......
    0C20: 3D 00 0B C9 74 0B 66 8B D1 E8 AB 0F 83 C7 1C EB  // =...t.f.........
    0C30: EC 66 59 5F C3 50 53 51 B9 07 00 53 8B DA E8 C2  // .fY_.PSQ...S....
    0C40: 26 83 F8 00 5B 74 09 66 C1 E3 10 8B DA E8 55 22  // &...[t.f......U"
    0C50: 59 5B 58 C3 51 53 B9 07 00 E8 62 22 5B 59 C3 66  // Y[X.QS....b"[Y.f
    0C60: 50 53 83 C3 06 E8 9B 26 5B 8B C8 66 C1 E1 10 53  // PS.....&[..f...S
    0C70: 83 C3 02 E8 8D 26 8B C8 5B 66 58 C3 8D 9C 48 01  // .....&..[fX...H.
    0C80: 32 C9 E8 22 26 C3 57 B9 20 00 E8 3D 22 5F C3 E8  // 2.."&.W. ..="_..
    0C90: 83 01 66 8B CA 66 52 E8 CE 06 E8 FD 1C 66 5A 74  // ..f..fR......fZt
    0CA0: 10 E8 44 06 B3 00 E8 AA 19 66 3B CA 73 03 66 8B  // ..D......f;.s.f.
    0CB0: D1 8D 9C D0 03 E8 4B 26 0B C0 75 44 8D 9C 54 02  // ......K&..uD..T.
    0CC0: 66 B8 48 3F 00 00 E8 9A 25 B5 01 66 81 FA 78 69  // f.H?....%..f..xi
    0CD0: 00 00 72 25 83 C3 04 66 B8 78 69 00 00 E8 83 25  // ..r%...f.xi....%
    0CE0: B5 02 66 81 FA F0 D2 00 00 72 0E 83 C3 04 66 B8  // ..f......r....f.
    0CF0: F0 D2 00 00 E8 6C 25 B5 03 B1 03 E8 CF 01 EB 45  // .....l%........E
    0D00: 66 B9 08 00 00 00 66 33 D2 53 8D 9C 54 02 8B D3  // f.....f3.S..T...
    0D10: 5B E8 EF 25 0B C0 74 22 66 25 FF FF 00 00 66 D1  // [..%..t"f%....f.
    0D20: E0 53 8B DA E8 3C 25 5B 66 C1 CA 10 FE C2 66 C1  // .S...<%[f.....f.
    0D30: CA 10 83 C2 04 83 C3 02 E2 D7 66 C1 CA 10 8A EA  // ..........f.....
    0D40: B1 03 E8 88 01 E8 42 06 A8 01 74 3F 8D 9C AE 03  // ......B...t?....
    0D50: E8 B0 25 3C 00 74 34 E8 D9 05 8A EB E8 5C 01 32  // ..%<.t4......\.2
    0D60: ED E8 63 01 E8 AC 05 8D 9C BB 02 E8 95 25 33 C9  // ..c..........%3.
    0D70: 8A C8 E8 28 01 66 3B C2 74 0E 51 E8 43 01 FE C5  // ...(.f;.t.Q.C...
    0D80: E8 44 01 59 E2 EC EB 03 B3 00 C3 8D 9C BB 02 E8  // .D.Y............
    0D90: 71 25 FE C8 8A E8 E8 2E 01 8D 9C 40 03 B9 00 00  // q%.........@....
    0DA0: E8 04 25 E8 CC 02 E8 D2 00 E8 0F 01 66 52 E8 B7  // ..%.........fR..
    0DB0: 05 E8 E6 1B 66 5A 75 04 B3 00 EB 58 E8 F6 00 80  // ....fZu....X....
    0DC0: FD 01 77 07 E8 FA 00 0A ED 74 47 E8 28 03 E8 3C  // ..w......tG.(..<
    0DD0: 11 80 FB 00 75 1D E8 B1 05 A8 01 74 07 B1 0D E8  // ....u......t....
    0DE0: 53 19 EB 30 B5 01 E8 A8 05 E8 39 0F B5 00 E8 A0  // S..0......9.....
    0DF0: 05 EB 21 E8 BF 00 80 FD 01 76 07 D0 ED E8 BB 00  // ..!......v......
    0E00: EB BA E8 76 00 E8 B3 00 E8 B6 00 FE CD E8 B7 00  // ...v............
    0E10: EB AA B3 08 C3 8D 9C 29 01 E8 E7 24 66 33 D2 8A  // .......)...$f3..
    0E20: D0 66 B8 8C 0A 00 00 66 F7 E2 E8 3B 05 E8 6A 1B  // .f.....f...;..j.
    0E30: 75 3D 66 50 8D 9C 28 01 E8 C8 24 3C 14 66 58 72  // u=fP..(...$<.fXr
    0E40: 2E 66 50 8D 9C D0 03 E8 B9 24 0B C0 66 58 74 1F  // .fP......$..fXt.
    0E50: B9 07 00 8D 9C D0 03 8B C1 D1 E0 03 D8 E8 A3 24  // ...............$
    0E60: 0B C0 75 02 E2 ED 66 25 FF FF 00 00 66 D1 E0 66  // ..u...f%....f..f
    0E70: 0B C0 75 03 B8 48 3F 66 8B D0 C3 8D 9C 2A 01 E8  // ..u..H?f.....*..
    0E80: 81 24 24 0F 8A E8 0A ED 75 02 B5 01 C3 B5 00 8D  // .$$.....u.......
    0E90: 9C 31 01 E8 6D 24 A8 01 74 02 B5 01 C3 53 51 E8  // .1..m$..t....SQ.
    0EA0: 1F 00 32 E4 8A C5 C1 E0 02 59 8D 9C 54 02 03 D8  // ..2......Y..T...
    0EB0: E8 50 24 5B C3 B1 02 E8 1D 00 C3 B1 02 E8 0D 00  // .P$[............
    0EC0: C3 B1 01 E8 11 00 C3 B1 01 E8 01 00 C3 53 8D 9C  // .............S..
    0ED0: B8 02 E8 D2 23 5B C3 53 8D 9C B8 02 E8 E0 23 5B  // ....#[.S......#[
    0EE0: C3 33 C9 E8 74 20 75 3C 66 BA 37 F1 FF FF 66 33  // .3..t u<f.7...f3
    0EF0: C0 E8 EA 04 33 C0 E8 51 03 74 1C A9 C8 0E 74 F6  // ....3..Q.t....t.
    0F00: E8 3C F7 F6 C3 04 75 05 F6 C3 18 74 E9 E8 30 00  // .<....u....t..0.
    0F10: 50 E8 2C F8 58 EB DF E8 1C 00 75 08 E8 31 00 8B  // P.,.X.....u..1..
    0F20: C1 E8 1C F8 C3 8D 5D 28 66 C1 E3 10 8D 5C 28 B9  // ......](f....\(.
    0F30: 49 00 E8 70 1F C3 66 50 E8 BC 04 8B C8 66 58 C3  // I..p..fP.....fX.
    0F40: 66 52 66 BA FF FF FF FF 33 D0 E8 91 04 66 5A C3  // fRf.....3....fZ.
    0F50: 50 53 52 E8 E0 FF 75 13 B9 08 00 E8 31 1C 23 C8  // PSR...u.....1.#.
    0F60: 75 19 33 C0 E8 E3 02 8B C8 EB 10 83 F9 02 74 0B  // u.3...........t.
    0F70: E8 2C 08 80 FB 01 75 03 83 E1 FD 5A 5B 58 C3 56  // .,....u....Z[X.V
    0F80: 66 33 C0 66 BA 00 F0 FF FF E8 4F 07 66 C1 E6 10  // f3.f......O.f...
    0F90: E8 C4 02 0B C0 74 03 E8 1C 00 E8 2F 07 5E C3 66  // .....t...../.^.f
    0FA0: 52 66 8B D0 E8 DC 15 8D 9C 1C 03 E8 55 23 8A C2  // Rf..........U#..
    0FB0: E8 B0 22 66 5A C3 50 51 E8 71 02 50 32 C0 E8 FD  // .."fZ.PQ.q.P2...
    0FC0: 03 E8 CC 01 E8 98 00 8D 9C 40 03 E8 35 23 38 E8  // .........@..5#8.
    0FD0: 74 0A 8A C5 E8 8C 22 B0 02 E8 E2 03 58 E8 CA 00  // t.....".....X...
    0FE0: E8 A8 00 E8 8C 00 8D 9C 4C 01 E8 16 23 8B C8 8B  // ........L...#...
    0FF0: D3 8D 9C 00 03 E8 0B 23 3B C1 74 05 B0 02 E8 BD  // .......#;.t.....
    1000: 03 E8 31 FC 8D 9C 00 03 E8 55 15 8D 9C D8 02 E8  // ..1......U......
    1010: 51 22 E8 8A FF 66 C1 CE 10 8B FE 66 C1 CE 10 E8  // Q"...f.....f....
    1020: 95 00 E8 D1 00 E8 24 03 8A E9 8D 9C DC 02 32 C9  // ......$.......2.
    1030: E8 74 22 E8 0D 03 66 25 FF 0F 00 00 59 58 66 BA  // .t"...f%....YXf.
    1040: FF FF FF FF 33 D0 E8 92 06 33 D2 C3 53 66 50 8D  // ....3....3..SfP.
    1050: 9C D4 02 E8 AD 22 8A C4 E8 08 22 66 58 5B C3 53  // ....."...."fX[.S
    1060: 66 50 8D 9C D4 02 E8 9A 22 8A E0 E8 F5 21 66 58  // fP......"....!fX
    1070: 5B C3 E8 73 02 E8 2E 02 8A DD E8 9D 16 8A E9 8D  // [..s............
    1080: 9C 3C 03 32 C9 E8 1F 22 0B DB C3 83 EC 08 8B EC  // .<.2..."........
    1090: E8 55 02 E8 10 02 E8 23 16 8D 9C 4C 03 E8 63 22  // .U.....#...L..c"
    10A0: 8A 46 00 E8 BD 21 83 C4 08 C3 8D 9C D4 02 E8 52  // .F...!.........R
    10B0: 22 32 C0 E8 AD 21 C3 E8 0A 00 8D 9C D0 02 32 C9  // "2...!........2.
    10C0: E8 E4 21 C3 B5 00 8D 1D E8 38 22 66 8B D0 8D 9C  // ..!......8"f....
    10D0: 02 03 E8 2E 22 0B C0 74 1C 51 8B C8 8D 9C 06 03  // ...."..t.Q......
    10E0: E8 20 22 66 C1 E0 10 8B C1 59 66 3B C2 75 04 B5  // . "f.....Yf;.u..
    10F0: 00 EB 02 B5 02 C3 E8 2B 02 8D 9C 40 03 B1 03 E8  // .......+...@....
    1100: A5 21 E8 CB F7 8D 9C 40 03 B1 02 E8 99 21 E8 95  // .!.....@.....!..
    1110: 01 80 FD 00 75 14 E8 9C FD E8 8B 02 E8 7E FD 66  // ....u........~.f
    1120: 8B D0 E8 77 02 E8 8B 02 EB 21 E8 4A 02 E8 6C 02  // ...w.....!.J..l.
    1130: E8 73 01 80 FD 02 B5 04 75 0B 81 FA 74 40 76 05  // .s......u...t@v.
    1140: B5 08 66 D1 EA E8 6B 02 E8 5C 02 E8 2B 00 C3 66  // ..f...k..\..+..f
    1150: 52 52 32 ED 83 C1 02 B8 06 00 F7 E1 66 33 C9 8B  // RR2.........f3..
    1160: C8 5A 51 66 8B C2 8A CF 66 F7 E1 66 C1 E0 03 59  // .ZQf....f..f...Y
    1170: 66 F7 F1 66 8B C8 66 5A C3 B5 00 E8 EA 01 E8 15  // f..f..fZ........
    1180: 18 75 03 E8 07 FD 8D 9C 48 03 32 C9 E8 18 21 C3  // .u......H.2...!.
    1190: 53 E8 5F 01 66 C1 E2 10 E8 4D 01 8D 9C B8 02 E8  // S._.f....M......
    11A0: 61 21 8A E8 8D 9C B4 02 E8 58 21 8A C8 E8 C4 14  // a!.......X!.....
    11B0: 8A EB 5B C3 57 53 53 E8 D6 FF E8 2B 01 5B E8 29  // ..[.WSS....+.[.)
    11C0: 15 74 66 80 FD 00 75 29 53 E8 D1 FC 66 8B D0 E8  // .tf...u)S...f...
    11D0: FE F6 8A CD 51 E8 DD FC 8A FD 59 E8 71 FF 5B E8  // ....Q.....Y.q.[.
    11E0: 21 21 66 25 FF FF 00 00 66 3B C8 73 39 32 DB EB  // !!f%....f;.s92..
    11F0: 38 80 FD 02 75 16 E8 6F 01 E8 AB 17 74 28 8D 1F  // 8...u..o....t(..
    1200: E8 00 21 3D 74 40 76 1E 32 DB EB 1D 80 FD 03 75  // ..!=t@v.2......u
    1210: 15 53 E8 D3 00 B3 03 E8 39 14 5B E8 E5 20 3B C2  // .S......9.[.. ;.
    1220: 76 04 32 DB EB 03 80 CB 01 5B 5F C3 53 8B F0 E8  // v.2......[_.S...
    1230: 5D 19 23 F0 74 09 8B C6 E8 FC 17 8B F3 0B DB 5B  // ].#.t..........[
    1240: C3 51 E8 0B FD E8 0F 00 59 C3 51 50 E8 40 19 8B  // .Q......Y.QP.@..
    1250: C8 58 E8 02 00 59 C3 57 53 E8 0A 1B 0B C0 74 09  // .X...Y.WS.....t.
    1260: 8B 1D 83 C7 02 3B C3 75 F7 8B 1D 83 FB FF 74 0B  // .....;.u......t.
    1270: 83 C7 02 85 D9 74 F2 8B C3 EB 02 33 C0 0B C0 5B  // .....t.....3...[
    1280: 5F C3 33 C0 E8 C3 FF 74 13 E8 A0 FF 8B DE B9 FB  // _.3....t........
    1290: 00 E8 FC 1B 83 C6 08 E8 A5 18 EB E8 BB F0 16 B8  // ................
    12A0: 5A A5 E8 D6 1F C3 53 66 50 8D 9C 40 03 E8 53 20  // Z.....SfP..@..S 
    12B0: 8A E8 66 58 5B C3 8D 9C 69 03 E8 46 20 C3 8D 9C  // ..fX[...i..F ...
    12C0: 64 03 E8 3E 20 0B C0 C3 53 66 50 8D 9C D4 02 E8  // d..> ...SfP.....
    12D0: 31 20 8A C8 66 58 5B C3 53 66 50 8D 9C D5 02 E8  // 1 ..fX[.SfP.....
    12E0: 21 20 8A C8 66 58 5B C3 53 8D 5C 14 E8 14 20 8B  // ! ..fX[.S.\... .
    12F0: D0 5B C3 53 66 50 8D 5C 16 E8 07 20 8B D0 66 58  // .[.SfP.\... ..fX
    1300: 5B C3 53 66 50 8D 9C 50 03 E8 F7 1F 66 8B D0 66  // [.SfP..P....f..f
    1310: 58 5B C3 53 66 50 8D 9C 54 03 E8 E6 1F 66 8B D0  // X[.SfP..T....f..
    1320: 66 58 5B C3 53 66 50 8D 5C 10 E8 D6 1F 8B C8 66  // fX[.SfP.\......f
    1330: 58 5B C3 66 50 53 8D 9C 41 03 E8 C6 1F 5B 8A D8  // X[.fPS..A....[..
    1340: 66 58 C3 53 8D 5C 08 E8 B9 1F 5B C3 53 50 8D 9C  // fX.S.\....[.SP..
    1350: 4C 03 E8 AE 1F 8A C8 58 5B C3 53 50 8D 9C 4D 03  // L......X[.SP..M.
    1360: E8 A0 1F 8A C8 58 5B C3 53 66 50 8D 5C 0C E8 92  // .....X[.SfP.\...
    1370: 1F 8B D0 66 58 5B C3 53 66 50 8D 9C 00 03 E8 82  // ...fX[.SfP......
    1380: 1F 66 33 D2 8B D0 66 58 5B C3 8D 5C 04 E8 73 1F  // .f3...fX[..\..s.
    1390: C3 51 8D 5C 04 32 C9 E8 0D 1F 59 C3 8D 9C 50 03  // .Q.\.2....Y...P.
    13A0: 66 8B C2 E8 BD 1E C3 53 8D 9C 40 03 B1 01 E8 F6  // f......S..@.....
    13B0: 1E 5B C3 8D 9C 54 03 66 8B C2 E8 A6 1E C3 53 51  // .[...T.f......SQ
    13C0: 8A E8 E8 C5 FF 24 FD 0A E8 E8 C5 FF 59 5B C3 66  // .....$......Y[.f
    13D0: 50 8D 9C D8 02 E8 2B 1F 66 8B D0 66 58 C3 53 66  // P.....+.f..fX.Sf
    13E0: 50 51 66 8B C8 BB 00 00 E8 2D 16 23 C2 0B C1 E8  // PQf......-.#....
    13F0: 2F 16 59 66 58 5B C3 BB 00 00 E8 1B 16 66 25 CA  // /.YfX[.......f%.
    1400: 0E 00 00 C3 E8 47 1A E8 D6 19 E8 B4 19 75 06 E8  // .....G.......u..
    1410: 8F 17 E8 B8 19 C3 B0 01 C3 55 B3 01 E8 D7 1C 5D  // .........U.....]
    1420: C3 66 53 66 BB 04 00 00 00 E8 05 00 33 C0 66 5B  // .fSf........3.f[
    1430: C3 55 66 C1 E3 10 BB 00 00 E8 BA 1C 5D C3 E8 06  // .Uf.........]...
    1440: 1B BB 0A 00 E8 DA 15 C3 BB 0A 00 E8 CA 15 66 8B  // ..............f.
    1450: C8 E8 F3 1A BB 0A 00 66 2B C1 E8 C4 15 C3 E8 29  // .......f+......)
    1460: 00 0B C9 74 22 E8 17 FB E8 31 07 66 51 66 8B C8  // ...t"....1.fQf..
    1470: BB 07 00 E8 A2 15 66 25 00 FE 00 00 66 0B C1 E8  // ......f%....f...
    1480: 9F 15 66 59 0C 01 C3 32 C0 C3 E8 6B 02 0B C9 75  // ..fY...2...k...u
    1490: 06 E8 BC FA E8 71 02 51 E8 B5 FA 66 C1 E6 10 33  // .....q.Q...f...3
    14A0: C0 E8 9D FD 74 09 E8 16 03 75 F6 33 C8 EB F2 58  // ....t....u.3...X
    14B0: 23 C8 66 C1 EE 10 C3 A8 10 75 63 E8 F0 06 66 C1  // #.f......uc...f.
    14C0: E6 10 33 C0 E8 83 FD 74 35 E8 60 FD 50 51 8B C8  // ..3....t5.`.PQ..
    14D0: E8 F9 01 85 C1 59 58 74 0D 50 E8 AD FE 24 03 3C  // .....YXt.P...$.<
    14E0: 03 58 75 E0 EB 0C 50 E8 A0 FE A8 01 58 74 D5 E8  // .Xu...P.....Xt..
    14F0: 6D FB 50 E8 DA 07 58 B5 00 E8 95 FE EB C6 E8 CB  // m.P...X.........
    1500: 01 E8 28 FD E8 34 01 B1 00 E8 4E 07 66 C1 EE 10  // ..(..4....N.f...
    1510: E8 94 06 A8 20 75 42 A8 40 75 03 E8 1C 0E E8 7B  // .... uB.@u.....{
    1520: 06 0A C0 75 07 32 C9 B5 01 E8 BF 0E E8 9D 01 E8  // ...u.2..........
    1530: FA FC E8 33 FE E8 62 14 75 14 E8 62 02 0A DB 74  // ...3..b.u..b...t
    1540: 0D E8 1B FB E8 89 07 B5 00 E8 45 FE EB 08 E8 66  // ..........E....f
    1550: 07 B5 01 E8 3B FE E8 E6 00 C3 E8 32 16 C3 E8 21  // ....;......2...!
    1560: FD E8 AC 06 33 C9 E8 9F 01 66 33 D2 66 33 C0 E8  // ....3....f3.f3..
    1570: 6C FE E8 52 00 B1 FF E8 84 00 33 C0 E8 CB FC 74  // l..R......3....t
    1580: 0A E8 A8 FC 50 E8 D2 07 58 EB F1 32 C9 E8 C4 01  // ....P...X..2....
    1590: E8 FC 15 0B C0 C3 E8 E9 FC E8 74 06 66 33 C0 66  // ..........t.f3.f
    15A0: BA 00 F0 FF FF E8 33 01 51 B1 01 E8 8C 01 59 33  // ......3.Q.....Y3
    15B0: C0 E8 96 FC 74 0A E8 73 FC 50 E8 68 07 58 EB F1  // ....t..s.P.h.X..
    15C0: E8 B4 0D E8 6D 18 C3 B8 02 00 E8 5F FC 74 2E B1  // ....m......_.t..
    15D0: 07 E8 02 12 B8 02 00 E8 65 F0 F6 C3 04 75 12 E8  // ........e....u..
    15E0: E8 1A 83 3D 00 75 0A E8 A5 15 83 E0 FD E8 A8 15  // ...=.u..........
    15F0: C3 66 B8 02 00 00 00 E8 E4 FD E8 47 F2 C3 E8 29  // .f.........G...)
    1600: 14 74 23 38 E1 76 04 8A CC EB 06 38 C1 73 02 8A  // .t#8.v.....8.s..
    1610: C8 BB 02 00 E8 01 14 8A E1 E8 05 14 B1 04 E8 B5  // ................
    1620: 11 0C 01 C3 0C 01 C3 51 E8 FF 13 74 0C 8A CC BB  // .......Q...t....
    1630: 02 00 E8 E3 13 8A C4 8A E1 59 C3 E8 FE 05 C3 E8  // .........Y......
    1640: 09 06 C3 E8 14 19 75 18 E8 81 00 E8 DE FB 80 F9  // ......u.........
    1650: 01 75 0E 51 E8 60 06 B5 01 E8 35 FD 59 E8 DF FF  // .u.Q.`....5.Y...
    1660: C3 E8 D7 FF 51 E8 BD 06 B5 00 E8 24 FD 59 C3 B8  // ....Q......$.Y..
    1670: 02 00 E8 B7 FB 74 03 E8 5C 11 C3 E8 BD 04 3B C1  // .....t..\.....;.
    1680: 7C 3A 8B C1 E8 FD 04 E8 C7 0E 8B C8 51 E8 2D 05  // |:..........Q.-.
    1690: E8 F1 04 59 E8 BA 0E 3B C8 72 02 8B C1 8D 5C 04  // ...Y...;.r....\.
    16A0: E8 D8 1B 32 C9 B5 0F E8 05 0D E8 DA 17 FE C1 38  // ...2...........8
    16B0: C1 72 F2 8D 5C 04 E8 4A 1C 0B C0 C3 33 C0 C3 BB  // .r..\..J....3...
    16C0: 00 18 33 C0 8A C2 C1 E0 02 03 D8 C3 53 BB 03 00  // ..3.........S...
    16D0: E8 45 13 66 25 FF 0F 00 00 5B C3 53 66 50 66 51  // .E.f%....[.SfPfQ
    16E0: 66 8B C8 BB 03 00 E8 2F 13 66 23 C2 66 0B C1 E8  // f....../.f#.f...
    16F0: 2F 13 66 59 66 58 5B C3 66 50 BB 05 00 E8 18 13  // /.fYfX[.fP......
    1700: 25 FF 0F 8B C8 66 58 C3 E8 84 14 23 C8 66 50 BB  // %....fX....#.fP.
    1710: 05 00 E8 03 13 25 00 F0 0B C1 E8 04 13 66 58 C3  // .....%.......fX.
    1720: 66 50 53 BB 06 00 E8 EF 12 A8 10 75 09 BB F0 16  // fPS........u....
    1730: E8 D0 1B 3D 5A A5 5B 66 58 C3 66 50 53 BB 06 00  // ...=Z.[fX.fPS...
    1740: E8 D5 12 80 F1 01 C0 E1 04 24 EF 0A C1 E8 D1 12  // .........$......
    1750: 5B 66 58 C3 53 66 50 BB F8 16 E8 A6 1B 8A C1 E8  // [fX.SfP.........
    1760: 01 1B 66 58 5B C3 53 BB F8 16 E8 96 1B 83 E0 01  // ..fX[.S.........
    1770: 5B C3 53 66 50 BB 07 00 E8 9D 12 F6 C4 01 66 58  // [.SfP.........fX
    1780: B0 06 74 02 B0 08 5B C3 53 BB 07 00 E8 89 12 80  // ..t...[.S.......
    1790: E4 FE 80 FD 06 74 03 80 CC 01 E8 84 12 5B C3 66  // .....t.......[.f
    17A0: 50 BB 06 00 E8 71 12 24 40 C0 E8 06 8A D8 66 58  // P....q.$@.....fX
    17B0: C3 B3 81 E8 35 19 75 04 83 C8 01 C3 33 C0 C3 50  // ....5.u.....3..P
    17C0: 66 51 E8 67 FA 83 EC 04 8B EC 66 33 C0 66 89 46  // fQ.g......f3.f.F
    17D0: 00 33 D2 8D BC 68 01 8D 1D E8 27 1B 0B C0 74 22  // .3...h....'...t"
    17E0: 8B DF B0 00 E8 12 01 74 14 8B DF E8 71 F4 66 8B  // .......t....q.f.
    17F0: 46 00 66 3B C8 72 06 8B D7 66 89 4E 00 83 C7 1C  // F.f;.r...f.N....
    1800: EB D5 0B D2 74 0A 8D 9C 4C 01 E8 28 F4 E9 88 00  // ....t...L..(....
    1810: 66 33 C0 66 89 46 00 8D BC F4 01 33 D2 8D 1D E8  // f3.f.F.....3....
    1820: E1 1A 0B C0 74 58 66 50 E8 93 F0 3C 01 66 58 74  // ....tXfP...<.fXt
    1830: 05 3D 40 06 73 43 66 52 66 8B D0 8D 5D 04 E8 C2  // .=@.sCfRf...]...
    1840: 1A E8 5D 00 8B CA 66 5A 74 2F 56 8D 9C 4C 01 8B  // ..]...fZt/V..L..
    1850: F1 E8 00 F4 5E B0 00 E8 9F 00 74 1D 8D 1D E8 A2  // ....^.....t.....
    1860: 1A 8B D9 8B 47 06 66 C1 E0 10 8B 47 02 66 3B 46  // ....G.f....G.f;F
    1870: 00 72 06 8B D1 66 89 46 00 83 C7 08 EB 9F 0B D2  // .r...f.F........
    1880: 74 16 56 8D 9C 4C 01 8B F2 E8 C8 F3 5E 53 8D 9C  // t.V..L......^S..
    1890: 62 01 33 C0 E8 E4 19 5B 83 C4 04 0B D2 66 59 58  // b.3....[.....fYX
    18A0: C3 57 53 51 E8 E6 14 3B 55 02 75 18 66 C1 CA 10  // .WSQ...;U.u.f...
    18B0: 8B DA 66 C1 CA 10 3B 5D 06 75 09 0A C0 74 0E 3A  // ..f...;].u...t.:
    18C0: 45 1B 74 09 83 C7 1C E2 DE 33 D2 EB 02 8B D7 0B  // E.t......3......
    18D0: D2 59 5B 5F C3 51 66 52 E8 B2 14 3A 65 1A 75 09  // .Y[_.QfR...:e.u.
    18E0: 0A C0 74 0E 3A 45 1B 74 09 83 C7 1C E2 ED 33 FF  // ..t.:E.t......3.
    18F0: EB 00 0B FF 66 5A 59 C3 C3 66 51 66 52 53 53 66  // ....fZY..fQfRSSf
    1900: C1 CE 10 8B DE 66 C1 CE 10 E8 F7 19 5B 66 8B D0  // .....f......[f..
    1910: E8 4C F3 3B CA 72 0A 66 3B CA 72 05 E8 95 F8 75  // .L.;.r.f;.r....u
    1920: 02 32 C0 5B 66 5A 66 59 C3 56 57 E8 A7 FF 8B F7  // .2.[fZfY.VW.....
    1930: E8 21 F3 5F 5E C3 66 50 53 66 51 52 57 56 51 8B  // .!._^.fPSfQRWVQ.
    1940: DE B9 08 00 E8 49 15 59 8D 5C 08 8B C1 66 C1 E0  // .....I.Y.\...f..
    1950: 10 8A C2 E8 0D 19 F6 C2 03 75 24 8B C1 24 7F BF  // .........u$..$..
    1960: 19 1A 80 3D FF 0F 84 0F 01 3A 05 75 0D 66 8B 45  // ...=.....:.u.f.E
    1970: 01 66 B9 00 05 02 00 E9 96 00 83 C7 05 EB E3 F6  // .f..............
    1980: C2 01 74 25 8B C1 E8 70 01 0F 84 EB 00 33 C9 8A  // ..t%...p.....3..
    1990: CC 8A D0 0A C0 75 12 8D 5C 08 66 25 FF FF 00 00  // .....u..\.f%....
    19A0: 66 C1 E0 08 E8 BC 18 EB B2 8A E1 8A CA 80 E1 0C  // f...............
    19B0: C0 E9 02 80 E2 F0 C0 EA 04 8A EA 80 FC 70 72 2A  // .............pr*
    19C0: 80 FC 75 73 25 80 EC 70 8A C4 32 E4 50 E8 30 02  // ..us%..p..2.P.0.
    19D0: 8B D8 58 38 D8 72 05 33 C0 E9 9C 00 E8 28 02 E8  // ..X8.r.3.....(..
    19E0: 21 19 0B C0 0F 84 90 00 EB 1B 32 C0 E8 E6 FE 0F  // !.........2.....
    19F0: 84 85 00 8D 5C 16 8B 05 E8 80 18 8B 45 06 66 C1  // ....\.......E.f.
    1A00: E0 10 8B 45 02 50 E8 48 0B 66 C1 E1 10 8B C8 58  // ...E.P.H.f.....X
    1A10: 8D 1C E8 4E 18 66 50 8D 5C 04 66 8B C1 E8 43 18  // ...N.fP.\.f...C.
    1A20: 66 58 66 C1 E8 10 66 81 E1 FF FF 00 00 66 F7 E1  // fXf...f......f..
    1A30: 66 50 8D 5C 06 E8 CB 18 8B C8 66 58 66 D3 E0 66  // fP.\......fXf..f
    1A40: C1 E8 10 40 8D 5C 14 E8 31 18 BF 79 1A 83 F9 01  // ...@.\..1..y....
    1A50: 74 11 BF 81 1A 81 F9 01 01 74 08 BF 89 1A 83 F9  // t........t......
    1A60: 02 75 15 8D 5C 0C 66 8B 05 E8 F7 17 8D 5C 10 66  // .u..\.f......\.f
    1A70: 8B 45 04 E8 ED 17 0B DB 5E 5F 5A 66 59 5B 66 58  // .E......^_ZfY[fX
    1A80: C3 00 40 01 90 01 01 40 01 90 01 02 80 02 90 01  // ..@....@........
    1A90: 03 80 02 90 01 04 40 01 90 01 05 40 01 90 01 06  // ......@....@....
    1AA0: 80 02 90 01 07 D0 02 5E 01 0D 40 01 90 01 0E 80  // .......^..@.....
    1AB0: 02 90 01 0F 80 02 5E 01 10 80 02 5E 01 11 80 02  // ......^....^....
    1AC0: E0 01 12 80 02 E0 01 13 80 02 90 01 23 20 04 90  // ............# ..
    1AD0: 01 32 20 04 B0 02 33 20 04 C0 02 62 80 02 E0 01  // .2 ...3 ...b....
    1AE0: FF 05 0A 05 05 05 00 00 00 05 0B 06 05 05 00 00  // ................
    1AF0: 00 08 10 08 08 08 00 00 00 56 E8 64 15 80 E4 01  // .........V.d....
    1B00: 3B 04 74 09 83 C6 04 E2 F7 33 C0 EB 05 8B 44 02  // ;.t......3....D.
    1B10: 0B C0 5E C3 57 53 50 E8 47 15 83 E9 0A E8 E0 00  // ..^.WSP.G.......
    1B20: 83 F8 05 76 03 B8 05 00 D1 E0 03 C8 FB A5 83 C6  // ...v............
    1B30: 02 E2 FA B8 FF FF AB 58 5B 5F C3 66 53 51 66 52  // .......X[_.fSQfR
    1B40: E8 41 00 E8 77 00 66 C1 E8 10 66 0F B7 D8 66 B8  // .A..w.f...f...f.
    1B50: 00 00 00 03 66 D3 E8 66 33 D2 66 F7 F3 E8 F1 09  // ....f..f3.f.....
    1B60: 66 5A 59 66 5B C3 53 66 50 BB 07 00 E8 A9 0E 0A  // fZYf[.SfP.......
    1B70: C0 66 58 5B C3 53 66 50 BB 07 00 E8 9A 0E A8 01  // .fX[.SfP........
    1B80: 66 58 5B C3 53 66 50 8D 5C 06 E8 76 17 8A C8 66  // fX[.SfP.\..v...f
    1B90: 58 5B C3 51 B9 08 00 E8 0B 13 59 C3 53 8D 5C 08  // X[.Q......Y.S.\.
    1BA0: E8 60 17 24 03 5B C3 8D 5C 09 E8 56 17 C3 51 53  // .`.$.[..\..V..QS
    1BB0: B1 01 8A E8 8D 5C 08 E8 ED 16 5B 59 C3 53 8D 1C  // .....\....[Y.S..
    1BC0: E8 40 17 5B C3 53 8D 5C 04 E8 37 17 5B C3 53 8D  // .@.[.S.\..7.[.S.
    1BD0: 5C 16 E8 2E 17 5B C3 53 66 52 33 C0 E8 C2 FC 66  // \....[.SfR3....f
    1BE0: 5A 75 1B E8 34 00 74 16 E8 15 00 40 83 F8 05 73  // Zu..4.t....@...s
    1BF0: 0D E8 6F 16 48 E8 0F 00 66 8B C2 E8 65 16 5B C3  // ..o.H...f...e.[.
    1C00: BB 00 1E E8 FD 16 C3 BB 08 1E C1 E0 03 03 D8 C3  // ................
    1C10: BB 00 1E B9 32 00 E8 77 12 C3 51 E8 E2 FF 0B C0  // ....2..w..Q.....
    1C20: 74 12 8B C8 BB 08 1E E8 D9 16 66 3B C2 74 07 83  // t.........f;.t..
    1C30: C3 08 E2 F3 0B DB 59 C3 C3 00 C3 00 BB 20 DF E8  // ......Y...... ..
    1C40: 81 36 E8 83 F6 B5 01 E8 E5 07 C3 BB 00 DF E8 72  // .6.............r
    1C50: 36 E8 74 F6 B5 00 E8 D6 07 C3 80 F9 00 75 0A E8  // 6.t..........u..
    1C60: 2B 12 8A C8 B5 02 E8 1D 09 0B F6 74 2E E8 58 F6  // +..........t..X.
    1C70: B5 01 51 E8 C0 07 59 E8 C3 07 56 33 F6 B5 00 E8  // ..Q...Y...V3....
    1C80: 2D 07 5E B5 01 E8 C4 F6 E8 FB 08 E8 C4 09 E8 37  // -.^............7
    1C90: F6 8D 9C 00 03 E8 AC 07 E8 F5 07 66 C1 CE 10 B5  // ...........f....
    1CA0: 01 E8 0B 07 E8 00 FF A8 40 75 07 32 C0 B5 01 E8  // ........@u.2....
    1CB0: 7E 08 66 C1 CE 10 C3 E8 0E F6 B5 01 E8 4B 07 B5  // ~.f..........K..
    1CC0: 00 E8 79 07 E8 DC 07 B1 0F E8 69 0A E8 26 00 C3  // ..y.......i..&..
    1CD0: E8 52 00 E8 02 F6 B5 00 E8 2F 07 B5 00 E8 5D 07  // .R......./....].
    1CE0: E8 77 F6 E8 A7 11 38 C1 74 0A 80 F9 0B 74 05 B5  // .w....8.t....t..
    1CF0: 03 E8 92 08 C3 B1 10 E8 3B 0A E8 A9 F5 80 FD 00  // ........;.......
    1D00: 74 06 B1 01 E8 CF 0A C3 E8 A6 05 80 FD 01 75 07  // t.............u.
    1D10: B5 02 E8 D5 05 EB 03 E8 F3 01 B1 0D E8 16 0A B1  // ................
    1D20: 03 E8 54 00 C3 E8 CB F5 0B D2 74 05 B1 00 E8 42  // ..T.......t....B
    1D30: 0A B1 02 E8 42 00 E8 51 F6 A8 01 74 12 E8 66 F5  // ....B..Q...t..f.
    1D40: 80 FD 00 75 0A B1 0C E8 EB 09 B0 02 E8 91 04 B1  // ...u............
    1D50: 00 E8 82 0A B1 0D E8 1F 00 C3 B1 07 E8 77 0A E8  // .............w..
    1D60: 91 F5 0B D2 75 0C E8 FF F5 E8 2A 0C 75 09 E8 1D  // ....u.....*.u...
    1D70: 0B C3 B1 07 E8 FC 09 C3 E8 ED F5 E8 18 0C 75 24  // ..............u$
    1D80: 51 E8 52 0A 59 80 F9 0C 75 1A 33 D2 56 83 C6 08  // Q.R.Y...u.3.V...
    1D90: E8 41 0C 5E 0A C0 75 0C B9 0A 00 E8 43 11 42 83  // .A.^..u.....C.B.
    1DA0: FA 1E 75 E8 C3 80 FB 01 0F 84 C5 00 E8 A5 05 66  // ..u............f
    1DB0: C1 E1 10 8D 9C 35 01 E8 49 15 A8 01 74 05 51 E8  // .....5..I...t.Q.
    1DC0: 2B 04 59 E8 5E F5 B0 04 E8 9C 05 66 BA 50 01 40  // +.Y.^......f.P.@
    1DD0: 50 E8 76 05 E8 F7 0A 75 7E 66 BA 50 01 50 4F 8D  // P.v....u~f.P.PO.
    1DE0: 9C 2D 01 E8 1D 15 24 06 3C 02 75 02 B6 02 B0 05  // .-....$.<.u.....
    1DF0: E8 74 05 E8 54 05 8D 5C 28 03 D8 E8 D0 0A 75 57  // .t..T..\(.....uW
    1E00: 0A FF 75 09 B0 0A E8 5E 05 32 DB EB 4A 51 33 C9  // ..u....^.2..JQ3.
    1E10: 8A CF E8 35 05 03 C8 E8 3A 05 59 B0 07 E8 47 05  // ...5....:.Y...G.
    1E20: 66 BA 50 01 10 30 33 DB E8 A3 0A 74 0F 51 8A EB  // f.P..03....t.Q..
    1E30: 8D 9C 44 01 B1 02 E8 6E 14 59 EB 61 E8 0B 05 66  // ..D....n.Y.a...f
    1E40: C1 C9 10 2B C1 66 C1 C1 10 3D 80 00 0F 82 76 FF  // ...+.f...=....v.
    1E50: B0 08 E8 12 05 EB 43 51 8A EB 8D 9C 44 01 B1 02  // ......CQ....D...
    1E60: E8 44 14 59 66 BA 50 01 10 30 33 DB E8 5F 0A EB  // .D.Yf.P..03.._..
    1E70: 2C 8D 5C 28 03 D9 53 8A E9 B1 32 51 5F E8 A4 F4  // ,.\(..S...2Q_...
    1E80: 8A E9 B1 A0 BA 00 80 E8 19 0A 80 FF 01 5B 74 0A  // .............[t.
    1E90: B1 A2 E8 0E 0A 80 FF 01 75 03 B0 00 C3 B0 01 C3  // ........u.......
    1EA0: 51 B1 0C E8 D2 FE 59 B0 01 E8 BB 04 56 83 C6 08  // Q.....Y.....V...
    1EB0: E8 21 0B 5E 0A C0 75 04 B3 10 EB 3F B0 02 E8 A6  // .!.^..u....?....
    1EC0: 04 E8 38 00 74 11 B0 03 E8 9C 04 B0 01 E8 10 03  // ..8.t...........
    1ED0: 75 29 E8 27 00 75 24 66 BA 0C 00 90 43 8D 9C 30  // u).'.u$f....C..0
    1EE0: 01 E8 EA 09 66 BA 20 00 90 41 8D 9C 34 01 E8 DD  // ....f. ..A..4...
    1EF0: 09 E8 BD 03 B0 09 E8 6E 04 33 DB C3 E8 25 F4 66  // .......n.3...%.f
    1F00: BA 00 00 90 47 8D 9C 28 01 E8 C2 09 C3 B1 0C E8  // ....G..(........
    1F10: 66 FE B1 00 E8 BF 08 B1 01 E8 BA 08 8D 9C AC 03  // f...............
    1F20: 66 B8 00 00 00 00 E8 3A 13 B0 01 E8 B2 02 74 0A  // f......:......t.
    1F30: B5 04 E8 CB 03 B3 08 E9 3F 01 B1 08 E8 F6 07 E8  // ........?.......
    1F40: D2 02 B1 09 E8 EE 07 E8 C5 01 8D 9C B8 03 66 33  // ..............f3
    1F50: C0 E8 0F 13 E8 60 01 B9 90 01 E8 79 0F B0 01 E8  // .....`.....y....
    1F60: 63 02 B5 02 E8 8D 03 E8 74 01 E8 9F 03 E8 E0 01  // c.......t.......
    1F70: B5 03 E8 7F 03 33 C9 E8 00 01 F6 C5 01 75 34 B5  // .....3.......u4.
    1F80: 02 E8 70 03 E8 20 01 F6 C5 04 74 08 B5 01 E8 6F  // ..p.. ....t....o
    1F90: 03 E9 CC 00 8A FD 80 E7 03 E8 E8 00 80 E3 03 38  // ...............8
    1FA0: FB 75 0D E8 4C 01 75 08 B5 02 E8 53 03 E9 B0 00  // .u..L.u....S....
    1FB0: E8 67 01 FE C1 E8 7B F3 38 D9 75 BB 8D 9C AC 03  // .g....{.8.u.....
    1FC0: E8 40 13 3C 03 74 05 E8 ED 00 EB 9B 8D 9C B0 03  // .@.<.t..........
    1FD0: 66 33 C0 E8 8D 12 8D 9C 2A 01 E8 26 13 A8 40 74  // f3......*..&..@t
    1FE0: 0C B1 13 E8 4F 07 B0 03 E8 DA 01 EB 0A B1 0A E8  // ....O...........
    1FF0: 43 07 B0 02 E8 CE 01 B5 04 E8 F8 02 E8 DF 00 E8  // C...............
    2000: 0A 03 E8 4B 01 B5 05 E8 EA 02 33 C9 E8 6B 00 80  // ...K......3..k..
    2010: FD 07 75 05 E8 86 00 75 2E 51 B5 04 E8 D5 02 59  // ..u....u.Q.....Y
    2020: F6 C5 01 75 07 B5 03 E8 D6 02 EB 34 E8 78 00 8A  // ...u.......4.x..
    2030: D5 E8 E6 00 E8 70 00 38 EA 75 0C E8 B4 00 75 07  // .....p.8.u....u.
    2040: B5 02 E8 BB 02 EB 19 FE C1 E8 E7 F2 38 D9 75 BC  // ............8.u.
    2050: 8D 9C AC 03 E8 AC 12 3C 04 75 05 E8 59 00 EB 9C  // .......<.u..Y...
    2060: B0 00 E8 60 01 B1 0B E8 CB 06 8D 9C AD 03 E8 92  // ...`............
    2070: 12 B3 00 0A C0 74 02 B3 08 C3 8D 9C C0 03 E8 0F  // .....t..........
    2080: 00 8A E8 C3 53 8D 9C C4 03 E8 04 00 5B 8A D8 C3  // ....S.......[...
    2090: 51 E8 6F 12 C0 E1 02 D3 E8 24 0F 59 C3 8D 9C C2  // Q.o......$.Y....
    20A0: 03 E8 5F 12 A8 01 C3 8D 9C B8 03 E8 11 12 C3 8D  // .._.............
    20B0: 9C B8 03 E8 F1 11 C3 33 C9 33 D2 E8 E9 FF 38 D5  // .......3.3....8.
    20C0: 76 02 8A D5 FE C1 E8 6A F2 38 D9 72 EE 33 C9 8A  // v......j.8.r.3..
    20D0: EA 8D 9C 5C 03 E8 CF 11 B1 0B E8 F9 06 C3 E8 43  // ...\...........C
    20E0: F2 8D 9C B8 03 E8 1B 12 66 BA 03 01 80 83 E8 DD  // ........f.......
    20F0: 07 C3 51 53 8D 9C B0 03 E8 C4 11 FE C5 E8 A7 11  // ..QS............
    2100: 80 FD 06 72 07 B5 02 E8 F6 01 33 C9 5B 59 C3 66  // ...r......3.[Y.f
    2110: 33 C0 8D 9C B0 03 E8 4A 11 C3 32 ED E8 65 FF 80  // 3......J..2..e..
    2120: E3 0C C0 EB 02 B7 03 2A FB C0 E3 03 8A EB 80 FB  // .......*........
    2130: 18 72 03 80 CD 20 E8 4B FF 80 E3 03 38 FB 72 02  // .r... .K....8.r.
    2140: 8A DF 80 FB 03 75 03 80 CD 04 0A EB E8 60 FF C3  // .....u.......`..
    2150: E8 D1 F1 8D 9C C0 03 66 BA 02 02 90 45 E8 6E 07  // .......f....E.n.
    2160: C3 E8 C0 F1 66 BA 00 01 90 42 8D 9C B4 03 E8 5D  // ....f....B.....]
    2170: 07 E8 B0 F1 66 BA 03 01 90 45 8D 9C B8 03 E8 4D  // ....f....E.....M
    2180: 07 E8 E4 F1 E8 13 08 75 3B E8 98 F1 66 BA 0A 01  // .......u;...f...
    2190: 90 40 8D 9C BF 03 E8 35 07 8D 9C 28 01 E8 63 11  // .@.....5...(..c.
    21A0: 3C 14 72 20 E8 7D F1 66 BA 10 00 90 4F 8D 9C D0  // <.r .}.f....O...
    21B0: 03 E8 1A 07 E8 6D F1 66 BA 15 01 90 40 8D 9C CC  // .....m.f....@...
    21C0: 03 E8 0A 07 C3 E8 5C F1 66 BA 02 01 80 50 E8 FD  // ......\.f....P..
    21D0: 06 C3 E8 3E F1 8B C2 66 33 D2 B9 8C 0A F7 F1 C3  // ...>...f3.......
    21E0: E8 41 F1 66 BA 00 06 80 50 E8 E2 06 C3 E8 34 F1  // .A.f....P.....4.
    21F0: 66 BA 11 01 80 50 B0 04 E8 D3 06 C3 E8 25 F1 66  // f....P.......%.f
    2200: BA 00 06 90 40 8D 9C C8 03 E8 C2 06 8D 9C C8 03  // ....@...........
    2210: E8 F0 10 C3 E8 BB FF 3C 06 74 0E 3C 0A 74 0A 3C  // .......<.t.<.t.<
    2220: 14 74 06 3C 1E 74 02 33 C0 E8 07 F1 8A E3 80 CC  // .t.<.t.3........
    2230: 80 50 E8 EF F0 58 66 BA 00 01 80 61 E8 8F 06 33  // .P...Xf....a...3
    2240: C9 E8 7A F0 0B C0 74 02 B5 10 8D 9C BC 03 E8 56  // ..z...t........V
    2250: 10 8A C5 E8 CE F0 66 BA 07 01 80 50 E8 6F 06 E8  // ......f....P.o..
    2260: 06 F1 E8 35 07 75 49 8D 9C 48 03 E8 95 10 0A C0  // ...5.uI..H......
    2270: 74 0E E8 AF F0 66 BA 0A 01 80 50 B0 01 E8 4E 06  // t....f....P...N.
    2280: 8D 9C 28 01 E8 7C 10 3C 14 72 25 8D 9C D0 03 E8  // ..(..|.<.r%.....
    2290: 71 10 0B C0 74 1A E8 28 EC 32 C9 8D 9C CC 03 E8  // q...t..(.2......
    22A0: 05 10 8A C5 E8 7D F0 66 BA 15 01 80 50 E8 1E 06  // .....}.f....P...
    22B0: C3 8D 9C B4 03 B9 0E 00 E8 D5 0B E8 A3 FE E8 8F  // ................
    22C0: FE E8 38 FF 3C 01 75 1C E8 D2 FD 74 17 33 C9 E8  // ..8.<.u....t.3..
    22D0: A8 FD 80 FD 07 75 0D FE C1 E8 57 F0 38 D9 75 EF  // .....u....W.8.u.
    22E0: B5 01 EB 02 B5 00 E8 01 00 C3 8D 9C AC 03 B1 02  // ................
    22F0: E8 B4 0F C3 51 8D 9C AC 03 32 C9 E8 A9 0F 59 C3  // ....Q....2....Y.
    2300: 51 8D 9C AC 03 B1 01 E8 9D 0F 59 C3 8D 9C 32 01  // Q.........Y...2.
    2310: E8 F0 0F 24 07 75 15 B9 64 00 8D 9C AC 03 E8 E2  // ...$.u..d.......
    2320: 0F 3C 02 74 03 B9 90 01 E8 AB 0B C3 32 E4 B1 04  // .<.t........2...
    2330: 33 D2 F6 E1 8B C8 E8 A8 0B C3 51 8D 5C 14 E8 C2  // 3.........Q.\...
    2340: 0F 66 C1 E0 10 E8 A4 01 59 C3 53 8D 9C 44 01 E8  // .f......Y.S..D..
    2350: B1 0F 5B C3 53 66 50 8D 9C 44 01 E8 A5 0F 8B C1  // ..[.SfP..D......
    2360: E8 00 0F 66 58 5B C3 53 51 8D 9C 44 01 8A E8 B1  // ...fX[.SQ..D....
    2370: 03 E8 33 0F 59 5B C3 33 C9 E8 0E 0B 38 C1 73 05  // ..3.Y[.3....8.s.
    2380: B5 00 E8 8C 00 B5 00 E8 80 00 FE C1 E8 FB 0A 38  // ...............8
    2390: C1 72 E6 B1 14 8A E9 E8 F3 0A 38 C1 74 05 B5 03  // .r........8.t...
    23A0: E8 E3 01 FE C1 E8 DC 0A 04 14 38 C1 76 E7 C3 83  // ..........8.v...
    23B0: EC 0C 8B EC 0B F6 74 1E E8 02 F8 66 C1 C8 10 66  // ......t....f...f
    23C0: 89 46 00 8D 5C 04 E8 3A 0F 66 89 46 04 8D 5C 08  // .F..\..:.f.F..\.
    23D0: E8 30 0F 88 46 0A 89 4E 08 8C D0 66 C1 E0 10 8B  // .0..F..N...f....
    23E0: C4 BB 2B 00 E8 B9 09 83 C4 0C C3 83 EC 04 8B EC  // ..+.............
    23F0: B0 02 88 46 01 88 4E 00 8C D0 66 C1 E0 10 8B C4  // ...F..N...f.....
    2400: BB 25 00 E8 9A 09 83 C4 04 C3 BB 23 00 E8 08 00  // .%.........#....
    2410: C3 BB 17 00 E8 01 00 C3 83 EC 04 8B EC 89 4E 00  // ..............N.
    2420: 8C D0 66 C1 E0 10 8B C4 E8 75 09 83 C4 04 C3 BB  // ..f......u......
    2430: 22 00 E8 E3 FF C3 BB 27 00 E8 DC FF C3 BB 2C 00  // "......'......,.
    2440: E8 D5 FF C3 E8 BC 0E 66 A9 00 00 FF FF 74 40 83  // .......f.....t@.
    2450: EC 18 8B EC 55 51 B9 04 00 83 C3 02 E8 A4 0E 66  // ....UQ.........f
    2460: 89 46 00 83 C5 04 83 C3 04 E2 F1 83 C3 04 E8 92  // .F..............
    2470: 0E 66 C1 C8 10 66 89 46 00 59 5D 88 4E 14 8C D0  // .f...f.F.Y].N...
    2480: 66 C1 E0 10 8B C4 BB 31 00 E8 14 09 83 C4 18 C3  // f......1........
    2490: E8 35 EE 8D 9C D0 02 E8 69 0E 8A E8 BB 21 00 E8  // .5......i....!..
    24A0: 76 FF C3 8D 9C 3C 03 E8 59 0E 8A F8 E8 F7 ED 8A  // v....<..Y.......
    24B0: DD 53 8D 9C 42 03 E8 4A 0E 8A E8 5B E8 09 EE E8  // .S..B..J...[....
    24C0: A6 EE E8 D5 04 75 02 B3 01 83 EC 04 8B EC 88 4E  // .....u.........N
    24D0: 00 88 7E 01 88 5E 02 88 6E 03 8C D0 66 C1 E0 10  // ..~..^..n...f...
    24E0: 8B C4 BB 2A 00 E8 B8 08 83 C4 04 C3 83 EC 10 8B  // ...*............
    24F0: EC 66 3D F0 FF FF 03 76 06 66 B8 F0 FF FF 03 66  // .f=....v.f.....f
    2500: 8B C8 66 33 C0 66 89 46 04 66 89 46 00 66 89 46  // ..f3.f.F.f.F.f.F
    2510: 08 66 B8 00 00 00 D0 66 0B C1 66 89 46 0C 8C D0  // .f.....f..f.F...
    2520: 66 C1 E0 10 8B C4 BB 35 00 E8 74 08 83 C4 10 C3  // f......5..t.....
    2530: 83 EC 08 8B EC 89 4E 00 66 89 56 02 89 5E 06 8C  // ......N.f.V..^..
    2540: D0 66 C1 E0 10 8B C4 BB 2D 00 E8 53 08 83 C4 08  // .f......-..S....
    2550: C3 3D C0 7F 76 04 B8 C0 7F C3 83 C0 3F 24 C0 C3  // .=..v.......?$..
    2560: 51 E8 9F 0D 66 33 D2 B9 0A 00 F7 F1 8B C8 E8 92  // Q...f3..........
    2570: 0D 03 C1 66 25 FF FF 00 00 59 3D 10 27 73 03 B8  // ...f%....Y=.'s..
    2580: 10 27 C3 32 D2 C3 80 FD 02 75 25 E8 41 EE 66 BB  // .'.2.....u%.A.f.
    2590: 00 08 00 00 E8 9A 00 E8 35 EE 66 BB 03 08 00 00  // ........5.f.....
    25A0: E8 8E 00 66 33 D2 66 BB 01 08 00 00 E8 82 00 C3  // ...f3.f.........
    25B0: 80 FD 03 75 10 66 33 C0 8A C1 66 33 D2 66 BB FF  // ...u.f3...f3.f..
    25C0: 00 00 00 EB 36 51 33 D2 E8 DB EC 8A D5 66 C1 E2  // ....6Q3......f..
    25D0: 10 E8 14 ED 8A F2 8A D1 66 8B C2 66 0D 00 00 00  // ........f..f....
    25E0: 80 E8 4F ED 80 FB 04 76 06 66 0D 00 00 00 08 E8  // ..O....v.f......
    25F0: 85 ED E8 D3 EC 66 33 DB 8A D9 59 83 EC 10 8B EC  // .....f3...Y.....
    2600: 66 89 46 04 66 89 5E 08 66 8B C2 66 33 D2 66 BB  // f.F.f.^.f..f3.f.
    2610: 64 00 00 00 66 F7 E3 66 89 46 00 BB 0C 00 8C D0  // d...f..f.F......
    2620: 66 C1 E0 10 8B C4 E8 77 07 8B EC B3 01 83 C4 10  // f......w........
    2630: C3 83 EC 10 8B EC 66 89 56 00 66 89 5E 04 BB 2E  // ......f.V.f.^...
    2640: 00 8C D0 66 C1 E0 10 8B C4 E8 54 07 B3 01 83 C4  // ...f......T.....
    2650: 10 C3 C3 53 51 66 50 B9 68 74 80 FB 03 74 0B B9  // ...SQfP.ht...t..
    2660: A0 8C 80 FB 00 75 03 B9 78 69 66 33 D2 8B D1 66  // .....u..xif3...f
    2670: 58 59 5B C3 66 52 B3 00 66 F7 C2 00 00 FF FF 75  // XY[.fR..f......u
    2680: 1A 80 FD 13 74 15 80 FD 14 74 10 B3 01 80 FD 0E  // ....t....t......
    2690: 74 09 B3 03 80 F9 03 74 02 B3 02 66 5A C3 B5 11  // t......t...fZ...
    26A0: 80 FA 23 74 07 80 FA 22 74 02 B5 00 C3 B5 02 80  // ..#t..."t.......
    26B0: FA 23 74 07 80 FA 22 74 02 B3 01 C3 32 C9 80 FD  // .#t..."t....2...
    26C0: 00 75 08 C7 46 00 0B 01 B1 01 C3 50 33 C0 E8 9E  // .u..F......P3...
    26D0: 01 04 14 89 46 00 58 B1 01 C3 C3 8B DA B7 22 80  // ....F.X.......".
    26E0: FE 21 74 02 B7 21 C3 0C 01 C3 E8 16 0C 66 C1 E8  // .!t..!.......f..
    26F0: 10 0B C0 74 1C 53 83 C3 06 E8 07 0C 5B 3D E0 01  // ...t.S......[=..
    2700: 72 0F 53 83 C3 18 E8 FA 0B 5B A8 80 75 03 0C 01  // r.S......[..u...
    2710: C3 32 C0 C3 B5 0C C3 B5 02 C3 50 E8 51 01 B1 03  // .2........P.Q...
    2720: 0A C0 74 04 B1 08 02 C8 58 C3 80 FA 22 75 05 C7  // ..t.....X..."u..
    2730: 46 00 78 69 C3 E8 1A 01 80 FD FF 74 35 83 EC 0C  // F.xi.......t5...
    2740: 8B EC 88 4E 01 88 6E 00 80 F9 0F 75 05 E8 4F 00  // ...N..n....u..O.
    2750: EB 0F 80 F9 10 75 0A 8D 9C 48 03 E8 A5 0B 88 46  // .....u...H.....F
    2760: 02 8C D0 66 C1 E0 10 8B C4 BB 04 00 E8 31 06 83  // ...f.........1..
    2770: C4 0C C3 83 EC 10 8B EC 88 4E 01 E8 75 EB 81 E2  // .........N..u...
    2780: 00 07 FE CE C0 E6 04 88 76 00 E8 12 00 8C D0 66  // ........v......f
    2790: C1 E0 10 8B C4 BB 32 00 E8 05 06 83 C4 10 C3 66  // ......2........f
    27A0: 53 E8 6F EB 66 8B C2 66 33 D2 66 BB 8C 0A 00 00  // S.o.f..f3.f.....
    27B0: 66 F7 F3 66 5B 8A E8 88 6E 09 8D 9C 40 03 E8 42  // f..f[...n...@..B
    27C0: 0B 88 46 02 88 66 03 66 C1 E8 10 88 46 08 E8 31  // ..F..f.f....F..1
    27D0: EB 66 89 56 04 C3 83 EC 20 8B EC 80 F9 04 75 0A  // .f.V.... .....u.
    27E0: 88 4E 01 32 C0 88 46 00 EB 56 E8 FB EA E8 7F 00  // .N.2..F..V......
    27F0: 88 46 00 88 4E 01 E8 6F EB 88 56 0A 80 F9 01 74  // .F..N..o..V....t
    2800: 18 80 F9 0B 75 3A 8D 9C 5C 03 E8 F6 0A 88 46 02  // ....u:..\.....F.
    2810: E8 EF EA 66 89 56 04 EB 27 E8 08 EB 88 6E 08 E8  // ...f.V..'....n..
    2820: E0 EA 66 89 56 04 E8 0A EB 88 5E 03 E8 77 EA 88  // ..f.V.....^..w..
    2830: 6E 02 51 E8 1C 00 8A CD B0 01 D2 E0 59 88 46 09  // n.Q.........Y.F.
    2840: 8C D0 66 C1 E0 10 8B C4 BB 4C 00 E8 52 05 83 C4  // ..f......L..R...
    2850: 20 C3 8D 9C 3C 03 E8 AA 0A 32 ED 3C 03 74 0C 3C  //  ...<....2.<.t.<
    2860: 09 72 09 3C 0E 77 05 2C 08 8A E8 C3 B5 FF C3 52  // .r.<.w.,.......R
    2870: 32 C0 80 EE 21 80 FA 1E 74 10 B0 02 80 FA 20 74  // 2...!...t..... t
    2880: 09 B0 04 80 FA 21 74 02 B0 06 02 C6 5A C3 83 EC  // .....!t.....Z...
    2890: 08 8C D0 66 C1 E0 10 8B C4 BB 4B 00 E8 01 05 83  // ...f......K.....
    28A0: C4 08 C3 83 EC 08 8B EC 89 7E 00 89 5E 02 89 56  // .........~..^..V
    28B0: 04 89 4E 06 8C D0 66 C1 E0 10 8B C4 BB 36 00 E8  // ..N...f......6..
    28C0: DE 04 8B EC 8B 5E 02 8A 7E 01 83 C4 08 C3 56 33  // .....^..~.....V3
    28D0: F6 66 F7 C2 00 00 80 00 75 0A 50 33 C0 8A C6 8B  // .f......u.P3....
    28E0: F0 32 F6 58 53 BB 04 1F E8 78 09 66 8B C2 BB 00  // .2.XS....x.f....
    28F0: 1F E8 6F 09 5B 66 F7 C2 00 00 10 00 75 02 33 DB  // ..o.[f......u.3.
    2900: 8B D3 66 C1 E2 10 BA 00 1F 83 EC 08 8B EC 66 89  // ..f...........f.
    2910: 56 00 88 4E 04 8A C5 FE C8 88 46 07 C6 46 05 00  // V..N......F..F..
    2920: C6 46 06 00 8C D0 66 C1 E0 10 8B C4 BB 4E 00 E8  // .F....f......N..
    2930: 6E 04 8B EC 8A 5E 05 8A 7E 06 83 C4 08 0A DB 74  // n....^..~......t
    2940: 32 51 B9 90 01 80 FB 20 74 05 80 FB 80 75 13 B9  // 2Q..... t....u..
    2950: 0A 00 8B C6 0A C0 74 0A B9 90 01 3C 01 74 03 B9  // ......t....<.t..
    2960: E8 03 E8 71 05 59 8B C6 FE C4 8B F0 80 FC 06 76  // ...q.Y.........v
    2970: 98 0A DB 5E C3 8D 5C 04 E8 88 09 8B D0 B5 02 E8  // ...^..\.........
    2980: 14 00 74 11 B5 01 80 FA 13 75 0A E8 61 00 80 FA  // ..t......u..a...
    2990: 13 75 02 B5 02 C3 80 FA 14 C3 E8 F9 FF 74 03 80  // .u...........t..
    29A0: FA 0E C3 80 FA 05 C3 80 FA 02 74 03 80 FA 04 C3  // ..........t.....
    29B0: 80 FA 01 74 03 80 FA 02 C3 80 FA 02 75 03 B2 01  // ...t........u...
    29C0: C3 80 FA 04 75 03 B2 03 C3 C3 B5 08 E8 D8 FF 74  // ....u..........t
    29D0: 02 B5 04 C3 8D 5C 09 E8 29 09 8A C8 0A C9 75 03  // .....\..).....u.
    29E0: 32 C0 C3 B5 02 E8 7C 04 8A C5 24 02 D0 E8 C3 8D  // 2.....|...$.....
    29F0: 5C 08 E8 0E 09 8A D0 B6 01 83 EC 10 8B EC 89 56  // \..............V
    2A00: 02 8C D0 66 C1 E0 10 8B C4 BB 4F 00 E8 91 03 8B  // ...f......O.....
    2A10: EC 8A 56 04 83 C4 10 C3 53 83 C3 4C E8 B2 08 5B  // ..V.....S..L...[
    2A20: C3 53 83 C3 4C E8 04 08 5B C3 56 E8 2F 03 8B 44  // .S..L...[.V./..D
    2A30: 38 83 7D 20 00 5E C3 52 50 0F BC D8 32 FF 80 FB  // 8.} .^.RP...2...
    2A40: 01 75 05 BB 00 24 EB 0C FE CB B8 00 04 F7 E3 05  // .u...$..........
    2A50: 00 20 8B D8 58 5A C3 57 E8 56 00 74 0A 8B 5D 02  // . ..XZ.W.V.t..].
    2A60: E8 08 00 0B DB 5F C3 33 DB 5F C3 52 51 0B DB 74  // ....._.3._.RQ..t
    2A70: 1B 56 E8 CF 02 03 DE 5E 33 C9 8A 4F 01 80 3F FF  // .V.....^3..O..?.
    2A80: 74 08 3A 07 74 06 03 D9 EB F0 33 DB 0B DB 59 5A  // t.:.t.....3...YZ
    2A90: C3 56 51 E8 AE 02 32 C9 8D 7C 08 3B 5D 04 74 0C  // .VQ...2..|.;].t.
    2AA0: 83 C7 10 FE C1 3A 4C 06 72 F1 33 FF 0B FF 59 5E  // .....:L.r.3...Y^
    2AB0: C3 56 51 E8 8E 02 32 C9 8D 7C 08 3B 1D 74 0C 83  // .VQ...2..|.;.t..
    2AC0: C7 10 FE C1 3A 4C 06 72 F2 33 FF 0B FF 59 5E C3  // ....:L.r.3...Y^.
    2AD0: 56 51 E8 6F 02 32 C9 8D 7C 08 3B 45 0C 74 0C 83  // VQ.o.2..|.;E.t..
    2AE0: C7 10 FE C1 3A 4C 06 72 F1 33 FF 0B FF 59 5E C3  // ....:L.r.3...Y^.
    2AF0: 57 50 E8 DB FF 8A C3 8B 5D 02 E8 6E FF 58 5F C3  // WP......]..n.X_.
    2B00: 53 32 C9 B3 01 E8 E8 FF 74 03 8A 4F 02 0A C9 5B  // S2......t..O...[
    2B10: C3 53 32 ED B3 02 E8 D7 FF 74 03 8A 6F 02 0A ED  // .S2......t..o...
    2B20: 5B C3 50 57 8B DA E8 68 FF 75 04 33 DB EB 0D B0  // [.PW...h.u.3....
    2B30: 14 8B 5D 08 E8 34 FF 74 F2 8B 5F 02 5F 58 C3 66  // ..]..4.t.._._X.f
    2B40: 50 53 51 57 8D 1C 66 25 FF FF 00 00 E8 14 07 8B  // PSQW..f%........
    2B50: D8 E8 3B 00 23 C3 74 31 E8 75 FF 0B FF 74 2A 66  // ..;.#.t1.u...t*f
    2B60: 50 66 8B 45 04 8D 5C 0C E8 F8 06 66 33 C0 8B 05  // Pf.E..\....f3...
    2B70: 8D 5C 04 E8 ED 06 66 58 E8 85 FF E8 93 FF 8D 5C  // .\....fX.......\
    2B80: 08 66 33 C0 8B C1 E8 DA 06 5F 59 5B 66 58 C3 56  // .f3......_Y[fX.V
    2B90: E8 B1 01 8B 44 04 5E C3 56 E8 A8 01 89 44 04 5E  // ....D.^.V....D.^
    2BA0: C3 E8 CE 01 8B F7 83 C6 38 BB 00 2C B9 23 00 E8  // ........8..,.#..
    2BB0: 0C 03 E8 01 00 C3 51 66 57 56 E8 87 01 66 33 FF  // ......QfWV...f3.
    2BC0: 8D 7C 08 33 C0 E8 D0 FF 32 C9 8B 15 B8 00 70 23  // .|.3....2.....p#
    2BD0: C2 3D 00 30 75 54 80 FA 15 74 0B E8 B1 FF 0B 45  // .=.0uT...t.....E
    2BE0: 0C E8 B4 FF EB 44 E8 5E 00 89 45 0C 0B C0 75 04  // .....D.^..E...u.
    2BF0: 89 05 EB 36 E8 98 FF 0B 45 0C E8 9B FF 83 7D 06  // ...6....E.....}.
    2C00: 00 74 16 E8 4A 00 89 45 06 0B C0 74 0C 83 7D 06  // .t..J..E...t..}.
    2C10: 00 74 06 8B 5C 0A E8 BB 00 E8 40 00 89 05 8B 5D  // .t..\.....@....]
    2C20: 02 E8 B0 00 8B 5D 08 E8 CB 00 83 C7 10 FE C1 3A  // .....].........:
    2C30: 4C 06 72 96 5E 66 5F 59 C3 08 00 80 00 00 02 00  // L.r.^f_Y........
    2C40: 04 00 08 40 00 00 00 53 E8 58 00 E8 B5 06 5B C3  // ...@...S.X....[.
    2C50: 53 E8 4F 00 83 C3 08 E8 A9 06 5B C3 53 57 52 E8  // S.O.......[.SWR.
    2C60: 41 00 83 C3 04 E8 9B 06 8B D0 E8 3A FD 75 16 8B  // A..........:.u..
    2C70: 5D 04 8B D3 E8 64 FA 57 E8 16 FE 5F 75 07 8B D0  // ]....d.W..._u...
    2C80: E8 36 FD 8B C2 5A 5F 5B C3 E8 D0 FF 66 C1 E8 10  // .6...Z_[....f...
    2C90: B4 11 E8 25 00 C3 E8 C3 FF 66 C1 E8 18 B4 10 E8  // ...%.....f......
    2CA0: 18 00 C3 51 52 33 C9 8A CE 80 E1 07 49 B8 10 00  // ...QR3......I...
    2CB0: F7 E1 BB 14 2C 03 D8 5A 59 C3 57 53 51 33 C9 8A  // ....,..ZY.WSQ3..
    2CC0: C8 8A C4 BB 03 71 E8 8E FD 83 C3 02 03 D9 8A 07  // .....q..........
    2CD0: 59 5B 5F C3 50 53 B0 01 E8 90 FD 74 15 E8 A9 FF  // Y[_.PS.....t....
    2CE0: 88 47 02 5B 53 B0 02 E8 81 FD 74 06 E8 A7 FF 88  // .G.[S.....t.....
    2CF0: 47 02 5B 58 C3 51 50 B0 14 E8 6F FD 74 3A 53 E8  // G.[X.QP...o.t:S.
    2D00: A1 FF 83 C3 0C E8 FB 05 8B C8 5B F6 C1 01 74 05  // ..........[...t.
    2D10: 66 83 67 02 FD F6 C1 80 74 05 66 83 67 02 F7 F7  // f.g.....t.f.g...
    2D20: C1 00 01 74 08 66 81 4F 02 00 01 00 00 F7 C1 00  // ...t.f.O........
    2D30: 02 74 05 66 83 67 02 FB 58 59 C3 BF AA 01 8B 3D  // .t.f.g..XY.....=
    2D40: 8B 7D 0C C3 BE AA 01 8B 34 8B 74 30 C3 1E 0E 1F  // .}......4.t0....
    2D50: BF AA 01 8B 3D 8B 7D 0E 83 C7 04 1F C3 BE AA 01  // ....=.}.........
    2D60: 8B 34 8B 74 10 C3 BF AA 01 8B 3D 8B 7D 26 83 C7  // .4.t......=.}&..
    2D70: 04 C3 BF AA 01 8B 3D 8B 7D 40 C3 BE AA 01 8B 34  // ......=.}@.....4
    2D80: 8B 74 1A C3 BE AA 01 8B 34 8B 74 3A C3 BF AA 01  // .t......4.t:....
    2D90: 8B 3D 8B 7D 0A 83 C7 04 B9 0C 00 C3 E8 01 00 CB  // .=.}............
    2DA0: 83 EC 06 8B EC 89 46 00 66 33 C0 C6 46 04 00 89  // ......F.f3..F...
    2DB0: 46 02 06 52 8A D3 8B C5 E8 8A 17 5A 07 83 C4 06  // F..R.......Z....
    2DC0: C3 E8 77 FF 66 F7 45 10 01 00 00 00 C3 50 E8 6A  // ..w.f.E......P.j
    2DD0: FF B8 01 00 09 45 10 58 C3 E8 5F FF 88 45 10 C3  // .....E.X.._..E..
    2DE0: 66 53 83 EC 48 8B EC 66 89 5E 00 66 89 4E 04 8C  // fS..H..f.^.f.N..
    2DF0: D0 66 C1 E0 10 8B C4 BB 00 00 E8 A3 FF 83 C4 48  // .f.............H
    2E00: 66 5B E8 6A 01 E8 A4 01 83 EC 1C 8B EC C6 46 01  // f[.j..........F.
    2E10: 07 8C D0 66 C1 E0 10 8B C4 BB 0D 00 E8 81 FF 83  // ...f............
    2E20: C4 1C E8 0E 00 BB 04 00 E8 ED FB 66 C1 E8 10 E8  // ...........f....
    2E30: A7 FF C3 83 EC 1C 8B EC C6 46 01 08 8C D0 66 C1  // .........F....f.
    2E40: E0 10 8B C4 BB 0D 00 E8 56 FF 83 C4 1C C3 E8 EA  // ........V.......
    2E50: FE 66 8B 5D 08 66 8B 4D 0C C3 56 E8 26 FF 66 8B  // .f.].f.M..V.&.f.
    2E60: 44 08 5E C3 83 EC 04 8B EC 89 4E 00 8C D0 66 C1  // D.^.......N...f.
    2E70: E0 10 8B C4 BB 38 00 E8 26 FF 8B EC 8A 6E 02 83  // .....8..&....n..
    2E80: C4 04 C3 C3 B0 05 C3 B0 01 C3 B0 04 C3 B0 08 C3  // ................
    2E90: 53 66 50 66 33 C0 E8 CA 03 83 C3 04 E2 F8 66 58  // SfPf3.........fX
    2EA0: 5B C3 32 C0 C3 FC E8 5A 04 66 C1 CB 10 E8 B3 03  // [.2....Z.f......
    2EB0: 66 C1 CB 10 66 81 C3 04 00 04 00 E2 E9 C3 FC 66  // f...f..........f
    2EC0: AD E8 9F 03 83 C3 04 E2 F6 C3 FC E8 35 04 66 AB  // ............5.f.
    2ED0: 83 C3 04 E2 F6 C3 66 50 B8 30 00 E8 10 00 66 58  // ......fP.0....fX
    2EE0: C3 66 50 B8 C0 5D D1 E1 E8 03 00 66 58 C3 52 F7  // .fP..].....fX.R.
    2EF0: E1 8B CA E8 26 02 66 53 8B D9 66 C1 E3 10 8B D8  // ....&.fS..f.....
    2F00: 66 B8 04 B1 03 00 B2 00 66 EF B2 04 66 33 C0 66  // f.......f...f3.f
    2F10: EF 66 B8 08 B1 03 00 B2 00 66 EF B2 04 66 ED 33  // .f.......f...f.3
    2F20: C9 66 03 D8 73 0A 66 ED 66 A9 00 00 00 80 75 F6  // .f..s.f.f.....u.
    2F30: 66 ED 66 3B C3 73 0C 66 C1 E8 10 3B C1 72 04 8B  // f.f;.s.f...;.r..
    2F40: C8 EB ED 66 5B 5A C3 BB 42 EC E8 84 03 66 33 D2  // ...f[Z..B....f3.
    2F50: 66 BB 30 00 00 00 66 F7 F3 C3 66 50 53 BB 07 00  // f.0...f...fPS...
    2F60: E8 B5 FA 25 00 02 35 00 02 0B C0 5B 66 58 C3 66  // ...%..5....[fX.f
    2F70: 51 B3 01 E8 80 01 E8 02 FE 66 33 C9 8B 4C 08 66  // Q........f3..L.f
    2F80: C1 E0 0A 0B C9 75 03 B9 20 00 66 2B C1 E8 EB FD  // .....u.. .f+....
    2F90: 66 89 44 04 89 4C 08 66 59 C3 56 1E 0E 1F E8 DA  // f.D..L.fY.V.....
    2FA0: FD 66 8B 44 04 66 C1 E0 0A 1F 5E C3 E8 C0 FF 06  // .f.D.f....^.....
    2FB0: E8 BF FD 0E 07 BB 00 78 E8 48 03 66 3B 05 75 07  // .......x.H.f;.u.
    2FC0: B9 00 01 FC E8 03 FF E8 A8 FD BE AA 01 8B 34 8B  // ..............4.
    2FD0: 74 14 8B 45 14 89 44 0C E8 82 FD 0B F6 74 4F 8B  // t..E..D......tO.
    2FE0: 45 28 89 44 20 8A 45 33 88 44 38 F6 45 26 08 74  // E(.D .E3.D8.E&.t
    2FF0: 17 8A 45 26 C0 E8 04 88 44 24 80 64 24 FD F6 45  // ..E&....D$.d$..E
    3000: 26 01 74 04 80 4C 24 02 57 83 C7 38 8A 85 87 00  // &.t..L$.W..8....
    3010: 88 44 3B 5F 66 8B 45 18 89 44 28 B9 07 00 8D 5D  // .D;_f.E..D(....]
    3020: 2C 8A 07 0A C0 74 03 88 44 2C 43 46 E2 F3 E8 53  // ,....t..D,CF...S
    3030: FD 8B 45 20 89 44 10 8B 45 22 89 44 12 8B 45 1C  // ..E .D..E".D..E.
    3040: 89 44 14 8B 45 1E 89 44 16 BB 04 71 B0 09 E8 06  // .D..E..D...q....
    3050: FA 74 0C 57 83 C7 38 8A 85 85 00 88 47 04 5F 07  // .t.W..8.....G._.
    3060: C3 BE AA 01 8B 34 8B 74 1E 83 C6 04 B9 26 00 C3  // .....4.t.....&..
    3070: 56 E8 E9 FC 8A 6C 33 5E C3 56 E8 E0 FC 53 81 C3  // V....l3^.V...S..
    3080: 09 01 E8 7E 02 8A E8 5B 53 81 C3 00 01 E8 73 02  // ...~...[S.....s.
    3090: 5B 8A C5 66 89 44 34 5E C3 56 E8 C0 FC 66 8B 44  // [..f.D4^.V...f.D
    30A0: 34 53 81 C3 08 01 B1 01 8A E8 E8 FA 01 5B 53 81  // 4S...........[S.
    30B0: C3 00 01 B1 01 8A EC E8 ED 01 5B 53 81 C3 02 01  // ..........[S....
    30C0: 66 C1 E8 10 E8 B4 01 5B 5E C3 56 E8 8F FC 8B FE  // f......[^.V.....
    30D0: 83 C7 04 5E C3 56 E8 84 FC 8A 44 24 80 FD 00 74  // ...^.V....D$...t
    30E0: 05 88 6C 33 0C 02 88 44 24 5E C3 32 C0 C3 E8 81  // ..l3...D$^.2....
    30F0: FC 66 8B 45 08 C3 66 53 83 EC 04 8B EC 8C D0 66  // .f.E..fS.......f
    3100: C1 E0 10 8B C4 66 89 5E 00 BB 06 00 E8 91 FC 8B  // .....f.^........
    3110: EC 66 8B 46 00 83 C4 04 66 5B C3 00 66 50 8C C8  // .f.F....f[..fP..
    3120: 3D 00 C0 75 0C BA C3 03 EC 8A F0 0A F6 74 02 EB  // =..u.........t..
    3130: 0E 53 2E 8B 1E 14 00 B2 20 E8 D6 00 8A F4 5B 32  // .S...... .....[2
    3140: D2 66 ED 66 58 C3 2E 8B 1E 14 00 C3 0B C9 75 1A  // .f.fX.........u.
    3150: 4B 74 16 43 3B DA 77 09 8B C8 8B C2 2B D2 F7 F3  // Kt.C;.w.....+...
    3160: 91 F7 F3 8B DA 8B D1 2B C9 C3 3B CA 72 1A 75 10  // .......+..;.r.u.
    3170: 3B D8 77 0C 2B C3 8B D8 2B C9 2B D2 B8 01 00 C3  // ;.w.+...+.+.....
    3180: 2B C9 2B DB 93 87 CA C3 55 56 2B F6 8B EE 03 DB  // +.+.....UV+.....
    3190: 13 C9 72 11 45 3B CA 72 F5 77 04 3B D8 76 EF F8  // ..r.E;.r.w.;.v..
    31A0: 13 F6 4D 78 20 D1 D9 D1 DB 2B C3 1B D1 F5 72 F0  // ..Mx ....+....r.
    31B0: 03 F6 4D 78 0C D1 E9 D1 DB 03 C3 13 D1 73 F1 EB  // ..Mx.........s..
    31C0: DF 03 C3 13 D1 8B D8 8B CA 8B C6 33 D2 5E 5D C3  // ...........3.^].
    31D0: 93 50 92 0B C0 74 02 F7 E2 91 0B C0 74 04 F7 E3  // .P...t......t...
    31E0: 03 C8 58 F7 E3 03 D1 C3 52 66 50 B4 80 8A C7 66  // ..X.....RfP....f
    31F0: C1 E0 10 8A E3 8A C2 24 FC BA F8 0C 66 EF 66 58  // .......$....f.fX
    3200: 5A C3 52 BA FC 0C 66 ED 5A C3 52 BA FC 0C 66 EF  // Z.R...f.Z.R...f.
    3210: 5A C3 E8 31 FF 9C FA E8 CE FF E8 E5 FF 9D C3 E8  // Z..1............
    3220: 24 FF 9C FA E8 C1 FF E8 E0 FF 9D C3 52 66 53 66  // $...........RfSf
    3230: 50 E8 06 00 66 58 66 5B 5A C3 66 C1 E3 10 66 C1  // P...fXf[Z.f...f.
    3240: EB 0E E8 D7 FE E8 93 01 C3 66 50 66 C1 E3 10 66  // .........fPf...f
    3250: C1 EB 10 E8 44 FD 66 03 D8 66 81 CB 00 00 00 80  // ....D.f..f......
    3260: 66 58 C3 52 66 53 E8 04 00 66 5B 5A C3 66 50 E8  // fX.RfS...f[Z.fP.
    3270: AA FE E8 D4 FF E8 63 01 66 58 C3 52 51 66 53 66  // ......c.fX.RQfSf
    3280: 50 8A CB 80 E3 FC 80 E1 03 C0 E1 03 E8 8D FE E8  // P...............
    3290: B7 FF E8 2D 01 66 D3 C8 58 50 66 D3 C0 E8 3B 01  // ...-.f..XPf...;.
    32A0: 66 58 66 5B 59 5A C3 66 50 51 C0 E1 03 E8 53 00  // fXf[YZ.fPQ....S.
    32B0: 66 D3 C8 8A C5 66 D3 C0 E8 A8 FF 59 66 58 C3 66  // f....f.....YfX.f
    32C0: 50 51 C0 E1 03 E8 3B 00 66 D3 C8 59 8A E8 66 58  // PQ....;.f..Y..fX
    32D0: C3 E8 5F 00 C3 E8 44 FE 66 C1 E3 10 66 C1 EB 0E  // .._...D.f...f...
    32E0: E8 DF 00 C3 E8 35 FE 66 C1 E3 02 E8 D4 00 C3 52  // .....5.f.......R
    32F0: 66 53 E8 04 00 66 5B 5A C3 E8 20 FE E8 4A FF E8  // fS...f[Z.. ..J..
    3300: C0 00 C3 51 66 52 8A EB 8A CB 80 E1 03 C0 E1 03  // ...QfR..........
    3310: 80 E3 FC E8 D9 FF 80 F9 00 74 14 66 8B D0 83 C3  // .........t.f....
    3320: 04 E8 CB FF 83 EB 04 66 92 66 0F AD D0 8A DD 66  // .......f.f.....f
    3330: 5A 59 C3 52 66 53 E8 9C FF 66 5B 5A C3 52 66 53  // ZY.RfS...f[Z.RfS
    3340: E8 A1 FF 66 5B 5A C3 66 50 55 52 66 50 8B EC 8B  // ...f[Z.fPURfP...
    3350: 56 0C 89 56 08 E8 C4 FD B2 00 66 ED 66 89 46 0A  // V..V......f.f.F.
    3360: 66 58 5A 5D C3 66 50 55 52 66 50 8B EC 8B 56 0C  // fXZ].fPURfP...V.
    3370: 89 56 08 E8 A6 FD 2E A1 F9 01 B2 18 EF B2 00 66  // .V.............f
    3380: ED 66 89 46 0A 66 58 5A 5D C3 66 50 55 52 8B EC  // .f.F.fXZ].fPUR..
    3390: E8 89 FD B2 00 66 8B 46 0A 66 EF 8B 56 08 89 56  // .....f.F.f..V..V
    33A0: 0C 66 8B 46 04 66 89 46 08 5A 5D 66 58 66 58 C3  // .f.F.f.F.Z]fXfX.
    33B0: 66 50 52 E8 66 FD B2 18 66 ED 2E A3 F9 01 5A 66  // fPR.f...f.....Zf
    33C0: 58 C3 66 81 FB FF 00 00 00 77 04 8A D3 EB 09 66  // X.f......w.....f
    33D0: 8B C3 B2 00 66 EF B2 04 66 ED C3 66 81 FB FF 00  // ....f...f..f....
    33E0: 00 00 77 04 8A D3 EB 0A 66 93 B2 00 66 EF 66 93  // ..w.....f...f.f.
    33F0: B2 04 66 EF C3 C3 C3 55 8B EC 53 51 8B F0 26 8B  // ..f....U..SQ..&.
    3400: 5C 14 26 8B 4C 16 E8 28 00 8D 66 FC 59 5B 5D C3  // \.&.L..(..f.Y[].
    3410: 53 51 8B F0 26 8B 5C 24 33 C9 E8 14 00 59 5B C3  // SQ..&.\$3....Y[.
    3420: 55 8B EC 53 51 8B F0 26 8B 5C 08 26 8B 4C 0A EB  // U..SQ..&.\.&.L..
    3430: D5 52 56 57 C8 06 00 00 8B F0 89 4E FE 8C D0 8E  // .RVW.......N....
    3440: C0 26 8B 7C 26 8A 45 01 32 E4 B9 20 00 2B C8 B8  // .&.|&.E.2.. .+..
    3450: FF FF 8B D0 E3 06 D1 EA D1 D8 E2 FA 8A 4D 03 32  // .............M.2
    3460: ED 8B FA E3 06 D1 E0 D1 D7 E2 FA F7 D0 F7 D7 26  // ...............&
    3470: 21 44 1C 26 21 7C 1E 8C D0 8E C0 26 8B 7C 26 8A  // !D.&!|.....&.|&.
    3480: 4D 01 32 ED B8 20 00 2B C1 8B C8 66 C7 46 FA FF  // M.2.. .+...f.F..
    3490: FF FF FF E3 08 D1 6E FC D1 5E FA E2 F8 8A 4D 02  // ......n..^....M.
    34A0: 32 ED 8B C3 8B 56 FE E3 06 D1 EA D1 D8 E2 FA 23  // 2....V.........#
    34B0: 46 FA 23 56 FC 8A 4D 03 32 ED E3 06 D1 E0 D1 D2  // F.#V..M.2.......
    34C0: E2 FA 26 09 44 1C 26 09 54 1E C9 5F 5E 5A C3 55  // ..&.D.&.T.._^Z.U
    34D0: 8B EC 53 51 52 57 50 8B D8 26 8B 7F 26 8A 45 01  // ..SQRWP..&..&.E.
    34E0: 32 E4 B9 20 00 2B C8 B8 FF FF 8B D0 E3 06 D1 EA  // 2.. .+..........
    34F0: D1 D8 E2 FA 8A 4D 02 88 4E F6 C6 46 F7 00 8B FA  // .....M..N..F....
    3500: 8B 4E F6 E3 06 D1 E0 D1 D7 E2 FA 26 09 47 1C 26  // .N.........&.G.&
    3510: 09 7F 1E 8D 66 F8 5F 5A E9 F1 FE 53 51 52 57 8B  // ....f._Z...SQRW.
    3520: D8 8C D0 8E C0 26 8B 77 26 8A 4C 01 32 ED B8 20  // .....&.w&.L.2.. 
    3530: 00 2B C1 8B C8 BE FF FF 8B D6 E3 06 D1 EA D1 DE  // .+..............
    3540: E2 FA 26 8B 7F 26 8A 4D 02 32 ED 8B C6 E3 06 D1  // ..&..&.M.2......
    3550: E0 D1 D2 E2 FA F7 D0 F7 D2 26 21 47 1C 26 21 57  // .........&!G.&!W
    3560: 1E 5F E9 CC 05 53 56 8B D8 8C D2 8E C2 26 8B 77  // ._...SV......&.w
    3570: 26 80 3C 00 74 73 80 3C 01 75 58 8A 44 01 32 E4  // &.<.ts.<.uX.D.2.
    3580: 26 83 7F 1E 00 75 4C 26 3B 47 1C 75 46 8A 04 6B  // &....uL&;G.uF..k
    3590: F0 03 8A 84 BE 91 26 01 47 26 8C D0 8E C0 26 8B  // ......&.G&....&.
    35A0: 77 26 80 3C 09 74 17 8A 04 32 E4 6B F0 03 8B C3  // w&.<.t...2.k....
    35B0: FF 94 BC 91 26 8B 77 26 8A 04 32 E4 EB D1 8B 44  // ....&.w&..2....D
    35C0: 01 26 29 47 26 26 FF 47 26 26 8B 47 1C 26 8B 77  // .&)G&&.G&&.G.&.w
    35D0: 1E EB 1A 26 8B 77 26 8A 04 32 E4 6B F0 03 8A 84  // ...&.w&..2.k....
    35E0: BE 91 26 01 47 26 E9 80 FF 33 C0 33 F6 8B D6 5E  // ..&.G&...3.3...^
    35F0: 5B C3 53 51 52 56 8B D8 8D 77 35 26 8B 54 02 26  // [.SQRV...w5&.T.&
    3600: 89 57 14 26 C7 47 16 00 00 8B F0 26 8B 47 20 33  // .W.&.G.....&.G 3
    3610: D2 26 01 47 14 26 11 54 16 8C D1 8E C1 26 F6 47  // .&.G.&.T.....&.G
    3620: 2F 06 0F 85 0A 05 26 80 7F 34 00 75 22 26 8B 77  // /.....&..4.u"&.w
    3630: 16 26 0B 77 14 75 10 26 D1 67 08 26 D1 57 0A 26  // .&.w.u.&.g.&.W.&
    3640: D1 67 08 26 D1 57 0A 8B C3 E8 79 11 E9 E1 04 26  // .g.&.W....y....&
    3650: 8A 47 34 32 E4 05 80 00 99 26 89 47 1C 26 89 57  // .G42.....&.G.&.W
    3660: 1E 8B C3 E8 FF FE E9 C7 04 53 56 8B D8 8D 77 35  // .........SV...w5
    3670: 26 8A 44 02 32 E4 C1 E0 02 26 8B 37 26 8B 34 03  // &.D.2....&.7&.4.
    3680: F0 26 8B 47 08 26 8B 5F 0A 26 89 04 26 89 5C 02  // .&.G.&._.&..&.\.
    3690: 5E 5B C3 53 52 56 8B D8 8C D0 8D 77 35 8E C0 26  // ^[.SRV.....w5..&
    36A0: 8A 54 02 80 FA 40 73 21 26 8B 77 02 32 F6 C1 E2  // .T...@s!&.w.2...
    36B0: 02 26 8B 74 04 03 F2 26 8B 57 08 26 8B 47 0A 26  // .&.t...&.W.&.G.&
    36C0: 89 14 26 89 44 02 E9 7F 00 80 FA 41 75 12 26 8B  // ..&.D......Au.&.
    36D0: 47 08 26 8B 57 0A 26 89 47 10 26 89 57 12 EB 68  // G.&.W.&.G.&.W..h
    36E0: 80 FA 40 75 12 26 8B 47 08 26 8B 57 0A 26 89 47  // ..@u.&.G.&.W.&.G
    36F0: 0C 26 89 57 0E EB 51 80 FA 42 75 0A 26 8B 47 08  // .&.W..Q..Bu.&.G.
    3700: 26 89 47 22 EB 42 80 FA 43 75 0A 26 8A 47 08 26  // &.G".B..Cu.&.G.&
    3710: 88 47 33 EB 33 80 FA 46 75 12 26 8B 57 08 26 8B  // .G3.3..Fu.&.W.&.
    3720: 47 0A 26 89 57 18 26 89 47 1A EB 1C 80 FA 47 75  // G.&.W.&.G.....Gu
    3730: 0A 26 8B 47 08 26 89 47 24 EB 0D 80 FA 48 75 08  // .&.G.&.G$....Hu.
    3740: 26 8B 47 08 26 89 47 20 5E 5A 5B C3 53 56 8B D8  // &.G.&.G ^Z[.SV..
    3750: 8D 77 35 26 8A 44 02 32 E4 26 89 47 14 26 C7 47  // .w5&.D.2.&.G.&.G
    3760: 16 00 00 5E 5B C3 53 56 8B D8 26 8B 77 02 26 8B  // ...^[.SV..&.w.&.
    3770: 74 02 8A 04 32 E4 26 89 47 14 26 C7 47 16 00 00  // t...2.&.G.&.G...
    3780: 26 8B 5F 02 26 FF 47 02 5E 5B C3 53 56 8B D8 26  // &._.&.G.^[.SV..&
    3790: 8B 77 02 26 8B 74 02 8B 34 26 89 77 14 26 C7 47  // .w.&.t..4&.w.&.G
    37A0: 16 00 00 26 8B 5F 02 26 83 47 02 02 5E 5B C3 53  // ...&._.&.G..^[.S
    37B0: 56 8B D8 26 8B 77 02 26 8B 74 02 8B 04 8B 74 02  // V..&.w.&.t....t.
    37C0: 26 89 47 14 26 89 77 16 26 8B 5F 02 26 83 47 02  // &.G.&.w.&._.&.G.
    37D0: 04 5E 5B C3 53 52 56 8B D8 E8 70 FF 8B F3 26 8B  // .^[.SRV...p...&.
    37E0: 47 18 26 8B 57 1A D1 EA D1 D8 D1 EA D1 D8 26 01  // G.&.W.........&.
    37F0: 47 14 26 11 54 16 8B C3 E8 2B 10 E9 4A FF 53 8B  // G.&.T....+..J.S.
    3800: D8 26 8B 5F 02 26 FF 47 02 5B C3 53 8B D8 26 8B  // .&._.&.G.[.S..&.
    3810: 5F 02 26 83 47 02 02 5B C3 53 56 8B D8 E8 6B FF  // _.&.G..[.SV...k.
    3820: 8B F3 26 8B 57 20 33 C0 26 01 57 14 26 11 44 16  // ..&.W 3.&.W.&.D.
    3830: 8C D2 8E C2 26 8B 47 2E 32 C0 80 E4 06 3D 00 02  // ....&.G.2....=..
    3840: 75 07 32 E4 33 D2 5E 5B C3 26 8B 47 2E 32 C0 80  // u.2.3.^[.&.G.2..
    3850: E4 06 3D 00 04 74 EB 26 80 7F 34 00 75 08 8B C3  // ..=..t.&..4.u...
    3860: E8 2F 0F 5E 5B C3 26 8A 47 34 32 E4 26 89 47 1C  // ./.^[.&.G42.&.G.
    3870: 26 C7 47 1E 00 00 8B C3 E8 EA FC 5E 5B C3 53 8B  // &.G........^[.S.
    3880: D8 E8 E2 FE 26 8B 47 14 C1 E0 02 26 8B 1F 26 8B  // ....&.G....&..&.
    3890: 1F 03 D8 26 8B 07 26 8B 57 02 5B C3 A2 38 97 38  // ...&..&.W.[..8.8
    38A0: AD 38 FC 38 B3 38 CB 38 E5 38 F0 38 F6 38 53 51  // .8.8.8.8.8.8.8SQ
    38B0: 56 8B D8 E8 B0 FE 8C D2 8E C2 26 83 7F 16 00 75  // V.........&....u
    38C0: 22 26 83 7F 14 40 73 1B 26 8B 77 02 26 8B 5F 14  // "&...@s.&.w.&._.
    38D0: C1 E3 02 26 8B 44 04 03 D8 26 8B 07 26 8B 57 02  // ...&.D...&..&.W.
    38E0: E9 7B 05 26 8B 77 14 26 8B 47 16 83 C6 C0 83 D0  // .{.&.w.&.G......
    38F0: FF 75 71 83 FE 08 77 6C 03 F6 2E FF A4 34 38 26  // .uq...wl.....48&
    3900: 8B 47 10 26 8B 57 12 E9 54 05 26 8B 47 0C 26 8B  // .G.&.W..T.&.G.&.
    3910: 57 0E E9 49 05 26 8B 47 22 EB 4B 26 8A 4F 33 32  // W..I.&.G".K&.O32
    3920: ED BB 01 00 33 D2 E3 06 D1 E3 D1 D2 E2 FA 8B C3  // ....3...........
    3930: E9 2B 05 26 8A 4F 33 32 ED B8 01 00 33 D2 E3 06  // .+.&.O32....3...
    3940: D1 E0 D1 D2 E2 FA F7 D0 F7 D2 E9 11 05 26 8B 47  // .............&.G
    3950: 18 26 8B 57 1A E9 06 05 26 8B 47 24 EB 08 26 8B  // .&.W....&.G$..&.
    3960: 47 20 EB 02 33 C0 33 D2 E9 F3 04 53 56 8B D8 E8  // G ..3.3....SV...
    3970: F4 FD 8B F3 26 8B 47 18 26 8B 57 1A D1 EA D1 D8  // ....&.G.&.W.....
    3980: D1 EA D1 D8 26 01 47 14 26 11 54 16 8B C3 E8 16  // ....&.G.&.T.....
    3990: 0E 5E 5B C3 33 C0 33 D2 C3 53 56 8B D8 E8 EB FD  // .^[.3.3..SV.....
    39A0: 26 8B 77 14 26 03 77 22 8B 04 8B 54 02 5E 5B C3  // &.w.&.w"...T.^[.
    39B0: 53 8B D8 26 C6 47 2B 04 E8 AB FD 26 8B 47 14 26  // S..&.G+....&.G.&
    39C0: 8B 57 16 5B C3 53 8B D8 26 C6 47 2B 01 E8 BB FD  // .W.[.S..&.G+....
    39D0: EB E9 53 8B D8 26 C6 47 2B 00 E8 D2 FD EB DC 53  // ..S..&.G+......S
    39E0: 8B D8 83 C3 35 26 8A 5F 01 C0 EB 03 80 E3 07 32  // ....5&._.......2
    39F0: FF 03 DB FF 97 4C 91 5B C3 53 52 56 8B D8 26 8A  // .....L.[.SRV..&.
    3A00: 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 68 91 26 89  // G,2.........h.&.
    3A10: 47 08 26 89 57 0A 26 8A 47 2D 32 E4 8B F0 03 F0  // G.&.W.&.G-2.....
    3A20: 8B C3 FF 94 80 91 26 89 47 04 26 89 57 06 E9 17  // ......&.G.&.W...
    3A30: FD 53 51 56 8B D8 26 8A 4F 2B 32 ED 8B F1 8A 8C  // .SQV..&.O+2.....
    3A40: B0 91 E3 0A 26 D1 6F 06 26 D1 5F 04 E2 F6 26 8A  // ....&.o.&._...&.
    3A50: 4F 2B 32 ED 8B F1 C1 E6 02 8B 8C 90 91 8B B4 92  // O+2.............
    3A60: 91 26 21 4F 04 26 21 77 06 26 8A 4F 2A 32 ED 8B  // .&!O.&!w.&.O*2..
    3A70: F1 8A 8C B8 91 E3 0A 26 D1 67 04 26 D1 57 06 E2  // .......&.g.&.W..
    3A80: F6 26 8B 4F 08 26 8B 77 0A 26 89 4F 14 26 89 77  // .&.O.&.w.&.O.&.w
    3A90: 16 E9 CA 03 53 51 52 56 57 8B D8 8C D0 8E C0 26  // ....SQRVW......&
    3AA0: 8A 47 2B 32 E4 8B F0 C1 E6 02 26 8A 47 2A 8B F8  // .G+2......&.G*..
    3AB0: 8A 8D B8 91 32 ED 8B 84 90 91 8B 94 92 91 E3 06  // ....2...........
    3AC0: D1 E0 D1 D2 E2 FA F7 D0 F7 D2 26 21 47 14 26 21  // ..........&!G.&!
    3AD0: 57 16 26 8A 47 2A 32 E4 8B F0 8A 8C B8 91 32 ED  // W.&.G*2.......2.
    3AE0: E3 0A 26 D1 6F 0A 26 D1 5F 08 E2 F6 26 8A 47 2B  // ..&.o.&._...&.G+
    3AF0: 8B F0 C1 E6 02 8B 84 90 91 8B 94 92 91 26 21 47  // .............&!G
    3B00: 08 26 21 57 0A 26 8A 47 2A 32 E4 8B F0 8A 8C B8  // .&!W.&.G*2......
    3B10: 91 32 ED E3 0A 26 D1 67 08 26 D1 57 0A E2 F6 26  // .2...&.g.&.W...&
    3B20: 8B 47 14 26 8B 57 16 26 09 47 08 26 09 57 0A 5F  // .G.&.W.&.G.&.W._
    3B30: 5E 5A 59 5B C3 53 51 56 8B D8 26 8A 4F 2B 32 ED  // ^ZY[.SQV..&.O+2.
    3B40: 8B F1 8A 8C B0 91 E3 0A 26 D1 6F 06 26 D1 5F 04  // ........&.o.&._.
    3B50: E2 F6 26 8A 4F 2B 32 ED 8B F1 C1 E6 02 8B 8C 90  // ..&.O+2.........
    3B60: 91 8B B4 92 91 26 21 4F 04 26 21 77 06 26 8A 4F  // .....&!O.&!w.&.O
    3B70: 2A 32 ED 8B F1 8A 8C B8 91 E3 0A 26 D1 6F 0A 26  // *2.........&.o.&
    3B80: D1 5F 08 E2 F6 26 8A 4F 2B 32 ED 8B F1 C1 E6 02  // ._...&.O+2......
    3B90: 8B 8C 90 91 8B B4 92 91 26 21 4F 08 26 21 77 0A  // ........&!O.&!w.
    3BA0: E9 BB 02 51 52 57 8B D8 8C D0 8E C0 26 80 7F 2B  // ...QRW......&..+
    3BB0: 00 74 1A 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF  // .t.&.G,2........
    3BC0: 94 68 91 26 89 47 08 26 89 57 0A EB 10 26 8A 47  // .h.&.G.&.W...&.G
    3BD0: 2C 32 E4 8B F0 03 F0 8B C3 FF 94 74 91 26 8A 47  // ,2.........t.&.G
    3BE0: 2D 32 E4 8B F0 03 F0 8B C3 FF 94 80 91 26 89 47  // -2...........&.G
    3BF0: 04 26 89 57 06 8C D2 8E C2 26 80 7F 2B 00 74 4A  // .&.W.....&..+.tJ
    3C00: 26 8A 47 2B 32 E4 8B F0 C1 E6 02 26 8A 47 2A 8B  // &.G+2......&.G*.
    3C10: F8 8A 8D B8 91 32 ED 8B 84 90 91 8B 94 92 91 E3  // .....2..........
    3C20: 06 D1 E0 D1 D2 E2 FA F7 D0 F7 D2 26 21 47 08 26  // ...........&!G.&
    3C30: 21 57 0A 8B C3 E8 F9 FD 26 8B 47 04 26 8B 57 06  // !W......&.G.&.W.
    3C40: 26 09 47 08 26 09 57 0A EB 10 26 8B 57 04 26 8B  // &.G.&.W...&.W.&.
    3C50: 47 06 26 89 57 08 26 89 47 0A 26 8A 47 2C 32 E4  // G.&.W.&.G.&.G,2.
    3C60: 8B F0 03 F0 8B C3 FF 94 5C 91 5F 5A 59 C3 53 51  // ........\._ZY.SQ
    3C70: 52 56 57 8B D8 26 8A 47 2A 32 E4 8B F0 8A 8C B8  // RVW..&.G*2......
    3C80: 91 32 ED E3 0A 26 D1 67 04 26 D1 57 06 E2 F6 8C  // .2...&.g.&.W....
    3C90: D0 8E C0 26 8A 47 2B 32 E4 8B F0 C1 E6 02 26 8A  // ...&.G+2......&.
    3CA0: 47 2A 8B F8 8A 8D B8 91 32 ED 8B 84 90 91 8B 94  // G*......2.......
    3CB0: 92 91 E3 06 D1 E0 D1 D2 E2 FA F7 D0 F7 D2 26 09  // ..............&.
    3CC0: 47 04 26 09 57 06 26 8B 47 04 26 8B 57 06 26 21  // G.&.W.&.G.&.W.&!
    3CD0: 47 08 26 21 57 0A E9 56 FE 55 8B EC 51 52 50 8B  // G.&!W..V.U..QRP.
    3CE0: D8 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 68  // .&.G,2.........h
    3CF0: 91 26 89 47 08 26 89 57 0A 26 8A 47 2B 88 46 FA  // .&.G.&.W.&.G+.F.
    3D00: 8B C3 E8 DA FC 26 89 47 04 26 89 57 06 26 8A 4F  // .....&.G.&.W.&.O
    3D10: 2D 32 ED 8B F1 03 F1 8B C3 FF 94 80 91 26 89 47  // -2...........&.G
    3D20: 14 26 89 57 16 8B C3 E8 44 FF 8A 46 FA 32 E4 8B  // .&.W....D..F.2..
    3D30: F0 8A 8C B0 91 E3 0A 26 D1 6F 16 26 D1 5F 14 E2  // .......&.o.&._..
    3D40: F6 26 8A 57 2B 32 F6 8B F2 C1 E6 02 8B 84 90 91  // .&.W+2..........
    3D50: 8B 94 92 91 26 21 47 14 26 21 57 16 26 8A 47 2A  // ....&!G.&!W.&.G*
    3D60: 32 E4 8B F0 8A 8C B8 91 32 ED E3 0A 26 D1 67 14  // 2.......2...&.g.
    3D70: 26 D1 57 16 E2 F6 26 8B 47 14 26 8B 57 16 26 09  // &.W...&.G.&.W.&.
    3D80: 47 08 26 09 57 0A 26 8A 47 2C 32 E4 8B F0 03 F0  // G.&.W.&.G,2.....
    3D90: 8B C3 FF 94 5C 91 8D 66 FC 5A 59 5D C3 51 8B D8  // ....\..f.ZY].Q..
    3DA0: E8 56 FC 26 8A 4F 2B 32 ED 8B F1 8A 8C B0 91 E3  // .V.&.O+2........
    3DB0: 0A 26 D1 6F 06 26 D1 5F 04 E2 F6 8B C3 E8 AE FE  // .&.o.&._........
    3DC0: 26 8A 4F 2C 32 ED 8B F1 03 F1 8B C3 FF 94 5C 91  // &.O,2.........\.
    3DD0: 59 C3 8B D8 E8 22 FC 8B C3 E8 55 FC 26 8B 47 04  // Y...."....U.&.G.
    3DE0: 26 8B 77 06 26 09 47 08 26 09 77 0A 26 8A 47 2C  // &.w.&.G.&.w.&.G,
    3DF0: 32 E4 8B F0 03 F0 8B C3 FF 94 5C 91 C3 53 56 8B  // 2.........\..SV.
    3E00: D8 E8 F5 FB 8B C3 E8 28 FC 26 8B 47 04 26 8B 77  // .......(.&.G.&.w
    3E10: 06 26 31 47 08 26 31 77 0A 26 8A 47 2C 32 E4 8B  // .&1G.&1w.&.G,2..
    3E20: F0 03 F0 8B C3 FF 94 5C 91 5E 5B C3 53 51 56 8B  // .......\.^[.SQV.
    3E30: D8 E8 C5 FB 8B C3 E8 F8 FB 26 8B 4F 04 E3 0A 26  // .........&.O...&
    3E40: D1 67 08 26 D1 57 0A E2 F6 8B C3 E8 46 FC 26 8A  // .g.&.W......F.&.
    3E50: 4F 2C 32 ED 8B F1 03 F1 8B C3 FF 94 5C 91 5E 59  // O,2.........\.^Y
    3E60: 5B C3 53 51 56 8B D8 E8 8F FB 8B C3 E8 C2 FB 26  // [.SQV..........&
    3E70: 8B 4F 04 E3 0A 26 D1 6F 0A 26 D1 5F 08 E2 F6 EB  // .O...&.o.&._....
    3E80: C8 52 8B D8 E8 72 FB 8B C3 E8 A5 FB 8B F3 26 8B  // .R...r........&.
    3E90: 47 04 26 8B 57 06 26 01 47 08 26 11 54 0A 8B C3  // G.&.W.&.G.&.T...
    3EA0: E8 F1 FB 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF  // ...&.G,2........
    3EB0: 94 5C 91 5A C3 52 8B D8 E8 3E FB 8B C3 E8 71 FB  // .\.Z.R...>....q.
    3EC0: 8B F3 26 8B 47 04 26 8B 57 06 26 29 47 08 26 19  // ..&.G.&.W.&)G.&.
    3ED0: 54 0A EB CA 51 52 8B F0 E8 1E FB 8B C6 E8 55 FC  // T...QR........U.
    3EE0: 26 8B 44 08 26 8B 54 0A 26 8B 5C 04 26 8B 4C 06  // &.D.&.T.&.\.&.L.
    3EF0: E8 DD F2 26 89 44 0C 26 89 54 0E 5A 59 C3 52 8B  // ...&.D.&.T.ZY.R.
    3F00: D0 E8 F5 FA 8B C2 E8 2C FC 8B C2 E8 5C 08 5A C3  // .......,....\.Z.
    3F10: 51 52 57 8B F0 E8 E1 FA 8B C6 E8 18 FC 26 8B 44  // QRW..........&.D
    3F20: 08 26 8B 54 0A 26 8B 5C 04 26 8B 4C 06 E8 1C F2  // .&.T.&.\.&.L....
    3F30: 26 89 44 0C 26 89 54 0E 8C D7 8E C7 26 8B 44 08  // &.D.&.T.....&.D.
    3F40: 26 8B 54 0A 26 8B 5C 04 26 8B 4C 06 E8 FD F1 26  // &.T.&.\.&.L....&
    3F50: 89 5C 10 26 89 4C 12 E9 10 FD 52 8B D0 E8 99 FA  // .\.&.L....R.....
    3F60: 8B C2 E8 D0 FB 8B C2 E8 D3 07 5A C3 51 52 8B D8  // ..........Z.QR..
    3F70: E8 86 FA 8B C3 E8 BD FB 8C D1 8E C1 26 8B 47 08  // ............&.G.
    3F80: 26 8B 57 0A 26 3B 57 06 75 0E 26 3B 47 04 75 08  // &.W.&;W.u.&;G.u.
    3F90: 26 C6 47 30 01 5A 59 C3 8B D0 26 8B 47 0A 26 3B  // &.G0.ZY...&.G.&;
    3FA0: 47 06 72 08 75 0A 26 3B 57 04 73 04 33 C0 EB 03  // G.r.u.&;W.s.3...
    3FB0: B8 02 00 26 88 47 30 5A 59 C3 51 52 57 8B D8 26  // ...&.G0ZY.QRW..&
    3FC0: 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 68 91 26  // .G,2.........h.&
    3FD0: 89 47 08 26 89 57 0A 8C D0 8E C0 26 8A 47 2B 32  // .G.&.W.....&.G+2
    3FE0: E4 8B F0 C1 E6 02 8B F8 8A 8D B0 91 32 ED 8B 84  // ............2...
    3FF0: 90 91 8B 94 92 91 E3 06 D1 E0 D1 D2 E2 FA F7 D0  // ................
    4000: F7 D2 26 21 47 08 26 21 57 0A E9 4D FC 55 8B EC  // ..&!G.&!W..M.U..
    4010: 51 52 57 83 EC 06 8B D8 26 8A 47 2B 32 E4 8B F0  // QRW.....&.G+2...
    4020: C1 E6 02 8B F8 8A 8D B0 91 32 ED 8B 84 90 91 89  // .........2......
    4030: 46 F4 8B 84 92 91 89 46 F6 E3 08 D1 66 F4 D1 56  // F......F....f..V
    4040: F6 E2 F8 8B 7E F4 8B 46 F6 89 46 F8 26 8A 47 2C  // ....~..F..F.&.G,
    4050: 32 E4 8B F0 03 F0 8B C3 FF 94 68 91 26 89 47 08  // 2.........h.&.G.
    4060: 26 89 57 0A 8B C3 E8 47 F9 26 89 47 04 26 89 57  // &.W....G.&.G.&.W
    4070: 06 8B C7 F7 D0 8B 56 F6 F7 D2 26 23 47 08 26 23  // ......V...&#G.&#
    4080: 57 0A 26 89 47 14 26 89 57 16 26 21 7F 08 8B 46  // W.&.G.&.W.&!...F
    4090: F6 26 21 47 0A 8C D1 8D 77 35 8E C1 26 80 3C 19  // .&!G....w5..&.<.
    40A0: 73 12 26 8B 4F 04 E3 0A 26 D1 67 08 26 D1 57 0A  // s.&.O...&.g.&.W.
    40B0: E2 F6 EB 10 26 8B 4F 04 E3 0A 26 D1 6F 0A 26 D1  // ....&.O...&.o.&.
    40C0: 5F 08 E2 F6 26 21 7F 08 8B 46 F8 26 21 47 0A 26  // _...&!...F.&!G.&
    40D0: 8B 57 14 26 8B 47 16 26 09 57 08 26 09 47 0A 26  // .W.&.G.&.W.&.G.&
    40E0: 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 5C 91 8D  // .G,2.........\..
    40F0: 66 FA 5F E9 A3 FC 52 8B D8 E8 FD F8 8B C3 E8 34  // f._...R........4
    4100: FA 26 8B 47 08 26 8B 57 0A 26 85 57 06 75 06 26  // .&.G.&.W.&.W.u.&
    4110: 85 47 04 74 05 B8 03 00 EB 03 B8 01 00 26 88 47  // .G.t.........&.G
    4120: 30 5A C3 53 51 52 56 8B D8 26 8A 4F 2D 32 ED 8B  // 0Z.SQRV..&.O-2..
    4130: F1 03 F1 FF 94 80 91 26 89 47 04 26 89 57 06 26  // .......&.G.&.W.&
    4140: 8A 47 2B 32 E4 8B F0 8A 8C B0 91 E3 0A 26 D1 6F  // .G+2.........&.o
    4150: 06 26 D1 5F 04 E2 F6 26 8A 47 2B 8B F0 C1 E6 02  // .&._...&.G+.....
    4160: 8B 84 90 91 8B 94 92 91 26 21 47 04 26 21 57 06  // ........&!G.&!W.
    4170: E9 BD F9 52 8B D8 E8 AA FF 26 8B 47 04 26 8B 57  // ...R.....&.G.&.W
    4180: 06 26 89 47 18 26 89 57 1A 5A C3 51 52 8B D8 E8  // .&.G.&.W.Z.QR...
    4190: 91 FF 8C D0 8E C0 26 8B 77 02 26 8B 74 02 81 3C  // ......&.w.&.t..<
    41A0: 5A 5A 74 5B 26 8B 77 02 26 8B 74 02 80 3C 63 75  // ZZt[&.w.&.t..<cu
    41B0: E1 26 8B 77 02 26 FF 44 02 8B C3 E8 21 F8 26 89  // .&.w.&.D....!.&.
    41C0: 47 08 26 89 57 0A 8B C3 E8 FA F7 26 89 47 14 26  // G.&.W......&.G.&
    41D0: 89 57 16 8C D1 8E C1 26 8B 57 04 26 8B 47 06 26  // .W.....&.W.&.G.&
    41E0: 3B 47 0A 75 AD 26 3B 57 08 75 A7 26 8B 77 02 26  // ;G.u.&;W.u.&.w.&
    41F0: 8B 04 26 03 47 14 8B DE 26 89 47 02 5A 59 C3 26  // ..&.G...&.G.ZY.&
    4200: 8B 5F 02 26 83 47 02 02 5A 59 C3 52 57 8B D8 8C  // ._.&.G..ZY.RW...
    4210: D0 8E C0 26 8B 77 02 26 8B 74 02 8A 54 01 84 D2  // ...&.w.&.t..T...
    4220: 75 08 26 C7 47 22 00 00 EB 2F 80 FA FF 75 14 26  // u.&.G".../...u.&
    4230: 8B 77 02 26 8B 3F 26 8B 34 26 2B 75 02 26 89 77  // .w.&.?&.4&+u.&.w
    4240: 22 EB 16 26 8B 07 E8 E3 02 8B F0 8A C2 32 E4 03  // "..&.........2..
    4250: C0 03 F0 8B 04 26 89 47 22 26 8B 5F 02 26 83 47  // .....&.G"&._.&.G
    4260: 02 02 5F 5A C3 8B D8 26 80 67 2F F9 26 8B 77 02  // .._Z...&.g/.&.w.
    4270: 26 8B 74 02 8A 44 01 26 88 47 34 26 8B 5F 02 26  // &.t..D.&.G4&._.&
    4280: 83 47 02 03 C3 8B D8 26 8B 77 02 26 8B 74 02 8B  // .G.....&.w.&.t..
    4290: 74 01 26 89 77 20 EB E3 53 8B D8 26 8A 47 2C 32  // t.&.w ..S..&.G,2
    42A0: E4 24 03 26 80 67 2F F9 C1 E0 09 26 09 47 2E E9  // .$.&.g/....&.G..
    42B0: 4F F5 8B D8 26 8B 77 02 26 8B 74 02 8A 44 01 32  // O...&.w.&.t..D.2
    42C0: E4 26 89 47 04 26 C7 47 06 00 00 8B C3 E8 40 04  // .&.G.&.G......@.
    42D0: 26 8B 5F 02 26 83 47 02 02 C3 8B D8 26 8B 77 02  // &._.&.G.....&.w.
    42E0: 26 8B 74 02 8A 44 01 32 E4 26 89 47 04 26 C7 47  // &.t..D.2.&.G.&.G
    42F0: 06 00 00 8B C3 E8 08 04 EB D6 53 56 8B D8 26 8B  // ..........SV..&.
    4300: 77 02 26 8B 74 02 8A 44 01 32 E4 26 89 47 04 26  // w.&.t..D.2.&.G.&
    4310: C7 47 06 00 00 8B C3 E8 06 04 E9 86 F4 53 56 8B  // .G...........SV.
    4320: D8 26 8B 77 02 26 8B 74 02 8A 44 01 32 E4 26 89  // .&.w.&.t..D.2.&.
    4330: 47 04 26 C7 47 06 00 00 8B C3 E8 F0 03 E9 63 F4  // G.&.G.........c.
    4340: 53 56 8B D8 26 8B 77 02 8B DE 26 8B 5F 02 8B 5F  // SV..&.w...&._.._
    4350: 01 83 C3 03 26 01 5C 02 5E 5B C3 51 52 8B D8 26  // ....&.\.^[.QR..&
    4360: 8B 77 02 26 83 44 02 02 26 8B 07 E8 A0 01 8B C8  // .w.&.D..&.......
    4370: 26 8B 77 28 8A 44 01 32 E4 03 C0 8B F1 03 F0 83  // &.w(.D.2........
    4380: 3C 00 74 4F 26 8B 77 28 8A 54 01 32 F6 8B C3 E8  // <.tO&.w(.T.2....
    4390: B0 01 26 88 47 31 26 8B 77 02 26 8B 34 8B 44 04  // ..&.G1&.w.&.4.D.
    43A0: C1 E8 08 32 E4 24 7F C1 E8 02 32 E4 24 1F 26 80  // ...2.$....2.$.&.
    43B0: 67 2F 07 C1 E0 0B 26 09 47 2E 26 8B 37 26 8B 47  // g/....&.G.&.7&.G
    43C0: 2E C1 E8 0B C1 E0 02 26 01 04 26 C6 47 32 01 26  // .......&..&.G2.&
    43D0: 89 4F 28 5A 59 C3 53 8B D8 26 C6 47 32 82 5B C3  // .O(ZY.S..&.G2.[.
    43E0: 57 8B D8 8C D6 8E C6 26 80 7F 2C 05 74 0A 26 8A  // W......&..,.t.&.
    43F0: 47 2C 26 3A 47 30 75 1E 26 8B 77 02 26 8B 74 02  // G,&:G0u.&.w.&.t.
    4400: 26 8B 7F 02 26 8B 3D 8B 74 01 03 F7 26 8B 5F 02  // &...&.=.t...&._.
    4410: 26 89 77 02 5F C3 26 8B 5F 02 26 83 47 02 03 5F  // &.w._.&._.&.G.._
    4420: C3 53 56 57 8B D8 8C D6 8E C6 26 80 7F 30 01 74  // .SVW......&..0.t
    4430: 0A 26 8A 47 30 26 3A 47 2C 75 20 26 8B 77 02 26  // .&.G0&:G,u &.w.&
    4440: 8B 74 02 26 8B 7F 02 26 8B 3D 8B 74 01 03 F7 26  // .t.&...&.=.t...&
    4450: 8B 5F 02 26 89 77 02 5F 5E 5B C3 26 8B 5F 02 26  // ._.&.w._^[.&._.&
    4460: 83 47 02 03 EB F1 53 56 57 8B D8 8C D0 8E C0 26  // .G....SVW......&
    4470: 80 7F 30 01 74 E5 EB C3 55 8B EC 53 51 52 57 8B  // ..0.t...U..SQRW.
    4480: D8 26 8B 77 02 26 8B 74 02 8A 04 26 C6 47 3D 00  // .&.w.&.t...&.G=.
    4490: 8C D1 8E C1 26 80 7F 3D 08 73 20 26 8B 77 02 26  // ....&..=.s &.w.&
    44A0: 8A 57 3D 32 F6 26 8B 7C 02 03 FA 8B F3 03 F2 8A  // .W=2.&.|........
    44B0: 15 26 88 54 35 26 FE 47 3D EB D5 26 8B 7F 02 8A  // .&.T5&.G=..&....
    44C0: D0 32 F6 8B F2 C1 E6 02 8A 94 DD 91 26 01 55 02  // .2..........&.U.
    44D0: 26 8B 7F 28 8A 55 01 80 E2 07 26 88 57 2D 26 8B  // &..(.U....&.W-&.
    44E0: 7F 28 8A 55 01 C0 EA 03 80 E2 07 26 88 57 2B 26  // .(.U.......&.W+&
    44F0: 8B 7F 28 8A 55 01 C0 EA 06 26 88 57 2A 8A 94 DC  // ..(.U....&.W*...
    4500: 91 26 88 57 2C 8D 66 F8 5F 5A 59 5B 5D C3 53 56  // .&.W,.f._ZY[].SV
    4510: 8B D8 26 8B 77 02 8B C6 8B 74 48 03 F0 8B D8 8B  // ..&.w....tH.....
    4520: 74 1E 8B C6 03 C3 83 C0 04 5E 5B C3 53 56 8B D8  // t........^[.SV..
    4530: 26 8B 77 02 8B C6 8B 74 48 03 F0 8B D8 8B 74 20  // &.w....tH.....t 
    4540: EB E0 8A C2 C3 16 07 55 8B EC 53 51 56 57 83 EC  // .......U..SQVW..
    4550: 40 8B F8 89 46 B8 E8 D3 FF 8B D8 89 46 E0 26 8B  // @...F.......F.&.
    4560: 45 02 8B 5F 2E 03 D8 89 5E DE 83 46 DE 04 8B C7  // E.._....^..F....
    4570: E8 9B FF 89 46 E0 32 F6 8D 46 B8 E8 C4 FF 8A D0  // ....F.2..F......
    4580: 32 F6 03 D2 8B 5E E0 03 DA 83 3F 00 0F 84 65 01  // 2....^....?...e.
    4590: 88 46 E9 80 66 E7 F9 C6 46 EC 00 C7 46 D8 00 00  // .F..f...F...F...
    45A0: 66 C7 46 D0 00 00 00 00 C7 46 F6 00 00 C6 46 EA  // f.F......F....F.
    45B0: 01 EB 06 3C 01 0F 85 8C 00 8A 56 E9 8A C2 32 E4  // ...<......V...2.
    45C0: 03 C0 8B 5E E0 03 D8 83 3F 00 74 75 26 8B 45 02  // ...^....?.tu&.E.
    45D0: 8B 1F 03 D8 8B 47 04 32 E4 8B C8 83 C1 09 32 ED  // .....G.2......2.
    45E0: 80 E1 FE 83 F9 00 74 07 D1 E9 33 C0 50 E2 FD 8B  // ......t...3.P...
    45F0: C4 8B D8 89 46 BA 85 C0 74 41 83 C0 08 26 89 47  // ....F...tA...&.G
    4600: 04 8A C2 32 E4 03 C0 8B 5E E0 03 D8 26 8B 45 02  // ...2....^...&.E.
    4610: 03 07 8B 5E BA 26 89 07 8B 5E BA 26 8B 07 83 C0  // ...^.&...^.&....
    4620: 06 26 89 47 02 8B 5E BA 8B 76 F6 26 89 77 06 8B  // .&.G..^..v.&.w..
    4630: 5E BA 89 5E F6 C6 46 EA 00 EB 0A C6 46 EA 87 EB  // ^..^..F.....F...
    4640: 04 C6 46 EA 83 8A 46 EA 32 E4 83 F8 10 0F 8F 99  // ..F...F.2.......
    4650: 00 88 66 EA 8A 46 EA 32 E4 85 C0 0F 8F 83 00 8C  // ..f..F.2........
    4660: D0 8B 5E BA 8E C0 26 8B 5F 02 89 5E E0 8B 5E BA  // ..^...&._..^..^.
    4670: 26 8B 5F 02 80 3F 5B 75 4A C6 46 EA 10 8B 5E BA  // &._..?[uJ.F...^.
    4680: 26 8B 5F 06 89 5E F6 8B 5E BA 26 8B 1F 8B 47 04  // &._..^..^.&...G.
    4690: 32 E4 8B C8 83 C1 09 32 ED 80 E1 FE 03 E1 8B 5E  // 2......2.......^
    46A0: F6 89 5E BA 85 DB 74 AC 26 8B 1F 8B 47 04 C1 E8  // ..^...t.&...G...
    46B0: 08 32 E4 24 7F C1 E8 02 C1 E0 02 8B 5E B8 26 29  // .2.$........^.&)
    46C0: 07 EB 91 8D 46 B8 E8 AF FD 8A D0 8D 46 B8 E8 2E  // ....F.......F...
    46D0: 00 8A DA 32 FF C1 E3 02 8D 46 B8 FF 97 DA 91 E9  // ...2.....F......
    46E0: 72 FF 83 7E F6 00 0F 85 C9 FE 80 7E EA 10 74 05  // r..~.......~..t.
    46F0: 8A 46 EA EB 02 32 C0 8D 66 F8 5F 5E E9 0B FE C3  // .F...2..f._^....
    4700: 53 51 8B D8 26 8A 4F 04 32 ED E8 C9 E7 59 5B C3  // SQ..&.O.2....Y[.
    4710: 53 51 8B D8 26 8A 4F 04 32 ED E8 C4 E7 59 5B C3  // SQ..&.O.2....Y[.
    4720: 53 8B D8 26 8A 47 04 32 E4 E6 80 5B C3 53 51 8B  // S..&.G.2...[.SQ.
    4730: D8 26 8A 4F 04 32 ED E8 00 D5 59 5B C3 53 8B D8  // .&.O.2....Y[.S..
    4740: 66 50 66 52 66 51 66 26 8B 47 08 66 26 8B 57 10  // fPfRfQf&.G.f&.W.
    4750: 66 26 8B 4F 04 66 F7 F1 66 26 89 47 0C 66 26 89  // f&.O.f..f&.G.f&.
    4760: 57 10 66 59 66 5A 66 58 5B C3 53 8B D8 66 50 66  // W.fYfZfX[.S..fPf
    4770: 52 66 51 66 26 8B 47 08 66 26 8B 4F 04 66 F7 E1  // RfQf&.G.f&.O.f..
    4780: 66 26 89 47 0C 66 26 89 57 10 66 59 66 5A 66 58  // f&.G.f&.W.fYfZfX
    4790: 5B C3 53 57 8B D8 26 8B 5F 14 E8 38 EB 8B D0 66  // [.SW..&._..8...f
    47A0: C1 E8 10 92 5F 5B C3 53 57 8B D8 26 8B 47 14 26  // ...._[.SW..&.G.&
    47B0: 8B 57 16 8B D8 87 D3 66 C1 E3 10 8B DA C1 E3 02  // .W.....f........
    47C0: E8 36 EB EB D8 53 52 57 8B D8 26 8B 47 08 26 8B  // .6...SRW..&.G.&.
    47D0: 57 0A 92 66 C1 E0 10 8B C2 26 8B 5F 14 E8 5A EA  // W..f.....&._..Z.
    47E0: 5F 5A 5B C3 53 52 8B D8 26 8B 47 1C 26 8B 57 1E  // _Z[.SR..&.G.&.W.
    47F0: 92 66 C1 E0 10 8B C2 26 8B 5F 26 8B 5F 01 E8 39  // .f.....&._&._..9
    4800: EA 5A 5B C3 53 52 56 8B F0 26 8B 5C 26 8B 5F 01  // .Z[.SRV..&.\&._.
    4810: E8 C2 EA 8B D0 66 C1 E8 10 92 26 89 44 1C 26 89  // .....f....&.D.&.
    4820: 54 1E 5E 5A 5B C3 53 51 52 57 8B D8 26 8B 47 08  // T.^Z[.SQRW..&.G.
    4830: 26 8B 57 0A 92 66 C1 E0 10 8B C2 8B C8 26 8B 47  // &.W..f.......&.G
    4840: 14 26 8B 57 16 8B D8 87 D3 66 C1 E3 10 8B DA C1  // .&.W.....f......
    4850: E3 02 8B C1 E8 16 EA 5F 5A 59 5B C3 8B D0 66 C1  // ......._ZY[...f.
    4860: E8 10 92 C3 1E 06 66 50 66 51 66 52 66 53 66 55  // ......fPfQfRfSfU
    4870: 66 56 66 57 0E 1F 0A C0 75 06 E8 07 01 E9 A8 00  // fVfW....u.......
    4880: 3C 01 75 06 E8 37 01 E9 9E 00 3C 02 75 06 E8 5F  // <.u..7....<.u.._
    4890: 02 E9 94 00 3C 03 75 0B E8 91 03 8B EC 89 5E 0C  // ....<.u.......^.
    48A0: E9 85 00 3C 04 75 02 EB 7D 3C 05 75 0A E8 0E 04  // ...<.u..}<.u....
    48B0: 8B EC 89 56 10 EB 71 3C 06 75 10 E8 8C 03 8B EC  // ...V..q<.u......
    48C0: 89 5E 0C 89 4E 14 89 56 10 EB 5D 3C 07 75 02 EB  // .^..N..V..]<.u..
    48D0: 55 3C 08 75 0A E8 D0 03 8B EC 88 7E 0D EB 49 3C  // U<.u.......~..I<
    48E0: 09 75 02 EB 41 3C 0A 75 10 E8 65 04 8B EC 89 4E  // .u..A<.u..e....N
    48F0: 14 89 7E 00 8C 46 1C EB 2F 3C 0B 75 02 EB 27 3C  // ..~..F../<.u..'<
    4900: 10 75 0A E8 5A 04 8B EC 89 5E 0C EB 1B 3C 11 75  // .u..Z....^...<.u
    4910: 02 EB 13 3C 15 75 0F E8 80 04 8B EC 89 5E 0C EB  // ...<.u.......^..
    4920: 07 B8 4F 01 EB 02 32 C0 8B EC 89 46 18 66 5F 66  // ..O...2....F.f_f
    4930: 5E 66 5D 66 5B 66 5A 66 59 66 58 07 1F C3 50 1E  // ^f]f[fZfYfX...P.
    4940: 2E 8E 1E 16 03 8C D8 A3 A6 58 A3 B6 58 A3 C8 58  // .........X..X..X
    4950: 2E 8E 1E 0E 03 A3 AA 04 1F 58 CB 00 30 31 2E 30  // .........X..01.0
    4960: 30 00 56 45 53 41 00 03 CC 01 00 00 01 00 00 00  // 0.VESA..........
    4970: 00 00 00 00 00 03 0A 11 ED 00 00 00 81 00 00 00  // ................
    4980: F4 48 00 00 B9 3F 00 8B DF 83 C7 04 FC 66 33 C0  // .H...?.......f3.
    4990: F3 66 AB 8B FB BE FA 48 B9 22 00 F3 A4 06 1F 8C  // .f.....H."......
    49A0: 4F 08 8C 47 10 8C 4F 18 8C 4F 1C 8C 4F 20 83 C7  // O..G..O..O..O ..
    49B0: 22 89 7F 0E 0E 1F E8 5B D1 B0 4F 32 E4 C3 56 51  // "......[..O2..VQ
    49C0: 57 B9 10 00 66 33 C0 F3 66 AB 5F 59 8C DB 06 1F  // W...f3..f._Y....
    49D0: C7 05 BB 00 C6 45 02 07 C7 45 04 40 00 C7 45 06  // .....E...E.@..E.
    49E0: 40 00 C6 45 1B 06 C6 45 18 01 C6 45 1A 01 C6 45  // @..E...E...E...E
    49F0: 1E 01 66 C7 45 3E 00 84 D7 17 8E DB E8 22 CA 66  // ..f.E>.......".f
    4A00: 0B C0 0F 84 E1 00 06 1F 66 89 45 28 8C C8 66 C1  // ........f.E(..f.
    4A10: E0 10 B8 B3 4C 66 89 45 0C 81 F9 FF 81 0F 84 C2  // ....Lf.E........
    4A20: 00 80 E5 03 B2 01 53 8E DB BE 80 1C E8 07 CF 5B  // ......S........[
    4A30: 06 1F 0F 84 B1 00 53 E8 83 D1 66 89 45 12 C7 45  // ......S...f.E..E
    4A40: 16 08 10 8D 5C 0C E8 BA E8 66 89 45 1F 66 89 45  // ....\....f.E.f.E
    4A50: 36 8D 5C 10 E8 AC E8 66 89 45 23 66 89 45 3A 8D  // 6.\....f.E#f.E:.
    4A60: 5C 08 E8 9E E8 0A C0 75 03 5B EB 7B E8 4E D1 66  // \......u.[.{.N.f
    4A70: C1 E8 10 3D 58 02 74 0D 3D 5E 01 74 08 77 0A C6  // ...=X.t.=^.t.w..
    4A80: 45 17 08 EB 04 C6 45 17 0E 2E A1 10 03 89 45 08  // E.....E.......E.
    4A90: 8D 5C 04 E8 6D E8 66 8B C8 66 C1 E9 10 D3 E0 89  // .\..m.f..f......
    4AA0: 45 10 89 45 32 B0 08 D2 E0 88 45 19 8D 5C 14 E8  // E..E2.....E..\..
    4AB0: 51 E8 5B 3D 00 03 77 2F 53 8B D8 B8 00 03 33 D2  // Q.[=..w/S.....3.
    4AC0: F7 F3 5B FE C8 88 45 1D 88 45 35 88 45 34 8E DB  // ..[...E..E5.E4..
    4AD0: 57 53 BE 80 1C E8 B2 C9 5B 5F 0B C9 75 05 06 1F  // WS......[_..u...
    4AE0: 83 25 FE 32 E4 EB 02 B4 03 B0 4F 8E DB 5E C3 00  // .%.2......O..^..
    4AF0: 81 FB FF 81 74 68 0A FF 75 04 8B C3 EB 21 F6 C7  // ....th..u....!..
    4B00: 08 75 61 8B CB B2 01 BE 20 1C E8 29 CE 74 55 E8  // .ua..... ..).tU.
    4B10: 8A D0 0A C0 75 0E 66 C1 E8 10 80 E7 80 0A C7 E8  // ....u.f.........
    4B20: D5 02 EB 3A E8 F9 CB 74 06 E8 6A CA E8 B2 C3 BE  // ...:...t..j.....
    4B30: 20 1C E8 29 C9 74 2D E8 A5 00 E8 2C 00 66 BB 20  //  ..).t-....,.f. 
    4B40: 1C 00 1C E8 4D D0 BE 00 1C E8 50 D0 66 C1 E8 10  // ....M.....P.f...
    4B50: 8B D8 32 C0 F6 C7 80 74 02 B0 40 E8 59 C9 B0 4F  // ..2....t..@.Y..O
    4B60: 32 E4 EB 04 B0 4F B4 03 C3 56 06 33 C0 8E C0 BE  // 2....O...V.3....
    4B70: 20 1C E8 48 D0 8B C8 66 C1 E8 10 8B D0 C1 E9 03  //  ..H...f........
    4B80: 26 89 0E 4A 04 C1 EA 04 FE CA 26 88 16 84 04 26  // &..J......&....&
    4B90: C6 06 51 04 00 26 C6 06 50 04 00 26 C6 06 49 04  // ..Q..&..P..&..I.
    4BA0: 62 26 C7 06 4C 04 00 A0 26 C6 06 85 04 10 26 C7  // b&..L...&.....&.
    4BB0: 06 0C 01 7F 62 8C C8 26 A3 0E 01 07 5E C3 01 0F  // ....b..&....^...
    4BC0: 00 0A 00 00 00 00 00 40 05 0F FF 00 01 02 03 04  // .......@........
    4BD0: 05 06 07 08 09 0A 0B 0C 0D 0E 0F 01 00 0F 00 FC  // ................
    4BE0: BA C4 03 B8 00 01 EF B9 04 00 B4 01 BE 56 4B AC  // .............VK.
    4BF0: 86 E0 EF 8A E0 FE C4 E2 F6 B8 00 03 EF B9 09 00  // ................
    4C00: BA CE 03 32 E4 BE 5A 4B 8A C4 EE AC 42 EE 4A FE  // ...2..ZK....B.J.
    4C10: C4 E2 F5 BA DA 03 EC B9 14 00 BA C0 03 32 E4 BE  // .............2..
    4C20: 63 4B 8A C4 EE AC EE FE C4 E2 F7 C3 BE 00 1C E8  // cK..............
    4C30: 6A CF 66 C1 E8 10 8B D8 E8 3A CF 75 05 E8 26 CF  // j.f......:.u..&.
    4C40: 75 04 B8 4F 00 C3 B8 4F 03 C3 E8 28 CF 74 53 BE  // u..O...O...(.tS.
    4C50: 00 1C 80 FB 00 74 18 80 FB 01 75 05 E8 66 CF EB  // .....t....u..f..
    4C60: 1D 80 FB 02 75 10 8B C1 E8 19 CF D3 E8 8B C8 E8  // ....u...........
    4C70: 09 CA 74 2E EB 08 80 FB 03 75 24 E8 BD CE E8 03  // ..t......u$.....
    4C80: CF 8B D8 D3 E3 50 33 C0 BA 00 03 3B DA 77 05 BA  // .....P3....;.w..
    4C90: FF FF EB 04 F7 F3 8B D0 58 8B C8 B8 4F 00 C3 32  // ........X...O..2
    4CA0: C0 C3 B0 4F B4 03 C3 00 0A DB 75 07 8A EF E8 D7  // ...O......u.....
    4CB0: CA EB 05 E8 BC CA 8A F8 B0 4F 32 E4 C3 00 E8 B4  // .........O2.....
    4CC0: CE 74 2C BE 00 1C E8 D3 CE 66 C1 E8 10 F6 C4 40  // .t,......f.....@
    4CD0: 75 1D 0A FF 75 05 E8 1E 00 EB 0F 80 FF 01 75 14  // u...u.........u.
    4CE0: BB 13 00 E8 EB E5 D1 E8 8B D0 B0 4F 32 E4 C3 B0  // ...........O2...
    4CF0: 4F B4 03 C3 32 C0 C3 52 53 66 50 81 E2 FF 02 D1  // O...2..RSfP.....
    4D00: E2 8B C2 40 66 C1 E0 10 8B C2 BB 13 00 E8 1C E5  // ...@f...........
    4D10: BB 12 00 E8 16 E5 66 58 5B 5A C3 9C 1E 06 66 50  // ......fX[Z....fP
    4D20: 66 51 66 52 66 53 66 55 66 56 66 57 0E 1F E8 34  // fQfRfSfUfVfW...4
    4D30: E6 E8 8A FF E8 53 E6 8B EC 89 56 10 89 46 18 66  // .....S....V..F.f
    4D40: 5F 66 5E 66 5D 66 5B 66 5A 66 59 66 58 07 1F 9D  // _f^f]f[fZfYfX...
    4D50: CB 0E 07 BF 82 90 2E 8B 0E 80 90 B8 4F 00 C3 00  // ............O...
    4D60: 0A DB 75 06 B7 04 B3 10 EB 26 80 FB 01 75 14 E8  // ..u......&...u..
    4D70: AE C9 75 21 53 B1 01 0A FF 74 02 B1 00 E8 C3 C8  // ..u!S....t......
    4D80: 5B EB 0D 80 FB 02 75 0D E8 DB C9 8A F8 C0 E7 02  // [.....u.........
    4D90: B0 4F 32 E4 C3 B8 4F 03 C3 00 80 E3 01 0A DB 75  // .O2...O........u
    4DA0: 05 BB 02 01 EB 0E E8 77 C9 75 0E 33 C0 53 E8 5D  // .......w.u.3.S.]
    4DB0: B8 5B 74 05 B0 4F 32 E4 C3 B0 4F B4 03 C3 80 FC  // .[t..O2...O.....
    4DC0: 1D 72 03 CD 42 C3 1E 06 66 50 66 51 66 52 66 53  // .r..B...fPfQfRfS
    4DD0: 66 55 66 56 66 57 0E 1F 50 0F B6 C4 D1 E0 8B F0  // fUfVfW..P.......
    4DE0: 58 2E FF 94 A0 4D 66 5F 66 5E 66 5D 66 5B 66 5A  // X....Mf_f^f]f[fZ
    4DF0: 66 59 66 58 07 1F C3 0E 1F 50 0F B6 C4 D1 E0 8B  // fYfX.....P......
    4E00: F0 58 2E FF 94 A0 4D C3 DA 4D EA 86 03 87 20 87  // .X....M..M.... .
    4E10: CD 4E 23 7E 55 7E C8 7E 4B 7F D9 80 DD 80 E6 83  // .N#~U~.~K.......
    4E20: B7 84 3A 85 A1 85 3C 87 9E 87 47 8A E6 50 8E 8E  // ..:...<...G..P..
    4E30: 8E 4D 8E 4D 8E 4D 8E 4D 8E 4D 8E 4D 5E 8F 61 73  // .M.M.M.M.M.M^.as
    4E40: B5 74 2E 8E 1E 0E 03 80 26 87 04 F3 50 8A E0 80  // .t......&...P...
    4E50: E4 7F E8 C4 01 3B D3 75 02 58 C3 BA CC 03 EC B2  // .....;.u.X......
    4E60: B4 B1 30 26 F6 47 09 01 74 0C B2 D4 B1 20 A8 01  // ..0&.G..t.... ..
    4E70: 75 49 B5 09 EB 06 A8 01 74 41 B5 0B 53 E8 6A 41  // uI......tA..S.jA
    4E80: 0A FF 5B 75 0B 80 26 88 04 F0 08 2E 88 04 EB 2B  // ..[u..&........+
    4E90: 58 80 0E 87 04 08 80 26 10 04 CF 08 0E 10 04 89  // X......&........
    4EA0: 16 63 04 C7 06 85 04 08 00 C6 06 84 04 18 C7 06  // .c..............
    4EB0: 0C 01 6C 5A 8C 0E 0E 01 CD 42 C3 80 26 10 04 CF  // ..lZ.....B..&...
    4EC0: 08 0E 10 04 58 53 50 0E 1F 33 C9 8A C8 E8 50 C8  // ....XSP..3....P.
    4ED0: 74 06 E8 C1 C6 E8 09 C0 B2 08 BE 40 1C E8 56 CA  // t..........@..V.
    4EE0: BE 40 1C E8 78 C5 58 5B 0F 84 6E FF 2E 8E 1E 0E  // .@..x.X[..n.....
    4EF0: 03 0E 07 E8 13 29 0E 1F 53 66 BB 40 1C 00 1C E8  // .....)..Sf.@....
    4F00: 91 CC BE 00 1C B0 20 E8 AD C5 5B 2E 8E 1E 0E 03  // ...... ...[.....
    4F10: 0E 07 E8 1C 2E E8 24 00 E8 28 3D E8 D1 01 E8 8E  // ......$..(=.....
    4F20: 01 E8 AE 3E 0E 1F BE 00 1C B0 10 E8 89 C5 E8 F7  // ...>............
    4F30: 2D E8 EF 2D C3 8B EC C6 46 1B 00 C3 E8 2F 00 E8  // -..-....F..../..
    4F40: 0A 00 E8 BD 00 E8 52 00 E8 5C 0A C3 53 83 C3 0A  // ......R..\..S...
    4F50: 8B 16 63 04 B9 19 00 B8 11 30 EF 32 C0 26 8A 27  // ..c......0.2.&.'
    4F60: EF 43 FE C0 E2 F7 5B 80 C2 06 32 C0 EE C3 53 BA  // .C....[...2...S.
    4F70: C4 03 83 C3 05 B9 04 00 B0 01 26 8A 27 3C 01 75  // ..........&.'<.u
    4F80: 03 80 CC 20 EF 43 FE C0 E2 F0 5B 26 8A 47 09 BA  // ... .C....[&.G..
    4F90: C2 03 EE B2 C4 B8 00 03 EF C3 8B F3 83 C6 23 BA  // ..............#.
    4FA0: DA 03 26 F6 47 09 01 75 02 B2 BA F6 06 89 04 08  // ..&.G..u........
    4FB0: 74 1D 83 C6 10 EC B9 04 00 B4 10 B2 C0 80 FC 11  // t...............
    4FC0: 74 07 8A C4 EE 26 8A 04 EE 46 FE C4 E2 EF C3 53  // t....&...F.....S
    4FD0: EC 8B DE B9 14 00 32 E4 B2 C0 8A C4 EE FE C4 26  // ......2........&
    4FE0: 8A 07 EE 43 E2 F4 8A C4 EE 32 C0 EE 1E 06 E8 49  // ...C.....2.....I
    4FF0: 2D 0B ED 74 09 1F 1E B9 10 00 F3 A4 46 A4 07 1F  // -..t........F...
    5000: 5B C3 53 83 C3 37 B9 09 00 32 C0 BA CE 03 26 8A  // [.S..7...2....&.
    5010: 27 EF 43 FE C0 E2 F7 5B C3 BB A4 52 0E 07 8B D3  // '.C....[...R....
    5020: 0A E4 7D 01 C3 E8 01 00 C3 33 F6 80 FC 03 7F 3C  // ..}......3.....<
    5030: 4A F6 06 89 04 10 75 20 A0 88 04 24 0F 3C 02 7E  // J.....u ...$.<.~
    5040: 24 3C 08 74 20 3C 06 74 1C 3C 07 74 18 B0 40 F6  // $<.t <.t.<.t..@.
    5050: E4 03 D8 81 C3 00 04 C3 B0 40 D0 EC F6 E4 03 D8  // .........@......
    5060: 81 C3 80 04 C3 B0 40 F6 E4 03 D8 C3 80 FC 07 75  // ......@........u
    5070: 11 F6 06 89 04 10 75 05 81 C3 00 01 C3 81 C3 00  // ......u.........
    5080: 05 C3 BF 26 50 BE 47 50 33 C9 E8 4E 00 C3 04 80  // ...&P.GP3..N....
    5090: 00 05 80 00 06 C0 00 0D 80 02 0E C0 02 0F 80 03  // ................
    50A0: 10 C0 03 11 40 05 12 80 05 13 C0 05 62 40 01 53  // ....@.......b@.S
    50B0: 8A 1E 49 04 80 FB 07 7F 10 32 FF D1 E3 2E 8B 87  // ..I......2......
    50C0: 63 50 A2 65 04 88 26 66 04 5B C3 2C 30 28 30 2D  // cP.e..&f.[.,0(0-
    50D0: 30 29 30 2A 30 2E 30 1E 3F 29 30 2E 38 25 75 07  // 0)0*0.0.?)0.8%u.
    50E0: 2E 03 5D 01 33 F6 C3 83 C7 03 3B FE 75 ED C3 1E  // ..].3.....;.u...
    50F0: 06 2E 8E 1E 0E 03 F6 06 87 04 80 75 49 83 3E 4C  // ...........uI.>L
    5100: 04 00 74 42 A0 49 04 B9 00 20 2E 8B 3E 14 03 26  // ..tB.I... ..>..&
    5110: F6 47 33 01 75 0E 26 F6 47 09 01 75 1B 2E 8B 3E  // .G3.u.&.G..u...>
    5120: 12 03 EB 14 3C 06 7E 0B 2E 8B 3E 10 03 26 8A 67  // ....<.~...>..&.g
    5130: 37 B5 40 66 33 C0 EB 06 66 B8 20 07 20 07 8E C7  // 7.@f3...f. . ...
    5140: 66 33 FF F3 66 AB 80 26 87 04 7F 07 1F C3 2E 8E  // f3..f..&........
    5150: 1E 0E 03 80 FB 10 75 03 E9 7A 01 80 FB 20 75 03  // ......u..z... u.
    5160: E9 9B 01 80 FB 32 75 1F BA CC 03 0A C0 75 09 EC  // .....2u......u..
    5170: 0C 02 B2 C2 EE E9 F3 00 FE C8 0F 85 F3 00 EC 24  // ...............$
    5180: FD B2 C2 EE E9 E4 00 80 FB 35 75 28 3C 80 75 08  // .........5u(<.u.
    5190: 80 0E 89 04 40 E9 D3 00 F6 06 89 04 40 0F 84 D0  // ....@.......@...
    51A0: 00 0A C0 0F 84 CA 00 FE C8 75 06 E8 98 07 E9 BA  // .........u......
    51B0: 00 E9 BD 00 80 FB 30 74 03 E9 96 00 50 E8 2A 3E  // ......0t....P.*>
    51C0: 8A EF BA CC 03 EC 8A C8 58 0A C0 75 30 B7 08 F6  // ........X..u0...
    51D0: C1 01 75 12 0A ED 75 0B A0 10 04 24 30 3C 30 75  // ..u...u....$0<0u
    51E0: 10 B7 02 E9 8B 00 A0 10 04 24 30 3C 30 75 02 B7  // .........$0<0u..
    51F0: 02 80 26 89 04 6F 80 0E 89 04 80 EB 36 3C 01 75  // ..&..o......6<.u
    5200: 41 80 26 89 04 6F B7 09 F6 C1 01 75 15 B7 0B A0  // A.&..o.....u....
    5210: 10 04 24 30 3C 30 74 1B B7 09 0A ED 74 15 B7 05  // ..$0<0t.....t...
    5220: EB 11 A0 10 04 24 30 3C 30 75 08 B7 0B 0A ED 74  // .....$0<0u.....t
    5230: 02 B7 03 8A 1E 88 04 80 E3 F0 0A DF 88 1E 88 04  // ................
    5240: EB 29 3C 02 75 2B 80 26 89 04 6F 80 0E 89 04 10  // .)<.u+.&..o.....
    5250: EB B4 80 FB 31 75 1B 0A C0 74 0B 3C 01 75 0C 80  // ....1u...t.<.u..
    5260: 0E 89 04 08 EB 05 80 26 89 04 F7 8B EC C6 46 1A  // .......&......F.
    5270: 12 C3 80 FB 33 75 16 3C 00 74 0B 3C 01 75 EC 80  // ....3u.<.t.<.u..
    5280: 26 89 04 FD EB E5 80 0E 89 04 02 EB DE 80 FB 34  // &..............4
    5290: 75 17 3C 00 75 07 80 26 87 04 FE EB CE 3C 01 75  // u.<.u..&.....<.u
    52A0: 07 80 0E 87 04 01 EB C3 C3 80 FB 36 75 26 BB 20  // ...........6u&. 
    52B0: FF 3C 01 74 09 BB 00 DF 3C 00 74 02 EB AD E8 02  // .<.t....<.t.....
    52C0: 00 EB A8 9C FA BA C4 03 B0 01 EE 42 EC 22 C7 0A  // ...........B."..
    52D0: C3 EE 9D C3 C3 B3 03 B7 00 BA CC 03 EC A8 01 75  // ...............u
    52E0: 02 B7 01 A0 88 04 8A E0 B1 04 D2 EC 25 0F 0F 8B  // ............%...
    52F0: C8 8B EC 89 5E 0E 89 4E 16 C6 46 1A 12 C3 9C FA  // ....^..N..F.....
    5300: C7 06 14 00 4E 78 8C 0E 16 00 9D C3 28 18 08 00  // ....Nx......(...
    5310: 08 09 03 00 02 63 2D 27 28 90 2B A0 BF 1F 00 C7  // .....c-'(.+.....
    5320: 06 07 00 00 00 00 9C 8E 8F 14 1F 96 B9 A3 FF 00  // ................
    5330: 01 02 03 04 05 06 07 10 11 12 13 14 15 16 17 08  // ................
    5340: 00 0F 00 00 00 00 00 00 10 0E 00 FF 50 18 08 00  // ............P...
    5350: 10 01 03 00 02 63 5F 4F 50 82 55 81 BF 1F 00 C7  // .....c_OP.U.....
    5360: 06 07 00 00 00 00 9C 8E 8F 28 1F 96 B9 A3 FF 00  // .........(......
    5370: 01 02 03 04 05 06 07 10 11 12 13 14 15 16 17 08  // ................
    5380: 00 0F 00 00 00 00 00 00 10 0E 00 FF 28 18 08 00  // ............(...
    5390: 40 09 03 00 02 63 2D 27 28 90 2B 80 BF 1F 00 C1  // @....c-'(.+.....
    53A0: 00 00 00 00 00 00 9C 8E 8F 14 00 96 B9 A2 FF 00  // ................
    53B0: 13 15 17 02 04 06 07 10 11 12 13 14 15 16 17 01  // ................
    53C0: 00 03 00 00 00 00 00 00 30 0F 00 FF 50 18 08 00  // ........0...P...
    53D0: 40 01 01 00 06 63 5F 4F 50 82 54 80 BF 1F 00 C1  // @....c_OP.T.....
    53E0: 00 00 00 00 00 00 9C 8E 8F 28 00 96 B9 C2 FF 00  // .........(......
    53F0: 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 01  // ................
    5400: 00 01 00 00 00 00 00 00 00 0D 00 FF 50 18 0E 00  // ............P...
    5410: 10 00 03 00 03 A6 5F 4F 50 82 55 81 BF 1F 00 4D  // ......_OP.U....M
    5420: 0B 0C 00 00 00 00 83 85 5D 28 0D 63 BA A3 FF 00  // ........](.c....
    5430: 08 08 08 08 08 08 08 10 18 18 18 18 18 18 18 0E  // ................
    5440: 00 0F 08 00 00 00 00 00 10 0A 00 FF 50 1D 10 00  // ............P...
    5450: A0 01 0F 00 0A E3 5F 4F 50 82 54 80 0B 3E 00 40  // ......_OP.T..>.@
    5460: 00 00 00 00 00 00 EA 8C DF 50 00 E7 04 E3 FF 00  // .........P......
    5470: 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 01  // ................
    5480: 00 0F 00 10 00 00 00 00 40 05 0F FF 00 05 11 1C  // ........@.......
    5490: 08 0B 14 28 0E 18 2D 32 20 24 38 3F 00 05 08 0B  // ...(..-2 $8?....
    54A0: 0E 11 14 18 1C 20 24 28 2D 32 38 3F 07 0C 10 15  // ..... $(-28?....
    54B0: 1A 18 16 15 13 1C 25 2F 38 33 2E 2A 25 27 29 2A  // ......%/83.*%')*
    54C0: 2C 23 19 10 23 25 27 2A 2C 2B 2A 29 29 2D 32 37  // ,#..#%'*,+*))-27
    54D0: 3B 39 37 34 32 33 34 35 35 31 2C 27 2F 30 32 33  // ;974234551,'/023
    54E0: 34 34 33 33 32 35 38 3A 3D 3C 3A 39 38 38 39 39  // 4433258:=<:98899
    54F0: 3A 37 34 31 03 05 07 09 0B 0B 0A 09 08 0D 11 15  // :741............
    5500: 19 17 15 13 11 11 12 13 14 0F 0B 07 10 10 12 13  // ................
    5510: 14 13 13 13 12 14 16 18 1A 19 18 17 16 17 17 17  // ................
    5520: 18 15 14 11 15 15 16 17 17 17 17 17 16 18 19 1A  // ................
    5530: 1B 1B 1A 19 19 19 19 19 1A 18 17 16 02 03 04 05  // ................
    5540: 07 06 06 05 05 07 0A 0C 0E 0D 0C 0B 09 0A 0A 0B  // ................
    5550: 0B 09 06 04 09 09 0A 0B 0B 0B 0B 0B 0A 0C 0D 0E  // ................
    5560: 0F 0F 0E 0D 0D 0D 0D 0D 0E 0C 0B 0A 0C 0C 0C 0D  // ................
    5570: 0D 0D 0D 0D 0C 0D 0E 0F 0F 0F 0F 0E 0E 0E 0E 0E  // ................
    5580: 0E 0E 0D 0C 00 00 00 00 00 00 00 00 28 18 08 00  // ............(...
    5590: 20 09 0F 00 06 63 2D 27 28 90 2B 80 BF 1F 00 C0  //  ....c-'(.+.....
    55A0: 00 00 00 00 00 00 9C 8E 8F 14 00 96 B9 E3 FF 00  // ................
    55B0: 01 02 03 04 05 06 07 10 11 12 13 14 15 16 17 01  // ................
    55C0: 00 0F 00 00 00 00 00 00 00 05 0F FF 50 18 08 00  // ............P...
    55D0: 40 01 0F 00 06 63 5F 4F 50 82 54 80 BF 1F 00 C0  // @....c_OP.T.....
    55E0: 00 00 00 00 00 00 9C 8E 8F 28 00 96 B9 E3 FF 00  // .........(......
    55F0: 01 02 03 04 05 06 07 10 11 12 13 14 15 16 17 01  // ................
    5600: 00 0F 00 00 00 00 00 00 00 05 0F FF 00 05 11 1C  // ................
    5610: 08 0B 25 28 02 07 1B 20 0F 14 28 2C 0C 11 25 2A  // ..%(... ..(,..%*
    5620: 14 1E 32 36 0F 13 27 2C 1B 20 34 39 06 0B 1F 24  // ..26..',. 49...$
    5630: 13 18 2C 30 09 0D 21 26 15 1A 2E 33 13 17 2B 30  // ..,0..!&...3..+0
    5640: 1F 24 38 3D 0E 18 2D 32 20 24 38 3F 00 05 11 1C  // .$8=..-2 $8?....
    5650: 08 0B 14 18 00 05 11 1C 08 0B 14 18 0E 18 2D 32  // ..............-2
    5660: 20 24 38 3F 0E 18 2D 32 20 24 38 3F 00 05 11 1C  //  $8?..-2 $8?....
    5670: 08 0B 14 18 00 05 11 1C 08 0B 14 18 0E 18 2D 32  // ..............-2
    5680: 20 24 38 3F 0E 18 2D 32 20 24 38 3F 50 18 0E 00  //  $8?..-2 $8?P...
    5690: 80 01 0F 00 06 A2 5F 4F 50 82 54 80 BF 1F 00 40  // ......_OP.T....@
    56A0: 00 00 00 00 00 00 83 85 5D 28 0F 63 BA E3 FF 00  // ........](.c....
    56B0: 08 00 00 18 18 00 00 00 08 00 00 00 18 00 00 0B  // ................
    56C0: 00 05 00 00 00 00 00 00 00 05 05 FF 50 18 0E 00  // ............P...
    56D0: 80 01 0F 00 06 A3 5F 4F 50 82 54 80 BF 1F 00 40  // ......_OP.T....@
    56E0: 00 00 00 00 00 00 83 85 5D 28 0F 63 BA E3 FF 00  // ........](.c....
    56F0: 01 02 03 04 05 14 07 38 39 3A 3B 3C 3D 3E 3F 01  // .......89:;<=>?.
    5700: 00 0F 00 00 00 00 00 00 00 05 0F FF 28 18 0E 00  // ............(...
    5710: 08 09 03 00 02 A3 2D 27 28 90 2B A0 BF 1F 00 4D  // ......-'(.+....M
    5720: 0B 0C 00 00 00 00 83 85 5D 14 1F 63 BA A3 FF 00  // ........]..c....
    5730: 01 02 03 04 05 14 07 38 39 3A 3B 3C 3D 3E 3F 08  // .......89:;<=>?.
    5740: 00 0F 00 00 00 00 00 00 10 0E 00 FF 50 18 0E 00  // ............P...
    5750: 10 01 03 00 02 A3 5F 4F 50 82 55 81 BF 1F 00 4D  // ......_OP.U....M
    5760: 0B 0C 00 00 00 00 83 85 5D 28 1F 63 BA A3 FF 00  // ........](.c....
    5770: 01 02 03 04 05 14 07 38 39 3A 3B 3C 3D 3E 3F 08  // .......89:;<=>?.
    5780: 00 0F 00 00 00 00 00 00 10 0E 00 FF 28 18 10 00  // ............(...
    5790: 08 08 03 00 02 67 2D 27 28 90 2B A0 BF 1F 00 4F  // .....g-'(.+....O
    57A0: 0D 0E 00 00 00 00 9C 8E 8F 14 1F 96 B9 A3 FF 00  // ................
    57B0: 01 02 03 04 05 14 07 38 39 3A 3B 3C 3D 3E 3F 0C  // .......89:;<=>?.
    57C0: 00 0F 08 00 00 00 00 00 10 0E 00 FF 50 18 10 00  // ............P...
    57D0: 10 00 03 00 02 67 5F 4F 50 82 55 81 BF 1F 00 4F  // .....g_OP.U....O
    57E0: 0D 0E 00 00 00 00 9C 8E 8F 28 1F 96 B9 A3 FF 00  // .........(......
    57F0: 01 02 03 04 05 14 07 38 39 3A 3B 3C 3D 3E 3F 0C  // .......89:;<=>?.
    5800: 00 0F 08 00 00 00 00 00 10 0E 00 FF 50 18 10 00  // ............P...
    5810: 10 00 03 00 02 66 5F 4F 50 82 55 81 BF 1F 00 4F  // .....f_OP.U....O
    5820: 0D 0E 00 00 00 00 9C 8E 8F 28 0F 96 B9 A3 FF 00  // .........(......
    5830: 08 08 08 08 08 08 08 10 18 18 18 18 18 18 18 0E  // ................
    5840: 00 0F 08 00 00 00 00 00 10 0A 00 FF 50 1D 10 00  // ............P...
    5850: A0 01 0F 00 06 E3 5F 4F 50 82 54 80 0B 3E 00 40  // ......_OP.T..>.@
    5860: 00 00 00 00 00 00 EA 8C DF 28 00 E7 04 C3 FF 00  // .........(......
    5870: 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 01  // ???????????????.
    5880: 00 0F 00 00 00 00 00 00 00 05 01 FF 50 1D 10 00  // ............P...
    5890: A0 01 0F 00 06 E3 5F 4F 50 82 54 80 0B 3E 00 40  // ......_OP.T..>.@
    58A0: 00 00 00 00 00 00 EA 8C DF 28 00 E7 04 E3 FF 00  // .........(......
    58B0: 01 02 03 04 05 14 07 38 39 3A 3B 3C 3D 3E 3F 01  // .......89:;<=>?.
    58C0: 00 0F 00 00 00 00 00 00 00 05 0F FF 28 18 08 00  // ............(...
    58D0: 20 01 0F 00 0E 63 5F 4F 50 82 54 80 BF 1F 00 41  //  ....c_OP.T....A
    58E0: 00 00 00 00 00 00 9C 8E 8F 28 40 96 B9 A3 FF 00  // .........(@.....
    58F0: 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 41  // ...............A
    5900: 00 0F 00 00 00 00 00 00 40 05 0F FF A4 52 00 C0  // ........@....R..
    5910: 00 00 00 00 00 00 00 00 00 00 00 00 C4 58 00 C0  // .............X..
    5920: 00 00 00 00 00 00 00 00 00 00 00 00 1A 00 5C 90  // ..............\.
    5930: 00 C0 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    5940: 00 00 00 00 00 00 1E E8 10 00 2E 8E 1E 0E 03 E8  // ................
    5950: F8 36 E8 CF 36 E8 70 1A 1F C3 2E 8E 1E 0E 03 C7  // .6..6.p.........
    5960: 06 87 04 60 F9 C6 06 8A 04 0B A0 89 04 0C 11 24  // ...`...........$
    5970: 17 A2 89 04 B4 01 E8 6D 1E A0 89 04 80 26 10 04  // .......m.....&..
    5980: CF 80 0E 10 04 20 C7 06 63 04 D4 03 0E 1F E8 BF  // ..... ..c.......
    5990: B5 F7 C1 02 00 75 03 E8 47 B5 C3 1E 2E 8E 1E 0E  // .....u..G.......
    59A0: 03 0E 07 EB 00 1F C3 F6 06 89 04 08 74 01 C3 53  // ............t..S
    59B0: BA C8 03 EC B0 FF B2 C6 EE B2 C8 80 3E 63 04 B4  // ............>c..
    59C0: 75 2F BE 20 5A B9 40 00 33 DB 9C FA 8A C3 EE 8B  // u/. Z.@.3.......
    59D0: FB C1 EF 03 83 E7 03 03 FE 2E 8A 05 42 EE 2E 8A  // ............B...
    59E0: 45 04 EE 2E 8A 45 08 EE FE C3 4A E2 DF 9D E9 85  // E....E....J.....
    59F0: 00 26 8A 47 2B F6 06 89 04 06 74 31 B9 F8 00 BF  // .&.G+.....t1....
    5A00: 24 54 3C 08 74 11 B9 40 00 BF A4 55 3C 38 74 07  // $T<.t..@...U<8t.
    5A10: 3C 3F 74 03 BF E4 55 33 DB 9C FA 8A C3 EE 2E 8A  // <?t...U3........
    5A20: 01 42 EE EE EE FE C3 4A E2 F1 9D EB 49 3C 08 74  // .B.....J....I<.t
    5A30: 25 3C 38 74 2E 3C 3F 74 2A B9 08 00 33 DB 51 E8  // %<8t.<?t*...3.Q.
    5A40: 0B D3 B9 08 00 F7 C3 10 00 74 03 83 C7 18 E8 67  // .........t.....g
    5A50: 00 59 E2 EA EB 20 E8 F4 D2 B9 00 01 33 DB E8 57  // .Y... ......3..W
    5A60: 00 EB 13 B9 40 00 33 DB 51 E8 28 00 8A C3 E8 B7  // ....@.3.Q.(.....
    5A70: 2F FE C3 59 E2 F2 5B C3 00 2A 00 2A 00 2A 00 2A  // /..Y..[..*.*.*.*
    5A80: 15 3F 15 3F 15 3F 15 3F 00 2A 00 3F 00 2A 00 3F  // .?.?.?.?.*.?.*.?
    5A90: 00 2A 00 3F 8B FB C1 EF 02 83 E7 0F 2E 8A B5 10  // .*.?............
    5AA0: 5A 8B FB D1 EF 83 E7 0F 2E 8A AD 10 5A 8B FB 83  // Z...........Z...
    5AB0: E7 0F 2E 8A 8D 10 5A C3 9C 8A C3 FA EE 2E 8A 05  // ......Z.........
    5AC0: 42 EE 47 2E 8A 05 EE 47 2E 8A 05 EE 47 FE C3 4A  // B.G....G....G..J
    5AD0: E2 E7 9D C3 00 00 00 00 00 00 00 00 7E 81 A5 81  // ............~...
    5AE0: BD 99 81 7E 7C FE D6 BA C6 FE 7C 00 C6 EE FE FE  // ...~|.....|.....
    5AF0: 7C 38 10 00 10 38 7C FE 7C 38 10 00 10 38 10 EE  // |8...8|.|8...8..
    5B00: EE 10 38 00 38 7C FE FE 6C 10 38 00 00 18 3C 7E  // ..8.8|..l.8...<~
    5B10: 3C 18 00 00 FF E7 C3 81 C3 E7 FF FF 00 18 3C 66  // <.............<f
    5B20: 66 3C 18 00 FF E7 C3 99 99 C3 E7 FF 1E 0E 1E 36  // f<.............6
    5B30: 78 CC CC 78 7E C3 C3 7E 18 7E 18 18 1E 1A 1E 18  // x..x~..~.~......
    5B40: 18 70 F0 60 3E 3E 36 36 F6 66 1E 0C DB 3C 66 E7  // .p.`>>66.f...<f.
    5B50: 66 3C DB 00 80 C0 F0 F8 F0 C0 80 00 02 06 1E 3E  // f<.............>
    5B60: 1E 06 02 00 18 3C 7E 18 7E 3C 18 00 66 66 66 66  // .....<~.~<..ffff
    5B70: 66 00 66 00 7F DB 7B 3B 1B 1B 1B 00 3C 66 38 6C  // f.f...{;....<f8l
    5B80: 6C 38 CC 78 00 00 00 00 FE FE FE 00 18 3C 7E 18  // l8.x.........<~.
    5B90: 7E 3C 18 7E 18 3C 7E 18 18 18 18 00 18 18 18 18  // ~<.~.<~.........
    5BA0: 7E 3C 18 00 00 18 1C FE 1C 18 00 00 00 30 70 FE  // ~<...........0p.
    5BB0: 70 30 00 00 00 00 C0 C0 C0 FE 00 00 00 24 66 FF  // p0...........$f.
    5BC0: 66 24 00 00 00 10 38 7C 7C FE 00 00 00 FE 7C 7C  // f$....8||.....||
    5BD0: 38 10 00 00 00 00 00 00 00 00 00 00 18 3C 3C 18  // 8............<<.
    5BE0: 18 00 18 00 6C 6C 6C 00 00 00 00 00 6C 6C FE 6C  // ....lll.....ll.l
    5BF0: FE 6C 6C 00 18 7E C0 7C 06 FC 18 00 00 C6 0C 18  // .ll..~.|........
    5C00: 30 60 C6 00 38 6C 38 76 CC CC 76 00 18 18 30 00  // 0`..8l8v..v...0.
    5C10: 00 00 00 00 18 30 60 60 60 30 18 00 60 30 18 18  // .....0```0..`0..
    5C20: 18 30 60 00 00 EE 7C FE 7C EE 00 00 00 18 18 7E  // .0`...|.|......~
    5C30: 18 18 00 00 00 00 00 00 18 18 30 00 00 00 00 FE  // ..........0.....
    5C40: 00 00 00 00 00 00 00 00 00 38 38 00 06 0C 18 30  // .........88....0
    5C50: 60 C0 80 00 7C C6 CE DE F6 E6 7C 00 18 78 18 18  // `...|.....|..x..
    5C60: 18 18 7E 00 7C C6 0C 18 30 66 FE 00 7C C6 06 3C  // ..~.|...0f..|..<
    5C70: 06 C6 7C 00 0C 1C 3C 6C FE 0C 0C 00 FE C0 FC 06  // ..|...<l........
    5C80: 06 C6 7C 00 7C C6 C0 FC C6 C6 7C 00 FE C6 06 0C  // ..|.|.....|.....
    5C90: 18 18 18 00 7C C6 C6 7C C6 C6 7C 00 7C C6 C6 7E  // ....|..|..|.|..~
    5CA0: 06 C6 7C 00 00 1C 1C 00 00 1C 1C 00 00 18 18 00  // ..|.............
    5CB0: 00 18 18 30 0C 18 30 60 30 18 0C 00 00 00 FE 00  // ...0..0`0.......
    5CC0: 00 FE 00 00 60 30 18 0C 18 30 60 00 7C C6 06 0C  // ....`0...0`.|...
    5CD0: 18 00 18 00 7C C6 C6 DE DC C0 7E 00 38 6C C6 C6  // ....|.....~.8l..
    5CE0: FE C6 C6 00 FC 66 66 7C 66 66 FC 00 3C 66 C0 C0  // .....ff|ff..<f..
    5CF0: C0 66 3C 00 F8 6C 66 66 66 6C F8 00 FE C2 C0 F8  // .f<..lfffl......
    5D00: C0 C2 FE 00 FE 62 60 7C 60 60 F0 00 7C C6 C0 C0  // .....b`|``..|...
    5D10: DE C6 7C 00 C6 C6 C6 FE C6 C6 C6 00 3C 18 18 18  // ..|.........<...
    5D20: 18 18 3C 00 3C 18 18 18 D8 D8 70 00 C6 CC D8 F0  // ..<.<.....p.....
    5D30: D8 CC C6 00 F0 60 60 60 60 62 FE 00 C6 EE FE D6  // .....````b......
    5D40: D6 C6 C6 00 C6 E6 E6 F6 DE CE C6 00 7C C6 C6 C6  // ............|...
    5D50: C6 C6 7C 00 FC 66 66 7C 60 60 F0 00 7C C6 C6 C6  // ..|..ff|``..|...
    5D60: C6 D6 7C 06 FC C6 C6 FC D8 CC C6 00 7C C6 C0 7C  // ..|.........|..|
    5D70: 06 C6 7C 00 7E 5A 18 18 18 18 3C 00 C6 C6 C6 C6  // ..|.~Z....<.....
    5D80: C6 C6 7C 00 C6 C6 C6 C6 6C 38 10 00 C6 C6 D6 D6  // ..|.....l8......
    5D90: FE EE C6 00 C6 6C 38 38 38 6C C6 00 66 66 66 3C  // .....l888l..fff<
    5DA0: 18 18 3C 00 FE 86 0C 18 30 62 FE 00 7C 60 60 60  // ..<.....0b..|```
    5DB0: 60 60 7C 00 C0 60 30 18 0C 06 02 00 7C 0C 0C 0C  // ``|..`0.....|...
    5DC0: 0C 0C 7C 00 10 38 6C C6 00 00 00 00 00 00 00 00  // ..|..8l.........
    5DD0: 00 00 00 FF 30 30 18 00 00 00 00 00 00 00 78 0C  // ....00........x.
    5DE0: 7C CC 7E 00 E0 60 7C 66 66 66 FC 00 00 00 7C C6  // |.~..`|fff....|.
    5DF0: C0 C6 7C 00 1C 0C 7C CC CC CC 7E 00 00 00 7C C6  // ..|...|...~...|.
    5E00: FE C0 7C 00 1C 36 30 FC 30 30 78 00 00 00 76 CE  // ..|..60.00x...v.
    5E10: C6 7E 06 7C E0 60 7C 66 66 66 E6 00 18 00 38 18  // .~.|.`|fff....8.
    5E20: 18 18 3C 00 0C 00 1C 0C 0C 0C CC 78 E0 60 66 6C  // ..<........x.`fl
    5E30: 78 6C E6 00 18 18 18 18 18 18 1C 00 00 00 6C FE  // xl............l.
    5E40: D6 D6 C6 00 00 00 DC 66 66 66 66 00 00 00 7C C6  // .......ffff...|.
    5E50: C6 C6 7C 00 00 00 DC 66 66 7C 60 F0 00 00 76 CC  // ..|....ff|`...v.
    5E60: CC 7C 0C 1E 00 00 DC 66 60 60 F0 00 00 00 7C C0  // .|.....f``....|.
    5E70: 7C 06 7C 00 30 30 FC 30 30 36 1C 00 00 00 CC CC  // |.|.00.006......
    5E80: CC CC 76 00 00 00 C6 C6 6C 38 10 00 00 00 C6 C6  // ..v.....l8......
    5E90: D6 FE 6C 00 00 00 C6 6C 38 6C C6 00 00 00 C6 C6  // ..l....l8l......
    5EA0: CE 76 06 7C 00 00 FC 98 30 64 FC 00 0E 18 18 70  // .v.|....0d.....p
    5EB0: 18 18 0E 00 18 18 18 00 18 18 18 00 70 18 18 0E  // ............p...
    5EC0: 18 18 70 00 76 DC 00 00 00 00 00 00 00 10 38 38  // ..p.v.........88
    5ED0: 6C 6C FE 00 3C 66 C0 66 3C 18 CC 78 00 C6 00 C6  // ll..<f.f<..x....
    5EE0: C6 CE 76 00 0E 00 7C C6 FE C0 7C 00 7C C6 78 0C  // ..v...|...|.|.x.
    5EF0: 7C CC 7E 00 C6 00 78 0C 7C CC 7E 00 E0 00 78 0C  // |.~...x.|.~...x.
    5F00: 7C CC 7E 00 38 38 78 0C 7C CC 7E 00 00 00 7C C0  // |.~.88x.|.~...|.
    5F10: 7C 18 6C 38 7C C6 7C C6 FE C0 7C 00 C6 00 7C C6  // |.l8|.|...|...|.
    5F20: FE C0 7C 00 E0 00 7C C6 FE C0 7C 00 66 00 38 18  // ..|...|...|.f.8.
    5F30: 18 18 3C 00 7C C6 38 18 18 18 3C 00 00 00 38 18  // ..<.|.8...<...8.
    5F40: 18 18 3C 00 C6 38 6C C6 FE C6 C6 00 38 38 00 7C  // ..<..8l.....88.|
    5F50: C6 FE C6 00 0E 00 FE C0 F8 C0 FE 00 00 00 6C 9A  // ..............l.
    5F60: 7E D8 6E 00 7E D8 D8 FE D8 D8 DE 00 7C C6 00 7C  // ~.n.~.......|..|
    5F70: C6 C6 7C 00 00 C6 00 7C C6 C6 7C 00 00 E0 00 7C  // ..|....|..|....|
    5F80: C6 C6 7C 00 7C C6 00 C6 C6 CE 76 00 00 E0 00 C6  // ..|.|.....v.....
    5F90: C6 CE 76 00 18 00 3C 18 18 18 3C 00 C6 38 6C C6  // ..v...<...<..8l.
    5FA0: C6 6C 38 00 C6 00 C6 C6 C6 C6 7C 00 00 18 7E D8  // .l8.......|...~.
    5FB0: D8 7E 18 00 38 6C 60 F0 66 F6 6C 00 C3 66 3C 7E  // .~..8l`.f.l..f<~
    5FC0: 18 3C 18 00 3E 63 38 0E 63 3E 00 1C 00 3E 61 3C  // .<..>c8.c>...>a<
    5FD0: 86 7C 00 1C 0E 00 78 0C 7C CC 7E 00 1C 00 38 18  // .|....x.|.~...8.
    5FE0: 18 18 3C 00 00 0E 00 7C C6 C6 7C 00 00 0E 00 CC  // ..<....|..|.....
    5FF0: CC DC 76 00 00 FC 00 BC 66 66 E6 00 FE 00 C6 E6  // ..v.....ff......
    6000: F6 CE C6 00 3E 00 3E 60 67 63 3D 00 3E 00 76 CE  // ....>.>`gc=.>.v.
    6010: C6 7E 06 7C 18 00 18 30 60 66 3C 00 00 00 00 7C  // .~.|...0`f<....|
    6020: 60 60 00 00 00 00 00 7C 0C 0C 00 00 C0 CC D8 30  // ``.....|.......0
    6030: 7C 36 0C 3E C0 CC D8 30 6C 3C 7E 0C 18 00 18 18  // |6.>...0l<~.....
    6040: 3C 3C 18 00 00 36 6C D8 6C 36 00 00 00 D8 6C 36  // <<...6l.l6....l6
    6050: 6C D8 00 00 22 88 22 88 22 88 22 88 55 AA 55 AA  // l...".".".".U.U.
    6060: 55 AA 55 AA DD 77 DD 77 DD 77 DD 77 18 18 18 18  // U.U..w.w.w.w....
    6070: 18 18 18 18 18 18 18 18 F8 18 18 18 18 18 F8 18  // ................
    6080: F8 18 18 18 36 36 36 36 F6 36 36 36 00 00 00 00  // ....6666.666....
    6090: FE 36 36 36 00 00 F8 18 F8 18 18 18 36 36 F6 06  // .666........66..
    60A0: F6 36 36 36 36 36 36 36 36 36 36 36 00 00 FE 06  // .66666666666....
    60B0: F6 36 36 36 36 36 F6 06 FE 00 00 00 36 36 36 36  // .66666......6666
    60C0: FE 00 00 00 18 18 F8 18 F8 00 00 00 00 00 00 00  // ................
    60D0: F8 18 18 18 18 18 18 18 1F 00 00 00 18 18 18 18  // ................
    60E0: FF 00 00 00 00 00 00 00 FF 18 18 18 18 18 18 18  // ................
    60F0: 1F 18 18 18 00 00 00 00 FF 00 00 00 18 18 18 18  // ................
    6100: FF 18 18 18 18 18 1F 18 1F 18 18 18 36 36 36 36  // ............6666
    6110: 37 36 36 36 36 36 37 30 3F 00 00 00 00 00 3F 30  // 76666670?.....?0
    6120: 37 36 36 36 36 36 F7 00 FF 00 00 00 00 00 FF 00  // 766666..........
    6130: F7 36 36 36 36 36 37 30 37 36 36 36 00 00 FF 00  // .66666707666....
    6140: FF 00 00 00 36 36 F7 00 F7 36 36 36 18 18 FF 00  // ....66...666....
    6150: FF 00 00 00 36 36 36 36 FF 00 00 00 00 00 FF 00  // ....6666........
    6160: FF 18 18 18 00 00 00 00 FF 36 36 36 36 36 36 36  // .........6666666
    6170: 3F 00 00 00 18 18 1F 18 1F 00 00 00 00 00 1F 18  // ?...............
    6180: 1F 18 18 18 00 00 00 00 3F 36 36 36 36 36 36 36  // ........?6666666
    6190: FF 36 36 36 18 18 FF 18 FF 18 18 18 18 18 18 18  // .666............
    61A0: F8 00 00 00 00 00 00 00 1F 18 18 18 FF FF FF FF  // ................
    61B0: FF FF FF FF 00 00 00 00 FF FF FF FF F0 F0 F0 F0  // ................
    61C0: F0 F0 F0 F0 0F 0F 0F 0F 0F 0F 0F 0F FF FF FF FF  // ................
    61D0: 00 00 00 00 00 00 66 DC D8 DC 66 00 00 78 CC F8  // ......f...f..x..
    61E0: CC C6 CC 00 00 FE 62 60 60 60 E0 00 00 FE 6C 6C  // ......b```....ll
    61F0: 6C 6C 6C 00 FE C6 60 30 60 C6 FE 00 00 7E D8 CC  // lll...`0`....~..
    6200: CC D8 70 00 00 66 66 66 66 7C C0 00 00 76 DC 18  // ..p..ffff|...v..
    6210: 18 18 38 00 FE 38 6C C6 6C 38 FE 00 38 6C C6 FE  // ..8..8l.l8..8l..
    6220: C6 6C 38 00 38 6C C6 C6 6C 6C EE 00 3E 60 38 66  // .l8.8l..ll..>`8f
    6230: C6 CC 78 00 00 00 7E DB DB 7E 00 00 06 7C DE F6  // ..x...~..~...|..
    6240: E6 7C C0 00 38 60 C0 F8 C0 60 38 00 7C C6 C6 C6  // .|..8`...`8.|...
    6250: C6 C6 C6 00 00 FE 00 FE 00 FE 00 00 18 18 7E 18  // ..............~.
    6260: 18 00 7E 00 30 18 0C 18 30 00 7E 00 0C 18 30 18  // ..~.0...0.~...0.
    6270: 0C 00 7E 00 0C 1E 18 18 18 18 18 18 18 18 18 18  // ..~.............
    6280: 18 78 30 00 00 00 18 00 7E 00 18 00 00 76 DC 00  // .x0.....~....v..
    6290: 76 DC 00 00 7C C6 C6 7C 00 00 00 00 00 00 00 18  // v...|..|........
    62A0: 18 00 00 00 00 00 00 00 18 00 00 00 1F 18 18 18  // ................
    62B0: F8 38 18 00 D8 6C 6C 6C 00 00 00 00 70 D8 30 F8  // .8...lll....p.0.
    62C0: 00 00 00 00 00 00 7C 7C 7C 7C 00 00 00 00 00 00  // ......||||......
    62D0: 00 00 00 00 1D 00 00 00 00 24 66 FF 66 24 00 00  // .........$f.f$..
    62E0: 00 00 00 00 00 10 00 00 00 00 00 00 00 00 00 00  // ................
    62F0: 00 00 00 00 00 00 00 00 00 7E 81 A5 81 81 BD 99  // .........~......
    6300: 81 81 7E 00 00 00 00 00 00 7C FE FE D6 FE FE BA  // ..~......|......
    6310: C6 FE 7C 00 00 00 00 00 00 00 6C EE FE FE FE FE  // ..|.......l.....
    6320: 7C 38 10 00 00 00 00 00 00 00 10 38 7C FE 7C 38  // |8.........8|.|8
    6330: 10 00 00 00 00 00 00 00 00 00 10 38 38 10 6C EE  // ...........88.l.
    6340: 6C 10 38 00 00 00 00 00 00 10 38 7C 7C FE FE FE  // l.8.......8||...
    6350: 6C 10 38 00 00 00 00 00 00 00 00 00 18 3C 3C 3C  // l.8..........<<<
    6360: 18 00 00 00 00 00 00 FF FF FF FF FF E7 C3 C3 C3  // ................
    6370: E7 FF FF FF FF FF FF 00 00 00 00 18 3C 66 66 66  // ............<fff
    6380: 3C 18 00 00 00 00 00 FF FF FF FF E7 C3 99 99 99  // <...............
    6390: C3 E7 FF FF FF FF FF 00 00 1E 0E 1E 36 78 CC CC  // ............6x..
    63A0: CC CC 78 00 00 00 00 00 00 3C 66 66 66 3C 18 7E  // ..x......<fff<.~
    63B0: 18 18 18 00 00 00 00 00 00 1E 1A 1E 18 18 18 18  // ................
    63C0: 78 F8 70 00 00 00 00 00 00 3E 36 3E 36 36 76 F6  // x.p......>6>66v.
    63D0: 66 0E 1E 0C 00 00 00 00 00 18 DB 7E 3C 66 66 3C  // f..........~<ff<
    63E0: 7E DB 18 00 00 00 00 00 00 00 80 E0 F0 FC FE FC  // ~...............
    63F0: F0 E0 80 00 00 00 00 00 00 00 02 0E 3E 7E FE 7E  // ............>~.~
    6400: 3E 0E 02 00 00 00 00 00 00 18 3C 7E 18 18 18 18  // >.........<~....
    6410: 7E 3C 18 00 00 00 00 00 00 66 66 66 66 66 66 66  // ~<.......fffffff
    6420: 00 66 66 00 00 00 00 00 00 7F DB DB DB DB 7B 1B  // .ff...........{.
    6430: 1B 1B 1B 00 00 00 00 00 00 7C C6 C6 60 7C F6 DE  // .........|..`|..
    6440: 7C 0C C6 C6 7C 00 00 00 00 00 00 00 00 00 00 FE  // |...|...........
    6450: FE FE FE 00 00 00 00 00 00 18 3C 7E 18 18 18 7E  // ..........<~...~
    6460: 3C 18 7E 00 00 00 00 00 00 18 3C 7E 18 18 18 18  // <.~.......<~....
    6470: 18 18 18 00 00 00 00 00 00 18 18 18 18 18 18 18  // ................
    6480: 7E 3C 18 00 00 00 00 00 00 00 00 00 0C 0E FF 0E  // ~<..............
    6490: 0C 00 00 00 00 00 00 00 00 00 00 00 30 70 FE 70  // ............0p.p
    64A0: 30 00 00 00 00 00 00 00 00 00 00 00 00 C0 C0 C0  // 0...............
    64B0: FE 00 00 00 00 00 00 00 00 00 00 00 24 66 FF 66  // ............$f.f
    64C0: 24 00 00 00 00 00 00 00 00 00 10 38 38 38 7C 7C  // $..........888||
    64D0: FE FE 00 00 00 00 00 00 00 00 FE FE 7C 7C 7C 38  // ............|||8
    64E0: 38 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // 8...............
    64F0: 00 00 00 00 00 00 00 00 00 18 3C 3C 3C 3C 18 18  // ..........<<<<..
    6500: 00 18 18 00 00 00 00 00 36 36 36 36 14 00 00 00  // ........6666....
    6510: 00 00 00 00 00 00 00 00 00 6C 6C 6C FE 6C 6C FE  // .........lll.ll.
    6520: 6C 6C 6C 00 00 00 00 00 00 18 18 7C C6 C0 78 3C  // lll........|..x<
    6530: 06 C6 7C 18 18 00 00 00 00 00 00 00 62 66 0C 18  // ..|.........bf..
    6540: 30 66 C6 00 00 00 00 00 00 38 6C 38 30 76 7E CC  // 0f.......8l80v~.
    6550: CC CC 76 00 00 00 00 00 0C 0C 0C 18 00 00 00 00  // ..v.............
    6560: 00 00 00 00 00 00 00 00 00 0C 18 30 30 30 30 30  // ...........00000
    6570: 30 18 0C 00 00 00 00 00 00 30 18 0C 0C 0C 0C 0C  // 0........0......
    6580: 0C 18 30 00 00 00 00 00 00 00 00 00 6C 38 FE 38  // ..0.........l8.8
    6590: 6C 00 00 00 00 00 00 00 00 00 00 00 18 18 7E 18  // l.............~.
    65A0: 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    65B0: 0C 0C 0C 18 00 00 00 00 00 00 00 00 00 00 FE 00  // ................
    65C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    65D0: 00 18 18 00 00 00 00 00 00 00 00 02 06 0C 18 30  // ...............0
    65E0: 60 C0 80 00 00 00 00 00 00 7C C6 C6 CE DE F6 E6  // `........|......
    65F0: C6 C6 7C 00 00 00 00 00 00 18 78 18 18 18 18 18  // ..|.......x.....
    6600: 18 18 7E 00 00 00 00 00 00 7C C6 C6 06 0C 18 30  // ..~......|.....0
    6610: 60 C6 FE 00 00 00 00 00 00 7C C6 06 06 3C 06 06  // `........|...<..
    6620: 06 C6 7C 00 00 00 00 00 00 0C 1C 3C 6C CC CC FE  // ..|........<l...
    6630: 0C 0C 1E 00 00 00 00 00 00 FE C0 C0 C0 FC 06 06  // ................
    6640: 06 C6 7C 00 00 00 00 00 00 7C C6 C0 C0 FC C6 C6  // ..|......|......
    6650: C6 C6 7C 00 00 00 00 00 00 FE C6 06 0C 18 30 30  // ..|...........00
    6660: 30 30 30 00 00 00 00 00 00 7C C6 C6 C6 7C C6 C6  // 000......|...|..
    6670: C6 C6 7C 00 00 00 00 00 00 7C C6 C6 C6 C6 7E 06  // ..|......|....~.
    6680: 06 C6 7C 00 00 00 00 00 00 00 00 00 0C 0C 00 00  // ..|.............
    6690: 0C 0C 00 00 00 00 00 00 00 00 00 00 0C 0C 00 00  // ................
    66A0: 0C 0C 0C 18 00 00 00 00 00 00 0C 18 30 60 C0 60  // ............0`.`
    66B0: 30 18 0C 00 00 00 00 00 00 00 00 00 00 FE 00 FE  // 0...............
    66C0: 00 00 00 00 00 00 00 00 00 00 60 30 18 0C 06 0C  // ..........`0....
    66D0: 18 30 60 00 00 00 00 00 00 7C C6 C6 0C 18 18 18  // .0`......|......
    66E0: 00 18 18 00 00 00 00 00 00 7C C6 C6 C6 DE DE DE  // .........|......
    66F0: DC C0 7E 00 00 00 00 00 00 38 6C C6 C6 C6 FE C6  // ..~......8l.....
    6700: C6 C6 C6 00 00 00 00 00 00 FC 66 66 66 7C 66 66  // ..........fff|ff
    6710: 66 66 FC 00 00 00 00 00 00 3C 66 C2 C0 C0 C0 C0  // ff.......<f.....
    6720: C2 66 3C 00 00 00 00 00 00 F8 6C 66 66 66 66 66  // .f<.......lfffff
    6730: 66 6C F8 00 00 00 00 00 00 FE 66 60 64 7C 64 60  // fl........f`d|d`
    6740: 60 66 FE 00 00 00 00 00 00 FE 66 60 64 7C 64 60  // `f........f`d|d`
    6750: 60 60 F0 00 00 00 00 00 00 7C C6 C6 C0 C0 C0 CE  // ``.......|......
    6760: C6 C6 7C 00 00 00 00 00 00 C6 C6 C6 C6 FE C6 C6  // ..|.............
    6770: C6 C6 C6 00 00 00 00 00 00 3C 18 18 18 18 18 18  // .........<......
    6780: 18 18 3C 00 00 00 00 00 00 3C 18 18 18 18 18 18  // ..<......<......
    6790: D8 D8 70 00 00 00 00 00 00 C6 C6 CC D8 F0 F0 D8  // ..p.............
    67A0: CC C6 C6 00 00 00 00 00 00 F0 60 60 60 60 60 60  // ..........``````
    67B0: 62 66 FE 00 00 00 00 00 00 C6 C6 EE EE FE D6 D6  // bf..............
    67C0: D6 C6 C6 00 00 00 00 00 00 C6 C6 E6 E6 F6 DE CE  // ................
    67D0: CE C6 C6 00 00 00 00 00 00 7C C6 C6 C6 C6 C6 C6  // .........|......
    67E0: C6 C6 7C 00 00 00 00 00 00 FC 66 66 66 66 7C 60  // ..|.......ffff|`
    67F0: 60 60 F0 00 00 00 00 00 00 7C C6 C6 C6 C6 C6 C6  // ``.......|......
    6800: D6 D6 7C 06 00 00 00 00 00 FC 66 66 66 7C 78 6C  // ..|.......fff|xl
    6810: 66 66 E6 00 00 00 00 00 00 7C C6 C0 C0 70 1C 06  // ff.......|...p..
    6820: 06 C6 7C 00 00 00 00 00 00 7E 5A 18 18 18 18 18  // ..|......~Z.....
    6830: 18 18 3C 00 00 00 00 00 00 C6 C6 C6 C6 C6 C6 C6  // ..<.............
    6840: C6 C6 7C 00 00 00 00 00 00 C6 C6 C6 C6 C6 C6 C6  // ..|.............
    6850: 6C 38 10 00 00 00 00 00 00 C6 C6 C6 D6 D6 D6 FE  // l8..............
    6860: EE C6 C6 00 00 00 00 00 00 C6 C6 C6 6C 38 38 6C  // ............l88l
    6870: C6 C6 C6 00 00 00 00 00 00 66 66 66 66 66 3C 18  // .........fffff<.
    6880: 18 18 3C 00 00 00 00 00 00 FE C6 86 0C 18 30 60  // ..<...........0`
    6890: C2 C6 FE 00 00 00 00 00 00 7C 60 60 60 60 60 60  // .........|``````
    68A0: 60 60 7C 00 00 00 00 00 00 00 00 80 C0 60 30 18  // ``|..........`0.
    68B0: 0C 06 02 00 00 00 00 00 00 7C 0C 0C 0C 0C 0C 0C  // .........|......
    68C0: 0C 0C 7C 00 00 00 00 00 10 38 6C C6 00 00 00 00  // ..|......8l.....
    68D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    68E0: 00 00 00 00 FF 00 00 00 18 18 18 0C 00 00 00 00  // ................
    68F0: 00 00 00 00 00 00 00 00 00 00 00 00 78 0C 7C CC  // ............x.|.
    6900: CC DC 76 00 00 00 00 00 00 E0 60 60 7C 66 66 66  // ..v.......``|fff
    6910: 66 66 FC 00 00 00 00 00 00 00 00 00 7C C6 C0 C0  // ff..........|...
    6920: C0 C6 7C 00 00 00 00 00 00 1C 0C 0C 7C CC CC CC  // ..|.........|...
    6930: CC CC 7E 00 00 00 00 00 00 00 00 00 7C C6 C6 FE  // ..~.........|...
    6940: C0 C6 7C 00 00 00 00 00 00 1C 36 30 30 FC 30 30  // ..|.......600.00
    6950: 30 30 78 00 00 00 00 00 00 00 00 00 76 CE C6 C6  // 00x.........v...
    6960: CE 76 06 C6 7C 00 00 00 00 E0 60 60 7C 66 66 66  // .v..|.....``|fff
    6970: 66 66 E6 00 00 00 00 00 00 18 18 00 38 18 18 18  // ff..........8...
    6980: 18 18 3C 00 00 00 00 00 00 0C 0C 00 1C 0C 0C 0C  // ..<.............
    6990: 0C 0C CC CC 78 00 00 00 00 E0 60 60 66 66 6C 78  // ....x.....``fflx
    69A0: 6C 66 E6 00 00 00 00 00 00 18 18 18 18 18 18 18  // lf..............
    69B0: 18 18 1C 00 00 00 00 00 00 00 00 00 6C FE D6 D6  // ............l...
    69C0: C6 C6 C6 00 00 00 00 00 00 00 00 00 DC 66 66 66  // .............fff
    69D0: 66 66 66 00 00 00 00 00 00 00 00 00 7C C6 C6 C6  // fff.........|...
    69E0: C6 C6 7C 00 00 00 00 00 00 00 00 00 DC 66 66 66  // ..|..........fff
    69F0: 66 7C 60 60 F0 00 00 00 00 00 00 00 76 CC CC CC  // f|``........v...
    6A00: CC 7C 0C 0C 1E 00 00 00 00 00 00 00 DC 66 60 60  // .|...........f``
    6A10: 60 60 F0 00 00 00 00 00 00 00 00 00 7C C6 C0 7C  // ``..........|..|
    6A20: 06 C6 7C 00 00 00 00 00 00 30 30 30 FC 30 30 30  // ..|......000.000
    6A30: 30 36 1C 00 00 00 00 00 00 00 00 00 CC CC CC CC  // 06..............
    6A40: CC CC 76 00 00 00 00 00 00 00 00 00 C6 C6 C6 C6  // ..v.............
    6A50: 6C 38 10 00 00 00 00 00 00 00 00 00 C6 C6 D6 D6  // l8..............
    6A60: D6 FE 6C 00 00 00 00 00 00 00 00 00 C6 C6 6C 38  // ..l...........l8
    6A70: 6C C6 C6 00 00 00 00 00 00 00 00 00 C6 C6 C6 C6  // l...............
    6A80: CE 76 06 C6 7C 00 00 00 00 00 00 00 FE 86 0C 18  // .v..|...........
    6A90: 30 62 FE 00 00 00 00 00 00 0E 18 18 18 70 18 18  // 0b...........p..
    6AA0: 18 18 0E 00 00 00 00 00 00 18 18 18 18 00 18 18  // ................
    6AB0: 18 18 18 00 00 00 00 00 00 70 18 18 18 0E 18 18  // .........p......
    6AC0: 18 18 70 00 00 00 00 00 00 76 DC 00 00 00 00 00  // ..p......v......
    6AD0: 00 00 00 00 00 00 00 00 00 00 00 00 10 38 38 6C  // .............88l
    6AE0: 6C FE 00 00 00 00 00 00 00 3C 66 C0 C0 C0 C6 66  // l........<f....f
    6AF0: 3C 18 0C CC 38 00 00 00 00 C6 00 00 C6 C6 C6 C6  // <...8...........
    6B00: C6 CE 76 00 00 00 00 00 0C 18 30 00 7C C6 C6 FE  // ..v.......0.|...
    6B10: C0 C6 7C 00 00 00 00 00 30 78 CC 00 78 0C 7C CC  // ..|.....0x..x.|.
    6B20: CC DC 76 00 00 00 00 00 00 CC 00 00 78 0C 7C CC  // ..v.........x.|.
    6B30: CC DC 76 00 00 00 00 00 60 30 18 00 78 0C 7C CC  // ..v.....`0..x.|.
    6B40: CC DC 76 00 00 00 00 00 38 6C 38 00 78 0C 7C CC  // ..v.....8l8.x.|.
    6B50: CC DC 76 00 00 00 00 00 00 00 00 7C C6 C0 C0 C6  // ..v........|....
    6B60: 7C 18 0C 6C 38 00 00 00 30 78 CC 00 7C C6 C6 FE  // |..l8...0x..|...
    6B70: C0 C6 7C 00 00 00 00 00 00 CC 00 00 7C C6 C6 FE  // ..|.........|...
    6B80: C0 C6 7C 00 00 00 00 00 30 18 0C 00 7C C6 C6 FE  // ..|.....0...|...
    6B90: C0 C6 7C 00 00 00 00 00 00 66 00 00 38 18 18 18  // ..|......f..8...
    6BA0: 18 18 3C 00 00 00 00 00 18 3C 66 00 38 18 18 18  // ..<......<f.8...
    6BB0: 18 18 3C 00 00 00 00 00 00 00 00 00 38 18 18 18  // ..<.........8...
    6BC0: 18 18 3C 00 00 00 00 00 C6 00 38 6C C6 C6 C6 FE  // ..<.......8l....
    6BD0: C6 C6 C6 00 00 00 00 38 6C 38 00 38 6C C6 C6 FE  // .......8l8.8l...
    6BE0: C6 C6 C6 00 00 00 00 0C 18 30 00 FE 60 60 7C 60  // .........0..``|`
    6BF0: 60 60 FE 00 00 00 00 00 00 00 00 66 DB 1B 7F D8  // ``.........f....
    6C00: D8 DF 76 00 00 00 00 00 00 7E D8 D8 D8 D8 FE D8  // ..v......~......
    6C10: D8 D8 DE 00 00 00 00 00 30 78 CC 00 7C C6 C6 C6  // ........0x..|...
    6C20: C6 C6 7C 00 00 00 00 00 00 C6 00 00 7C C6 C6 C6  // ..|.........|...
    6C30: C6 C6 7C 00 00 00 00 00 30 18 0C 00 7C C6 C6 C6  // ..|.....0...|...
    6C40: C6 C6 7C 00 00 00 00 00 30 78 CC 00 C6 C6 C6 C6  // ..|.....0x......
    6C50: C6 CE 76 00 00 00 00 00 60 30 18 00 C6 C6 C6 C6  // ..v.....`0......
    6C60: C6 CE 76 00 00 00 00 00 18 00 3C 18 18 18 18 18  // ..v.......<.....
    6C70: 18 18 3C 00 00 00 00 00 C6 00 7C C6 C6 C6 C6 C6  // ..<.......|.....
    6C80: C6 C6 7C 00 00 00 00 00 C6 00 C6 C6 C6 C6 C6 C6  // ..|.............
    6C90: C6 C6 7C 00 00 00 00 00 00 18 18 7C C6 C0 C0 C6  // ..|........|....
    6CA0: 7C 18 18 00 00 00 00 00 38 6C 60 60 F0 60 60 60  // |.......8l``.```
    6CB0: 66 F6 6C 00 00 00 00 00 66 66 66 66 3C 18 7E 18  // f.l.....ffff<.~.
    6CC0: 3C 18 18 00 00 00 00 00 00 3E 63 63 30 1C 06 63  // <........>cc0..c
    6CD0: 63 3E 00 1C 00 00 00 00 00 00 00 00 3E 63 38 0E  // c>..........>c8.
    6CE0: 63 3E 00 1C 00 00 00 00 0C 18 30 00 78 0C 7C CC  // c>........0.x.|.
    6CF0: CC DC 76 00 00 00 00 00 0C 18 30 00 38 18 18 18  // ..v.......0.8...
    6D00: 18 18 3C 00 00 00 00 00 0C 18 30 00 7C C6 C6 C6  // ..<.......0.|...
    6D10: C6 C6 7C 00 00 00 00 00 18 30 60 00 CC CC CC CC  // ..|......0`.....
    6D20: CC DC 76 00 00 00 00 00 00 76 DC 00 BC 66 66 66  // ..v......v...fff
    6D30: 66 66 E6 00 00 00 00 00 76 DC 00 C6 C6 E6 F6 DE  // ff......v.......
    6D40: CE C6 C6 00 00 00 00 00 21 1E 00 1E 33 60 60 67  // ........!...3``g
    6D50: 63 33 1D 00 00 00 00 00 42 3C 00 3B 66 66 66 3E  // c3......B<.;fff>
    6D60: 06 66 3C 00 00 00 00 00 00 30 30 00 30 30 30 60  // .f<......00.000`
    6D70: C6 C6 7C 00 00 00 00 00 00 00 00 00 00 00 7E 60  // ..|...........~`
    6D80: 60 60 00 00 00 00 00 00 00 00 00 00 00 00 7E 06  // ``............~.
    6D90: 06 06 00 00 00 00 00 00 60 60 62 66 6C 18 30 60  // ........``bfl.0`
    6DA0: DC 36 0C 18 3E 00 00 00 60 60 62 66 6C 18 36 6E  // .6..>...``bfl.6n
    6DB0: DE 36 7E 06 06 00 00 00 00 18 18 00 18 18 3C 3C  // .6~...........<<
    6DC0: 3C 3C 18 00 00 00 00 00 00 00 00 00 36 6C D8 6C  // <<..........6l.l
    6DD0: 36 00 00 00 00 00 00 00 00 00 00 00 D8 6C 36 6C  // 6............l6l
    6DE0: D8 00 00 00 00 00 00 11 44 11 44 11 44 11 44 11  // ........D.D.D.D.
    6DF0: 44 11 44 11 44 11 44 AA 55 AA 55 AA 55 AA 55 AA  // D.D.D.D.U.U.U.U.
    6E00: 55 AA 55 AA 55 AA 55 DD 77 DD 77 DD 77 DD 77 DD  // U.U.U.U.w.w.w.w.
    6E10: 77 DD 77 DD 77 DD 77 18 18 18 18 18 18 18 18 18  // w.w.w.w.........
    6E20: 18 18 18 18 18 18 18 18 18 18 18 18 18 18 F8 18  // ................
    6E30: 18 18 18 18 18 18 18 18 18 18 18 18 F8 18 F8 18  // ................
    6E40: 18 18 18 18 18 18 18 36 36 36 36 36 36 36 F6 36  // .......6666666.6
    6E50: 36 36 36 36 36 36 36 00 00 00 00 00 00 00 FE 36  // 6666666........6
    6E60: 36 36 36 36 36 36 36 00 00 00 00 00 F8 18 F8 18  // 6666666.........
    6E70: 18 18 18 18 18 18 18 36 36 36 36 36 F6 06 F6 36  // .......66666...6
    6E80: 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36  // 6666666666666666
    6E90: 36 36 36 36 36 36 36 00 00 00 00 00 FE 06 F6 36  // 6666666........6
    6EA0: 36 36 36 36 36 36 36 36 36 36 36 36 F6 06 FE 00  // 666666666666....
    6EB0: 00 00 00 00 00 00 00 36 36 36 36 36 36 36 FE 00  // .......6666666..
    6EC0: 00 00 00 00 00 00 00 18 18 18 18 18 F8 18 F8 00  // ................
    6ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 F8 18  // ................
    6EE0: 18 18 18 18 18 18 18 18 18 18 18 18 18 18 1F 00  // ................
    6EF0: 00 00 00 00 00 00 00 18 18 18 18 18 18 18 FF 00  // ................
    6F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 FF 18  // ................
    6F10: 18 18 18 18 18 18 18 18 18 18 18 18 18 18 1F 18  // ................
    6F20: 18 18 18 18 18 18 18 00 00 00 00 00 00 00 FF 00  // ................
    6F30: 00 00 00 00 00 00 00 18 18 18 18 18 18 18 FF 18  // ................
    6F40: 18 18 18 18 18 18 18 18 18 18 18 18 1F 18 1F 18  // ................
    6F50: 18 18 18 18 18 18 18 36 36 36 36 36 36 36 37 36  // .......666666676
    6F60: 36 36 36 36 36 36 36 36 36 36 36 36 37 30 3F 00  // 66666666666670?.
    6F70: 00 00 00 00 00 00 00 00 00 00 00 00 3F 30 37 36  // ............?076
    6F80: 36 36 36 36 36 36 36 36 36 36 36 36 F7 00 FF 00  // 666666666666....
    6F90: 00 00 00 00 00 00 00 00 00 00 00 00 FF 00 F7 36  // ...............6
    6FA0: 36 36 36 36 36 36 36 36 36 36 36 36 37 30 37 36  // 6666666666667076
    6FB0: 36 36 36 36 36 36 36 00 00 00 00 00 FF 00 FF 00  // 6666666.........
    6FC0: 00 00 00 00 00 00 00 36 36 36 36 36 F7 00 F7 36  // .......66666...6
    6FD0: 36 36 36 36 36 36 36 18 18 18 18 18 FF 00 FF 00  // 6666666.........
    6FE0: 00 00 00 00 00 00 00 36 36 36 36 36 36 36 FF 00  // .......6666666..
    6FF0: 00 00 00 00 00 00 00 00 00 00 00 00 FF 00 FF 18  // ................
    7000: 18 18 18 18 18 18 18 00 00 00 00 00 00 00 FF 36  // ...............6
    7010: 36 36 36 36 36 36 36 36 36 36 36 36 36 36 3F 00  // 66666666666666?.
    7020: 00 00 00 00 00 00 00 18 18 18 18 18 1F 18 1F 00  // ................
    7030: 00 00 00 00 00 00 00 00 00 00 00 00 1F 18 1F 18  // ................
    7040: 18 18 18 18 18 18 18 00 00 00 00 00 00 00 3F 36  // ..............?6
    7050: 36 36 36 36 36 36 36 36 36 36 36 36 36 36 FF 36  // 66666666666666.6
    7060: 36 36 36 36 36 36 36 18 18 18 18 18 FF 18 FF 18  // 6666666.........
    7070: 18 18 18 18 18 18 18 18 18 18 18 18 18 18 F8 00  // ................
    7080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 1F 18  // ................
    7090: 18 18 18 18 18 18 18 FF FF FF FF FF FF FF FF FF  // ................
    70A0: FF FF FF FF FF FF FF 00 00 00 00 00 00 00 00 FF  // ................
    70B0: FF FF FF FF FF FF FF F0 F0 F0 F0 F0 F0 F0 F0 F0  // ................
    70C0: F0 F0 F0 F0 F0 F0 F0 0F 0F 0F 0F 0F 0F 0F 0F 0F  // ................
    70D0: 0F 0F 0F 0F 0F 0F 0F FF FF FF FF FF FF FF FF 00  // ................
    70E0: 00 00 00 00 00 00 00 00 00 00 00 76 DC D8 D8 D8  // ...........v....
    70F0: D8 DC 76 00 00 00 00 00 00 78 CC CC D8 FC C6 C6  // ..v......x......
    7100: C6 C6 CC 00 00 00 00 00 00 FE 66 62 60 60 60 60  // ..........fb````
    7110: 60 60 60 00 00 00 00 00 00 00 00 00 FE 6C 6C 6C  // ```..........lll
    7120: 6C 6C 6C 00 00 00 00 00 00 FE C6 62 30 18 18 30  // lll........b0..0
    7130: 62 C6 FE 00 00 00 00 00 00 00 00 00 7E D8 CC CC  // b...........~...
    7140: CC D8 70 00 00 00 00 00 00 00 00 66 66 66 66 66  // ..p........fffff
    7150: 7C 60 C0 80 00 00 00 00 00 00 00 00 76 DC 18 18  // |`..........v...
    7160: 18 18 18 00 00 00 00 00 00 FE 38 38 6C C6 C6 6C  // ..........88l..l
    7170: 38 38 FE 00 00 00 00 00 00 00 38 6C C6 C6 FE C6  // 88........8l....
    7180: C6 6C 38 00 00 00 00 00 00 38 6C C6 C6 C6 C6 6C  // .l8......8l....l
    7190: 6C 6C EE 00 00 00 00 00 00 3E 60 60 3C 66 C6 C6  // ll.......>``<f..
    71A0: C6 CC 78 00 00 00 00 00 00 00 00 00 7E DB DB DB  // ..x.........~...
    71B0: 7E 00 00 00 00 00 00 00 00 02 06 7C CE DE F6 F6  // ~..........|....
    71C0: 7C 60 C0 00 00 00 00 00 00 00 1C 30 60 60 7C 60  // |`.........0``|`
    71D0: 60 30 1C 00 00 00 00 00 00 7C C6 C6 C6 C6 C6 C6  // `0.......|......
    71E0: C6 C6 C6 00 00 00 00 00 00 00 00 FE 00 00 FE 00  // ................
    71F0: 00 FE 00 00 00 00 00 00 00 00 00 18 18 7E 18 18  // .............~..
    7200: 00 00 7E 00 00 00 00 00 00 30 18 0C 06 0C 18 30  // ..~......0.....0
    7210: 00 00 7E 00 00 00 00 00 00 0C 18 30 60 30 18 0C  // ..~........0`0..
    7220: 00 00 7E 00 00 00 00 00 00 00 00 0C 1E 1A 18 18  // ..~.............
    7230: 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18  // ................
    7240: 18 58 78 30 00 00 00 00 00 00 00 18 18 00 7E 00  // .Xx0..........~.
    7250: 18 18 00 00 00 00 00 00 00 00 00 00 00 76 DC 00  // .............v..
    7260: 76 DC 00 00 00 00 00 00 00 78 CC CC 78 00 00 00  // v........x..x...
    7270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 18 18  // ................
    7280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 18  // ................
    7290: 00 00 00 00 00 00 00 00 00 1F 18 18 18 18 18 D8  // ................
    72A0: D8 78 38 18 00 00 00 00 00 D8 6C 6C 6C 6C 6C 00  // .x8.......lllll.
    72B0: 00 00 00 00 00 00 00 00 00 70 D8 18 30 60 F8 00  // .........p..0`..
    72C0: 00 00 00 00 00 00 00 00 00 00 00 00 7E 7E 7E 7E  // ............~~~~
    72D0: 7E 7E 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ~~..............
    72E0: 00 00 00 00 00 00 00 1D 00 00 00 00 00 24 66 FF  // .............$f.
    72F0: 66 24 00 00 00 00 00 00 2F 00 00 00 01 03 06 0C  // f$....../.......
    7300: 18 30 60 C0 80 00 00 00 00 30 00 00 7E C3 C3 C3  // .0`......0..~...
    7310: DB DB C3 C3 C3 7E 00 00 00 00 4D 00 00 C3 C3 E7  // .....~....M.....
    7320: FF FF DB DB C3 C3 C3 00 00 00 00 54 00 00 FF 99  // ...........T....
    7330: 18 18 18 18 18 18 18 3C 00 00 00 00 56 00 00 C3  // .......<....V...
    7340: C3 C3 C3 C3 C3 C3 66 3C 18 00 00 00 00 57 00 00  // ......f<.....W..
    7350: C3 C3 C3 C3 DB DB DB DB FF 66 00 00 00 00 58 00  // .........f....X.
    7360: 00 C3 C3 C3 66 3C 3C 66 C3 C3 C3 00 00 00 00 59  // ....f<<f.......Y
    7370: 00 00 C3 C3 C3 C3 66 3C 18 18 18 3C 00 00 00 00  // ......f<...<....
    7380: 5C 00 00 00 80 C0 60 30 18 0C 06 03 01 00 00 00  // \.....`0........
    7390: 00 6D 00 00 00 00 00 66 FF DB DB DB C3 C3 00 00  // .m.....f........
    73A0: 00 00 76 00 00 00 00 00 C3 C3 C3 C3 66 3C 18 00  // ..v.........f<..
    73B0: 00 00 00 77 00 00 00 00 00 C3 C3 DB DB DB FF 66  // ...w...........f
    73C0: 00 00 00 00 00 00 7F 62 C3 0B DB 74 03 E9 46 01  // .......b...t..F.
    73D0: 57 32 C0 B9 40 00 F3 AA 5F BB 4C 90 26 89 1D 26  // W2..@..._.L.&..&
    73E0: 8C 4D 02 2E 8E 1E 0E 03 57 BE 49 04 B9 1E 00 83  // .M......W.I.....
    73F0: C7 04 FC 8A 04 26 88 05 46 47 E2 F7 5F A0 84 04  // .....&..FG.._...
    7400: FE C0 26 88 45 22 A1 85 04 26 89 45 23 57 E8 D9  // ..&.E"...&.E#W..
    7410: 1B 5F 26 88 5D 25 26 88 7D 26 8A 1E 49 04 E8 FC  // ._&.]%&.}&..I...
    7420: 05 74 05 80 FB 13 7F 1D 32 FF D1 E3 2E 8A 87 24  // .t......2......$
    7430: 90 32 E4 0A C0 74 01 40 26 89 45 27 2E 8A 87 25  // .2...t.@&.E'...%
    7440: 90 26 88 45 29 A1 85 04 8A 16 84 04 FE C2 F6 E2  // .&.E)...........
    7450: B2 00 3D C8 00 7E 15 B2 01 3D 5E 01 7E 0E B2 02  // ..=..~...=^.~...
    7460: 3D 90 01 7E 07 B2 03 3D E0 01 7E 00 26 88 55 2A  // =..~...=..~.&.U*
    7470: 8A 26 87 04 8A C4 24 01 C0 E0 04 80 E4 02 D0 E4  // .&....$.........
    7480: 0A E0 80 F4 10 A0 89 04 24 0A 0A E0 E8 94 08 B2  // ........$.......
    7490: C0 B0 30 EE 42 EC 24 08 C0 E0 02 0A C4 0C 01 26  // ..0.B.$........&
    74A0: 88 45 2D B0 03 26 88 45 31 E8 77 08 1E 06 32 D2  // .E-..&.E1.w...2.
    74B0: C4 1E A8 04 8C C1 8C CE 3B CE 74 34 26 C5 77 04  // ........;.t4&.w.
    74C0: 8C D9 0B F1 74 03 80 CA 10 26 C5 77 0C 8C D9 0B  // ....t....&.w....
    74D0: F1 74 03 80 CA 08 26 C5 77 08 8C D9 0B F1 74 03  // .t....&.w.....t.
    74E0: 80 CA 04 26 C5 77 10 8C D9 0B F1 74 03 80 CA 01  // ...&.w.....t....
    74F0: 07 1F 26 88 55 32 B0 03 BA C4 03 E8 E4 04 8A E0  // ..&.U2..........
    7500: C0 EC 02 8A D4 8A F2 D0 EE 81 E2 04 04 25 03 03  // .............%..
    7510: 0B C2 26 89 45 2B 8B EC C6 46 1A 1B C3 0A C0 74  // ..&.E+...F.....t
    7520: 0F FE C8 74 36 FE C8 74 56 8B EC C6 46 1A 00 C3  // ...t6..tV...F...
    7530: B8 20 00 F6 C1 01 74 03 83 C0 60 F6 C1 02 74 03  // . ....t...`...t.
    7540: 83 C0 3A F6 C1 04 74 03 05 03 03 83 C0 3F C1 E8  // ..:...t......?..
    7550: 06 8B EC 89 46 0E C6 46 1A 1C C3 8B FB 83 C7 20  // ....F..F....... 
    7560: F6 C1 01 74 03 E8 85 00 F6 C1 02 74 03 E8 EF 00  // ...t.......t....
    7570: F6 C1 04 74 03 E8 F8 01 8B EC C6 46 1A 1C C3 F6  // ...t.......F....
    7580: C1 01 74 06 E8 16 15 E8 25 01 F6 C1 02 74 03 E8  // ..t.....%....t..
    7590: 85 01 F6 C1 04 74 03 E8 12 02 EB DC 8A C4 EE 42  // .....t.........B
    75A0: EC AA FE C4 4A E2 F5 C3 E8 6B 04 BD C0 03 B9 15  // ....J....k......
    75B0: 00 32 E4 EC 87 EA 8A C4 EE 42 EC AA FE C4 4A 87  // .2.......B....J.
    75C0: EA E2 F0 EC 87 EA B0 20 EE C3 26 8A 05 88 04 47  // ....... ..&....G
    75D0: 46 E2 F7 C3 26 8A 25 EF 47 FE C0 E2 F7 C3 B2 C0  // F...&.%.G.......
    75E0: 8A C4 EE 26 8A 05 47 FE C4 EE E2 F4 C3 9C FA 51  // ...&..G........Q
    75F0: 57 8B C7 2B C3 26 89 07 8B F7 E8 0A 04 EC 26 88  // W..+.&........&.
    7600: 44 01 26 89 54 41 B2 CE EC 26 88 44 02 B2 CC EC  // D.&.TA...&.D....
    7610: 26 88 44 09 B2 CA EC 26 88 44 04 B2 C4 EC 26 88  // &.D....&.D....&.
    7620: 04 83 C7 05 B9 04 00 B4 01 E8 70 FF 26 8A 04 EE  // ..........p.&...
    7630: 8B FE 83 C7 0A 26 8B 54 41 32 E4 B9 19 00 E8 5B  // .....&.TA2.....[
    7640: FF 26 8A 44 01 EE E8 5F FF B2 CE 32 E4 B9 09 00  // .&.D..._...2....
    7650: E8 49 FF 26 8A 44 02 EE 5F 59 83 C7 60 9D C3 9C  // .I.&.D.._Y..`...
    7660: FA 8B C7 2B C3 26 89 47 02 51 57 2E 8E 1E 0E 03  // ...+.&.G.QW.....
    7670: A0 10 04 24 30 AA BE 49 04 B9 1E 00 F3 A4 BE 84  // ...$0..I........
    7680: 04 B1 07 F3 A4 BE A8 04 B1 04 F3 A4 BE 14 00 B1  // ................
    7690: 04 F3 A4 BE 74 00 B1 04 F3 A4 BE 7C 00 B1 04 F3  // ....t......|....
    76A0: A4 BE 0C 01 B1 04 F3 A4 5F 59 83 C7 3A 9D C3 9C  // ........_Y..:...
    76B0: FA 26 8B 3F 03 FB 8B F7 51 8B FE 83 C7 05 BA C4  // .&.?....Q.......
    76C0: 03 B8 00 01 EF B0 01 B9 04 00 E8 07 FF 47 B2 C2  // .............G..
    76D0: 26 8A 44 09 EE B2 C4 B8 00 03 EF 26 8A 04 EE 26  // &.D........&...&
    76E0: 8B 54 41 B8 11 00 EF B1 19 32 C0 E8 E6 FE 26 8A  // .TA......2....&.
    76F0: 44 01 EE 80 C2 06 26 8A 44 04 EE EC B1 15 32 E4  // D.....&.D.....2.
    7700: E8 DB FE B0 20 EE B1 09 32 C0 B2 CE E8 C5 FE 26  // .... ...2......&
    7710: 8A 44 02 EE 59 9D C3 9C FA 26 8B 7F 02 03 FB 06  // .D..Y....&......
    7720: 51 2E 8E 1E 0E 03 26 8A 05 80 26 10 04 CF 08 06  // Q.....&...&.....
    7730: 10 04 47 BE 49 04 B9 1E 00 E8 8E FE BE 84 04 B1  // ..G.I...........
    7740: 07 E8 86 FE BE A8 04 B1 04 E8 7E FE BE 14 00 B1  // ..........~.....
    7750: 04 E8 76 FE BE 74 00 B1 04 E8 6E FE BE 7C 00 B1  // ..v..t....n..|..
    7760: 04 E8 66 FE BE 0C 01 B1 04 E8 5E FE 59 07 9D C3  // ..f.......^.Y...
    7770: 9C FA 8B C7 2B C3 26 89 47 04 E8 A6 05 B2 C0 B0  // ....+.&.G.......
    7780: 34 EE 42 EC 26 88 05 BA C8 03 EC 26 88 45 01 50  // 4.B.&......&.E.P
    7790: 4A 4A EC 26 88 45 02 83 C7 03 B9 00 03 42 32 C0  // JJ.&.E.......B2.
    77A0: EE 42 42 EC AA E2 FC 58 4A EE 9D C3 9C FA 26 8B  // .BB....XJ.....&.
    77B0: 77 04 03 F3 E8 6C 05 B2 C0 B0 34 EE 26 8A 04 EE  // w....l....4.&...
    77C0: BA C6 03 26 8A 44 02 EE 56 42 42 83 C6 03 32 C0  // ...&.D..VBB...2.
    77D0: EE 42 B9 00 03 26 8A 04 EE 46 E2 F9 5E FE CA 26  // .B...&...F..^..&
    77E0: 8A 44 01 EE 9D C3 BA CC 03 EC 24 FE 0A C4 B2 C2  // .D........$.....
    77F0: EE C3 E8 A8 12 B2 C0 86 C4 EE EB 00 EB 00 86 C4  // ................
    7800: EE EB 00 EB 00 B0 20 EE C3 50 8A E0 80 E4 80 80  // ...... ..P......
    7810: 26 87 04 7F 08 26 87 04 24 7F 8A E0 3C 07 7E 1E  // &....&..$...<.~.
    7820: 26 F6 47 33 01 75 17 3C 23 74 13 3C 32 74 0F 3C  // &.G3.u.<#t.<2t.<
    7830: 33 74 0B B4 03 26 F6 47 09 01 75 02 B4 07 88 26  // 3t...&.G..u....&
    7840: 49 04 BA B4 03 80 0E 87 04 02 26 F6 47 09 01 74  // I.........&.G..t
    7850: 07 B2 D4 80 26 87 04 FD 89 16 63 04 C7 06 4E 04  // ....&.....c...N.
    7860: 00 00 C6 06 62 04 00 B9 08 00 BF 50 04 FC 06 1E  // ....b......P....
    7870: 07 33 C0 F3 AB 07 26 8A 07 32 E4 A3 4A 04 26 8A  // .3....&..2..J.&.
    7880: 47 01 A2 84 04 26 8A 47 02 A3 85 04 26 8B 47 03  // G....&.G....&.G.
    7890: A3 4C 04 26 8B 47 14 86 C4 A3 60 04 58 C3 52 32  // .L.&.G....`.X.R2
    78A0: E4 33 D2 B0 0D CD 17 F6 C4 29 75 08 32 E4 33 D2  // .3.......)u.2.3.
    78B0: B0 0A CD 17 5A C3 06 1E 60 2E 8E 1E 0E 03 2E 83  // ....Z...`.......
    78C0: 0E 18 03 00 75 6E 80 3E 00 05 01 74 67 C6 06 00  // ....un.>...tg...
    78D0: 05 01 8A 1E 62 04 32 FF D1 E3 8B FB 8B 85 50 04  // ....b.2.......P.
    78E0: 8A 3E 62 04 50 32 F6 8A 0E 84 04 32 ED 41 51 8B  // .>b.P2.....2.AQ.
    78F0: 0E 4A 04 32 D2 E8 A6 FF F6 C4 29 75 3D 51 52 89  // .J.2......)u=QR.
    7900: 95 50 04 B4 08 E8 B6 D4 0A C0 75 02 B0 20 33 D2  // .P........u.. 3.
    7910: 32 E4 CD 17 F6 C4 29 75 1F 5A FE C2 59 E2 DE FE  // 2.....)u.Z..Y...
    7920: C6 59 E2 CA E8 77 FF 32 C0 A2 00 05 58 89 85 50  // .Y...w.2....X..P
    7930: 04 E8 AF 03 61 1F 07 CF 5A 59 59 B0 FF EB EA 52  // ....a...ZYY....R
    7940: 2A F5 38 C6 7D 02 32 C0 2E 8E 06 10 03 5A C3 A0  // *.8.}.2......Z..
    7950: 85 04 F6 E3 8A F7 8B D8 8B CA BA C4 03 B8 02 0F  // ................
    7960: EF B4 02 E8 6D 00 8B D1 32 ED 8A E6 8A C6 F3 AA  // ....m...2.......
    7970: 03 FD 8A CA 4B 75 F7 32 E4 E8 57 00 C3 53 8A 1E  // ....Ku.2..W..S..
    7980: 62 04 0B C0 75 04 0A DB 74 03 E8 35 03 5B 8B F8  // b...u...t..5.[..
    7990: 2B D1 81 C2 01 01 8A C3 32 E4 C3 8A C6 32 F6 2B  // +.......2....2.+
    79A0: EA 0A DB 74 2A 2A C3 F6 26 85 04 8B C8 52 B4 01  // ...t**..&....R..
    79B0: E8 20 00 B2 C4 B8 02 0F EF 5A 1E 06 1F 8B C1 8B  // . .......Z......
    79C0: CA F3 A4 03 F5 03 FD 48 75 F5 1F E8 81 FF C3 8A  // .......Hu.......
    79D0: D8 EB F8 BA CE 03 B0 05 EE 42 EC 24 FC 0A C4 EE  // .........B.$....
    79E0: 4A C3 9C FA EE 42 EB 00 EC 4A 9D C3 1E 2E 8E 1E  // J....B...J......
    79F0: 0E 03 8B 16 63 04 80 C2 06 1F C3 1E 2E 8E 1E 0E  // ....c...........
    7A00: 03 8B 16 63 04 1F C3 50 BA CC 03 EC B2 D4 A8 01  // ...c...P........
    7A10: 75 02 B2 B4 58 C3 E8 EE FF 80 C2 06 C3 1E 2E 8E  // u...X...........
    7A20: 1E 0E 03 80 3E 49 04 03 74 13 80 3E 49 04 02 74  // ....>I..t..>I..t
    7A30: 0C 80 3E 49 04 01 74 05 80 3E 49 04 00 1F C3 50  // ..>I..t..>I....P
    7A40: 2E 8E 06 12 03 A0 10 04 24 30 3C 30 74 05 2E 8E  // ........$0<0t...
    7A50: 06 14 03 58 0B C0 74 03 E8 E1 01 03 06 4E 04 81  // ...X..t......N..
    7A60: C2 01 01 2B D1 32 ED 8B 2E 4A 04 8B F8 8B F0 8B  // ...+.2...J......
    7A70: C5 F6 E3 D1 E0 D1 E5 0A DB 75 02 8A DE 38 F3 7E  // .........u...8.~
    7A80: 02 8A DE C3 FC 8A D8 8B C1 E8 B3 FF 03 F0 3A 16  // ..............:.
    7A90: 4A 04 74 06 06 1F E8 1B 00 C3 06 1F E8 40 00 C3  // J.t..........@..
    7AA0: FC 8A D8 8A C1 8A E6 E8 95 FF F7 DD 2B F0 06 1F  // ............+...
    7AB0: E8 01 00 C3 53 8A CE 2A CB 32 ED 32 F6 2B EA 2B  // ....S..*.2.2.+.+
    7AC0: EA E3 0E 8A E1 8B CA F3 A5 03 F5 03 FD FE CC 75  // ...............u
    7AD0: F4 58 B0 20 8A CA F3 AB 03 FD FE CB 75 F6 C3 53  // .X. ........u..S
    7AE0: 8A C6 2A C3 74 06 F6 E2 8B C8 F3 A5 58 8B C8 F6  // ..*.t.......X...
    7AF0: E2 91 B0 20 F3 AB C3 8B D8 E8 2E 00 2E 8E 1E 14  // ... ............
    7B00: 03 8A C3 22 DF D3 E3 A8 80 74 03 30 1C C3 F6 D7  // ...".....t.0....
    7B10: 8A 34 22 F7 0A DE 88 1C C3 8A FC E8 0C 00 2E 8E  // .4".............
    7B20: 1E 14 03 8A 04 D2 E8 22 C7 C3 B0 28 F6 E2 F6 C2  // ......."...(....
    7B30: 01 74 03 05 D8 1F 8B F1 C1 EE 02 80 FF 05 7F 0C  // .t..............
    7B40: 03 F0 F6 D1 80 E1 03 D0 E1 B7 03 C3 D1 EE 03 F0  // ................
    7B50: F6 D1 80 E1 07 B7 01 C3 FC 8A D8 2E 8E 06 14 03  // ................
    7B60: 8B C1 E8 86 00 75 02 8A DE 03 F0 E8 24 00 C3 FC  // .....u......$...
    7B70: 8A D8 2E 8E 06 14 03 8A C1 8A E6 E8 6D 00 75 02  // ............m.u.
    7B80: 8A DE F7 DD 81 C6 F0 00 81 C7 F0 00 2B F0 E8 01  // ............+...
    7B90: 00 C3 8A CE 2A CB E3 2C 51 8A CA 56 57 D1 E9 F3  // ....*..,Q..VW...
    7BA0: A5 13 C9 F3 A4 8A CA 2B F1 2B F9 81 C6 00 20 81  // .......+.+.... .
    7BB0: C7 00 20 D1 E9 F3 A5 13 C9 F3 A4 5F 5E 03 F5 03  // .. ........_^...
    7BC0: FD 59 E2 D4 8A C7 8A E7 8A CA 57 D1 E9 F3 AB 13  // .Y........W.....
    7BD0: C9 F3 AA 8A CA 2B F9 81 C7 00 20 D1 E9 F3 AB 13  // .....+.... .....
    7BE0: C9 F3 AA 5F 03 FD FE CB 75 DE C3 E8 B0 00 81 C2  // ..._....u.......
    7BF0: 01 01 2B D1 38 F3 76 02 32 DB 51 B1 02 D2 E6 D2  // ..+.8.v.2.Q.....
    7C00: E3 59 32 ED BD 50 00 80 3E 49 04 06 74 04 D0 E2  // .Y2..P..>I..t...
    7C10: D1 E0 06 1F 8B F8 8B F0 B0 50 F6 E3 0A DB C3 52  // .........P.....R
    7C20: 53 8A DF 32 FF D1 E3 8B 87 50 04 E8 0E 00 50 D1  // S..2.....P....P.
    7C30: EB A1 4C 04 F7 E3 5B 03 C3 5B 5A C3 52 8B D0 A0  // ..L...[..[Z.R...
    7C40: 4A 04 F6 E4 32 F6 03 C2 D1 E0 5A C3 8B E8 83 E5  // J...2.....Z.....
    7C50: 0F 2E 8A A6 FC 7B 8B E8 C1 ED 04 83 E5 0F 2E 8A  // .....{..........
    7C60: 86 FC 7B C3 00 03 0C 0F 30 33 3C 3F C0 C3 CC CF  // ..{.....03<?....
    7C70: F0 F3 FC FF 26 8B 04 86 E0 BA 00 80 F6 C4 C0 74  // ....&..........t
    7C80: 02 0A D6 D0 EE C1 E0 02 75 F2 88 56 00 45 C3 8B  // ........u..V.E..
    7C90: 16 63 04 8A C5 86 E0 EF 8A E1 FE C0 EF C3 52 8B  // .c............R.
    7CA0: D0 8A C4 F6 26 4A 04 C1 E0 02 32 F6 03 C2 5A C3  // ....&J....2...Z.
    7CB0: 53 8A DF 32 FF D1 E3 8B 87 50 04 D1 EB E8 02 00  // S..2.....P......
    7CC0: 5B C3 52 8B D0 32 F6 52 8A C4 F6 26 85 04 F7 26  // [.R..2.R...&...&
    7CD0: 4A 04 5A 03 C2 0A DB 74 08 03 06 4C 04 FE CB 75  // J.Z....t...L...u
    7CE0: F8 5A C3 52 8B D0 A0 4A 04 F6 E4 32 F6 03 C2 D1  // .Z.R...J...2....
    7CF0: E0 03 06 4E 04 D1 F8 8B C8 B4 0E E8 91 FF 5A C3  // ...N..........Z.
    7D00: 8B C2 F7 26 4A 04 8B F9 C1 EF 03 03 F8 0A FF 74  // ...&J..........t
    7D10: 0A 8A C7 32 E4 F7 26 4C 04 03 F8 80 E1 07 B4 80  // ...2..&L........
    7D20: D2 EC C3 E8 F0 FC EC C3 E8 F8 FF B2 C0 B0 20 EE  // .............. .
    7D30: C3 E8 EF FF B2 C0 32 C0 EE C3 C4 3E A8 04 26 C4  // ......2....>..&.
    7D40: 7D 04 8C C5 0B EF C3 53 B0 0E E8 95 FC 8A E0 B0  // }......S........
    7D50: 0F E8 8E FC 8B D8 B8 0E AA EF B8 0F 55 EF B0 0E  // ............U...
    7D60: E8 7F FC 3C AA 74 0D B0 0F E8 76 FC 3C 55 74 04  // ...<.t....v.<Ut.
    7D70: 32 C0 5B C3 B0 0E 8A E7 EF FE C0 8A E3 EF B0 01  // 2.[.............
    7D80: 0A C0 5B C3 8A EE 8A 36 85 04 06 1F 0A DB 74 25  // ..[....6......t%
    7D90: 8A C5 2A C3 F6 E6 8B C8 52 32 F6 C1 E2 02 8B C2  // ..*.....R2......
    7DA0: D1 E2 2B D5 51 8B C8 F3 A5 2B FA 2B F2 59 E2 F4  // ..+.Q....+.+.Y..
    7DB0: 5A E8 05 00 C3 8A DD EB F8 8A C6 F6 E3 8B C8 8A  // Z...............
    7DC0: C7 8A E0 32 F6 C1 E2 02 8B DA D1 E2 8B F1 2B D5  // ...2..........+.
    7DD0: 8B CB F3 AB 2B FA 4E 75 F7 C3 2E 8E 1E 0E 03 89  // ....+.Nu........
    7DE0: 0E 60 04 8A C5 24 60 A8 20 74 06 B9 00 1E E9 94  // .`...$`. t......
    7DF0: 00 F6 06 87 04 01 0F 85 8B 00 80 3E 49 04 07 74  // ...........>I..t
    7E00: 06 E8 19 FC 74 01 C3 F6 06 87 04 08 74 03 CD 42  // ....t.......t..B
    7E10: C3 8A 36 85 04 8A D6 FE CA 38 CD 7E 1F 0A C9 74  // ..6......8.~...t
    7E20: 64 8A E9 8A CE FE C9 EB 5C 38 D1 74 58 8A CE 80  // d.......\8.tX...
    7E30: FD 03 7C 04 8A E9 D0 ED FE C9 EB 49 80 F9 03 7E  // ..|........I...~
    7E40: 44 8A E1 2A E5 0A E4 75 0A 38 CA 74 38 FE CA 38  // D..*...u.8.t8..8
    7E50: CA 74 32 8A C5 0A C1 38 F0 7E 0A 80 FC 02 7E 12  // .t2....8.~....~.
    7E60: 80 FD 02 7F C8 80 FC 03 7D BF 8A D6 FE CA 38 D1  // ........}.....8.
    7E70: 74 13 8A CE FE C9 FE C9 8A E9 2A EC 80 FE 08 7F  // t.........*.....
    7E80: 04 FE C1 FE C5 B4 0A E8 05 FE C3 2E 8E 1E 0E 03  // ................
    7E90: A2 62 04 32 E4 8B F0 F7 26 4C 04 A3 4E 04 8B C8  // .b.2....&L..N...
    7EA0: E8 7A FB 74 07 80 3E 49 04 07 77 02 D1 F9 B4 0C  // .z.t..>I..w.....
    7EB0: E8 DC FD D1 E6 8B 84 50 04 E8 27 FE C3 2E 8E 1E  // .......P..'.....
    7EC0: 0E 03 8A 26 49 04 E8 9D 9C 74 07 C7 06 50 04 00  // ...&I....t...P..
    7ED0: 00 C3 E8 48 FB 74 0B 80 FC 07 74 06 77 08 E8 77  // ...H.t....t.w..w
    7EE0: FC C3 E8 9F FB C3 80 FC 13 7C 03 74 1F C3 E8 4E  // .........|.t...N
    7EF0: FA 8A D8 8B C1 E8 85 FA 8B 2E 4A 04 52 F6 26 85  // ..........J.R.&.
    7F00: 04 F7 E5 8B F7 03 F0 5A E8 90 FA C3 E8 30 FA 8A  // .......Z.....0..
    7F10: D8 8B C1 E8 67 FA C1 E7 03 52 8B 2E 4A 04 C1 E5  // ....g....R..J...
    7F20: 03 F7 26 85 04 F7 E5 8B F7 03 F0 5A E8 55 FE C3  // ..&........Z.U..
    7F30: 2E 8E 1E 0E 03 8A 26 49 04 E8 E1 FA 74 0C 80 FC  // ......&I....t...
    7F40: 07 74 07 77 40 80 FC 03 7F 04 E8 53 FB C3 E8 1E  // .t.w@......S....
    7F50: FC C3 E8 EA F9 8A D8 8A C1 8A E6 FE C4 E8 1D FA  // ................
    7F60: 2B 3E 4A 04 C1 E7 03 52 F7 26 85 04 F7 26 4A 04  // +>J....R.&...&J.
    7F70: C1 E0 03 8B F7 2B F0 5A 8B 2E 4A 04 C1 E5 03 F7  // .....+.Z..J.....
    7F80: DD E8 00 FE C3 80 FC 13 7C 03 74 C6 C3 E8 AF F9  // ........|.t.....
    7F90: 8A D8 8A C1 8A E6 FE C4 E8 E2 F9 52 8B 2E 4A 04  // ...........R..J.
    7FA0: F7 26 85 04 F7 E5 2B FD 8B F7 2B F0 5A F7 DD E8  // .&....+...+.Z...
    7FB0: E9 F9 C3 2E 8E 1E 0E 03 2E 8E 06 14 03 E8 5D FA  // ..............].
    7FC0: 74 11 80 3E 49 04 07 7C 18 2E 8E 06 12 03 74 03  // t..>I..|......t.
    7FD0: E9 B1 00 E8 49 FC 8B D8 26 8B 07 8B EC 89 46 1A  // ....I...&.....F.
    7FE0: C3 A1 50 04 E8 B7 FC 8B F0 BB 08 00 2B E3 8B EC  // ..P.........+...
    7FF0: 80 3E 49 04 06 75 1F B9 04 00 26 8A 04 88 46 00  // .>I..u....&...F.
    8000: 45 26 8A 84 00 20 88 46 00 45 83 C6 50 E2 EB B8  // E&... .F.E..P...
    8010: 00 02 B2 80 EB 17 D1 E6 B9 04 00 E8 56 FC 81 C6  // ............V...
    8020: 00 20 E8 4F FC 81 EE B0 1F E2 F0 EB E2 2B EB C4  // . .O.........+..
    8030: 3E 0C 01 32 F6 80 FB 0E 75 09 26 83 7D FE 10 75  // >..2....u.&.}..u
    8040: 02 B6 80 16 1F 8B F5 8B CB F6 C6 80 74 01 47 56  // ............t.GV
    8050: 57 F3 A6 5F 5E 74 23 FE C0 03 FB F6 C6 80 74 01  // W.._^t#.......t.
    8060: 47 FE CA 75 E2 FE CC 74 0F 2E 8E 1E 0E 03 C4 3E  // G..u...t.......>
    8070: 7C 00 B0 80 B2 80 EB CB 32 C0 8B E5 03 E3 8B EC  // |.......2.......
    8080: 89 46 1A C3 80 3E 49 04 13 7C 05 75 02 EB 5A C3  // .F...>I..|.u..Z.
    8090: 2E 8E 06 10 03 E8 18 FC 8B F0 8B 1E 85 04 2B E3  // ..............+.
    80A0: 8B EC B8 05 08 B9 05 00 BA CE 03 80 3E 49 04 0F  // ............>I..
    80B0: 72 1A F6 06 87 04 60 75 13 B4 0A F7 C6 01 00 75  // r.....`u.......u
    80C0: 02 B4 05 B0 07 EF B8 05 18 B9 05 01 EF 51 8B CB  // .............Q..
    80D0: 26 8A 04 F6 D0 88 46 00 45 03 36 4A 04 E2 F1 58  // &.....F.E.6J...X
    80E0: EF B8 00 01 32 D2 E9 44 FF 2E 8E 06 10 03 A1 50  // ....2..D.......P
    80F0: 04 8B D0 32 F6 52 8A C4 32 E4 F7 26 4A 04 F7 26  // ...2.R..2..&J..&
    8100: 85 04 5A 03 C2 8B F0 8B 1E 85 04 2B E3 8B EC 53  // ..Z........+...S
    8110: 8B 3E 4A 04 4F C1 E7 03 C1 E6 03 B9 08 00 32 E4  // .>J.O.........2.
    8120: 26 8A 04 D0 E4 0A C0 74 03 80 CC 01 46 E2 F1 88  // &......t....F...
    8130: 66 00 45 03 F7 4B 75 E3 5B B8 00 01 32 D2 E9 EC  // f.E..Ku.[...2...
    8140: FE 33 ED EB 03 BD 01 00 2E 8E 1E 0E 03 2E 8E 06  // .3..............
    8150: 14 03 8A 26 49 04 E8 C4 F8 74 0F 2E 8E 06 12 03  // ...&I....t......
    8160: 80 FC 07 74 05 7C 3D E9 0B 02 8A E3 8B F0 8A DF  // ...t.|=.........
    8170: 32 FF D1 E3 8B 87 50 04 8B D0 A0 4A 04 F6 E4 32  // 2.....P....J...2
    8180: F6 03 C2 8B F8 D1 E7 0A DB 74 0B D0 EB A1 4C 04  // .........t....L.
    8190: 03 F8 FE CB 75 FA 8B C6 0B ED 75 03 F3 AB C3 AA  // ....u.....u.....
    81A0: 47 E2 FC C3 50 2E 8E 06 14 03 A1 50 04 E8 EE FA  // G...P......P....
    81B0: 8B F8 A0 50 04 8A 26 4A 04 8B E8 58 A8 80 74 08  // ...P..&J...X..t.
    81C0: 24 7F C5 36 7C 00 EB 04 C5 36 0C 01 8A FC 32 E4  // $..6|....6....2.
    81D0: C1 E0 03 03 F0 80 FF 06 74 69 D1 E7 8A F3 B0 55  // ........ti.....U
    81E0: 80 E3 03 F6 E3 8A D8 8A F8 8B C5 50 B2 04 F6 C6  // ...........P....
    81F0: 80 75 27 AC E8 55 FA 23 C3 AB AC E8 4E FA 23 C3  // .u'..U.#....N.#.
    8200: 26 89 85 FE 1F 83 C7 4E FE CA 75 E7 83 EE 08 81  // &......N..u.....
    8210: EF 3E 01 58 E8 72 00 E2 D2 C3 AC E8 2E FA 23 C3  // .>.X.r........#.
    8220: 26 31 05 AC E8 25 FA 23 C3 26 31 85 00 20 83 C7  // &1...%.#.&1.. ..
    8230: 50 FE CA 75 E5 83 EE 08 81 EF 3E 01 58 E8 49 00  // P..u......>.X.I.
    8240: E2 A9 C3 8B C5 50 B2 04 F6 C3 80 74 1F AC 26 30  // .....P.....t..&0
    8250: 05 AC 26 30 85 00 20 83 C7 50 FE CA 7F EF 83 EE  // ..&0.. ..P......
    8260: 08 81 EF 3F 01 58 E8 20 00 E2 DA C3 AC AA AC 26  // ...?.X. .......&
    8270: 88 85 FF 1F 83 C7 4F FE CA 7F F1 83 EE 08 81 EF  // ......O.........
    8280: 3F 01 58 E8 03 00 E2 BD C3 FE C0 38 E0 72 06 32  // ?.X........8.r.2
    8290: C0 81 C7 F0 00 C3 8A 16 85 04 F6 E2 8B F0 32 F6  // ..............2.
    82A0: 8B EA 66 0F B6 06 51 04 F6 E2 66 0F B7 16 4A 04  // ..f...Q...f...J.
    82B0: 83 FA 64 75 03 BA 68 00 83 FA 5A 75 03 BA 60 00  // ..du..h...Zu..`.
    82C0: 81 FA AF 00 75 03 BA B0 00 52 F7 E2 66 0F B7 F8  // ....u....R..f...
    82D0: 66 0F B6 06 50 04 66 03 F8 66 C1 CF 10 03 FA 66  // f...P.f..f.....f
    82E0: C1 C7 03 81 CF 00 FF 66 C1 C7 10 5A 8A E2 4A C1  // .......f...Z..J.
    82F0: E2 03 A0 50 04 50 C5 06 0C 01 03 F0 2E 8E 06 10  // ...P.P..........
    8300: 03 58 57 51 50 9C FC 8B CD E8 3B 00 B5 08 AC 8A  // .XWQP.....;.....
    8310: E0 8A C7 D0 E4 73 02 8A C3 26 88 05 66 47 FE CD  // .....s...&..fG..
    8320: 75 EF 66 03 FA E2 E2 9D 58 59 5F 83 C7 08 FE C0  // u.f.....XY_.....
    8330: 38 E0 72 0E 51 32 C0 8B CD 49 03 FA 83 C7 08 E2  // 8.r.Q2...I......
    8340: F9 59 2B F5 E2 BC C3 06 52 33 C0 8E C0 66 C1 C7  // .Y+.....R3...f..
    8350: 10 8B C7 66 C1 C7 10 E8 0C 98 74 16 38 E0 74 12  // ...f......t.8.t.
    8360: 0F B6 D0 E8 91 C9 8A E0 66 C1 C7 10 8B F8 66 C1  // ........f.....f.
    8370: C7 10 5A 07 C3 80 FC 13 7C 0B 0F 84 18 FF 80 FC  // ..Z.....|.......
    8380: 62 0F 84 11 FF E8 01 00 C3 80 FC 11 75 06 80 E3  // b...........u...
    8390: 80 80 CB 0F 50 53 8A DF 32 FF D1 E3 8B 97 50 04  // ....PS..2.....P.
    83A0: 5B 2E 8E 06 10 03 E8 07 F9 8B F8 8B 2E 85 04 58  // [..............X
    83B0: 32 F6 52 8B 36 4A 04 56 8A 26 85 04 C5 36 0C 01  // 2.R.6J.V.&...6..
    83C0: 80 FC 0E 75 09 83 7C FE 10 75 03 B4 10 46 F6 E4  // ...u..|..u...F..
    83D0: 03 F0 B6 03 F6 C3 80 75 6D B2 C4 B8 02 0F EF 5A  // .......um......Z
    83E0: 58 50 52 4A 8A E0 57 51 51 57 8B CD 32 C0 AA 03  // XPRJ..WQQW..2...
    83F0: FA E2 FB 5F 47 FE C4 38 D4 76 0A 32 E4 8B CD 49  // ..._G..8.v.2...I
    8400: 03 FA 47 E2 FB 59 E2 E0 59 5F BA C4 03 B0 02 8A  // ..G..Y..Y_......
    8410: E3 EF 5B 4B 5A 51 57 8B CD AC 26 8A 25 AA 03 FB  // ..[KZQW...&.%...
    8420: E2 F7 5F 47 2B F5 42 3B D3 76 0A 33 D2 8B CD 49  // .._G+.B;.v.3...I
    8430: 03 FB 47 E2 FB 59 E2 DD BA CE 03 B8 03 00 EF B2  // ..G..Y..........
    8440: C4 B8 02 0F EF C3 B2 CE B8 03 18 EF EB BC 2E 8E  // ................
    8450: 1E 0E 03 80 3E 63 04 B4 74 0B BA CC 03 EC A8 01  // ....>c..t.......
    8460: 75 04 CD 42 C3 C3 E8 D1 F8 0A FF 75 1C 8A E3 80  // u..B.......u....
    8470: E4 1F 80 26 66 04 E0 08 26 66 04 E8 2D 00 8A 1E  // ...&f...&f..-...
    8480: 66 04 80 E3 20 B1 05 D2 EB E8 91 F5 74 19 A0 66  // f... .......t..f
    8490: 04 24 DF 80 E3 01 74 02 0C 20 A2 66 04 24 10 0C  // .$....t.. .f.$..
    84A0: 02 0A D8 E8 53 00 C3 E8 7E F8 C3 53 50 80 E3 0F  // ....S...~..SP...
    84B0: 8A FB D0 E3 81 E3 10 07 0A DF E8 60 F5 74 0E B4  // ...........`.t..
    84C0: 00 8A C3 E8 2C F3 0B ED 74 03 26 88 1D 8A C3 E8  // ....,...t.&.....
    84D0: 0B 00 0B ED 74 04 26 88 5D 10 58 5B C3 8A E0 1E  // ....t.&.].X[....
    84E0: 2E 8E 1E 0E 03 80 3E 49 04 33 1F 7F 08 8A C4 B4  // ......>I.3......
    84F0: 11 E8 FE F2 C3 E8 30 F8 C3 9C FA E8 9F 05 B2 C0  // ......0.........
    8500: B9 03 00 B4 01 8A C4 EE 8A C3 EE 0B ED 74 04 47  // .............t.G
    8510: 26 88 1D FE C4 80 C3 02 E2 EB B0 20 EE 9D C3 2E  // &.......... ....
    8520: 8E 1E 0E 03 8A 26 49 04 E8 F2 F4 74 0A 80 FC 07  // .....&I....t....
    8530: 77 06 74 03 E8 C0 F5 C3 80 FC 13 7C 03 74 4C C3  // w.t........|.tL.
    8540: 8A D8 E8 BB F7 BA CE 03 B0 08 EF 2E 8E 1E 10 03  // ................
    8550: F6 C3 80 75 1C B2 C4 B8 02 FF EF 8A 25 C6 05 00  // ...u........%...
    8560: 8A E3 EF 8A 25 B4 FF 88 25 EF B2 CE B8 08 FF EF  // ....%...%.......
    8570: C3 B8 03 18 EF B2 C4 B0 02 8A E3 EF 8A 25 B4 FF  // .............%..
    8580: 88 25 EF B2 CE B8 03 00 EF EB E1 50 2E 8E 06 10  // .%.........P....
    8590: 03 A1 4A 04 C1 E0 03 F7 E2 03 C1 8B F8 58 26 88  // ..J..........X&.
    85A0: 05 C3 2E 8E 1E 0E 03 8A 26 49 04 E8 6F F4 74 0F  // ........&I..o.t.
    85B0: 80 FC 07 77 0B 74 08 E8 5F F5 8B EC 89 46 1A C3  // ...w.t.._....F..
    85C0: 80 FC 13 7C 03 74 29 C3 E8 35 F7 8A CC 2E 8E 1E  // ...|.t)..5......
    85D0: 10 03 BA CE 03 32 FF B8 04 03 EF D0 E7 8A 1D 22  // .....2........."
    85E0: D9 74 03 80 CF 01 FE CC 7D F0 8B EC 88 7E 1A C3  // .t......}....~..
    85F0: A1 4A 04 C1 E0 03 F7 E2 03 C1 8B F8 2E 8E 1E 10  // .J..............
    8600: 03 8A 05 8B EC 88 46 1A C3 2E 8E 1E 0E 03 8A 3E  // ......F........>
    8610: 62 04 8A CF D0 E1 32 ED BE 50 04 03 F1 8B 14 8A  // b.....2..P......
    8620: 0E 49 04 3C 0D 76 4A 2E 8E 06 14 03 E8 EE F3 75  // .I.<.vJ........u
    8630: 33 8A 1E 4A 04 8A F8 8A C6 F6 E3 8A CA 03 C8 D1  // 3..J............
    8640: E1 03 0E 4E 04 8B F9 8A C7 AA D1 E9 41 FE C2 38  // ...N........A..8
    8650: DA 73 59 89 14 8B 16 63 04 B0 0E 8A E5 EF 8A E1  // .sY....c........
    8660: FE C0 EF C3 2E 8E 06 12 03 80 F9 07 74 C3 E9 83  // ............t...
    8670: 00 75 04 32 D2 EB 0F 3C 0A 75 1D 3A 36 84 04 75  // .u.2...<.u.:6..u
    8680: 03 E9 93 00 FE C6 89 14 E8 92 F3 75 05 80 F9 07  // ...........u....
    8690: 7F 05 8B C2 E8 4C F6 C3 3C 07 75 04 E8 19 7F C3  // .....L..<.u.....
    86A0: 3C 08 75 83 0A D2 74 DE FE CA EB DA 32 FF 32 D2  // <.u...t.....2.2.
    86B0: 2B CB 3A 36 84 04 74 06 FE C6 03 CB EB 95 89 14  // +.:6..t.........
    86C0: 8B 16 63 04 B0 0E 8A E5 EF 8A E1 FE C0 EF 2B FB  // ..c...........+.
    86D0: 2B FB 26 8A 65 02 50 8B 3E 4E 04 8B F3 D1 E6 03  // +.&.e.P.>N......
    86E0: F7 A0 84 04 F6 E3 8B C8 06 1F F3 A5 8B CB 58 B0  // ..............X.
    86F0: 20 F3 AB C3 B9 01 00 B4 0A E8 C2 C6 FE C2 3A 16  //  .............:.
    8700: 4A 04 74 03 89 14 C3 32 FF 32 D2 89 14 3A 36 84  // J.t....2.2...:6.
    8710: 04 74 2E FE C6 EB ED 89 14 2E 8E 06 14 03 E8 FC  // .t..............
    8720: F2 74 0E 2E 8E 06 12 03 80 F9 07 74 04 32 FF EB  // .t.........t.2..
    8730: 10 8B C2 E8 AD F5 8B F9 D1 E7 4F 8B 1E 4A 04 EB  // ..........O..J..
    8740: 91 33 C9 8A 36 84 04 8A 16 4A 04 FE CA B0 01 E9  // .3..6....J......
    8750: 70 F7 2E 8E 1E 0E 03 F6 06 87 04 08 74 03 CD 42  // p...........t..B
    8760: C3 E8 76 F6 8B EC C6 46 1B 00 C3 2E 8E 1E 0E 03  // ..v....F........
    8770: 8A DF 32 FF D1 E3 89 97 50 04 D0 EB 38 1E 62 04  // ..2.....P...8.b.
    8780: 75 05 8B C2 E8 5C F5 C3 2E 8E 1E 0E 03 8A DF 32  // u....\.........2
    8790: FF D1 E3 8B 97 50 04 8B 0E 60 04 8B EC 89 4E 16  // .....P...`....N.
    87A0: 89 56 12 C3 2E 8E 1E 0E 03 A0 87 04 24 80 0A 06  // .V..........$...
    87B0: 49 04 8A 26 4A 04 F6 06 87 04 08 75 2D E8 5D F2  // I..&J......u-.].
    87C0: 74 07 80 3E 49 04 07 7F 21 51 8A CC 8A 2E 84 04  // t..>I...!Q......
    87D0: BE 95 87 81 FE 9E 87 74 10 2E 3B 0C 74 05 83 C6  // .......t..;.t...
    87E0: 03 EB F0 24 80 2E 0A 44 02 59 8A 3E 62 04 8B EC  // ...$...D.Y.>b...
    87F0: 89 46 1A 89 5E 0E 89 4E 16 89 56 12 C3 84 18 23  // .F..^..N..V....#
    8800: 84 2B 33 84 2A 32 2E 8E 1E 0E 03 3C 04 7F 1B 50  // .+3.*2.....<...P
    8810: 52 BA CC 03 EC A8 01 5A 58 74 08 80 3E 63 04 D4  // R......ZXt..>c..
    8820: 74 08 C3 80 3E 63 04 B4 75 F8 3C 1C 73 F4 32 E4  // t...>c..u.<.s.2.
    8830: 8B E8 D1 E5 2E FF A6 D1 87 09 88 29 88 3B 88 70  // ...........).;.p
    8840: 88 BA 87 BA 87 BA 87 95 88 AD 88 B1 88 BA 87 BA  // ................
    8850: 87 BA 87 BA 87 BA 87 BA 87 DF 88 BA 87 E3 88 FE  // ................
    8860: 88 BA 87 3D 89 BA 87 4B 89 66 89 6D 89 79 89 9D  // ...=...K.f.m.y..
    8870: 89 80 3E 49 04 13 74 15 E8 BF F4 8B C3 86 E0 E8  // ..>I..t.........
    8880: 70 EF 0B ED 74 07 8A C7 32 FF 26 88 01 E8 93 F4  // p...t...2.&.....
    8890: C3 E8 A6 F4 8A C7 E8 44 FC 0B ED 74 F0 26 88 7D  // .......D...t.&.}
    88A0: 11 EB EA 80 3E 49 04 13 74 E3 06 E8 8C F4 1F 0B  // ....>I..t.......
    88B0: ED 74 07 8B F2 B9 11 00 F3 A4 8B F2 E8 DE 01 32  // .t.............2
    88C0: E4 B9 10 00 B2 C0 9C FA 8A C4 EE AC EE 9D FE C4  // ................
    88D0: E2 F4 AC E8 07 FC EB B5 80 FB 01 77 B0 E8 43 F4  // ...........w..C.
    88E0: B2 C0 B0 30 E8 FB F0 24 F7 80 26 65 04 DF 80 FB  // ...0...$..&e....
    88F0: 00 74 07 0C 08 80 0E 65 04 20 EE EB 90 E8 9D 01  // .t.....e. ......
    8900: 8A C3 B2 C0 E8 DB F0 8B C8 EE B0 20 EE 8B EC 88  // ........... ....
    8910: 4E 0F E9 78 FF B3 11 EB E4 8B FA E8 05 F4 B9 10  // N..x............
    8920: 00 32 E4 B2 C0 8A C4 9C FA EE 42 EC 26 88 05 FE  // .2........B.&...
    8930: C4 4A EE 9D 47 E2 EE 9C FA B0 11 EE 42 EC 9D 26  // .J..G.......B..&
    8940: 88 05 E8 E3 F3 EB 5A E8 CE 00 C3 8B FA 51 8B C3  // ......Z......Q..
    8950: 26 8A 35 26 8A 6D 01 26 8A 4D 02 E8 CA 00 83 C7  // &.5&.m.&.M......
    8960: 03 43 59 E2 E8 C3 0A DB 75 1A E8 B6 F3 B2 C0 B0  // .CY.....u.......
    8970: 30 E8 6E F0 24 7F F6 C7 01 74 02 0C 80 B4 30 E8  // 0.n.$....t....0.
    8980: 70 EE EB 1D FE CB 75 1C E8 98 F3 B2 C0 B0 30 E8  // p.....u.......0.
    8990: 50 F0 EE A8 80 75 03 C0 E7 02 B4 34 8A C7 E8 51  // P....u.....4...Q
    89A0: EE E8 7F F3 C3 8A C3 E8 D1 00 8B EC 89 4E 16 88  // .............N..
    89B0: 76 13 C3 8B FA 51 8B C3 E8 C3 00 26 88 35 26 88  // v....Q.....&.5&.
    89C0: 6D 01 26 88 4D 02 83 C7 03 43 59 E2 E8 C3 BA C6  // m.&.M....CY.....
    89D0: 03 8A C3 EE C3 BA C6 03 EC 32 E4 8B EC 89 46 0E  // .........2....F.
    89E0: C3 E8 3F F3 B2 C0 B0 34 E8 F7 EF 8A F8 EE B0 30  // ..?....4.......0
    89F0: E8 EF EF B3 01 A8 80 75 05 B3 00 C0 EF 02 8B EC  // .......u........
    8A00: 89 5E 0E EB 9C 51 8B C3 E8 73 00 E8 2A 00 8A C3  // .^...Q...s..*...
    8A10: E8 52 00 43 59 E2 EE C3 F6 06 89 04 02 74 03 E8  // .R.CY........t..
    8A20: 16 00 8A C3 E8 39 00 C3 F6 06 89 04 02 74 03 E8  // .....9.......t..
    8A30: 06 00 8A C3 E8 2E 00 C3 50 B0 1E F6 E6 50 B0 3B  // ........P....P.;
    8A40: F6 E5 50 B0 0B F6 E1 59 03 C1 59 03 C1 B1 64 F6  // ..P....Y..Y...d.
    8A50: F1 80 FC 32 7C 02 FE C0 8A F0 8A E8 8A C8 58 C3  // ...2|.........X.
    8A60: 52 E8 39 00 5A 53 8B DA BA C8 03 9C FA EE 42 8A  // R.9.ZS........B.
    8A70: C7 EE 8A C5 EE 8A C1 EE 9D 5B C3 E8 1F 00 53 9C  // .........[....S.
    8A80: FA BA C7 03 EE 42 42 EC 8A F8 EB 00 EB 00 EC 8A  // .....BB.........
    8A90: E8 EB 00 EB 00 EC 8A C8 8A F7 9D 5B C3 50 51 E8  // ...........[.PQ.
    8AA0: 81 F2 B9 FF 7F EC A8 08 75 02 E2 F9 59 58 C3 2E  // ........u...YX..
    8AB0: 8E 1E 0E 03 8B F8 24 0F 81 E7 F0 00 C1 EF 03 83  // ......$.........
    8AC0: FF 06 7F 18 2E FF A5 61 8A 69 8A 7E 8A 1C 8B 78  // .......a.i.~...x
    8AD0: 8B 3C 03 74 08 3C 04 7F 03 E8 CF 01 C3 BA C4 03  // .<.t.<..........
    8AE0: B0 03 8A E3 EF C3 3C 04 77 F2 50 53 50 52 8B 16  // ......<.w.PSPR..
    8AF0: 63 04 B0 07 E8 EB EE 8A E0 D0 EC 80 E4 01 A8 40  // c..............@
    8B00: 74 03 80 CC 02 B0 12 E8 D8 EE 40 A3 85 04 B0 09  // t.........@.....
    8B10: E8 CF EE A8 80 74 04 D1 2E 85 04 A1 85 04 8B D0  // .....t..........
    8B20: 3D F4 01 73 1B BA E0 01 3D C2 01 73 13 BA 90 01  // =..s....=..s....
    8B30: 3D 7C 01 73 0B BA 5E 01 3D 4A 01 73 03 BA C8 00  // =|.s..^.=J.s....
    8B40: 89 16 85 04 5A 58 C6 06 84 04 FF E8 5D 01 5B 58  // ....ZX......].[X
    8B50: 8A DF 32 FF 0A C0 74 0E B3 0E 3C 01 74 08 B3 08  // ..2...t...<.t...
    8B60: 3C 02 74 02 B3 10 8A CB 8A E9 81 E9 01 02 80 F9  // <.t.............
    8B70: 08 7E 04 81 E9 01 01 87 1E 85 04 53 E8 5B F2 5B  // .~.........S.[.[
    8B80: E8 85 02 C3 0A C0 74 11 FE C8 74 1A FE C8 74 38  // ......t...t...t8
    8B90: FE C8 74 3C FE C8 74 40 C3 89 2E 7C 00 8C 06 7E  // ..t<..t@...|...~
    8BA0: 00 C3 8C C8 8E C0 FE CA 0A DB 74 07 32 FF 2E 8A  // ..........t.2...
    8BB0: 97 5C 8B 89 0E 85 04 88 16 84 04 89 2E 0C 01 8C  // .\..............
    8BC0: 06 0E 01 C3 00 0D 18 2A E8 09 03 B9 0E 00 EB D6  // .......*........
    8BD0: BD 6C 5A B9 08 00 EB CA BD 7F 62 B9 10 00 EB C2  // .lZ.......b.....
    8BE0: 0A C0 75 BD 8B 0E 85 04 8A 16 84 04 80 FF 07 77  // ..u............w
    8BF0: 35 80 FF 01 77 10 0A FF 75 06 C4 2E 7C 00 EB 26  // 5...w...u...|..&
    8C00: C4 2E 0C 01 EB 20 80 FF 02 75 0B 8C CD 8E C5 2E  // ..... ...u......
    8C10: 8B 2E 5E 73 EB 10 0E 07 8A DF 32 FF 80 EB 02 D1  // ..^s......2.....
    8C20: E3 2E 8B AF CF 8B 8B C5 8B EC 89 4E 16 89 56 12  // ...........N..V.
    8C30: 89 46 0A 8C 46 1E C3 7F 62 6C 5A 6C 5E 6C 62 7F  // .F..F...blZl^lb.
    8C40: 62 7F 72 53 06 8A 26 49 04 E8 CD C3 26 8A 47 02  // b.rS..&I....&.G.
    8C50: 26 8A 67 33 F6 C4 01 74 22 BD 7F 62 3C 10 7D 0E  // &.g3...t"..b<.}.
    8C60: E8 71 02 8C 06 0E 01 3C 0E 7D 07 BD 6C 5A 8C 0E  // .q.....<.}..lZ..
    8C70: 0E 01 89 2E 0C 01 E8 10 01 EB 2D B4 84 3C 10 7D  // ..........-..<.}
    8C80: 13 B4 81 3C 0E 74 0D 7F 15 B4 02 3C 08 74 05 80  // ...<.t.....<.t..
    8C90: CC 80 EB 0A 26 F6 47 05 01 74 03 80 E4 7F 86 C4  // ....&.G..t......
    8CA0: 32 DB E8 06 00 E8 C9 01 07 5B C3 8B F8 8B F2 BA  // 2........[......
    8CB0: CE 03 EC B8 05 00 EF B8 06 04 EF B2 C4 EC B8 02  // ................
    8CC0: 04 EF B8 04 07 EF 8B D6 8B C7 50 24 7F 0A C0 74  // ..........P$...t
    8CD0: 22 0E 07 33 D2 B9 00 01 3C 04 75 07 B7 10 BD 7F  // "..3....<.u.....
    8CE0: 62 EB 10 FE C8 75 07 B7 0E E8 E8 01 EB 05 B7 08  // b....u..........
    8CF0: BD 6C 5A E8 2D 00 58 A8 80 74 00 BA C4 03 B8 02  // .lZ.-.X..t......
    8D00: 03 EF B8 04 02 EF B2 CC EC A8 01 B8 06 0E 75 02  // ..............u.
    8D10: B4 0A B2 CE 50 EC 58 EF B0 04 EE 32 C0 EE B8 05  // ....P.X....2....
    8D20: 10 EF C3 FC 0B C9 75 01 C3 80 FF 0E 75 0A 26 83  // ......u.....u.&.
    8D30: 7E FE 10 75 03 80 CD 80 1E 06 1F 2E 8E 06 10 03  // ~..u............
    8D40: 8B FA C1 E7 05 B0 40 53 80 E3 03 F6 E3 5B F6 C3  // ......@S.....[..
    8D50: 04 74 02 04 20 86 E0 8B D0 03 FA 8B F5 E3 28 32  // .t.. .........(2
    8D60: C0 86 FB 32 FF 51 F6 C5 80 74 01 46 8B CB F3 A4  // ...2.Q...t.F....
    8D70: 83 FB 20 74 07 B9 20 00 2B CB F3 AA 59 F6 C5 80  // .. t.. .+...Y...
    8D80: 74 01 46 FE C9 75 DE 1F C3 8A 26 49 04 50 06 57  // t.F..u....&I.P.W
    8D90: C4 3E A8 04 26 C4 7D 0C 8C C5 0B EF 74 30 8B EF  // .>..&.}.....t0..
    8DA0: 83 C7 07 26 8A 05 3C FF 74 24 38 E0 74 03 47 EB  // ...&..<.t$8.t.G.
    8DB0: F2 8B FD 26 8A 05 FE C8 A2 84 04 26 8B 45 01 A3  // ...&.......&.E..
    8DC0: 85 04 26 C4 7D 03 89 3E 0C 01 8C 06 0E 01 5F 07  // ..&.}..>......_.
    8DD0: 58 C3 26 F6 47 33 01 74 01 C3 C4 1E A8 04 26 C4  // X.&.G3.t......&.
    8DE0: 5F 08 8C C0 0B C3 74 1F BF 0B 00 26 8A 01 3C FF  // _.....t....&..<.
    8DF0: 74 15 47 38 06 49 04 75 F2 26 8A 07 32 E4 87 06  // t.G8.I.u.&..2...
    8E00: 85 04 8B D8 E8 01 00 C3 8B 16 63 04 8A 26 85 04  // ..........c..&..
    8E10: FE CC 80 E4 1F 9C FA 80 FA D4 74 0B B0 14 EE 42  // ..........t....B
    8E20: EC 24 E0 0A C4 EE 4A B0 09 EE 42 EC 24 E0 0A C4  // .$....J...B.$...
    8E30: EE 9D 8A C8 8B C3 8A 16 85 04 F6 F2 80 3E 84 04  // .............>..
    8E40: FF 75 07 A2 84 04 FE 0E 84 04 F6 E2 F6 C1 80 74  // .u.............t
    8E50: 02 D1 E0 48 8A E0 B0 12 8B 16 63 04 EF A0 4A 04  // ...H......c...J.
    8E60: 8A 26 84 04 FE C4 F6 E4 D1 E0 05 00 01 A3 4C 04  // .&............L.
    8E70: C3 8A 26 49 04 50 06 57 C4 3E A8 04 26 C4 7D 08  // ..&I.P.W.>..&.}.
    8E80: 8C C5 0B EF 74 4A 8B EF 83 C7 0B 26 8A 05 3C FF  // ....tJ.....&..<.
    8E90: 74 3E 38 E0 74 03 47 EB F2 8B FD 26 8A 3D 26 8A  // t>8.t.G....&.=&.
    8EA0: 5D 01 26 8B 4D 02 26 8B 55 04 26 8A 45 0A 3C FF  // ].&.M.&.U.&.E.<.
    8EB0: 74 02 FE C8 50 A0 84 04 FE C0 F6 26 85 04 A3 85  // t...P......&....
    8EC0: 04 58 A2 84 04 26 C4 7D 06 8B EF 32 C0 E8 DB FD  // .X...&.}...2....
    8ED0: 5F 07 58 C3 50 53 51 52 2E A1 18 03 0B C0 74 09  // _.X.PSQR......t.
    8EE0: 2E 8B 2E 5E 73 0E 07 EB 08 B8 30 11 B7 02 E8 CD  // ...^s.....0.....
    8EF0: BE 5A 59 5B 58 C3 3C 04 7C 01 C3 E3 FD 53 2E 8E  // .ZY[X.<.|....S..
    8F00: 1E 0E 03 86 FB 32 FF D1 E3 8B FB 81 C7 50 04 8B  // .....2.......P..
    8F10: 35 5B 89 15 56 8B F0 51 53 26 8A 46 00 45 3C 0D  // 5[..V..QS&.F.E<.
    8F20: 7F 1F 75 04 32 D2 EB 40 3C 0A 74 32 3C 07 75 05  // ..u.2..@<.t2<.u.
    8F30: E8 85 76 EB 62 3C 08 75 08 0A D2 74 5A FE CA EB  // ..v.b<.u...tZ...
    8F40: 27 F7 C6 02 00 74 05 26 8A 5E 00 45 B9 01 00 B4  // '....t.&.^.E....
    8F50: 09 E8 6A BE FE C2 3A 16 4A 04 72 0C 32 D2 89 15  // ..j...:.J.r.2...
    8F60: 3A 36 84 04 73 06 FE C6 89 15 EB 2B 50 E8 AD EA  // :6..s......+P...
    8F70: 75 08 B8 00 08 E8 46 BE EB 09 80 3E 49 04 07 74  // u.....F....>I..t
    8F80: F1 32 E4 86 3E 62 04 53 8A FC 55 E8 25 00 5D 5B  // .2..>b.S..U.%.][
    8F90: 86 3E 62 04 58 8B 15 5B 59 E2 15 5A F7 C6 01 00  // .>b.X..[Y..Z....
    8FA0: 75 02 89 15 8B 05 3A 3E 62 04 75 03 E8 34 ED C3  // u.....:>b.u..4..
    8FB0: E9 64 FF 33 C9 8A 36 84 04 8A 16 4A 04 FE CA B8  // .d.3..6....J....
    8FC0: 01 06 E8 F9 BD C3 2E 8E 1E 0E 03 0A C0 75 0D E8  // .............u..
    8FD0: 18 00 8B EC 89 5E 0E C6 46 1A 1A C3 3C 01 75 09  // .....^..F...<.u.
    8FE0: E8 41 00 8B EC C6 46 1A 1A C3 A0 8A 04 BF 5C 90  // .A....F.......\.
    8FF0: 2E 3A 05 72 04 BB FF FF C3 32 E4 D1 E0 03 F8 2E  // .:.r.....2......
    9000: 8B 5D 04 0A DB 74 05 0A FF 75 04 C3 86 FB C3 A0  // .]...t...u......
    9010: 10 04 24 30 3C 30 74 06 F6 C3 01 75 EF C3 F6 C3  // ..$0<0t....u....
    9020: 01 74 E9 C3 BF 5C 90 2E 8A 0D 32 C0 83 C7 04 2E  // .t...\....2.....
    9030: 3B 1D 74 12 86 FB 2E 3B 1D 74 0B 83 C7 02 FE C0  // ;.t....;.t......
    9040: 38 C8 7E EB B0 FF A2 8A 04 C3 BB 08 00 F6 06 89  // 8.~.............
    9050: 04 02 74 0E BB 07 00 BA CC 03 EC A8 01 74 18 BB  // ..t..........t..
    9060: 08 00 BA B4 03 E8 DF EC 74 21 B7 01 E8 8C E9 80  // ........t!......
    9070: FA D4 74 17 86 FB C3 BA D4 03 E8 CA EC 74 0C B7  // ..t..........t..
    9080: 02 E8 77 E9 80 FA B4 74 02 86 FB C3 0F 08 0F 08  // ..w....t........
    9090: 0F 08 0F 08 03 01 03 01 01 01 00 08 01 01 01 01  // ................
    90A0: 01 01 01 01 0F 01 0F 08 0F 04 00 02 0F 02 01 01  // ................
    90B0: 0F 01 FF 01 FF E0 0F 00 00 00 00 07 02 08 FF 0E  // ................
    90C0: 00 00 3F 00 10 01 08 00 00 00 00 01 00 02 02 01  // ..?.............
    90D0: 00 04 04 01 00 05 02 05 00 06 01 06 05 06 00 08  // ................
    90E0: 01 08 00 07 02 07 06 07 CA 00 34 00 90 00 96 00  // ..........4.....
    90F0: 00 00 00 00 00 00 5F 57 C3 90 50 66 52 E8 F4 FF  // ......_W..PfR...
    9100: FF FF 81 EF 10 00 00 00 2E 8B 07 66 BA F8 0C EF  // ...........f....
    9110: 66 BA FC 0C ED 32 C0 66 8B F8 66 5A 58 C3 66 B8  // f....2.f..fZX.f.
    9120: 4F 03 66 52 66 56 53 57 50 0A FF 75 44 E8 C8 FF  // O.fRfVSWP..uD...
    9130: FF FF 66 33 F6 66 BB 53 00 E8 48 00 00 00 C1 E8  // ..f3.f.S..H.....
    9140: 10 F6 C4 40 75 2B 66 81 E2 FF 02 66 D1 E2 66 8B  // ...@u+f....f..f.
    9150: C2 66 40 C1 E0 10 66 8B C2 66 BB 13 00 E8 30 00  // .f@...f..f....0.
    9160: 00 00 66 BB 12 00 E8 27 00 00 00 66 58 32 E4 66  // ..f....'...fX2.f
    9170: 50 58 5F 5B 66 5E 66 5A C3 90 66 B8 4F 03 C3 90  // PX_[f^fZ..f.O...
    9180: 66 B8 4F 03 C3 90 66 52 E8 11 00 00 00 ED 66 5A  // f.O...fR......fZ
    9190: C3 90 66 52 E8 05 00 00 00 EF 66 5A C3 90 66 8B  // ..fR......fZ..f.
    91A0: D7 50 33 C0 66 8B C3 66 03 C6 C1 E0 02 EF 66 83  // .P3.f..f......f.
    91B0: C2 04 58 C3 6A 39 5D 39 5D 39 5D 39 48 39 48 39  // ..X.j9]9]9]9H9H9
    91C0: 48 39 48 39 8A 35 01 36 2B 36 6C 37 6B 37 6B 37  // H9H9.5.6+6l7k7k7
    91D0: B1 37 16 38 46 38 03 39 2C 39 2C 39 A3 37 96 37  // .7.8F8.9,9,9.7.7
    91E0: 96 37 96 37 96 37 96 37 B1 37 16 38 46 38 03 39  // .7.7.7.7.7.8F8.9
    91F0: 31 39 77 39 2C 39 2C 39 FF FF FF FF FF FF 00 00  // 19w9,9,9........
    9200: FF FF 00 00 FF FF 00 00 FF 00 00 00 FF 00 00 00  // ................
    9210: FF 00 00 00 FF 00 00 00 00 00 08 10 00 08 10 18  // ................
    9220: 00 08 10 18 8E 33 01 8E 33 02 9C 47 03 7C 47 03  // .....3..3..G.|G.
    9230: B3 34 03 67 34 03 8F 33 04 A8 33 04 B8 33 04 8E  // .4.g4..3..3..3..
    9240: 33 03 00 00 00 00 3B 3B 00 02 3B 3B 01 02 3B 3B  // 3.....;;..;;..;;
    9250: 02 02 3B 3B 03 02 3B 3B 04 02 3B 3B 05 02 35 3D  // ..;;..;;..;;..5=
    9260: 00 02 35 3D 01 02 35 3D 02 02 35 3D 03 02 35 3D  // ..5=..5=..5=..5=
    9270: 04 02 35 3D 05 02 6A 3D 00 02 6A 3D 01 02 6A 3D  // ..5=..j=..j=..j=
    9280: 02 02 6A 3D 03 02 6A 3D 04 02 6A 3D 05 02 A5 3F  // ..j=..j=..j=...?
    9290: 00 02 A5 3F 01 02 A5 3F 02 02 A5 3F 03 02 A5 3F  // ...?...?...?...?
    92A0: 04 02 A5 3F 05 02 A5 3F 00 02 A5 3F 01 02 A5 3F  // ...?...?...?...?
    92B0: 02 02 A5 3F 03 02 A5 3F 04 02 A5 3F 05 02 6C 3E  // ...?...?...?..l>
    92C0: 00 02 6C 3E 01 02 6C 3E 02 02 6C 3E 03 02 6C 3E  // ..l>..l>..l>..l>
    92D0: 04 02 6C 3E 05 02 A8 3E 00 02 A8 3E 01 02 A8 3E  // ..l>...>...>...>
    92E0: 02 02 A8 3E 03 02 A8 3E 04 02 A8 3E 05 02 19 3E  // ...>...>...>...>
    92F0: 00 02 19 3E 01 02 19 3E 02 02 19 3E 03 02 19 3E  // ...>...>...>...>
    9300: 04 02 19 3E 05 02 4D 3E 00 02 4D 3E 01 02 4D 3E  // ...>..M>..M>..M>
    9310: 02 02 4D 3E 03 02 4D 3E 04 02 4D 3E 05 02 FD 41  // ..M>..M>..M>...A
    9320: 00 00 30 42 01 00 30 42 02 00 1D 42 00 00 0B 41  // ..0B..0B...B...A
    9330: 00 02 04 3F 00 02 04 3F 01 02 04 3F 02 02 04 3F  // ...?...?...?...?
    9340: 03 02 04 3F 04 02 04 3F 05 02 23 41 00 02 78 43  // ...?...?..#A..xC
    9350: 05 00 78 43 01 00 78 43 00 00 78 43 02 00 B9 43  // ..xC..xC..xC...C
    9360: 00 00 B9 43 02 00 FE 43 00 00 8E 40 00 02 8E 40  // ...C...C...@...@
    9370: 01 02 8E 40 02 02 8E 40 03 02 8E 40 04 02 8E 40  // ...@...@...@...@
    9380: 05 02 4A 42 00 00 72 42 00 00 F3 42 00 00 6E 43  // ..JB..rB...B..nC
    9390: 00 00 52 3F 00 02 52 3F 01 02 52 3F 02 02 52 3F  // ..R?..R?..R?..R?
    93A0: 03 02 52 3F 04 02 52 3F 05 02 6D 43 00 01 6D 43  // ..R?..R?..mC..mC
    93B0: 00 01 71 3C 00 02 71 3C 01 02 71 3C 02 02 71 3C  // ..q<..q<..q<..q<
    93C0: 03 02 71 3C 04 02 71 3C 05 02 92 42 00 00 6E 43  // ..q<..q<...B..nC
    93D0: 00 00 6E 43 00 00 6E 43 00 00 A3 41 00 00 95 3D  // ..nC..nC...A...=
    93E0: 00 02 95 3D 01 02 95 3D 02 02 95 3D 03 02 95 3D  // ...=...=...=...=
    93F0: 04 02 95 3D 05 02 C4 3D 00 02 C4 3D 01 02 C4 3D  // ...=...=...=...=
    9400: 02 02 C4 3D 03 02 C4 3D 04 02 C4 3D 05 02 FA 3D  // ...=...=...=...=
    9410: 00 02 FA 3D 01 02 FA 3D 02 02 FA 3D 03 02 FA 3D  // ...=...=...=...=
    9420: 04 02 FA 3D 05 02 B5 42 00 00 D8 42 00 00 96 3E  // ...=...B...B...>
    9430: 01 02 96 3E 02 02 F2 3E 01 02 F2 3E 02 02 A6 00  // ...>...>...>....
    9440: 02 01 C6 94 00 00 00 00 00 00 2E AE 00 00 92 96  // ................
    9450: 00 00 00 00 00 98 00 00 00 00 CA 98 E2 9C 00 00  // ................
    9460: 00 00 00 00 00 00 00 00 DE 96 B8 A1 32 97 00 00  // ............2...
    9470: 84 97 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9480: 00 00 00 00 64 A2 D6 A2 4A A3 00 00 8E A3 00 00  // ....d...J.......
    9490: DC A6 00 00 5E A4 1C A6 A8 A7 06 A9 48 A9 BA C6  // ....^.......H...
    94A0: 00 00 00 00 5C A9 22 AB BA C4 00 00 1C C6 2C AB  // ....\.".......,.
    94B0: 00 00 F8 AC 00 00 00 00 00 00 3E AD 26 AE 00 00  // ..........>.&...
    94C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    94D0: 00 00 00 00 00 00 00 00 42 C8 42 B1 4E B2 44 C2  // ........B.B.N.D.
    94E0: 60 C4 00 00 4A 00 02 01 00 00 00 00 00 00 28 C9  // `...J.........(.
    94F0: 7C CA C4 CA C8 CD 44 D4 4A D6 00 00 00 00 24 CE  // |.....D.J.....$.
    9500: 30 D2 84 D2 66 D6 20 D3 00 00 24 D3 00 00 00 00  // 0...f. ...$.....
    9510: 00 00 00 00 38 D3 06 D4 00 00 00 00 00 00 0C D4  // ....8...........
    9520: 00 00 00 00 30 CE 00 00 00 00 00 00 00 00 CC 01  // ....0...........
    9530: 02 01 00 08 37 00 00 02 00 00 E3 0D 01 05 80 29  // ....7..........)
    9540: 00 F4 00 00 01 05 53 39 00 F4 00 00 01 05 00 00  // ......S9........
    9550: 2C A8 01 00 01 05 01 00 00 F4 00 00 1A 05 00 04  // ,...............
    9560: 2C 05 00 FF F3 00 00 01 01 81 29 00 01 01 54 39  // ,.........)...T9
    9570: 00 01 05 00 00 2D A8 01 00 01 01 01 00 00 01 05  // .....-..........
    9580: 85 29 00 00 3D 00 01 05 F7 3A 00 00 3D 00 01 05  // .)..=....:..=...
    9590: 00 00 31 A8 01 00 01 05 01 00 00 00 3D 00 14 05  // ..1.........=...
    95A0: 00 06 0E 0D 00 3F 00 2C 05 00 01 00 00 00 01 01  // .....?.,........
    95B0: 86 29 00 01 01 F8 3A 00 01 05 00 00 32 A8 01 00  // .)....:.....2...
    95C0: 01 01 01 00 00 01 05 50 28 EB 0F E4 60 01 05 00  // .......P(...`...
    95D0: 00 90 A6 01 00 01 05 01 00 EB 0F E4 60 01 05 6E  // ............`..n
    95E0: 29 00 00 00 00 01 05 00 00 1A A8 01 00 01 05 01  // )...............
    95F0: 00 00 00 00 00 01 05 72 29 FF FF 0F 00 01 05 00  // .......r).......
    9600: 00 1E A8 01 00 01 05 01 00 FF FF 0F 00 01 05 00  // ................
    9610: 00 10 A8 01 00 01 00 64 29 01 00 01 05 00 00 11  // .......d).......
    9620: A8 01 00 01 00 65 29 01 00 01 05 00 00 12 A8 01  // .....e).........
    9630: 00 01 00 66 29 01 00 01 05 00 00 13 A8 01 00 01  // ...f)...........
    9640: 00 67 29 01 00 01 05 00 00 14 A8 01 00 01 00 68  // .g)............h
    9650: 29 01 00 01 05 00 00 15 A8 01 00 01 00 69 29 01  // )............i).
    9660: 00 01 05 00 00 16 A8 01 00 01 00 6A 29 01 00 01  // ...........j)...
    9670: 05 00 00 17 A8 01 00 01 00 6B 29 01 00 01 00 55  // .........k)....U
    9680: 39 01 00 03 00 40 01 00 01 02 74 29 40 01 02 59  // 9....@....t)@..Y
    9690: 39 40 01 05 00 00 20 A8 01 00 01 02 01 00 40 03  // 9@.... .......@.
    96A0: 00 41 81 29 33 00 41 80 29 2D 02 40 41 01 02 75  // .A.)3.A.)-.@A..u
    96B0: 29 40 01 02 5A 39 40 01 05 00 00 21 A8 01 00 01  // )@..Z9@....!....
    96C0: 02 01 00 40 01 05 00 00 1F A8 01 00 01 00 73 29  // ...@..........s)
    96D0: 01 00 03 00 41 E3 0D 33 05 41 01 00 00 00 1B 05  // ....A..3.A......
    96E0: 41 0B 01 02 06 00 41 0D 25 1F 0E 03 0D 25 22 0C  // A.....A.%....%".
    96F0: 02 0D 05 53 00 00 02 00 00 5B 4B 00 01 01 00 00  // ...S.....[K.....
    9700: 37 00 00 42 21 00 63 00 1F 00 63 01 39 00 63 03  // 7..B!.c...c.9.c.
    9710: 3F 00 63 02 45 00 5A 5A 5B 03 05 40 00 00 05 04  // ?.c.E.ZZ[..@....
    9720: 2D 19 40 00 15 05 40 02 01 02 0C 00 40 02 00 00  // -.@...@.....@...
    9730: 0D 00 5B 02 00 00 E3 0D 5B 02 00 00 E7 0D 5B 02  // ..[.....[.....[.
    9740: 00 00 E8 0D 5B 00 54 00 01 02 00 00 37 00 00 01  // ....[.T.....7...
    9750: 05 00 00 9B 62 01 00 54 00 01 00 01 05 00 00 93  // ....b..T........
    9760: 62 01 00 01 01 01 00 01 56 00 41 03 09 41 00 01  // b.......V.A..A..
    9770: 05 00 00 83 62 01 00 01 02 01 00 41 01 05 00 00  // ....b......A....
    9780: 9B 62 01 00 3C 25 01 00 00 44 36 00 01 05 00 00  // .b..<%...D6.....
    9790: 93 62 01 00 02 00 01 01 00 5B 52 00 02 01 08 08  // .b.......[R.....
    97A0: 37 00 00 3D 25 00 00 44 14 00 55 38 00 5B 01 05  // 7..=%..D..U8.[..
    97B0: 00 00 61 60 01 00 3C E5 01 00 FF 44 10 00 4A E5  // ..a`..<....D..J.
    97C0: 01 00 80 44 24 00 01 05 00 00 62 60 01 00 01 01  // ...D$.....b`....
    97D0: 01 00 01 56 00 40 03 A9 40 00 01 05 00 00 61 60  // ...V.@..@.....a`
    97E0: 01 00 01 02 01 00 40 02 E5 00 01 5B 7B 00 02 01  // ......@....[{...
    97F0: 00 00 37 00 00 3D 65 00 01 44 7A 00 56 00 40 03  // ..7..=e..Dz.V.@.
    9800: 21 40 00 21 25 40 DC 03 0A 48 40 01 05 B6 3A 00  // !@.!%@...H@...:.
    9810: 01 00 00 5C 05 2D 3B CF FF CF FF 20 00 10 00 5C  // ...\.-;.... ...\
    9820: 05 40 3B CF FF FF FF 20 00 00 00 01 05 B7 3A 00  // .@;.... ......:.
    9830: 00 00 04 56 00 40 03 21 40 00 21 25 40 80 03 0A  // ...V.@.!@.!%@...
    9840: 48 40 5C 05 01 50 FF FC FF FF 00 03 00 00 56 00  // H@\..P........V.
    9850: 40 03 21 40 00 15 05 40 19 5C 02 50 50 FF FF FF  // @.!@...@.\.PP...
    9860: F1 40 3A 00 00 5B 5B 00 CA 00 02 01 04 04 37 00  // .@:..[[.......7.
    9870: 00 66 0C 03 0C 41 00 00 2D 0A 41 42 2D 0D 42 04  // .f...A..-.AB-.B.
    9880: 00 3D 24 00 06 00 44 31 00 2D 0D 42 08 00 3E 0A  // .=$...D1.-.B..>.
    9890: 42 41 45 19 00 55 20 00 5B 56 00 43 03 24 43 05  // BAE..U .[V.C.$C.
    98A0: 00 03 04 46 00 00 33 05 46 01 00 00 00 01 02 00  // ...F..3.F.......
    98B0: 00 46 03 00 00 01 00 0D 02 01 00 44 2D 05 46 02  // .F.........D-.F.
    98C0: 00 00 00 01 02 00 00 46 03 24 43 04 00 4B E5 00  // .......F.$C..K..
    98D0: 01 49 AA 00 07 02 01 00 45 2D 05 46 01 00 00 00  // .I......E-.F....
    98E0: 01 02 00 00 46 4A 02 01 00 44 44 90 00 03 29 43  // ....FJ...DD...)C
    98F0: 00 0E A2 00 44 43 98 00 03 29 43 00 08 A2 00 45  // ....DC...)C....E
    9900: 33 05 46 03 00 00 00 01 02 00 00 46 01 02 01 00  // 3.F........F....
    9910: 00 5B 0D 02 01 00 44 01 04 00 00 00 00 3D A5 00  // .[....D......=..
    9920: 01 44 C4 00 07 02 01 00 45 43 C9 00 0D 02 01 00  // .D......EC......
    9930: 44 5B 17 04 01 07 10 08 37 00 00 4A 25 48 00 01  // D[......7..J%H..
    9940: 44 12 00 5B 3D 25 01 FF 44 F9 03 3D 25 01 18 46  // D..[=%..D..=%..F
    9950: F5 03 3D 25 01 02 47 F5 03 3D 25 01 14 45 F9 03  // ..=%..G..=%..E..
    9960: 3D 05 00 00 00 00 00 44 06 02 66 1B 56 00 02 3D  // =......D..f.V..=
    9970: A5 01 02 49 4A 00 56 08 40 43 5C 00 3D A5 01 03  // ...IJ.V.@C\.=...
    9980: 49 57 00 56 08 40 43 5C 00 03 0C 40 18 00 3E 0D  // IW.V.@C\...@..>.
    9990: 40 00 00 44 6B 00 03 0A 02 40 43 6F 00 0E E5 01  // @..Dk....@Co....
    99A0: 80 4B E5 01 02 49 7D 00 02 A9 02 02 55 28 02 03  // .K...I}.....U(..
    99B0: 01 00 00 03 05 46 C0 5D 00 00 3D A5 01 00 44 96  // .....F.]..=...D.
    99C0: 00 03 05 46 80 BB 00 00 5C A5 0F 5E F3 08 55 28  // ...F....\..^..U(
    99D0: 01 3E 05 00 40 4B 4C 00 47 B0 00 1B 05 00 01 43  // .>..@KL.G......C
    99E0: C5 00 2C 65 01 01 3E 05 00 A0 25 26 00 48 C5 00  // ..,e..>...%&.H..
    99F0: 15 05 00 01 43 B0 00 14 2D 01 04 4B E5 01 80 49  // ....C...-..K...I
    9A00: F4 00 21 05 02 80 00 00 00 7C 02 40 00 7E 02 40  // ..!......|.@.~.@
    9A10: 46 7C 05 40 10 00 00 00 7E 05 40 35 0C 00 00 03  // F|.@....~.@5....
    9A20: 02 02 40 43 F7 00 56 00 02 27 02 00 46 21 05 41  // ..@C..V..'..F!.A
    9A30: 00 00 01 00 27 02 40 46 03 0A 42 40 3E 05 41 00  // ....'.@F..B@>.A.
    9A40: 00 00 00 49 1F 01 03 0D 40 01 00 56 08 01 43 49  // ...I....@..V..CI
    9A50: 01 03 02 40 46 03 02 01 41 03 02 03 41 27 02 40  // ...@F...A...A'.@
    9A60: 41 03 02 40 03 3E 05 41 00 00 00 00 49 27 01 27  // A..@.>.A....I'.'
    9A70: 02 01 03 03 0A 01 40 27 02 46 03 03 0A 03 01 03  // ......@'.F......
    9A80: 0A 01 40 03 8A 01 42 27 02 00 46 33 05 40 10 00  // ..@...B'..F3.@..
    9A90: 00 00 15 05 40 05 03 8A 03 40 66 FF 2D 0D 42 03  // ....@....@f.-.B.
    9AA0: 04 56 00 40 03 21 40 01 33 25 40 14 15 25 40 01  // .V.@.!@.3%@..%@.
    9AB0: 2D 0A 42 40 03 0C 48 00 00 4A 25 06 5E 04 44 2C  // -.B@..H..J%.^.D,
    9AC0: 02 56 00 40 4B E5 01 30 44 A4 01 4A 25 F1 5D 01  // .V.@K..0D..J%.].
    9AD0: 44 E5 01 43 AC 01 4A 25 F1 5D 01 49 E5 01 03 00  // D..C..J%.].I....
    9AE0: 40 0B 5E 09 0D 40 F0 FF 3E 1A 40 03 49 E5 01 3C  // @.^..@..>.@.I..<
    9AF0: 02 07 5E 01 49 E5 01 3C 0A 0A 5E 03 49 E5 01 03  // ..^.I..<..^.I...
    9B00: 00 40 0C 5E 09 25 40 70 3E 29 40 01 49 E5 01 3C  // .@.^.%@p>)@.I..<
    9B10: 02 08 5E 02 44 E9 01 0E E5 01 01 3A 00 00 4B E5  // ..^.D......:..K.
    9B20: 01 01 44 CD 03 4B E5 01 02 49 06 02 3D 25 02 03  // ..D..K...I..=%..
    9B30: 46 06 02 55 28 02 52 23 3A 00 00 02 01 03 02 02  // F..U(.R#:.......
    9B40: 05 02 00 00 03 04 02 21 02 01 32 25 02 14 52 4D  // .......!..2%..RM
    9B50: 02 01 02 03 3D 05 00 00 00 00 00 44 F5 03 3D A5  // ....=......D..=.
    9B60: 01 00 44 57 02 02 01 03 02 02 05 02 00 0F 03 00  // ..DW............
    9B70: 02 21 02 01 32 25 02 14 4B E5 01 30 44 51 02 0E  // .!..2%..K..0DQ..
    9B80: E5 02 01 52 4D 02 01 02 03 66 FF 2D 0D 42 03 04  // ...RM....f.-.B..
    9B90: 56 00 40 03 21 40 01 33 25 40 14 15 25 40 01 2D  // V.@.!@.3%@..%@.-
    9BA0: 0A 42 40 03 0C 48 00 00 03 05 40 00 00 38 00 3E  // .B@..H....@..8.>
    9BB0: 05 00 C0 C6 2D 00 47 A9 02 5E A5 40 CF 20 3E 05  // ....-.G..^.@. >.
    9BC0: 00 E0 67 35 00 47 A9 02 5E A5 40 CF 10 3E 05 00  // ..g5.G..^.@..>..
    9BD0: 00 09 3D 00 47 A9 02 09 A5 40 CF 5C B2 0F 5E C3  // ..=.G....@.\..^.
    9BE0: 40 3D A5 01 00 49 D1 02 5C 05 0F 5E FF FF 3F E0  // @=...I..\..^..?.
    9BF0: 00 00 40 10 5C 05 11 5E FF FF 7F C0 00 00 80 3F  // ..@.\..^.......?
    9C00: 43 E9 02 5C 05 0F 5E 3F E0 FF FF 00 00 00 10 5C  // C..\..^?.......\
    9C10: 05 11 5E 7F C0 FF FF 00 00 00 3E 03 05 40 00 00  // ..^.......>..@..
    9C20: 14 1E 3D A5 01 00 49 0C 03 03 05 40 10 00 1C 24  // ..=...I....@...$
    9C30: 3D 25 01 17 45 0C 03 03 05 40 00 00 1C 24 3D A5  // =%..E....@...$=.
    9C40: 01 00 44 1A 03 5C 9A 10 5E 03 00 40 5C 1A 0B 5E  // ..D..\..^..@\..^
    9C50: 0F 00 03 5C A2 0B 5E 8F 40 56 00 40 03 29 40 01  // ...\..^.@V.@.)@.
    9C60: 0F 25 40 01 4B E5 01 80 49 3D 03 0F 65 40 01 5C  // .%@.K...I=..e@.\
    9C70: 0A 0C 5E 8B FE 40 07 8D 0D 5E 0F E0 3E 8D 01 00  // ..^..@...^..>...
    9C80: 00 49 62 03 3E 0D 03 00 00 49 62 03 07 E5 0E 5E  // .Ib.>....Ib....^
    9C90: FE 43 67 03 0D E5 0E 5E 01 4A E5 0E 5E 01 49 7F  // .Cg....^.J..^.I.
    9CA0: 03 4A 65 0C 5E 01 49 7F 03 07 E5 0E 5E EF 43 84  // .Je.^.I.....^.C.
    9CB0: 03 0D E5 0E 5E 10 01 02 07 5E 01 01 02 08 5E 02  // ....^....^....^.
    9CC0: 7C 05 02 00 EC 04 00 7E 02 40 46 27 05 40 0A 00  // |......~.@F'.@..
    9CD0: 00 00 01 02 09 5E 40 01 0A 0A 5E 03 3A 00 00 3D  // .....^@...^.:..=
    9CE0: A5 01 00 44 F5 03 03 01 00 02 02 05 02 00 01 03  // ...D............
    9CF0: 04 02 21 02 01 32 25 02 14 52 4D 02 02 02 00 3A  // ..!..2%..RM....:
    9D00: 00 00 3D 25 02 03 46 F5 03 02 25 03 02 02 E1 03  // ..=%..F...%.....
    9D10: 02 02 61 03 01 02 B9 03 01 08 A5 03 04 0E B1 03  // ..a.............
    9D20: 02 02 01 02 00 52 2E 3A 00 00 5B 02 25 01 0B 43  // .....R.:..[.%..C
    9D30: CD 03 7A 14 00 00 00 D8 00 B0 01 88 02 60 03 00  // ..z..........`..
    9D40: 00 00 01 00 02 00 03 00 04 00 D6 04 02 01 04 04  // ................
    9D50: 37 00 00 42 29 00 63 07 1D 00 63 08 17 00 5A 5A  // 7..B).c...c...ZZ
    9D60: 5B 0D 25 C8 39 02 5B 01 05 1F 35 FF FF FF FF 01  // [.%.9.[...5.....
    9D70: 05 20 35 3F 00 00 00 01 05 3B 01 30 02 12 00 01  // . 5?.....;.0....
    9D80: 05 30 01 80 BB 10 00 01 05 31 01 3C 00 01 08 01  // .0.......1.<....
    9D90: 05 34 01 00 00 00 00 01 05 3C 01 00 00 00 00 01  // .4.......<......
    9DA0: 8D 83 38 30 00 01 25 82 38 01 01 25 32 01 00 01  // ..80..%.8..%2...
    9DB0: 05 42 35 00 00 00 00 01 05 40 35 00 00 00 00 01  // .B5......@5.....
    9DC0: 05 46 35 00 00 00 00 01 05 44 35 00 00 00 00 01  // .F5......D5.....
    9DD0: 05 4A 35 00 00 00 00 01 05 48 35 00 00 00 00 01  // .J5......H5.....
    9DE0: 05 4E 35 00 00 00 00 01 05 4C 35 00 00 00 00 01  // .N5......L5.....
    9DF0: 05 61 35 00 00 00 00 01 05 63 35 00 00 00 00 01  // .a5......c5.....
    9E00: 05 65 35 00 00 00 00 01 05 72 35 01 00 00 00 01  // .e5......r5.....
    9E10: 05 DF 39 01 10 00 00 01 05 F4 39 01 00 02 00 07  // ..9.......9.....
    9E20: 05 F0 39 FF FF FF 7F 07 05 EF 39 9F FF FF FF 54  // ..9.......9....T
    9E30: 20 6D 91 01 05 B3 3A 01 00 00 00 01 05 8F 3B 11  //  m....:.......;.
    9E40: 00 00 00 01 05 6B 3C 21 00 00 00 01 05 47 3D 31  // .....k<!.....G=1
    9E50: 00 00 00 55 00 01 20 0D 01 DC 00 03 0A 48 40 01  // ...U.. ......H@.
    9E60: 05 B1 3A 00 1B 5D 05 01 05 06 3B 35 00 13 00 01  // ..:..]....;5....
    9E70: 05 07 3B 36 11 00 00 01 05 08 3B 41 E6 01 00 01  // ..;6......;A....
    9E80: 05 09 3B 00 00 00 00 01 05 0A 3B 00 00 08 2C 01  // ..;.......;...,.
    9E90: 05 0C 3B 02 04 00 00 01 05 1F 3B 5E 4E 01 00 01  // ..;.......;^N...
    9EA0: 05 0A 3B 00 00 08 2C 01 05 0D 3B A4 01 00 00 01  // ..;...,...;.....
    9EB0: 05 0F 3B A4 01 00 00 01 05 14 3B 00 02 00 00 01  // ..;.......;.....
    9EC0: 05 15 3B 49 D2 00 00 01 05 18 3B 20 00 00 00 01  // ..;I......; ....
    9ED0: 05 19 3B 24 0D 00 00 01 05 1C 3B 00 00 00 00 01  // ..;$......;.....
    9EE0: 05 1D 3B 00 00 00 00 01 05 ED 3A 00 00 92 06 01  // ..;.......:.....
    9EF0: 05 EE 3A AA 08 00 E0 2C 05 01 01 00 00 00 3D 0D  // ..:....,......=.
    9F00: 01 04 00 45 0C 01 56 08 48 01 05 C9 39 FE 01 00  // ...E..V.H...9...
    9F10: 00 01 05 CB 39 BA 04 00 00 01 05 CC 39 24 04 00  // ....9.......9$..
    9F20: 00 01 05 CD 39 A2 08 00 00 01 05 CE 39 FE 01 00  // ....9.......9...
    9F30: 00 01 05 D0 39 BA 04 00 00 01 05 D1 39 24 04 00  // ....9.......9$..
    9F40: 00 01 05 D2 39 A2 08 00 00 01 05 D3 39 FE 01 00  // ....9.......9...
    9F50: 00 01 05 D5 39 BA 04 00 00 01 05 D6 39 24 04 00  // ....9.......9$..
    9F60: 00 01 05 D7 39 A2 08 00 00 01 05 D8 39 FE 01 00  // ....9.......9...
    9F70: 00 01 05 DA 39 BA 04 00 00 01 05 DB 39 24 04 00  // ....9.......9$..
    9F80: 00 01 05 DC 39 A2 08 00 00 0D 25 C8 39 02 55 00  // ....9.....%.9.U.
    9F90: 01 66 FF 2D 0D 42 CE 04 03 0C 48 00 00 0D 25 DA  // .f.-.B....H...%.
    9FA0: 41 01 20 0D 01 1B 00 03 0A 48 40 01 21 33 47 01  // A. ......H@.!3G.
    9FB0: 01 21 31 47 01 01 21 32 47 01 20 0D 01 04 00 03  // .!1G..!2G. .....
    9FC0: 0A 48 40 01 21 45 48 01 20 0D 01 10 00 03 0A 48  // .H@.!EH. ......H
    9FD0: 40 03 0D 40 00 F0 0F 61 40 01 01 6A 8B 4F 40 2C  // @..@...a@..j.O@,
    9FE0: 0D 01 01 00 2D 0D 42 02 00 3D 25 01 04 45 4E 02  // ....-.B..=%..EN.
    9FF0: 56 08 48 55 00 01 52 17 2C 25 01 01 3D 25 01 04  // V.HU..R.,%..=%..
    A000: 45 AC 02 02 05 01 01 02 00 00 52 29 56 00 46 66  // E.........R)V.Ff
    A010: 08 03 0C 46 0C 00 26 05 01 40 0D 03 00 21 02 40  // ...F..&..@...!.@
    A020: 46 32 02 01 40 01 01 42 01 01 01 01 46 01 01 01  // F2..@..B....F...
    A030: 01 4A 01 01 01 01 4E 01 01 55 00 01 52 4E 5C 05  // .J....N..U..RN\.
    A040: 63 53 FF FF FF 00 00 00 00 30 5C 05 65 53 FF FF  // cS.......0\.eS..
    A050: FF 00 00 00 00 30 5C 05 67 53 FF FF FF 00 00 00  // .....0\.gS......
    A060: 00 30 5C 05 69 53 FF FF FF 00 00 00 00 30 5C 05  // .0\.iS.......0\.
    A070: 6B 53 FF FF FF 00 00 00 00 30 01 05 DC 5D 22 22  // kS.......0...]""
    A080: 02 00 01 05 DD 5D AA F2 01 00 01 05 31 55 11 00  // .....]......1U..
    A090: 01 00 01 05 31 56 11 00 01 00 01 05 31 57 11 00  // ....1V......1W..
    A0A0: 01 00 01 05 31 58 11 00 01 00 01 05 31 59 11 00  // ....1X......1Y..
    A0B0: 01 00 01 05 9A 55 01 00 00 00 01 05 9A 56 01 00  // .....U.......V..
    A0C0: 00 00 01 05 9A 57 01 00 00 00 01 05 9A 58 01 00  // .....W.......X..
    A0D0: 00 00 01 05 9A 59 01 00 00 00 02 25 01 07 52 33  // .....Y.....%..R3
    A0E0: 02 05 01 00 07 00 00 55 00 02 52 4D 2C 25 01 01  // .......U..RM,%..
    A0F0: 3D 25 01 05 45 A0 03 66 16 03 A4 00 06 00 2D 0D  // =%..E..f......-.
    A100: 42 08 00 03 0A 00 42 3E A5 00 00 44 33 04 03 0A  // B.....B>...D3...
    A110: 42 00 03 0C 40 04 00 3E 0D 40 20 22 44 DD 03 3E  // B...@..>.@ "D..>
    A120: 0D 40 21 21 49 27 04 03 0C 40 08 00 66 16 2D 0A  // .@!!I'...@..f.-.
    A130: 42 40 03 24 40 00 00 3E 25 40 FF 44 27 04 3E 25  // B@.$@..>%@.D'.>%
    A140: 40 14 49 1F 04 03 04 40 02 00 4C 05 40 00 01 00  // @.I....@..L.@...
    A150: 00 44 27 04 4A 25 48 00 01 49 33 04 01 A5 7F 60  // .D'.J%H..I3....`
    A160: 01 01 A5 57 61 01 43 33 04 2D 0C 42 01 00 43 E8  // ...Wa.C3.-.B..C.
    A170: 03 2D 0D 00 10 00 33 A5 00 01 43 BD 03 66 16 03  // .-....3...C..f..
    A180: 0C 41 04 00 4C 0D 41 02 00 44 47 04 0D A5 4C 00  // .A..L.A..DG...L.
    A190: 02 01 05 00 00 2C A8 01 00 01 00 53 39 01 00 01  // .....,.....S9...
    A1A0: 05 00 00 2D A8 01 00 01 00 54 39 01 00 01 05 00  // ...-.....T9.....
    A1B0: 00 17 A8 01 00 01 00 55 39 01 00 01 05 00 00 31  // .......U9......1
    A1C0: A8 01 00 01 00 F7 3A 01 00 01 05 00 00 32 A8 01  // ......:......2..
    A1D0: 00 01 00 F8 3A 01 00 01 05 00 00 20 A8 01 00 01  // ....:...... ....
    A1E0: 00 59 39 01 00 01 05 00 00 21 A8 01 00 01 00 5A  // .Y9......!.....Z
    A1F0: 39 01 00 02 00 01 53 39 03 01 41 01 15 05 41 18  // 9.....S9..A...A.
    A200: 01 02 C4 00 41 03 01 41 01 1B 05 41 08 01 02 C9  // ....A..A...A....
    A210: 00 41 52 4B 5B 7A 08 00 00 00 6B 01 D6 02 41 04  // .ARK[z....k...A.
    A220: AC 00 02 01 00 04 66 FF 56 08 47 2D 0D 42 74 00  // ......f.V.G-.Bt.
    A230: 03 21 47 00 09 25 47 F0 42 22 47 63 00 5B 00 63  // .!G..%G.B"Gc.[.c
    A240: 60 56 00 63 20 36 00 63 90 4E 00 63 A0 3E 00 63  // `V.c 6.c.N.c.>.c
    A250: B0 46 00 5A 5A 5B 2D 0D 42 26 00 43 5B 00 2D 0D  // .F.ZZ[-.B&.C[.-.
    A260: 42 1E 00 43 5B 00 2D 0D 42 30 00 43 5B 00 2D 0D  // B..C[.-.B0.C[.-.
    A270: 42 16 00 43 5B 00 2D 0D 42 0C 00 03 21 47 00 09  // B..C[.-.B...!G..
    A280: 25 47 07 2D 0A 42 47 2D 0A 42 47 03 0C 48 00 00  // %G.-.BG-.BG..H..
    A290: 5B 7A AC 00 00 00 80 00 00 01 80 01 00 02 80 02  // [z..............
    A2A0: 00 00 00 01 00 02 00 03 00 04 00 00 DC 00 B8 01  // ................
    A2B0: 94 02 00 00 6B 01 D6 02 41 04 00 00 D8 00 B0 01  // ....k...A.......
    A2C0: 88 02 60 03 00 00 5A 00 B4 00 0E 01 72 00 01 01  // ..`...Z.....r...
    A2D0: 00 00 37 00 00 56 00 40 03 21 40 00 21 0D 40 6B  // ..7..V.@.!@.!.@k
    A2E0: 01 03 02 48 40 01 25 AC 41 01 3D 65 00 02 49 4C  // ...H@.%.A.=e..IL
    A2F0: 00 01 0D BD 41 01 00 54 00 BB 41 0D 25 AE 41 01  // ....A..T..A.%.A.
    A300: 01 05 AD 41 11 00 00 00 07 A5 AC 41 FE 01 05 AF  // ...A.......A....
    A310: 41 11 01 11 01 43 6E 00 01 05 B1 41 00 00 00 01  // A....Cn....A....
    A320: 01 05 B5 41 00 00 00 01 01 05 AF 41 11 01 11 01  // ...A.......A....
    A330: 54 00 AD 41 01 0D BD 41 00 01 3A 00 00 5B 73 00  // T..A...A..:..[s.
    A340: 01 01 00 00 37 00 00 52 14 03 00 41 C0 41 33 1A  // ....7..R...A.A3.
    A350: 41 41 03 8A 40 41 03 00 41 C1 41 33 1A 41 41 03  // AA..@A..A.A3.AA.
    A360: 0A 40 41 3E 05 40 00 00 00 00 49 36 00 03 05 40  // .@A>.@....I6...@
    A370: 70 08 00 0F 0E 25 00 B0 52 14 3D 65 00 00 44 6D  // p....%..R.=e..Dm
    A380: 00 01 02 16 4D 40 01 05 17 4D 00 00 00 00 01 05  // ....M@...M......
    A390: 18 4D 00 00 00 00 01 05 19 4D 00 00 00 00 5C 05  // .M.......M....\.
    A3A0: 14 4D 8F FF 0F FF 31 00 00 00 5B 07 25 14 4D FE  // .M....1...[.%.M.
    A3B0: 5B 00 43 00 01 01 00 00 37 00 00 52 14 3D 65 00  // [.C.....7..R.=e.
    A3C0: 01 44 3A 00 0D 65 01 50 03 54 20 01 50 4A A5 01  // .D:..e.P.T .PJ..
    A3D0: 50 01 49 1B 00 54 20 0F 50 56 00 40 20 25 00 01  // P.I..T .PV.@ %..
    A3E0: 03 0A 48 40 07 E5 E8 39 7F 43 3F 00 0D 25 01 50  // ..H@...9.C?..%.P
    A3F0: 01 3A 00 00 5B 00 CF 00 02 01 00 00 37 00 00 42  // .:..[.......7..B
    A400: 29 00 63 00 1B 00 63 01 1B 00 63 02 AA 00 5A 5A  // ).c...c...c...ZZ
    A410: 5B 66 FF 56 08 40 2D 0D 42 C3 00 03 21 40 00 15  // [f.V.@-.B...!@..
    A420: 25 40 01 2D 0A 42 40 03 0C 48 00 00 3D 65 00 00  // %@.-.B@..H..=e..
    A430: 44 72 00 0D 25 CC 00 01 3A 00 00 01 8D C0 00 00  // Dr..%...:.......
    A440: 02 51 02 01 05 C6 00 00 00 10 00 01 05 C8 00 00  // .Q..............
    A450: 00 50 00 01 0D C3 00 02 00 54 20 CA 00 01 05 C2  // .P.......T .....
    A460: 00 00 01 00 00 43 1A 00 07 25 CC 00 FE 3A 00 00  // .....C...%...:..
    A470: 0D 25 CA 00 01 01 25 C2 00 01 07 A5 C1 00 FE 0D  // .%....%.........
    A480: 25 D5 00 01 0D 65 D5 00 01 4A 65 D5 00 01 44 93  // %....e...Je...D.
    A490: 00 54 08 D5 00 54 00 C6 00 54 00 C8 00 43 1A 00  // .T...T...T...C..
    A4A0: 5C 65 D4 00 FC 02 01 A1 C0 00 00 2B A5 C0 00 01  // \e.........+....
    A4B0: 0D A5 C1 00 01 5B 7A 0C 00 00 00 02 00 2C 00 2D  // .....[z......,.-
    A4C0: 00 2E 00 2F 00 00 BD 01 03 01 04 00 37 00 00 66  // .../........7..f
    A4D0: 08 03 05 46 C0 12 00 00 3D A5 00 02 49 1E 00 02  // ...F....=...I...
    A4E0: 02 00 46 5B 03 05 40 0C 00 00 00 21 21 40 00 66  // ..F[..@....!!@.f
    A4F0: FF 2D 0D 42 81 01 2D 0A 42 40 03 04 40 00 00 03  // .-.B..-.B@..@...
    A500: 04 41 04 00 03 04 00 08 00 01 02 00 00 40 03 88  // .A...........@..
    A510: 40 01 00 03 18 40 01 00 09 8D 40 FF 01 3E 8D 40  // @....@....@..>.@
    A520: 00 00 49 99 00 01 02 00 00 41 03 00 40 01 00 09  // ..I......A..@...
    A530: 05 40 FF 01 00 00 3E 0D 40 00 00 49 82 00 03 05  // .@....>.@..I....
    A540: 46 00 71 02 00 43 BC 00 21 02 40 46 03 00 41 01  // F.q..C..!.@F..A.
    A550: 00 09 05 41 00 1E 00 00 1B 05 41 09 43 B4 00 7C  // ...A......A.C..|
    A560: 02 40 46 7E 05 40 00 00 01 00 03 00 41 01 00 09  // .@F~.@......A...
    A570: 05 41 00 F0 00 00 1B 05 41 0C 75 02 40 41 03 02  // .A......A.u.@A..
    A580: 46 40 3D A5 00 01 49 C8 00 02 02 00 46 5B 3D E5  // F@=...I.....F[=.
    A590: 00 00 49 0B 01 56 00 40 03 29 40 00 21 0D 40 0A  // ..I..V.@.)@.!.@.
    A5A0: 00 03 02 41 00 2D 02 40 41 01 02 00 00 40 03 00  // ...A.-.@A....@..
    A5B0: 41 01 00 09 05 41 00 00 F0 07 1B 05 41 14 02 E2  // A....A......A...
    A5C0: 00 41 3D E5 00 00 49 0B 01 02 05 00 00 46 C3 23  // .A=...I......F.#
    A5D0: 5B 56 00 40 03 39 40 00 55 38 00 66 FF 2D 0D 42  // [V.@.9@.U8.f.-.B
    A5E0: 59 01 3E 0C 40 02 00 47 2C 01 2D 0D 42 08 00 43  // Y.>.@..G,.-.B..C
    A5F0: 1C 01 33 0C 40 04 00 21 0C 40 06 00 2D 0C 40 00  // ..3.@..!.@..-.@.
    A600: 00 03 09 42 00 55 00 00 02 0A 00 40 7C 05 46 40  // ...B.U.....@|.F@
    A610: 42 0F 00 7E 01 40 00 02 02 00 40 5B 7A 64 00 FF  // B..~.@....@[zd..
    A620: FF 07 00 00 00 00 00 C8 00 3F 00 08 00 19 00 40  // .........?.....@
    A630: 06 5F 00 40 00 32 00 80 0C 7E 00 60 00 64 00 00  // ._.@.2...~.`.d..
    A640: 32 7F 00 7F 00 64 00 16 6C 01 00 00 6C 01 00 51  // 2....d..l...l..Q
    A650: 6C 01 00 0F 6E 01 00 00 6E 01 00 4A 6E 01 00 0C  // l...n...n..Jn...
    A660: 7E 01 00 00 7E 01 00 47 7E 01 00 0C 70 01 00 00  // ~...~..G~...p...
    A670: 70 01 00 47 70 01 00 0C 72 01 00 00 72 01 00 47  // p..Gp...r...r..G
    A680: 72 01 00 00 BF 00 02 03 04 00 37 00 00 56 00 46  // r.........7..V.F
    A690: 56 00 00 03 21 00 00 55 20 00 3D 65 00 03 44 2C  // V...!..U .=e..D,
    A6A0: 00 3D 65 00 0B 46 B4 00 02 29 00 00 32 25 00 08  // .=e..F...)..2%..
    A6B0: 0E 25 00 60 52 14 5C 22 28 55 F8 00 02 22 00 00  // .%.`R.\"(U..."..
    A6C0: 03 0D 41 01 00 66 FF 2D 0D 42 BB 00 2D 0A 42 41  // ..A..f.-.B..-.BA
    A6D0: 03 24 00 00 00 3D E2 00 00 48 A0 00 3E 25 00 04  // .$...=...H..>%..
    A6E0: 44 6F 00 03 22 46 00 33 25 46 01 15 25 46 04 0F  // Do.."F.3%F..%F..
    A6F0: 25 46 01 33 39 00 00 3E 25 00 01 44 8C 00 3E 25  // %F.39..>%..D..>%
    A700: 00 02 44 85 00 03 25 46 21 03 65 00 2F 43 90 00  // ..D...%F!.e./C..
    A710: 03 65 00 13 03 79 46 00 33 65 46 01 15 2D 46 03  // .e...yF.3eF..-F.
    A720: 0F 65 46 01 52 14 01 02 01 4D 46 01 52 00 4D 00  // .eF.R....MF.R.M.
    A730: 54 00 05 4D 54 00 FF 4C 3A 00 00 5B 7A 04 00 03  // T..MT..L:..[z...
    A740: 02 01 04 00 CB 00 01 01 00 00 37 00 00 3D 65 00  // ..........7..=e.
    A750: 01 44 61 00 56 00 40 20 25 00 10 03 0A 48 40 07  // .Da.V.@ %....H@.
    A760: 25 8F 4F FD 4A 25 8F 4F 04 49 20 00 52 14 07 25  // %.O.J%.O.I .R..%
    A770: 46 50 FE 4A 65 46 50 01 49 2F 00 03 21 40 00 21  // FP.JeFP.I/..!@.!
    A780: 0D 40 DC 00 03 0A 48 40 07 25 B4 3A FE 56 00 40  // .@....H@.%.:.V.@
    A790: 03 21 40 00 21 0D 40 6B 01 03 0A 48 40 07 25 85  // .!@.!.@k...H@.%.
    A7A0: 41 EF 43 C7 00 56 00 40 20 25 00 10 03 0A 48 40  // A.C..V.@ %....H@
    A7B0: 0D 25 8F 4F 02 4A 25 8F 4F 04 44 71 00 52 14 0D  // .%.O.J%.O.Dq.R..
    A7C0: 25 46 50 01 4A 65 46 50 01 44 80 00 56 00 40 03  // %FP.JeFP.D..V.@.
    A7D0: 21 40 00 21 0D 40 DC 00 03 0A 48 40 0D 25 B4 3A  // !@.!.@....H@.%.:
    A7E0: 01 56 00 40 03 21 40 00 21 0D 40 6B 01 03 0A 48  // .V.@.!@.!.@k...H
    A7F0: 40 0D 25 85 41 10 56 00 40 03 21 40 00 21 0D 40  // @.%.A.V.@.!@.!.@
    A800: 5A 00 03 0A 48 40 0D 25 4C 4D 01 3A 00 00 5B 00  // Z...H@.%LM.:..[.
    A810: 5E 01 01 04 04 08 37 00 00 3D 65 02 01 49 27 01  // ^.....7..=e..I'.
    A820: 4B A5 02 03 49 2A 00 52 25 02 05 00 00 00 00 00  // K...I*.R%.......
    A830: 02 05 01 00 05 02 00 43 2F 00 55 28 02 52 25 03  // .......C/.U(.R%.
    A840: 38 00 C4 00 03 48 00 C9 00 0E 25 02 90 52 14 08  // 8....H....%..R..
    A850: 25 02 07 0D 05 B4 3A 11 11 01 00 5C 25 B3 3A 0B  // %.....:....\%.:.
    A860: 01 03 21 41 02 15 25 41 04 0D 22 B3 3A 41 0D 65  // ..!A..%A..".:A.e
    A870: B6 3A 01 5C 25 DB 3A FD 01 03 02 41 00 1B 05 41  // .:.\%.:....A...A
    A880: 08 01 0A CB 3A 41 01 0A CF 3A 41 15 05 00 18 01  // ....:A...:A.....
    A890: 02 CA 3A 00 01 02 CE 3A 00 4B A5 02 03 49 A0 00  // ..:....:.K...I..
    A8A0: 2B 05 CA 3A 00 00 10 00 2B 05 CE 3A 00 00 50 00  // +..:....+..:..P.
    A8B0: 01 0D A7 3A 80 00 01 0D B1 3A 00 03 01 0D 0C 3B  // ...:.....:.....;
    A8C0: 01 03 01 05 0A 3B 00 00 08 28 01 05 0B 3B 00 00  // .....;...(...;..
    A8D0: 08 00 01 E5 EF 3A 08 01 E5 EE 3A E0 54 00 A9 3A  // .....:....:.T..:
    A8E0: 01 19 AA 3A 00 01 89 AA 3A 00 01 19 AE 3A 00 01  // ...:....:....:..
    A8F0: 89 AE 3A 00 07 0D A5 3A FF F8 66 FF 2D 0D 42 4F  // ..:....:..f.-.BO
    A900: 01 03 0C 40 00 00 3E 0D 40 FF FF 44 0E 01 3D 8C  // ...@..>.@..D..=.
    A910: 01 00 00 44 0E 01 2D 0D 42 03 00 43 F1 00 01 24  // ...D..-.B..C...$
    A920: A5 3A 02 00 01 09 C7 3A 01 07 25 B3 3A FE 07 25  // .:.....:..%.:..%
    A930: DB 3A FE 3A 00 00 5B 0E 25 02 90 52 14 3D 65 02  // .:.:..[.%..R.=e.
    A940: 00 49 3C 01 0D 25 B3 3A 01 43 48 01 3D 65 02 10  // .I<..%.:.CH.=e..
    A950: 44 48 01 01 09 C7 3A 01 3A 00 00 5B 7A 0F 00 01  // DH....:.:..[z...
    A960: 00 01 01 01 03 01 05 02 02 00 08 FF FF 08 42 00  // ..............B.
    A970: 01 01 00 00 37 00 00 52 14 3D 65 00 01 44 21 00  // ....7..R.=e..D!.
    A980: 54 20 4B 50 4A 65 4B 50 01 49 16 00 43 3E 00 5C  // T KPJeKP.I..C>.\
    A990: 4D 1B 50 FE FF 00 01 4A A5 01 50 01 44 3E 00 0D  // M.P....J..P.D>..
    A9A0: 25 4B 50 01 4A 65 4B 50 01 44 36 00 3A 00 00 5B  // %KP.JeKP.D6.:..[
    A9B0: 13 00 01 03 00 00 37 00 00 0E 25 00 A0 52 14 3A  // ......7...%..R.:
    A9C0: 00 00 5B 00 C6 01 01 01 00 18 56 00 40 03 21 40  // ..[.......V.@.!@
    A9D0: 05 21 0D 40 80 00 03 0A 48 40 37 00 00 01 0D 47  // .!.@....H@7....G
    A9E0: 50 0D 00 3D 8D 01 0D 00 46 2C 00 01 19 47 50 01  // P..=....F,...GP.
    A9F0: 01 8D 48 50 40 01 01 0D 49 50 2C 01 03 09 41 00  // ..HP@...IP,...A.
    AA00: 2D 19 41 00 03 8A 41 41 2D 8D 41 01 00 1B 1D 41  // -.A...AA-.A....A
    AA10: 02 01 1A 48 50 41 33 0D 41 01 00 01 0A EA 4F 41  // ...HPA3.A.....OA
    AA20: 54 08 EC 4F 01 99 EC 4F 02 03 19 41 00 33 09 41  // T..O...O...A.3.A
    AA30: 02 56 18 41 03 B1 41 04 33 1A 41 41 01 8A EB 4F  // .V.A..A.3.AA...O
    AA40: 41 03 19 41 00 33 09 41 02 2D 1A 41 41 2D 09 41  // A..A.3.A.-.AA-.A
    AA50: 00 4B 25 04 10 44 98 00 2D 09 41 00 01 0A EB 4F  // .K%..D..-.A....O
    AA60: 41 03 21 41 04 09 25 41 02 1B 25 41 01 01 22 ED  // A.!A..%A..%A..".
    AA70: 4F 41 03 09 41 01 2D 19 41 01 33 0D 41 01 00 01  // OA..A.-.A.3.A...
    AA80: 0A EF 4F 41 54 08 F7 4F 01 99 F7 4F 03 03 19 41  // ..OAT..O...O...A
    AA90: 01 33 09 41 03 56 18 41 03 B9 41 04 33 1A 41 41  // .3.A.V.A..A.3.AA
    AAA0: 01 8A F6 4F 41 03 19 41 01 33 09 41 03 2D 1A 41  // ...OA..A.3.A.-.A
    AAB0: 41 2D 09 41 01 4B 25 04 20 44 FC 00 2D 09 41 01  // A-.A.K%. D..-.A.
    AAC0: 01 0A F6 4F 41 03 21 41 04 09 25 41 04 1B 25 41  // ...OA.!A..%A..%A
    AAD0: 02 01 22 F8 4F 41 3D 65 05 00 44 21 01 07 65 01  // ..".OA=e..D!..e.
    AAE0: 50 EF 43 26 01 0D 65 01 50 10 03 00 46 EB 4F 02  // P.C&..e.P...F.O.
    AAF0: 00 02 F6 4F 56 00 40 03 21 40 05 21 0D 40 01 00  // ...OV.@.!@.!.@..
    AB00: 03 0A 48 40 56 00 40 03 09 40 02 3D 65 05 00 49  // ..H@V.@..@.=e..I
    AB10: 53 01 33 0D 40 02 00 15 05 40 10 56 00 41 3D 8D  // S.3.@....@.V.A=.
    AB20: 02 0D 00 48 6B 01 03 0D 41 0D 00 33 19 41 02 0F  // ...Hk...A..3.A..
    AB30: 02 40 41 0F E5 40 80 01 02 E8 39 40 56 00 40 03  // .@A..@....9@V.@.
    AB40: 21 40 05 21 0D 40 6B 01 03 0A 48 40 01 09 C3 41  // !@.!.@k...H@...A
    AB50: 00 01 89 C3 41 01 01 09 C4 41 00 01 89 C4 41 01  // ....A....A....A.
    AB60: 01 02 C0 41 46 01 01 C1 41 02 54 00 BE 41 01 31  // ...AF...A.T..A.1
    AB70: BE 41 04 01 B1 BE 41 04 54 00 BF 41 01 39 BF 41  // .A....A.T..A.9.A
    AB80: 04 01 B9 BF 41 04 3A 00 00 5B 0A 00 02 03 08 00  // ....A.:..[......
    AB90: 37 00 00 5B CC 01 01 01 00 00 37 00 00 56 00 41  // 7..[......7..V.A
    ABA0: 03 39 41 01 09 25 41 0F 56 00 40 03 62 40 41 01  // .9A..%A.V.@.b@A.
    ABB0: 02 58 53 40 03 0A 46 42 66 FF 2D 0D 42 B8 01 15  // .XS@..FBf.-.B...
    ABC0: 25 41 02 2D 0A 42 41 03 0C 48 00 00 07 05 90 5D  // %A.-.BA..H.....]
    ABD0: 00 00 01 00 03 0C 48 02 00 03 05 40 C0 5D 00 00  // ......H....@.]..
    ABE0: 56 00 41 03 21 41 00 27 02 40 41 15 05 40 10 03  // V.A.!A.'.@A..@..
    ABF0: 25 40 02 01 02 62 53 40 01 05 63 53 40 00 00 30  // %@...bS@..cS@..0
    AC00: 03 0A 42 46 56 08 48 0D 25 5A 53 01 54 00 59 53  // ..BFV.H.%ZS.T.YS
    AC10: 56 00 41 03 71 41 01 0F E5 41 80 01 02 72 53 41  // V.A.qA...A...rSA
    AC20: 03 69 41 00 03 A5 41 01 01 02 72 53 41 4B 25 01  // .iA...A...rSAK%.
    AC30: 01 44 CD 00 03 71 41 00 03 A5 41 02 01 02 72 53  // .D...qA...A...rS
    AC40: 41 03 79 41 00 03 A5 41 03 01 02 72 53 41 03 05  // A.yA...A...rSA..
    AC50: 40 00 31 01 00 2D A9 40 01 01 02 6E 53 40 43 00  // @.1..-.@...nS@C.
    AC60: 01 03 71 41 01 0F 65 41 01 03 A5 41 02 01 02 72  // ..qA..eA...A...r
    AC70: 53 41 03 05 40 00 11 01 00 01 02 6E 53 40 03 05  // SA..@......nS@..
    AC80: 40 01 30 00 00 03 A9 40 01 01 02 6F 53 40 5C A5  // @.0....@...oS@\.
    AC90: 58 53 CF 10 0D 25 58 53 01 02 65 00 02 56 00 40  // XS...%XS..e..V.@
    ACA0: 03 29 40 01 2D 25 40 04 21 05 40 C8 00 00 00 56  // .)@.-%@.!.@....V
    ACB0: 00 41 03 21 41 00 27 02 40 41 03 0A 41 40 33 0D  // .A.!A.'.@A..A@3.
    ACC0: 41 01 00 3E 0D 41 00 00 44 A4 01 51 64 4A 25 5B  // A..>.A..D..QdJ%[
    ACD0: 53 04 44 2A 01 4A 65 5B 53 31 49 A4 01 02 65 00  // S.D*.Je[S1I...e.
    ACE0: 01 4B 25 01 01 49 A4 01 01 05 72 53 01 00 03 80  // .K%..I....rS....
    ACF0: 3D 65 01 01 49 6B 01 02 A8 00 72 53 43 A4 01 56  // =e..Ik....rSC..V
    AD00: 00 41 03 19 41 00 56 00 40 03 0A 40 41 3B 02 40  // .A..A.V.@..@A;.@
    AD10: 03 28 40 72 53 03 68 40 72 53 03 A8 40 72 53 03  // .(@rS.h@rS..@rS.
    AD20: E8 40 72 53 04 02 00 40 2D A5 41 04 2D 0D 41 04  // .@rS...@-.A.-.A.
    AD30: 00 3E A9 41 01 45 72 01 0D 25 5A 53 02 01 25 58  // .>.A.Er..%ZS..%X
    AD40: 53 02 51 01 54 00 58 53 5B 7A 14 00 00 00 00 00  // S.Q.T.XS[z......
    AD50: 04 00 02 00 08 00 04 00 0C 00 06 00 10 00 08 00  // ................
    AD60: 46 00 02 02 00 04 37 00 00 55 30 00 32 25 00 01  // F.....7..U0.2%..
    AD70: 20 25 00 08 56 08 48 03 22 48 40 0D A5 D5 53 01  //  %..V.H."H@...S.
    AD80: 02 A0 00 D4 53 08 A5 00 03 4A 25 D4 53 02 44 3C  // ....S....J%.S.D<
    AD90: 00 5C 0D D5 53 FF FE 01 00 43 42 00 0D 0D D5 53  // .\..S....CB....S
    ADA0: 01 01 3A 00 00 5B E7 00 01 08 08 00 03 01 00 00  // ..:..[..........
    ADB0: 02 05 00 01 00 01 00 52 29 20 05 00 64 00 00 00  // .......R) ..d...
    ADC0: 03 02 46 40 02 02 00 00 03 01 00 00 55 38 00 03  // ..F@........U8..
    ADD0: 05 40 00 32 00 00 3D 05 00 00 00 00 00 44 64 00  // .@.2..=......Dd.
    ADE0: 03 02 40 46 27 01 40 00 3E 05 40 9C 18 00 00 47  // ..@F'.@.>.@....G
    ADF0: 53 00 03 05 40 00 32 00 00 3E 05 40 C8 00 00 00  // S...@.2..>.@....
    AE00: 46 64 00 03 05 40 C8 00 00 00 66 FF 2D 0D 42 C7  // Fd...@....f.-.B.
    AE10: 00 3E 0C 40 02 00 47 7B 00 2D 0D 42 08 00 43 6B  // .>.@..G{.-.B..Ck
    AE20: 00 33 0C 40 00 00 03 0C 01 06 00 3E 0D 01 19 00  // .3.@.......>....
    AE30: 49 9A 00 27 0D 40 32 00 21 0D 40 02 00 43 9F 00  // I..'.@2.!.@..C..
    AE40: 27 0C 40 06 00 2D 0C 40 04 00 02 E2 00 40 33 0C  // '.@..-.@.....@3.
    AE50: 40 04 00 21 0C 40 06 00 2D 0C 40 00 00 27 02 46  // @..!.@..-.@..'.F
    AE60: 40 02 0A 00 40 02 B2 00 40 5B 7A 20 00 C8 00 40  // @...@...@[z ...@
    AE70: 06 08 00 19 00 40 06 80 0C 40 00 32 00 80 0C 38  // .....@...@.2...8
    AE80: 18 60 00 64 00 00 32 00 32 7F 00 64 00 00 07 00  // .`.d..2.2..d....
    AE90: 02 01 00 00 5B 00 14 03 01 05 00 00 37 00 00 0E  // ....[.......7...
    AEA0: 25 00 60 52 14 08 25 00 0F 42 29 00 63 0F 53 00  // %.`R..%..B).c.S.
    AEB0: 63 11 09 02 63 12 66 02 63 01 CC 02 63 00 F5 02  // c...c.f.c...c...
    AEC0: 63 08 D8 01 63 09 B9 01 63 0A C0 01 63 13 C8 01  // c...c...c...c...
    AED0: 63 14 D0 01 63 0B E0 01 63 0C BC 02 63 0D E8 01  // c...c...c...c...
    AEE0: 63 10 01 02 5A 5A 43 B5 01 54 00 9A 55 01 0D 2B  // c...ZZC..T..U..+
    AEF0: 55 1F 00 3D A5 00 00 44 72 00 3D A5 00 02 44 A2  // U..=...Dr.=...D.
    AF00: 01 3D A5 00 05 49 A2 01 54 00 C9 55 3D 25 02 00  // .=...I..T..U=%..
    AF10: 49 81 00 02 25 02 02 32 25 02 01 01 E1 C9 55 02  // I...%..2%.....U.
    AF20: 4A 25 CC 55 01 49 B5 01 7B 05 01 00 80 00 00 7E  // J%.U.I..{......~
    AF30: 05 40 8C 0A 00 00 56 00 46 03 29 46 02 27 02 40  // .@....V.F.)F.'.@
    AF40: 46 07 65 D0 55 FE 01 05 D1 55 00 80 00 00 01 02  // F.e.U....U......
    AF50: D2 55 40 0D E5 D3 55 10 0D 65 28 55 04 51 01 07  // .U@...U..e(U.Q..
    AF60: 65 28 55 FB 51 01 03 21 40 02 15 25 40 05 01 E2  // e(U.Q..!@..%@...
    AF70: CA 55 40 54 20 CE 55 02 A0 02 28 55 03 0A 46 48  // .U@T .U...(U..FH
    AF80: 08 A5 02 07 56 00 40 03 31 40 02 21 0D 40 80 00  // ....V.@.1@.!.@..
    AF90: 03 8A 46 40 03 0A 48 40 03 88 40 EA 4F 03 08 40  // ..F@..H@..@.O..@
    AFA0: EF 4F 2D 05 40 01 00 01 00 03 98 41 EB 4F 03 18  // .O-.@......A.O..
    AFB0: 41 F6 4F 03 0A 48 46 01 02 0C 56 40 01 02 0D 56  // A.O..HF...V@...V
    AFC0: 41 03 1A 48 46 03 00 40 EB 4F 33 1A 40 40 33 08  // A..HF..@.O3.@@3.
    AFD0: 40 BE 41 33 08 40 BE 41 03 00 41 F6 4F 33 1A 41  // @.A3.@.A..A.O3.A
    AFE0: 41 33 08 41 BF 41 33 08 41 BF 41 03 0A 48 46 01  // A3.A.A3.A.A..HF.
    AFF0: 0A 0F 56 41 01 8A 0F 56 40 03 1A 48 46 03 00 40  // ..VA...V@..HF..@
    B000: EC 4F 33 8A 40 40 03 00 41 F7 4F 33 8A 41 41 4A  // .O3.@@..A.O3.AAJ
    B010: 25 ED 4F 01 44 85 01 0F E5 40 80 4A 25 F8 4F 01  // %.O.D....@.J%.O.
    B020: 44 91 01 0F E5 41 80 03 0A 48 46 01 1A 0E 56 41  // D....A...HF...VA
    B030: 01 9A 0E 56 40 43 B5 01 07 E5 28 55 2F 0D 65 28  // ...V@C....(U/.e(
    B040: 55 04 51 01 07 65 28 55 FB 51 01 3A 00 00 5B 54  // U.Q..e(U.Q.:..[T
    B050: 20 D8 55 43 B5 01 01 25 D8 55 01 43 B5 01 01 25  //  .UC...%.U.C...%
    B060: D8 55 02 43 B5 01 01 25 D8 55 03 43 B5 01 07 25  // .U.C...%.U.C...%
    B070: C8 55 EF 43 B5 01 0D 25 C8 55 10 43 B5 01 0D 65  // .U.C...%.U.C...e
    B080: D0 55 01 51 0A 07 25 CD 55 FE 51 0A 01 0D CC 55  // .U.Q..%.U.Q....U
    B090: 01 02 51 C8 43 B5 01 0D 25 DE 55 10 43 B5 01 01  // ..Q.C...%.U.C...
    B0A0: 69 6F 55 02 3D A5 00 03 49 25 02 4A 25 35 55 10  // ioU.=...I%.J%5U.
    B0B0: 49 25 02 01 A5 6F 55 02 43 2A 02 01 B1 6F 55 00  // I%...oU.C*...oU.
    B0C0: 3D 25 02 00 44 3F 02 32 25 02 01 14 25 02 04 5C  // =%..D?.2%...%..\
    B0D0: E1 6F 55 8F 02 3D A5 00 05 44 4D 02 3D A5 00 00  // .oU..=...DM.=...
    B0E0: 49 5E 02 02 A5 00 00 03 39 40 00 33 25 40 01 01  // I^......9@.3%@..
    B0F0: 22 CB 55 40 02 E0 02 70 55 43 B5 01 02 E0 02 70  // ".U@...pUC.....p
    B100: 55 4B E5 02 01 44 B5 01 02 B0 00 6F 55 3D A5 00  // UK...D.....oU=..
    B110: 00 44 8C 02 3D A5 00 05 44 8C 02 02 E5 00 04 43  // .D..=...D......C
    B120: 95 02 02 E0 00 CB 55 2C E5 00 01 3D A5 00 02 44  // ......U,...=...D
    B130: A3 02 3D A5 00 03 49 AC 02 54 00 70 55 50 02 43  // ..=...I..T.pUP.C
    B140: B5 01 02 A5 00 00 03 31 43 00 4A 62 6F 55 44 44  // .......1C.JboUDD
    B150: B5 01 54 08 CC 55 51 C8 0D 25 CD 55 01 51 32 43  // ..T..UQ..%.U.Q2C
    B160: B5 01 0D 25 70 55 01 3D A5 00 00 44 E1 02 01 0D  // ...%pU.=...D....
    B170: A1 55 0F 01 43 B5 01 03 39 43 00 03 02 40 44 33  // .U..C...9C...@D3
    B180: 25 40 01 01 0A A1 55 40 43 B5 01 54 00 A1 55 07  // %@....U@C..T..U.
    B190: 25 70 55 FE 07 0D 6F 55 FF 80 07 25 35 55 EF 54  // %pU...oU...%5U.T
    B1A0: 20 C8 55 54 20 D8 55 43 B5 01 0C 01 01 06 04 00  //  .UT .UC........
    B1B0: 37 00 00 42 29 00 63 07 EA 00 63 01 25 00 63 00  // 7..B).c...c.%.c.
    B1C0: C0 00 63 0B ED 00 63 04 F2 00 5A 5A 43 05 01 02  // ..c...c...ZZC...
    B1D0: 65 00 10 52 4D 3D 65 00 00 44 E6 00 02 65 00 11  // e..RM=e..D...e..
    B1E0: 52 04 4B E5 02 01 49 E6 00 3D A5 00 00 49 57 00  // R.K...I..=...IW.
    B1F0: 03 01 00 00 02 65 00 0F 55 38 00 52 4D 02 02 00  // .....e..U8.RM...
    B200: 00 02 65 00 0A 55 08 02 52 4D 3D A5 00 00 49 70  // ..e..U..RM=...Ip
    B210: 00 02 65 00 0B 52 4D 43 79 00 02 65 00 0E 52 4D  // ..e..RMCy..e..RM
    B220: 43 AD 00 20 05 01 64 00 00 00 02 05 01 14 1E 00  // C.. ..d.........
    B230: 02 2C 21 01 00 03 01 00 00 02 02 00 40 52 0C 26  // .,!.........@R.&
    B240: 05 00 64 00 00 00 02 02 01 40 02 02 00 00 02 65  // ..d......@.....e
    B250: 00 01 55 08 02 52 4D 51 05 02 65 00 01 52 04 51  // ..U..RMQ..e..R.Q
    B260: 0A 02 65 00 09 52 4D 43 E6 00 02 65 00 12 52 04  // ..e..RMC...e..R.
    B270: 4B E5 02 01 44 E6 00 02 65 00 08 52 4D 02 65 00  // K...D...e..RM.e.
    B280: 00 52 04 3D A5 00 00 49 E6 00 02 65 00 00 52 4D  // .R.=...I...e..RM
    B290: 3A 00 00 5B 43 E6 00 52 4D 43 E6 00 66 06 02 29  // :..[C..RMC..f..)
    B2A0: 00 00 02 68 00 4E 00 02 8C 00 20 00 52 33 5B 02  // ...h.N.... .R3[.
    B2B0: 29 00 00 52 33 5B F6 0F 02 02 08 00 37 00 00 4A  // )..R3[......7..J
    B2C0: 25 48 00 01 44 12 00 5B 66 FF 2D 0D 42 A1 0F 56  // %H..D..[f.-.B..V
    B2D0: 00 40 03 21 40 00 15 25 40 01 2D 0A 42 40 03 0C  // .@.!@..%@.-.B@..
    B2E0: 48 00 00 3D 65 00 10 49 76 00 02 65 00 01 3D 25  // H..=e..Iv..e..=%
    B2F0: 00 03 45 9A 0F 4A A5 F7 5D 01 44 9A 0F 02 65 00  // ..E..J..].D...e.
    B300: 00 4A A5 15 5E 02 49 9A 0F 0D 25 16 5E 01 07 05  // .J..^.I...%.^...
    B310: 15 5E FF FF FB FF 3D E5 00 04 45 6F 00 4A A5 15  // .^....=...Eo.J..
    B320: 5E 01 44 9A 0F 02 65 00 01 43 9A 0F 3D 25 00 03  // ^.D...e..C..=%..
    B330: 48 87 00 03 05 00 01 01 01 01 43 C7 00 4A A5 F7  // H.........C..J..
    B340: 5D 01 44 7D 00 4A A5 15 5E 02 49 9A 0F 0D 25 16  // ].D}.J..^.I...%.
    B350: 5E 01 07 05 15 5E FF FF FB FF 03 05 00 01 00 00  // ^....^..........
    B360: 00 3D E5 00 01 44 C7 00 03 05 00 01 01 00 00 3D  // .=...D.........=
    B370: E5 00 02 44 C7 00 03 05 00 01 01 01 01 42 29 00  // ...D.........B).
    B380: 63 07 F1 00 63 0A 51 06 63 01 5E 07 63 00 EB 08  // c...c.Q.c.^.c...
    B390: 63 09 94 0A 63 08 04 0C 63 0B 51 0E 63 0E 6D 0D  // c...c...c.Q.c.m.
    B3A0: 63 0F 59 01 5A 5A 5B 01 05 FD 5D 00 00 00 00 01  // c.Y.ZZ[...].....
    B3B0: 05 EE 5D 00 40 00 00 5C 05 F0 5D FF FF 0F FE 00  // ..].@..\..].....
    B3C0: 00 D0 00 56 00 40 3D 25 00 03 45 56 01 0D A5 00  // ...V.@=%..EV....
    B3D0: 5E 20 01 05 F4 5D 5A 00 00 00 01 05 F5 5D 05 00  // ^ ...]Z......]..
    B3E0: 00 00 03 05 40 EB 10 00 00 01 02 F4 5D 40 01 05  // ....@.......]@..
    B3F0: F5 5D 07 00 00 00 2D 05 40 00 01 00 00 3E 05 40  // .]....-.@....>.@
    B400: EB 13 00 00 47 33 01 07 A5 00 5E DF 43 9A 0F 4A  // ....G3....^.C..J
    B410: A5 F7 5D 01 49 9A 0F 4A 25 00 5E 01 49 8D 01 3C  // ..].I..J%.^.I..<
    B420: 25 F7 5D 00 49 8D 01 3C 71 F7 5D 00 49 8D 01 08  // %.].I..<q.].I...
    B430: E5 00 01 03 00 40 F1 5D 09 25 40 01 3E 39 40 00  // .....@.].%@.>9@.
    B440: 44 9A 0F 54 20 F7 5D 07 4D F1 5D DF FE 4A 65 F1  // D..T .].M.]..Je.
    B450: 5D 40 49 97 01 0D 05 03 5E 01 01 01 01 0D 25 00  // ]@I.....^.....%.
    B460: 5E 01 0D A5 00 5E 20 0D 25 00 5E 01 0D 05 03 5E  // ^....^ .%.^....^
    B470: 01 01 01 01 03 39 40 00 09 25 40 01 5C 22 F1 5D  // .....9@..%@.\".]
    B480: FE 40 5C 65 00 5E C1 02 0D 25 02 5E 08 3D 65 00  // .@\e.^...%.^.=e.
    B490: 07 49 E6 01 07 E5 00 5E 5F 43 EB 01 0D E5 00 5E  // .I.....^_C.....^
    B4A0: A0 5C 05 06 5E BB BB FF FF 33 33 00 00 5C 05 03  // .\..^....33..\..
    B4B0: 5E F7 F7 F7 F7 02 02 02 02 66 1E 2D 0D 42 0C 03  // ^........f.-.B..
    B4C0: 03 21 43 00 03 A2 46 44 4C A4 46 00 00 44 3A 02  // .!C...FDL.F..D:.
    B4D0: 56 00 40 2D 0D 42 01 00 03 21 40 00 2D 0A 42 40  // V.@-.B...!@.-.B@
    B4E0: 03 24 40 00 00 03 62 40 40 03 8A 40 40 43 59 02  // .$@...b@@..@@CY.
    B4F0: 66 07 2D 0C 42 0A 00 56 00 40 20 25 00 0C 2D 0A  // f.-.B..V.@ %..-.
    B500: 42 40 03 24 40 09 00 03 62 40 40 03 8A 40 40 5C  // B@.$@...b@@..@@\
    B510: 02 04 5E F8 F8 F8 F8 40 03 21 43 00 03 A2 46 44  // ..^....@.!C...FD
    B520: 3D A5 00 00 44 FD 02 03 05 40 04 00 00 00 66 1E  // =...D....@....f.
    B530: 2D 0D 42 C4 00 3D A5 00 02 44 AC 02 2D 0D 42 0C  // -.B..=...D..-.B.
    B540: 00 3D 05 01 30 75 00 00 47 AC 02 3D 05 01 40 9C  // .=..0u..G..=..@.
    B550: 00 00 46 A7 02 2D 0D 42 28 02 43 AC 02 2D 0D 42  // ..F..-.B(.C..-.B
    B560: 0C 00 4C A4 46 05 00 44 CF 02 03 04 40 00 00 3E  // ..L.F..D....@..>
    B570: 05 40 00 00 00 00 44 CF 02 03 24 40 0A 00 09 25  // .@....D...$@...%
    B580: 40 1C 43 BE 03 66 07 2D 0C 42 04 00 03 04 41 00  // @.C..f.-.B....A.
    B590: 00 3E 05 41 00 00 00 00 44 BE 03 4C A4 46 06 00  // .>.A....D..L.F..
    B5A0: 49 F5 02 2D 0D 42 0C 00 43 D6 02 03 24 40 07 00  // I..-.B..C...$@..
    B5B0: 43 BE 03 03 05 40 05 00 00 00 66 1E 2D 0D 42 C0  // C....@....f.-.B.
    B5C0: 02 03 0C 46 02 00 4C A4 46 00 00 49 5F 03 66 1E  // ...F..L.F..I_.f.
    B5D0: 2D 0D 42 E8 00 3D 05 01 48 3F 00 00 47 52 03 66  // -.B..=..H?..GR.f
    B5E0: 1E 2D 0D 42 50 02 3D 05 01 78 69 00 00 47 52 03  // .-.BP.=..xi..GR.
    B5F0: 66 1E 2D 0D 42 88 02 3D 05 01 F0 D2 00 00 47 52  // f.-.B..=......GR
    B600: 03 66 1E 2D 0D 42 20 01 03 0C 46 02 00 4C A4 46  // .f.-.B ...F..L.F
    B610: 00 00 44 8E 03 2D 0D 42 06 00 56 20 41 3D A4 00  // ..D..-.B..V A=..
    B620: 00 00 44 82 03 2D 25 41 01 3E 25 41 0A 44 8E 03  // ..D..-%A.>%A.D..
    B630: 2D 0D 42 05 00 43 67 03 03 24 40 04 00 09 25 40  // -.B..Cg..$@...%@
    B640: 1C 43 BE 03 66 07 2D 0C 42 08 00 03 04 41 00 00  // .C..f.-.B....A..
    B650: 3E 05 41 00 00 00 00 44 BE 03 4C A4 46 04 00 49  // >.A....D..L.F..I
    B660: B4 03 2D 0D 42 44 00 43 95 03 2D 0D 42 08 00 03  // ..-.BD.C..-.B...
    B670: 24 40 05 00 15 05 40 1A 5C 02 12 5E FF FF FF E3  // $@....@.\..^....
    B680: 40 07 65 00 5E FE 3D A5 00 00 49 76 04 5C 05 0B  // @.e.^.=...Iv.\..
    B690: 5E FF FF 8F FF 00 00 10 00 0D 05 0C 5E 01 01 00  // ^...........^...
    B6A0: 00 5C 05 0B 5E 0F 00 FF FF 40 17 00 00 0D 05 0E  // .\..^....@......
    B6B0: 5E 00 00 00 01 01 05 07 5E 01 00 00 80 01 05 0A  // ^.......^.......
    B6C0: 5E 00 00 00 00 01 05 09 5E 87 39 01 00 01 05 08  // ^.......^.9.....
    B6D0: 5E 48 E9 00 00 01 05 0D 5E 00 00 00 00 5C 05 0B  // ^H......^....\..
    B6E0: 5E FF FF F8 FF 00 00 00 00 5C 05 0C 5E 8F FF FF  // ^........\..^...
    B6F0: FF 20 00 00 00 0D 05 0E 5E 00 00 00 10 07 05 0C  // . ......^.......
    B700: 5E FB FF FF FF 01 05 0F 5E 3E 00 48 B0 01 05 10  // ^.......^>.H....
    B710: 5E 3E 00 18 26 01 05 11 5E 3E 00 80 3F 5C 05 12  // ^>..&...^>..?\..
    B720: 5E 00 00 00 1C 3E 00 44 00 43 0A 05 5C 05 0B 5E  // ^....>.D.C..\..^
    B730: FF FF 8F FF 00 00 00 00 0D 05 0C 5E 01 01 00 00  // ...........^....
    B740: 5C 05 0B 5E 0F 00 FF FF 00 0B 00 00 0D 05 0E 5E  // \..^...........^
    B750: 00 00 00 01 01 05 07 5E 03 00 AA 22 54 00 0A 5E  // .......^..."T..^
    B760: 01 05 09 5E C1 0A 00 00 01 05 08 5E 00 10 00 00  // ...^.......^....
    B770: 01 05 0D 5E 00 00 00 00 5C 05 0B 5E FF FF F8 FF  // ...^....\..^....
    B780: 00 00 04 00 07 05 0C 5E 8F FF FF FF 0D 05 0E 5E  // .......^.......^
    B790: 00 00 00 10 0D 05 0C 5E 04 00 00 00 01 05 0F 5E  // .......^.......^
    B7A0: 3E 00 08 B0 01 05 10 5E 3E 00 1C 12 01 05 11 5E  // >......^>......^
    B7B0: 3E 00 00 3E 5C 05 12 5E 00 00 00 1C 3E 00 44 00  // >..>\..^....>.D.
    B7C0: 0D A5 06 5E 08 0D 25 F3 5D 01 0D 65 F1 5D 20 4A  // ...^..%.]..e.] J
    B7D0: 65 F1 5D 40 49 19 05 0D A5 F1 5D 01 07 25 00 5E  // e.]@I.....]..%.^
    B7E0: FE 07 05 03 5E FE FE FE FE 4A E5 00 5E 10 44 33  // ....^....J..^.D3
    B7F0: 05 66 07 2D 0C 42 0C 00 03 04 40 00 00 3E 05 40  // .f.-.B....@..>.@
    B800: FF FF FF FF 44 65 05 01 04 F4 5D 00 00 01 04 F5  // ....De....].....
    B810: 5D 04 00 2D 0D 42 08 00 43 42 05 01 05 F4 5D 38  // ]..-.B..CB....]8
    B820: 20 00 00 01 05 F5 5D 0C 00 00 00 56 00 01 4A 05  //  .....]....V..J.
    B830: 03 5E 20 20 20 20 44 9E 05 51 02 2D 05 01 01 00  // .^    D..Q.-....
    B840: 00 00 3E 05 01 A0 86 01 00 49 78 05 01 25 F7 5D  // ..>......Ix..%.]
    B850: 03 43 9A 0F 03 00 40 04 5E 09 05 40 07 00 00 00  // .C....@.^..@....
    B860: 21 05 40 03 00 00 00 03 05 41 21 20 00 00 2D 02  // !.@......A! ..-.
    B870: 41 40 01 02 F4 5D 41 03 00 41 F5 5D 01 05 F4 5D  // A@...]A..A.]...]
    B880: 84 00 00 00 01 02 F5 5D 41 03 05 41 22 20 00 00  // .......]A..A" ..
    B890: 2D 02 41 40 01 02 F4 5D 41 03 00 41 F5 5D 01 05  // -.A@...]A..A.]..
    B8A0: F4 5D 85 00 00 00 01 02 F5 5D 41 03 00 40 12 5E  // .].......]A..@.^
    B8B0: 09 05 40 00 00 00 1C 1B 05 40 16 01 05 F4 5D 22  // ..@......@....]"
    B8C0: 00 00 00 03 00 41 F5 5D 09 25 41 0F 0F 22 41 40  // .....A.].%A.."A@
    B8D0: 0F 25 41 80 01 05 F4 5D 22 00 00 00 01 02 F5 5D  // .%A....]"......]
    B8E0: 41 56 00 41 3D A5 00 00 49 43 06 5C A5 0B 5E F8  // AV.A=...IC.\..^.
    B8F0: 00 07 65 00 5E FE 43 9A 0F 5C A5 0B 5E F8 01 0D  // ..e.^.C..\..^...
    B900: 65 00 5E 01 43 9A 0F 03 0A 46 48 66 07 2D 0C 42  // e.^.C....FHf.-.B
    B910: 0A 00 56 00 40 20 25 00 0C 2D 0A 42 40 20 25 00  // ..V.@ %..-.B@ %.
    B920: 02 03 0A 48 40 01 04 2E 5D 00 00 07 E5 2D 5D FC  // ...H@...]....-].
    B930: 03 0A 48 46 66 1E 2D 0D 42 04 03 03 21 43 00 03  // ..HFf.-.B...!C..
    B940: A2 46 44 4C A4 46 00 00 44 E7 06 56 00 40 56 00  // .FDL.F..D..V.@V.
    B950: 41 2D 0D 42 01 00 03 21 40 00 2D 0A 42 40 3D 25  // A-.B...!@.-.B@=%
    B960: 00 03 45 B4 06 0D A5 00 5E 20 03 24 41 00 00 03  // ..E.....^ .$A...
    B970: 05 40 EB 10 00 00 01 02 F4 5D 40 01 02 F5 5D 41  // .@.......]@...]A
    B980: 2D 05 40 00 01 00 00 3E 05 40 EB 13 00 00 47 C0  // -.@....>.@....G.
    B990: 06 3D 25 00 03 45 E7 06 07 A5 00 5E DF 3D A5 00  // .=%..E.....^.=..
    B9A0: 00 49 22 07 66 FF 2D 0D 42 AE 0F 03 04 40 04 00  // .I".f.-.B....@..
    B9B0: 3D 04 01 00 00 44 1B 07 2D 0D 42 08 00 03 04 40  // =....D..-.B....@
    B9C0: 00 00 3E 05 40 00 00 00 00 49 F5 06 03 04 40 04  // ..>.@....I....@.
    B9D0: 00 5C 9A 10 5E 03 00 40 03 05 40 01 01 01 01 4A  // .\..^..@..@....J
    B9E0: A5 F7 5D 01 44 40 07 4A A5 06 5E 01 49 40 07 09  // ..].D@.J..^.I@..
    B9F0: 05 40 FF FF FE FE 0D 02 03 5E 40 51 05 03 02 40  // .@.......^@Q...@
    BA00: 00 69 05 40 FF FF FF FF 07 02 03 5E 40 51 C8 51  // .i.@.......^@Q.Q
    BA10: C8 43 9A 0F 4A 25 FC 5D 01 49 9A 0F 3C 25 F7 5D  // .C..J%.].I..<%.]
    BA20: 00 49 9A 0F 4C 25 00 01 44 7D 07 0D 05 06 5E 04  // .I..L%..D}....^.
    BA30: 00 00 00 4C 65 00 01 44 8C 07 0D 05 06 5E 40 00  // ...Le..D.....^@.
    BA40: 00 00 4C A5 00 01 44 9B 07 0D 05 06 5E 00 04 00  // ..L...D.....^...
    BA50: 00 4C E5 00 01 44 AA 07 0D 05 06 5E 00 40 00 00  // .L...D.....^.@..
    BA60: 03 02 40 00 15 05 40 04 0D 02 03 5E 40 56 00 01  // ..@...@....^@V..
    BA70: 4A 25 FC 5D 01 49 9A 0F 03 02 40 00 15 05 40 05  // J%.].I....@...@.
    BA80: 03 00 41 03 5E 09 02 41 40 09 05 40 20 20 20 20  // ..A.^..A@..@    
    BA90: 3E 02 41 40 44 FC 07 51 02 2D 05 01 01 00 00 00  // >.A@D..Q.-......
    BAA0: 3E 05 01 A0 86 01 00 49 BA 07 01 25 F7 5D 04 43  // >......I...%.].C
    BAB0: 9A 0F 03 02 40 00 15 05 40 04 69 05 40 FF FF FF  // ....@...@.i.@...
    BAC0: FF 07 02 03 5E 40 56 00 01 4A 25 FC 5D 01 49 9A  // ....^@V..J%.].I.
    BAD0: 0F 03 02 40 00 15 05 40 05 03 00 41 03 5E 09 02  // ...@...@...A.^..
    BAE0: 41 40 3E 05 41 00 00 00 00 44 51 08 51 02 2D 05  // A@>.A....DQ.Q.-.
    BAF0: 01 01 00 00 00 3E 05 01 A0 86 01 00 49 13 08 01  // .....>......I...
    BB00: 25 F7 5D 05 43 9A 0F 56 00 01 4A 25 FC 5D 01 49  // %.].C..V..J%.].I
    BB10: 9A 0F 4A 25 0C 5E 80 49 7F 08 51 02 2D 05 01 01  // ..J%.^.I..Q.-...
    BB20: 00 00 00 3E 05 01 A0 86 01 00 49 54 08 01 25 F7  // ...>......IT..%.
    BB30: 5D 06 43 9A 0F 03 0A 41 48 56 00 40 03 21 40 00  // ].C....AHV.@.!@.
    BB40: 03 0A 48 40 0D 25 60 01 01 51 0A 03 0A 48 41 0D  // ..H@.%`..Q...HA.
    BB50: 25 E8 5D 03 4A 25 E8 5D 04 44 9E 08 0D 65 F1 5D  // %.].J%.].D...e.]
    BB60: 12 4A 65 F1 5D 04 44 AB 08 4C 25 00 01 44 BF 08  // .Je.].D..L%..D..
    BB70: 0D 65 F0 5D 10 4C 65 00 01 44 CB 08 0D 65 F0 5D  // .e.].Le..D...e.]
    BB80: 20 4C A5 00 01 44 D7 08 0D 65 F0 5D 40 4C E5 00  //  L...D...e.]@L..
    BB90: 01 44 E3 08 0D 65 F0 5D 80 01 71 F7 5D 00 43 9A  // .D...e.]..q.].C.
    BBA0: 0F 4A 05 06 5E 44 44 00 00 44 9A 0F 07 65 F1 5D  // .J..^DD..D...e.]
    BBB0: FD 07 25 E8 5D FD 03 0A 41 48 56 00 40 03 21 40  // ..%.]...AHV.@.!@
    BBC0: 00 03 0A 48 40 07 25 60 01 FE 03 0A 48 41 4C 25  // ...H@.%`....HAL%
    BBD0: 00 01 44 27 09 07 05 06 5E FB FF FF FF 4C 65 00  // ..D'....^....Le.
    BBE0: 01 44 36 09 07 05 06 5E BF FF FF FF 4C A5 00 01  // .D6....^....L...
    BBF0: 44 45 09 07 05 06 5E FF FB FF FF 4C E5 00 01 44  // DE....^....L...D
    BC00: 54 09 07 05 06 5E FF BF FF FF 07 65 0C 5E FE 54  // T....^.....e.^.T
    BC10: 00 08 5E 54 00 09 5E 3D 25 00 03 45 C2 09 03 00  // ..^T..^=%..E....
    BC20: 40 06 5E 4C 25 00 01 44 7F 09 5E 05 40 FC FF FF  // @.^L%..D..^.@...
    BC30: FF 03 00 00 00 4C 65 00 01 44 91 09 5E 05 40 CF  // .....Le..D..^.@.
    BC40: FF FF FF 30 00 00 00 4C A5 00 01 44 A3 09 5E 05  // ...0...L...D..^.
    BC50: 40 FF FC FF FF 00 03 00 00 4C E5 00 01 44 B5 09  // @........L...D..
    BC60: 5E 05 40 FF CF FF FF 00 30 00 00 3C 02 06 5E 40  // ^.@.....0..<..^@
    BC70: 44 69 0A 01 02 06 5E 40 03 02 40 00 15 05 40 04  // Di....^@..@...@.
    BC80: 0D 02 03 5E 40 56 00 01 4A 25 FC 5D 01 49 14 0A  // ...^@V..J%.].I..
    BC90: 03 02 40 00 15 05 40 05 03 00 41 03 5E 09 02 41  // ..@...@...A.^..A
    BCA0: 40 09 05 40 20 20 20 20 3E 02 41 40 44 14 0A 51  // @..@    >.A@D..Q
    BCB0: 02 2D 05 01 01 00 00 00 3E 05 01 A0 86 01 00 49  // .-......>......I
    BCC0: D2 09 01 25 F7 5D 07 43 9A 0F 03 02 40 00 15 05  // ...%.].C....@...
    BCD0: 40 04 69 05 40 FF FF FF FF 07 02 03 5E 40 56 00  // @.i.@.......^@V.
    BCE0: 01 4A 25 FC 5D 01 49 69 0A 03 02 40 00 15 05 40  // .J%.].Ii...@...@
    BCF0: 05 03 00 41 03 5E 09 02 41 40 3E 05 41 00 00 00  // ...A.^..A@>.A...
    BD00: 00 44 69 0A 51 02 2D 05 01 01 00 00 00 3E 05 01  // .Di.Q.-......>..
    BD10: A0 86 01 00 49 2B 0A 01 25 F7 5D 08 43 9A 0F 03  // ....I+..%.].C...
    BD20: 02 40 00 15 05 40 02 69 05 40 FF FF FF FF 07 02  // .@...@.i.@......
    BD30: 03 5E 40 03 02 40 00 15 05 40 01 09 05 40 02 02  // .^@..@...@...@..
    BD40: 02 02 0D 02 03 5E 40 43 9A 0F 4A 25 FC 5D 01 49  // .....^@C..J%.].I
    BD50: 9A 0F 56 00 40 20 25 00 02 03 0A 41 48 03 02 48  // ..V.@ %....AH..H
    BD60: 40 0D E5 2E 5D 10 03 0A 48 41 3D A5 00 00 44 C0  // @...]...HA=...D.
    BD70: 0A 0D 65 F0 5D F0 0D A5 F0 5D 01 0D A5 E9 5D 01  // ..e.]....]....].
    BD80: 3D A5 00 00 44 DC 0A 4A 05 06 5E 33 33 00 00 44  // =...D..J..^33..D
    BD90: ED 0B 03 02 40 00 15 05 40 01 69 05 40 FF FF FF  // ....@...@.i.@...
    BDA0: FF 07 02 03 5E 40 03 02 40 00 15 05 40 02 09 05  // ....^@..@...@...
    BDB0: 40 04 04 04 04 0D 02 03 5E 40 03 00 40 06 5E 4C  // @.......^@..@.^L
    BDC0: 25 00 01 44 17 0B 09 05 40 FC FF FF FF 4C 65 00  // %..D....@....Le.
    BDD0: 01 44 25 0B 09 05 40 CF FF FF FF 4C A5 00 01 44  // .D%...@....L...D
    BDE0: 33 0B 09 05 40 FF FC FF FF 4C E5 00 01 44 41 0B  // 3...@....L...DA.
    BDF0: 09 05 40 FF CF FF FF 01 02 06 5E 40 03 02 40 00  // ..@.......^@..@.
    BE00: 15 05 40 04 0D 02 03 5E 40 56 00 01 4A 25 FC 5D  // ..@....^@V..J%.]
    BE10: 01 49 9A 0F 03 02 40 00 15 05 40 05 03 00 41 03  // .I....@...@...A.
    BE20: 5E 09 02 41 40 09 05 40 20 20 20 20 3E 02 41 40  // ^..A@..@    >.A@
    BE30: 44 98 0B 51 02 2D 05 01 01 00 00 00 3E 05 01 A0  // D..Q.-......>...
    BE40: 86 01 00 49 56 0B 01 25 F7 5D 09 43 9A 0F 03 02  // ...IV..%.].C....
    BE50: 40 00 15 05 40 04 69 05 40 FF FF FF FF 07 02 03  // @...@.i.@.......
    BE60: 5E 40 56 00 01 4A 25 FC 5D 01 49 9A 0F 03 02 40  // ^@V..J%.].I....@
    BE70: 00 15 05 40 05 03 00 41 03 5E 09 02 41 40 3E 05  // ...@...A.^..A@>.
    BE80: 41 00 00 00 00 44 ED 0B 51 02 2D 05 01 01 00 00  // A....D..Q.-.....
    BE90: 00 3E 05 01 A0 86 01 00 49 AF 0B 01 25 F7 5D 0A  // .>......I...%.].
    BEA0: 43 9A 0F 03 02 40 00 15 05 40 03 09 05 40 08 08  // C....@...@...@..
    BEB0: 08 08 0D 02 03 5E 40 43 9A 0F 03 02 40 00 15 05  // .....^@C....@...
    BEC0: 40 03 69 05 40 FF FF FF FF 07 02 03 5E 40 3D 25  // @.i.@.......^@=%
    BED0: 00 03 48 20 0D 03 00 40 06 5E 4C 25 00 01 44 36  // ..H ...@.^L%..D6
    BEE0: 0C 5E 05 40 FC FF FF FF 03 00 00 00 4C 65 00 01  // .^.@........Le..
    BEF0: 44 48 0C 5E 05 40 CF FF FF FF 30 00 00 00 4C A5  // DH.^.@....0...L.
    BF00: 00 01 44 5A 0C 5E 05 40 FF FC FF FF 00 03 00 00  // ..DZ.^.@........
    BF10: 4C E5 00 01 44 6C 0C 5E 05 40 FF CF FF FF 00 30  // L...Dl.^.@.....0
    BF20: 00 00 3C 02 06 5E 40 44 20 0D 01 02 06 5E 40 03  // ..<..^@D ....^@.
    BF30: 02 40 00 15 05 40 04 0D 02 03 5E 40 56 00 01 4A  // .@...@....^@V..J
    BF40: 25 FC 5D 01 49 CB 0C 03 02 40 00 15 05 40 05 03  // %.].I....@...@..
    BF50: 00 41 03 5E 09 02 41 40 09 05 40 20 20 20 20 3E  // .A.^..A@..@    >
    BF60: 02 41 40 44 CB 0C 51 02 2D 05 01 01 00 00 00 3E  // .A@D..Q.-......>
    BF70: 05 01 A0 86 01 00 49 89 0C 01 25 F7 5D 07 43 9A  // ......I...%.].C.
    BF80: 0F 03 02 40 00 15 05 40 04 69 05 40 FF FF FF FF  // ...@...@.i.@....
    BF90: 07 02 03 5E 40 56 00 01 4A 25 FC 5D 01 49 20 0D  // ...^@V..J%.].I .
    BFA0: 03 02 40 00 15 05 40 05 03 00 41 03 5E 09 02 41  // ..@...@...A.^..A
    BFB0: 40 3E 05 41 00 00 00 00 44 20 0D 51 02 2D 05 01  // @>.A....D .Q.-..
    BFC0: 01 00 00 00 3E 05 01 A0 86 01 00 49 E2 0C 01 25  // ....>......I...%
    BFD0: F7 5D 08 43 9A 0F 07 A5 F0 5D FE 4C 25 00 01 44  // .].C.....].L%..D
    BFE0: 31 0D 07 65 F0 5D EF 4C 65 00 01 44 3D 0D 07 65  // 1..e.].Le..D=..e
    BFF0: F0 5D DF 4C A5 00 01 44 49 0D 07 65 F0 5D BF 4C  // .].L...DI..e.].L
    C000: E5 00 01 44 55 0D 07 65 F0 5D 7F 07 A5 E9 5D FE  // ...DU..e.]....].
    C010: 56 00 40 20 25 00 02 03 0A 48 40 07 E5 2E 5D EF  // V.@ %....H@...].
    C020: 43 9A 0F 66 1E 2D 0D 42 C4 00 3D A5 00 02 44 A8  // C..f.-.B..=...D.
    C030: 0D 2D 0D 42 0C 00 3D A5 00 03 49 9A 0F 3D 05 01  // .-.B..=...I..=..
    C040: 30 75 00 00 47 A8 0D 3D 05 01 40 9C 00 00 46 A3  // 0u..G..=..@...F.
    C050: 0D 2D 0D 42 28 02 43 A8 0D 2D 0D 42 0C 00 03 21  // .-.B(.C..-.B...!
    C060: 43 00 03 A2 46 44 4C A4 46 05 00 44 FF 0D 03 04  // C...FDL.F..D....
    C070: 40 00 00 3E 05 40 00 00 00 00 44 FF 0D 56 00 41  // @..>.@....D..V.A
    C080: 56 00 40 03 24 40 06 00 09 25 40 3F 03 22 41 40  // V.@.$@...%@?."A@
    C090: 03 24 40 07 00 09 25 40 3F 15 0D 40 06 0F 0A 41  // .$@...%@?..@...A
    C0A0: 40 03 64 40 08 00 09 65 40 3F 15 15 40 04 0F 52  // @.d@...e@?..@..R
    C0B0: 41 40 43 76 0F 03 21 43 00 03 A2 46 44 66 07 2D  // A@Cv..!C...FDf.-
    C0C0: 0C 42 04 00 3D A5 00 03 44 23 0E 66 07 2D 0C 42  // .B..=...D#.f.-.B
    C0D0: 06 00 3D A5 00 02 49 9A 0F 03 04 41 00 00 3E 05  // ..=...I....A..>.
    C0E0: 41 00 00 00 00 44 9A 0F 3D 02 01 41 46 41 0E 4C  // A....D..=..AFA.L
    C0F0: A4 46 06 00 49 49 0E 2D 0D 42 0C 00 43 23 0E 03  // .F..II.-.B..C#..
    C100: 04 41 08 00 43 76 0F 08 A5 00 1B 66 1E 2D 0D 42  // .A..Cv.....f.-.B
    C110: C0 02 03 21 43 00 03 A2 46 44 03 0C 46 02 00 4C  // ...!C...FD..F..L
    C120: A4 46 00 00 49 C0 0E 66 1E 2D 0D 42 E8 00 3D 05  // .F..I..f.-.B..=.
    C130: 01 48 3F 00 00 47 AB 0E 66 1E 2D 0D 42 50 02 3D  // .H?..G..f.-.BP.=
    C140: 05 01 78 69 00 00 47 AB 0E 66 1E 2D 0D 42 88 02  // ..xi..G..f.-.B..
    C150: 3D 05 01 F0 D2 00 00 47 AB 0E 66 1E 2D 0D 42 20  // =......G..f.-.B 
    C160: 01 03 21 43 00 03 A2 46 44 03 0C 46 02 00 4C A4  // ..!C...FD..F..L.
    C170: 46 00 00 44 1B 0F 2D 0D 42 06 00 56 20 41 3D A4  // F..D..-.B..V A=.
    C180: 00 00 00 44 E3 0E 2D 25 41 01 3E 25 41 0A 44 1B  // ...D..-%A.>%A.D.
    C190: 0F 2D 0D 42 05 00 43 C8 0E 56 00 41 56 00 40 03  // .-.B..C..V.AV.@.
    C1A0: 24 40 01 00 09 25 40 3F 03 22 41 40 03 24 40 02  // $@...%@?."A@.$@.
    C1B0: 00 09 25 40 3F 15 0D 40 06 0F 0A 41 40 03 64 40  // ..%@?..@...A@.d@
    C1C0: 03 00 09 65 40 3F 15 15 40 04 0F 52 41 40 43 76  // ...e@?..@..RA@Cv
    C1D0: 0F 66 07 2D 0C 42 08 00 03 21 43 00 03 A2 46 44  // .f.-.B...!C...FD
    C1E0: 03 04 41 00 00 3E 05 41 00 00 00 00 44 9A 0F 3D  // ..A..>.A....D..=
    C1F0: 02 01 41 46 48 0F 4C A4 46 04 00 49 50 0F 2D 0D  // ..AFH.L.F..IP.-.
    C200: 42 44 00 43 2A 0F 2D 0D 42 08 00 3D A4 00 00 00  // BD.C*.-.B..=....
    C210: 44 71 0F 03 24 41 00 00 3E 25 41 18 44 71 0F 2D  // Dq..$A..>%A.Dq.-
    C220: 0D 42 06 00 43 55 0F 03 04 41 01 00 5C 02 0F 5E  // .B..CU...A..\..^
    C230: 00 00 FC FF 41 5C 02 10 5E 00 00 FC FF 41 5C 02  // ....A\..^....A\.
    C240: 11 5E 00 00 FC FF 41 5C 02 12 5E 00 00 FC FF 41  // .^....A\..^....A
    C250: 3A 00 00 5B 7A 0A 00 00 00 D8 00 B0 01 88 02 60  // :..[z..........`
    C260: 03 7A 48 00 48 3F 00 00 00 00 10 28 78 69 00 00  // .zH.H?.....(xi..
    C270: 00 00 10 28 F0 D2 00 00 00 00 10 26 68 3C 01 00  // ...(.......&h<..
    C280: 00 00 10 26 60 54 00 00 00 00 10 26 EC 5E 00 00  // ...&`T.....&.^..
    C290: 00 00 10 2A 90 7E 00 00 00 00 10 28 C0 A8 00 00  // ...*.~.....(....
    C2A0: 00 00 10 26 00 00 00 00 00 00 10 28 1B 02 01 02  // ...&.......(....
    C2B0: 00 00 37 00 00 3D 0D 00 00 00 44 CE 01 56 00 41  // ..7..=....D..V.A
    C2C0: 03 21 41 01 09 25 41 0F 15 0D 41 02 03 0A 40 42  // .!A..%A...A...@B
    C2D0: 66 FF 2D 0D 42 07 02 2D 0A 42 41 03 0C 48 02 00  // f.-.B..-.BA..H..
    C2E0: 0D A5 90 5D 01 54 08 90 5D 03 0C 48 00 00 03 F9  // ...].T..]..H....
    C2F0: 41 01 15 3D 41 04 5C BA 10 54 8F 41 03 0A 42 40  // A..=A.\..T.A..B@
    C300: 4A 25 10 54 01 49 81 00 0D 0D 10 54 01 01 0D 25  // J%.T.I.....T...%
    C310: 10 54 10 4A 25 10 54 20 44 67 00 07 25 10 54 EF  // .T.J%.T Dg..%.T.
    C320: 4A 25 10 54 20 49 74 00 0D 25 13 54 40 56 00 41  // J%.T It..%.T@V.A
    C330: 03 09 41 00 3B 02 41 03 3B 41 00 1B 25 41 04 01  // ..A.;.A.;A..%A..
    C340: A2 11 54 41 03 69 41 01 15 2D 41 04 01 2A 11 54  // ..TA.iA..-A..*.T
    C350: 41 56 00 40 0F E5 40 80 03 73 40 00 01 02 16 54  // AV.@..@..s@....T
    C360: 40 56 00 40 03 6B 40 00 01 02 16 54 40 03 63 40  // @V.@.k@....T@.c@
    C370: 00 01 02 16 54 40 03 7B 40 00 09 65 40 0F 01 02  // ....T@.{@..e@...
    C380: 16 54 40 3E 25 41 04 47 10 01 33 25 41 04 2D 05  // .T@>%A.G..3%A.-.
    C390: 46 04 00 00 00 03 63 40 00 01 02 16 54 40 03 6B  // F.....c@....T@.k
    C3A0: 40 00 01 02 16 54 40 03 73 40 00 01 02 16 54 40  // @....T@.s@....T@
    C3B0: 03 7B 40 00 01 02 16 54 40 43 D7 00 0D 25 13 54  // .{@....T@C...%.T
    C3C0: 02 0D 25 11 54 01 03 29 40 01 21 25 40 0A 2D 25  // ..%.T..)@.!%@.-%
    C3D0: 40 96 4A 25 14 54 01 49 42 01 51 14 33 25 40 01  // @.J%.T.IB.Q.3%@.
    C3E0: 3E 25 40 00 49 26 01 02 65 01 01 43 CA 01 4A 05  // >%@.I&..e..C..J.
    C3F0: 14 54 F0 8F FF 00 44 54 01 02 65 01 02 43 CA 01  // .T....DT..e..C..
    C400: 01 05 16 54 01 00 00 80 03 00 40 16 54 02 6A 01  // ...T......@.T.j.
    C410: 40 02 B8 01 14 54 08 A5 01 1F 3D A5 01 00 46 7C  // @....T....=...F|
    C420: 01 02 65 01 03 43 CA 01 32 A5 01 01 3D 8D 00 00  // ..e..C..2...=...
    C430: 00 44 CA 01 3D A5 01 00 44 CA 01 03 31 41 01 03  // .D..=...D...1A..
    C440: 19 40 00 56 18 40 3B 02 40 03 28 40 16 54 03 68  // .@.V.@;.@.(@.T.h
    C450: 40 16 54 03 A8 40 16 54 03 E8 40 16 54 04 02 00  // @.T..@.T..@.T...
    C460: 40 3E 25 41 04 47 CA 01 33 25 41 04 2D 05 46 04  // @>%A.G..3%A.-.F.
    C470: 00 00 00 43 9D 01 3A 00 00 5B 66 FF 2D 0D 42 07  // ...C..:..[f.-.B.
    C480: 02 03 0C 48 00 00 01 8D 18 54 18 00 01 05 19 54  // ...H.....T.....T
    C490: 4D 1C 02 00 01 05 1A 54 10 11 3D 10 2D 0D 42 04  // M......T..=.-.B.
    C4A0: 00 2C 25 00 01 3D 25 00 05 49 D5 01 56 08 48 5B  // .,%..=%..I..V.H[
    C4B0: 7A 14 00 00 00 00 00 1C 00 04 00 38 00 08 00 54  // z..........8...T
    C4C0: 00 0C 00 70 00 10 00 00 5A 00 01 02 00 04 02 25  // ...p....Z......%
    C4D0: 01 04 03 31 41 00 09 0D 41 0F 00 15 0D 41 01 66  // ...1A...A....A.f
    C4E0: FF 2D 0D 42 50 00 2D 0A 42 41 03 0C 48 00 00 07  // .-.BP.-.BA..H...
    C4F0: A5 90 5D FE 01 0D 90 5D 11 11 50 02 4A 0D 93 5D  // ..]....]..P.J..]
    C500: 01 00 49 41 00 02 25 01 13 54 08 90 5D 54 00 92  // ..IA..%..T..]T..
    C510: 5D 3A 00 00 5B 7A 0A 00 00 00 04 00 08 00 0C 00  // ]:..[z..........
    C520: 10 00 62 01 02 01 04 04 37 00 00 42 21 00 63 07  // ..b.....7..B!.c.
    C530: 29 00 63 03 4E 00 63 02 60 00 63 04 84 00 63 0C  // ).c.N.c.`.c...c.
    C540: 19 01 63 0D 22 01 5A 5A 43 61 01 01 0D 45 5D 9F  // ..c.".ZZCa...E].
    C550: 0F 66 06 01 24 47 5D 30 00 01 4C 47 5D 31 00 03  // .f..$G]0..LG]1..
    C560: 24 46 3B 00 3E 25 46 00 44 61 01 54 20 47 5D 5B  // $F;.>%F.Da.T G][
    C570: 0D E5 47 5D 01 5C 05 43 5D FF FF FF FD 11 00 03  // ..G].\.C].......
    C580: 00 5B 0D E5 47 5D 01 4A 25 44 5D 02 44 72 00 0D  // .[..G].J%D].Dr..
    C590: A5 43 5D 01 0D A5 43 5D 02 5C 05 43 5D EF FF FF  // .C]...C].\.C]...
    C5A0: FD 01 00 00 00 5B 4A 05 53 00 00 02 00 00 44 94  // .....[J.S.....D.
    C5B0: 00 0D 25 4B 5D 01 3D 8D 00 00 00 44 18 01 03 05  // ..%K].=....D....
    C5C0: 46 00 36 6E 01 56 00 41 03 19 41 00 21 05 41 FF  // F.6n.V.A..A.!.A.
    C5D0: 0F 00 00 27 02 46 40 3E 05 41 00 00 00 00 44 C4  // ...'.F@>.A....D.
    C5E0: 00 2D 0D 40 01 00 01 8A 45 5D 40 56 00 41 03 19  // .-.@....E]@V.A..
    C5F0: 41 00 21 02 40 41 27 02 46 40 01 A5 4A 5D 0C 01  // A.!.@A'.F@..J]..
    C600: 0A 4A 5D 40 15 05 40 04 56 00 41 03 29 41 00 3E  // .J]@..@.V.A.)A.>
    C610: 25 41 FF 49 F9 00 2D 0D 41 01 00 21 02 40 41 1B  // %A.I..-.A..!.@A.
    C620: 05 40 08 01 0A 48 5D 40 0D E5 48 5D C0 07 25 4B  // .@...H]@..H]..%K
    C630: 5D FE 4A 65 4B 5D 01 49 10 01 5B 01 05 43 5D 00  // ].JeK].I..[..C].
    C640: 00 03 00 5B 0D E5 47 5D 01 4A 05 43 5D 01 00 00  // ...[..G].J.C]...
    C650: 00 44 48 01 4A 05 43 5D 10 00 00 00 49 55 01 4A  // .DH.J.C]....IU.J
    C660: 05 44 5D 01 00 00 00 49 3D 01 5C 05 43 5D FF FF  // .D]....I=.\.C]..
    C670: FE FF 00 00 02 00 5B 5C 05 43 5D EF FF FD FD 01  // ......[\.C].....
    C680: 00 00 00 5B 9E 00 03 02 00 10 37 00 00 01 05 00  // ...[......7.....
    C690: 00 2C A8 01 00 03 00 46 01 00 1B 05 46 08 3D 65  // .,.....F....F.=e
    C6A0: 02 00 49 25 00 2C 22 02 46 3D E5 02 00 49 30 00  // ..I%.,".F=...I0.
    C6B0: 2C A2 02 46 3D 65 02 02 49 37 00 03 01 40 03 09  // ,..F=e..I7...@..
    C6C0: 05 40 00 00 00 FC 3E 05 40 00 00 00 D0 49 5D 00  // .@....>.@....I].
    C6D0: 01 05 63 C0 00 00 00 40 55 00 00 55 20 02 43 61  // ..c....@U..U .Ca
    C6E0: 00 54 00 63 C0 01 01 64 C0 00 56 00 40 03 21 40  // .T.c...d..V.@.!@
    C6F0: 02 01 02 65 C0 40 01 01 66 C0 01 03 31 40 02 01  // ...e.@..f...1@..
    C700: 02 67 C0 40 01 01 E8 C0 03 3D 65 02 01 44 95 00  // .g.@.....=e..D..
    C710: 3D E5 02 01 44 95 00 51 02 4A E5 A0 21 80 49 95  // =...D..Q.J..!.I.
    C720: 00 5B 88 01 02 02 00 00 37 00 00 3D 25 01 01 44  // .[......7..=%..D
    C730: 77 00 3D 25 01 02 44 78 00 3D 25 01 03 44 33 00  // w.=%..Dx.=%..D3.
    C740: 3D 25 01 00 49 71 01 3D 05 00 00 00 00 00 49 53  // =%..Iq.=......IS
    C750: 00 3A 00 00 5B 26 05 00 64 00 00 00 02 02 01 40  // .:..[&..d......@
    C760: 02 05 00 07 00 00 00 52 13 20 05 01 64 00 00 00  // .......R. ..d...
    C770: 02 02 00 40 5B 54 20 A4 53 26 05 00 64 00 00 00  // ...@[T .S&..d...
    C780: 02 02 01 40 02 05 00 04 00 00 00 52 13 20 05 01  // ...@.......R. ..
    C790: 64 00 00 00 02 02 00 40 5B 5B 66 FF 2D 0D 42 78  // d......@[[f.-.Bx
    C7A0: 01 56 00 41 03 39 41 01 15 25 41 02 2D 0A 42 41  // .V.A.9A..%A.-.BA
    C7B0: 3D 65 01 0B 49 EB 00 20 05 00 64 00 00 00 03 0C  // =e..I.. ..d.....
    C7C0: 48 02 00 03 00 41 40 01 0F 25 41 10 09 0D 41 DF  // H....A@..%A...A.
    C7D0: FF 03 0C 48 00 00 4A 05 01 50 01 00 00 00 44 D4  // ...H..J..P....D.
    C7E0: 00 03 0C 48 02 00 3C 02 41 01 40 49 D4 00 3C 02  // ...H..<.A.@I..<.
    C7F0: 40 01 41 44 71 01 03 0C 48 02 00 07 25 40 01 EF  // @.ADq...H...%@..
    C800: 01 02 41 01 40 01 0A 40 01 41 43 71 01 56 00 40  // ..A.@..@.ACq.V.@
    C810: 03 8D 40 0C 00 3D 65 01 18 44 02 01 03 A9 40 01  // ..@..=e..D....@.
    C820: 33 A5 40 14 03 31 40 01 09 25 40 03 15 25 40 04  // 3.@..1@..%@..%@.
    C830: 0F 0D 40 01 01 56 00 41 03 29 41 01 33 25 41 14  // ..@..V.A.)A.3%A.
    C840: 03 0C 48 00 00 4A 05 01 50 01 00 00 00 44 4F 01  // ..H..J..P....DO.
    C850: 03 0C 48 02 00 4A 25 40 01 10 49 4F 01 3C 22 43  // ..H..J%@..IO.<"C
    C860: 01 41 49 4F 01 03 1A 48 40 3C 0A 00 01 40 44 71  // .AIO...H@<...@Dq
    C870: 01 03 1A 48 40 07 25 00 01 FE 03 0C 48 02 00 01  // ...H@.%.....H...
    C880: 22 43 01 41 07 0D 40 01 EF FF 03 1A 48 40 01 0A  // "C.A..@.....H@..
    C890: 00 01 40 3A 00 00 5B 7A 10 00 00 00 00 00 80 00  // ..@:..[z........
    C8A0: 04 00 00 01 08 00 80 01 0C 00 E6 00 01 01 04 00  // ................
    C8B0: 37 00 00 56 00 00 66 1E 2D 0D 42 4C 00 56 00 40  // 7..V..f.-.BL.V.@
    C8C0: 21 25 00 10 2D 0A 42 40 03 24 41 0C 00 4C 25 41  // !%..-.B@.$A..L%A
    C8D0: 08 44 DA 00 02 25 00 64 02 0D 01 01 01 02 E4 01  // .D...%.d........
    C8E0: 06 00 0E E5 01 90 66 1E 43 58 00 2D 0D 42 35 02  // ......f.CX.-.B5.
    C8F0: 02 A4 01 00 00 03 64 00 01 00 2D 0D 42 03 00 43  // ......d...-.B..C
    C900: C0 00 3E 0D 00 00 00 44 7B 00 3E 0D 00 01 00 44  // ..>....D{.>....D
    C910: 92 00 3E 0D 00 02 00 44 A9 00 3E 0D 00 03 00 44  // ..>....D..>....D
    C920: 41 00 43 DA 00 2D 0D 42 E4 01 02 A4 01 00 00 03  // A.C..-.B........
    C930: 64 00 01 00 2D 0D 42 03 00 43 C0 00 2D 0D 42 FF  // d...-.B..C..-.B.
    C940: 01 02 A4 01 00 00 03 64 00 01 00 2D 0D 42 03 00  // .......d...-.B..
    C950: 43 C0 00 2D 0D 42 1A 02 02 A4 01 00 00 03 64 00  // C..-.B........d.
    C960: 01 00 2D 0D 42 03 00 43 C0 00 3E 65 00 00 44 DA  // ..-.B..C..>e..D.
    C970: 00 33 65 00 01 02 4C 00 00 00 52 36 2D 0D 42 02  // .3e...L...R6-.B.
    C980: 00 43 C0 00 2D 25 00 01 3E 25 00 04 45 0C 00 5B  // .C..-%..>%..E..[
    C990: 54 01 02 01 D6 09 80 02 A0 00 E0 01 2D 00 10 00  // T...........-...
    C9A0: 60 00 0A 00 02 00 00 00 00 00 08 08 06 00 12 3C  // `..............<
    C9B0: A0 0F 20 03 00 01 58 02 1C 00 28 00 80 00 01 00  // .. ...X...(.....
    C9C0: 04 00 00 00 00 00 00 00 00 00 6A 3C 64 19 00 04  // ..........j<d...
    C9D0: 40 01 00 03 26 00 18 00 88 00 03 00 06 00 00 00  // @...&...........
    C9E0: 00 00 00 00 06 00 55 3C 01 1D 00 05 72 01 D0 02  // ......U<....r...
    C9F0: 1E 00 6E 00 28 00 05 00 05 00 00 00 00 00 00 00  // ..n.(...........
    CA00: 00 00 E8 3C 30 2A 00 05 08 02 C0 03 28 00 60 00  // ...<0*......(.`.
    CA10: 70 00 01 00 03 00 00 00 00 00 00 00 00 00 E9 3C  // p..............<
    CA20: 30 2A 00 05 98 01 00 04 2A 00 30 00 70 00 01 00  // 0*......*.0.p...
    CA30: 03 00 00 00 00 00 00 00 00 00 EA 3C 66 21 56 05  // ...........<f!V.
    CA40: AA 01 00 03 1E 00 46 00 8F 00 03 00 03 00 00 00  // ......F.........
    CA50: 00 00 00 00 02 00 ED 3C 8F 2F 78 05 D0 01 1A 04  // .......<./x.....
    CA60: 27 00 58 00 90 00 03 00 04 00 00 00 00 00 00 00  // '.X.............
    CA70: 02 00 EB 3C 48 3F 40 06 30 02 B0 04 32 00 40 00  // ...<H?@.0...2.@.
    CA80: C0 00 01 00 03 00 00 00 00 00 00 00 00 00 EC 3C  // ...............<
    CA90: 02 3A 80 07 18 01 38 04 2D 00 58 00 2C 00 04 00  // .:....8.-.X.,...
    CAA0: 05 00 00 00 00 00 00 00 02 00 F3 3C 7D 4B 80 07  // ...........<}K..
    CAB0: A0 02 B0 04 2D 00 88 00 C8 00 03 00 06 00 00 00  // ....-...........
    CAC0: 00 00 00 00 02 00 F0 3C 68 5B 80 07 A8 02 A0 05  // .......<h[......
    CAD0: 3C 00 80 00 D0 00 01 00 03 00 00 00 00 00 00 00  // <...............
    CAE0: 02 00 F1 3C 48 00 03 02 1B 00 0A 11 20 4E 00 00  // ...<H....... N..
    CAF0: 20 4E 00 00 01 00 00 00 34 2D 00 00 4C 00 00 00  //  N......4-..L...
    CB00: 00 00 00 00 00 00 00 00 00 00 00 00 F4 00 00 00  // ................
    CB10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CB20: 00 00 00 00 00 00 00 00 00 00 00 00 04 03 02 01  // ................
    CB30: 00 00 00 00 00 2A 00 2A 00 00 2A 2A 2A 00 00 2A  // .....*.*..***..*
    CB40: 00 2A 2A 15 00 2A 2A 2A 15 15 15 15 15 3F 15 3F  // .**..***.....?.?
    CB50: 15 15 3F 3F 3F 15 15 3F 15 3F 3F 3F 15 3F 3F 3F  // ..???..?.???.???
    CB60: 00 00 00 05 05 05 08 08 08 0B 0B 0B 0E 0E 0E 11  // ................
    CB70: 11 11 14 14 14 18 18 18 1C 1C 1C 20 20 20 24 24  // ...........   $$
    CB80: 24 28 28 28 2D 2D 2D 32 32 32 38 38 38 3F 3F 3F  // $(((---222888???
    CB90: 00 00 3F 10 00 3F 1F 00 3F 2F 00 3F 3F 00 3F 3F  // ..?..?..?/.??.??
    CBA0: 00 2F 3F 00 1F 3F 00 10 3F 00 00 3F 10 00 3F 1F  // ./?..?..?..?..?.
    CBB0: 00 3F 2F 00 3F 3F 00 2F 3F 00 1F 3F 00 10 3F 00  // .?/.??./?..?..?.
    CBC0: 00 3F 00 00 3F 10 00 3F 1F 00 3F 2F 00 3F 3F 00  // .?..?..?..?/.??.
    CBD0: 2F 3F 00 1F 3F 00 10 3F 1F 1F 3F 27 1F 3F 2F 1F  // /?..?..?..?'.?/.
    CBE0: 3F 37 1F 3F 3F 1F 3F 3F 1F 37 3F 1F 2F 3F 1F 27  // ?7.??.??.7?./?.'
    CBF0: 3F 1F 1F 3F 27 1F 3F 2F 1F 3F 37 1F 3F 3F 1F 37  // ?..?'.?/.?7.??.7
    CC00: 3F 1F 2F 3F 1F 27 3F 1F 1F 3F 1F 1F 3F 27 1F 3F  // ?./?.'?..?..?'.?
    CC10: 2F 1F 3F 37 1F 3F 3F 1F 37 3F 1F 2F 3F 1F 27 3F  // /.?7.??.7?./?.'?
    CC20: 2D 2D 3F 31 2D 3F 36 2D 3F 3A 2D 3F 3F 2D 3F 3F  // --?1-?6-?:-??-??
    CC30: 2D 3A 3F 2D 36 3F 2D 31 3F 2D 2D 3F 31 2D 3F 36  // -:?-6?-1?--?1-?6
    CC40: 2D 3F 3A 2D 3F 3F 2D 3A 3F 2D 36 3F 2D 31 3F 2D  // -?:-??-:?-6?-1?-
    CC50: 2D 3F 2D 2D 3F 31 2D 3F 36 2D 3F 3A 2D 3F 3F 2D  // -?--?1-?6-?:-??-
    CC60: 3A 3F 2D 36 3F 2D 31 3F 00 00 1C 07 00 1C 0E 00  // :?-6?-1?........
    CC70: 1C 15 00 1C 1C 00 1C 1C 00 15 1C 00 0E 1C 00 07  // ................
    CC80: 1C 00 00 1C 07 00 1C 0E 00 1C 15 00 1C 1C 00 15  // ................
    CC90: 1C 00 0E 1C 00 07 1C 00 00 1C 00 00 1C 07 00 1C  // ................
    CCA0: 0E 00 1C 15 00 1C 1C 00 15 1C 00 0E 1C 00 07 1C  // ................
    CCB0: 0E 0E 1C 11 0E 1C 15 0E 1C 18 0E 1C 1C 0E 1C 1C  // ................
    CCC0: 0E 18 1C 0E 15 1C 0E 11 1C 0E 0E 1C 11 0E 1C 15  // ................
    CCD0: 0E 1C 18 0E 1C 1C 0E 18 1C 0E 15 1C 0E 11 1C 0E  // ................
    CCE0: 0E 1C 0E 0E 1C 11 0E 1C 15 0E 1C 18 0E 1C 1C 0E  // ................
    CCF0: 18 1C 0E 15 1C 0E 11 1C 14 14 1C 16 14 1C 18 14  // ................
    CD00: 1C 1A 14 1C 1C 14 1C 1C 14 1A 1C 14 18 1C 14 16  // ................
    CD10: 1C 14 14 1C 16 14 1C 18 14 1C 1A 14 1C 1C 14 1A  // ................
    CD20: 1C 14 18 1C 14 16 1C 14 14 1C 14 14 1C 16 14 1C  // ................
    CD30: 18 14 1C 1A 14 1C 1C 14 1A 1C 14 18 1C 14 16 1C  // ................
    CD40: 00 00 10 04 00 10 08 00 10 0C 00 10 10 00 10 10  // ................
    CD50: 00 0C 10 00 08 10 00 04 10 00 00 10 04 00 10 08  // ................
    CD60: 00 10 0C 00 10 10 00 0C 10 00 08 10 00 04 10 00  // ................
    CD70: 00 10 00 00 10 04 00 10 08 00 10 0C 00 10 10 00  // ................
    CD80: 0C 10 00 08 10 00 04 10 08 08 10 0A 08 10 0C 08  // ................
    CD90: 10 0E 08 10 10 08 10 10 08 0E 10 08 0C 10 08 0A  // ................
    CDA0: 10 08 08 10 0A 08 10 0C 08 10 0E 08 10 10 08 0E  // ................
    CDB0: 10 08 0C 10 08 0A 10 08 08 10 08 08 10 0A 08 10  // ................
    CDC0: 0C 08 10 0E 08 10 10 08 0E 10 08 0C 10 08 0A 10  // ................
    CDD0: 0B 0B 10 0C 0B 10 0D 0B 10 0F 0B 10 10 0B 10 10  // ................
    CDE0: 0B 0F 10 0B 0D 10 0B 0C 10 0B 0B 10 0C 0B 10 0D  // ................
    CDF0: 0B 10 0F 0B 10 10 0B 0F 10 0B 0D 10 0B 0C 10 0B  // ................
    CE00: 0B 10 0B 0B 10 0C 0B 10 0D 0B 10 0F 0B 10 10 0B  // ................
    CE10: 0F 10 0B 0D 10 0B 0C 10 00 00 00 00 00 00 00 00  // ................
    CE20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CE30: 5C 00 02 01 1A 36 80 07 A0 00 38 04 1F 00 30 00  // \....6....8...0.
    CE40: 20 00 03 00 05 00 58 01 C2 00 00 00 04 00 00 3B  //  .....X........;
    CE50: E8 03 00 00 02 00 34 21 00 00 B8 0B 00 00 00 00  // ......4!........
    CE60: 7D 05 05 02 0B 0A 82 00 00 FF FF 00 00 00 00 00  // }...............
    CE70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CE80: 00 00 00 00 00 00 00 00 00 00 00 00 0C 00 02 01  // ................
    CE90: 00 00 00 00 00 00 00 00 00 04 01 0C 00 00 00 00  // ................
    CEA0: 00 00 00 00 00 00 00 00 00 00 00 00 77 01 00 00  // ............w...
    CEB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CEC0: E8 03 1A 02 00 00 00 00 00 05 05 00 00 00 00 00  // ................
    CED0: 8C 00 01 01 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CEE0: 00 00 00 00 02 00 10 01 14 31 00 00 00 00 E4 00  // .........1......
    CEF0: 00 00 00 00 08 00 10 02 0C 31 01 01 00 00 E4 00  // .........1......
    CF00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CF10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CF20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CF30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CF40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CF50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CF60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CF70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CF80: 00 00 00 00 00 00 FF FF FF FF FF FF FF FF FF FF  // ................
    CF90: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    CFA0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    CFB0: FF FF FF FF FF FF FF FF 00 00 00 00 00 00 FF FF  // ................
    CFC0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    CFD0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    CFE0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    CFF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D0A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D0B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D0C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D0D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D0E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 FF FF  // ................
    D0F0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D100: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D110: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D120: 00 00 00 00 00 00 FF FF FF FF FF FF FF FF FF FF  // ................
    D130: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D140: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D150: FF FF FF FF FF FF FF FF 01 00 05 00 00 00 00 2C  // ...............,
    D160: 00 00 05 01 2C 00 00 05 FF 00 00 00 00 FF 00 00  // ....,...........
    D170: 00 00 FF 00 00 00 00 FF 00 00 00 00 FF 00 00 00  // ................
    D180: 00 FF 00 00 00 00 FF 00 00 00 00 FF 00 00 00 00  // ................
    D190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D1A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D1B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D1C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D1D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D1E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D1F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D290: 00 00 00 00 00 00 00 00 54 00 02 01 B5 5D 00 00  // ........T....]..
    D2A0: 00 00 01 00 B5 5D 00 00 08 08 02 00 B5 5D 00 00  // .....].......]..
    D2B0: 10 10 03 00 B5 5D 00 00 18 14 04 00 B5 5D 00 00  // .....].......]..
    D2C0: 1A 18 05 00 91 5D 00 00 08 08 90 00 95 5D 00 00  // .....].......]..
    D2D0: 08 08 91 00 99 5D 00 00 08 08 92 00 9D 5D 00 00  // .....].......]..
    D2E0: 08 08 93 00 A1 5D 00 00 08 08 94 00 9C 00 01 01  // .....]..........
    D2F0: 10 01 06 12 11 01 16 12 21 01 0A 12 13 01 06 6A  // ........!......j
    D300: 14 01 16 6A 22 01 0A 6A 16 01 06 55 17 01 16 55  // ...j"..j...U...U
    D310: 23 01 0A 55 63 01 16 E8 64 01 0A E8 65 01 16 E9  // #..Uc...d...e...
    D320: 66 01 0A E9 19 01 06 EA 1A 01 16 EA 24 01 0A EA  // f...........$...
    D330: 47 01 16 ED 48 01 0A ED 45 01 16 EB 46 01 0A EB  // G...H...E...F...
    D340: 75 01 16 EC 76 01 0A EC A5 01 16 F3 A6 01 0A F3  // u...v...........
    D350: A0 01 16 F0 A1 01 0A F0 A2 01 16 F1 A3 01 0A F1  // ................
    D360: D2 01 16 70 D4 01 0A 70 D8 01 16 71 D9 01 0A 71  // ...p...p...q...q
    D370: E2 01 16 72 E4 01 0A 72 E8 01 16 73 E9 01 0A 73  // ...r...r...s...s
    D380: F5 01 16 74 F6 01 0A 74 00 04 09 01 14 00 02 01  // ...t...t........
    D390: 02 00 08 00 80 00 00 02 00 04 FF FF 40 00 FF FF  // ............@...
    D3A0: CD 00 01 04 0A 00 06 00 14 31 68 00 1E 21 00 00  // .........1h..!..
    D3B0: 95 00 00 00 02 00 00 00 0C 31 71 00 1E 22 00 00  // .........1q.."..
    D3C0: 9C 00 00 00 08 00 00 00 00 00 7A 00 20 21 00 00  // ..........z. !..
    D3D0: A3 00 00 00 00 00 00 00 00 00 83 00 20 22 00 00  // ............ "..
    D3E0: AA 00 00 00 00 00 00 00 00 00 8C 00 21 21 00 00  // ............!!..
    D3F0: B1 00 00 00 00 00 00 00 03 71 B8 00 00 00 00 00  // .........q......
    D400: 00 00 00 00 00 00 00 00 01 04 90 00 02 04 01 00  // ................
    D410: FF 01 04 91 00 02 04 02 00 FF 01 04 90 00 02 04  // ................
    D420: 00 00 FF 01 04 90 00 02 04 00 00 FF 01 04 90 00  // ................
    D430: 02 04 00 00 FF 14 06 0F 00 00 00 FF 14 06 0F 00  // ................
    D440: 00 00 FF 14 06 0F 00 00 00 FF 14 06 0F 01 00 00  // ................
    D450: FF 14 06 0F 01 00 00 FF 10 0A 01 02 03 04 05 00  // ................
    D460: 00 00 11 0A 90 91 92 93 94 00 00 00 FF 00 05 00  // ................
    D470: 01 01 00 00 38 00 04 03 04 00 00 00 70 11 01 00  // ....8.......p...
    D480: C0 12 60 09 00 00 00 00 00 00 00 00 7C 01 4E 0C  // ..`.........|.N.
    D490: 01 01 00 00 55 00 00 00 C0 12 00 00 01 02 04 01  // ....U...........
    D4A0: 00 05 05 00 00 00 00 00 00 00 00 00 06 02 05 03  // ................
    D4B0: 0E 00 36 00 46 00 5A 01 96 01 30 75 00 00 0C 00  // ..6.F.Z...0u....
    D4C0: 3F 05 3A 40 00 00 40 9C 00 00 0C 00 3F 05 3E 00  // ?.:@..@.....?.>.
    D4D0: 00 00 FF FF FF 00 0C 00 3F 05 77 21 00 00 00 00  // ........?.w!....
    D4E0: 00 00 FF FF FF 00 0C 00 3F 05 34 A0 00 00 00 00  // ........?.4.....
    D4F0: 00 00 48 3F 00 00 3F 00 44 00 00 16 00 00 00 05  // ..H?..?.D.......
    D500: 01 1F 00 00 00 05 02 2C 00 00 00 05 03 3E 00 00  // .......,.....>..
    D510: 00 05 08 1B 50 00 00 05 09 25 60 00 00 05 0A 35  // ....P....%`....5
    D520: 90 00 00 05 10 21 B0 00 00 05 11 2F F0 00 00 05  // .....!...../....
    D530: 18 2A 40 01 00 05 78 69 00 00 3F 00 44 00 00 16  // .*@...xi..?.D...
    D540: 00 00 00 05 01 1F 00 00 00 05 02 2C 00 00 00 05  // ...........,....
    D550: 03 3E 00 00 00 05 08 1B 50 00 00 05 09 25 60 00  // .>......P....%`.
    D560: 00 05 0A 35 90 00 00 05 10 21 B0 00 00 05 11 2F  // ...5.....!...../
    D570: F0 00 00 05 18 2A 40 01 00 05 F0 D2 00 00 3F 00  // .....*@.......?.
    D580: 44 00 00 1E 00 00 00 05 01 26 00 00 00 05 02 30  // D........&.....0
    D590: 00 00 00 05 03 3E 00 00 00 05 08 22 40 00 00 05  // .....>....."@...
    D5A0: 09 2C 60 00 00 05 0A 37 70 00 00 05 10 27 90 00  // .,`....7p....'..
    D5B0: 00 05 11 32 C0 00 00 05 18 2E 00 01 00 05 68 3C  // ...2..........h<
    D5C0: 01 00 3F 00 44 00 00 1E 00 00 00 05 01 26 00 00  // ..?.D........&..
    D5D0: 00 05 02 30 00 00 00 05 03 3E 00 00 00 05 08 22  // ...0.....>....."
    D5E0: 40 00 00 05 09 2C 60 00 00 05 0A 37 70 00 00 05  // @....,`....7p...
    D5F0: 10 27 90 00 00 05 11 32 C0 00 00 05 18 2E 00 01  // .'.....2........
    D600: 00 05 00 00 00 00 02 03 00 01 00 01 02 03 00 07  // ................
    D610: 03 00 02 03 00 01 00 01 02 03 00 07 03 00 02 03  // ................
    D620: 00 01 00 01 02 03 00 07 03 00 00 01 02 03 00 01  // ................
    D630: 02 03 00 07 03 00 00 01 02 03 00 01 02 03 00 07  // ................
    D640: 03 00 08 30 00 00 8D 00 00 00 07 30 00 00 4A 25  // ...0.......0..J%
    D650: 00 00 08 31 00 00 8D 00 00 00 07 31 00 00 4A 25  // ...1.......1..J%
    D660: 00 00 08 32 00 00 8D 00 00 00 07 32 00 00 4A 25  // ...2.......2..J%
    D670: 00 00 08 33 00 00 8D 00 00 00 07 33 00 00 4A 25  // ...3.......3..J%
    D680: 00 00 5A 00 00 00 05 00 00 00 EB 10 00 00 07 00  // ..Z.............
    D690: 00 00 EB 11 00 00 07 00 00 00 EB 12 00 00 07 00  // ................
    D6A0: 00 00 EB 13 00 00 07 00 00 00 FF FF FF FF 00 00  // ................
    D6B0: 00 00 1C 00 03 01 00 0C 00 00 00 00 00 00 77 01  // ..............w.
    D6C0: 35 0C C0 12 00 00 FF 00 FF 00 FF 00 00 00 34 00  // 5.............4.
    D6D0: 02 03 00 09 01 02 08 01 02 02 64 C0 00 00 65 C0  // ..........d...e.
    D6E0: 00 00 66 C0 00 00 67 C0 00 00 E8 C0 00 00 A0 21  // ..f...g........!
    D6F0: 00 00 42 EC 00 00 C0 12 00 00 08 02 00 00 25 00  // ..B...........%.
    D700: 00 00 FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D710: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D720: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D730: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D740: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D750: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D760: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D770: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D780: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D790: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D7A0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D7B0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D7C0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D7D0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D7E0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D7F0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D800: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D810: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D820: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D830: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D840: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D850: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D860: FF FF FF FF FF FF FF FF 00 00 00 00 00 00 00 00  // ................
    D870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D880: 00 00 00 00                                      // ....


WDAT
----
[000h 0000   4]                    Signature : "WDAT"    [Watchdog Action Table]
[004h 0004   4]                 Table Length : 0000017C
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : B4
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   4]                Header Length : 00000020
[028h 0040   2]                  PCI Segment : 00FF
[02Ah 0042   1]                      PCI Bus : FF
[02Bh 0043   1]                   PCI Device : FF
[02Ch 0044   1]                 PCI Function : FF
[02Dh 0045   3]                     Reserved : 000000
[030h 0048   4]                 Timer Period : 000003E8
[034h 0052   4]                    Max Count : 000003FF
[038h 0056   4]                    Min Count : 00000002
[03Ch 0060   1]        Flags (decoded below) : 81
                                     Enabled : 1
                         Stopped When Asleep : 1
[03Dh 0061   3]                     Reserved : 000000
[040h 0064   4]         Watchdog Entry Count : 0000000D

[044h 0068   1]              Watchdog Action : 01
[045h 0069   1]                  Instruction : 82
[046h 0070   2]                     Reserved : 0000

[048h 0072  12]              Register Region : [Generic Address Structure]
[048h 0072   1]                     Space ID : 00 [SystemMemory]
[049h 0073   1]                    Bit Width : 20
[04Ah 0074   1]                   Bit Offset : 00
[04Bh 0075   1]         Encoded Access Width : 03 [DWord Access:32]
[04Ch 0076   8]                      Address : 00000000FEB00000

[054h 0084   4]                        Value : 00000080
[058h 0088   4]                Register Mask : 00000080

[05Ch 0092   1]              Watchdog Action : 04
[05Dh 0093   1]                  Instruction : 01
[05Eh 0094   2]                     Reserved : 0000

[060h 0096  12]              Register Region : [Generic Address Structure]
[060h 0096   1]                     Space ID : 00 [SystemMemory]
[061h 0097   1]                    Bit Width : 20
[062h 0098   1]                   Bit Offset : 00
[063h 0099   1]         Encoded Access Width : 03 [DWord Access:32]
[064h 0100   8]                      Address : 00000000FEB00004

[06Ch 0108   4]                        Value : 00000000
[070h 0112   4]                Register Mask : 0000FFFF

[074h 0116   1]              Watchdog Action : 06
[075h 0117   1]                  Instruction : 83
[076h 0118   2]                     Reserved : 0000

[078h 0120  12]              Register Region : [Generic Address Structure]
[078h 0120   1]                     Space ID : 00 [SystemMemory]
[079h 0121   1]                    Bit Width : 20
[07Ah 0122   1]                   Bit Offset : 00
[07Bh 0123   1]         Encoded Access Width : 03 [DWord Access:32]
[07Ch 0124   8]                      Address : 00000000FEB00004

[084h 0132   4]                        Value : 00000000
[088h 0136   4]                Register Mask : 0000FFFF

[08Ch 0140   1]              Watchdog Action : 08
[08Dh 0141   1]                  Instruction : 00
[08Eh 0142   2]                     Reserved : 0000

[090h 0144  12]              Register Region : [Generic Address Structure]
[090h 0144   1]                     Space ID : 00 [SystemMemory]
[091h 0145   1]                    Bit Width : 20
[092h 0146   1]                   Bit Offset : 00
[093h 0147   1]         Encoded Access Width : 03 [DWord Access:32]
[094h 0148   8]                      Address : 00000000FEB00000

[09Ch 0156   4]                        Value : 00000001
[0A0h 0160   4]                Register Mask : 00000001

[0A4h 0164   1]              Watchdog Action : 09
[0A5h 0165   1]                  Instruction : 82
[0A6h 0166   2]                     Reserved : 0000

[0A8h 0168  12]              Register Region : [Generic Address Structure]
[0A8h 0168   1]                     Space ID : 00 [SystemMemory]
[0A9h 0169   1]                    Bit Width : 20
[0AAh 0170   1]                   Bit Offset : 00
[0ABh 0171   1]         Encoded Access Width : 03 [DWord Access:32]
[0ACh 0172   8]                      Address : 00000000FEB00000

[0B4h 0180   4]                        Value : 00000001
[0B8h 0184   4]                Register Mask : 00000001

[0BCh 0188   1]              Watchdog Action : 0A
[0BDh 0189   1]                  Instruction : 00
[0BEh 0190   2]                     Reserved : 0000

[0C0h 0192  12]              Register Region : [Generic Address Structure]
[0C0h 0192   1]                     Space ID : 00 [SystemMemory]
[0C1h 0193   1]                    Bit Width : 20
[0C2h 0194   1]                   Bit Offset : 00
[0C3h 0195   1]         Encoded Access Width : 03 [DWord Access:32]
[0C4h 0196   8]                      Address : 00000000FEB00000

[0CCh 0204   4]                        Value : 00000000
[0D0h 0208   4]                Register Mask : 00000001

[0D4h 0212   1]              Watchdog Action : 0B
[0D5h 0213   1]                  Instruction : 82
[0D6h 0214   2]                     Reserved : 0000

[0D8h 0216  12]              Register Region : [Generic Address Structure]
[0D8h 0216   1]                     Space ID : 00 [SystemMemory]
[0D9h 0217   1]                    Bit Width : 20
[0DAh 0218   1]                   Bit Offset : 00
[0DBh 0219   1]         Encoded Access Width : 03 [DWord Access:32]
[0DCh 0220   8]                      Address : 00000000FEB00000

[0E4h 0228   4]                        Value : 00000000
[0E8h 0232   4]                Register Mask : 00000001

[0ECh 0236   1]              Watchdog Action : 10
[0EDh 0237   1]                  Instruction : 00
[0EEh 0238   2]                     Reserved : 0000

[0F0h 0240  12]              Register Region : [Generic Address Structure]
[0F0h 0240   1]                     Space ID : 00 [SystemMemory]
[0F1h 0241   1]                    Bit Width : 20
[0F2h 0242   1]                   Bit Offset : 00
[0F3h 0243   1]         Encoded Access Width : 03 [DWord Access:32]
[0F4h 0244   8]                      Address : 00000000FEB00000

[0FCh 0252   4]                        Value : 00000000
[100h 0256   4]                Register Mask : 00000004

[104h 0260   1]              Watchdog Action : 11
[105h 0261   1]                  Instruction : 82
[106h 0262   2]                     Reserved : 0000

[108h 0264  12]              Register Region : [Generic Address Structure]
[108h 0264   1]                     Space ID : 00 [SystemMemory]
[109h 0265   1]                    Bit Width : 20
[10Ah 0266   1]                   Bit Offset : 00
[10Bh 0267   1]         Encoded Access Width : 03 [DWord Access:32]
[10Ch 0268   8]                      Address : 00000000FEB00000

[114h 0276   4]                        Value : 00000000
[118h 0280   4]                Register Mask : 00000004

[11Ch 0284   1]              Watchdog Action : 12
[11Dh 0285   1]                  Instruction : 00
[11Eh 0286   2]                     Reserved : 0000

[120h 0288  12]              Register Region : [Generic Address Structure]
[120h 0288   1]                     Space ID : 00 [SystemMemory]
[121h 0289   1]                    Bit Width : 20
[122h 0290   1]                   Bit Offset : 00
[123h 0291   1]         Encoded Access Width : 03 [DWord Access:32]
[124h 0292   8]                      Address : 00000000FEB00000

[12Ch 0300   4]                        Value : 00000004
[130h 0304   4]                Register Mask : 00000004

[134h 0308   1]              Watchdog Action : 13
[135h 0309   1]                  Instruction : 82
[136h 0310   2]                     Reserved : 0000

[138h 0312  12]              Register Region : [Generic Address Structure]
[138h 0312   1]                     Space ID : 00 [SystemMemory]
[139h 0313   1]                    Bit Width : 20
[13Ah 0314   1]                   Bit Offset : 00
[13Bh 0315   1]         Encoded Access Width : 03 [DWord Access:32]
[13Ch 0316   8]                      Address : 00000000FEB00000

[144h 0324   4]                        Value : 00000004
[148h 0328   4]                Register Mask : 00000004

[14Ch 0332   1]              Watchdog Action : 20
[14Dh 0333   1]                  Instruction : 00
[14Eh 0334   2]                     Reserved : 0000

[150h 0336  12]              Register Region : [Generic Address Structure]
[150h 0336   1]                     Space ID : 00 [SystemMemory]
[151h 0337   1]                    Bit Width : 20
[152h 0338   1]                   Bit Offset : 00
[153h 0339   1]         Encoded Access Width : 03 [DWord Access:32]
[154h 0340   8]                      Address : 00000000FEB00000

[15Ch 0348   4]                        Value : 00000002
[160h 0352   4]                Register Mask : 00000002

[164h 0356   1]              Watchdog Action : 21
[165h 0357   1]                  Instruction : 82
[166h 0358   2]                     Reserved : 0000

[168h 0360  12]              Register Region : [Generic Address Structure]
[168h 0360   1]                     Space ID : 00 [SystemMemory]
[169h 0361   1]                    Bit Width : 20
[16Ah 0362   1]                   Bit Offset : 00
[16Bh 0363   1]         Encoded Access Width : 03 [DWord Access:32]
[16Ch 0364   8]                      Address : 00000000FEB00000

[174h 0372   4]                        Value : 00000002
[178h 0376   4]                Register Mask : 00000002

Raw Table Data: Length 380 (0x17C)

    0000: 57 44 41 54 7C 01 00 00 01 B4 41 43 52 53 59 53  // WDAT|.....ACRSYS
    0010: 41 43 52 50 52 44 43 54 02 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 20 00 00 00 FF 00 FF FF FF 00 00 00  // .... ...........
    0030: E8 03 00 00 FF 03 00 00 02 00 00 00 81 00 00 00  // ................
    0040: 0D 00 00 00 01 82 00 00 00 20 00 03 00 00 B0 FE  // ......... ......
    0050: 00 00 00 00 80 00 00 00 80 00 00 00 04 01 00 00  // ................
    0060: 00 20 00 03 04 00 B0 FE 00 00 00 00 00 00 00 00  // . ..............
    0070: FF FF 00 00 06 83 00 00 00 20 00 03 04 00 B0 FE  // ......... ......
    0080: 00 00 00 00 00 00 00 00 FF FF 00 00 08 00 00 00  // ................
    0090: 00 20 00 03 00 00 B0 FE 00 00 00 00 01 00 00 00  // . ..............
    00A0: 01 00 00 00 09 82 00 00 00 20 00 03 00 00 B0 FE  // ......... ......
    00B0: 00 00 00 00 01 00 00 00 01 00 00 00 0A 00 00 00  // ................
    00C0: 00 20 00 03 00 00 B0 FE 00 00 00 00 00 00 00 00  // . ..............
    00D0: 01 00 00 00 0B 82 00 00 00 20 00 03 00 00 B0 FE  // ......... ......
    00E0: 00 00 00 00 00 00 00 00 01 00 00 00 10 00 00 00  // ................
    00F0: 00 20 00 03 00 00 B0 FE 00 00 00 00 00 00 00 00  // . ..............
    0100: 04 00 00 00 11 82 00 00 00 20 00 03 00 00 B0 FE  // ......... ......
    0110: 00 00 00 00 00 00 00 00 04 00 00 00 12 00 00 00  // ................
    0120: 00 20 00 03 00 00 B0 FE 00 00 00 00 04 00 00 00  // . ..............
    0130: 04 00 00 00 13 82 00 00 00 20 00 03 00 00 B0 FE  // ......... ......
    0140: 00 00 00 00 04 00 00 00 04 00 00 00 20 00 00 00  // ............ ...
    0150: 00 20 00 03 00 00 B0 FE 00 00 00 00 02 00 00 00  // . ..............
    0160: 02 00 00 00 21 82 00 00 00 20 00 03 00 00 B0 FE  // ....!.... ......
    0170: 00 00 00 00 02 00 00 00 02 00 00 00              // ............


WDRT
----
[000h 0000   4]                    Signature : "WDRT"    [Watchdog Resource Table]
[004h 0004   4]                 Table Length : 00000047
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : DD
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000


[024h 0036  12]             Control Register : [Generic Address Structure]
[024h 0036   1]                     Space ID : 00 [SystemMemory]
[025h 0037   1]                    Bit Width : 20
[026h 0038   1]                   Bit Offset : 00
[027h 0039   1]         Encoded Access Width : 03 [DWord Access:32]
[028h 0040   8]                      Address : 00000000FEB00000

[030h 0048  12]               Count Register : [Generic Address Structure]
[030h 0048   1]                     Space ID : 00 [SystemMemory]
[031h 0049   1]                    Bit Width : 20
[032h 0050   1]                   Bit Offset : 00
[033h 0051   1]         Encoded Access Width : 03 [DWord Access:32]
[034h 0052   8]                      Address : 00000000FEB00004

[03Ch 0060   2]                PCI Device ID : FFFF
[03Eh 0062   2]                PCI Vendor ID : FFFF
[040h 0064   1]                      PCI Bus : 00
[041h 0065   1]                   PCI Device : 00
[042h 0066   1]                 PCI Function : 00
[043h 0067   1]                  PCI Segment : 00
[044h 0068   2]                    Max Count : 03FF
[046h 0070   1]                Counter Units : 00

Raw Table Data: Length 71 (0x47)

    0000: 57 44 52 54 47 00 00 00 01 DD 41 43 52 53 59 53  // WDRTG.....ACRSYS
    0010: 41 43 52 50 52 44 43 54 02 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 00 20 00 03 00 00 B0 FE 00 00 00 00  // ..... ..........
    0030: 00 20 00 03 04 00 B0 FE 00 00 00 00 FF FF FF FF  // . ..............
    0040: 00 00 00 00 FF 03 00                             // .......


WSMT
----
[000h 0000   4]                    Signature : "WSMT"    [Windows SMM Security Mitigations Table]
[004h 0004   4]                 Table Length : 00000028
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 90
[00Ah 0010   6]                       Oem ID : "ACRSYS"
[010h 0016   8]                 Oem Table ID : "ACRPRDCT"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "1025"
[020h 0032   4]        Asl Compiler Revision : 00040000

[024h 0036   4]             Protection Flags : 00000007
                          FIXED_COMM_BUFFERS : 1
           COMM_BUFFER_NESTED_PTR_PROTECTION : 1
                  SYSTEM_RESOURCE_PROTECTION : 1

Raw Table Data: Length 40 (0x28)

    0000: 57 53 4D 54 28 00 00 00 01 90 41 43 52 53 59 53  // WSMT(.....ACRSYS
    0010: 41 43 52 50 52 44 43 54 01 00 00 00 31 30 32 35  // ACRPRDCT....1025
    0020: 00 00 04 00 07 00 00 00                          // ........


