
Intel ACPI Component Architecture
ACPI Binary Table Extraction Utility version 20200925
Copyright (c) 2000 - 2020 Intel Corporation


 Signature  Length    Version Oem       Oem         Oem         Compiler Compiler
                              Id        TableId     RevisionId  Name     Revision
 _________  __________  ____  ________  __________  __________  _______  __________

 01)  SSDT  0x0000024A  0x02  "PmRef "  "ApCst   "  0x00003000  "INTL"   0x20160930
 02)  MCFG  0x0000003C  0x01  "APPLE "  "Apple00 "  0x00000001  "Loki"   0x0000005F
 03)  APIC  0x0000012C  0x02  "APPLE "  "Apple00 "  0x00000001  "Loki"   0x0000005F
 04)  ECDT  0x00000053  0x01  "APPLE "  "Apple00 "  0x00000001  "Loki"   0x0000005F
 05)  SSDT  0x000005FC  0x02  "PmRef "  "ApIst   "  0x00003000  "INTL"   0x20160930
 06)  VFCT  0x0000F684  0x01  "APPLE "  "Apple00 "  0x00000001  "AMD "   0x31504F47
 07)  SSDT  0x00000031  0x01  "APPLE "  "SsdtS3  "  0x00001000  "INTL"   0x20160930
 08)  DSDT  0x000072C3  0x02  "APPLE "  "MacXX   "  0x00150001  "INTL"   0x20160930
 09)  SSDT  0x00000024  0x01  "APPLE "  "SmcDppt "  0x00001000  "INTL"   0x20160930
 10)  SBST  0x00000030  0x01  "APPLE "  "Apple00 "  0x00000001  "Loki"   0x0000005F
 11)  SSDT  0x0000D1DB  0x02  "APPLE "  "TbtPEG12"  0x00001000  "INTL"   0x20160930
 12)  SSDT  0x00001BCD  0x02  "CpuRef"  "CpuSsdt "  0x00003000  "INTL"   0x20160930
 13)  SSDT  0x00000051  0x01  "APPLE "  "SataAhci"  0x00001000  "INTL"   0x20160930
 14)  SSDT  0x00000370  0x02  "PmRef "  "Cpu0Cst "  0x00003001  "INTL"   0x20160930
 15)  DMAR  0x00000088  0x01  "APPLE "  "EDK2    "  0x00000002  "    "   0x01000013
 16)  FACP  0x000000F4  0x05  "APPLE "  "Apple00 "  0x00000000  "Loki"   0x0000005F
 17)  SSDT  0x0000051E  0x02  "PmRef "  "Cpu0Ist "  0x00003000  "INTL"   0x20160930
 18)  SSDT  0x00000AF0  0x02  "APPLE "  "PEG0GFX0"  0x00001000  "INTL"   0x20160930
 19)  SSDT  0x00000B9A  0x02  "APPLE "  "Xhci    "  0x00001000  "INTL"   0x20160930
 20)  HPET  0x00000038  0x01  "APPLE "  "Apple00 "  0x00000001  "Loki"   0x0000005F
 21)  SSDT  0x000031C6  0x02  "SaSsdt"  "SaSsdt  "  0x00003000  "INTL"   0x20160930
 22)  FACS  0x00000040  0x01
 23)  SSDT  0x000000B8  0x01  "APPLE "  "Sdxc    "  0x00001000  "INTL"   0x20160930
 24)  SSDT  0x00000AB0  0x02  "PmRef "  "ApPsd   "  0x00003000  "INTL"   0x20160930

Found 24 ACPI tables in acpidump

APIC
----
[000h 0000   4]                    Signature : "APIC"    [Multiple APIC Description Table (MADT)]
[004h 0004   4]                 Table Length : 0000012C
[008h 0008   1]                     Revision : 02
[009h 0009   1]                     Checksum : E4
[00Ah 0010   6]                       Oem ID : "APPLE "
[010h 0016   8]                 Oem Table ID : "Apple00"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "Loki"
[020h 0032   4]        Asl Compiler Revision : 0000005F

[024h 0036   4]           Local Apic Address : FEE00000
[028h 0040   4]        Flags (decoded below) : 00000001
                         PC-AT Compatibility : 1

[02Ch 0044   1]                Subtable Type : 00 [Processor Local APIC]
[02Dh 0045   1]                       Length : 08
[02Eh 0046   1]                 Processor ID : 01
[02Fh 0047   1]                Local Apic ID : 00
[030h 0048   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[034h 0052   1]                Subtable Type : 00 [Processor Local APIC]
[035h 0053   1]                       Length : 08
[036h 0054   1]                 Processor ID : 02
[037h 0055   1]                Local Apic ID : 02
[038h 0056   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[03Ch 0060   1]                Subtable Type : 00 [Processor Local APIC]
[03Dh 0061   1]                       Length : 08
[03Eh 0062   1]                 Processor ID : 03
[03Fh 0063   1]                Local Apic ID : 04
[040h 0064   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[044h 0068   1]                Subtable Type : 00 [Processor Local APIC]
[045h 0069   1]                       Length : 08
[046h 0070   1]                 Processor ID : 04
[047h 0071   1]                Local Apic ID : 06
[048h 0072   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[04Ch 0076   1]                Subtable Type : 00 [Processor Local APIC]
[04Dh 0077   1]                       Length : 08
[04Eh 0078   1]                 Processor ID : 05
[04Fh 0079   1]                Local Apic ID : 08
[050h 0080   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[054h 0084   1]                Subtable Type : 00 [Processor Local APIC]
[055h 0085   1]                       Length : 08
[056h 0086   1]                 Processor ID : 06
[057h 0087   1]                Local Apic ID : 0A
[058h 0088   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[05Ch 0092   1]                Subtable Type : 00 [Processor Local APIC]
[05Dh 0093   1]                       Length : 08
[05Eh 0094   1]                 Processor ID : 07
[05Fh 0095   1]                Local Apic ID : 0C
[060h 0096   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[064h 0100   1]                Subtable Type : 00 [Processor Local APIC]
[065h 0101   1]                       Length : 08
[066h 0102   1]                 Processor ID : 08
[067h 0103   1]                Local Apic ID : 0E
[068h 0104   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[06Ch 0108   1]                Subtable Type : 00 [Processor Local APIC]
[06Dh 0109   1]                       Length : 08
[06Eh 0110   1]                 Processor ID : 09
[06Fh 0111   1]                Local Apic ID : 01
[070h 0112   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[074h 0116   1]                Subtable Type : 00 [Processor Local APIC]
[075h 0117   1]                       Length : 08
[076h 0118   1]                 Processor ID : 0A
[077h 0119   1]                Local Apic ID : 03
[078h 0120   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[07Ch 0124   1]                Subtable Type : 00 [Processor Local APIC]
[07Dh 0125   1]                       Length : 08
[07Eh 0126   1]                 Processor ID : 0B
[07Fh 0127   1]                Local Apic ID : 05
[080h 0128   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[084h 0132   1]                Subtable Type : 00 [Processor Local APIC]
[085h 0133   1]                       Length : 08
[086h 0134   1]                 Processor ID : 0C
[087h 0135   1]                Local Apic ID : 07
[088h 0136   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[08Ch 0140   1]                Subtable Type : 00 [Processor Local APIC]
[08Dh 0141   1]                       Length : 08
[08Eh 0142   1]                 Processor ID : 0D
[08Fh 0143   1]                Local Apic ID : 09
[090h 0144   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[094h 0148   1]                Subtable Type : 00 [Processor Local APIC]
[095h 0149   1]                       Length : 08
[096h 0150   1]                 Processor ID : 0E
[097h 0151   1]                Local Apic ID : 0B
[098h 0152   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[09Ch 0156   1]                Subtable Type : 00 [Processor Local APIC]
[09Dh 0157   1]                       Length : 08
[09Eh 0158   1]                 Processor ID : 0F
[09Fh 0159   1]                Local Apic ID : 0D
[0A0h 0160   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[0A4h 0164   1]                Subtable Type : 00 [Processor Local APIC]
[0A5h 0165   1]                       Length : 08
[0A6h 0166   1]                 Processor ID : 10
[0A7h 0167   1]                Local Apic ID : 0F
[0A8h 0168   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[0ACh 0172   1]                Subtable Type : 01 [I/O APIC]
[0ADh 0173   1]                       Length : 0C
[0AEh 0174   1]                  I/O Apic ID : 02
[0AFh 0175   1]                     Reserved : 00
[0B0h 0176   4]                      Address : FEC00000
[0B4h 0180   4]                    Interrupt : 00000000

[0B8h 0184   1]                Subtable Type : 02 [Interrupt Source Override]
[0B9h 0185   1]                       Length : 0A
[0BAh 0186   1]                          Bus : 00
[0BBh 0187   1]                       Source : 00
[0BCh 0188   4]                    Interrupt : 00000002
[0C0h 0192   2]        Flags (decoded below) : 0000
                                    Polarity : 0
                                Trigger Mode : 0

[0C2h 0194   1]                Subtable Type : 02 [Interrupt Source Override]
[0C3h 0195   1]                       Length : 0A
[0C4h 0196   1]                          Bus : 00
[0C5h 0197   1]                       Source : 09
[0C6h 0198   4]                    Interrupt : 00000009
[0CAh 0202   2]        Flags (decoded below) : 000D
                                    Polarity : 1
                                Trigger Mode : 3

[0CCh 0204   1]                Subtable Type : 04 [Local APIC NMI]
[0CDh 0205   1]                       Length : 06
[0CEh 0206   1]                 Processor ID : 01
[0CFh 0207   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0D1h 0209   1]         Interrupt Input LINT : 01

[0D2h 0210   1]                Subtable Type : 04 [Local APIC NMI]
[0D3h 0211   1]                       Length : 06
[0D4h 0212   1]                 Processor ID : 02
[0D5h 0213   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0D7h 0215   1]         Interrupt Input LINT : 01

[0D8h 0216   1]                Subtable Type : 04 [Local APIC NMI]
[0D9h 0217   1]                       Length : 06
[0DAh 0218   1]                 Processor ID : 03
[0DBh 0219   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0DDh 0221   1]         Interrupt Input LINT : 01

[0DEh 0222   1]                Subtable Type : 04 [Local APIC NMI]
[0DFh 0223   1]                       Length : 06
[0E0h 0224   1]                 Processor ID : 04
[0E1h 0225   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0E3h 0227   1]         Interrupt Input LINT : 01

[0E4h 0228   1]                Subtable Type : 04 [Local APIC NMI]
[0E5h 0229   1]                       Length : 06
[0E6h 0230   1]                 Processor ID : 05
[0E7h 0231   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0E9h 0233   1]         Interrupt Input LINT : 01

[0EAh 0234   1]                Subtable Type : 04 [Local APIC NMI]
[0EBh 0235   1]                       Length : 06
[0ECh 0236   1]                 Processor ID : 06
[0EDh 0237   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0EFh 0239   1]         Interrupt Input LINT : 01

[0F0h 0240   1]                Subtable Type : 04 [Local APIC NMI]
[0F1h 0241   1]                       Length : 06
[0F2h 0242   1]                 Processor ID : 07
[0F3h 0243   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0F5h 0245   1]         Interrupt Input LINT : 01

[0F6h 0246   1]                Subtable Type : 04 [Local APIC NMI]
[0F7h 0247   1]                       Length : 06
[0F8h 0248   1]                 Processor ID : 08
[0F9h 0249   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0FBh 0251   1]         Interrupt Input LINT : 01

[0FCh 0252   1]                Subtable Type : 04 [Local APIC NMI]
[0FDh 0253   1]                       Length : 06
[0FEh 0254   1]                 Processor ID : 09
[0FFh 0255   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[101h 0257   1]         Interrupt Input LINT : 01

[102h 0258   1]                Subtable Type : 04 [Local APIC NMI]
[103h 0259   1]                       Length : 06
[104h 0260   1]                 Processor ID : 0A
[105h 0261   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[107h 0263   1]         Interrupt Input LINT : 01

[108h 0264   1]                Subtable Type : 04 [Local APIC NMI]
[109h 0265   1]                       Length : 06
[10Ah 0266   1]                 Processor ID : 0B
[10Bh 0267   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[10Dh 0269   1]         Interrupt Input LINT : 01

[10Eh 0270   1]                Subtable Type : 04 [Local APIC NMI]
[10Fh 0271   1]                       Length : 06
[110h 0272   1]                 Processor ID : 0C
[111h 0273   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[113h 0275   1]         Interrupt Input LINT : 01

[114h 0276   1]                Subtable Type : 04 [Local APIC NMI]
[115h 0277   1]                       Length : 06
[116h 0278   1]                 Processor ID : 0D
[117h 0279   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[119h 0281   1]         Interrupt Input LINT : 01

[11Ah 0282   1]                Subtable Type : 04 [Local APIC NMI]
[11Bh 0283   1]                       Length : 06
[11Ch 0284   1]                 Processor ID : 0E
[11Dh 0285   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[11Fh 0287   1]         Interrupt Input LINT : 01

[120h 0288   1]                Subtable Type : 04 [Local APIC NMI]
[121h 0289   1]                       Length : 06
[122h 0290   1]                 Processor ID : 0F
[123h 0291   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[125h 0293   1]         Interrupt Input LINT : 01

[126h 0294   1]                Subtable Type : 04 [Local APIC NMI]
[127h 0295   1]                       Length : 06
[128h 0296   1]                 Processor ID : 10
[129h 0297   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[12Bh 0299   1]         Interrupt Input LINT : 01

Raw Table Data: Length 300 (0x12C)

    0000: 41 50 49 43 2C 01 00 00 02 E4 41 50 50 4C 45 20  // APIC,.....APPLE 
    0010: 41 70 70 6C 65 30 30 00 01 00 00 00 4C 6F 6B 69  // Apple00.....Loki
    0020: 5F 00 00 00 00 00 E0 FE 01 00 00 00 00 08 01 00  // _...............
    0030: 01 00 00 00 00 08 02 02 01 00 00 00 00 08 03 04  // ................
    0040: 01 00 00 00 00 08 04 06 01 00 00 00 00 08 05 08  // ................
    0050: 01 00 00 00 00 08 06 0A 01 00 00 00 00 08 07 0C  // ................
    0060: 01 00 00 00 00 08 08 0E 01 00 00 00 00 08 09 01  // ................
    0070: 01 00 00 00 00 08 0A 03 01 00 00 00 00 08 0B 05  // ................
    0080: 01 00 00 00 00 08 0C 07 01 00 00 00 00 08 0D 09  // ................
    0090: 01 00 00 00 00 08 0E 0B 01 00 00 00 00 08 0F 0D  // ................
    00A0: 01 00 00 00 00 08 10 0F 01 00 00 00 01 0C 02 00  // ................
    00B0: 00 00 C0 FE 00 00 00 00 02 0A 00 00 02 00 00 00  // ................
    00C0: 00 00 02 0A 00 09 09 00 00 00 0D 00 04 06 01 05  // ................
    00D0: 00 01 04 06 02 05 00 01 04 06 03 05 00 01 04 06  // ................
    00E0: 04 05 00 01 04 06 05 05 00 01 04 06 06 05 00 01  // ................
    00F0: 04 06 07 05 00 01 04 06 08 05 00 01 04 06 09 05  // ................
    0100: 00 01 04 06 0A 05 00 01 04 06 0B 05 00 01 04 06  // ................
    0110: 0C 05 00 01 04 06 0D 05 00 01 04 06 0E 05 00 01  // ................
    0120: 04 06 0F 05 00 01 04 06 10 05 00 01              // ............


DMAR
----
[000h 0000   4]                    Signature : "DMAR"    [DMA Remapping table]
[004h 0004   4]                 Table Length : 00000088
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 77
[00Ah 0010   6]                       Oem ID : "APPLE "
[010h 0016   8]                 Oem Table ID : "EDK2    "
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "    "
[020h 0032   4]        Asl Compiler Revision : 01000013

[024h 0036   1]           Host Address Width : 26
[025h 0037   1]                        Flags : 01
[026h 0038  10]                     Reserved : 00 00 00 00 00 00 00 00 00 00

[030h 0048   2]                Subtable Type : 0000 [Hardware Unit Definition]
[032h 0050   2]                       Length : 0018

[034h 0052   1]                        Flags : 00
[035h 0053   1]                     Reserved : 00
[036h 0054   2]           PCI Segment Number : 0000
[038h 0056   8]        Register Base Address : 00000000FED90000

[040h 0064   1]            Device Scope Type : 01 [PCI Endpoint Device]
[041h 0065   1]                 Entry Length : 08
[042h 0066   2]                     Reserved : 0000
[044h 0068   1]               Enumeration ID : 00
[045h 0069   1]               PCI Bus Number : 00

[046h 0070   2]                     PCI Path : 02,00


[048h 0072   2]                Subtable Type : 0000 [Hardware Unit Definition]
[04Ah 0074   2]                       Length : 0020

[04Ch 0076   1]                        Flags : 01
[04Dh 0077   1]                     Reserved : 00
[04Eh 0078   2]           PCI Segment Number : 0000
[050h 0080   8]        Register Base Address : 00000000FED91000

[058h 0088   1]            Device Scope Type : 03 [IOAPIC Device]
[059h 0089   1]                 Entry Length : 08
[05Ah 0090   2]                     Reserved : 0000
[05Ch 0092   1]               Enumeration ID : 02
[05Dh 0093   1]               PCI Bus Number : 00

[05Eh 0094   2]                     PCI Path : 1E,07


[060h 0096   1]            Device Scope Type : 04 [Message-capable HPET Device]
[061h 0097   1]                 Entry Length : 08
[062h 0098   2]                     Reserved : 0000
[064h 0100   1]               Enumeration ID : 00
[065h 0101   1]               PCI Bus Number : 00

[066h 0102   2]                     PCI Path : 1E,06


[068h 0104   2]                Subtable Type : 0001 [Reserved Memory Region]
[06Ah 0106   2]                       Length : 0020

[06Ch 0108   2]                     Reserved : 0000
[06Eh 0110   2]           PCI Segment Number : 0000
[070h 0112   8]                 Base Address : 000000007B800000
[078h 0120   8]          End Address (limit) : 000000007FFFFFFF

[080h 0128   1]            Device Scope Type : 01 [PCI Endpoint Device]
[081h 0129   1]                 Entry Length : 08
[082h 0130   2]                     Reserved : 0000
[084h 0132   1]               Enumeration ID : 00
[085h 0133   1]               PCI Bus Number : 00

[086h 0134   2]                     PCI Path : 02,00


Raw Table Data: Length 136 (0x88)

    0000: 44 4D 41 52 88 00 00 00 01 77 41 50 50 4C 45 20  // DMAR.....wAPPLE 
    0010: 45 44 4B 32 20 20 20 20 02 00 00 00 20 20 20 20  // EDK2    ....    
    0020: 13 00 00 01 26 01 00 00 00 00 00 00 00 00 00 00  // ....&...........
    0030: 00 00 18 00 00 00 00 00 00 00 D9 FE 00 00 00 00  // ................
    0040: 01 08 00 00 00 00 02 00 00 00 20 00 01 00 00 00  // .......... .....
    0050: 00 10 D9 FE 00 00 00 00 03 08 00 00 02 00 1E 07  // ................
    0060: 04 08 00 00 00 00 1E 06 01 00 20 00 00 00 00 00  // .......... .....
    0070: 00 00 80 7B 00 00 00 00 FF FF FF 7F 00 00 00 00  // ...{............
    0080: 01 08 00 00 00 00 02 00                          // ........


DSDT
----
DefinitionBlock ("", "DSDT", 2, "APPLE ", "MacXX", 0x00150001)
{
    External (_PR_.CFGD, UnknownObj)
    External (_PR_.CPPC, FieldUnitObj)
    External (_PR_.CPU0._PPC, IntObj)
    External (_SB_.PCI0.IGPU.CLID, UnknownObj)
    External (_SB_.PCI0.IGPU.GEFC, UnknownObj)
    External (_SB_.PCI0.IGPU.GSCI, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.IGPU.GSSE, UnknownObj)
    External (_SB_.PCI0.IGPU.IDSM, MethodObj)    // 4 Arguments
    External (_SB_.PCI0.IGPU.SCIE, UnknownObj)
    External (_SB_.PCI0.PEG0.EGP0.EGP1.GFX0, UnknownObj)
    External (_SB_.PCI0.PEG1.DTFP, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.PEG1.ICMB, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.PEG1.UPSB.LSTX, MethodObj)    // 2 Arguments
    External (_SB_.PCI0.PEG2.DTFP, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.PEG2.ICMB, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.PEG2.UPSB.LSTX, MethodObj)    // 2 Arguments
    External (_SB_.PCI0.TGPE, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.XHC1, DeviceObj)
    External (ADP1, DeviceObj)
    External (ADSP, UnknownObj)    // Conflicts with a later declaration
    External (BT19, UnknownObj)    // Conflicts with a later declaration
    External (D318, FieldUnitObj)
    External (D319, FieldUnitObj)
    External (D31A, FieldUnitObj)
    External (D31C, FieldUnitObj)
    External (D320, FieldUnitObj)
    External (D324, FieldUnitObj)
    External (D418, FieldUnitObj)
    External (D419, FieldUnitObj)
    External (D41A, FieldUnitObj)
    External (D41C, FieldUnitObj)
    External (D420, FieldUnitObj)
    External (D424, FieldUnitObj)
    External (D518, FieldUnitObj)
    External (D519, FieldUnitObj)
    External (D51A, FieldUnitObj)
    External (D51C, FieldUnitObj)
    External (D520, FieldUnitObj)
    External (D524, FieldUnitObj)
    External (D618, FieldUnitObj)
    External (D619, FieldUnitObj)
    External (D61A, FieldUnitObj)
    External (D61C, FieldUnitObj)
    External (D620, FieldUnitObj)
    External (D624, FieldUnitObj)
    External (DP18, FieldUnitObj)
    External (DP19, FieldUnitObj)
    External (DP1A, FieldUnitObj)
    External (DP1C, FieldUnitObj)
    External (DP20, FieldUnitObj)
    External (DP24, FieldUnitObj)
    External (GSMI, UnknownObj)
    External (LID0, DeviceObj)
    External (LIDS, UnknownObj)
    External (LVME, UnknownObj)    // Conflicts with a later declaration
    External (M64B, UnknownObj)
    External (M64L, UnknownObj)
    External (NH10, FieldUnitObj)
    External (NH14, FieldUnitObj)
    External (NPKA, UnknownObj)    // Conflicts with a later declaration
    External (PDC0, UnknownObj)
    External (PDC1, UnknownObj)
    External (PDC2, UnknownObj)
    External (PDC3, UnknownObj)
    External (PDC4, UnknownObj)
    External (PDC5, UnknownObj)
    External (PDC6, UnknownObj)
    External (PDC7, UnknownObj)
    External (R_20, FieldUnitObj)
    External (R_24, FieldUnitObj)
    External (SMCB, FieldUnitObj)
    External (UP18, FieldUnitObj)
    External (UP19, FieldUnitObj)
    External (UP1A, FieldUnitObj)
    External (UP1C, FieldUnitObj)
    External (UP20, FieldUnitObj)
    External (UP24, FieldUnitObj)

    Name (SP2O, 0x4E)
    Name (SP1O, 0x164E)
    Name (IO1B, 0x0600)
    Name (IO1L, 0x70)
    Name (IO2B, 0x0680)
    Name (IO2L, 0x20)
    Name (IO3B, 0x0290)
    Name (IO3L, 0x10)
    Name (SP3O, 0x2E)
    Name (IO4B, 0x0A20)
    Name (IO4L, 0x20)
    Name (MCHB, 0xFED10000)
    Name (MCHL, 0x4000)
    Name (EGPB, 0xFED19000)
    Name (EGPL, 0x1000)
    Name (DMIB, 0xFED18000)
    Name (DMIL, 0x1000)
    Name (IFPB, 0xFED14000)
    Name (IFPL, 0x1000)
    Name (PEBS, 0xE0000000)
    Name (PELN, 0x04000000)
    Name (TTTB, 0xFED20000)
    Name (TTTL, 0x00020000)
    Name (SMBS, 0xEFA0)
    Name (SMBL, 0x10)
    Name (PBLK, 0x1810)
    Name (LVL2, 0x1814)
    Name (LVL3, 0x1815)
    Name (LVL4, 0x1816)
    Name (SMIP, 0xB2)
    Name (GPBS, 0x0800)
    Name (GPLN, 0x80)
    Name (APCB, 0xFEC00000)
    Name (APCL, 0x1000)
    Name (PM30, 0x1830)
    Name (SUSW, 0xFF)
    Name (HPTC, 0xFED1C404)
    Name (ACPH, 0xDE)
    Name (ASSB, Zero)
    Name (AOTB, Zero)
    Name (AAXB, Zero)
    Name (PEHP, One)
    Name (SHPC, One)
    Name (PEPM, One)
    Name (PEER, One)
    Name (PECS, One)
    Name (ITKE, Zero)
    Name (DSSP, Zero)
    Name (FHPP, One)
    Name (FMBL, One)
    Name (FDTP, 0x02)
    Name (BSH, Zero)
    Name (BEL, One)
    Name (BEH, 0x02)
    Name (BRH, 0x03)
    Name (BTF, 0x04)
    Name (BHC, 0x05)
    Name (BYB, 0x06)
    Name (BPH, 0x07)
    Name (BSHS, 0x08)
    Name (BELS, 0x09)
    Name (BRHS, 0x0A)
    Name (BTFS, 0x0B)
    Name (BEHS, 0x0C)
    Name (BPHS, 0x0D)
    Name (BTL, 0x10)
    Name (BOF, 0x20)
    Name (BEF, 0x21)
    Name (BLLE, 0x22)
    Name (BLLC, 0x23)
    Name (BLCA, 0x24)
    Name (TCGM, One)
    Name (TRTP, One)
    Name (TRTD, 0x02)
    Name (TRTI, 0x03)
    Name (GCDD, One)
    Name (DSTA, 0x0A)
    Name (DSLO, 0x0C)
    Name (DSLC, 0x0E)
    Name (PITS, 0x10)
    Name (SBCS, 0x12)
    Name (SALS, 0x13)
    Name (LSSS, 0x2A)
    Name (SOOT, 0x35)
    Name (PDBR, 0x4D)
    Name (WOWE, Zero)
    Name (TAPD, Zero)
    OperationRegion (GNVS, SystemMemory, 0x7AF18E18, 0x0185)
    Field (GNVS, AnyAcc, Lock, Preserve)
    {
        OSYS,   16, 
        SMIF,   8, 
        PRM0,   8, 
        PRM1,   8, 
        SCIF,   8, 
        PRM2,   8, 
        PRM3,   8, 
        LCKF,   8, 
        PRM4,   8, 
        PRM5,   8, 
        P80D,   32, 
        Offset (0x10), 
        PWRS,   8, 
        DBGS,   8, 
        THOF,   8, 
        ACT1,   8, 
        ACTT,   8, 
        PSVT,   8, 
        TC1V,   8, 
        TC2V,   8, 
        TSPV,   8, 
        CRTT,   8, 
        DTSE,   8, 
        DTS1,   8, 
        DTS2,   8, 
        DTSF,   8, 
        Offset (0x25), 
        REVN,   8, 
        Offset (0x28), 
        APIC,   8, 
        TCNT,   8, 
        PCP0,   8, 
        PCP1,   8, 
        PPCM,   8, 
        PPMF,   32, 
        C67L,   8, 
        NATP,   8, 
        CMAP,   8, 
        CMBP,   8, 
        LPTP,   8, 
        FDCP,   8, 
        CMCP,   8, 
        CIRP,   8, 
        SMSC,   8, 
        W381,   8, 
        SMC1,   8, 
        EMAE,   8, 
        EMAP,   16, 
        EMAL,   16, 
        Offset (0x42), 
        MEFE,   8, 
        DSTS,   8, 
        Offset (0x46), 
        TPMP,   8, 
        TPME,   8, 
        MORD,   8, 
        TCGP,   8, 
        PPRP,   32, 
        PPRQ,   8, 
        LPPR,   8, 
        GTF0,   56, 
        GTF2,   56, 
        IDEM,   8, 
        GTF1,   56, 
        BDID,   8, 
        Offset (0x78), 
        OSCC,   8, 
        NEXP,   8, 
        SDGV,   8, 
        SDDV,   8, 
        Offset (0x81), 
        DSEN,   8, 
        ECON,   8, 
        GPIC,   8, 
        CTYP,   8, 
        L01C,   8, 
        VFN0,   8, 
        VFN1,   8, 
        ATMC,   8, 
        PTMC,   8, 
        ATRA,   8, 
        PTRA,   8, 
        PNHM,   32, 
        TBAB,   32, 
        TBAH,   32, 
        RTIP,   8, 
        TSOD,   8, 
        ATPC,   8, 
        PTPC,   8, 
        PFLV,   8, 
        BREV,   8, 
        DPBM,   8, 
        DPCM,   8, 
        DPDM,   8, 
        SDID,   8, 
        BLCP,   8, 
        BLCC,   8, 
        LDSB,   8, 
        BLCT,   32, 
        BLCB,   32, 
        BICM,   1, 
        ISWI,   1, 
        USBD,   1, 
        Offset (0xAE), 
        U2OP,   8, 
        Offset (0xBA), 
        GVNV,   32, 
        MM64,   8, 
        MFIX,   8, 
        Offset (0xDC), 
        NVME,   8, 
        Offset (0xDE), 
        DFUW,   8, 
        SMCB,   32, 
        Offset (0x12C), 
        BIC1,   8, 
        BIC2,   8, 
        NHI1,   32, 
        T2P1,   32, 
        TUP1,   32, 
        TDB1,   32, 
        TNH1,   32, 
        TD11,   32, 
        TD21,   32, 
        TD41,   32, 
        NHI2,   32, 
        T2P2,   32, 
        TUP2,   32, 
        TDB2,   32, 
        TNH2,   32, 
        TD12,   32, 
        TD22,   32, 
        TD42,   32, 
        ABRV,   8, 
        ABID,   64, 
        MAC0,   8, 
        MAC1,   8, 
        MAC2,   8, 
        MAC3,   8, 
        MAC4,   8, 
        MAC5,   8, 
        AGID,   32, 
        RWC0,   8, 
        RWC1,   8, 
        RWC2,   8, 
        RWC3,   8
    }

    Scope (_SB)
    {
        Name (PR00, Package (0x21)
        {
            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                LNKA, 
                Zero
            }
        })
        Name (AR00, Package (0x2D)
        {
            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                0x03, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x14
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                One, 
                Zero, 
                0x15
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                0x02, 
                Zero, 
                0x16
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                0x03, 
                Zero, 
                0x17
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                0x03, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                0x03, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                0x03, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x15
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                One, 
                Zero, 
                0x16
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                0x02, 
                Zero, 
                0x17
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                0x03, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                0x03, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                0x03, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x14
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x03, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x10
            }
        })
        Name (PR04, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR04, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })
        Name (PR05, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })
        Name (AR05, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })
        Name (PR06, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })
        Name (AR06, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })
        Name (PR07, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKC, 
                Zero
            }
        })
        Name (AR07, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x12
            }
        })
        Name (PR08, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR08, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })
        Name (PR09, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR09, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })
        Name (PR0E, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })
        Name (AR0E, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })
        Name (PR0F, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKC, 
                Zero
            }
        })
        Name (AR0F, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x12
            }
        })
        Name (PR02, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })
        Name (AR02, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })
        Name (PR0A, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })
        Name (AR0A, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })
        Name (PR0B, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })
        Name (AR0B, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })
        Name (PR0C, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKA, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKB, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKC, 
                Zero
            }
        })
        Name (AR0C, Package (0x04)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x13
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x10
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x11
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x12
            }
        })
        Name (PR01, Package (0x0C)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKF, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKH, 
                Zero
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                One, 
                LNKF, 
                Zero
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x02, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x03, 
                LNKH, 
                Zero
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                One, 
                LNKE, 
                Zero
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                0x02, 
                LNKG, 
                Zero
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                0x03, 
                LNKF, 
                Zero
            }
        })
        Name (AR01, Package (0x0C)
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x15
            }, 

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x16
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x17
            }, 

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x14
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x16
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                One, 
                Zero, 
                0x15
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x02, 
                Zero, 
                0x14
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                0x03, 
                Zero, 
                0x17
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x12
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                One, 
                Zero, 
                0x14
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                0x02, 
                Zero, 
                0x16
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                0x03, 
                Zero, 
                0x15
            }
        })
        Name (PRSA, ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {3,4,5,6,7,10,11,12,14,15}
        })
        Alias (PRSA, PRSB)
        Alias (PRSA, PRSC)
        Alias (PRSA, PRSD)
        Alias (PRSA, PRSE)
        Alias (PRSA, PRSF)
        Alias (PRSA, PRSG)
        Alias (PRSA, PRSH)
        Device (PCI0)
        {
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (_ADR, Zero)  // _ADR: Address
            Method (^BN00, 0, NotSerialized)
            {
                Return (Zero)
            }

            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
            {
                Return (BN00 ())
            }

            Name (_UID, Zero)  // _UID: Unique ID
            Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
            {
                If (PICM)
                {
                    Return (AR00 ())
                }

                Return (PR00 ())
            }

            OperationRegion (HBUS, PCI_Config, Zero, 0x0100)
            Field (HBUS, DWordAcc, NoLock, Preserve)
            {
                Offset (0x40), 
                EPEN,   1, 
                    ,   11, 
                EPBR,   20, 
                Offset (0x48), 
                MHEN,   1, 
                    ,   14, 
                MHBR,   17, 
                Offset (0x50), 
                GCLK,   1, 
                Offset (0x54), 
                D0EN,   1, 
                Offset (0x60), 
                PXEN,   1, 
                PXSZ,   2, 
                    ,   23, 
                PXBR,   6, 
                Offset (0x68), 
                DIEN,   1, 
                    ,   11, 
                DIBR,   20, 
                Offset (0x70), 
                    ,   20, 
                MEBR,   12, 
                Offset (0x80), 
                    ,   4, 
                PM0H,   2, 
                Offset (0x81), 
                PM1L,   2, 
                    ,   2, 
                PM1H,   2, 
                Offset (0x82), 
                PM2L,   2, 
                    ,   2, 
                PM2H,   2, 
                Offset (0x83), 
                PM3L,   2, 
                    ,   2, 
                PM3H,   2, 
                Offset (0x84), 
                PM4L,   2, 
                    ,   2, 
                PM4H,   2, 
                Offset (0x85), 
                PM5L,   2, 
                    ,   2, 
                PM5H,   2, 
                Offset (0x86), 
                PM6L,   2, 
                    ,   2, 
                PM6H,   2, 
                Offset (0x87), 
                Offset (0xA8), 
                    ,   20, 
                TUUD,   19, 
                Offset (0xBC), 
                    ,   20, 
                TLUD,   12, 
                Offset (0xC8), 
                    ,   7, 
                HTSE,   1
            }

            OperationRegion (MCHT, SystemMemory, 0xFED10000, 0x6000)
            Field (MCHT, ByteAcc, NoLock, Preserve)
            {
                Offset (0x5994), 
                RPSL,   8, 
                Offset (0x5998), 
                RP0C,   8, 
                RP1C,   8, 
                RPNC,   8
            }

            Name (BUF0, ResourceTemplate ()
            {
                WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x00FF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0100,             // Length
                    ,, )
                DWordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x00000000,         // Granularity
                    0x00000000,         // Range Minimum
                    0x00000CF7,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00000CF8,         // Length
                    ,, , TypeStatic, DenseTranslation)
                IO (Decode16,
                    0x0CF8,             // Range Minimum
                    0x0CF8,             // Range Maximum
                    0x01,               // Alignment
                    0x08,               // Length
                    )
                DWordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x00000000,         // Granularity
                    0x00000D00,         // Range Minimum
                    0x0000FFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x0000F300,         // Length
                    ,, , TypeStatic, DenseTranslation)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000A0000,         // Range Minimum
                    0x000BFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00020000,         // Length
                    ,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C0000,         // Range Minimum
                    0x000C3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y00, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C4000,         // Range Minimum
                    0x000C7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y01, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C8000,         // Range Minimum
                    0x000CBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y02, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000CC000,         // Range Minimum
                    0x000CFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y03, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D0000,         // Range Minimum
                    0x000D3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y04, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D4000,         // Range Minimum
                    0x000D7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y05, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D8000,         // Range Minimum
                    0x000DBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y06, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000DC000,         // Range Minimum
                    0x000DFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y07, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E0000,         // Range Minimum
                    0x000E3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y08, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E4000,         // Range Minimum
                    0x000E7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y09, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E8000,         // Range Minimum
                    0x000EBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y0A, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000EC000,         // Range Minimum
                    0x000EFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y0B, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000F0000,         // Range Minimum
                    0x000FFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00010000,         // Length
                    ,, _Y0C, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x00000000,         // Range Minimum
                    0xFEAFFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0xFEB00000,         // Length
                    ,, _Y0D, AddressRangeMemory, TypeStatic)
                QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x0000000000000000, // Granularity
                    0x0000000000010000, // Range Minimum
                    0x000000000001FFFF, // Range Maximum
                    0x0000000000000000, // Translation Offset
                    0x0000000000010000, // Length
                    ,, _Y0E, AddressRangeMemory, TypeStatic)
            })
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                If (PM1L)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y00._LEN, C0LN)  // _LEN: Length
                    C0LN = Zero
                }

                If ((PM1L == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y00._RW, C0RW)  // _RW_: Read-Write Status
                    C0RW = Zero
                }

                If (PM1H)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y01._LEN, C4LN)  // _LEN: Length
                    C4LN = Zero
                }

                If ((PM1H == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y01._RW, C4RW)  // _RW_: Read-Write Status
                    C4RW = Zero
                }

                If (PM2L)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y02._LEN, C8LN)  // _LEN: Length
                    C8LN = Zero
                }

                If ((PM2L == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y02._RW, C8RW)  // _RW_: Read-Write Status
                    C8RW = Zero
                }

                If (PM2H)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y03._LEN, CCLN)  // _LEN: Length
                    CCLN = Zero
                }

                If ((PM2H == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y03._RW, CCRW)  // _RW_: Read-Write Status
                    CCRW = Zero
                }

                If (PM3L)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y04._LEN, D0LN)  // _LEN: Length
                    D0LN = Zero
                }

                If ((PM3L == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y04._RW, D0RW)  // _RW_: Read-Write Status
                    D0RW = Zero
                }

                If (PM3H)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y05._LEN, D4LN)  // _LEN: Length
                    D4LN = Zero
                }

                If ((PM3H == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y05._RW, D4RW)  // _RW_: Read-Write Status
                    D4RW = Zero
                }

                If (PM4L)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y06._LEN, D8LN)  // _LEN: Length
                    D8LN = Zero
                }

                If ((PM4L == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y06._RW, D8RW)  // _RW_: Read-Write Status
                    D8RW = Zero
                }

                If (PM4H)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y07._LEN, DCLN)  // _LEN: Length
                    DCLN = Zero
                }

                If ((PM4H == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y07._RW, DCRW)  // _RW_: Read-Write Status
                    DCRW = Zero
                }

                If (PM5L)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y08._LEN, E0LN)  // _LEN: Length
                    E0LN = Zero
                }

                If ((PM5L == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y08._RW, E0RW)  // _RW_: Read-Write Status
                    E0RW = Zero
                }

                If (PM5H)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y09._LEN, E4LN)  // _LEN: Length
                    E4LN = Zero
                }

                If ((PM5H == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y09._RW, E4RW)  // _RW_: Read-Write Status
                    E4RW = Zero
                }

                If (PM6L)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y0A._LEN, E8LN)  // _LEN: Length
                    E8LN = Zero
                }

                If ((PM6L == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y0A._RW, E8RW)  // _RW_: Read-Write Status
                    E8RW = Zero
                }

                If (PM6H)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y0B._LEN, ECLN)  // _LEN: Length
                    ECLN = Zero
                }

                If ((PM6H == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y0B._RW, ECRW)  // _RW_: Read-Write Status
                    ECRW = Zero
                }

                If (PM0H)
                {
                    CreateDWordField (BUF0, \_SB.PCI0._Y0C._LEN, F0LN)  // _LEN: Length
                    F0LN = Zero
                }

                If ((PM0H == One))
                {
                    CreateBitField (BUF0, \_SB.PCI0._Y0C._RW, F0RW)  // _RW_: Read-Write Status
                    F0RW = Zero
                }

                CreateDWordField (BUF0, \_SB.PCI0._Y0D._MIN, M1MN)  // _MIN: Minimum Base Address
                CreateDWordField (BUF0, \_SB.PCI0._Y0D._MAX, M1MX)  // _MAX: Maximum Base Address
                CreateDWordField (BUF0, \_SB.PCI0._Y0D._LEN, M1LN)  // _LEN: Length
                M1MN = (TLUD << 0x14)
                M1LN = ((M1MX - M1MN) + One)
                If ((M64L == Zero))
                {
                    CreateQWordField (BUF0, \_SB.PCI0._Y0E._LEN, MSLN)  // _LEN: Length
                    MSLN = Zero
                }
                Else
                {
                    CreateQWordField (BUF0, \_SB.PCI0._Y0E._LEN, M2LN)  // _LEN: Length
                    CreateQWordField (BUF0, \_SB.PCI0._Y0E._MIN, M2MN)  // _MIN: Minimum Base Address
                    CreateQWordField (BUF0, \_SB.PCI0._Y0E._MAX, M2MX)  // _MAX: Maximum Base Address
                    M2LN = M64L /* External reference */
                    M2MN = M64B /* External reference */
                    M2MX = ((M2MN + M2LN) - One)
                }

                Return (BUF0) /* \_SB_.PCI0.BUF0 */
            }

            Method (NHPG, 0, Serialized)
            {
            }

            Method (NPME, 0, Serialized)
            {
            }

            Name (GUID, ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */)
            Name (SUPP, Zero)
            Name (CTRL, Zero)
            Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
            {
                Local0 = Arg3
                CreateDWordField (Local0, Zero, CDW1)
                CreateDWordField (Local0, 0x04, CDW2)
                CreateDWordField (Local0, 0x08, CDW3)
                SUPP = CDW2 /* \_SB_.PCI0._OSC.CDW2 */
                CTRL = CDW3 /* \_SB_.PCI0._OSC.CDW3 */
                If ((One == OSDW ()))
                {
                    If (((Arg0 == GUID) && NEXP))
                    {
                        If (~(CDW1 & One))
                        {
                            If ((CTRL & 0x02))
                            {
                                NHPG ()
                            }

                            If ((CTRL & 0x04))
                            {
                                NPME ()
                            }
                        }

                        If ((Arg1 != One))
                        {
                            CDW1 |= 0x08
                        }

                        If ((CDW3 != CTRL))
                        {
                            CDW1 |= 0x10
                        }

                        CDW3 = CTRL /* \_SB_.PCI0.CTRL */
                        OSCC = CTRL /* \_SB_.PCI0.CTRL */
                        Return (Local0)
                    }
                    Else
                    {
                        CDW1 |= 0x04
                        Return (Local0)
                    }
                }
                Else
                {
                    If ((Arg0 == GUID)) {}
                    Return (Local0)
                }
            }

            Scope (\_SB.PCI0)
            {
                Method (AR00, 0, NotSerialized)
                {
                    Return (^^AR00) /* \_SB_.AR00 */
                }

                Method (PR00, 0, NotSerialized)
                {
                    Return (^^PR00) /* \_SB_.PR00 */
                }

                Method (AR01, 0, NotSerialized)
                {
                    Return (^^AR01) /* \_SB_.AR01 */
                }

                Method (PR01, 0, NotSerialized)
                {
                    Return (^^PR01) /* \_SB_.PR01 */
                }

                Method (AR02, 0, NotSerialized)
                {
                    Return (^^AR02) /* \_SB_.AR02 */
                }

                Method (PR02, 0, NotSerialized)
                {
                    Return (^^PR02) /* \_SB_.PR02 */
                }

                Method (AR04, 0, NotSerialized)
                {
                    Return (^^AR04) /* \_SB_.AR04 */
                }

                Method (PR04, 0, NotSerialized)
                {
                    Return (^^PR04) /* \_SB_.PR04 */
                }

                Method (AR05, 0, NotSerialized)
                {
                    Return (^^AR05) /* \_SB_.AR05 */
                }

                Method (PR05, 0, NotSerialized)
                {
                    Return (^^PR05) /* \_SB_.PR05 */
                }

                Method (AR06, 0, NotSerialized)
                {
                    Return (^^AR06) /* \_SB_.AR06 */
                }

                Method (PR06, 0, NotSerialized)
                {
                    Return (^^PR06) /* \_SB_.PR06 */
                }

                Method (AR07, 0, NotSerialized)
                {
                    Return (^^AR07) /* \_SB_.AR07 */
                }

                Method (PR07, 0, NotSerialized)
                {
                    Return (^^PR07) /* \_SB_.PR07 */
                }

                Method (AR08, 0, NotSerialized)
                {
                    Return (^^AR08) /* \_SB_.AR08 */
                }

                Method (PR08, 0, NotSerialized)
                {
                    Return (^^PR08) /* \_SB_.PR08 */
                }

                Method (AR09, 0, NotSerialized)
                {
                    Return (^^AR09) /* \_SB_.AR09 */
                }

                Method (PR09, 0, NotSerialized)
                {
                    Return (^^PR09) /* \_SB_.PR09 */
                }

                Method (AR0A, 0, NotSerialized)
                {
                    Return (^^AR0A) /* \_SB_.AR0A */
                }

                Method (PR0A, 0, NotSerialized)
                {
                    Return (^^PR0A) /* \_SB_.PR0A */
                }

                Method (AR0B, 0, NotSerialized)
                {
                    Return (^^AR0B) /* \_SB_.AR0B */
                }

                Method (PR0B, 0, NotSerialized)
                {
                    Return (^^PR0B) /* \_SB_.PR0B */
                }
            }

            Device (MCHC)
            {
                Name (_ADR, Zero)  // _ADR: Address
            }

            Device (PEG0)
            {
                Name (_ADR, 0x00010000)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If (OSDW ())
                    {
                        Return (Package (0x02)
                        {
                            0x69, 
                            0x03
                        })
                    }
                    Else
                    {
                        Return (Package (0x02)
                        {
                            0x69, 
                            0x03
                        })
                    }
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR02 ())
                    }

                    Return (PR02 ())
                }
            }

            Device (PEG1)
            {
                Name (_ADR, 0x00010001)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If (OSDW ())
                    {
                        Return (Package (0x02)
                        {
                            0x69, 
                            0x03
                        })
                    }
                    Else
                    {
                        Return (Package (0x02)
                        {
                            0x69, 
                            0x03
                        })
                    }
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR0A ())
                    }

                    Return (PR0A ())
                }
            }

            Device (PEG2)
            {
                Name (_ADR, 0x00010002)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If (OSDW ())
                    {
                        Return (Package (0x02)
                        {
                            0x69, 
                            0x03
                        })
                    }
                    Else
                    {
                        Return (Package (0x02)
                        {
                            0x69, 
                            0x03
                        })
                    }
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR0B ())
                    }

                    Return (PR0B ())
                }
            }

            Device (IGPU)
            {
                Name (_ADR, 0x00020000)  // _ADR: Address
                OperationRegion (GFXH, PCI_Config, Zero, 0x40)
                Field (GFXH, ByteAcc, NoLock, Preserve)
                {
                    VID0,   16, 
                    DID0,   16
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    IDSM (Arg0, Arg1, Arg2, Arg3)
                    Return (Zero)
                }

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {
                    If (OSDW ())
                    {
                        LVME = Zero
                        BT19 = One
                        ADSP = Zero
                        NPKA = One
                    }
                }

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {
                    If (OSDW ())
                    {
                        NPKA = Zero
                        ADSP = One
                        BT19 = Zero
                        LVME = One
                    }
                }
            }

            Device (IPU0)
            {
                Name (_ADR, 0x00050000)  // _ADR: Address
            }

            Device (IMEI)
            {
                Name (_ADR, 0x00160000)  // _ADR: Address
            }

            Device (RP01)
            {
                Name (_ADR, 0x001C0000)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If (OSDW ())
                    {
                        Return (Package (0x02)
                        {
                            0x69, 
                            0x03
                        })
                    }
                    Else
                    {
                        Return (Package (0x02)
                        {
                            0x69, 
                            0x04
                        })
                    }
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR04 ())
                    }

                    Return (PR04 ())
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b") /* Unknown UUID */))
                    {
                        Local0 = Package (0x02)
                            {
                                "reg-ltrovr", 
                                Buffer (0x08)
                                {
                                     0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                }
                            }
                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }

                    Return (Zero)
                }
            }

            Device (RP17)
            {
                Name (_ADR, 0x001B0000)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If (OSDW ())
                    {
                        Return (Package (0x02)
                        {
                            0x69, 
                            0x03
                        })
                    }
                    Else
                    {
                        Return (Package (0x02)
                        {
                            0x69, 
                            0x03
                        })
                    }
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (PICM)
                    {
                        Return (AR04 ())
                    }

                    Return (PR04 ())
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b") /* Unknown UUID */))
                    {
                        Local0 = Package (0x04)
                            {
                                "reg-ltrovr", 
                                Buffer (0x08)
                                {
                                     0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                }, 

                                "apple-coprocessor-version", 
                                Buffer (0x08)
                                {
                                     0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                }
                            }
                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }

                    Return (Zero)
                }
            }

            Device (LPCB)
            {
                Name (_ADR, 0x001F0000)  // _ADR: Address
                Scope (\_SB)
                {
                    OperationRegion (PCI0.LPCB.LPC1, PCI_Config, 0x40, 0xC0)
                    Field (PCI0.LPCB.LPC1, AnyAcc, NoLock, Preserve)
                    {
                        Offset (0x20), 
                        PARC,   8, 
                        PBRC,   8, 
                        PCRC,   8, 
                        PDRC,   8, 
                        Offset (0x28), 
                        PERC,   8, 
                        PFRC,   8, 
                        PGRC,   8, 
                        PHRC,   8
                    }

                    Device (LNKA)
                    {
                        Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                        Name (_UID, One)  // _UID: Unique ID
                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
                        {
                            PARC |= 0x80
                        }

                        Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
                        {
                            IRQ (Level, ActiveLow, Shared, )
                                {1,3,4,5,6,7,10,12,14,15}
                        })
                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                        {
                            Name (RTLA, ResourceTemplate ()
                            {
                                IRQ (Level, ActiveLow, Shared, )
                                    {}
                            })
                            CreateWordField (RTLA, One, IRQ0)
                            IRQ0 = Zero
                            IRQ0 = (One << (PARC & 0x0F))
                            Return (RTLA) /* \_SB_.LNKA._CRS.RTLA */
                        }

                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
                        {
                            CreateWordField (Arg0, One, IRQ0)
                            FindSetRightBit (IRQ0, Local0)
                            Local0--
                            PARC = Local0
                        }

                        Method (_STA, 0, Serialized)  // _STA: Status
                        {
                            If ((PARC & 0x80))
                            {
                                Return (0x09)
                            }
                            Else
                            {
                                Return (0x0B)
                            }
                        }
                    }

                    Device (LNKB)
                    {
                        Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                        Name (_UID, 0x02)  // _UID: Unique ID
                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
                        {
                            PBRC |= 0x80
                        }

                        Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
                        {
                            IRQ (Level, ActiveLow, Shared, )
                                {1,3,4,5,6,7,11,12,14,15}
                        })
                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                        {
                            Name (RTLB, ResourceTemplate ()
                            {
                                IRQ (Level, ActiveLow, Shared, )
                                    {}
                            })
                            CreateWordField (RTLB, One, IRQ0)
                            IRQ0 = Zero
                            IRQ0 = (One << (PBRC & 0x0F))
                            Return (RTLB) /* \_SB_.LNKB._CRS.RTLB */
                        }

                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
                        {
                            CreateWordField (Arg0, One, IRQ0)
                            FindSetRightBit (IRQ0, Local0)
                            Local0--
                            PBRC = Local0
                        }

                        Method (_STA, 0, Serialized)  // _STA: Status
                        {
                            If ((PBRC & 0x80))
                            {
                                Return (0x09)
                            }
                            Else
                            {
                                Return (0x0B)
                            }
                        }
                    }

                    Device (LNKC)
                    {
                        Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                        Name (_UID, 0x03)  // _UID: Unique ID
                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
                        {
                            PCRC |= 0x80
                        }

                        Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
                        {
                            IRQ (Level, ActiveLow, Shared, )
                                {1,3,4,5,6,7,10,12,14,15}
                        })
                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                        {
                            Name (RTLC, ResourceTemplate ()
                            {
                                IRQ (Level, ActiveLow, Shared, )
                                    {}
                            })
                            CreateWordField (RTLC, One, IRQ0)
                            IRQ0 = Zero
                            IRQ0 = (One << (PCRC & 0x0F))
                            Return (RTLC) /* \_SB_.LNKC._CRS.RTLC */
                        }

                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
                        {
                            CreateWordField (Arg0, One, IRQ0)
                            FindSetRightBit (IRQ0, Local0)
                            Local0--
                            PCRC = Local0
                        }

                        Method (_STA, 0, Serialized)  // _STA: Status
                        {
                            If ((PCRC & 0x80))
                            {
                                Return (0x09)
                            }
                            Else
                            {
                                Return (0x0B)
                            }
                        }
                    }

                    Device (LNKD)
                    {
                        Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                        Name (_UID, 0x04)  // _UID: Unique ID
                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
                        {
                            PDRC |= 0x80
                        }

                        Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
                        {
                            IRQ (Level, ActiveLow, Shared, )
                                {1,3,4,5,6,7,11,12,14,15}
                        })
                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                        {
                            Name (RTLD, ResourceTemplate ()
                            {
                                IRQ (Level, ActiveLow, Shared, )
                                    {}
                            })
                            CreateWordField (RTLD, One, IRQ0)
                            IRQ0 = Zero
                            IRQ0 = (One << (PDRC & 0x0F))
                            Return (RTLD) /* \_SB_.LNKD._CRS.RTLD */
                        }

                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
                        {
                            CreateWordField (Arg0, One, IRQ0)
                            FindSetRightBit (IRQ0, Local0)
                            Local0--
                            PDRC = Local0
                        }

                        Method (_STA, 0, Serialized)  // _STA: Status
                        {
                            If ((PDRC & 0x80))
                            {
                                Return (0x09)
                            }
                            Else
                            {
                                Return (0x0B)
                            }
                        }
                    }

                    Device (LNKE)
                    {
                        Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                        Name (_UID, 0x05)  // _UID: Unique ID
                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
                        {
                            PERC |= 0x80
                        }

                        Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
                        {
                            IRQ (Level, ActiveLow, Shared, )
                                {1,3,4,5,6,7,10,12,14,15}
                        })
                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                        {
                            Name (RTLE, ResourceTemplate ()
                            {
                                IRQ (Level, ActiveLow, Shared, )
                                    {}
                            })
                            CreateWordField (RTLE, One, IRQ0)
                            IRQ0 = Zero
                            IRQ0 = (One << (PERC & 0x0F))
                            Return (RTLE) /* \_SB_.LNKE._CRS.RTLE */
                        }

                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
                        {
                            CreateWordField (Arg0, One, IRQ0)
                            FindSetRightBit (IRQ0, Local0)
                            Local0--
                            PERC = Local0
                        }

                        Method (_STA, 0, Serialized)  // _STA: Status
                        {
                            If ((PERC & 0x80))
                            {
                                Return (0x09)
                            }
                            Else
                            {
                                Return (0x0B)
                            }
                        }
                    }

                    Device (LNKF)
                    {
                        Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                        Name (_UID, 0x06)  // _UID: Unique ID
                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
                        {
                            PFRC |= 0x80
                        }

                        Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
                        {
                            IRQ (Level, ActiveLow, Shared, )
                                {1,3,4,5,6,7,11,12,14,15}
                        })
                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                        {
                            Name (RTLF, ResourceTemplate ()
                            {
                                IRQ (Level, ActiveLow, Shared, )
                                    {}
                            })
                            CreateWordField (RTLF, One, IRQ0)
                            IRQ0 = Zero
                            IRQ0 = (One << (PFRC & 0x0F))
                            Return (RTLF) /* \_SB_.LNKF._CRS.RTLF */
                        }

                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
                        {
                            CreateWordField (Arg0, One, IRQ0)
                            FindSetRightBit (IRQ0, Local0)
                            Local0--
                            PFRC = Local0
                        }

                        Method (_STA, 0, Serialized)  // _STA: Status
                        {
                            If ((PFRC & 0x80))
                            {
                                Return (0x09)
                            }
                            Else
                            {
                                Return (0x0B)
                            }
                        }
                    }

                    Device (LNKG)
                    {
                        Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                        Name (_UID, 0x07)  // _UID: Unique ID
                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
                        {
                            PGRC |= 0x80
                        }

                        Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
                        {
                            IRQ (Level, ActiveLow, Shared, )
                                {1,3,4,5,6,7,10,12,14,15}
                        })
                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                        {
                            Name (RTLG, ResourceTemplate ()
                            {
                                IRQ (Level, ActiveLow, Shared, )
                                    {}
                            })
                            CreateWordField (RTLG, One, IRQ0)
                            IRQ0 = Zero
                            IRQ0 = (One << (PGRC & 0x0F))
                            Return (RTLG) /* \_SB_.LNKG._CRS.RTLG */
                        }

                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
                        {
                            CreateWordField (Arg0, One, IRQ0)
                            FindSetRightBit (IRQ0, Local0)
                            Local0--
                            PGRC = Local0
                        }

                        Method (_STA, 0, Serialized)  // _STA: Status
                        {
                            If ((PGRC & 0x80))
                            {
                                Return (0x09)
                            }
                            Else
                            {
                                Return (0x0B)
                            }
                        }
                    }

                    Device (LNKH)
                    {
                        Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                        Name (_UID, 0x08)  // _UID: Unique ID
                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
                        {
                            PHRC |= 0x80
                        }

                        Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
                        {
                            IRQ (Level, ActiveLow, Shared, )
                                {1,3,4,5,6,7,11,12,14,15}
                        })
                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                        {
                            Name (RTLH, ResourceTemplate ()
                            {
                                IRQ (Level, ActiveLow, Shared, )
                                    {}
                            })
                            CreateWordField (RTLH, One, IRQ0)
                            IRQ0 = Zero
                            IRQ0 = (One << (PHRC & 0x0F))
                            Return (RTLH) /* \_SB_.LNKH._CRS.RTLH */
                        }

                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
                        {
                            CreateWordField (Arg0, One, IRQ0)
                            FindSetRightBit (IRQ0, Local0)
                            Local0--
                            PHRC = Local0
                        }

                        Method (_STA, 0, Serialized)  // _STA: Status
                        {
                            If ((PHRC & 0x80))
                            {
                                Return (0x09)
                            }
                            Else
                            {
                                Return (0x0B)
                            }
                        }
                    }
                }

                OperationRegion (LPC0, PCI_Config, 0x40, 0xC0)
                Field (LPC0, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x40), 
                    IOD0,   8, 
                    IOD1,   8, 
                    Offset (0xB0), 
                    RAEN,   1, 
                        ,   13
                }

                Device (DMAC)
                {
                    Name (_HID, EisaId ("PNP0200") /* PC-class DMA Controller */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x01,               // Alignment
                            0x20,               // Length
                            )
                        IO (Decode16,
                            0x0081,             // Range Minimum
                            0x0081,             // Range Maximum
                            0x01,               // Alignment
                            0x11,               // Length
                            )
                        IO (Decode16,
                            0x0093,             // Range Minimum
                            0x0093,             // Range Maximum
                            0x01,               // Alignment
                            0x0D,               // Length
                            )
                        IO (Decode16,
                            0x00C0,             // Range Minimum
                            0x00C0,             // Range Maximum
                            0x01,               // Alignment
                            0x20,               // Length
                            )
                        DMA (Compatibility, NotBusMaster, Transfer8_16, )
                            {4}
                    })
                }

                Device (FWHD)
                {
                    Name (_HID, EisaId ("INT0800") /* Intel 82802 Firmware Hub Device */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        Memory32Fixed (ReadOnly,
                            0xFF000000,         // Address Base
                            0x01000000,         // Address Length
                            )
                    })
                }

                Device (HPET)
                {
                    Name (_HID, EisaId ("PNP0103") /* HPET System Timer */)  // _HID: Hardware ID
                    Name (_CID, EisaId ("PNP0C01") /* System Board */)  // _CID: Compatible ID
                    Name (BUF0, ResourceTemplate ()
                    {
                        IRQNoFlags ()
                            {0}
                        IRQNoFlags ()
                            {8}
                        Memory32Fixed (ReadWrite,
                            0xFED00000,         // Address Base
                            0x00004000,         // Address Length
                            )
                    })
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If (OSDW ())
                        {
                            Return (Zero)
                        }

                        If ((OSYS >= 0x07D1))
                        {
                            Return (0x0F)
                        }
                        Else
                        {
                            Return (0x0B)
                        }

                        Return (Zero)
                    }

                    Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                    {
                        Return (BUF0) /* \_SB_.PCI0.LPCB.HPET.BUF0 */
                    }
                }

                Device (IPIC)
                {
                    Name (_HID, EisaId ("PNP0000") /* 8259-compatible Programmable Interrupt Controller */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0020,             // Range Minimum
                            0x0020,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0024,             // Range Minimum
                            0x0024,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0028,             // Range Minimum
                            0x0028,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x002C,             // Range Minimum
                            0x002C,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0030,             // Range Minimum
                            0x0030,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0034,             // Range Minimum
                            0x0034,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0038,             // Range Minimum
                            0x0038,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x003C,             // Range Minimum
                            0x003C,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00A0,             // Range Minimum
                            0x00A0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00A4,             // Range Minimum
                            0x00A4,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00A8,             // Range Minimum
                            0x00A8,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00AC,             // Range Minimum
                            0x00AC,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00B0,             // Range Minimum
                            0x00B0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00B4,             // Range Minimum
                            0x00B4,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00B8,             // Range Minimum
                            0x00B8,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00BC,             // Range Minimum
                            0x00BC,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x04D0,             // Range Minimum
                            0x04D0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IRQNoFlags ()
                            {2}
                    })
                }

                Device (MATH)
                {
                    Name (_HID, EisaId ("PNP0C04") /* x87-compatible Floating Point Processing Unit */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x00F0,             // Range Minimum
                            0x00F0,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IRQNoFlags ()
                            {13}
                    })
                }

                Device (LDRC)
                {
                    Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                    Name (_UID, 0x02)  // _UID: Unique ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x002E,             // Range Minimum
                            0x002E,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x004E,             // Range Minimum
                            0x004E,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0061,             // Range Minimum
                            0x0061,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0063,             // Range Minimum
                            0x0063,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0065,             // Range Minimum
                            0x0065,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0067,             // Range Minimum
                            0x0067,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0080,             // Range Minimum
                            0x0080,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0092,             // Range Minimum
                            0x0092,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x00B2,             // Range Minimum
                            0x00B2,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0xFFFF,             // Range Minimum
                            0xFFFF,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x1800,             // Range Minimum
                            0x1800,             // Range Maximum
                            0x01,               // Alignment
                            0xFF,               // Length
                            )
                        IO (Decode16,
                            0x0800,             // Range Minimum
                            0x0800,             // Range Maximum
                            0x01,               // Alignment
                            0x80,               // Length
                            )
                    })
                }

                Device (ARTC)
                {
                    Name (_HID, "ACPI000E" /* Time and Alarm Device */)  // _HID: Hardware ID
                    Method (_GCP, 0, NotSerialized)  // _GCP: Get Capabilities
                    {
                        Return (0x05)
                    }

                    Method (_GRT, 0, Serialized)  // _GRT: Get Real Time
                    {
                        Name (BUFF, Buffer (0x10) {})
                        BUFF [Zero] = ^^EC.YRLB /* \_SB_.PCI0.LPCB.EC__.YRLB */
                        BUFF [One] = ^^EC.YRMB /* \_SB_.PCI0.LPCB.EC__.YRMB */
                        BUFF [0x02] = ^^EC.MNTH /* \_SB_.PCI0.LPCB.EC__.MNTH */
                        BUFF [0x03] = ^^EC.DAYB /* \_SB_.PCI0.LPCB.EC__.DAYB */
                        BUFF [0x04] = ^^EC.HOUR /* \_SB_.PCI0.LPCB.EC__.HOUR */
                        BUFF [0x05] = ^^EC.MINT /* \_SB_.PCI0.LPCB.EC__.MINT */
                        BUFF [0x06] = ^^EC.SECD /* \_SB_.PCI0.LPCB.EC__.SECD */
                        BUFF [0x07] = ^^EC.PAD0 /* \_SB_.PCI0.LPCB.EC__.PAD0 */
                        BUFF [0x08] = ^^EC.MSLB /* \_SB_.PCI0.LPCB.EC__.MSLB */
                        BUFF [0x09] = ^^EC.MSMB /* \_SB_.PCI0.LPCB.EC__.MSMB */
                        BUFF [0x0A] = ^^EC.TZLB /* \_SB_.PCI0.LPCB.EC__.TZLB */
                        BUFF [0x0B] = ^^EC.TZMB /* \_SB_.PCI0.LPCB.EC__.TZMB */
                        BUFF [0x0C] = ^^EC.DAYL /* \_SB_.PCI0.LPCB.EC__.DAYL */
                        BUFF [0x0D] = ^^EC.PAD1 /* \_SB_.PCI0.LPCB.EC__.PAD1 */
                        BUFF [0x0E] = ^^EC.PAD2 /* \_SB_.PCI0.LPCB.EC__.PAD2 */
                        BUFF [0x0F] = ^^EC.PAD3 /* \_SB_.PCI0.LPCB.EC__.PAD3 */
                        Return (BUFF) /* \_SB_.PCI0.LPCB.ARTC._GRT.BUFF */
                    }

                    Method (_SRT, 1, Serialized)  // _SRT: Set Real Time
                    {
                        ^^EC.YRLB = DerefOf (Arg0 [Zero])
                        ^^EC.YRMB = DerefOf (Arg0 [One])
                        ^^EC.MNTH = DerefOf (Arg0 [0x02])
                        ^^EC.DAYB = DerefOf (Arg0 [0x03])
                        ^^EC.HOUR = DerefOf (Arg0 [0x04])
                        ^^EC.MINT = DerefOf (Arg0 [0x05])
                        ^^EC.SECD = DerefOf (Arg0 [0x06])
                        ^^EC.MSLB = DerefOf (Arg0 [0x08])
                        ^^EC.MSMB = DerefOf (Arg0 [0x09])
                        ^^EC.TZLB = DerefOf (Arg0 [0x0A])
                        ^^EC.TZMB = DerefOf (Arg0 [0x0B])
                        ^^EC.DAYL = DerefOf (Arg0 [0x0C])
                        Return (Zero)
                    }

                    Method (_STV, 2, Serialized)  // _STV: Set Timer Value
                    {
                        ^^EC.ALR0 = (Arg1 & 0xFF)
                        ^^EC.ALR1 = ((Arg1 >> 0x08) & 0xFF)
                        ^^EC.ALR2 = ((Arg1 >> 0x10) & 0xFF)
                        ^^EC.ALR3 = ((Arg1 >> 0x18) & 0xFF)
                        Return (Zero)
                    }

                    Method (_CWS, 1, Serialized)  // _CWS: Clear Wake Alarm Status
                    {
                        ^^EC.TMRF = Zero
                        ^^EC.TMRW = Zero
                        Return (Zero)
                    }
                }

                Device (TIMR)
                {
                    Name (_HID, EisaId ("PNP0100") /* PC-class System Timer */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0040,             // Range Minimum
                            0x0040,             // Range Maximum
                            0x01,               // Alignment
                            0x04,               // Length
                            )
                        IO (Decode16,
                            0x0050,             // Range Minimum
                            0x0050,             // Range Maximum
                            0x10,               // Alignment
                            0x04,               // Length
                            )
                    })
                }

                Device (SMC)
                {
                    Name (_HID, EisaId ("APP0001"))  // _HID: Hardware ID
                    Name (_CID, "smc-huronriver")  // _CID: Compatible ID
                    Name (_STA, 0x0B)  // _STA: Status
                    Name (BUF0, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0300,             // Range Minimum
                            0x0300,             // Range Maximum
                            0x01,               // Alignment
                            0x20,               // Length
                            )
                        Memory32Fixed (ReadWrite,
                            0x00000000,         // Address Base
                            0x00010000,         // Address Length
                            _Y0F)
                        IRQNoFlags ()
                            {6}
                    })
                    Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                    {
                        CreateDWordField (BUF0, \_SB.PCI0.LPCB.SMC._Y0F._BAS, SBA0)  // _BAS: Base Address
                        SBA0 = SMCB /* \SMCB */
                        Return (BUF0) /* \_SB_.PCI0.LPCB.SMC_.BUF0 */
                    }
                }

                Device (EC)
                {
                    Name (_HID, EisaId ("PNP0C09") /* Embedded Controller Device */)  // _HID: Hardware ID
                    Name (_UID, Zero)  // _UID: Unique ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0062,             // Range Minimum
                            0x0062,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0066,             // Range Minimum
                            0x0066,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                    })
                    Name (_GPE, 0x6E)  // _GPE: General Purpose Events
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        If (OSDW ())
                        {
                            Return (Package (0x02)
                            {
                                0x6F, 
                                0x04
                            })
                        }
                        Else
                        {
                            Return (Package (0x02)
                            {
                                0x6F, 
                                0x03
                            })
                        }
                    }

                    Name (ECOK, Zero)
                    OperationRegion (ECOR, EmbeddedControl, Zero, 0xFF)
                    Field (ECOR, ByteAcc, NoLock, Preserve)
                    {
                        ECVS,   8, 
                        Offset (0x02), 
                        Offset (0x03), 
                        G3HT,   1, 
                            ,   5, 
                        LVME,   1, 
                        PRST,   1, 
                        WBCB,   1, 
                        DSLP,   1, 
                        Offset (0x05), 
                        Offset (0x06), 
                        WKRS,   8, 
                        Offset (0x09), 
                        LDSB,   8, 
                        Offset (0x0B), 
                        TBPW,   4, 
                        Offset (0x0C), 
                        Offset (0x0D), 
                        CMDS,   8, 
                        DATA,   8, 
                        INDX,   8, 
                        ECSS,   8, 
                        RRST,   8, 
                        ALB0,   8, 
                        ALB1,   8, 
                        WTLB,   8, 
                        WTMB,   8, 
                        Offset (0x20), 
                        SPTR,   8, 
                        SSTS,   8, 
                        SADR,   8, 
                        SCMD,   8, 
                        SBFR,   256, 
                        SCNT,   8, 
                        SAAD,   8, 
                        SAD0,   8, 
                        SAD1,   8, 
                        SMUX,   8, 
                        Offset (0x54), 
                        POR0,   8, 
                        POR1,   8, 
                        POR2,   8, 
                        POR3,   8, 
                        PWRP,   8, 
                        PWQP,   8, 
                        PSRP,   8, 
                        PSQP,   8, 
                        Offset (0x60), 
                        ELSW,   1, 
                        EACP,   1, 
                        ECDI,   1, 
                        ENMI,   1, 
                        Offset (0x61), 
                        EMHP,   1, 
                        PSOC,   1, 
                        PCIR,   1, 
                        TBPS,   1, 
                        Offset (0x62), 
                        Offset (0x63), 
                        Offset (0x64), 
                        SWLO,   1, 
                        SWLC,   1, 
                        SWAI,   1, 
                        SWAR,   1, 
                        SWCI,   1, 
                        SWCE,   1, 
                        SWMI,   1, 
                        SWMR,   1, 
                        SWPB,   1, 
                        SWGP,   1, 
                        SWPM,   1, 
                        SWWT,   1, 
                        SWLB,   1, 
                        SWTP,   1, 
                        SWWL,   1, 
                        Offset (0x66), 
                        SWUC,   1, 
                            ,   1, 
                        SWBT,   1, 
                        SWDF,   1, 
                        SWSD,   1, 
                        SWOL,   1, 
                        SWEP,   1, 
                        SWTB,   1, 
                        SWCL,   1, 
                        Offset (0x68), 
                        EWLO,   1, 
                        EWLC,   1, 
                        EWAI,   1, 
                        EWAR,   1, 
                        EWCI,   1, 
                        EWCE,   1, 
                        EWMI,   1, 
                        EWMR,   1, 
                        EWPB,   1, 
                        EWGP,   1, 
                        EWPM,   1, 
                        ENWT,   1, 
                        EWLB,   1, 
                        EWDK,   1, 
                        EWLN,   1, 
                        Offset (0x6A), 
                        EWUC,   1, 
                            ,   1, 
                        EWBT,   1, 
                        EWDF,   1, 
                        EWSD,   1, 
                        EWOL,   1, 
                        EWEP,   1, 
                        EWTB,   1, 
                        EWCL,   1, 
                        Offset (0x6C), 
                        LWLO,   1, 
                        LWLC,   1, 
                        LWAI,   1, 
                        LWAR,   1, 
                        LWCI,   1, 
                        LWCE,   1, 
                        LWMI,   1, 
                        LWMR,   1, 
                        LWPB,   1, 
                        LWGP,   1, 
                        LWPM,   1, 
                        LWWT,   1, 
                        LWLB,   1, 
                        LWTP,   1, 
                        LWLN,   1, 
                        Offset (0x6E), 
                        LWUC,   1, 
                            ,   1, 
                        LWBT,   1, 
                        LWDF,   1, 
                        LWSD,   1, 
                        LWOL,   1, 
                        LWEP,   1, 
                        LWTB,   1, 
                        Offset (0x70), 
                        LWSR,   1, 
                        LWPN,   1, 
                        LWCL,   1, 
                            ,   8, 
                            ,   8, 
                            ,   8, 
                            ,   8, 
                        Offset (0x7C), 
                        ALRA,   1, 
                        ALRD,   1, 
                        GSRT,   1, 
                        RTMS,   1, 
                        Offset (0x7D), 
                        TMRF,   1, 
                        TMRW,   1, 
                        Offset (0x80), 
                        YRLB,   8, 
                        YRMB,   8, 
                        MNTH,   8, 
                        DAYB,   8, 
                        HOUR,   8, 
                        MINT,   8, 
                        SECD,   8, 
                        PAD0,   8, 
                        MSLB,   8, 
                        MSMB,   8, 
                        TZLB,   8, 
                        TZMB,   8, 
                        DAYL,   8, 
                        PAD1,   8, 
                        PAD2,   8, 
                        PAD3,   8, 
                        ALR0,   8, 
                        ALR1,   8, 
                        ALR2,   8, 
                        ALR3,   8
                    }

                    Field (ECOR, ByteAcc, Lock, Preserve)
                    {
                        Offset (0x03), 
                        G3AD,   1, 
                        BLOD,   1, 
                        S4WE,   1, 
                        APWC,   1, 
                        BTPC,   1, 
                        SOCR,   1, 
                        Offset (0x04), 
                        Offset (0x0A), 
                        SDPW,   1, 
                            ,   1, 
                        BTDW,   1, 
                        Offset (0x0B), 
                        Offset (0x6C), 
                        LWE0,   8, 
                        LWE1,   8, 
                        LWE2,   8, 
                        LWE3,   8, 
                        LWE4,   8, 
                        LWE5,   8, 
                        LWE6,   8, 
                        LWE7,   8
                    }

                    Field (ECOR, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x24), 
                        SBDW,   16, 
                        Offset (0x46), 
                        SADW,   16
                    }

                    Method (RSTB, 2, Serialized)
                    {
                        Local0 = Arg1
                        Local0 += (Arg0 << 0x05)
                        RRST = Local0
                        Local1 = Zero
                        While ((RRST == Local0))
                        {
                            If ((Local1 > 0x64))
                            {
                                Local1 = One
                                Break
                            }

                            Sleep (0x0A)
                            Local1++
                        }

                        Return (RRST) /* \_SB_.PCI0.LPCB.EC__.RRST */
                    }

                    Method (WAKE, 0, NotSerialized)
                    {
                        If (ECOK)
                        {
                            Return (WKRS) /* \_SB_.PCI0.LPCB.EC__.WKRS */
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    Method (SETP, 3, NotSerialized)
                    {
                        If ((Arg0 == Zero))
                        {
                            If ((Arg1 == Zero))
                            {
                                PWRP = Arg2
                            }
                            ElseIf ((Arg1 == One))
                            {
                                PWQP = Arg2
                            }
                        }
                        ElseIf ((Arg0 == One))
                        {
                            If ((Arg1 == Zero))
                            {
                                PSRP = Arg2
                            }
                            ElseIf ((Arg1 == One))
                            {
                                PSQP = Arg2
                            }
                        }
                    }

                    Method (RQOP, 1, NotSerialized)
                    {
                        Local0 = (Arg0 & 0xFF)
                        POR0 = Local0
                        Local0 = ((Arg0 >> 0x08) & 0xFF)
                        POR1 = Local0
                        Local0 = ((Arg0 >> 0x10) & 0xFF)
                        POR2 = Local0
                        Local0 = ((Arg0 >> 0x18) & 0xFF)
                        POR3 = Local0
                    }

                    Method (QROP, 0, NotSerialized)
                    {
                        Local0 = POR0 /* \_SB_.PCI0.LPCB.EC__.POR0 */
                        Local1 = POR1 /* \_SB_.PCI0.LPCB.EC__.POR1 */
                        Local0 += (Local1 << 0x08)
                        Local1 = POR2 /* \_SB_.PCI0.LPCB.EC__.POR2 */
                        Local0 += (Local1 << 0x10)
                        Local1 = POR3 /* \_SB_.PCI0.LPCB.EC__.POR3 */
                        Local0 += (Local1 << 0x18)
                        Return (Local0)
                    }

                    Method (PORS, 2, NotSerialized)
                    {
                        If ((Arg0 == Zero))
                        {
                            If ((Arg1 == Zero))
                            {
                                Return (PWRP) /* \_SB_.PCI0.LPCB.EC__.PWRP */
                            }
                            ElseIf ((Arg1 == One))
                            {
                                Return (PWQP) /* \_SB_.PCI0.LPCB.EC__.PWQP */
                            }
                        }
                        ElseIf ((Arg0 == One))
                        {
                            If ((Arg1 == Zero))
                            {
                                Return (PSRP) /* \_SB_.PCI0.LPCB.EC__.PSRP */
                            }
                            ElseIf ((Arg1 == One))
                            {
                                Return (PSQP) /* \_SB_.PCI0.LPCB.EC__.PSQP */
                            }
                        }

                        Return (0xFF)
                    }

                    Device (SMB0)
                    {
                        Name (_HID, "ACPI0001" /* SMBus 1.0 Host Controller */)  // _HID: Hardware ID
                        Name (_EC, 0x2010)  // _EC_: Embedded Controller
                        Mutex (SMTX, 0x00)
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            If (OSDW ())
                            {
                                Return (0x0F)
                            }
                            Else
                            {
                                Return (Zero)
                            }
                        }

                        Device (SBS0)
                        {
                            Name (_HID, "ACPI0002" /* Smart Battery Subsystem */)  // _HID: Hardware ID
                            Name (_SBS, One)  // _SBS: Smart Battery Subsystem
                        }

                        Method (SBPC, 1, NotSerialized)
                        {
                            Local0 = Arg0
                            While (Local0)
                            {
                                If ((SPTR == Zero))
                                {
                                    Return ((SSTS & 0x1F))
                                }

                                Sleep (One)
                                Local0--
                            }

                            Return (0x18)
                        }

                        Method (SBRW, 3, NotSerialized)
                        {
                            Local0 = One
                            If (!Acquire (SMTX, 0xFFFF))
                            {
                                If ((SPTR == Zero))
                                {
                                    SADR = (Arg0 << One)
                                    SCMD = Arg1
                                    SPTR = 0x09
                                    Local0 = SBPC (0x03E8)
                                    If (!Local0)
                                    {
                                        Arg2 = SBDW /* \_SB_.PCI0.LPCB.EC__.SBDW */
                                    }
                                }

                                Release (SMTX)
                            }

                            Return (Local0)
                        }

                        Method (SBRB, 3, NotSerialized)
                        {
                            Local0 = One
                            Local1 = Buffer (One)
                                {
                                     0x00                                             // .
                                }
                            If (!Acquire (SMTX, 0xFFFF))
                            {
                                If ((SPTR == Zero))
                                {
                                    SADR = (Arg0 << One)
                                    SCMD = Arg1
                                    SPTR = 0x0B
                                    Local0 = SBPC (0x03E8)
                                    If (!Local0)
                                    {
                                        Arg2 = SBFR /* \_SB_.PCI0.LPCB.EC__.SBFR */
                                    }
                                }

                                Release (SMTX)
                            }

                            Return (Local0)
                        }
                    }

                    Method (_Q10, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        If (OSDW ())
                        {
                            Notify (SMB0, 0x80) // Status Change
                        }
                        ElseIf ((SSTS & 0x40))
                        {
                            If (!Acquire (^SMB0.SMTX, 0xFFFF))
                            {
                                Local0 = (SAAD >> One)
                                If ((Local0 == 0x0A))
                                {
                                    ^^^^BAT0.BNOT (SADW)
                                }

                                SSTS = Zero
                                Release (^SMB0.SMTX)
                            }
                        }
                    }

                    Method (_Q11, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        Notify (EC, 0x83) // Device-Specific Change
                    }

                    Method (_Q12, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        Notify (EC, 0x84) // Reserved
                    }

                    Method (_Q20, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        LIDS = ELSW /* \_SB_.PCI0.LPCB.EC__.ELSW */
                        ^^^IGPU.CLID = ELSW /* \_SB_.PCI0.LPCB.EC__.ELSW */
                        Notify (LID0, 0x80) // Status Change
                    }

                    Method (_Q21, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        If (EACP)
                        {
                            PWRS = One
                        }
                        Else
                        {
                            PWRS = Zero
                        }

                        Notify (ADP1, 0x80) // Status Change
                        PNOT ()
                    }

                    Method (_Q5A, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        Notify (SLPB, 0x80) // Status Change
                    }

                    Method (_Q80, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        \_PR.CPPC = CPLT /* \CPLT */
                        Notify (\_PR.CPU0, 0x80) // Performance Capability Change
                        Notify (\_PR.CPU1, 0x80) // Performance Capability Change
                        Notify (\_PR.CPU2, 0x80) // Performance Capability Change
                        Notify (\_PR.CPU3, 0x80) // Performance Capability Change
                        Notify (\_PR.CPU4, 0x80) // Performance Capability Change
                        Notify (\_PR.CPU5, 0x80) // Performance Capability Change
                        Notify (\_PR.CPU6, 0x80) // Performance Capability Change
                        Notify (\_PR.CPU7, 0x80) // Performance Capability Change
                        Notify (\_PR.CPU8, 0x80) // Performance Capability Change
                        Notify (\_PR.CPU9, 0x80) // Performance Capability Change
                        Notify (\_PR.CPUA, 0x80) // Performance Capability Change
                        Notify (\_PR.CPUB, 0x80) // Performance Capability Change
                        Notify (\_PR.CPUC, 0x80) // Performance Capability Change
                        Notify (\_PR.CPUD, 0x80) // Performance Capability Change
                        Notify (\_PR.CPUE, 0x80) // Performance Capability Change
                        Notify (\_PR.CPUF, 0x80) // Performance Capability Change
                        If ((^^^IGPU.VID0 == 0x8086))
                        {
                            Local0 = IGPS /* \IGPS */
                            Local0 = (RP0C - Local0)
                            RPSL = Local0
                        }
                        Else
                        {
                            Notify (^^^PEG0.EGP0.EGP1.GFX0, 0x81) // Information Change
                        }
                    }

                    Method (_QCE, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                    }

                    Method (_QCF, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        If (!OSDW ())
                        {
                            Notify (SLPB, 0x80) // Status Change
                        }
                    }

                    Method (_QD0, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                    }

                    Method (_REG, 2, NotSerialized)  // _REG: Region Availability
                    {
                        If (((Arg0 == 0x03) || (OSYS >= 0x07D6)))
                        {
                            ECOK = Arg1
                            If ((Arg1 == One))
                            {
                                ECSS = Zero
                                LIDS = ELSW /* \_SB_.PCI0.LPCB.EC__.ELSW */
                                ^^^IGPU.CLID = ELSW /* \_SB_.PCI0.LPCB.EC__.ELSW */
                                PWRS = EACP /* \_SB_.PCI0.LPCB.EC__.EACP */
                                Notify (ADP1, 0x80) // Status Change
                            }
                        }
                    }
                }

                Scope (\_SB)
                {
                    Device (BAT0)
                    {
                        Name (_HID, EisaId ("PNP0C0A") /* Control Method Battery */)  // _HID: Hardware ID
                        Name (_UID, Zero)  // _UID: Unique ID
                        Name (_PCL, Package (0x01)  // _PCL: Power Consumer List
                        {
                            _SB
                        })
                        Name (BSSW, 0xFFFF)
                        Name (PBIF, Package (0x0D)
                        {
                            Zero, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF, 
                            One, 
                            0xFFFFFFFF, 
                            0xFA, 
                            0x64, 
                            0x0A, 
                            0x0A, 
                            " ", 
                            " ", 
                            " ", 
                            " "
                        })
                        Name (PBST, Package (0x04)
                        {
                            Zero, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF
                        })
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            If (OSDW ())
                            {
                                Return (Zero)
                            }

                            If (^^PCI0.LPCB.EC.ECOK)
                            {
                                UBSS ()
                                If ((BSSW & One))
                                {
                                    Return (0x1F)
                                }
                                Else
                                {
                                    Return (0x0F)
                                }
                            }
                            Else
                            {
                                Return (0x0F)
                            }
                        }

                        Method (_BST, 0, NotSerialized)  // _BST: Battery Status
                        {
                            If ((BSSW & One))
                            {
                                UBST ()
                            }
                            Else
                            {
                                PBST [Zero] = Zero
                                PBST [One] = 0xFFFFFFFF
                                PBST [0x02] = 0xFFFFFFFF
                            }

                            Return (PBST) /* \_SB_.BAT0.PBST */
                        }

                        Method (_BIF, 0, NotSerialized)  // _BIF: Battery Information
                        {
                            If ((BSSW & One))
                            {
                                UBIF ()
                            }

                            Return (PBIF) /* \_SB_.BAT0.PBIF */
                        }

                        Method (BNOT, 1, NotSerialized)
                        {
                            Local0 = BSSW /* \_SB_.BAT0.BSSW */
                            BSSW = Arg0
                            Notify (BAT0, 0x80) // Status Change
                            If (((Local0 ^ Arg0) & One))
                            {
                                Notify (BAT0, 0x81) // Information Change
                            }
                        }

                        Method (UBSS, 0, NotSerialized)
                        {
                            ^^PCI0.LPCB.EC.SMB0.SBRW (0x0A, One, RefOf (BSSW))
                        }

                        Method (UBIF, 0, NotSerialized)
                        {
                            ^^PCI0.LPCB.EC.SMB0.SBRW (0x0B, 0x18, RefOf (Local0))
                            PBIF [One] = (Local0 * 0x0A)
                            ^^PCI0.LPCB.EC.SMB0.SBRW (0x0B, 0x10, RefOf (Local0))
                            PBIF [0x02] = (Local0 * 0x0A)
                            ^^PCI0.LPCB.EC.SMB0.SBRW (0x0B, 0x19, RefOf (Local0))
                            PBIF [0x04] = Local0
                            ^^PCI0.LPCB.EC.SMB0.SBRB (0x0B, 0x21, RefOf (Local0))
                            PBIF [0x09] = Local0
                            PBIF [0x0A] = Buffer (One)
                                {
                                     0x00                                             // .
                                }
                            ^^PCI0.LPCB.EC.SMB0.SBRB (0x0B, 0x22, RefOf (Local0))
                            PBIF [0x0B] = Local0
                            ^^PCI0.LPCB.EC.SMB0.SBRB (0x0B, 0x20, RefOf (Local0))
                            PBIF [0x0C] = Local0
                        }

                        Method (UBST, 0, NotSerialized)
                        {
                            ^^PCI0.LPCB.EC.SMB0.SBRW (0x0B, 0x09, RefOf (Local2))
                            PBST [0x03] = Local2
                            ^^PCI0.LPCB.EC.SMB0.SBRW (0x0B, 0x0A, RefOf (Local0))
                            If ((Local0 & 0x8000))
                            {
                                Local0 = ~Local0
                                Local0 = (Local0++ & 0xFFFF)
                            }

                            Local0 *= Local2
                            PBST [One] = (Local0 / 0x03E8)
                            ^^PCI0.LPCB.EC.SMB0.SBRW (0x0B, 0x0F, RefOf (Local0))
                            PBST [0x02] = (Local0 * 0x0A)
                            Local1 = Zero
                            If (PWRS)
                            {
                                ^^PCI0.LPCB.EC.SMB0.SBRW (0x0B, 0x16, RefOf (Local0))
                                If (!(Local0 & 0x40))
                                {
                                    Local1 = 0x02
                                }
                            }
                            Else
                            {
                                Local1 = One
                            }

                            PBST [Zero] = Local1
                        }
                    }
                }

                Device (GPUC)
                {
                    Name (_HID, EisaId ("APP000B"))  // _HID: Hardware ID
                    Name (_CID, "gpuc")  // _CID: Compatible ID
                    Name (_STA, 0x0B)  // _STA: Status
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        Memory32Fixed (ReadWrite,
                            0xFE0B0200,         // Address Base
                            0x00000008,         // Address Length
                            )
                    })
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        If (OSDW ())
                        {
                            Return (Package (0x02)
                            {
                                0x15, 
                                0x03
                            })
                        }

                        Return (Package (0x02)
                        {
                            0x15, 
                            0x03
                        })
                    }

                    Scope (\_GPE)
                    {
                        Method (_L15, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
                        {
                            If (OSDW ())
                            {
                                Notify (\_SB.PCI0.LPCB.GPUC, 0x80) // Status Change
                            }
                            ElseIf ((\_SB.GGII (0x03000015) == One))
                            {
                                \_SB.SGII (0x03000015, Zero)
                            }
                            Else
                            {
                                \_SB.SGII (0x03000015, One)
                            }
                        }
                    }

                    Name (GMGP, 0x15)
                    Method (GMSP, 1, NotSerialized)
                    {
                        If ((Arg0 <= One))
                        {
                            SGII (0x03000015, Arg0)
                        }
                    }

                    Method (GMLV, 0, NotSerialized)
                    {
                        Return (GGIV (0x03000015))
                    }
                }
            }

            Device (PMCR)
            {
                Name (_HID, EisaId ("APP9876"))  // _HID: Hardware ID
                Name (_STA, 0x0B)  // _STA: Status
                Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                {
                    Memory32Fixed (ReadWrite,
                        0xFE000000,         // Address Base
                        0x00010000,         // Address Length
                        )
                })
            }

            Device (SBUS)
            {
                Name (_ADR, 0x001F0004)  // _ADR: Address
                OperationRegion (SMBP, PCI_Config, 0x40, 0xC0)
                Field (SMBP, DWordAcc, NoLock, Preserve)
                {
                        ,   2, 
                    I2CE,   1
                }

                OperationRegion (SMPB, PCI_Config, 0x20, 0x04)
                Field (SMPB, DWordAcc, NoLock, Preserve)
                {
                        ,   5, 
                    SBAR,   11
                }

                OperationRegion (SMBI, SystemIO, (SBAR << 0x05), 0x10)
                Field (SMBI, ByteAcc, NoLock, Preserve)
                {
                    HSTS,   8, 
                    Offset (0x02), 
                    HCON,   8, 
                    HCOM,   8, 
                    TXTA,   8, 
                    DAT0,   8, 
                    DAT1,   8, 
                    HBDR,   8, 
                    PECR,   8, 
                    RXTA,   8, 
                    TDAT,   16
                }

                Method (SSXB, 2, Serialized)
                {
                    If (STRT ())
                    {
                        Return (Zero)
                    }

                    I2CE = Zero
                    HSTS = 0xBF
                    TXTA = Arg0
                    HCOM = Arg1
                    HCON = 0x48
                    If (COMP ())
                    {
                        HSTS |= 0xFF
                        Return (One)
                    }

                    Return (Zero)
                }

                Method (SRXB, 1, Serialized)
                {
                    If (STRT ())
                    {
                        Return (0xFFFF)
                    }

                    I2CE = Zero
                    HSTS = 0xBF
                    TXTA = (Arg0 | One)
                    HCON = 0x44
                    If (COMP ())
                    {
                        HSTS |= 0xFF
                        Return (DAT0) /* \_SB_.PCI0.SBUS.DAT0 */
                    }

                    Return (0xFFFF)
                }

                Method (SWRB, 3, Serialized)
                {
                    If (STRT ())
                    {
                        Return (Zero)
                    }

                    I2CE = Zero
                    HSTS = 0xBF
                    TXTA = Arg0
                    HCOM = Arg1
                    DAT0 = Arg2
                    HCON = 0x48
                    If (COMP ())
                    {
                        HSTS |= 0xFF
                        Return (One)
                    }

                    Return (Zero)
                }

                Method (SRDB, 2, Serialized)
                {
                    If (STRT ())
                    {
                        Return (0xFFFF)
                    }

                    I2CE = Zero
                    HSTS = 0xBF
                    TXTA = (Arg0 | One)
                    HCOM = Arg1
                    HCON = 0x48
                    If (COMP ())
                    {
                        HSTS |= 0xFF
                        Return (DAT0) /* \_SB_.PCI0.SBUS.DAT0 */
                    }

                    Return (0xFFFF)
                }

                Method (SWRW, 3, Serialized)
                {
                    If (STRT ())
                    {
                        Return (Zero)
                    }

                    I2CE = Zero
                    HSTS = 0xBF
                    TXTA = Arg0
                    HCOM = Arg1
                    DAT1 = (Arg2 & 0xFF)
                    DAT0 = ((Arg2 >> 0x08) & 0xFF)
                    HCON = 0x4C
                    If (COMP ())
                    {
                        HSTS |= 0xFF
                        Return (One)
                    }

                    Return (Zero)
                }

                Method (SRDW, 2, Serialized)
                {
                    If (STRT ())
                    {
                        Return (0xFFFF)
                    }

                    I2CE = Zero
                    HSTS = 0xBF
                    TXTA = (Arg0 | One)
                    HCOM = Arg1
                    HCON = 0x4C
                    If (COMP ())
                    {
                        HSTS |= 0xFF
                        Return (((DAT0 << 0x08) | DAT1))
                    }

                    Return (0xFFFFFFFF)
                }

                Method (SBLW, 4, Serialized)
                {
                    If (STRT ())
                    {
                        Return (Zero)
                    }

                    I2CE = Arg3
                    HSTS = 0xBF
                    TXTA = Arg0
                    HCOM = Arg1
                    DAT0 = SizeOf (Arg2)
                    Local1 = Zero
                    HBDR = DerefOf (Arg2 [Zero])
                    HCON = 0x54
                    While ((SizeOf (Arg2) > Local1))
                    {
                        Local0 = 0x4E20
                        While ((!(HSTS & 0x80) && Local0))
                        {
                            Local0--
                        }

                        If (!Local0)
                        {
                            KILL ()
                            Return (Zero)
                        }

                        Local1++
                        If ((SizeOf (Arg2) > Local1))
                        {
                            HBDR = DerefOf (Arg2 [Local1])
                            HSTS = 0x80
                        }
                    }

                    HSTS = 0x80
                    If (COMP ())
                    {
                        HSTS |= 0xFF
                        Return (One)
                    }

                    Return (Zero)
                }

                Method (SBLR, 3, Serialized)
                {
                    Name (TBUF, Buffer (0x0100) {})
                    If (STRT ())
                    {
                        Return (Zero)
                    }

                    I2CE = Arg2
                    HSTS = 0xBF
                    TXTA = (Arg0 | One)
                    HCOM = Arg1
                    HCON = 0x54
                    Local0 = 0x0FA0
                    While ((!(HSTS & 0x80) && Local0))
                    {
                        Local0--
                        Stall (0x32)
                    }

                    If (!Local0)
                    {
                        KILL ()
                        Return (Zero)
                    }

                    TBUF [Zero] = DAT0 /* \_SB_.PCI0.SBUS.DAT0 */
                    HSTS = 0x80
                    Local1 = One
                    While ((Local1 < DerefOf (TBUF [Zero])))
                    {
                        Local0 = 0x0FA0
                        While ((!(HSTS & 0x80) && Local0))
                        {
                            Local0--
                            Stall (0x32)
                        }

                        If (!Local0)
                        {
                            KILL ()
                            Return (Zero)
                        }

                        TBUF [Local1] = HBDR /* \_SB_.PCI0.SBUS.HBDR */
                        HSTS = 0x80
                        Local1++
                    }

                    If (COMP ())
                    {
                        HSTS |= 0xFF
                        Return (TBUF) /* \_SB_.PCI0.SBUS.SBLR.TBUF */
                    }

                    Return (Zero)
                }

                Method (STRT, 0, Serialized)
                {
                    Local0 = 0xC8
                    While (Local0)
                    {
                        If ((HSTS & 0x40))
                        {
                            Local0--
                            Sleep (One)
                            If ((Local0 == Zero))
                            {
                                Return (One)
                            }
                        }
                        Else
                        {
                            Local0 = Zero
                        }
                    }

                    Local0 = 0x0FA0
                    While (Local0)
                    {
                        If ((HSTS & One))
                        {
                            Local0--
                            Stall (0x32)
                            If ((Local0 == Zero))
                            {
                                KILL ()
                            }
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    Return (One)
                }

                Method (COMP, 0, Serialized)
                {
                    Local0 = 0x0FA0
                    While (Local0)
                    {
                        If ((HSTS & 0x02))
                        {
                            Return (One)
                        }
                        Else
                        {
                            Local0--
                            Stall (0x32)
                            If ((Local0 == Zero))
                            {
                                KILL ()
                            }
                        }
                    }

                    Return (Zero)
                }

                Method (KILL, 0, Serialized)
                {
                    HCON |= 0x02
                    HSTS |= 0xFF
                }

                Device (BUS0)
                {
                    Name (_CID, "smbus")  // _CID: Compatible ID
                    Name (_ADR, Zero)  // _ADR: Address
                }

                Device (BUS1)
                {
                    Name (_CID, "smbus")  // _CID: Compatible ID
                    Name (_ADR, One)  // _ADR: Address
                }
            }

            Device (XSPI)
            {
                Name (_ADR, 0x001F0005)  // _ADR: Address
                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b") /* Unknown UUID */))
                    {
                        Local0 = Package (0x02)
                            {
                                "pci-device-hidden", 
                                Buffer (0x08)
                                {
                                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                }
                            }
                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }

                    Return (Zero)
                }
            }

            Scope (RP01)
            {
                OperationRegion (A1E0, PCI_Config, Zero, 0x0480)
                Field (A1E0, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x04), 
                    BMIE,   3, 
                    Offset (0x19), 
                    SECB,   8, 
                    SBBN,   8, 
                    Offset (0x1E), 
                        ,   13, 
                    IABT,   1, 
                    Offset (0x4A), 
                        ,   5, 
                    TPEN,   1, 
                    Offset (0x50), 
                        ,   4, 
                    LDIS,   1, 
                        ,   24, 
                    LACT,   1, 
                    Offset (0xA4), 
                    PSTA,   2, 
                    Offset (0xE0), 
                        ,   7, 
                    NCB7,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23D,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }

                OperationRegion (A1E1, PCI_Config, 0x18, 0x04)
                Field (A1E1, DWordAcc, NoLock, Preserve)
                {
                    BNIR,   32
                }

                Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                {
                    If (((BMIE == Zero) && (SECB == 0xFF)))
                    {
                        Return (SNBS) /* \_SB_.PCI0.RP01.SNBS */
                    }
                    Else
                    {
                        Return (SECB) /* \_SB_.PCI0.RP01.SECB */
                    }
                }

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Name (BMIS, Zero)
                Name (SNBS, Zero)
                Name (BNIS, Zero)
                Method (L23R, 1, Serialized)
                {
                    If ((Arg0 == One))
                    {
                        L23E = One
                        Local0 = Zero
                        While (L23E)
                        {
                            If ((Local0 > 0x04))
                            {
                                Break
                            }

                            Sleep (One)
                            Local0++
                        }

                        NCB7 = One
                    }

                    If ((Arg0 == Zero))
                    {
                        If ((NCB7 == One))
                        {
                            DPGE = Zero
                            L23D = One
                            Local0 = Zero
                            While (L23D)
                            {
                                If ((Local0 > 0x04))
                                {
                                    Break
                                }

                                Sleep (One)
                                Local0++
                            }

                            NCB7 = Zero
                            DPGE = One
                        }
                    }
                }

                Method (BUSS, 1, Serialized)
                {
                    If ((Arg0 == One))
                    {
                        If ((((BMIE != Zero) && (BMIE != BMIS)) && (
                            ((SECB != Zero) && (SECB != SNBS)) && ((BNIR != 
                            Zero) && (BNIR != BNIS)))))
                        {
                            BMIS = BMIE /* \_SB_.PCI0.RP01.BMIE */
                            SNBS = SECB /* \_SB_.PCI0.RP01.SECB */
                            BNIS = BNIR /* \_SB_.PCI0.RP01.BNIR */
                        }

                        BMIE = Zero
                        BNIR = 0x00FEFF00
                        Local0 = TPEN /* \_SB_.PCI0.RP01.TPEN */
                    }

                    If ((Arg0 == Zero))
                    {
                        BNIR = BNIS /* \_SB_.PCI0.RP01.BNIS */
                    }
                }

                Method (CKGP, 1, Serialized)
                {
                }

                Method (LNKW, 1, Serialized)
                {
                    Local1 = Zero
                    If ((Arg0 == One))
                    {
                        Local0 = (Timer + 0x00989680)
                        While ((Timer <= Local0))
                        {
                            If ((LACT == Zero))
                            {
                                Local1 = One
                                Break
                            }

                            Sleep (0x0A)
                        }
                    }

                    If ((Arg0 == Zero))
                    {
                        Local2 = (Timer + 0x00989680)
                        While ((Timer <= Local2))
                        {
                            If (((LACT == One) && (^ARPT.AVND != 0xFFFF)))
                            {
                                Local1 = One
                                Break
                            }

                            Sleep (0x0A)
                        }
                    }

                    Return (Local1)
                }

                Method (CLKD, 1, Serialized)
                {
                    If ((Arg0 == One))
                    {
                        Local1 = Zero
                        SPCO (One, Zero)
                    }

                    If ((Arg0 == Zero))
                    {
                        SPCO (One, One)
                    }
                }

                Method (DPWR, 1, Serialized)
                {
                    If (!OSDW ())
                    {
                        Return (0xFF)
                    }

                    If ((Arg0 == Zero))
                    {
                        ^^LPCB.EC.APWC = Zero
                        Return (Zero)
                    }

                    If ((Arg0 == One))
                    {
                        ^^LPCB.EC.APWC = One
                        Return (One)
                    }

                    Return (^^LPCB.EC.APWC) /* \_SB_.PCI0.LPCB.EC__.APWC */
                }

                Method (DRST, 1, Serialized)
                {
                    If (!OSDW ())
                    {
                        Return (0xFF)
                    }

                    If ((Arg0 == Zero))
                    {
                        SGDI (0x03010003)
                        Return (One)
                    }

                    If ((Arg0 == One))
                    {
                        SGOV (0x03010003, Zero)
                        SGDO (0x03010003)
                        Return (Zero)
                    }

                    Return (!GGDV (0x03010003))
                }

                Method (DISO, 1, Serialized)
                {
                    If (!OSDW ())
                    {
                        Return (0xFF)
                    }

                    If ((Arg0 == Zero))
                    {
                        ^ARPT.PSTA = 0x03
                        L23R (One)
                        DRST (One)
                        CLKD (One)
                        BUSS (One)
                        PSTA = 0x03
                        Local0 = TPEN /* \_SB_.PCI0.RP01.TPEN */
                        LNKW (One)
                    }

                    If ((Arg0 == One))
                    {
                        PSTA = Zero
                        BUSS (Zero)
                        CLKD (Zero)
                        DRST (Zero)
                        Sleep (0x64)
                        L23R (Zero)
                        LNKW (Zero)
                    }

                    Return (Zero)
                }

                Method (APPD, 0, Serialized)
                {
                    If (!OSDW ())
                    {
                        Return (Zero)
                    }

                    ^ARPT.PSTA = 0x03
                    L23R (One)
                    DRST (One)
                    If ((SLTP == Zero))
                    {
                        CLKD (One)
                        CKGP (Zero)
                    }

                    BUSS (One)
                    PSTA = 0x03
                    Local0 = TPEN /* \_SB_.PCI0.RP01.TPEN */
                    LNKW (One)
                    Return (Zero)
                }

                Method (APPU, 0, Serialized)
                {
                    If (!OSDW ())
                    {
                        Return (Zero)
                    }

                    PSTA = Zero
                    If ((SECB != 0xFF)) {}
                    Else
                    {
                        BNIR = BNIS /* \_SB_.PCI0.RP01.BNIS */
                    }

                    If ((SLTP == Zero))
                    {
                        CKGP (One)
                        CLKD (Zero)
                        DRST (Zero)
                        Sleep (0x64)
                        L23R (Zero)
                    }

                    LNKW (Zero)
                    Return (Zero)
                }

                Method (ALPR, 1, NotSerialized)
                {
                    If ((Arg0 == One))
                    {
                        APPD ()
                    }
                    Else
                    {
                        APPU ()
                    }
                }

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {
                    If (OSDW ())
                    {
                        ALPR (Zero)
                    }
                }

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {
                    If (OSDW ())
                    {
                        ALPR (One)
                    }
                }

                Device (ARPT)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Name (_GPE, 0x6F)  // _GPE: General Purpose Events
                    OperationRegion (ARE2, PCI_Config, Zero, 0x80)
                    Field (ARE2, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   16, 
                        ADID,   16, 
                        Offset (0x4C), 
                        PSTA,   2
                    }

                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        Local0 = Package (0x02)
                            {
                                "module-instance", 
                                "bali"
                            }
                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        If (OSDW ())
                        {
                            Return (Package (0x02)
                            {
                                0x69, 
                                0x04
                            })
                        }
                        Else
                        {
                            Return (Package (0x02)
                            {
                                0x69, 
                                0x04
                            })
                        }
                    }

                    Method (PRW0, 0, NotSerialized)
                    {
                        Return (Package (0x01)
                        {
                            0x6F
                        })
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }

                    Method (_PSW, 1, Serialized)  // _PSW: Power State Wake
                    {
                        If ((^^^LPCB.EC.SWWL == One))
                        {
                            If (^^^LPCB.EC.ECOK)
                            {
                                If (OSDW ())
                                {
                                    If (Arg0)
                                    {
                                        ^^^LPCB.EC.EWLN = One
                                    }
                                    Else
                                    {
                                        ^^^LPCB.EC.EWLN = Zero
                                        ^^^LPCB.EC.LWLN = Zero
                                    }
                                }
                            }
                        }
                        Else
                        {
                        }
                    }

                    Method (RWCV, 0, Serialized)
                    {
                        Name (BUF0, Buffer (0x04)
                        {
                             0x00, 0x00, 0x00, 0x00                           // ....
                        })
                        CreateByteField (BUF0, Zero, RW00)
                        CreateByteField (BUF0, One, RW01)
                        CreateByteField (BUF0, 0x02, RW02)
                        CreateByteField (BUF0, 0x03, RW03)
                        RW00 = RWC0 /* \RWC0 */
                        RW01 = RWC1 /* \RWC1 */
                        RW02 = RWC2 /* \RWC2 */
                        RW03 = RWC3 /* \RWC3 */
                        Return (BUF0) /* \_SB_.PCI0.RP01.ARPT.RWCV.BUF0 */
                    }
                }
            }

            Device (I2C2)
            {
                Name (_ADR, 0x00150002)  // _ADR: Address
                Name (_UID, 0x03)  // _UID: Unique ID
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
                    {
                        0x00000012,
                    }
                })
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b") /* Unknown UUID */))
                    {
                        Local0 = Package (0x06)
                            {
                                "i2c-channel-number", 
                                Buffer (0x08)
                                {
                                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                }, 

                                "i2c-pin-sda", 
                                Buffer (0x08)
                                {
                                     0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                }, 

                                "i2c-pin-scl", 
                                Buffer (0x08)
                                {
                                     0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                }
                            }
                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }

                    Return (Zero)
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Return (RBUF) /* \_SB_.PCI0.I2C2.RBUF */
                }
            }

            Device (SPI1)
            {
                Name (_ADR, 0x001E0003)  // _ADR: Address
                Name (_DDN, "Intel(R) Low Power Subsystem SPI Host Controller - 9D2A")  // _DDN: DOS Device Name
                Name (_UID, 0x02)  // _UID: Unique ID
                Name (CSST, 0x28)
                Name (CSHT, 0x0A)
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
                    {
                        0x00000017,
                    }
                })
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b") /* Unknown UUID */))
                    {
                        Local0 = Package (0x0E)
                            {
                                "gspi-channel-number", 
                                Buffer (0x08)
                                {
                                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                }, 

                                "gspi-channels-count", 
                                Buffer (0x08)
                                {
                                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                }, 

                                "gspi-sys-clock-period", 
                                Buffer (0x08)
                                {
                                     0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                }, 

                                "gspi-pin-cs", 
                                Buffer (0x08)
                                {
                                     0x57, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // W.......
                                }, 

                                "gspi-pin-clk", 
                                Buffer (0x08)
                                {
                                     0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // X.......
                                }, 

                                "gspi-pin-mosi", 
                                Buffer (0x08)
                                {
                                     0x59, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // Y.......
                                }, 

                                "gspi-pin-miso", 
                                Buffer (0x08)
                                {
                                     0x5A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // Z.......
                                }
                            }
                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }

                    Return (Zero)
                }

                Name (WBUF, Buffer (0x02)
                {
                     0x79, 0x00                                       // y.
                })
                Name (DBUF, Buffer (0x10)
                {
                    /* 0000 */  0x55, 0x10, 0x00, 0x06, 0x00, 0x02, 0x55, 0x11,  // U.....U.
                    /* 0008 */  0x00, 0x07, 0x00, 0x02, 0x79, 0x00               // ....y.
                })
                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    If (!OSDW ())
                    {
                        Return (WBUF) /* \_SB_.PCI0.SPI1.WBUF */
                    }

                    Return (ConcatenateResTemplate (RBUF, DBUF))
                }
            }

            Device (URT0)
            {
                Name (_ADR, 0x001E0000)  // _ADR: Address
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
                    {
                        0x00000014,
                    }
                })
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b") /* Unknown UUID */))
                    {
                        Local0 = Package (0x02)
                            {
                                "uart-channel-number", 
                                Buffer (0x08)
                                {
                                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                }
                            }
                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }

                    Return (Zero)
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Return (RBUF) /* \_SB_.PCI0.URT0.RBUF */
                }
            }

            Device (URT2)
            {
                Name (_ADR, 0x00190002)  // _ADR: Address
                Name (_HID, "INT34BA")  // _HID: Hardware ID
                Method (RBUF, 0, NotSerialized)
                {
                    Name (BUFF, ResourceTemplate ()
                    {
                        Memory32Fixed (ReadWrite,
                            0x00000000,         // Address Base
                            0x00001000,         // Address Length
                            _Y10)
                        Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, _Y11)
                        {
                            0x00000014,
                        }
                    })
                    CreateDWordField (BUFF, \_SB.PCI0.URT2.RBUF._Y10._BAS, BVAL)  // _BAS: Base Address
                    CreateDWordField (BUFF, \_SB.PCI0.URT2.RBUF._Y11._INT, IRQN)  // _INT: Interrupts
                    BVAL = SB0B /* \SB0B */
                    IRQN = SIRB /* \SIRB */
                    Return (BUFF) /* \_SB_.PCI0.URT2.RBUF.BUFF */
                }

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b") /* Unknown UUID */))
                    {
                        Local0 = Package (0x02)
                            {
                                "uart-channel-number", 
                                Buffer (0x08)
                                {
                                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                }
                            }
                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }

                    Return (Zero)
                }

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Return (RBUF ())
                }
            }

            Scope (URT0)
            {
                Device (BLTH)
                {
                    Name (_HID, EisaId ("BCM2E7C"))  // _HID: Hardware ID
                    Name (_CID, "apple-uart-blth")  // _CID: Compatible ID
                    Name (_UID, One)  // _UID: Unique ID
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        If (OSDW ())
                        {
                            Return (Package (0x02)
                            {
                                0x6F, 
                                0x04
                            })
                        }
                        Else
                        {
                            Return (Package (0x02)
                            {
                                0x6F, 
                                0x03
                            })
                        }
                    }

                    Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                    {
                        Name (UBUF, ResourceTemplate ()
                        {
                            UartSerialBusV2 (0x0001C200, DataBitsEight, StopBitsOne,
                                0xC0, LittleEndian, ParityTypeNone, FlowControlHardware,
                                0x0020, 0x0020, "\\_SB.PCI0.URT0",
                                0x00, ResourceProducer, , Exclusive,
                                )
                        })
                        Name (ABUF, Buffer (0x02)
                        {
                             0x79, 0x00                                       // y.
                        })
                        If (!OSDW ())
                        {
                            Return (UBUF) /* \_SB_.PCI0.URT0.BLTH._CRS.UBUF */
                        }

                        Return (ABUF) /* \_SB_.PCI0.URT0.BLTH._CRS.ABUF */
                    }

                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b") /* Unknown UUID */))
                        {
                            Local0 = Package (0x08)
                                {
                                    "baud", 
                                    Buffer (0x08)
                                    {
                                         0xC0, 0xC6, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x00   // ..-.....
                                    }, 

                                    "parity", 
                                    Buffer (0x08)
                                    {
                                         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }, 

                                    "dataBits", 
                                    Buffer (0x08)
                                    {
                                         0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }, 

                                    "stopBits", 
                                    Buffer (0x08)
                                    {
                                         0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }
                                }
                            DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                            Return (Local0)
                        }

                        Return (Zero)
                    }

                    Method (BTPU, 0, Serialized)
                    {
                        ^^^LPCB.EC.BTPC = One
                        Sleep (0x0A)
                    }

                    Method (BTPD, 0, Serialized)
                    {
                        ^^^LPCB.EC.BTPC = Zero
                        Sleep (0x0A)
                    }

                    Method (BTRS, 0, Serialized)
                    {
                        BTPD ()
                        BTPU ()
                    }

                    Method (BTLP, 1, Serialized)
                    {
                        If ((Arg0 == Zero))
                        {
                            ^^^LPCB.EC.BTDW = One
                        }

                        If ((Arg0 == One))
                        {
                            ^^^LPCB.EC.BTDW = Zero
                        }
                    }

                    Method (BTRB, 1, Serialized)
                    {
                        If ((Arg0 == Zero))
                        {
                            SGOV (0x0309000A, One)
                            SGDO (0x0309000A)
                        }

                        If ((Arg0 == One))
                        {
                            SGOV (0x0309000A, Zero)
                            SGDO (0x0309000A)
                        }
                    }

                    Method (_PSW, 1, NotSerialized)  // _PSW: Power State Wake
                    {
                        If ((^^^LPCB.EC.SWBT == One))
                        {
                            If (^^^LPCB.EC.ECOK)
                            {
                                If (OSDW ())
                                {
                                    If (Arg0)
                                    {
                                        ^^^LPCB.EC.EWBT = One
                                    }
                                    Else
                                    {
                                        ^^^LPCB.EC.EWBT = Zero
                                        ^^^LPCB.EC.LWBT = Zero
                                    }
                                }
                            }
                        }
                        Else
                        {
                        }
                    }
                }
            }

            Scope (RP17)
            {
                OperationRegion (PCUP, PCI_Config, Zero, 0x0480)
                Field (PCUP, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x52), 
                        ,   13, 
                    LACT,   1, 
                    Offset (0xE0), 
                        ,   7, 
                    NCB7,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23D,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }

                Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                {
                    Local1 = Zero
                    Local0 = (Timer + 0x08F0D180)
                    While ((Timer <= Local0))
                    {
                        If ((^^LPCB.EC.PSOC == One))
                        {
                            Local1 = One
                            Break
                        }

                        Sleep (0x64)
                    }

                    If ((Local1 != One))
                    {
                        Fatal (0x00, 0x436F5350, 0x544F4D54)
                    }

                    SPCO (Zero, One)
                    Sleep (0x64)
                    ^^LPCB.EC.PRST = One
                    Local1 = Zero
                    Local0 = Zero
                    While ((^^LPCB.EC.PCIR != One))
                    {
                        If ((Local0 > 0x96))
                        {
                            Local1 = One
                            Break
                        }

                        Sleep (0x64)
                        Local0++
                    }

                    If ((Local1 != Zero))
                    {
                        Fatal (0x00, 0x65494350, 0x544F4D54)
                    }

                    If ((NCB7 == One))
                    {
                        DPGE = Zero
                        L23D = One
                        Local0 = Zero
                        While (L23D)
                        {
                            If ((Local0 > 0x04))
                            {
                                Break
                            }

                            Sleep (One)
                            Local0++
                        }

                        NCB7 = Zero
                        DPGE = One
                        Local0 = Zero
                        While ((LACT == Zero))
                        {
                            If ((Local0 > 0x08))
                            {
                                Break
                            }

                            Sleep (0x10)
                            Local0++
                        }
                    }

                    Local0 = ^ANS2.PSTA /* \_SB_.PCI0.RP17.ANS2.PSTA */
                    ^ANS2.PSTA = (Local0 & 0xFFFFFFFC)
                    Local0 = ^ANS2.PSTA /* \_SB_.PCI0.RP17.ANS2.PSTA */
                }

                Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                {
                    Local0 = ^ANS2.PSTA /* \_SB_.PCI0.RP17.ANS2.PSTA */
                    ^ANS2.PSTA = (Local0 | 0x03)
                    Local0 = ^ANS2.PSTA /* \_SB_.PCI0.RP17.ANS2.PSTA */
                    L23E = One
                    Local0 = Zero
                    While (L23E)
                    {
                        If ((Local0 > 0x04))
                        {
                            Break
                        }

                        Sleep (One)
                        Local0++
                    }

                    NCB7 = One
                    SPCO (Zero, Zero)
                    ^^LPCB.EC.PRST = Zero
                }
            }

            Scope (RP17)
            {
                Device (ANS2)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    OperationRegion (PCIA, PCI_Config, Zero, 0xFF)
                    Field (PCIA, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   16, 
                        ADID,   16, 
                        Offset (0x44), 
                        PSTA,   32
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                    {
                    }

                    Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                    {
                    }

                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b") /* Unknown UUID */))
                        {
                            Local0 = Package (0x02)
                                {
                                    "pci-functions-dependent", 
                                    Buffer (0x08)
                                    {
                                         0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }
                                }
                            DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                            Return (Local0)
                        }

                        Return (Zero)
                    }
                }
            }

            Scope (RP17)
            {
                Device (IOBC)
                {
                    Name (_ADR, One)  // _ADR: Address
                    OperationRegion (PCIC, PCI_Config, Zero, 0xFF)
                    Field (PCIC, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   16, 
                        ADID,   16, 
                        Offset (0x44), 
                        PSTA,   32
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b") /* Unknown UUID */))
                        {
                            Local0 = Package (0x02)
                                {
                                    "pci-msi-flags", 
                                    Buffer (0x08)
                                    {
                                         0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }
                                }
                            DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                            Return (Local0)
                        }

                        Return (Zero)
                    }

                    Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                    {
                        PSTA &= 0xFFFFFFFC
                        Local0 = PSTA /* \_SB_.PCI0.RP17.IOBC.PSTA */
                    }

                    Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                    {
                        PSTA |= 0x03
                        Local0 = PSTA /* \_SB_.PCI0.RP17.IOBC.PSTA */
                    }
                }
            }

            Scope (RP17)
            {
                Device (SEPM)
                {
                    Name (_ADR, 0x02)  // _ADR: Address
                    OperationRegion (PCID, PCI_Config, Zero, 0xFF)
                    Field (PCID, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   16, 
                        ADID,   16, 
                        Offset (0x44), 
                        PSTA,   32
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b") /* Unknown UUID */))
                        {
                            Local0 = Package (0x02)
                                {
                                    "pci-msi-flags", 
                                    Buffer (0x08)
                                    {
                                         0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }
                                }
                            DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                            Return (Local0)
                        }

                        Return (Zero)
                    }

                    Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                    {
                        PSTA &= 0xFFFFFFFC
                        Local0 = PSTA /* \_SB_.PCI0.RP17.SEPM.PSTA */
                    }

                    Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                    {
                        PSTA |= 0x03
                        Local0 = PSTA /* \_SB_.PCI0.RP17.SEPM.PSTA */
                    }
                }
            }

            Scope (RP17)
            {
                Device (ADIO)
                {
                    Name (_ADR, 0x03)  // _ADR: Address
                    OperationRegion (PCIB, PCI_Config, Zero, 0xFF)
                    Field (PCIB, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   16, 
                        ADID,   16, 
                        Offset (0x44), 
                        PSTA,   32
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                    {
                        PSTA &= 0xFFFFFFFC
                        Local0 = PSTA /* \_SB_.PCI0.RP17.ADIO.PSTA */
                    }

                    Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                    {
                        PSTA |= 0x03
                        Local0 = PSTA /* \_SB_.PCI0.RP17.ADIO.PSTA */
                    }
                }
            }
        }

        Device (ADP1)
        {
            Name (_HID, "ACPI0003" /* Power Source Device */)  // _HID: Hardware ID
            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {
                If (OSDW ())
                {
                    Return (Package (0x02)
                    {
                        0x6F, 
                        0x04
                    })
                }
                Else
                {
                    Return (Package (0x02)
                    {
                        0x6F, 
                        0x03
                    })
                }
            }

            Name (WK00, One)
            Method (SWAK, 1, NotSerialized)
            {
                WK00 = (Arg0 & 0x03)
                If (!WK00)
                {
                    WK00 = One
                }
            }

            Method (_PSR, 0, NotSerialized)  // _PSR: Power Source
            {
                Return (PWRS) /* \PWRS */
            }

            Method (_PCL, 0, NotSerialized)  // _PCL: Power Consumer List
            {
                Return (_SB) /* \_SB_ */
            }

            Method (_PSW, 1, NotSerialized)  // _PSW: Power State Wake
            {
                If (OSDW ())
                {
                    If (^^PCI0.LPCB.EC.ECOK)
                    {
                        If (Arg0)
                        {
                            If ((WK00 & One))
                            {
                                ^^PCI0.LPCB.EC.EWAI = One
                            }

                            If ((WK00 & 0x02))
                            {
                                ^^PCI0.LPCB.EC.EWAR = One
                            }
                        }
                        Else
                        {
                            ^^PCI0.LPCB.EC.EWAI = Zero
                            ^^PCI0.LPCB.EC.EWAR = Zero
                        }
                    }
                }
            }
        }

        Device (LID0)
        {
            Name (_HID, EisaId ("PNP0C0D") /* Lid Device */)  // _HID: Hardware ID
            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {
                If (OSDW ())
                {
                    Return (Package (0x02)
                    {
                        0x6F, 
                        0x04
                    })
                }
                Else
                {
                    Return (Package (0x02)
                    {
                        0x6F, 
                        0x03
                    })
                }
            }

            Method (_LID, 0, NotSerialized)  // _LID: Lid Status
            {
                LIDS = ^^PCI0.LPCB.EC.ELSW /* \_SB_.PCI0.LPCB.EC__.ELSW */
                ^^PCI0.IGPU.CLID = ^^PCI0.LPCB.EC.ELSW /* \_SB_.PCI0.LPCB.EC__.ELSW */
                Return (LIDS) /* External reference */
            }

            Method (_PSW, 1, NotSerialized)  // _PSW: Power State Wake
            {
                If (^^PCI0.LPCB.EC.ECOK)
                {
                    If (Arg0)
                    {
                        ^^PCI0.LPCB.EC.EWLO = One
                    }
                    Else
                    {
                        ^^PCI0.LPCB.EC.EWLO = Zero
                    }
                }
            }
        }

        Device (PWRB)
        {
            Name (_HID, EisaId ("PNP0C0C") /* Power Button Device */)  // _HID: Hardware ID
            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b") /* Unknown UUID */))
                {
                    Local0 = Package (0x04)
                        {
                            "power-button-usage", 
                            Buffer (0x08)
                            {
                                 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // @.......
                            }, 

                            "power-button-usagepage", 
                            Buffer (0x08)
                            {
                                 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                            }
                        }
                    DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                    Return (Local0)
                }

                Return (Zero)
            }
        }

        Device (BC00)
        {
            Name (_HID, EisaId ("APPBC00"))  // _HID: Hardware ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (OSDW ())
                {
                    Return (Zero)
                }
                Else
                {
                    Return (0x0B)
                }
            }
        }

        Device (BC01)
        {
            Name (_HID, EisaId ("APPBC01"))  // _HID: Hardware ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (OSDW ())
                {
                    Return (Zero)
                }
                Else
                {
                    Return (0x0B)
                }
            }
        }
    }

    Scope (_PR)
    {
        Processor (CPU0, 0x01, 0x00000410, 0x06) {}
        Processor (CPU1, 0x02, 0x00000410, 0x06) {}
        Processor (CPU2, 0x03, 0x00000410, 0x06) {}
        Processor (CPU3, 0x04, 0x00000410, 0x06) {}
        Processor (CPU4, 0x05, 0x00000410, 0x06) {}
        Processor (CPU5, 0x06, 0x00000410, 0x06) {}
        Processor (CPU6, 0x07, 0x00000410, 0x06) {}
        Processor (CPU7, 0x08, 0x00000410, 0x06) {}
        Processor (CPU8, 0x09, 0x00000410, 0x06) {}
        Processor (CPU9, 0x0A, 0x00000410, 0x06) {}
        Processor (CPUA, 0x0B, 0x00000410, 0x06) {}
        Processor (CPUB, 0x0C, 0x00000410, 0x06) {}
        Processor (CPUC, 0x0D, 0x00000410, 0x06) {}
        Processor (CPUD, 0x0E, 0x00000410, 0x06) {}
        Processor (CPUE, 0x0F, 0x00000410, 0x06) {}
        Processor (CPUF, 0x10, 0x00000410, 0x06) {}
    }

    Mutex (MUTX, 0x00)
    Name (SLTP, Zero)
    Name (TBH1, Zero)
    Name (TBH2, Zero)
    Name (TBG0, Zero)
    Name (TBG1, Zero)
    Name (TBG2, Zero)
    OperationRegion (PRT0, SystemIO, 0x80, 0x04)
    Field (PRT0, DWordAcc, NoLock, Preserve)
    {
        P80H,   32
    }

    OperationRegion (PLMT, SystemIO, 0x0310, 0x0A)
    Field (PLMT, ByteAcc, NoLock, Preserve)
    {
        CPLT,   8, 
        IGPS,   8, 
        MPLT,   8, 
        CFIL,   8, 
        EGPS,   8
    }

    OperationRegion (S0BA, SystemMemory, 0xE00A8084, 0x04)
    Field (S0BA, DWordAcc, NoLock, Preserve)
    {
        S0D3,   2
    }

    OperationRegion (S4BA, SystemMemory, 0xE00AC084, 0x04)
    Field (S4BA, DWordAcc, NoLock, Preserve)
    {
        S4D3,   2
    }

    OperationRegion (TCOI, SystemIO, 0x1860, 0x08)
    Field (TCOI, WordAcc, NoLock, Preserve)
    {
        Offset (0x04), 
            ,   9, 
        SCIS,   1, 
        Offset (0x06)
    }

    Method (P8XH, 2, Serialized)
    {
        If ((Arg0 == Zero))
        {
            P80D = ((P80D & 0xFFFFFF00) | Arg1)
        }

        If ((Arg0 == One))
        {
            P80D = ((P80D & 0xFFFF00FF) | (Arg1 << 0x08))
        }

        If ((Arg0 == 0x02))
        {
            P80D = ((P80D & 0xFF00FFFF) | (Arg1 << 0x10))
        }

        If ((Arg0 == 0x03))
        {
            P80D = ((P80D & 0x00FFFFFF) | (Arg1 << 0x18))
        }

        P80H = P80D /* \P80D */
    }

    OperationRegion (SPRT, SystemIO, 0xB2, 0x02)
    Field (SPRT, ByteAcc, NoLock, Preserve)
    {
        SSMP,   8, 
        SSMY,   8
    }

    Method (_PIC, 1, NotSerialized)  // _PIC: Interrupt Model
    {
        GPIC = Arg0
        PICM = Arg0
    }

    Method (GETB, 3, Serialized)
    {
        Local0 = (Arg0 * 0x08)
        Local1 = (Arg1 * 0x08)
        CreateField (Arg2, Local0, Local1, TBF3)
        Return (TBF3) /* \GETB.TBF3 */
    }

    Method (PNOT, 0, Serialized)
    {
        If (!OSDW ())
        {
            \_PR.CPPC = CPLT /* \CPLT */
        }

        If ((TCNT > One))
        {
            If ((PDC0 & 0x08))
            {
                Notify (\_PR.CPU0, 0x80) // Performance Capability Change
                If ((PDC0 & 0x10))
                {
                    Notify (\_PR.CPU0, 0x81) // C-State Change
                }
            }

            If ((PDC1 & 0x08))
            {
                Notify (\_PR.CPU1, 0x80) // Performance Capability Change
                If ((PDC1 & 0x10))
                {
                    Notify (\_PR.CPU1, 0x81) // C-State Change
                }
            }

            If ((PDC2 & 0x08))
            {
                Notify (\_PR.CPU2, 0x80) // Performance Capability Change
                If ((PDC2 & 0x10))
                {
                    Notify (\_PR.CPU2, 0x81) // C-State Change
                }
            }

            If ((PDC3 & 0x08))
            {
                Notify (\_PR.CPU3, 0x80) // Performance Capability Change
                If ((PDC3 & 0x10))
                {
                    Notify (\_PR.CPU3, 0x81) // C-State Change
                }
            }

            If ((PDC4 & 0x08))
            {
                Notify (\_PR.CPU4, 0x80) // Performance Capability Change
                If ((PDC4 & 0x10))
                {
                    Notify (\_PR.CPU4, 0x81) // C-State Change
                }
            }

            If ((PDC5 & 0x08))
            {
                Notify (\_PR.CPU5, 0x80) // Performance Capability Change
                If ((PDC5 & 0x10))
                {
                    Notify (\_PR.CPU5, 0x81) // C-State Change
                }
            }

            If ((PDC6 & 0x08))
            {
                Notify (\_PR.CPU6, 0x80) // Performance Capability Change
                If ((PDC6 & 0x10))
                {
                    Notify (\_PR.CPU6, 0x81) // C-State Change
                }
            }

            If ((PDC7 & 0x08))
            {
                Notify (\_PR.CPU7, 0x80) // Performance Capability Change
                If ((PDC7 & 0x10))
                {
                    Notify (\_PR.CPU7, 0x81) // C-State Change
                }
            }
        }
        Else
        {
            Notify (\_PR.CPU0, 0x80) // Performance Capability Change
            Notify (\_PR.CPU0, 0x81) // C-State Change
        }
    }

    Method (DSPI, 0, Serialized)
    {
        If (!OSDW ()) {}
    }

    Method (TRAP, 2, Serialized)
    {
        SMIF = Arg1
        If ((Arg0 == TRTP))
        {
            TRP0 = Zero
        }

        If ((Arg0 == TRTD))
        {
            DTSF = Arg1
            TRPD = Zero
            Return (DTSF) /* \DTSF */
        }

        If ((Arg0 == TRTI))
        {
            TRPH = Zero
        }

        Return (SMIF) /* \SMIF */
    }

    Scope (_SB)
    {
        Method (_INI, 0, NotSerialized)  // _INI: Initialize
        {
            PINI ()
        }

        Method (LPS0, 0, NotSerialized)
        {
            Return (One)
        }

        Device (USBX)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {
                Local0 = Package (0x04)
                    {
                        "kUSBSleepPortCurrentLimit", 
                        0x0BB8, 
                        "kUSBWakePortCurrentLimit", 
                        0x0BB8
                    }
                DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                Return (Local0)
            }
        }

        Device (PNLF)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (_HID, EisaId ("APP0002"))  // _HID: Hardware ID
            Name (_CID, "backlight")  // _CID: Compatible ID
            Name (_UID, 0x0F)  // _UID: Unique ID
            Name (_STA, 0x0B)  // _STA: Status
        }

        Device (SLPB)
        {
            Name (_HID, EisaId ("PNP0C0E") /* Sleep Button Device */)  // _HID: Hardware ID
            Name (_STA, 0x0B)  // _STA: Status
        }
    }

    Scope (_SB.PCI0)
    {
        Method (_INI, 0, NotSerialized)  // _INI: Initialize
        {
            OSYS = 0x07DC
            If (CondRefOf (\_OSI, Local0))
            {
                If (_OSI ("Darwin"))
                {
                    OSYS = 0x2710
                }

                If (_OSI ("Linux"))
                {
                    OSYS = 0x03E8
                }

                If (_OSI ("Windows 2009"))
                {
                    OSYS = 0x07D9
                }

                If (_OSI ("Windows 2012"))
                {
                    OSYS = 0x07DC
                }
            }

            If (!OSDW ()) {}
        }
    }

    Scope (\)
    {
        Name (PICM, Zero)
        Method (OSDW, 0, NotSerialized)
        {
            If ((OSYS == 0x2710))
            {
                Return (One)
            }
            Else
            {
                Return (Zero)
            }
        }

        Method (PINI, 0, NotSerialized)
        {
            OSYS = 0x07DC
            If (CondRefOf (_OSI, Local0))
            {
                If (_OSI ("Darwin"))
                {
                    OSYS = 0x2710
                }
                ElseIf (_OSI ("Linux"))
                {
                    OSYS = 0x03E8
                }
                ElseIf (_OSI ("Windows 2009"))
                {
                    OSYS = 0x07D9
                }
                ElseIf (_OSI ("Windows 2012"))
                {
                    OSYS = 0x07DC
                }
            }
            Else
            {
                OSYS = 0x07DC
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Device (PDRC)
        {
            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Name (BUF0, ResourceTemplate ()
            {
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00008000,         // Address Length
                    _Y13)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00001000,         // Address Length
                    _Y14)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00001000,         // Address Length
                    _Y15)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00000000,         // Address Length
                    _Y16)
                Memory32Fixed (ReadWrite,
                    0xFED20000,         // Address Base
                    0x00020000,         // Address Length
                    )
                Memory32Fixed (ReadOnly,
                    0xFED90000,         // Address Base
                    0x00004000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFED45000,         // Address Base
                    0x0004B000,         // Address Length
                    )
                Memory32Fixed (ReadOnly,
                    0xFF000000,         // Address Base
                    0x01000000,         // Address Length
                    )
                Memory32Fixed (ReadOnly,
                    0xFEE00000,         // Address Base
                    0x00100000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00001000,         // Address Length
                    _Y12)
                Memory32Fixed (ReadOnly,
                    0x40000000,         // Address Base
                    0x00400000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFD000000,         // Address Base
                    0x01000000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFE010000,         // Address Base
                    0x00001000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFE036000,         // Address Base
                    0x0007A000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFC800000,         // Address Base
                    0x00800000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFE100000,         // Address Base
                    0x00100000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFE200000,         // Address Base
                    0x00200000,         // Address Length
                    )
            })
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y12._BAS, TBR0)  // _BAS: Base Address
                TBR0 = TBAB /* \TBAB */
                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y12._LEN, TBLN)  // _LEN: Length
                If ((TBAB == Zero))
                {
                    TBLN = Zero
                }

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y13._BAS, MBR0)  // _BAS: Base Address
                MBR0 = (MHBR << 0x0F)
                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y14._BAS, DBR0)  // _BAS: Base Address
                DBR0 = (DIBR << 0x0C)
                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y15._BAS, EBR0)  // _BAS: Base Address
                EBR0 = (EPBR << 0x0C)
                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y16._BAS, XBR0)  // _BAS: Base Address
                XBR0 = (PXBR << 0x1A)
                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y16._LEN, XSZ0)  // _LEN: Length
                XSZ0 = (0x10000000 >> PXSZ) /* \_SB_.PCI0.PXSZ */
                Return (BUF0) /* \_SB_.PCI0.PDRC.BUF0 */
            }
        }
    }

    Name (PNVB, 0x7AF1EC18)
    Name (PNVL, 0x028F)
    OperationRegion (PNVA, SystemMemory, PNVB, PNVL)
    Field (PNVA, AnyAcc, Lock, Preserve)
    {
        PCHS,   16, 
        PCHG,   16, 
        PSTP,   16, 
        RPA1,   32, 
        RPA2,   32, 
        RPA3,   32, 
        RPA4,   32, 
        RPA5,   32, 
        RPA6,   32, 
        RPA7,   32, 
        RPA8,   32, 
        RPA9,   32, 
        RPAA,   32, 
        RPAB,   32, 
        RPAC,   32, 
        RPAD,   32, 
        RPAE,   32, 
        RPAF,   32, 
        RPAG,   32, 
        RPAH,   32, 
        RPAI,   32, 
        RPAJ,   32, 
        RPAK,   32, 
        RPAL,   32, 
        RPAM,   32, 
        RPAN,   32, 
        RPAO,   32, 
        NHLA,   64, 
        NHLL,   32, 
        ADFM,   32, 
        SWQ0,   8, 
        SWQ1,   8, 
        SWQ2,   8, 
        SWQ3,   8, 
        DSPM,   32, 
        SBRG,   32, 
        GEI0,   8, 
        GEI1,   8, 
        GEI2,   8, 
        GED0,   8, 
        GED1,   8, 
        GED2,   8, 
        PML1,   16, 
        PML2,   16, 
        PML3,   16, 
        PML4,   16, 
        PML5,   16, 
        PML6,   16, 
        PML7,   16, 
        PML8,   16, 
        PML9,   16, 
        PMLA,   16, 
        PMLB,   16, 
        PMLC,   16, 
        PMLD,   16, 
        PMLE,   16, 
        PMLF,   16, 
        PMLG,   16, 
        PMLH,   16, 
        PMLI,   16, 
        PMLJ,   16, 
        PMLK,   16, 
        PMLL,   16, 
        PMLM,   16, 
        PMLN,   16, 
        PMLO,   16, 
        PNL1,   16, 
        PNL2,   16, 
        PNL3,   16, 
        PNL4,   16, 
        PNL5,   16, 
        PNL6,   16, 
        PNL7,   16, 
        PNL8,   16, 
        PNL9,   16, 
        PNLA,   16, 
        PNLB,   16, 
        PNLC,   16, 
        PNLD,   16, 
        PNLE,   16, 
        PNLF,   16, 
        PNLG,   16, 
        PNLH,   16, 
        PNLI,   16, 
        PNLJ,   16, 
        PNLK,   16, 
        PNLL,   16, 
        PNLM,   16, 
        PNLN,   16, 
        PNLO,   16, 
        XHPC,   8, 
        XRPC,   8, 
        XSPC,   8, 
        XSPA,   8, 
        HPTB,   32, 
        HPTE,   8, 
        SMD0,   8, 
        SMD1,   8, 
        SMD2,   8, 
        SMD3,   8, 
        SMD4,   8, 
        SMD5,   8, 
        SMD6,   8, 
        SMD7,   8, 
        SMD8,   8, 
        SMD9,   8, 
        SMDA,   8, 
        SMDB,   8, 
        SIR0,   8, 
        SIR1,   8, 
        SIR2,   8, 
        SIR3,   8, 
        SIR4,   8, 
        SIR5,   8, 
        SIR6,   8, 
        SIR7,   8, 
        SIR8,   8, 
        SIR9,   8, 
        SIRA,   8, 
        SIRB,   8, 
        SB00,   64, 
        SB01,   64, 
        SB02,   64, 
        SB03,   64, 
        SB04,   64, 
        SB05,   64, 
        SB06,   64, 
        SB07,   64, 
        SB08,   64, 
        SB09,   64, 
        SB0A,   64, 
        SB0B,   64, 
        SB10,   64, 
        SB11,   64, 
        SB12,   64, 
        SB13,   64, 
        SB14,   64, 
        SB15,   64, 
        SB16,   64, 
        SB17,   64, 
        SB18,   64, 
        SB19,   64, 
        SB1A,   64, 
        SB1B,   64, 
        SGIR,   8, 
        GPHD,   8, 
        NIT1,   8, 
        NIT2,   8, 
        NIT3,   8, 
        NPM1,   8, 
        NPM2,   8, 
        NPM3,   8, 
        NPC1,   8, 
        NPC2,   8, 
        NPC3,   8, 
        NL11,   16, 
        NL12,   16, 
        NL13,   16, 
        ND21,   8, 
        ND22,   8, 
        ND23,   8, 
        ND11,   32, 
        ND12,   32, 
        ND13,   32, 
        NLR1,   16, 
        NLR2,   16, 
        NLR3,   16, 
        NLD1,   32, 
        NLD2,   32, 
        NLD3,   32, 
        NEA1,   16, 
        NEA2,   16, 
        NEA3,   16, 
        NEB1,   16, 
        NEB2,   16, 
        NEB3,   16, 
        NEC1,   16, 
        NEC2,   16, 
        NEC3,   16, 
        NRA1,   16, 
        NRA2,   16, 
        NRA3,   16, 
        NMB1,   32, 
        NMB2,   32, 
        NMB3,   32, 
        NMV1,   32, 
        NMV2,   32, 
        NMV3,   32, 
        NPB1,   32, 
        NPB2,   32, 
        NPB3,   32, 
        NPV1,   32, 
        NPV2,   32, 
        NPV3,   32, 
        NRP1,   32, 
        NRP2,   32, 
        NRP3,   32, 
        EMH4,   8, 
        EMDS,   8, 
        CSKU,   8, 
        ITA0,   16, 
        ITA1,   16, 
        ITA2,   16, 
        ITA3,   16, 
        ITS0,   8, 
        ITS1,   8, 
        ITS2,   8, 
        ITS3,   8, 
        PMBS,   16, 
        PWRM,   32, 
        CNVI,   8, 
        RMRC,   32, 
        VMRC,   8, 
        VM70,   8, 
        VM75,   8, 
        PTHM,   8, 
        PSON,   8, 
        TWMB,   32, 
        LTR1,   8, 
        LTR2,   8, 
        LTR3,   8, 
        LTR4,   8, 
        LTR5,   8, 
        LTR6,   8, 
        LTR7,   8, 
        LTR8,   8, 
        LTR9,   8, 
        LTRA,   8, 
        LTRB,   8, 
        LTRC,   8, 
        LTRD,   8, 
        LTRE,   8, 
        LTRF,   8, 
        LTRG,   8, 
        LTRH,   8, 
        LTRI,   8, 
        LTRJ,   8, 
        LTRK,   8, 
        LTRL,   8, 
        LTRM,   8, 
        LTRN,   8, 
        LTRO,   8, 
        GBES,   8, 
        SPPR,   8, 
        SDPH,   8, 
        EMCE,   8, 
        SDCE,   8
    }

    Scope (_SB)
    {
        Name (GPCL, Package (0x0F)
        {
            Package (0x07)
            {
                0x006E0000, 
                0x19, 
                0x0600, 
                0xB0, 
                0x20, 
                0x0140, 
                Zero
            }, 

            Package (0x07)
            {
                0x006E0000, 
                0x1A, 
                0x0790, 
                0xB4, 
                0x30, 
                0x0144, 
                0x20
            }, 

            Package (0x07)
            {
                0x006A0000, 
                0x18, 
                0x0600, 
                0xB0, 
                0x20, 
                0x0140, 
                0x0100
            }, 

            Package (0x07)
            {
                0x006D0000, 
                0x18, 
                0x0600, 
                0xB0, 
                0x20, 
                0x0140, 
                0x60
            }, 

            Package (0x07)
            {
                0x006A0000, 
                0x18, 
                0x0780, 
                0xB4, 
                0x2C, 
                0x0144, 
                0x0120
            }, 

            Package (0x07)
            {
                0x006D0000, 
                0x18, 
                0x0790, 
                0xB4, 
                0x30, 
                0x0144, 
                0x80
            }, 

            Package (0x07)
            {
                0x006E0000, 
                0x08, 
                0x0930, 
                0xB8, 
                0x40, 
                0x0148, 
                0x40
            }, 

            Package (0x07)
            {
                0x006D0000, 
                0x18, 
                0x0910, 
                0xB8, 
                0x3C, 
                0x0148, 
                0xA0
            }, 

            Package (0x07)
            {
                0x006C0000, 
                0x10, 
                0x0600, 
                0xB0, 
                0x20, 
                0x0140, 
                0xFFFF
            }, 

            Package (0x07)
            {
                0x006D0000, 
                0x28, 
                0x0A90, 
                0xBC, 
                0x48, 
                0x014C, 
                0xC0
            }, 

            Package (0x07)
            {
                0x006E0000, 
                0x09, 
                0x09B0, 
                0xBC, 
                0x44, 
                0x014C, 
                0xFFFF
            }, 

            Package (0x07)
            {
                0x006B0000, 
                0x08, 
                0x0600, 
                0xB0, 
                0x20, 
                0x0140, 
                0xFFFF
            }, 

            Package (0x07)
            {
                0x006B0000, 
                0x0B, 
                0x0680, 
                0xB4, 
                0x24, 
                0xFFFF, 
                0xFFFF
            }, 

            Package (0x07)
            {
                0x006A0000, 
                0x09, 
                0x0900, 
                0xB8, 
                0x38, 
                0xFFFF, 
                0xFFFF
            }, 

            Package (0x07)
            {
                0x006A0000, 
                0x06, 
                0x0990, 
                0xBC, 
                0x40, 
                0x014C, 
                0xFFFF
            }
        })
        Name (GPCH, Package (0x11)
        {
            Package (0x07)
            {
                0x006E0000, 
                0x19, 
                0x0600, 
                0xC0, 
                0x20, 
                0x0140, 
                Zero
            }, 

            Package (0x07)
            {
                0x006E0000, 
                0x1A, 
                0x0790, 
                0xC4, 
                0x30, 
                0x0144, 
                0x20
            }, 

            Package (0x07)
            {
                0x006D0000, 
                0x18, 
                0x0600, 
                0xC0, 
                0x20, 
                0x0140, 
                0x40
            }, 

            Package (0x07)
            {
                0x006D0000, 
                0x18, 
                0x0780, 
                0xC4, 
                0x2C, 
                0x0144, 
                0x60
            }, 

            Package (0x07)
            {
                0x006B0000, 
                0x0D, 
                0x0900, 
                0xC8, 
                0x38, 
                0x0148, 
                0x0100
            }, 

            Package (0x07)
            {
                0x006B0000, 
                0x18, 
                0x09D0, 
                0xCC, 
                0x40, 
                0x014C, 
                0x0120
            }, 

            Package (0x07)
            {
                0x006D0000, 
                0x08, 
                0x0900, 
                0xC8, 
                0x38, 
                0x0148, 
                0x80
            }, 

            Package (0x07)
            {
                0x006B0000, 
                0x18, 
                0x0780, 
                0xC4, 
                0x2C, 
                0x0144, 
                0xE0
            }, 

            Package (0x07)
            {
                0x006A0000, 
                0x12, 
                0x0740, 
                0xC8, 
                0x30, 
                0x0148, 
                0x0140
            }, 

            Package (0x07)
            {
                0x006A0000, 
                0x0C, 
                0x0860, 
                0xCC, 
                0x3C, 
                0x014C, 
                0x0160
            }, 

            Package (0x07)
            {
                0x006B0000, 
                0x18, 
                0x0600, 
                0xC0, 
                0x20, 
                0x0140, 
                0xC0
            }, 

            Package (0x07)
            {
                0x006C0000, 
                0x10, 
                0x0600, 
                0xB0, 
                0x20, 
                0x0140, 
                0xFFFF
            }, 

            Package (0x07)
            {
                0x006D0000, 
                0x28, 
                0x0A00, 
                0xD0, 
                0x40, 
                0xFFFF, 
                0xA0
            }, 

            Package (0x07)
            {
                0x006B0000, 
                0x09, 
                0x0B50, 
                0xD0, 
                0x4C, 
                0xFFFF, 
                0xFFFF
            }, 

            Package (0x07)
            {
                0x006D0000, 
                0x08, 
                0x0980, 
                0xCC, 
                0x3C, 
                0xFFFF, 
                0xFFFF
            }, 

            Package (0x07)
            {
                0x006A0000, 
                0x0B, 
                0x0600, 
                0xC0, 
                0x20, 
                0xFFFF, 
                0xFFFF
            }, 

            Package (0x07)
            {
                0x006A0000, 
                0x09, 
                0x06B0, 
                0xC4, 
                0x28, 
                0xFFFF, 
                0xFFFF
            }
        })
        Name (RXEV, Package (0x0D)
        {
            Buffer (0x19) {}, 
            Buffer (0x1A) {}, 
            Buffer (0x18) {}, 
            Buffer (0x18) {}, 
            Buffer (0x18) {}, 
            Buffer (0x18) {}, 
            Buffer (0x08) {}, 
            Buffer (0x18) {}, 
            Buffer (0x12) {}, 
            Buffer (0x28) {}, 
            Buffer (0x18) {}, 
            Buffer (0x10) {}, 
            Buffer (0x28) {}
        })
    }

    Scope (_SB)
    {
        Method (GINF, 2, NotSerialized)
        {
            If ((PCHS == PCHL))
            {
                Return (DerefOf (DerefOf (GPCL [Arg0]) [Arg1]))
            }
            Else
            {
                Return (DerefOf (DerefOf (GPCH [Arg0]) [Arg1]))
            }
        }

        Method (GMXG, 0, NotSerialized)
        {
            If ((PCHS == PCHL))
            {
                Return (0x0F)
            }
            Else
            {
                Return (0x11)
            }
        }

        Method (GADR, 2, NotSerialized)
        {
            Local0 = (GINF (Arg0, Zero) + SBRG)
            Local1 = GINF (Arg0, Arg1)
            Return ((Local0 + Local1))
        }

        Method (GNUM, 1, NotSerialized)
        {
            Local0 = GNMB (Arg0)
            Local1 = GGRP (Arg0)
            Return ((GINF (Local1, 0x06) + Local0))
        }

        Method (INUM, 1, NotSerialized)
        {
            Return ((GPC1 (Arg0) & 0x7F))
        }

        Method (GGRP, 1, Serialized)
        {
            Local0 = ((Arg0 & 0x00FF0000) >> 0x10)
            Return (Local0)
        }

        Method (GNMB, 1, Serialized)
        {
            Return ((Arg0 & 0xFFFF))
        }

        Method (GGPE, 1, NotSerialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (Local1 >> 0x05)
            If (!((((GEI0 == Local0) && (GED0 == Local2)) | (
                (GEI1 == Local0) && (GED1 == Local2))) | ((GEI2 == Local0) && (GED2 == 
                Local2))))
            {
                Return (0x6F)
            }
            Else
            {
                If (((GEI0 == Local0) && (GED0 == Local2)))
                {
                    Local3 = Zero
                }
                ElseIf (((GEI1 == Local0) && (GED1 == Local2)))
                {
                    Local3 = One
                }
                ElseIf (((GEI2 == Local0) && (GED2 == Local2)))
                {
                    Local3 = 0x02
                }
                Else
                {
                    BreakPoint
                    Return (Zero)
                }

                Return ((((Local3 - Local2) * 0x20) + Local1))
            }
        }

        Method (GPC0, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x10))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            Return (TEMP) /* \_SB_.GPC0.TEMP */
        }

        Method (SREG, 2, Serialized)
        {
            If ((PCHS == PCHL))
            {
                Local0 = Zero
            }
            Else
            {
                Local0 = One
            }

            Local1 = (GINF (Arg0, Zero) + SBRG)
            Local2 = (Arg0 + Local1)
            OperationRegion (PREG, SystemMemory, Local2, 0x04)
            Field (PREG, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            TEMP = Arg1
        }

        Method (SPC0, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x10))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            TEMP = Arg1
        }

        Method (GPC1, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = ((GADR (Local0, 0x02) + (Local1 * 0x10)) + 
                0x04)
            OperationRegion (PDW1, SystemMemory, Local2, 0x04)
            Field (PDW1, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            Return (TEMP) /* \_SB_.GPC1.TEMP */
        }

        Method (SPC1, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = ((GADR (Local0, 0x02) + (Local1 * 0x10)) + 
                0x04)
            OperationRegion (PDW1, SystemMemory, Local2, 0x04)
            Field (PDW1, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            TEMP = Arg1
        }

        Method (SRXO, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x10))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   28, 
                TEMP,   1, 
                Offset (0x04)
            }

            TEMP = Arg1
        }

        Method (SGDI, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x10))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                Offset (0x01), 
                TEMP,   2, 
                Offset (0x04)
            }

            TEMP = One
        }

        Name (PCSA, Zero)
        Method (RXRA, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x10))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   28, 
                RXPO,   1, 
                    ,   1, 
                PADC,   2
            }

            If ((Arg1 == One))
            {
                PCSA = PADC /* \_SB_.RXRA.PADC */
                PADC = Zero
            }
            ElseIf ((PCSA != Zero))
            {
                PADC = PCSA /* \_SB_.PCSA */
            }

            RXPO = Arg1
        }

        Method (SGDO, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x10))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                Offset (0x01), 
                TEMP,   2, 
                Offset (0x04)
            }

            TEMP = 0x02
        }

        Method (GGDV, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x10))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                Offset (0x01), 
                TEMP,   2, 
                Offset (0x04)
            }

            If ((TEMP == One))
            {
                Return (One)
            }
            ElseIf ((TEMP == 0x02))
            {
                Return (Zero)
            }
            Else
            {
                Return (One)
            }
        }

        Method (GGIV, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x10))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   1, 
                TEMP,   1, 
                Offset (0x04)
            }

            Return (TEMP) /* \_SB_.GGIV.TEMP */
        }

        Method (GGOV, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x10))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                TEMP,   1, 
                Offset (0x04)
            }

            Return (TEMP) /* \_SB_.GGOV.TEMP */
        }

        Method (SGOV, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x10))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                TEMP,   1, 
                Offset (0x04)
            }

            TEMP = Arg1
        }

        Method (GGII, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x10))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   23, 
                TEMP,   1, 
                Offset (0x04)
            }

            Return (TEMP) /* \_SB_.GGII.TEMP */
        }

        Method (SGII, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x10))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   23, 
                TEMP,   1, 
                Offset (0x04)
            }

            TEMP = Arg1
        }

        Method (GPMV, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x10))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   10, 
                TEMP,   3, 
                Offset (0x04)
            }

            Return (TEMP) /* \_SB_.GPMV.TEMP */
        }

        Method (SPMV, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x10))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   10, 
                TEMP,   3, 
                Offset (0x04)
            }

            TEMP = Arg1
        }

        Method (GHPO, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local3 = (GADR (Local0, 0x03) + ((Local1 >> 0x05) * 0x04))
            Local4 = (Local1 & 0x1F)
            OperationRegion (PREG, SystemMemory, Local3, 0x04)
            Field (PREG, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            Return (((TEMP >> Local4) & One))
        }

        Method (SHPO, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local3 = (GADR (Local0, 0x03) + ((Local1 >> 0x05) * 0x04))
            Local4 = (Local1 & 0x1F)
            OperationRegion (PREG, SystemMemory, Local3, 0x04)
            Field (PREG, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            If (Arg1)
            {
                TEMP |= (One << Local4)
            }
            Else
            {
                TEMP &= ~(One << Local4)
            }
        }

        Method (GGPO, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x04) + ((Local1 >> 0x03) * 0x04
                ))
            OperationRegion (PREG, SystemMemory, Local2, 0x04)
            Field (PREG, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            Return (((TEMP >> ((Local1 & 0x07) * 0x04)) & 
                0x03))
        }

        Method (SGRA, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x10))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   20, 
                TEMP,   1, 
                Offset (0x04)
            }

            TEMP = Arg1
        }

        Method (SGWP, 2, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = ((GADR (Local0, 0x02) + (Local1 * 0x10)) + 
                0x04)
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   10, 
                TEMP,   4, 
                Offset (0x04)
            }

            TEMP = Arg1
        }

        Method (CAGS, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local4 = (Local1 >> 0x05)
            If (!((((GEI0 == Local0) && (GED0 == Local4)) | (
                (GEI1 == Local0) && (GED1 == Local4))) | ((GEI2 == Local0) && (GED2 == 
                Local4))))
            {
                Local3 = GADR (Local0, 0x05)
                If (((Local3 & 0xFFFF) != 0xFFFF))
                {
                    OperationRegion (GPPX, SystemMemory, (Local3 + (Local4 * 0x04)), 0x04)
                    Field (GPPX, AnyAcc, NoLock, Preserve)
                    {
                        STSX,   32
                    }

                    Local2 = (One << (Local1 % 0x20))
                    STSX = Local2
                }
            }
        }

        Method (ISME, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local4 = (Local1 >> 0x05)
            If (!!((((GEI0 == Local0) && (GED0 == Local4)) | 
                ((GEI1 == Local0) && (GED1 == Local4))) | ((GEI2 == Local0) && (
                GED2 == Local4))))
            {
                Return (Zero)
            }

            If (((GADR (Local0, 0x05) & 0xFFFF) == 0xFFFF))
            {
                Return (Zero)
            }

            Local2 = (GADR (Local0, 0x05) + (Local4 * 0x04))
            Local3 = (Local1 & 0x1F)
            OperationRegion (GPPX, SystemMemory, Local2, 0x24)
            Field (GPPX, AnyAcc, NoLock, Preserve)
            {
                STSX,   32, 
                Offset (0x20), 
                GENX,   32
            }

            Return ((((STSX & GENX) >> Local3) & One))
        }

        Method (DIPI, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x10))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   9, 
                RDIS,   1, 
                    ,   15, 
                RCFG,   2, 
                Offset (0x04)
            }

            If ((RCFG != 0x02))
            {
                DerefOf (RXEV [Local0]) [Local1] = RCFG /* \_SB_.DIPI.RCFG */
                RCFG = 0x02
                RDIS = One
            }
        }

        Method (UIPI, 1, Serialized)
        {
            Local0 = GGRP (Arg0)
            Local1 = GNMB (Arg0)
            Local2 = (GADR (Local0, 0x02) + (Local1 * 0x10))
            OperationRegion (PDW0, SystemMemory, Local2, 0x04)
            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   9, 
                RDIS,   1, 
                    ,   15, 
                RCFG,   2, 
                Offset (0x04)
            }

            Local3 = DerefOf (DerefOf (RXEV [Local0]) [Local1])
            If ((Local3 != 0x02))
            {
                RDIS = Zero
                RCFG = Local3
            }
        }
    }

    Name (PCHH, One)
    Name (PCHL, 0x02)
    Scope (\)
    {
        OperationRegion (IO_T, SystemIO, 0x0800, 0x10)
        Field (IO_T, ByteAcc, NoLock, Preserve)
        {
            TRPI,   16, 
            Offset (0x04), 
            Offset (0x06), 
            Offset (0x08), 
            TRP0,   8, 
            Offset (0x0A), 
            Offset (0x0B), 
            Offset (0x0C), 
            Offset (0x0D), 
            Offset (0x0E), 
            Offset (0x0F), 
            Offset (0x10)
        }

        OperationRegion (IO_D, SystemIO, 0x0810, 0x04)
        Field (IO_D, ByteAcc, NoLock, Preserve)
        {
            TRPD,   8
        }

        OperationRegion (IO_H, SystemIO, 0x1000, 0x04)
        Field (IO_H, ByteAcc, NoLock, Preserve)
        {
            TRPH,   8
        }

        Method (IPCW, 7, Serialized)
        {
            IBF0 = Arg3
            IBF1 = Arg4
            IBF2 = Arg5
            IBF3 = Arg6
            Local0 = Arg0
            Local0 += (Arg1 << 0x0C)
            Local0 += (Arg2 << 0x10)
            CMDR = Local0
            Local0 = Zero
            While (One)
            {
                If ((!IBSY || (IERR == One)))
                {
                    Break
                }

                If ((Local0 > 0x0A))
                {
                    Break
                }

                Sleep (One)
                Local0++
            }

            If ((IERR == One)) {}
        }

        Method (SPCO, 2, Serialized)
        {
            Local0 = (One << Arg0)
            Local1 = (Arg1 << Arg0)
            IPCW (0xA8, Zero, 0x08, Local0, Local1, Zero, Zero)
        }

        Method (PCRR, 2, Serialized)
        {
            Local0 = ((Arg0 << 0x10) + Arg1)
            Local0 += SBRG
            OperationRegion (PCR0, SystemMemory, Local0, 0x04)
            Field (PCR0, DWordAcc, Lock, Preserve)
            {
                DAT0,   32
            }

            Return (DAT0) /* \PCRR.DAT0 */
        }

        Method (PCRW, 3, Serialized)
        {
            Local0 = ((Arg0 << 0x10) + Arg1)
            Local0 += SBRG
            OperationRegion (PCR0, SystemMemory, Local0, 0x04)
            Field (PCR0, DWordAcc, Lock, Preserve)
            {
                DAT0,   32
            }

            DAT0 = Arg2
            OperationRegion (PCR1, SystemMemory, (SBRG + 0x00C73418), 0x04)
            Field (PCR1, DWordAcc, Lock, Preserve)
            {
                DAT1,   32
            }

            Local1 = DAT1 /* \PCRW.DAT1 */
        }

        Method (PCRO, 3, Serialized)
        {
            Local0 = PCRR (Arg0, Arg1)
            Local1 = (Local0 | Arg2)
            PCRW (Arg0, Arg1, Local1)
        }

        Method (PCRA, 3, Serialized)
        {
            Local0 = PCRR (Arg0, Arg1)
            Local1 = (Local0 & Arg2)
            PCRW (Arg0, Arg1, Local1)
        }

        Method (PCAO, 4, Serialized)
        {
            Local0 = PCRR (Arg0, Arg1)
            Local1 = ((Local0 & Arg2) | Arg3)
            PCRW (Arg0, Arg1, Local1)
        }

        Name (TCBV, Zero)
        Method (TCBS, 0, NotSerialized)
        {
            If ((TCBV == Zero))
            {
                Local0 = PCRR (0x88, 0x2778)
                TCBV = (Local0 & 0xFFE0)
            }

            Return (TCBV) /* \TCBV */
        }

        Name (S0ID, Zero)
        OperationRegion (TCBA, SystemIO, TCBS (), 0x10)
        Field (TCBA, ByteAcc, NoLock, Preserve)
        {
            Offset (0x04), 
                ,   9, 
            CPSC,   1
        }

        OperationRegion (PMST, SystemMemory, 0xFE000000, 0x1EFF)
        Field (PMST, DWordAcc, NoLock, Preserve)
        {
            CMDR,   32, 
            IBSY,   1, 
            IERR,   1, 
                ,   1, 
                ,   1, 
            Offset (0x05), 
            Offset (0x06), 
            IERC,   8, 
            Offset (0x08), 
            Offset (0x80), 
            IBF0,   32, 
            IBF1,   32, 
            IBF2,   32, 
            IBF3,   32, 
            IRBF,   32
        }

        Field (PMST, DWordAcc, NoLock, Preserve)
        {
            Offset (0x1B1C), 
                ,   12, 
            NPKA,   1, 
            LVME,   1
        }

        Field (PMST, DWordAcc, NoLock, Preserve)
        {
            Offset (0x1B4C), 
                ,   22, 
            ADSP,   1
        }

        Field (PMST, DWordAcc, NoLock, Preserve)
        {
            Offset (0x1E4C), 
                ,   19, 
            BT19,   1
        }
    }

    Scope (_SB.PCI0)
    {
        Device (PPMC)
        {
            Name (_ADR, 0x001F0002)  // _ADR: Address
            OperationRegion (PMCB, PCI_Config, Zero, 0x0100)
            Field (PMCB, AnyAcc, NoLock, Preserve)
            {
                VDID,   32, 
                Offset (0x40), 
                Offset (0x41), 
                ACBA,   8, 
                Offset (0x48), 
                    ,   12, 
                PWBA,   20
            }
        }
    }

    Scope (_GPE)
    {
        Method (_L67, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            \_SB.PCI0.SBUS.HSTS = 0x20
        }

        Method (_L66, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            If ((\_SB.PCI0.IGPU.GSSE && !GSMI))
            {
                \_SB.PCI0.IGPU.GSCI ()
            }
            Else
            {
                \_SB.PCI0.IGPU.GEFC = Zero
                SCIS = One
                \_SB.PCI0.IGPU.GSSE = Zero
                \_SB.PCI0.IGPU.SCIE = Zero
            }
        }

        Method (_L69, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Notify (\_SB.PCI0.PEG0, 0x02) // Device Wake
            Notify (\_SB.PCI0.RP01, 0x02) // Device Wake
            Notify (\_SB.PCI0.RP17, 0x02) // Device Wake
            \_SB.PCI0.TGPE ()
            Notify (\_SB.PCI0.RP01.ARPT, 0x02) // Device Wake
        }

        Method (_L6D, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Notify (\_SB.PWRB, 0x02) // Device Wake
            Notify (\_SB.PCI0.XHC1, 0x02) // Device Wake
            If (OSDW ()) {}
        }
    }

    Method (DTGP, 5, NotSerialized)
    {
        If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b") /* Unknown UUID */))
        {
            If ((Arg1 == One))
            {
                If ((Arg2 == Zero))
                {
                    Arg4 = Buffer (One)
                        {
                             0x03                                             // .
                        }
                    Return (One)
                }

                If ((Arg2 == One))
                {
                    Return (One)
                }
            }
        }

        Arg4 = Buffer (One)
            {
                 0x00                                             // .
            }
        Return (Zero)
    }

    Name (_S0, Package (0x03)  // _S0_: S0 System State
    {
        Zero, 
        Zero, 
        Zero
    })
    Name (_S4, Package (0x03)  // _S4_: S4 System State
    {
        0x06, 
        0x06, 
        Zero
    })
    Name (_S5, Package (0x03)  // _S5_: S5 System State
    {
        0x07, 
        0x07, 
        Zero
    })
    Method (_TTS, 1, NotSerialized)  // _TTS: Transition To State
    {
        SLTP = Arg0
    }

    Method (_PTS, 1, NotSerialized)  // _PTS: Prepare To Sleep
    {
        P80D = Zero
        P8XH (Zero, Arg0)
        If (!OSDW ())
        {
            \_SB.PCI0.LPCB.EC.EWBT = One
            \_SB.PCI0.LPCB.EC.EWLN = One
            If ((Arg0 == 0x03))
            {
                \_SB.PCI0.URT0.BLTH.BTLP (One)
                Sleep (0x03E8)
                \_SB.PCI0.LPCB.EC.EWPM = One
                \_SB.PCI0.LPCB.EC.EWDK = One
            }

            \_SB.PCI0.LPCB.EC.EWEP = Zero
        }

        If ((!OSDW () && (Arg0 >= 0x04)))
        {
            \_SB.PCI0.LPCB.EC.EWLO = Zero
        }

        If ((Arg0 >= 0x05))
        {
            \_SB.PCI0.PEG1.UPSB.LSTX (Zero, One)
            \_SB.PCI0.PEG1.UPSB.LSTX (One, One)
            \_SB.PCI0.PEG2.UPSB.LSTX (Zero, One)
            \_SB.PCI0.PEG2.UPSB.LSTX (One, One)
        }

        If ((Arg0 == 0x04))
        {
            \_SB.PCI0.LPCB.EC.EWTB = Zero
        }

        \_SB.PCI0.LPCB.EC.ECSS = Arg0
    }

    Method (_WAK, 1, NotSerialized)  // _WAK: Wake
    {
        P8XH (Zero, Zero)
        \_SB.PCI0.LPCB.EC.ECSS = Zero
        If (!OSDW ())
        {
            \_SB.PCI0.PEG1.DTFP ()
            \_SB.PCI0.PEG2.DTFP ()
            Sleep (0x012C)
            If (TBG1)
            {
                \_SB.PCI0.PEG1.ICMB (Arg0)
            }

            If (TBG2)
            {
                \_SB.PCI0.PEG2.ICMB (Arg0)
            }

            If ((Arg0 == 0x03))
            {
                \_SB.PCI0.URT0.BLTH.BTLP (Zero)
            }
        }

        If (OSDW ()) {}
        Else
        {
        }

        LIDS = \_SB.PCI0.LPCB.EC.ELSW
        \_SB.PCI0.IGPU.CLID = \_SB.PCI0.LPCB.EC.ELSW
        PWRS = \_SB.PCI0.LPCB.EC.EACP
        If (!OSDW ())
        {
            Notify (\_SB.PWRB, 0x02) // Device Wake
        }

        \_SB.PCI0.LPCB.EC.LWE0 = Zero
        \_SB.PCI0.LPCB.EC.LWE1 = Zero
        \_SB.PCI0.LPCB.EC.LWE2 = Zero
        \_SB.PCI0.LPCB.EC.LWE3 = Zero
        \_SB.PCI0.LPCB.EC.LWE4 = Zero
        \_SB.PCI0.LPCB.EC.LWE5 = Zero
        \_SB.PCI0.LPCB.EC.LWE6 = Zero
        \_SB.PCI0.LPCB.EC.LWE7 = Zero
        PNOT ()
        Return (Package (0x02)
        {
            Zero, 
            Zero
        })
    }
}



ECDT
----
[000h 0000   4]                    Signature : "ECDT"    [Embedded Controller Boot Resources Table]
[004h 0004   4]                 Table Length : 00000053
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : E2
[00Ah 0010   6]                       Oem ID : "APPLE "
[010h 0016   8]                 Oem Table ID : "Apple00"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "Loki"
[020h 0032   4]        Asl Compiler Revision : 0000005F


[024h 0036  12]      Command/Status Register : [Generic Address Structure]
[024h 0036   1]                     Space ID : 01 [SystemIO]
[025h 0037   1]                    Bit Width : 08
[026h 0038   1]                   Bit Offset : 00
[027h 0039   1]         Encoded Access Width : 00 [Undefined/Legacy]
[028h 0040   8]                      Address : 0000000000000066

[030h 0048  12]                Data Register : [Generic Address Structure]
[030h 0048   1]                     Space ID : 01 [SystemIO]
[031h 0049   1]                    Bit Width : 08
[032h 0050   1]                   Bit Offset : 00
[033h 0051   1]         Encoded Access Width : 00 [Undefined/Legacy]
[034h 0052   8]                      Address : 0000000000000062

[03Ch 0060   4]                          UID : 00000000
[040h 0064   1]                   GPE Number : 6E
[041h 0065  18]                     Namepath : "\_SB.PCI0.LPCB.EC"

Raw Table Data: Length 83 (0x53)

    0000: 45 43 44 54 53 00 00 00 01 E2 41 50 50 4C 45 20  // ECDTS.....APPLE 
    0010: 41 70 70 6C 65 30 30 00 01 00 00 00 4C 6F 6B 69  // Apple00.....Loki
    0020: 5F 00 00 00 01 08 00 00 66 00 00 00 00 00 00 00  // _.......f.......
    0030: 01 08 00 00 62 00 00 00 00 00 00 00 00 00 00 00  // ....b...........
    0040: 6E 5C 5F 53 42 2E 50 43 49 30 2E 4C 50 43 42 2E  // n\_SB.PCI0.LPCB.
    0050: 45 43 00                                         // EC.


FACP
----
[000h 0000   4]                    Signature : "FACP"    [Fixed ACPI Description Table (FADT)]
[004h 0004   4]                 Table Length : 000000F4
[008h 0008   1]                     Revision : 05
[009h 0009   1]                     Checksum : 7D
[00Ah 0010   6]                       Oem ID : "APPLE "
[010h 0016   8]                 Oem Table ID : "Apple00"
[018h 0024   4]                 Oem Revision : 00000000
[01Ch 0028   4]              Asl Compiler ID : "Loki"
[020h 0032   4]        Asl Compiler Revision : 0000005F

[024h 0036   4]                 FACS Address : 7AF17000
[028h 0040   4]                 DSDT Address : 7AFE4000
[02Ch 0044   1]                        Model : 00
[02Dh 0045   1]                   PM Profile : 02 [Mobile]
[02Eh 0046   2]                SCI Interrupt : 0009
[030h 0048   4]             SMI Command Port : 000000B2
[034h 0052   1]            ACPI Enable Value : F0
[035h 0053   1]           ACPI Disable Value : F1
[036h 0054   1]               S4BIOS Command : 00
[037h 0055   1]              P-State Control : 00
[038h 0056   4]     PM1A Event Block Address : 00001800
[03Ch 0060   4]     PM1B Event Block Address : 00000000
[040h 0064   4]   PM1A Control Block Address : 00001804
[044h 0068   4]   PM1B Control Block Address : 00000000
[048h 0072   4]    PM2 Control Block Address : 00001850
[04Ch 0076   4]       PM Timer Block Address : 00001808
[050h 0080   4]           GPE0 Block Address : 00001860
[054h 0084   4]           GPE1 Block Address : 00000000
[058h 0088   1]       PM1 Event Block Length : 04
[059h 0089   1]     PM1 Control Block Length : 02
[05Ah 0090   1]     PM2 Control Block Length : 01
[05Bh 0091   1]        PM Timer Block Length : 04
[05Ch 0092   1]            GPE0 Block Length : 20
[05Dh 0093   1]            GPE1 Block Length : 00
[05Eh 0094   1]             GPE1 Base Offset : 10
[05Fh 0095   1]                 _CST Support : 85
[060h 0096   2]                   C2 Latency : 0065
[062h 0098   2]                   C3 Latency : 03E9
[064h 0100   2]               CPU Cache Size : 0000
[066h 0102   2]           Cache Flush Stride : 0000
[068h 0104   1]            Duty Cycle Offset : 01
[069h 0105   1]             Duty Cycle Width : 03
[06Ah 0106   1]          RTC Day Alarm Index : 0D
[06Bh 0107   1]        RTC Month Alarm Index : 00
[06Ch 0108   1]            RTC Century Index : 32
[06Dh 0109   2]   Boot Flags (decoded below) : 0011
               Legacy Devices Supported (V2) : 1
            8042 Present on ports 60/64 (V2) : 0
                        VGA Not Present (V4) : 0
                      MSI Not Supported (V4) : 0
                PCIe ASPM Not Supported (V4) : 1
                   CMOS RTC Not Present (V5) : 0
[06Fh 0111   1]                     Reserved : 00
[070h 0112   4]        Flags (decoded below) : 0000C4A5
      WBINVD instruction is operational (V1) : 1
              WBINVD flushes all caches (V1) : 0
                    All CPUs support C1 (V1) : 1
                  C2 works on MP system (V1) : 0
            Control Method Power Button (V1) : 0
            Control Method Sleep Button (V1) : 1
        RTC wake not in fixed reg space (V1) : 0
            RTC can wake system from S4 (V1) : 1
                        32-bit PM Timer (V1) : 0
                      Docking Supported (V1) : 0
               Reset Register Supported (V2) : 1
                            Sealed Case (V3) : 0
                    Headless - No Video (V3) : 0
        Use native instr after SLP_TYPx (V3) : 0
              PCIEXP_WAK Bits Supported (V4) : 1
                     Use Platform Timer (V4) : 1
               RTC_STS valid on S4 wake (V4) : 0
                Remote Power-on capable (V4) : 0
                 Use APIC Cluster Model (V4) : 0
     Use APIC Physical Destination Mode (V4) : 0
                       Hardware Reduced (V5) : 0
                      Low Power S0 Idle (V5) : 0

[074h 0116  12]               Reset Register : [Generic Address Structure]
[074h 0116   1]                     Space ID : 01 [SystemIO]
[075h 0117   1]                    Bit Width : 08
[076h 0118   1]                   Bit Offset : 00
[077h 0119   1]         Encoded Access Width : 01 [Byte Access:8]
[078h 0120   8]                      Address : 0000000000000CF9

[080h 0128   1]         Value to cause reset : 06
[081h 0129   2]    ARM Flags (decoded below) : 0000
                              PSCI Compliant : 0
                       Must use HVC for PSCI : 0

[083h 0131   1]          FADT Minor Revision : 00
[084h 0132   8]                 FACS Address : 0000000000000000
[08Ch 0140   8]                 DSDT Address : 000000007AFE4000
[094h 0148  12]             PM1A Event Block : [Generic Address Structure]
[094h 0148   1]                     Space ID : 01 [SystemIO]
[095h 0149   1]                    Bit Width : 20
[096h 0150   1]                   Bit Offset : 00
[097h 0151   1]         Encoded Access Width : 03 [DWord Access:32]
[098h 0152   8]                      Address : 0000000000001800

[0A0h 0160  12]             PM1B Event Block : [Generic Address Structure]
[0A0h 0160   1]                     Space ID : 01 [SystemIO]
[0A1h 0161   1]                    Bit Width : 00
[0A2h 0162   1]                   Bit Offset : 00
[0A3h 0163   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0A4h 0164   8]                      Address : 0000000000000000

[0ACh 0172  12]           PM1A Control Block : [Generic Address Structure]
[0ACh 0172   1]                     Space ID : 01 [SystemIO]
[0ADh 0173   1]                    Bit Width : 10
[0AEh 0174   1]                   Bit Offset : 00
[0AFh 0175   1]         Encoded Access Width : 02 [Word Access:16]
[0B0h 0176   8]                      Address : 0000000000001804

[0B8h 0184  12]           PM1B Control Block : [Generic Address Structure]
[0B8h 0184   1]                     Space ID : 01 [SystemIO]
[0B9h 0185   1]                    Bit Width : 00
[0BAh 0186   1]                   Bit Offset : 00
[0BBh 0187   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0BCh 0188   8]                      Address : 0000000000000000

[0C4h 0196  12]            PM2 Control Block : [Generic Address Structure]
[0C4h 0196   1]                     Space ID : 01 [SystemIO]
[0C5h 0197   1]                    Bit Width : 08
[0C6h 0198   1]                   Bit Offset : 00
[0C7h 0199   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0C8h 0200   8]                      Address : 0000000000001850

[0D0h 0208  12]               PM Timer Block : [Generic Address Structure]
[0D0h 0208   1]                     Space ID : 01 [SystemIO]
[0D1h 0209   1]                    Bit Width : 20
[0D2h 0210   1]                   Bit Offset : 00
[0D3h 0211   1]         Encoded Access Width : 03 [DWord Access:32]
[0D4h 0212   8]                      Address : 0000000000001808

[0DCh 0220  12]                   GPE0 Block : [Generic Address Structure]
[0DCh 0220   1]                     Space ID : 01 [SystemIO]
[0DDh 0221   1]                    Bit Width : 00
[0DEh 0222   1]                   Bit Offset : 00
[0DFh 0223   1]         Encoded Access Width : 01 [Byte Access:8]
[0E0h 0224   8]                      Address : 0000000000001860

[0E8h 0232  12]                   GPE1 Block : [Generic Address Structure]
[0E8h 0232   1]                     Space ID : 01 [SystemIO]
[0E9h 0233   1]                    Bit Width : 00
[0EAh 0234   1]                   Bit Offset : 00
[0EBh 0235   1]         Encoded Access Width : 01 [Byte Access:8]
[0ECh 0236   8]                      Address : 0000000000000000


// ACPI Warning: FADT revision 5 does not match length: found F4 expected 10C

Raw Table Data: Length 244 (0xF4)

    0000: 46 41 43 50 F4 00 00 00 05 7D 41 50 50 4C 45 20  // FACP.....}APPLE 
    0010: 41 70 70 6C 65 30 30 00 00 00 00 00 4C 6F 6B 69  // Apple00.....Loki
    0020: 5F 00 00 00 00 70 F1 7A 00 40 FE 7A 00 02 09 00  // _....p.z.@.z....
    0030: B2 00 00 00 F0 F1 00 00 00 18 00 00 00 00 00 00  // ................
    0040: 04 18 00 00 00 00 00 00 50 18 00 00 08 18 00 00  // ........P.......
    0050: 60 18 00 00 00 00 00 00 04 02 01 04 20 00 10 85  // `........... ...
    0060: 65 00 E9 03 00 00 00 00 01 03 0D 00 32 11 00 00  // e...........2...
    0070: A5 C4 00 00 01 08 00 01 F9 0C 00 00 00 00 00 00  // ................
    0080: 06 00 00 00 00 00 00 00 00 00 00 00 00 40 FE 7A  // .............@.z
    0090: 00 00 00 00 01 20 00 03 00 18 00 00 00 00 00 00  // ..... ..........
    00A0: 01 00 00 00 00 00 00 00 00 00 00 00 01 10 00 02  // ................
    00B0: 04 18 00 00 00 00 00 00 01 00 00 00 00 00 00 00  // ................
    00C0: 00 00 00 00 01 08 00 00 50 18 00 00 00 00 00 00  // ........P.......
    00D0: 01 20 00 03 08 18 00 00 00 00 00 00 01 00 00 01  // . ..............
    00E0: 60 18 00 00 00 00 00 00 01 00 00 01 00 00 00 00  // `...............
    00F0: 00 00 00 00                                      // ....


FACS
----
[000h 0000   4]                    Signature : "FACS"
[004h 0004   4]                       Length : 00000040
[008h 0008   4]           Hardware Signature : 00000000
[00Ch 0012   4]    32 Firmware Waking Vector : 00000000
[010h 0016   4]                  Global Lock : 00000000
[014h 0020   4]        Flags (decoded below) : 00000000
                      S4BIOS Support Present : 0
                  64-bit Wake Supported (V2) : 0
[018h 0024   8]    64 Firmware Waking Vector : 0000000000000000
[020h 0032   1]                      Version : 01
[021h 0033   3]                     Reserved : 000000
[024h 0036   4]    OspmFlags (decoded below) : 00000000
               64-bit Wake Env Required (V2) : 0

Raw Table Data: Length 64 (0x40)

    0000: 46 41 43 53 40 00 00 00 00 00 00 00 00 00 00 00  // FACS@...........
    0010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0020: 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................


HPET
----
[000h 0000   4]                    Signature : "HPET"    [High Precision Event Timer table]
[004h 0004   4]                 Table Length : 00000038
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 8C
[00Ah 0010   6]                       Oem ID : "APPLE "
[010h 0016   8]                 Oem Table ID : "Apple00"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "Loki"
[020h 0032   4]        Asl Compiler Revision : 0000005F

[024h 0036   4]            Hardware Block ID : 8086A201

[028h 0040  12]         Timer Block Register : [Generic Address Structure]
[028h 0040   1]                     Space ID : 00 [SystemMemory]
[029h 0041   1]                    Bit Width : 40
[02Ah 0042   1]                   Bit Offset : 00
[02Bh 0043   1]         Encoded Access Width : 00 [Undefined/Legacy]
[02Ch 0044   8]                      Address : 00000000FED00000

[034h 0052   1]              Sequence Number : 00
[035h 0053   2]          Minimum Clock Ticks : 0080
[037h 0055   1]        Flags (decoded below) : 00
                             4K Page Protect : 0
                            64K Page Protect : 0

Raw Table Data: Length 56 (0x38)

    0000: 48 50 45 54 38 00 00 00 01 8C 41 50 50 4C 45 20  // HPET8.....APPLE 
    0010: 41 70 70 6C 65 30 30 00 01 00 00 00 4C 6F 6B 69  // Apple00.....Loki
    0020: 5F 00 00 00 01 A2 86 80 00 40 00 00 00 00 D0 FE  // _........@......
    0030: 00 00 00 00 00 80 00 00                          // ........


MCFG
----
[000h 0000   4]                    Signature : "MCFG"    [Memory Mapped Configuration table]
[004h 0004   4]                 Table Length : 0000003C
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 02
[00Ah 0010   6]                       Oem ID : "APPLE "
[010h 0016   8]                 Oem Table ID : "Apple00"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "Loki"
[020h 0032   4]        Asl Compiler Revision : 0000005F

[024h 0036   8]                     Reserved : 0000000000000000

[02Ch 0044   8]                 Base Address : 00000000E0000000
[034h 0052   2]         Segment Group Number : 0000
[036h 0054   1]             Start Bus Number : 00
[037h 0055   1]               End Bus Number : F1
[038h 0056   4]                     Reserved : 00000000

Raw Table Data: Length 60 (0x3C)

    0000: 4D 43 46 47 3C 00 00 00 01 02 41 50 50 4C 45 20  // MCFG<.....APPLE 
    0010: 41 70 70 6C 65 30 30 00 01 00 00 00 4C 6F 6B 69  // Apple00.....Loki
    0020: 5F 00 00 00 00 00 00 00 00 00 00 00 00 00 00 E0  // _...............
    0030: 00 00 00 00 00 00 00 F1 00 00 00 00              // ............


SBST
----
[000h 0000   4]                    Signature : "SBST"    [Smart Battery Specification Table]
[004h 0004   4]                 Table Length : 00000030
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 84
[00Ah 0010   6]                       Oem ID : "APPLE "
[010h 0016   8]                 Oem Table ID : "Apple00"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "Loki"
[020h 0032   4]        Asl Compiler Revision : 0000005F

[024h 0036   4]                Warning Level : 0000001E
[028h 0040   4]                    Low Level : 00000014
[02Ch 0044   4]               Critical Level : 0000000A

Raw Table Data: Length 48 (0x30)

    0000: 53 42 53 54 30 00 00 00 01 84 41 50 50 4C 45 20  // SBST0.....APPLE 
    0010: 41 70 70 6C 65 30 30 00 01 00 00 00 4C 6F 6B 69  // Apple00.....Loki
    0020: 5F 00 00 00 1E 00 00 00 14 00 00 00 0A 00 00 00  // _...............


SSDT1
-----
DefinitionBlock ("", "SSDT", 2, "PmRef", "ApCst", 0x00003000)
{
    External (_PR_.CPU0._CST, UnknownObj)
    External (_PR_.CPU1, DeviceObj)
    External (_PR_.CPU2, DeviceObj)
    External (_PR_.CPU3, DeviceObj)
    External (_PR_.CPU4, DeviceObj)
    External (_PR_.CPU5, DeviceObj)
    External (_PR_.CPU6, DeviceObj)
    External (_PR_.CPU7, DeviceObj)
    External (_PR_.CPU8, DeviceObj)
    External (_PR_.CPU9, DeviceObj)
    External (_PR_.CPUA, DeviceObj)
    External (_PR_.CPUB, DeviceObj)

    Scope (\_PR.CPU1)
    {
        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            Return (\_PR.CPU0._CST) /* External reference */
        }
    }

    Scope (\_PR.CPU2)
    {
        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            Return (\_PR.CPU0._CST) /* External reference */
        }
    }

    Scope (\_PR.CPU3)
    {
        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            Return (\_PR.CPU0._CST) /* External reference */
        }
    }

    Scope (\_PR.CPU4)
    {
        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            Return (\_PR.CPU0._CST) /* External reference */
        }
    }

    Scope (\_PR.CPU5)
    {
        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            Return (\_PR.CPU0._CST) /* External reference */
        }
    }

    Scope (\_PR.CPU6)
    {
        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            Return (\_PR.CPU0._CST) /* External reference */
        }
    }

    Scope (\_PR.CPU7)
    {
        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            Return (\_PR.CPU0._CST) /* External reference */
        }
    }

    Scope (\_PR.CPU8)
    {
        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            Return (\_PR.CPU0._CST) /* External reference */
        }
    }

    Scope (\_PR.CPU9)
    {
        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            Return (\_PR.CPU0._CST) /* External reference */
        }
    }

    Scope (\_PR.CPUA)
    {
        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            Return (\_PR.CPU0._CST) /* External reference */
        }
    }

    Scope (\_PR.CPUB)
    {
        Method (_CST, 0, NotSerialized)  // _CST: C-States
        {
            Return (\_PR.CPU0._CST) /* External reference */
        }
    }
}



SSDT10
------
DefinitionBlock ("", "SSDT", 2, "APPLE ", "PEG0GFX0", 0x00001000)
{
    External (_SB_.PCI0.PEG0, DeviceObj)
    External (_SB_.PCI0.PEG0.EGP0.EGP1.GFX0.P0DI, FieldUnitObj)
    External (_SB_.PCI0.PEG0.EGP0.EGP1.GFX0.P0VI, FieldUnitObj)
    External (_SB_.PCI0.PEG0.EGP0.EGP1.PSSB, FieldUnitObj)
    External (_SB_.PCI0.PEG0.EGP0.EGP1.RDVI, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.PEG0.EGP0.EGP1.SRBN, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.PEG0.EGP0.EGP1.VDID, FieldUnitObj)
    External (_SB_.PCI0.PEG0.EGP0.PSSB, FieldUnitObj)
    External (_SB_.PCI0.PEG0.EGP0.RDVI, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.PEG0.EGP0.SRBN, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.PEG0.EGP0.VDID, FieldUnitObj)
    External (BLCP, FieldUnitObj)
    External (BRTL, FieldUnitObj)
    External (DLHR, FieldUnitObj)
    External (DTGP, MethodObj)    // 5 Arguments
    External (EGPS, FieldUnitObj)
    External (GVNV, FieldUnitObj)
    External (MUTX, MutexObj)
    External (OSDW, MethodObj)    // 0 Arguments
    External (OSYS, FieldUnitObj)
    External (SSMP, FieldUnitObj)
    External (SSMY, FieldUnitObj)

    Scope (\_SB.PCI0.PEG0)
    {
        Device (EGP0)
        {
            Name (_ADR, Zero)  // _ADR: Address
            Name (SBN0, Zero)
            OperationRegion (EG0C, SystemMemory, 0xE0100000, 0x40)
            Field (EG0C, ByteAcc, NoLock, Preserve)
            {
                VDID,   32, 
                Offset (0x18), 
                PSSB,   32
            }

            Method (RDVI, 0, Serialized)
            {
                Local0 = Zero
                If ((VDID == 0xFFFFFFFF)) {}
                Else
                {
                    Local0 = One
                }

                Return (Local0)
            }

            Method (SRBN, 1, Serialized)
            {
                If ((Arg0 == Zero))
                {
                    SBN0 = PSSB /* \_SB_.PCI0.PEG0.EGP0.PSSB */
                }
                Else
                {
                    PSSB = SBN0 /* \_SB_.PCI0.PEG0.EGP0.SBN0 */
                    Local0 = PSSB /* \_SB_.PCI0.PEG0.EGP0.PSSB */
                }
            }

            Device (EGP1)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Name (SBN0, Zero)
                OperationRegion (EG1C, SystemMemory, 0xE0200000, 0x40)
                Field (EG1C, ByteAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x18), 
                    PSSB,   32
                }

                Method (RDVI, 0, Serialized)
                {
                    Local0 = Zero
                    If ((VDID == 0xFFFFFFFF)) {}
                    Else
                    {
                        Local0 = One
                    }
                }

                Method (SRBN, 1, Serialized)
                {
                    If ((Arg0 == Zero))
                    {
                        SBN0 = PSSB /* \_SB_.PCI0.PEG0.EGP0.EGP1.PSSB */
                    }
                    Else
                    {
                        PSSB = SBN0 /* \_SB_.PCI0.PEG0.EGP0.EGP1.SBN0 */
                        Local0 = PSSB /* \_SB_.PCI0.PEG0.EGP0.EGP1.PSSB */
                        Local0 = VDID /* \_SB_.PCI0.PEG0.EGP0.EGP1.VDID */
                    }
                }

                Device (GFX0)
                {
                    OperationRegion (OPG0, SystemMemory, 0xE0008000, 0x1000)
                    Field (OPG0, ByteAcc, NoLock, Preserve)
                    {
                        P0VI,   16, 
                        P0DI,   16, 
                        Offset (0x18), 
                        PG0P,   8, 
                        PG02,   8, 
                        PG0S,   8, 
                        Offset (0x3E), 
                            ,   6, 
                        SBRS,   1, 
                        Offset (0xB0), 
                            ,   5, 
                        RTRN,   1, 
                        Offset (0xC8), 
                            ,   10, 
                        LTRC,   1, 
                        Offset (0x248), 
                            ,   7, 
                        Q0L2,   1, 
                        Q0L0,   1, 
                        Offset (0x444), 
                            ,   31, 
                        BYPD,   1, 
                        Offset (0x91C), 
                            ,   31, 
                        BND0,   1, 
                        Offset (0x93C), 
                            ,   31, 
                        BND1,   1, 
                        Offset (0x95C), 
                            ,   31, 
                        BND2,   1, 
                        Offset (0x97C), 
                            ,   31, 
                        BND3,   1, 
                        Offset (0xC20), 
                            ,   4, 
                        RC20,   2, 
                        Offset (0xC38), 
                            ,   3, 
                        RC38,   1, 
                        Offset (0xC74), 
                        LTSS,   4
                    }

                    OperationRegion (GPU0, SystemMemory, 0xE0300000, 0x1000)
                    Field (GPU0, ByteAcc, NoLock, Preserve)
                    {
                        GVEN,   16, 
                        GDEV,   16, 
                        Offset (0x80), 
                            ,   10, 
                        LTRE,   1
                    }

                    Method (PUPD, 2, Serialized)
                    {
                        If ((Arg0 == Zero))
                        {
                            ^^^SRBN (Zero)
                            ^^SRBN (Zero)
                            LTRC = Zero
                            Local0 = PWG1 ()
                            If ((Local0 != Zero))
                            {
                                Return (One)
                            }

                            BNIR = 0x00FEFF00
                            Q0L2 = One
                            Local0 = (Timer + 0x00989680)
                            While ((Timer <= Local0))
                            {
                                If ((Q0L2 == Zero))
                                {
                                    RC20 = 0x03
                                    RC38 = One
                                    BND0 = One
                                    BND1 = One
                                    BND2 = One
                                    BND3 = One
                                    Break
                                }
                            }
                        }
                        Else
                        {
                            MBWR (0x50, One, 0x03)
                            Sleep (0xC8)
                            Local0 = (Timer + 0x002625A0)
                            Sleep (DLHR)
                            RC20 = Zero
                            RC38 = Zero
                            BND0 = Zero
                            BND1 = Zero
                            BND2 = Zero
                            BND3 = Zero
                            Q0L0 = One
                            Local1 = (Timer + 0x000F4240)
                            While ((Timer <= Local1))
                            {
                                If ((Q0L0 == Zero))
                                {
                                    Break
                                }
                            }

                            Local1 = (Timer + 0x000F4240)
                            While ((Timer <= Local1))
                            {
                                If ((LTSS != Zero)) {}
                                Else
                                {
                                    LTR0 = One
                                    Break
                                }
                            }

                            While ((Timer <= Local0)) {}
                            If (^^^RDVI ())
                            {
                                ^^^SRBN (One)
                                If (^^RDVI ())
                                {
                                    ^^SRBN (One)
                                    Local0 = (GDEV | (GVEN << 0x10))
                                }
                            }

                            Local0 = PWG3 ()
                            If ((Local0 != Zero))
                            {
                                Return (One)
                            }
                        }
                    }

                    Method (PWG1, 0, NotSerialized)
                    {
                        LTLS = One
                        LCRL = One
                        Local0 = Zero
                        While (LTRN)
                        {
                            If ((Local0 > 0x01F4))
                            {
                                Return (One)
                            }

                            Local0++
                            Sleep (One)
                        }

                        If ((LSTS == 0x08))
                        {
                            Return (Zero)
                        }
                        Else
                        {
                            Return (One)
                        }
                    }

                    Method (PWG3, 0, NotSerialized)
                    {
                        LTLS = 0x03
                        LCRL = One
                        Local0 = Zero
                        While (LTRN)
                        {
                            If ((Local0 > 0x01F4))
                            {
                                Return (One)
                            }

                            Local0++
                            Sleep (One)
                        }

                        If ((LSTS == 0x08))
                        {
                            Return (Zero)
                        }
                        Else
                        {
                            Return (One)
                        }
                    }

                    Name (_ADR, Zero)  // _ADR: Address
                    OperationRegion (SMBX, SystemMemory, 0xFE0B0200, 0x10)
                    Field (SMBX, ByteAcc, NoLock, Preserve)
                    {
                        DAT0,   8, 
                        DAT1,   8, 
                        DAT2,   8, 
                        DAT3,   8, 
                        Offset (0x0E), 
                        CMDR,   8, 
                        STSR,   8
                    }

                    Method (CSTS, 0, NotSerialized)
                    {
                        Local0 = 0x0A
                        Local1 = STSR /* \_SB_.PCI0.PEG0.EGP0.EGP1.GFX0.STSR */
                        Local2 = One
                        While (((Local0 != Zero) && (Local1 != Zero)))
                        {
                            Sleep (One)
                            Local0 -= One
                            Local1 = STSR /* \_SB_.PCI0.PEG0.EGP0.EGP1.GFX0.STSR */
                        }

                        Local1 = STSR /* \_SB_.PCI0.PEG0.EGP0.EGP1.GFX0.STSR */
                        If ((Local1 != Zero))
                        {
                            Local2 = Zero
                        }

                        Return (Local2)
                    }

                    Method (MBWR, 3, NotSerialized)
                    {
                        If (CSTS ())
                        {
                            If ((Arg1 == One))
                            {
                                DAT0 = (Arg2 & 0xFF)
                            }
                            ElseIf ((Arg1 == 0x02))
                            {
                                DAT0 = ((Arg2 >> 0x08) & 0xFF)
                                DAT1 = (Arg2 & 0xFF)
                            }
                            ElseIf ((Arg1 == 0x04))
                            {
                                DAT0 = ((Arg2 >> 0x18) & 0xFF)
                                DAT1 = ((Arg2 >> 0x10) & 0xFF)
                                DAT2 = ((Arg2 >> 0x08) & 0xFF)
                                DAT3 = (Arg2 & 0xFF)
                            }
                            Else
                            {
                                Return (Zero)
                            }

                            CMDR = Arg0
                            STSR = (Arg1 | 0x40)
                            If (!CSTS ()) {}
                        }
                        Else
                        {
                        }
                    }

                    Method (ABCM, 1, NotSerialized)
                    {
                        BRTL = Arg0
                        Divide ((Arg0 * 0xFFFF), 0x64, Local1, Local0)
                        MBWR (0x74, 0x04, Local0)
                        Return (Zero)
                    }

                    Method (ABCL, 0, NotSerialized)
                    {
                        Return (Package (0x5D)
                        {
                            0x50, 
                            0x32, 
                            Zero, 
                            One, 
                            0x02, 
                            0x03, 
                            0x04, 
                            0x05, 
                            0x06, 
                            0x07, 
                            0x08, 
                            0x09, 
                            0x0A, 
                            0x0B, 
                            0x0C, 
                            0x0D, 
                            0x0E, 
                            0x0F, 
                            0x10, 
                            0x11, 
                            0x12, 
                            0x13, 
                            0x14, 
                            0x15, 
                            0x16, 
                            0x17, 
                            0x18, 
                            0x19, 
                            0x1A, 
                            0x1B, 
                            0x1C, 
                            0x1D, 
                            0x1E, 
                            0x1F, 
                            0x20, 
                            0x21, 
                            0x22, 
                            0x23, 
                            0x24, 
                            0x25, 
                            0x26, 
                            0x27, 
                            0x28, 
                            0x29, 
                            0x2A, 
                            0x2B, 
                            0x2C, 
                            0x2D, 
                            0x2E, 
                            0x2F, 
                            0x30, 
                            0x31, 
                            0x32, 
                            0x33, 
                            0x34, 
                            0x35, 
                            0x36, 
                            0x37, 
                            0x38, 
                            0x39, 
                            0x3A, 
                            0x3B, 
                            0x3C, 
                            0x3D, 
                            0x3E, 
                            0x3F, 
                            0x40, 
                            0x41, 
                            0x42, 
                            0x43, 
                            0x44, 
                            0x45, 
                            0x46, 
                            0x47, 
                            0x48, 
                            0x49, 
                            0x4A, 
                            0x4B, 
                            0x4C, 
                            0x4D, 
                            0x4E, 
                            0x4F, 
                            0x50, 
                            0x51, 
                            0x52, 
                            0x53, 
                            0x54, 
                            0x55, 
                            0x56, 
                            0x57, 
                            0x58, 
                            0x59, 
                            0x5A
                        })
                    }

                    Device (LCD)
                    {
                        Method (_ADR, 0, Serialized)  // _ADR: Address
                        {
                            Return (0x0110)
                        }

                        Method (_BCL, 0, NotSerialized)  // _BCL: Brightness Control Levels
                        {
                            Return (ABCL ())
                        }

                        Method (_BCM, 1, NotSerialized)  // _BCM: Brightness Control Method
                        {
                            ABCM (Arg0)
                        }

                        Method (_BQC, 0, NotSerialized)  // _BQC: Brightness Query Current
                        {
                            Return (BRTL) /* External reference */
                        }
                    }

                    Method (_DOD, 0, Serialized)  // _DOD: Display Output Devices
                    {
                        Return (Package (0x01)
                        {
                            0x0110
                        })
                    }

                    Name (ATIB, Buffer (0x0100) {})
                    Method (ATIF, 2, Serialized)
                    {
                        If ((Arg0 == Zero))
                        {
                            Return (AF00 ())
                        }

                        If ((Arg0 == One))
                        {
                            Return (AF01 ())
                        }

                        If ((Arg0 == 0x02))
                        {
                            Return (AF02 ())
                        }
                        Else
                        {
                            CreateWordField (ATIB, Zero, SSZE)
                            CreateWordField (ATIB, 0x02, VERN)
                            CreateDWordField (ATIB, 0x04, NMSK)
                            CreateDWordField (ATIB, 0x08, SFUN)
                            SSZE = Zero
                            VERN = Zero
                            NMSK = Zero
                            SFUN = Zero
                            Return (ATIB) /* \_SB_.PCI0.PEG0.EGP0.EGP1.GFX0.ATIB */
                        }
                    }

                    Method (AF00, 0, NotSerialized)
                    {
                        CreateWordField (ATIB, Zero, SSZE)
                        CreateWordField (ATIB, 0x02, VERN)
                        CreateDWordField (ATIB, 0x04, NMSK)
                        CreateDWordField (ATIB, 0x08, SFUN)
                        SSZE = 0x0C
                        VERN = One
                        NMSK = 0x0C
                        SFUN = 0x03
                        Return (ATIB) /* \_SB_.PCI0.PEG0.EGP0.EGP1.GFX0.ATIB */
                    }

                    Method (AF01, 0, NotSerialized)
                    {
                        CreateWordField (ATIB, Zero, SSZE)
                        CreateDWordField (ATIB, 0x02, VMSK)
                        CreateDWordField (ATIB, 0x06, FLGS)
                        SSZE = 0x0A
                        VMSK = 0x03
                        FLGS = One
                        Return (ATIB) /* \_SB_.PCI0.PEG0.EGP0.EGP1.GFX0.ATIB */
                    }

                    Method (AF02, 0, NotSerialized)
                    {
                        CreateWordField (ATIB, Zero, SSZE)
                        CreateDWordField (ATIB, 0x02, PSBI)
                        CreateByteField (ATIB, 0x09, FPWR)
                        CreateByteField (ATIB, 0x0A, FPID)
                        SSZE = 0x0D
                        PSBI = 0x08
                        FPWR = Zero
                        FPID = EGPS /* External reference */
                        Return (ATIB) /* \_SB_.PCI0.PEG0.EGP0.EGP1.GFX0.ATIB */
                    }

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        If (OSDW ())
                        {
                            Return (Package (0x02)
                            {
                                0x69, 
                                0x03
                            })
                        }
                        Else
                        {
                            Return (Package (0x02)
                            {
                                0x69, 
                                0x03
                            })
                        }
                    }

                    OperationRegion (PEGH, PCI_Config, Zero, 0x40)
                    Field (PEGH, ByteAcc, NoLock, Preserve)
                    {
                        VID0,   16, 
                        DID0,   16, 
                        GCMD,   8, 
                        Offset (0x24), 
                        BAR4,   32
                    }

                    OperationRegion (GBAR, SystemMemory, 0xE0008000, 0x0100)
                    Field (GBAR, DWordAcc, NoLock, Preserve)
                    {
                        Offset (0x04), 
                        BCMD,   8, 
                        Offset (0x18), 
                        BNIR,   32, 
                        Offset (0x20), 
                        MBAS,   32, 
                        Offset (0xB0), 
                            ,   4, 
                        LNKD,   1, 
                        LCRL,   1, 
                        Offset (0xB2), 
                        LNKS,   4, 
                        LSTS,   6, 
                            ,   1, 
                        LTRN,   1, 
                        Offset (0xC8), 
                            ,   10, 
                        LTR0,   1, 
                        Offset (0xD0), 
                        LTLS,   4
                    }

                    Name (BNIS, Zero)
                    Name (BARS, Zero)
                    Method (PWRD, 1, NotSerialized)
                    {
                        Local0 = Zero
                        If (Arg0)
                        {
                            BNIS = BNIR /* \_SB_.PCI0.PEG0.EGP0.EGP1.GFX0.BNIR */
                            BARS = BAR4 /* \_SB_.PCI0.PEG0.EGP0.EGP1.GFX0.BAR4 */
                            PUPD (Zero, 0x04)
                            Local0 = Zero
                        }
                        Else
                        {
                            PUPD (One, 0x04)
                            Local0 = Zero
                            While (LTRN)
                            {
                                If ((Local0 > 0x01F4))
                                {
                                    Return (One)
                                }

                                Local0++
                                Sleep (One)
                            }

                            If ((LSTS == 0x08))
                            {
                                Return (Zero)
                            }
                            Else
                            {
                                Return (One)
                            }
                        }

                        Return (Local0)
                    }

                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b") /* Unknown UUID */))
                        {
                            If (((VID0 & 0xFFFF) != 0xFFFF))
                            {
                                Local0 = Package (0x02)
                                    {
                                        "hda-gfx", 
                                        Buffer (0x0A)
                                        {
                                            "onboard-2"
                                        }
                                    }
                                DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                                Return (Local0)
                            }
                        }

                        Return (0x80000002)
                    }
                }

                Device (HDAU)
                {
                    Name (_ADR, One)  // _ADR: Address
                    OperationRegion (HDAH, PCI_Config, Zero, 0x40)
                    Field (HDAH, ByteAcc, NoLock, Preserve)
                    {
                        VID0,   16, 
                        DID0,   16
                    }

                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b") /* Unknown UUID */))
                        {
                            If (((VID0 & 0xFFFF) != 0xFFFF))
                            {
                                Local0 = Package (0x02)
                                    {
                                        "hda-gfx", 
                                        Buffer (0x0A)
                                        {
                                            "onboard-2"
                                        }
                                    }
                                DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                                Return (Local0)
                            }
                        }

                        Return (0x80000002)
                    }
                }
            }
        }
    }
}



SSDT11
------
DefinitionBlock ("", "SSDT", 2, "APPLE ", "Xhci", 0x00001000)
{
    External (_SB_.PCI0, DeviceObj)
    External (_SB_.PCI0.PEG1.UPSB.DSB2.XHC2, UnknownObj)
    External (_SB_.PCI0.PEG1.UPSB.DSB2.XHC2.MODU, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.PEG2.UPSB.DSB2.XHC3, UnknownObj)
    External (_SB_.PCI0.PEG2.UPSB.DSB2.XHC3.MODU, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.XDCI.D0I3, UnknownObj)
    External (_SB_.PCI0.XDCI.DVID, UnknownObj)
    External (DTGP, MethodObj)    // 5 Arguments
    External (OSDW, MethodObj)    // 0 Arguments
    External (OSYS, UnknownObj)
    External (PCHS, UnknownObj)
    External (SLTP, UnknownObj)
    External (U2OP, UnknownObj)
    External (USBD, UnknownObj)

    Scope (\_SB.PCI0)
    {
        Device (XHC1)
        {
            Name (_ADR, 0x00140000)  // _ADR: Address
            Name (SDPC, Zero)
            Name (_GPE, 0x6D)  // _GPE: General Purpose Events
            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {
                If (OSDW ())
                {
                    Return (Package (0x02)
                    {
                        0x6D, 
                        0x03
                    })
                }
                Else
                {
                    Return (Package (0x02)
                    {
                        0x6D, 
                        0x03
                    })
                }
            }
        }

        Scope (\_SB.PCI0.XHC1)
        {
            Name (SBAR, Zero)
            OperationRegion (XPRT, PCI_Config, Zero, 0x0100)
            Field (XPRT, AnyAcc, NoLock, Preserve)
            {
                DVID,   16, 
                Offset (0x40), 
                    ,   11, 
                SWAI,   1, 
                Offset (0x44), 
                    ,   12, 
                SAIP,   2, 
                Offset (0x48), 
                Offset (0x50), 
                    ,   2, 
                STGE,   1, 
                Offset (0x74), 
                D0D3,   2, 
                Offset (0x75), 
                PMEE,   1, 
                    ,   6, 
                PMES,   1, 
                Offset (0xA2), 
                    ,   2, 
                D3HE,   1, 
                Offset (0xA8), 
                    ,   13, 
                MW13,   1, 
                MW14,   1, 
                Offset (0xAC), 
                Offset (0xB0), 
                    ,   13, 
                MB13,   1, 
                MB14,   1, 
                Offset (0xB4), 
                Offset (0xD0), 
                PR2,    32, 
                PR2M,   32, 
                PR3,    32, 
                PR3M,   32
            }

            OperationRegion (XHCP, SystemMemory, 0xE00A0000, 0x0100)
            Field (XHCP, AnyAcc, Lock, Preserve)
            {
                Offset (0x04), 
                PDBM,   16, 
                Offset (0x10), 
                MEMB,   64
            }

            Method (_PS0, 0, Serialized)  // _PS0: Power State 0
            {
                If (!OSDW ())
                {
                    If (USBD)
                    {
                        Return (Zero)
                    }
                }

                Local2 = ^MEMB /* \_SB_.PCI0.XHC1.MEMB */
                Local1 = ^PDBM /* \_SB_.PCI0.XHC1.PDBM */
                ^PDBM &= 0xFFFFFFFFFFFFFFF9
                ^D0D3 = Zero
                If ((SBAR == Zero))
                {
                    Local6 = Zero
                    Local7 = ^MEMB /* \_SB_.PCI0.XHC1.MEMB */
                    Local7 &= 0xFFFFFFFFFFFFFFF0
                    If (((Local7 == Zero) || (Local7 == 0xFFFFFFFFFFFFFFF0)))
                    {
                        ^MEMB = 0xFEAF0000
                        Local6 = One
                    }
                }
                Else
                {
                    ^MEMB = SBAR /* \_SB_.PCI0.XHC1.SBAR */
                }

                ^PDBM = (Local1 | 0x02)
                Local0 = ^MEMB /* \_SB_.PCI0.XHC1.MEMB */
                Local0 &= 0xFFFFFFFFFFFFFFF0
                OperationRegion (MCA1, SystemMemory, Local0, 0x9000)
                Field (MCA1, DWordAcc, NoLock, Preserve)
                {
                    Offset (0x81C4), 
                        ,   2, 
                    CLK0,   1, 
                        ,   3, 
                    CLK1,   1
                }

                CLK0 = Zero
                CLK1 = Zero
                OperationRegion (PSCA, SystemMemory, Local0, 0x0620)
                Field (PSCA, DWordAcc, NoLock, Preserve)
                {
                    Offset (0x580), 
                    PC17,   32, 
                    Offset (0x590), 
                    PC18,   32, 
                    Offset (0x5A0), 
                    PC19,   32, 
                    Offset (0x5B0), 
                    PC20,   32, 
                    Offset (0x5C0), 
                    PC21,   32, 
                    Offset (0x5D0), 
                    PC22,   32, 
                    Offset (0x5E0), 
                    PC23,   32, 
                    Offset (0x5F0), 
                    PC24,   32, 
                    Offset (0x600), 
                    PC25,   32, 
                    Offset (0x610), 
                    PC26,   32
                }

                Local1 = (PC17 & 0xFFFFFFFFFFFFFFFD)
                If (((Local1 & 0x010203F9) == 0x02E0))
                {
                    PC17 = (Local1 | 0x80000000)
                    Sleep (0x65)
                    Local1 = (PC17 & 0xFFFFFFFFFFFFFFFD)
                    PC17 = (Local1 | 0x00FE0000)
                }

                Local1 = (PC18 & 0xFFFFFFFFFFFFFFFD)
                If (((Local1 & 0x010203F9) == 0x02E0))
                {
                    PC18 = (Local1 | 0x80000000)
                    Sleep (0x65)
                    Local1 = (PC18 & 0xFFFFFFFFFFFFFFFD)
                    PC18 = (Local1 | 0x00FE0000)
                }

                Local1 = (PC19 & 0xFFFFFFFFFFFFFFFD)
                If (((Local1 & 0x010203F9) == 0x02E0))
                {
                    PC19 = (Local1 | 0x80000000)
                    Sleep (0x65)
                    Local1 = (PC19 & 0xFFFFFFFFFFFFFFFD)
                    PC19 = (Local1 | 0x00FE0000)
                }

                Local1 = (PC20 & 0xFFFFFFFFFFFFFFFD)
                If (((Local1 & 0x010203F9) == 0x02E0))
                {
                    PC20 = (Local1 | 0x80000000)
                    Sleep (0x65)
                    Local1 = (PC20 & 0xFFFFFFFFFFFFFFFD)
                    PC20 = (Local1 | 0x00FE0000)
                }

                Local1 = (PC21 & 0xFFFFFFFFFFFFFFFD)
                If (((Local1 & 0x010203F9) == 0x02E0))
                {
                    PC21 = (Local1 | 0x80000000)
                    Sleep (0x65)
                    Local1 = (PC21 & 0xFFFFFFFFFFFFFFFD)
                    PC21 = (Local1 | 0x00FE0000)
                }

                Local1 = (PC22 & 0xFFFFFFFFFFFFFFFD)
                If (((Local1 & 0x010203F9) == 0x02E0))
                {
                    PC22 = (Local1 | 0x80000000)
                    Sleep (0x65)
                    Local1 = (PC22 & 0xFFFFFFFFFFFFFFFD)
                    PC22 = (Local1 | 0x00FE0000)
                }

                Local1 = (PC23 & 0xFFFFFFFFFFFFFFFD)
                If (((Local1 & 0x010203F9) == 0x02E0))
                {
                    PC23 = (Local1 | 0x80000000)
                    Sleep (0x65)
                    Local1 = (PC23 & 0xFFFFFFFFFFFFFFFD)
                    PC23 = (Local1 | 0x00FE0000)
                }

                Local1 = (PC24 & 0xFFFFFFFFFFFFFFFD)
                If (((Local1 & 0x010203F9) == 0x02E0))
                {
                    PC24 = (Local1 | 0x80000000)
                    Sleep (0x65)
                    Local1 = (PC24 & 0xFFFFFFFFFFFFFFFD)
                    PC24 = (Local1 | 0x00FE0000)
                }

                Local1 = (PC25 & 0xFFFFFFFFFFFFFFFD)
                If (((Local1 & 0x010203F9) == 0x02E0))
                {
                    PC25 = (Local1 | 0x80000000)
                    Sleep (0x65)
                    Local1 = (PC25 & 0xFFFFFFFFFFFFFFFD)
                    PC25 = (Local1 | 0x00FE0000)
                }

                Local1 = (PC26 & 0xFFFFFFFFFFFFFFFD)
                If (((Local1 & 0x010203F9) == 0x02E0))
                {
                    PC26 = (Local1 | 0x80000000)
                    Sleep (0x65)
                    Local1 = (PC26 & 0xFFFFFFFFFFFFFFFD)
                    PC26 = (Local1 | 0x00FE0000)
                }

                ^PDBM &= 0xFFFFFFFFFFFFFFFD
                ^MEMB = Local2
                ^PDBM = Local1
            }

            Method (_PS3, 0, Serialized)  // _PS3: Power State 3
            {
                If (!OSDW ())
                {
                    If (USBD)
                    {
                        Return (Zero)
                    }
                }

                Local1 = ^PDBM /* \_SB_.PCI0.XHC1.PDBM */
                Local2 = ^MEMB /* \_SB_.PCI0.XHC1.MEMB */
                ^PDBM &= 0xFFFFFFFFFFFFFFF9
                ^D0D3 = Zero
                ^PDBM = (Local1 | 0x02)
                SBAR = ^MEMB /* \_SB_.PCI0.XHC1.MEMB */
                If ((SBAR == Zero))
                {
                    Local6 = Zero
                    Local7 = ^MEMB /* \_SB_.PCI0.XHC1.MEMB */
                    Local7 &= 0xFFFFFFFFFFFFFFF0
                    If (((Local7 == Zero) || (Local7 == 0xFFFFFFFFFFFFFFF0)))
                    {
                        ^MEMB = 0xFEAF0000
                        Local6 = One
                    }
                }

                Local0 = ^MEMB /* \_SB_.PCI0.XHC1.MEMB */
                Local0 &= 0xFFFFFFFFFFFFFFF0
                OperationRegion (MCA1, SystemMemory, Local0, 0x9000)
                Field (MCA1, DWordAcc, NoLock, Preserve)
                {
                    Offset (0x480), 
                    PC01,   32, 
                    Offset (0x490), 
                    PC02,   32, 
                    Offset (0x4A0), 
                    PC03,   32, 
                    Offset (0x4B0), 
                    PC04,   32, 
                    Offset (0x4C0), 
                    PC05,   32, 
                    Offset (0x81C4), 
                        ,   2, 
                    CLK0,   1, 
                        ,   3, 
                    CLK1,   1
                }

                If (OSDW ())
                {
                    Local1 = ^PDBM /* \_SB_.PCI0.XHC1.PDBM */
                    Local2 = ^MEMB /* \_SB_.PCI0.XHC1.MEMB */
                    ^PDBM &= 0xFFFFFFFFFFFFFFF9
                    If (OSDW ())
                    {
                        If (((SLTP == 0x03) || (SLTP == Zero)))
                        {
                            ^D0D3 = 0x03
                            Stall (0x1E)
                        }
                    }
                }

                CLK0 = Zero
                CLK1 = One
                ^PDBM = Local1
                ^D0D3 = 0x03
                ^MEMB = Local2
                ^PDBM = Local1
            }

            Method (RTPC, 1, Serialized)
            {
                Return (Zero)
            }

            Method (MODU, 0, Serialized)
            {
                Local0 = \_SB.PCI0.PEG1.UPSB.DSB2.XHC2.MODU ()
                Local1 = \_SB.PCI0.PEG2.UPSB.DSB2.XHC3.MODU ()
                If (((Local0 == One) || (Local1 == One)))
                {
                    Local0 = One
                }
                ElseIf (((Local0 == 0xFF) || (Local1 == 0xFF)))
                {
                    Local0 = 0xFF
                }
                Else
                {
                    Local0 = Zero
                }

                Return (Local0)
            }

            Device (RHUB)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Device (HS01)
                {
                    Name (_ADR, One)  // _ADR: Address
                    Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                    {
                        0xFF, 
                        0x09, 
                        Zero, 
                        Zero
                    })
                    Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                    {
                        ToPLD (
                            PLD_Revision           = 0x1,
                            PLD_IgnoreColor        = 0x1,
                            PLD_Red                = 0x0,
                            PLD_Green              = 0x0,
                            PLD_Blue               = 0x0,
                            PLD_Width              = 0x0,
                            PLD_Height             = 0x0,
                            PLD_UserVisible        = 0x1,
                            PLD_Dock               = 0x0,
                            PLD_Lid                = 0x0,
                            PLD_Panel              = "UNKNOWN",
                            PLD_VerticalPosition   = "UPPER",
                            PLD_HorizontalPosition = "LEFT",
                            PLD_Shape              = "UNKNOWN",
                            PLD_GroupOrientation   = 0x0,
                            PLD_GroupToken         = 0x0,
                            PLD_GroupPosition      = 0x0,
                            PLD_Bay                = 0x0,
                            PLD_Ejectable          = 0x0,
                            PLD_EjectRequired      = 0x0,
                            PLD_CabinetNumber      = 0x0,
                            PLD_CardCageNumber     = 0x0,
                            PLD_Reference          = 0x0,
                            PLD_Rotation           = 0x0,
                            PLD_Order              = 0x0)

                    })
                    Name (SSP, Package (0x02)
                    {
                        "XHC3", 
                        0x03
                    })
                    Name (SS, Package (0x02)
                    {
                        "XHC3", 
                        0x03
                    })
                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        Local0 = Package (0x02)
                            {
                                "NoNumber", 
                                Zero
                            }
                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }
                }

                Device (HS02)
                {
                    Name (_ADR, 0x02)  // _ADR: Address
                    Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                    {
                        0xFF, 
                        0x09, 
                        Zero, 
                        Zero
                    })
                    Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                    {
                        ToPLD (
                            PLD_Revision           = 0x1,
                            PLD_IgnoreColor        = 0x1,
                            PLD_Red                = 0x0,
                            PLD_Green              = 0x0,
                            PLD_Blue               = 0x0,
                            PLD_Width              = 0x0,
                            PLD_Height             = 0x0,
                            PLD_UserVisible        = 0x1,
                            PLD_Dock               = 0x0,
                            PLD_Lid                = 0x0,
                            PLD_Panel              = "UNKNOWN",
                            PLD_VerticalPosition   = "UPPER",
                            PLD_HorizontalPosition = "LEFT",
                            PLD_Shape              = "UNKNOWN",
                            PLD_GroupOrientation   = 0x0,
                            PLD_GroupToken         = 0x0,
                            PLD_GroupPosition      = 0x0,
                            PLD_Bay                = 0x0,
                            PLD_Ejectable          = 0x0,
                            PLD_EjectRequired      = 0x0,
                            PLD_CabinetNumber      = 0x0,
                            PLD_CardCageNumber     = 0x0,
                            PLD_Reference          = 0x0,
                            PLD_Rotation           = 0x0,
                            PLD_Order              = 0x0)

                    })
                    Name (SSP, Package (0x02)
                    {
                        "XHC3", 
                        0x04
                    })
                    Name (SS, Package (0x02)
                    {
                        "XHC3", 
                        0x04
                    })
                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        Local0 = Package (0x02)
                            {
                                "NoNumber", 
                                Zero
                            }
                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }
                }

                Device (HS03)
                {
                    Name (_ADR, 0x03)  // _ADR: Address
                    Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                    {
                        0xFF, 
                        0x09, 
                        Zero, 
                        Zero
                    })
                    Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                    {
                        ToPLD (
                            PLD_Revision           = 0x1,
                            PLD_IgnoreColor        = 0x1,
                            PLD_Red                = 0x0,
                            PLD_Green              = 0x0,
                            PLD_Blue               = 0x0,
                            PLD_Width              = 0x0,
                            PLD_Height             = 0x0,
                            PLD_UserVisible        = 0x1,
                            PLD_Dock               = 0x0,
                            PLD_Lid                = 0x0,
                            PLD_Panel              = "UNKNOWN",
                            PLD_VerticalPosition   = "UPPER",
                            PLD_HorizontalPosition = "LEFT",
                            PLD_Shape              = "UNKNOWN",
                            PLD_GroupOrientation   = 0x0,
                            PLD_GroupToken         = 0x0,
                            PLD_GroupPosition      = 0x0,
                            PLD_Bay                = 0x0,
                            PLD_Ejectable          = 0x0,
                            PLD_EjectRequired      = 0x0,
                            PLD_CabinetNumber      = 0x0,
                            PLD_CardCageNumber     = 0x0,
                            PLD_Reference          = 0x0,
                            PLD_Rotation           = 0x0,
                            PLD_Order              = 0x0)

                    })
                    Name (SSP, Package (0x02)
                    {
                        "XHC2", 
                        0x03
                    })
                    Name (SS, Package (0x02)
                    {
                        "XHC2", 
                        0x03
                    })
                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        Local0 = Package (0x02)
                            {
                                "NoNumber", 
                                Zero
                            }
                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }
                }

                Device (HS04)
                {
                    Name (_ADR, 0x04)  // _ADR: Address
                    Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                    {
                        0xFF, 
                        0x09, 
                        Zero, 
                        Zero
                    })
                    Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                    {
                        ToPLD (
                            PLD_Revision           = 0x1,
                            PLD_IgnoreColor        = 0x1,
                            PLD_Red                = 0x0,
                            PLD_Green              = 0x0,
                            PLD_Blue               = 0x0,
                            PLD_Width              = 0x0,
                            PLD_Height             = 0x0,
                            PLD_UserVisible        = 0x1,
                            PLD_Dock               = 0x0,
                            PLD_Lid                = 0x0,
                            PLD_Panel              = "UNKNOWN",
                            PLD_VerticalPosition   = "UPPER",
                            PLD_HorizontalPosition = "LEFT",
                            PLD_Shape              = "UNKNOWN",
                            PLD_GroupOrientation   = 0x0,
                            PLD_GroupToken         = 0x0,
                            PLD_GroupPosition      = 0x0,
                            PLD_Bay                = 0x0,
                            PLD_Ejectable          = 0x0,
                            PLD_EjectRequired      = 0x0,
                            PLD_CabinetNumber      = 0x0,
                            PLD_CardCageNumber     = 0x0,
                            PLD_Reference          = 0x0,
                            PLD_Rotation           = 0x0,
                            PLD_Order              = 0x0)

                    })
                    Name (SSP, Package (0x02)
                    {
                        "XHC2", 
                        0x04
                    })
                    Name (SS, Package (0x02)
                    {
                        "XHC2", 
                        0x04
                    })
                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        Local0 = Package (0x02)
                            {
                                "NoNumber", 
                                Zero
                            }
                        DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                        Return (Local0)
                    }
                }

                Device (SS01)
                {
                    Name (_ADR, 0x11)  // _ADR: Address
                    Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                    {
                        Zero, 
                        0xFF, 
                        Zero, 
                        Zero
                    })
                    Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                    {
                        ToPLD (
                            PLD_Revision           = 0x1,
                            PLD_IgnoreColor        = 0x1,
                            PLD_Red                = 0x0,
                            PLD_Green              = 0x0,
                            PLD_Blue               = 0x0,
                            PLD_Width              = 0x0,
                            PLD_Height             = 0x0,
                            PLD_UserVisible        = 0x0,
                            PLD_Dock               = 0x0,
                            PLD_Lid                = 0x0,
                            PLD_Panel              = "UNKNOWN",
                            PLD_VerticalPosition   = "UPPER",
                            PLD_HorizontalPosition = "LEFT",
                            PLD_Shape              = "UNKNOWN",
                            PLD_GroupOrientation   = 0x0,
                            PLD_GroupToken         = 0x0,
                            PLD_GroupPosition      = 0x0,
                            PLD_Bay                = 0x0,
                            PLD_Ejectable          = 0x0,
                            PLD_EjectRequired      = 0x0,
                            PLD_CabinetNumber      = 0x0,
                            PLD_CardCageNumber     = 0x0,
                            PLD_Reference          = 0x0,
                            PLD_Rotation           = 0x0,
                            PLD_Order              = 0x0)

                    })
                }

                Device (SS02)
                {
                    Name (_ADR, 0x12)  // _ADR: Address
                    Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                    {
                        Zero, 
                        0xFF, 
                        Zero, 
                        Zero
                    })
                    Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                    {
                        ToPLD (
                            PLD_Revision           = 0x1,
                            PLD_IgnoreColor        = 0x1,
                            PLD_Red                = 0x0,
                            PLD_Green              = 0x0,
                            PLD_Blue               = 0x0,
                            PLD_Width              = 0x0,
                            PLD_Height             = 0x0,
                            PLD_UserVisible        = 0x0,
                            PLD_Dock               = 0x0,
                            PLD_Lid                = 0x0,
                            PLD_Panel              = "UNKNOWN",
                            PLD_VerticalPosition   = "UPPER",
                            PLD_HorizontalPosition = "LEFT",
                            PLD_Shape              = "UNKNOWN",
                            PLD_GroupOrientation   = 0x0,
                            PLD_GroupToken         = 0x0,
                            PLD_GroupPosition      = 0x0,
                            PLD_Bay                = 0x0,
                            PLD_Ejectable          = 0x0,
                            PLD_EjectRequired      = 0x0,
                            PLD_CabinetNumber      = 0x0,
                            PLD_CardCageNumber     = 0x0,
                            PLD_Reference          = 0x0,
                            PLD_Rotation           = 0x0,
                            PLD_Order              = 0x0)

                    })
                }

                Device (SS03)
                {
                    Name (_ADR, 0x13)  // _ADR: Address
                    Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                    {
                        Zero, 
                        0xFF, 
                        Zero, 
                        Zero
                    })
                    Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                    {
                        ToPLD (
                            PLD_Revision           = 0x1,
                            PLD_IgnoreColor        = 0x1,
                            PLD_Red                = 0x0,
                            PLD_Green              = 0x0,
                            PLD_Blue               = 0x0,
                            PLD_Width              = 0x0,
                            PLD_Height             = 0x0,
                            PLD_UserVisible        = 0x0,
                            PLD_Dock               = 0x0,
                            PLD_Lid                = 0x0,
                            PLD_Panel              = "UNKNOWN",
                            PLD_VerticalPosition   = "UPPER",
                            PLD_HorizontalPosition = "LEFT",
                            PLD_Shape              = "UNKNOWN",
                            PLD_GroupOrientation   = 0x0,
                            PLD_GroupToken         = 0x0,
                            PLD_GroupPosition      = 0x0,
                            PLD_Bay                = 0x0,
                            PLD_Ejectable          = 0x0,
                            PLD_EjectRequired      = 0x0,
                            PLD_CabinetNumber      = 0x0,
                            PLD_CardCageNumber     = 0x0,
                            PLD_Reference          = 0x0,
                            PLD_Rotation           = 0x0,
                            PLD_Order              = 0x0)

                    })
                }

                Device (SS04)
                {
                    Name (_ADR, 0x14)  // _ADR: Address
                    Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                    {
                        Zero, 
                        0xFF, 
                        Zero, 
                        Zero
                    })
                    Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                    {
                        ToPLD (
                            PLD_Revision           = 0x1,
                            PLD_IgnoreColor        = 0x1,
                            PLD_Red                = 0x0,
                            PLD_Green              = 0x0,
                            PLD_Blue               = 0x0,
                            PLD_Width              = 0x0,
                            PLD_Height             = 0x0,
                            PLD_UserVisible        = 0x0,
                            PLD_Dock               = 0x0,
                            PLD_Lid                = 0x0,
                            PLD_Panel              = "UNKNOWN",
                            PLD_VerticalPosition   = "UPPER",
                            PLD_HorizontalPosition = "LEFT",
                            PLD_Shape              = "UNKNOWN",
                            PLD_GroupOrientation   = 0x0,
                            PLD_GroupToken         = 0x0,
                            PLD_GroupPosition      = 0x0,
                            PLD_Bay                = 0x0,
                            PLD_Ejectable          = 0x0,
                            PLD_EjectRequired      = 0x0,
                            PLD_CabinetNumber      = 0x0,
                            PLD_CardCageNumber     = 0x0,
                            PLD_Reference          = 0x0,
                            PLD_Rotation           = 0x0,
                            PLD_Order              = 0x0)

                    })
                }

                Device (SS05)
                {
                    Name (_ADR, 0x15)  // _ADR: Address
                    Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                    {
                        Zero, 
                        0xFF, 
                        Zero, 
                        Zero
                    })
                    Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                    {
                        ToPLD (
                            PLD_Revision           = 0x1,
                            PLD_IgnoreColor        = 0x1,
                            PLD_Red                = 0x0,
                            PLD_Green              = 0x0,
                            PLD_Blue               = 0x0,
                            PLD_Width              = 0x0,
                            PLD_Height             = 0x0,
                            PLD_UserVisible        = 0x0,
                            PLD_Dock               = 0x0,
                            PLD_Lid                = 0x0,
                            PLD_Panel              = "UNKNOWN",
                            PLD_VerticalPosition   = "UPPER",
                            PLD_HorizontalPosition = "LEFT",
                            PLD_Shape              = "UNKNOWN",
                            PLD_GroupOrientation   = 0x0,
                            PLD_GroupToken         = 0x0,
                            PLD_GroupPosition      = 0x0,
                            PLD_Bay                = 0x0,
                            PLD_Ejectable          = 0x0,
                            PLD_EjectRequired      = 0x0,
                            PLD_CabinetNumber      = 0x0,
                            PLD_CardCageNumber     = 0x0,
                            PLD_Reference          = 0x0,
                            PLD_Rotation           = 0x0,
                            PLD_Order              = 0x0)

                    })
                }

                Device (SS06)
                {
                    Name (_ADR, 0x16)  // _ADR: Address
                    Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                    {
                        Zero, 
                        0xFF, 
                        Zero, 
                        Zero
                    })
                    Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                    {
                        ToPLD (
                            PLD_Revision           = 0x1,
                            PLD_IgnoreColor        = 0x1,
                            PLD_Red                = 0x0,
                            PLD_Green              = 0x0,
                            PLD_Blue               = 0x0,
                            PLD_Width              = 0x0,
                            PLD_Height             = 0x0,
                            PLD_UserVisible        = 0x0,
                            PLD_Dock               = 0x0,
                            PLD_Lid                = 0x0,
                            PLD_Panel              = "UNKNOWN",
                            PLD_VerticalPosition   = "UPPER",
                            PLD_HorizontalPosition = "LEFT",
                            PLD_Shape              = "UNKNOWN",
                            PLD_GroupOrientation   = 0x0,
                            PLD_GroupToken         = 0x0,
                            PLD_GroupPosition      = 0x0,
                            PLD_Bay                = 0x0,
                            PLD_Ejectable          = 0x0,
                            PLD_EjectRequired      = 0x0,
                            PLD_CabinetNumber      = 0x0,
                            PLD_CardCageNumber     = 0x0,
                            PLD_Reference          = 0x0,
                            PLD_Rotation           = 0x0,
                            PLD_Order              = 0x0)

                    })
                }
            }

            Method (MBSD, 0, NotSerialized)
            {
                Return (One)
            }

            Name (SSP, Package (0x02)
            {
                "XHC2", 
                "XHC3"
            })
            Name (SS, Package (0x02)
            {
                "XHC2", 
                "XHC3"
            })
        }
    }
}



SSDT12
------
DefinitionBlock ("", "SSDT", 2, "SaSsdt", "SaSsdt ", 0x00003000)
{
    External (_SB_.PCI0, DeviceObj)
    External (_SB_.PCI0.B0D3, DeviceObj)
    External (_SB_.PCI0.IGPU, DeviceObj)
    External (_SB_.PCI0.IGPU.HDOS, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.IGPU.HNOT, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.IPU0, DeviceObj)
    External (CPSC, UnknownObj)
    External (DSEN, UnknownObj)
    External (ECON, IntObj)
    External (GUAM, MethodObj)    // 1 Arguments
    External (OSYS, IntObj)
    External (PBCL, MethodObj)    // 0 Arguments
    External (PNHM, IntObj)
    External (S0ID, UnknownObj)

    OperationRegion (SANV, SystemMemory, 0x7AF1DC98, 0x01F4)
    Field (SANV, AnyAcc, Lock, Preserve)
    {
        ASLB,   32, 
        IMON,   8, 
        IGDS,   8, 
        IBTT,   8, 
        IPAT,   8, 
        IPSC,   8, 
        IBIA,   8, 
        ISSC,   8, 
        IDMS,   8, 
        IF1E,   8, 
        HVCO,   8, 
        GSMI,   8, 
        PAVP,   8, 
        CADL,   8, 
        CSTE,   16, 
        NSTE,   16, 
        NDID,   8, 
        DID1,   32, 
        DID2,   32, 
        DID3,   32, 
        DID4,   32, 
        DID5,   32, 
        DID6,   32, 
        DID7,   32, 
        DID8,   32, 
        DID9,   32, 
        DIDA,   32, 
        DIDB,   32, 
        DIDC,   32, 
        DIDD,   32, 
        DIDE,   32, 
        DIDF,   32, 
        DIDX,   32, 
        NXD1,   32, 
        NXD2,   32, 
        NXD3,   32, 
        NXD4,   32, 
        NXD5,   32, 
        NXD6,   32, 
        NXD7,   32, 
        NXD8,   32, 
        NXDX,   32, 
        LIDS,   8, 
        KSV0,   32, 
        KSV1,   8, 
        BRTL,   8, 
        ALSE,   8, 
        ALAF,   8, 
        LLOW,   8, 
        LHIH,   8, 
        ALFP,   8, 
        IPTP,   8, 
        EDPV,   8, 
        SGMD,   8, 
        SGFL,   8, 
        SGGP,   8, 
        HRE0,   8, 
        HRG0,   32, 
        HRA0,   8, 
        PWE0,   8, 
        PWG0,   32, 
        PWA0,   8, 
        P1GP,   8, 
        HRE1,   8, 
        HRG1,   32, 
        HRA1,   8, 
        PWE1,   8, 
        PWG1,   32, 
        PWA1,   8, 
        P2GP,   8, 
        HRE2,   8, 
        HRG2,   32, 
        HRA2,   8, 
        PWE2,   8, 
        PWG2,   32, 
        PWA2,   8, 
        DLPW,   16, 
        DLHR,   16, 
        EECP,   8, 
        XBAS,   32, 
        GBAS,   16, 
        NVGA,   32, 
        NVHA,   32, 
        AMDA,   32, 
        LTRX,   8, 
        OBFX,   8, 
        LTRY,   8, 
        OBFY,   8, 
        LTRZ,   8, 
        OBFZ,   8, 
        LTRW,   8, 
        OBFA,   8, 
        SMSL,   16, 
        SNSL,   16, 
        P0UB,   8, 
        P1UB,   8, 
        P2UB,   8, 
        P3UB,   8, 
        PCSL,   8, 
        PBGE,   8, 
        M64B,   64, 
        M64L,   64, 
        CPEX,   32, 
        EEC1,   8, 
        EEC2,   8, 
        SBN0,   8, 
        SBN1,   8, 
        SBN2,   8, 
        M32B,   32, 
        M32L,   32, 
        P0WK,   32, 
        P1WK,   32, 
        P2WK,   32, 
        VTDS,   8, 
        VTB1,   32, 
        VTB2,   32, 
        VTB3,   32, 
        VE1V,   16, 
        VE2V,   16, 
        SBN3,   8, 
        P3GP,   8, 
        HRE3,   8, 
        HRG3,   32, 
        HRA3,   8, 
        PWE3,   8, 
        PWG3,   32, 
        PWA3,   8, 
        P3WK,   32, 
        EEC3,   8, 
        RPIN,   8, 
        RPBA,   32, 
        Offset (0x1F4)
    }

    Scope (\_SB.PCI0.IGPU)
    {
        Name (TMP1, Package (0x01)
        {
            0xFFFFFFFF
        })
        Name (TMP2, Package (0x02)
        {
            0xFFFFFFFF, 
            0xFFFFFFFF
        })
        Name (TMP3, Package (0x03)
        {
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF
        })
        Name (TMP4, Package (0x04)
        {
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF
        })
        Name (TMP5, Package (0x05)
        {
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF
        })
        Name (TMP6, Package (0x06)
        {
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF
        })
        Name (TMP7, Package (0x07)
        {
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF
        })
        Name (TMP8, Package (0x08)
        {
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF
        })
        Name (TMP9, Package (0x09)
        {
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF
        })
        Name (TMPA, Package (0x0A)
        {
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF
        })
        Name (TMPB, Package (0x0B)
        {
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF
        })
        Name (TMPC, Package (0x0C)
        {
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF
        })
        Name (TMPD, Package (0x0D)
        {
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF
        })
        Name (TMPE, Package (0x0E)
        {
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF
        })
        Name (TMPF, Package (0x0F)
        {
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF
        })
        Name (TMPG, Package (0x10)
        {
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF, 
            0xFFFFFFFF
        })
        Method (_DOS, 1, NotSerialized)  // _DOS: Disable Output Switching
        {
            DSEN = (Arg0 & 0x07)
            If (((Arg0 & 0x03) == Zero))
            {
                If (CondRefOf (HDOS))
                {
                    HDOS ()
                }
            }
        }

        Method (_DOD, 0, NotSerialized)  // _DOD: Display Output Devices
        {
            If ((IPTP == One))
            {
                NDID = One
            }
            Else
            {
                NDID = Zero
            }

            If ((DIDL != Zero))
            {
                DID1 = SDDL (DIDL)
            }

            If ((DDL2 != Zero))
            {
                DID2 = SDDL (DDL2)
            }

            If ((DDL3 != Zero))
            {
                DID3 = SDDL (DDL3)
            }

            If ((DDL4 != Zero))
            {
                DID4 = SDDL (DDL4)
            }

            If ((DDL5 != Zero))
            {
                DID5 = SDDL (DDL5)
            }

            If ((DDL6 != Zero))
            {
                DID6 = SDDL (DDL6)
            }

            If ((DDL7 != Zero))
            {
                DID7 = SDDL (DDL7)
            }

            If ((DDL8 != Zero))
            {
                DID8 = SDDL (DDL8)
            }

            If ((DDL9 != Zero))
            {
                DID9 = SDDL (DDL9)
            }

            If ((DD10 != Zero))
            {
                DIDA = SDDL (DD10)
            }

            If ((DD11 != Zero))
            {
                DIDB = SDDL (DD11)
            }

            If ((DD12 != Zero))
            {
                DIDC = SDDL (DD12)
            }

            If ((DD13 != Zero))
            {
                DIDD = SDDL (DD13)
            }

            If ((DD14 != Zero))
            {
                DIDE = SDDL (DD14)
            }

            If ((DD15 != Zero))
            {
                DIDF = SDDL (DD15)
            }

            If ((NDID == One))
            {
                If ((IPTP == One))
                {
                    TMP1 [Zero] = 0x00023480
                }
                Else
                {
                    TMP1 [Zero] = (0x00010000 | DID1)
                }

                Return (TMP1) /* \_SB_.PCI0.IGPU.TMP1 */
            }

            If ((NDID == 0x02))
            {
                TMP2 [Zero] = (0x00010000 | DID1)
                If ((IPTP == One))
                {
                    TMP2 [One] = 0x00023480
                }
                Else
                {
                    TMP2 [One] = (0x00010000 | DID2)
                }

                Return (TMP2) /* \_SB_.PCI0.IGPU.TMP2 */
            }

            If ((NDID == 0x03))
            {
                TMP3 [Zero] = (0x00010000 | DID1)
                TMP3 [One] = (0x00010000 | DID2)
                If ((IPTP == One))
                {
                    TMP3 [0x02] = 0x00023480
                }
                Else
                {
                    TMP3 [0x02] = (0x00010000 | DID3)
                }

                Return (TMP3) /* \_SB_.PCI0.IGPU.TMP3 */
            }

            If ((NDID == 0x04))
            {
                TMP4 [Zero] = (0x00010000 | DID1)
                TMP4 [One] = (0x00010000 | DID2)
                TMP4 [0x02] = (0x00010000 | DID3)
                If ((IPTP == One))
                {
                    TMP4 [0x03] = 0x00023480
                }
                Else
                {
                    TMP4 [0x03] = (0x00010000 | DID4)
                }

                Return (TMP4) /* \_SB_.PCI0.IGPU.TMP4 */
            }

            If ((NDID == 0x05))
            {
                TMP5 [Zero] = (0x00010000 | DID1)
                TMP5 [One] = (0x00010000 | DID2)
                TMP5 [0x02] = (0x00010000 | DID3)
                TMP5 [0x03] = (0x00010000 | DID4)
                If ((IPTP == One))
                {
                    TMP5 [0x04] = 0x00023480
                }
                Else
                {
                    TMP5 [0x04] = (0x00010000 | DID5)
                }

                Return (TMP5) /* \_SB_.PCI0.IGPU.TMP5 */
            }

            If ((NDID == 0x06))
            {
                TMP6 [Zero] = (0x00010000 | DID1)
                TMP6 [One] = (0x00010000 | DID2)
                TMP6 [0x02] = (0x00010000 | DID3)
                TMP6 [0x03] = (0x00010000 | DID4)
                TMP6 [0x04] = (0x00010000 | DID5)
                If ((IPTP == One))
                {
                    TMP6 [0x05] = 0x00023480
                }
                Else
                {
                    TMP6 [0x05] = (0x00010000 | DID6)
                }

                Return (TMP6) /* \_SB_.PCI0.IGPU.TMP6 */
            }

            If ((NDID == 0x07))
            {
                TMP7 [Zero] = (0x00010000 | DID1)
                TMP7 [One] = (0x00010000 | DID2)
                TMP7 [0x02] = (0x00010000 | DID3)
                TMP7 [0x03] = (0x00010000 | DID4)
                TMP7 [0x04] = (0x00010000 | DID5)
                TMP7 [0x05] = (0x00010000 | DID6)
                If ((IPTP == One))
                {
                    TMP7 [0x06] = 0x00023480
                }
                Else
                {
                    TMP7 [0x06] = (0x00010000 | DID7)
                }

                Return (TMP7) /* \_SB_.PCI0.IGPU.TMP7 */
            }

            If ((NDID == 0x08))
            {
                TMP8 [Zero] = (0x00010000 | DID1)
                TMP8 [One] = (0x00010000 | DID2)
                TMP8 [0x02] = (0x00010000 | DID3)
                TMP8 [0x03] = (0x00010000 | DID4)
                TMP8 [0x04] = (0x00010000 | DID5)
                TMP8 [0x05] = (0x00010000 | DID6)
                TMP8 [0x06] = (0x00010000 | DID7)
                If ((IPTP == One))
                {
                    TMP8 [0x07] = 0x00023480
                }
                Else
                {
                    TMP8 [0x07] = (0x00010000 | DID8)
                }

                Return (TMP8) /* \_SB_.PCI0.IGPU.TMP8 */
            }

            If ((NDID == 0x09))
            {
                TMP9 [Zero] = (0x00010000 | DID1)
                TMP9 [One] = (0x00010000 | DID2)
                TMP9 [0x02] = (0x00010000 | DID3)
                TMP9 [0x03] = (0x00010000 | DID4)
                TMP9 [0x04] = (0x00010000 | DID5)
                TMP9 [0x05] = (0x00010000 | DID6)
                TMP9 [0x06] = (0x00010000 | DID7)
                TMP9 [0x07] = (0x00010000 | DID8)
                If ((IPTP == One))
                {
                    TMP9 [0x08] = 0x00023480
                }
                Else
                {
                    TMP9 [0x08] = (0x00010000 | DID9)
                }

                Return (TMP9) /* \_SB_.PCI0.IGPU.TMP9 */
            }

            If ((NDID == 0x0A))
            {
                TMPA [Zero] = (0x00010000 | DID1)
                TMPA [One] = (0x00010000 | DID2)
                TMPA [0x02] = (0x00010000 | DID3)
                TMPA [0x03] = (0x00010000 | DID4)
                TMPA [0x04] = (0x00010000 | DID5)
                TMPA [0x05] = (0x00010000 | DID6)
                TMPA [0x06] = (0x00010000 | DID7)
                TMPA [0x07] = (0x00010000 | DID8)
                TMPA [0x08] = (0x00010000 | DID9)
                If ((IPTP == One))
                {
                    TMPA [0x09] = 0x00023480
                }
                Else
                {
                    TMPA [0x09] = (0x00010000 | DIDA)
                }

                Return (TMPA) /* \_SB_.PCI0.IGPU.TMPA */
            }

            If ((NDID == 0x0B))
            {
                TMPB [Zero] = (0x00010000 | DID1)
                TMPB [One] = (0x00010000 | DID2)
                TMPB [0x02] = (0x00010000 | DID3)
                TMPB [0x03] = (0x00010000 | DID4)
                TMPB [0x04] = (0x00010000 | DID5)
                TMPB [0x05] = (0x00010000 | DID6)
                TMPB [0x06] = (0x00010000 | DID7)
                TMPB [0x07] = (0x00010000 | DID8)
                TMPB [0x08] = (0x00010000 | DID9)
                TMPB [0x09] = (0x00010000 | DIDA)
                If ((IPTP == One))
                {
                    TMPB [0x0A] = 0x00023480
                }
                Else
                {
                    TMPB [0x0A] = (0x00010000 | DIDB)
                }

                Return (TMPB) /* \_SB_.PCI0.IGPU.TMPB */
            }

            If ((NDID == 0x0C))
            {
                TMPC [Zero] = (0x00010000 | DID1)
                TMPC [One] = (0x00010000 | DID2)
                TMPC [0x02] = (0x00010000 | DID3)
                TMPC [0x03] = (0x00010000 | DID4)
                TMPC [0x04] = (0x00010000 | DID5)
                TMPC [0x05] = (0x00010000 | DID6)
                TMPC [0x06] = (0x00010000 | DID7)
                TMPC [0x07] = (0x00010000 | DID8)
                TMPC [0x08] = (0x00010000 | DID9)
                TMPC [0x09] = (0x00010000 | DIDA)
                TMPC [0x0A] = (0x00010000 | DIDB)
                If ((IPTP == One))
                {
                    TMPC [0x0B] = 0x00023480
                }
                Else
                {
                    TMPC [0x0B] = (0x00010000 | DIDC)
                }

                Return (TMPC) /* \_SB_.PCI0.IGPU.TMPC */
            }

            If ((NDID == 0x0D))
            {
                TMPD [Zero] = (0x00010000 | DID1)
                TMPD [One] = (0x00010000 | DID2)
                TMPD [0x02] = (0x00010000 | DID3)
                TMPD [0x03] = (0x00010000 | DID4)
                TMPD [0x04] = (0x00010000 | DID5)
                TMPD [0x05] = (0x00010000 | DID6)
                TMPD [0x06] = (0x00010000 | DID7)
                TMPD [0x07] = (0x00010000 | DID8)
                TMPD [0x08] = (0x00010000 | DID9)
                TMPD [0x09] = (0x00010000 | DIDA)
                TMPD [0x0A] = (0x00010000 | DIDB)
                TMPD [0x0B] = (0x00010000 | DIDC)
                If ((IPTP == One))
                {
                    TMPD [0x0C] = 0x00023480
                }
                Else
                {
                    TMPD [0x0C] = (0x00010000 | DIDD)
                }

                Return (TMPD) /* \_SB_.PCI0.IGPU.TMPD */
            }

            If ((NDID == 0x0E))
            {
                TMPE [Zero] = (0x00010000 | DID1)
                TMPE [One] = (0x00010000 | DID2)
                TMPE [0x02] = (0x00010000 | DID3)
                TMPE [0x03] = (0x00010000 | DID4)
                TMPE [0x04] = (0x00010000 | DID5)
                TMPE [0x05] = (0x00010000 | DID6)
                TMPE [0x06] = (0x00010000 | DID7)
                TMPE [0x07] = (0x00010000 | DID8)
                TMPE [0x08] = (0x00010000 | DID9)
                TMPE [0x09] = (0x00010000 | DIDA)
                TMPE [0x0A] = (0x00010000 | DIDB)
                TMPE [0x0B] = (0x00010000 | DIDC)
                TMPE [0x0C] = (0x00010000 | DIDD)
                If ((IPTP == One))
                {
                    TMPE [0x0D] = 0x00023480
                }
                Else
                {
                    TMPE [0x0D] = (0x00010000 | DIDE)
                }

                Return (TMPE) /* \_SB_.PCI0.IGPU.TMPE */
            }

            If ((NDID == 0x0F))
            {
                TMPF [Zero] = (0x00010000 | DID1)
                TMPF [One] = (0x00010000 | DID2)
                TMPF [0x02] = (0x00010000 | DID3)
                TMPF [0x03] = (0x00010000 | DID4)
                TMPF [0x04] = (0x00010000 | DID5)
                TMPF [0x05] = (0x00010000 | DID6)
                TMPF [0x06] = (0x00010000 | DID7)
                TMPF [0x07] = (0x00010000 | DID8)
                TMPF [0x08] = (0x00010000 | DID9)
                TMPF [0x09] = (0x00010000 | DIDA)
                TMPF [0x0A] = (0x00010000 | DIDB)
                TMPF [0x0B] = (0x00010000 | DIDC)
                TMPF [0x0C] = (0x00010000 | DIDD)
                TMPF [0x0D] = (0x00010000 | DIDE)
                If ((IPTP == One))
                {
                    TMPF [0x0E] = 0x00023480
                }
                Else
                {
                    TMPF [0x0E] = (0x00010000 | DIDF)
                }

                Return (TMPF) /* \_SB_.PCI0.IGPU.TMPF */
            }

            If ((NDID == 0x10))
            {
                TMPG [Zero] = (0x00010000 | DID1)
                TMPG [One] = (0x00010000 | DID2)
                TMPG [0x02] = (0x00010000 | DID3)
                TMPG [0x03] = (0x00010000 | DID4)
                TMPG [0x04] = (0x00010000 | DID5)
                TMPG [0x05] = (0x00010000 | DID6)
                TMPG [0x06] = (0x00010000 | DID7)
                TMPG [0x07] = (0x00010000 | DID8)
                TMPG [0x08] = (0x00010000 | DID9)
                TMPG [0x09] = (0x00010000 | DIDA)
                TMPG [0x0A] = (0x00010000 | DIDB)
                TMPG [0x0B] = (0x00010000 | DIDC)
                TMPG [0x0C] = (0x00010000 | DIDD)
                TMPG [0x0D] = (0x00010000 | DIDE)
                TMPG [0x0E] = (0x00010000 | DIDF)
                TMPG [0x0F] = 0x00023480
                Return (TMPG) /* \_SB_.PCI0.IGPU.TMPG */
            }

            Return (Package (0x01)
            {
                0x0400
            })
        }

        Device (DD01)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DID1) == 0x0400))
                {
                    EDPV = One
                    NXDX = NXD1 /* \NXD1 */
                    DIDX = DID1 /* \DID1 */
                    Return (One)
                }

                If ((DID1 == Zero))
                {
                    Return (One)
                }
                Else
                {
                    Return ((0xFFFF & DID1))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                Return (CDDS (DID1))
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD1) /* \NXD1 */
                }

                Return (NDDS (DID1))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD02)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DID2) == 0x0400))
                {
                    EDPV = 0x02
                    NXDX = NXD2 /* \NXD2 */
                    DIDX = DID2 /* \DID2 */
                    Return (0x02)
                }

                If ((DID2 == Zero))
                {
                    Return (0x02)
                }
                Else
                {
                    Return ((0xFFFF & DID2))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((LIDS == Zero))
                {
                    Return (Zero)
                }

                Return (CDDS (DID2))
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD2) /* \NXD2 */
                }

                Return (NDDS (DID2))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD03)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DID3) == 0x0400))
                {
                    EDPV = 0x03
                    NXDX = NXD3 /* \NXD3 */
                    DIDX = DID3 /* \DID3 */
                    Return (0x03)
                }

                If ((DID3 == Zero))
                {
                    Return (0x03)
                }
                Else
                {
                    Return ((0xFFFF & DID3))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((DID3 == Zero))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (CDDS (DID3))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD3) /* \NXD3 */
                }

                Return (NDDS (DID3))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD04)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DID4) == 0x0400))
                {
                    EDPV = 0x04
                    NXDX = NXD4 /* \NXD4 */
                    DIDX = DID4 /* \DID4 */
                    Return (0x04)
                }

                If ((DID4 == Zero))
                {
                    Return (0x04)
                }
                Else
                {
                    Return ((0xFFFF & DID4))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((DID4 == Zero))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (CDDS (DID4))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD4) /* \NXD4 */
                }

                Return (NDDS (DID4))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD05)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DID5) == 0x0400))
                {
                    EDPV = 0x05
                    NXDX = NXD5 /* \NXD5 */
                    DIDX = DID5 /* \DID5 */
                    Return (0x05)
                }

                If ((DID5 == Zero))
                {
                    Return (0x05)
                }
                Else
                {
                    Return ((0xFFFF & DID5))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((DID5 == Zero))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (CDDS (DID5))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD5) /* \NXD5 */
                }

                Return (NDDS (DID5))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD06)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DID6) == 0x0400))
                {
                    EDPV = 0x06
                    NXDX = NXD6 /* \NXD6 */
                    DIDX = DID6 /* \DID6 */
                    Return (0x06)
                }

                If ((DID6 == Zero))
                {
                    Return (0x06)
                }
                Else
                {
                    Return ((0xFFFF & DID6))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((DID6 == Zero))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (CDDS (DID6))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD6) /* \NXD6 */
                }

                Return (NDDS (DID6))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD07)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DID7) == 0x0400))
                {
                    EDPV = 0x07
                    NXDX = NXD7 /* \NXD7 */
                    DIDX = DID7 /* \DID7 */
                    Return (0x07)
                }

                If ((DID7 == Zero))
                {
                    Return (0x07)
                }
                Else
                {
                    Return ((0xFFFF & DID7))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((DID7 == Zero))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (CDDS (DID7))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD7) /* \NXD7 */
                }

                Return (NDDS (DID7))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD08)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DID8) == 0x0400))
                {
                    EDPV = 0x08
                    NXDX = NXD8 /* \NXD8 */
                    DIDX = DID8 /* \DID8 */
                    Return (0x08)
                }

                If ((DID8 == Zero))
                {
                    Return (0x08)
                }
                Else
                {
                    Return ((0xFFFF & DID8))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((DID8 == Zero))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (CDDS (DID8))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD8) /* \NXD8 */
                }

                Return (NDDS (DID8))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD09)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DID9) == 0x0400))
                {
                    EDPV = 0x09
                    NXDX = NXD8 /* \NXD8 */
                    DIDX = DID9 /* \DID9 */
                    Return (0x09)
                }

                If ((DID9 == Zero))
                {
                    Return (0x09)
                }
                Else
                {
                    Return ((0xFFFF & DID9))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((DID9 == Zero))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (CDDS (DID9))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD8) /* \NXD8 */
                }

                Return (NDDS (DID9))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD0A)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DIDA) == 0x0400))
                {
                    EDPV = 0x0A
                    NXDX = NXD8 /* \NXD8 */
                    DIDX = DIDA /* \DIDA */
                    Return (0x0A)
                }

                If ((DIDA == Zero))
                {
                    Return (0x0A)
                }
                Else
                {
                    Return ((0xFFFF & DIDA))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((DIDA == Zero))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (CDDS (DIDA))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD8) /* \NXD8 */
                }

                Return (NDDS (DIDA))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD0B)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DIDB) == 0x0400))
                {
                    EDPV = 0x0B
                    NXDX = NXD8 /* \NXD8 */
                    DIDX = DIDB /* \DIDB */
                    Return (0x0B)
                }

                If ((DIDB == Zero))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return ((0xFFFF & DIDB))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((DIDB == Zero))
                {
                    Return (0x0B)
                }
                Else
                {
                    Return (CDDS (DIDB))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD8) /* \NXD8 */
                }

                Return (NDDS (DIDB))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD0C)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DIDC) == 0x0400))
                {
                    EDPV = 0x0C
                    NXDX = NXD8 /* \NXD8 */
                    DIDX = DIDC /* \DIDC */
                    Return (0x0C)
                }

                If ((DIDC == Zero))
                {
                    Return (0x0C)
                }
                Else
                {
                    Return ((0xFFFF & DIDC))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((DIDC == Zero))
                {
                    Return (0x0C)
                }
                Else
                {
                    Return (CDDS (DIDC))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD8) /* \NXD8 */
                }

                Return (NDDS (DIDC))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD0D)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DIDD) == 0x0400))
                {
                    EDPV = 0x0D
                    NXDX = NXD8 /* \NXD8 */
                    DIDX = DIDD /* \DIDD */
                    Return (0x0D)
                }

                If ((DIDD == Zero))
                {
                    Return (0x0D)
                }
                Else
                {
                    Return ((0xFFFF & DIDD))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((DIDD == Zero))
                {
                    Return (0x0D)
                }
                Else
                {
                    Return (CDDS (DIDD))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD8) /* \NXD8 */
                }

                Return (NDDS (DIDD))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD0E)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DIDE) == 0x0400))
                {
                    EDPV = 0x0E
                    NXDX = NXD8 /* \NXD8 */
                    DIDX = DIDE /* \DIDE */
                    Return (0x0E)
                }

                If ((DIDE == Zero))
                {
                    Return (0x0E)
                }
                Else
                {
                    Return ((0xFFFF & DIDE))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((DIDE == Zero))
                {
                    Return (0x0E)
                }
                Else
                {
                    Return (CDDS (DIDE))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD8) /* \NXD8 */
                }

                Return (NDDS (DIDE))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD0F)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If (((0x0F00 & DIDF) == 0x0400))
                {
                    EDPV = 0x0F
                    NXDX = NXD8 /* \NXD8 */
                    DIDX = DIDF /* \DIDF */
                    Return (0x0F)
                }

                If ((DIDF == Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return ((0xFFFF & DIDF))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((DIDC == Zero))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (CDDS (DIDF))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXD8) /* \NXD8 */
                }

                Return (NDDS (DIDF))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }
        }

        Device (DD1F)
        {
            Method (_ADR, 0, Serialized)  // _ADR: Address
            {
                If ((EDPV == Zero))
                {
                    Return (0x1F)
                }
                Else
                {
                    Return ((0xFFFF & DIDX))
                }
            }

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                If ((EDPV == Zero))
                {
                    Return (Zero)
                }
                Else
                {
                    Return (CDDS (DIDX))
                }
            }

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                If ((((SGMD & 0x7F) == One) && CondRefOf (SNXD)))
                {
                    Return (NXDX) /* \NXDX */
                }

                Return (NDDS (DIDX))
            }

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                DSST (Arg0)
            }

            Method (_BCL, 0, NotSerialized)  // _BCL: Brightness Control Levels
            {
                If (CondRefOf (\PBCL))
                {
                    Return (PBCL ())
                }
                Else
                {
                    Return (Package (0x67)
                    {
                        0x50, 
                        0x32, 
                        Zero, 
                        One, 
                        0x02, 
                        0x03, 
                        0x04, 
                        0x05, 
                        0x06, 
                        0x07, 
                        0x08, 
                        0x09, 
                        0x0A, 
                        0x0B, 
                        0x0C, 
                        0x0D, 
                        0x0E, 
                        0x0F, 
                        0x10, 
                        0x11, 
                        0x12, 
                        0x13, 
                        0x14, 
                        0x15, 
                        0x16, 
                        0x17, 
                        0x18, 
                        0x19, 
                        0x1A, 
                        0x1B, 
                        0x1C, 
                        0x1D, 
                        0x1E, 
                        0x1F, 
                        0x20, 
                        0x21, 
                        0x22, 
                        0x23, 
                        0x24, 
                        0x25, 
                        0x26, 
                        0x27, 
                        0x28, 
                        0x29, 
                        0x2A, 
                        0x2B, 
                        0x2C, 
                        0x2D, 
                        0x2E, 
                        0x2F, 
                        0x30, 
                        0x31, 
                        0x32, 
                        0x33, 
                        0x34, 
                        0x35, 
                        0x36, 
                        0x37, 
                        0x38, 
                        0x39, 
                        0x3A, 
                        0x3B, 
                        0x3C, 
                        0x3D, 
                        0x3E, 
                        0x3F, 
                        0x40, 
                        0x41, 
                        0x42, 
                        0x43, 
                        0x44, 
                        0x45, 
                        0x46, 
                        0x47, 
                        0x48, 
                        0x49, 
                        0x4A, 
                        0x4B, 
                        0x4C, 
                        0x4D, 
                        0x4E, 
                        0x4F, 
                        0x50, 
                        0x51, 
                        0x52, 
                        0x53, 
                        0x54, 
                        0x55, 
                        0x56, 
                        0x57, 
                        0x58, 
                        0x59, 
                        0x5A, 
                        0x5B, 
                        0x5C, 
                        0x5D, 
                        0x5E, 
                        0x5F, 
                        0x60, 
                        0x61, 
                        0x62, 
                        0x63, 
                        0x64
                    })
                }
            }

            Method (_BCM, 1, NotSerialized)  // _BCM: Brightness Control Method
            {
                If (((Arg0 >= Zero) && (Arg0 <= 0x64)))
                {
                    \_SB.PCI0.IGPU.AINT (One, Arg0)
                    BRTL = Arg0
                }
            }

            Method (_BQC, 0, NotSerialized)  // _BQC: Brightness Query Current
            {
                Return (BRTL) /* \BRTL */
            }
        }

        Method (SDDL, 1, NotSerialized)
        {
            NDID++
            Local0 = (Arg0 & 0x0F0F)
            Local1 = (0x80000000 | Local0)
            If ((DIDL == Local0))
            {
                Return (Local1)
            }

            If ((DDL2 == Local0))
            {
                Return (Local1)
            }

            If ((DDL3 == Local0))
            {
                Return (Local1)
            }

            If ((DDL4 == Local0))
            {
                Return (Local1)
            }

            If ((DDL5 == Local0))
            {
                Return (Local1)
            }

            If ((DDL6 == Local0))
            {
                Return (Local1)
            }

            If ((DDL7 == Local0))
            {
                Return (Local1)
            }

            If ((DDL8 == Local0))
            {
                Return (Local1)
            }

            If ((DDL9 == Local0))
            {
                Return (Local1)
            }

            If ((DD10 == Local0))
            {
                Return (Local1)
            }

            If ((DD11 == Local0))
            {
                Return (Local1)
            }

            If ((DD12 == Local0))
            {
                Return (Local1)
            }

            If ((DD13 == Local0))
            {
                Return (Local1)
            }

            If ((DD14 == Local0))
            {
                Return (Local1)
            }

            If ((DD15 == Local0))
            {
                Return (Local1)
            }

            Return (Zero)
        }

        Method (CDDS, 1, NotSerialized)
        {
            Local0 = (Arg0 & 0x0F0F)
            If ((Zero == Local0))
            {
                Return (0x1D)
            }

            If ((CADL == Local0))
            {
                Return (0x1F)
            }

            If ((CAL2 == Local0))
            {
                Return (0x1F)
            }

            If ((CAL3 == Local0))
            {
                Return (0x1F)
            }

            If ((CAL4 == Local0))
            {
                Return (0x1F)
            }

            If ((CAL5 == Local0))
            {
                Return (0x1F)
            }

            If ((CAL6 == Local0))
            {
                Return (0x1F)
            }

            If ((CAL7 == Local0))
            {
                Return (0x1F)
            }

            If ((CAL8 == Local0))
            {
                Return (0x1F)
            }

            Return (0x1D)
        }

        Method (NDDS, 1, NotSerialized)
        {
            Local0 = (Arg0 & 0x0F0F)
            If ((Zero == Local0))
            {
                Return (Zero)
            }

            If ((NADL == Local0))
            {
                Return (One)
            }

            If ((NDL2 == Local0))
            {
                Return (One)
            }

            If ((NDL3 == Local0))
            {
                Return (One)
            }

            If ((NDL4 == Local0))
            {
                Return (One)
            }

            If ((NDL5 == Local0))
            {
                Return (One)
            }

            If ((NDL6 == Local0))
            {
                Return (One)
            }

            If ((NDL7 == Local0))
            {
                Return (One)
            }

            If ((NDL8 == Local0))
            {
                Return (One)
            }

            Return (Zero)
        }

        Method (DSST, 1, NotSerialized)
        {
            If (((Arg0 & 0xC0000000) == 0xC0000000))
            {
                CSTE = NSTE /* \NSTE */
            }
        }

        Scope (\_SB.PCI0)
        {
            OperationRegion (MCHP, PCI_Config, 0x40, 0xC0)
            Field (MCHP, AnyAcc, NoLock, Preserve)
            {
                Offset (0x14), 
                AUDE,   8, 
                Offset (0x60), 
                TASM,   10, 
                Offset (0x62)
            }
        }

        OperationRegion (IGDP, PCI_Config, 0x40, 0xC0)
        Field (IGDP, AnyAcc, NoLock, Preserve)
        {
            Offset (0x10), 
                ,   1, 
            GIVD,   1, 
                ,   2, 
            GUMA,   3, 
            Offset (0x12), 
            Offset (0x14), 
                ,   4, 
            GMFN,   1, 
            Offset (0x18), 
            Offset (0xA4), 
            ASLE,   8, 
            Offset (0xA8), 
            GSSE,   1, 
            GSSB,   14, 
            GSES,   1, 
            Offset (0xB0), 
                ,   12, 
            CDVL,   1, 
            Offset (0xB2), 
            Offset (0xB5), 
            LBPC,   8, 
            Offset (0xBC), 
            ASLS,   32
        }

        OperationRegion (IGDM, SystemMemory, ASLB, 0x2000)
        Field (IGDM, AnyAcc, NoLock, Preserve)
        {
            SIGN,   128, 
            SIZE,   32, 
            OVER,   32, 
            SVER,   256, 
            VVER,   128, 
            GVER,   128, 
            MBOX,   32, 
            DMOD,   32, 
            PCON,   32, 
            DVER,   64, 
            Offset (0x100), 
            DRDY,   32, 
            CSTS,   32, 
            CEVT,   32, 
            Offset (0x120), 
            DIDL,   32, 
            DDL2,   32, 
            DDL3,   32, 
            DDL4,   32, 
            DDL5,   32, 
            DDL6,   32, 
            DDL7,   32, 
            DDL8,   32, 
            CPDL,   32, 
            CPL2,   32, 
            CPL3,   32, 
            CPL4,   32, 
            CPL5,   32, 
            CPL6,   32, 
            CPL7,   32, 
            CPL8,   32, 
            CADL,   32, 
            CAL2,   32, 
            CAL3,   32, 
            CAL4,   32, 
            CAL5,   32, 
            CAL6,   32, 
            CAL7,   32, 
            CAL8,   32, 
            NADL,   32, 
            NDL2,   32, 
            NDL3,   32, 
            NDL4,   32, 
            NDL5,   32, 
            NDL6,   32, 
            NDL7,   32, 
            NDL8,   32, 
            ASLP,   32, 
            TIDX,   32, 
            CHPD,   32, 
            CLID,   32, 
            CDCK,   32, 
            SXSW,   32, 
            EVTS,   32, 
            CNOT,   32, 
            NRDY,   32, 
            DDL9,   32, 
            DD10,   32, 
            DD11,   32, 
            DD12,   32, 
            DD13,   32, 
            DD14,   32, 
            DD15,   32, 
            CPL9,   32, 
            CP10,   32, 
            CP11,   32, 
            CP12,   32, 
            CP13,   32, 
            CP14,   32, 
            CP15,   32, 
            Offset (0x200), 
            SCIE,   1, 
            GEFC,   4, 
            GXFC,   3, 
            GESF,   8, 
            Offset (0x204), 
            PARM,   32, 
            DSLP,   32, 
            Offset (0x300), 
            ARDY,   32, 
            ASLC,   32, 
            TCHE,   32, 
            ALSI,   32, 
            BCLP,   32, 
            PFIT,   32, 
            CBLV,   32, 
            BCLM,   320, 
            CPFM,   32, 
            EPFM,   32, 
            PLUT,   592, 
            PFMB,   32, 
            CCDV,   32, 
            PCFT,   32, 
            SROT,   32, 
            IUER,   32, 
            FDSS,   64, 
            FDSP,   32, 
            STAT,   32, 
            Offset (0x400), 
            RVBT,   49152, 
            PHED,   32, 
            BDDC,   2048
        }

        Name (DBTB, Package (0x15)
        {
            Zero, 
            0x07, 
            0x38, 
            0x01C0, 
            0x0E00, 
            0x3F, 
            0x01C7, 
            0x0E07, 
            0x01F8, 
            0x0E38, 
            0x0FC0, 
            Zero, 
            Zero, 
            Zero, 
            Zero, 
            Zero, 
            0x7000, 
            0x7007, 
            0x7038, 
            0x71C0, 
            0x7E00
        })
        Name (CDCT, Package (0x05)
        {
            Package (0x02)
            {
                0xE4, 
                0x0140
            }, 

            Package (0x02)
            {
                0xDE, 
                0x014D
            }, 

            Package (0x02)
            {
                0xDE, 
                0x014D
            }, 

            Package (0x02)
            {
                Zero, 
                Zero
            }, 

            Package (0x02)
            {
                0xDE, 
                0x014D
            }
        })
        Name (SUCC, One)
        Name (NVLD, 0x02)
        Name (CRIT, 0x04)
        Name (NCRT, 0x06)
        Method (GBDA, 0, Serialized)
        {
            If ((GESF == Zero))
            {
                PARM = 0x0659
                GESF = Zero
                Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
            }

            If ((GESF == One))
            {
                PARM = 0x00300482
                If ((S0ID == One))
                {
                    PARM |= 0x0100
                }

                GESF = Zero
                Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
            }

            If ((GESF == 0x04))
            {
                PARM &= 0xEFFF0000
                PARM &= (DerefOf (DBTB [IBTT]) << 0x10)
                PARM |= IBTT /* \_SB_.PCI0.IGPU.PARM */
                GESF = Zero
                Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
            }

            If ((GESF == 0x05))
            {
                PARM = IPSC /* \IPSC */
                PARM |= (IPAT << 0x08)
                PARM += 0x0100
                PARM |= (LIDS << 0x10)
                PARM += 0x00010000
                PARM |= (IBIA << 0x14)
                GESF = Zero
                Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
            }

            If ((GESF == 0x07))
            {
                PARM = GIVD /* \_SB_.PCI0.IGPU.GIVD */
                PARM ^= One
                PARM |= (GMFN << One)
                PARM |= 0x1800
                PARM |= (IDMS << 0x11)
                PARM |= (DerefOf (DerefOf (CDCT [HVCO]) [CDVL]) << 
                    0x15) /* \_SB_.PCI0.IGPU.PARM */
                GESF = One
                Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
            }

            If ((GESF == 0x0A))
            {
                PARM = Zero
                If (ISSC)
                {
                    PARM |= 0x03
                }

                GESF = Zero
                Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
            }

            If ((GESF == 0x0B))
            {
                PARM = KSV0 /* \KSV0 */
                GESF = KSV1 /* \KSV1 */
                Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
            }

            GESF = Zero
            Return (CRIT) /* \_SB_.PCI0.IGPU.CRIT */
        }

        Method (SBCB, 0, Serialized)
        {
            If ((GESF == Zero))
            {
                PARM = Zero
                PARM = 0x000F87DD
                GESF = Zero
                Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
            }

            If ((GESF == One))
            {
                GESF = Zero
                PARM = Zero
                Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
            }

            If ((GESF == 0x03))
            {
                GESF = Zero
                PARM = Zero
                Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
            }

            If ((GESF == 0x04))
            {
                GESF = Zero
                PARM = Zero
                Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
            }

            If ((GESF == 0x05))
            {
                GESF = Zero
                PARM = Zero
                Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
            }

            If ((GESF == 0x07))
            {
                If (((S0ID == One) && (OSYS < 0x07DF)))
                {
                    If (((PARM & 0xFF) == One))
                    {
                        \GUAM (One)
                    }

                    If (((PARM & 0xFF) == Zero))
                    {
                        \GUAM (Zero)
                    }
                }

                If ((PARM == Zero))
                {
                    Local0 = CLID /* \_SB_.PCI0.IGPU.CLID */
                    If ((0x80000000 & Local0))
                    {
                        CLID &= 0x0F
                        GLID (CLID)
                    }
                }

                GESF = Zero
                PARM = Zero
                Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
            }

            If ((GESF == 0x08))
            {
                GESF = Zero
                PARM = Zero
                Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
            }

            If ((GESF == 0x09))
            {
                IBTT = (PARM & 0xFF)
                GESF = Zero
                PARM = Zero
                Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
            }

            If ((GESF == 0x0A))
            {
                IPSC = (PARM & 0xFF)
                If (((PARM >> 0x08) & 0xFF))
                {
                    IPAT = ((PARM >> 0x08) & 0xFF)
                    IPAT--
                }

                IBIA = ((PARM >> 0x14) & 0x07)
                GESF = Zero
                PARM = Zero
                Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
            }

            If ((GESF == 0x0B))
            {
                IF1E = ((PARM >> One) & One)
                If ((PARM & 0x0001E000))
                {
                    IDMS = ((PARM >> 0x0D) & 0x0F)
                }
                Else
                {
                    IDMS = ((PARM >> 0x11) & 0x0F)
                }

                GESF = Zero
                PARM = Zero
                Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
            }

            If ((GESF == 0x10))
            {
                GESF = Zero
                PARM = Zero
                Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
            }

            If ((GESF == 0x11))
            {
                PARM = (LIDS << 0x08)
                PARM += 0x0100
                GESF = Zero
                Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
            }

            If ((GESF == 0x12))
            {
                If ((PARM & One))
                {
                    If (((PARM >> One) == One))
                    {
                        ISSC = One
                    }
                    Else
                    {
                        GESF = Zero
                        Return (CRIT) /* \_SB_.PCI0.IGPU.CRIT */
                    }
                }
                Else
                {
                    ISSC = Zero
                }

                GESF = Zero
                PARM = Zero
                Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
            }

            If ((GESF == 0x13))
            {
                GESF = Zero
                PARM = Zero
                Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
            }

            If ((GESF == 0x14))
            {
                PAVP = (PARM & 0x0F)
                GESF = Zero
                PARM = Zero
                Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
            }

            GESF = Zero
            Return (SUCC) /* \_SB_.PCI0.IGPU.SUCC */
        }

        Method (GSCI, 0, Serialized)
        {
            If ((GEFC == 0x04))
            {
                GXFC = GBDA ()
            }

            If ((GEFC == 0x06))
            {
                GXFC = SBCB ()
            }

            GEFC = Zero
            CPSC = One
            GSSE = Zero
            SCIE = Zero
            Return (Zero)
        }

        Method (PDRD, 0, NotSerialized)
        {
            Return (!DRDY)
        }

        Method (PSTS, 0, NotSerialized)
        {
            If ((CSTS > 0x02))
            {
                Sleep (ASLP)
            }

            Return ((CSTS == 0x03))
        }

        Method (GNOT, 2, NotSerialized)
        {
            If (PDRD ())
            {
                Return (One)
            }

            CEVT = Arg0
            CSTS = 0x03
            If (((CHPD == Zero) && (Arg1 == Zero)))
            {
                Notify (\_SB.PCI0.IGPU, Arg1)
            }

            If (CondRefOf (HNOT))
            {
                HNOT (Arg0)
            }
            Else
            {
                Notify (\_SB.PCI0.IGPU, 0x80) // Status Change
            }

            Return (Zero)
        }

        Method (GHDS, 1, NotSerialized)
        {
            TIDX = Arg0
            Return (GNOT (One, Zero))
        }

        Method (GLID, 1, NotSerialized)
        {
            If ((Arg0 == One))
            {
                CLID = 0x03
            }
            Else
            {
                CLID = Arg0
            }

            If (GNOT (0x02, Zero))
            {
                CLID |= 0x80000000
                Return (One)
            }

            Return (Zero)
        }

        Method (GDCK, 1, NotSerialized)
        {
            CDCK = Arg0
            Return (GNOT (0x04, Zero))
        }

        Method (PARD, 0, NotSerialized)
        {
            If (!ARDY)
            {
                Sleep (ASLP)
            }

            Return (!ARDY)
        }

        Method (IUEH, 1, Serialized)
        {
            IUER &= 0xC0
            IUER ^= (One << Arg0)
            If ((Arg0 <= 0x04))
            {
                Return (AINT (0x05, Zero))
            }
            Else
            {
                Return (AINT (Arg0, Zero))
            }
        }

        Method (AINT, 2, NotSerialized)
        {
            If (!(TCHE & (One << Arg0)))
            {
                Return (One)
            }

            If (PARD ())
            {
                Return (One)
            }

            If (((Arg0 >= 0x05) && (Arg0 <= 0x07)))
            {
                ASLC = (One << Arg0)
                ASLE = One
                Local2 = Zero
                While (((Local2 < 0xFA) && (ASLC != Zero)))
                {
                    Sleep (0x04)
                    Local2++
                }

                Return (Zero)
            }

            If ((Arg0 == 0x02))
            {
                If (CPFM)
                {
                    Local0 = (CPFM & 0x0F)
                    Local1 = (EPFM & 0x0F)
                    If ((Local0 == One))
                    {
                        If ((Local1 & 0x06))
                        {
                            PFIT = 0x06
                        }
                        ElseIf ((Local1 & 0x08))
                        {
                            PFIT = 0x08
                        }
                        Else
                        {
                            PFIT = One
                        }
                    }

                    If ((Local0 == 0x06))
                    {
                        If ((Local1 & 0x08))
                        {
                            PFIT = 0x08
                        }
                        ElseIf ((Local1 & One))
                        {
                            PFIT = One
                        }
                        Else
                        {
                            PFIT = 0x06
                        }
                    }

                    If ((Local0 == 0x08))
                    {
                        If ((Local1 & One))
                        {
                            PFIT = One
                        }
                        ElseIf ((Local1 & 0x06))
                        {
                            PFIT = 0x06
                        }
                        Else
                        {
                            PFIT = 0x08
                        }
                    }
                }
                Else
                {
                    PFIT ^= 0x07
                }

                PFIT |= 0x80000000
                ASLC = 0x04
            }
            ElseIf ((Arg0 == One))
            {
                BCLP = ((Arg1 * 0xFF) / 0x64)
                BCLP |= 0x80000000
                ASLC = 0x02
            }
            ElseIf ((Arg0 == Zero))
            {
                ALSI = Arg1
                ASLC = One
            }
            Else
            {
                Return (One)
            }

            ASLE = One
            Return (Zero)
        }

        Method (IDSM, 4, Serialized)
        {
            If ((Arg0 == ToUUID ("3e5b41c6-eb1d-4260-9d15-c71fbadae414") /* Unknown UUID */))
            {
                Switch (ToInteger (Arg2))
                {
                    Case (Zero)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "iGfx Supported Functions Bitmap "
                            Return (0x0001E7FF)
                        }
                    }
                    Case (One)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = " Adapter Power State Notification "
                            If (((S0ID == One) && (OSYS < 0x07DF)))
                            {
                                If (((DerefOf (Arg3 [Zero]) & 0xFF) == One))
                                {
                                    \GUAM (One)
                                }

                                Local0 = (DerefOf (Arg3 [One]) & 0xFF)
                                If ((Local0 == Zero))
                                {
                                    \GUAM (Zero)
                                }
                            }

                            If ((DerefOf (Arg3 [Zero]) == Zero))
                            {
                                Local0 = CLID /* \_SB_.PCI0.IGPU.CLID */
                                If ((0x80000000 & Local0))
                                {
                                    CLID &= 0x0F
                                    GLID (CLID)
                                }
                            }

                            Return (One)
                        }
                    }
                    Case (0x02)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "Display Power State Notification "
                            Return (One)
                        }
                    }
                    Case (0x03)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "BIOS POST Completion Notification "
                            Return (One)
                        }
                    }
                    Case (0x04)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "Pre-Hires Set Mode "
                            Return (One)
                        }
                    }
                    Case (0x05)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "Post-Hires Set Mode "
                            Return (One)
                        }
                    }
                    Case (0x06)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "SetDisplayDeviceNotification"
                            Return (One)
                        }
                    }
                    Case (0x07)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "SetBootDevicePreference "
                            IBTT = (DerefOf (Arg3 [Zero]) & 0xFF)
                            Return (One)
                        }
                    }
                    Case (0x08)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "SetPanelPreference "
                            IPSC = (DerefOf (Arg3 [Zero]) & 0xFF)
                            If ((DerefOf (Arg3 [One]) & 0xFF))
                            {
                                IPAT = (DerefOf (Arg3 [One]) & 0xFF)
                                IPAT--
                            }

                            IBIA = ((DerefOf (Arg3 [0x02]) >> 0x04) & 0x07)
                            Return (One)
                        }
                    }
                    Case (0x09)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "FullScreenDOS "
                            Return (One)
                        }
                    }
                    Case (0x0A)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "APM Complete "
                            Local0 = (LIDS << 0x08)
                            Local0 += 0x0100
                            Return (Local0)
                        }
                    }
                    Case (0x0D)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "GetBootDisplayPreference "
                            Local0 = ((DerefOf (Arg3 [0x03]) << 0x18) | (DerefOf (
                                Arg3 [0x02]) << 0x10))
                            Local0 &= 0xEFFF0000
                            Local0 &= (DerefOf (DBTB [IBTT]) << 0x10)
                            Local0 |= IBTT
                            Return (Local0)
                        }
                    }
                    Case (0x0E)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "GetPanelDetails "
                            Local0 = IPSC /* \IPSC */
                            Local0 |= (IPAT << 0x08)
                            Local0 += 0x0100
                            Local0 |= (LIDS << 0x10)
                            Local0 += 0x00010000
                            Local0 |= (IBIA << 0x14)
                            Return (Local0)
                        }
                    }
                    Case (0x0F)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "GetInternalGraphics "
                            Local0 = GIVD /* \_SB_.PCI0.IGPU.GIVD */
                            Local0 ^= One
                            Local0 |= (GMFN << One)
                            Local0 |= 0x1800
                            Local0 |= (IDMS << 0x11)
                            Local0 |= (DerefOf (DerefOf (CDCT [HVCO]) [CDVL]) << 
                                0x15)
                            Return (Local0)
                        }
                    }
                    Case (0x10)
                    {
                        If ((Arg1 == One))
                        {
                            Debug = "GetAKSV "
                            Name (KSVP, Package (0x02)
                            {
                                0x80000000, 
                                0x8000
                            })
                            KSVP [Zero] = KSV0 /* \KSV0 */
                            KSVP [One] = KSV1 /* \KSV1 */
                            Return (KSVP) /* \_SB_.PCI0.IGPU.IDSM.KSVP */
                        }
                    }

                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }
    }

    Scope (\_SB.PCI0.IGPU)
    {
        Device (IPUA)
        {
            Name (_ADR, 0x3480)  // _ADR: Address
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((IPTP == One))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (Zero)
                }
            }
        }
    }

    Scope (\_SB.PCI0.IPU0)
    {
        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("9a9e6ab4-e3fc-475d-ad1c-c4789e4cfe90") /* Unknown UUID */))
            {
                If ((Arg2 == Zero))
                {
                    If ((Arg1 == Zero))
                    {
                        Return (Buffer (One)
                        {
                             0x07                                             // .
                        })
                    }
                    Else
                    {
                        Return (Zero)
                    }
                }

                If ((Arg2 == One))
                {
                    Return (0x64503C19)
                }

                If ((Arg2 == 0x02))
                {
                    Return (0xFFF0783C)
                }
            }

            Return (Zero)
        }
    }
}



SSDT13
------
DefinitionBlock ("", "SSDT", 1, "APPLE ", "Sdxc", 0x00001000)
{
    Scope (\_SB)
    {
        Name (SDTB, Buffer (0x82)
        {
            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0040 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0048 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0050 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0058 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0060 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0068 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0070 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0078 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0080 */  0x00, 0x00                                       // ..
        })
    }
}



SSDT14
------
DefinitionBlock ("", "SSDT", 2, "PmRef", "ApPsd", 0x00003000)
{
    External (_PR_.CFGD, FieldUnitObj)
    External (_PR_.CPU0, DeviceObj)
    External (_PR_.CPU1, DeviceObj)
    External (_PR_.CPU2, DeviceObj)
    External (_PR_.CPU3, DeviceObj)
    External (_PR_.CPU4, DeviceObj)
    External (_PR_.CPU5, DeviceObj)
    External (_PR_.CPU6, DeviceObj)
    External (_PR_.CPU7, DeviceObj)
    External (_PR_.CPU8, DeviceObj)
    External (_PR_.CPU9, DeviceObj)
    External (_PR_.CPUA, DeviceObj)
    External (_PR_.CPUB, DeviceObj)
    External (_PR_.CPUC, DeviceObj)
    External (_PR_.CPUD, DeviceObj)
    External (_PR_.CPUE, DeviceObj)
    External (_PR_.CPUF, DeviceObj)
    External (PC00, IntObj)
    External (TCNT, FieldUnitObj)

    Scope (\_PR.CPU1)
    {
        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((\_PR.CFGD & 0x02000000))
            {
                DerefOf (HPSD [Zero]) [0x02] = One
                DerefOf (HPSD [Zero]) [0x04] = One
            }
            Else
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
            }

            If ((PC00 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPU1.HPSD */
            }

            Return (SPSD) /* \_PR_.CPU1.SPSD */
        }
    }

    Scope (\_PR.CPU2)
    {
        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((\_PR.CFGD & 0x02000000))
            {
                DerefOf (HPSD [Zero]) [0x02] = 0x02
                DerefOf (HPSD [Zero]) [0x04] = One
            }
            Else
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
            }

            If ((PC00 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPU2.HPSD */
            }

            Return (SPSD) /* \_PR_.CPU2.SPSD */
        }
    }

    Scope (\_PR.CPU3)
    {
        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((\_PR.CFGD & 0x02000000))
            {
                DerefOf (HPSD [Zero]) [0x02] = 0x03
                DerefOf (HPSD [Zero]) [0x04] = One
            }
            Else
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
            }

            If ((PC00 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPU3.HPSD */
            }

            Return (SPSD) /* \_PR_.CPU3.SPSD */
        }
    }

    Scope (\_PR.CPU4)
    {
        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((\_PR.CFGD & 0x02000000))
            {
                DerefOf (HPSD [Zero]) [0x02] = 0x04
                DerefOf (HPSD [Zero]) [0x04] = One
            }
            Else
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
            }

            If ((PC00 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPU4.HPSD */
            }

            Return (SPSD) /* \_PR_.CPU4.SPSD */
        }
    }

    Scope (\_PR.CPU5)
    {
        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((\_PR.CFGD & 0x02000000))
            {
                DerefOf (HPSD [Zero]) [0x02] = 0x05
                DerefOf (HPSD [Zero]) [0x04] = One
            }
            Else
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
            }

            If ((PC00 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPU5.HPSD */
            }

            Return (SPSD) /* \_PR_.CPU5.SPSD */
        }
    }

    Scope (\_PR.CPU6)
    {
        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((\_PR.CFGD & 0x02000000))
            {
                DerefOf (HPSD [Zero]) [0x02] = 0x06
                DerefOf (HPSD [Zero]) [0x04] = One
            }
            Else
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
            }

            If ((PC00 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPU6.HPSD */
            }

            Return (SPSD) /* \_PR_.CPU6.SPSD */
        }
    }

    Scope (\_PR.CPU7)
    {
        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((\_PR.CFGD & 0x02000000))
            {
                DerefOf (HPSD [Zero]) [0x02] = 0x07
                DerefOf (HPSD [Zero]) [0x04] = One
            }
            Else
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
            }

            If ((PC00 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPU7.HPSD */
            }

            Return (SPSD) /* \_PR_.CPU7.SPSD */
        }
    }

    Scope (\_PR.CPU8)
    {
        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((\_PR.CFGD & 0x02000000))
            {
                DerefOf (HPSD [Zero]) [0x02] = 0x08
                DerefOf (HPSD [Zero]) [0x04] = One
            }
            Else
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
            }

            If ((PC00 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPU8.HPSD */
            }

            Return (SPSD) /* \_PR_.CPU8.SPSD */
        }
    }

    Scope (\_PR.CPU9)
    {
        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((\_PR.CFGD & 0x02000000))
            {
                DerefOf (HPSD [Zero]) [0x02] = 0x09
                DerefOf (HPSD [Zero]) [0x04] = One
            }
            Else
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
            }

            If ((PC00 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPU9.HPSD */
            }

            Return (SPSD) /* \_PR_.CPU9.SPSD */
        }
    }

    Scope (\_PR.CPUA)
    {
        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((\_PR.CFGD & 0x02000000))
            {
                DerefOf (HPSD [Zero]) [0x02] = 0x0A
                DerefOf (HPSD [Zero]) [0x04] = One
            }
            Else
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
            }

            If ((PC00 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPUA.HPSD */
            }

            Return (SPSD) /* \_PR_.CPUA.SPSD */
        }
    }

    Scope (\_PR.CPUB)
    {
        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((\_PR.CFGD & 0x02000000))
            {
                DerefOf (HPSD [Zero]) [0x02] = 0x0B
                DerefOf (HPSD [Zero]) [0x04] = One
            }
            Else
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
            }

            If ((PC00 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPUB.HPSD */
            }

            Return (SPSD) /* \_PR_.CPUB.SPSD */
        }
    }

    Scope (\_PR.CPUC)
    {
        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((\_PR.CFGD & 0x02000000))
            {
                DerefOf (HPSD [Zero]) [0x02] = 0x0C
                DerefOf (HPSD [Zero]) [0x04] = One
            }
            Else
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
            }

            If ((PC00 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPUC.HPSD */
            }

            Return (SPSD) /* \_PR_.CPUC.SPSD */
        }
    }

    Scope (\_PR.CPUD)
    {
        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((\_PR.CFGD & 0x02000000))
            {
                DerefOf (HPSD [Zero]) [0x02] = 0x0D
                DerefOf (HPSD [Zero]) [0x04] = One
            }
            Else
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
            }

            If ((PC00 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPUD.HPSD */
            }

            Return (SPSD) /* \_PR_.CPUD.SPSD */
        }
    }

    Scope (\_PR.CPUE)
    {
        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((\_PR.CFGD & 0x02000000))
            {
                DerefOf (HPSD [Zero]) [0x02] = 0x0E
                DerefOf (HPSD [Zero]) [0x04] = One
            }
            Else
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
            }

            If ((PC00 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPUE.HPSD */
            }

            Return (SPSD) /* \_PR_.CPUE.SPSD */
        }
    }

    Scope (\_PR.CPUF)
    {
        Name (HPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFE, 
                0x80
            }
        })
        Name (SPSD, Package (0x01)
        {
            Package (0x05)
            {
                0x05, 
                Zero, 
                Zero, 
                0xFC, 
                0x80
            }
        })
        Method (_PSD, 0, NotSerialized)  // _PSD: Power State Dependencies
        {
            If ((\_PR.CFGD & 0x02000000))
            {
                DerefOf (HPSD [Zero]) [0x02] = 0x0F
                DerefOf (HPSD [Zero]) [0x04] = One
            }
            Else
            {
                DerefOf (HPSD [Zero]) [0x04] = TCNT /* External reference */
                DerefOf (SPSD [Zero]) [0x04] = TCNT /* External reference */
            }

            If ((PC00 & 0x0800))
            {
                Return (HPSD) /* \_PR_.CPUF.HPSD */
            }

            Return (SPSD) /* \_PR_.CPUF.SPSD */
        }
    }
}



SSDT2
-----
DefinitionBlock ("", "SSDT", 2, "PmRef", "ApIst", 0x00003000)
{
    External (_PR_.CPU0, DeviceObj)
    External (_PR_.CPU0._PCT, MethodObj)    // 0 Arguments
    External (_PR_.CPU0._PPC, MethodObj)    // 0 Arguments
    External (_PR_.CPU0._PSS, MethodObj)    // 0 Arguments
    External (_PR_.CPU1, DeviceObj)
    External (_PR_.CPU2, DeviceObj)
    External (_PR_.CPU3, DeviceObj)
    External (_PR_.CPU4, DeviceObj)
    External (_PR_.CPU5, DeviceObj)
    External (_PR_.CPU6, DeviceObj)
    External (_PR_.CPU7, DeviceObj)
    External (_PR_.CPU8, DeviceObj)
    External (_PR_.CPU9, DeviceObj)
    External (_PR_.CPUA, DeviceObj)
    External (_PR_.CPUB, DeviceObj)
    External (_PR_.CPUC, DeviceObj)
    External (_PR_.CPUD, DeviceObj)
    External (_PR_.CPUE, DeviceObj)
    External (_PR_.CPUF, DeviceObj)

    Scope (\_PR.CPU1)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC ())
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT ())
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS ())
        }
    }

    Scope (\_PR.CPU2)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC ())
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT ())
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS ())
        }
    }

    Scope (\_PR.CPU3)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC ())
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT ())
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS ())
        }
    }

    Scope (\_PR.CPU4)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC ())
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT ())
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS ())
        }
    }

    Scope (\_PR.CPU5)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC ())
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT ())
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS ())
        }
    }

    Scope (\_PR.CPU6)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC ())
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT ())
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS ())
        }
    }

    Scope (\_PR.CPU7)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC ())
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT ())
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS ())
        }
    }

    Scope (\_PR.CPU8)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC ())
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT ())
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS ())
        }
    }

    Scope (\_PR.CPU9)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC ())
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT ())
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS ())
        }
    }

    Scope (\_PR.CPUA)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC ())
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT ())
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS ())
        }
    }

    Scope (\_PR.CPUB)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC ())
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT ())
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS ())
        }
    }

    Scope (\_PR.CPUC)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC ())
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT ())
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS ())
        }
    }

    Scope (\_PR.CPUD)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC ())
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT ())
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS ())
        }
    }

    Scope (\_PR.CPUE)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC ())
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT ())
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS ())
        }
    }

    Scope (\_PR.CPUF)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPU0._PPC ())
        }

        Method (_PCT, 0, NotSerialized)  // _PCT: Performance Control
        {
            Return (\_PR.CPU0._PCT ())
        }

        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            Return (\_PR.CPU0._PSS ())
        }
    }
}



SSDT3
-----
DefinitionBlock ("", "SSDT", 1, "APPLE ", "SsdtS3", 0x00001000)
{
    Name (_S3, Package (0x03)  // _S3_: S3 System State
    {
        0x05, 
        0x05, 
        Zero
    })
}



SSDT4
-----
DefinitionBlock ("", "SSDT", 1, "APPLE ", "SmcDppt", 0x00001000)
{


SSDT5
-----
DefinitionBlock ("", "SSDT", 2, "APPLE ", "TbtPEG12", 0x00001000)
{
    External (_SB_.GGDV, MethodObj)    // 1 Arguments
    External (_SB_.GGIV, MethodObj)    // 1 Arguments
    External (_SB_.GGOV, MethodObj)    // 1 Arguments
    External (_SB_.PCI0, DeviceObj)
    External (_SB_.PCI0.LPCB.EC__.ECOK, UnknownObj)
    External (_SB_.PCI0.LPCB.EC__.EWDK, UnknownObj)
    External (_SB_.PCI0.LPCB.EC__.EWPM, UnknownObj)
    External (_SB_.PCI0.LPCB.EC__.EWTB, UnknownObj)
    External (_SB_.PCI0.LPCB.EC__.LWTB, UnknownObj)
    External (_SB_.PCI0.LPCB.EC__.RSTB, MethodObj)    // 2 Arguments
    External (_SB_.PCI0.LPCB.EC__.SWTB, UnknownObj)
    External (_SB_.PCI0.LPCB.EC__.TBPS, UnknownObj)
    External (_SB_.PCI0.LPCB.EC__.TBPW, UnknownObj)
    External (_SB_.PCI0.LPCB.RTC_.ISTB, FieldUnitObj)
    External (_SB_.PCI0.PEG0, DeviceObj)
    External (_SB_.PCI0.PEG1, DeviceObj)
    External (_SB_.PCI0.PEG1.CMPE, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.PEG1.CNHI, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.PEG1.WTLT, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.PEG2, DeviceObj)
    External (_SB_.PCI0.PEG2.CMPE, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.PEG2.CNHI, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.PEG2.WTLT, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.XHC1, DeviceObj)
    External (_SB_.SGDI, MethodObj)    // 1 Arguments
    External (_SB_.SGDO, MethodObj)    // 1 Arguments
    External (_SB_.SGOV, MethodObj)    // 2 Arguments
    External (BICM, FieldUnitObj)
    External (BRTL, FieldUnitObj)
    External (DTGP, MethodObj)    // 5 Arguments
    External (EGPS, FieldUnitObj)
    External (ISWI, FieldUnitObj)
    External (MUTX, FieldUnitObj)
    External (NHI1, FieldUnitObj)
    External (NHI2, FieldUnitObj)
    External (NHIB, FieldUnitObj)
    External (OSDW, MethodObj)    // 0 Arguments
    External (OSYS, FieldUnitObj)
    External (P2TR, FieldUnitObj)
    External (SLTP, UnknownObj)
    External (SSMP, FieldUnitObj)
    External (SSMY, FieldUnitObj)
    External (T2P1, FieldUnitObj)
    External (T2P2, FieldUnitObj)
    External (T2PB, FieldUnitObj)
    External (T2PR, FieldUnitObj)
    External (TBD3, FieldUnitObj)
    External (TBD4, FieldUnitObj)
    External (TBD5, FieldUnitObj)
    External (TBD6, FieldUnitObj)
    External (TBDB, FieldUnitObj)
    External (TBG0, UnknownObj)
    External (TBG1, UnknownObj)
    External (TBG2, UnknownObj)
    External (TBH1, UnknownObj)
    External (TBH2, UnknownObj)
    External (TBNH, FieldUnitObj)
    External (TBUP, FieldUnitObj)
    External (TD11, FieldUnitObj)
    External (TD12, FieldUnitObj)
    External (TD21, FieldUnitObj)
    External (TD22, FieldUnitObj)
    External (TD41, FieldUnitObj)
    External (TD42, FieldUnitObj)
    External (TDB1, FieldUnitObj)
    External (TDB2, FieldUnitObj)
    External (TNH1, FieldUnitObj)
    External (TNH2, FieldUnitObj)
    External (TUP1, FieldUnitObj)
    External (TUP2, FieldUnitObj)
    External (U2OP, FieldUnitObj)

    Scope (\_SB.PCI0)
    {
        Scope (\_SB.PCI0.PEG1)
        {
            Scope (\_GPE)
            {
                Method (_E4B, 0, NotSerialized)  // _Exx: Edge-Triggered GPE, xx=0x00-0xFF
                {
                    If (!OSDW ())
                    {
                        \_SB.PCI0.PEG1.POC0 = One
                        If ((\_SB.PCI0.PEG1.POCW == One))
                        {
                            Return (Zero)
                        }

                        Local0 = 0x01F4
                        While (Local0)
                        {
                            If ((\_SB.PCI0.PEG1.UPVD != 0xFFFFFFFF))
                            {
                                Break
                            }

                            Local0--
                            Sleep (One)
                        }

                        \_SB.PCI0.PEG1.CMPE ()
                    }
                    Else
                    {
                        \_SB.PCI0.PEG1.UPSB.AMPE ()
                    }
                }
            }

            Name (EICM, Zero)
            Name (R018, Zero)
            Name (R019, Zero)
            Name (R01A, Zero)
            Name (R01C, Zero)
            Name (R020, Zero)
            Name (R024, Zero)
            Name (R028, Zero)
            Name (R02C, Zero)
            Name (R118, Zero)
            Name (R119, Zero)
            Name (R11A, Zero)
            Name (R11C, Zero)
            Name (R120, Zero)
            Name (R124, Zero)
            Name (R128, Zero)
            Name (R12C, Zero)
            Name (R218, Zero)
            Name (R219, Zero)
            Name (R21A, Zero)
            Name (R21C, Zero)
            Name (R220, Zero)
            Name (R224, Zero)
            Name (R228, Zero)
            Name (R22C, Zero)
            Name (R318, Zero)
            Name (R319, Zero)
            Name (R31A, Zero)
            Name (R31C, Zero)
            Name (R320, Zero)
            Name (R324, Zero)
            Name (R328, Zero)
            Name (R32C, Zero)
            Name (R418, Zero)
            Name (R419, Zero)
            Name (R41A, Zero)
            Name (R41C, Zero)
            Name (R420, Zero)
            Name (R424, Zero)
            Name (R428, Zero)
            Name (R42C, Zero)
            Name (RVES, Zero)
            Name (R518, Zero)
            Name (R519, Zero)
            Name (R51A, Zero)
            Name (R51C, Zero)
            Name (R520, Zero)
            Name (R524, Zero)
            Name (R528, Zero)
            Name (R52C, Zero)
            Name (R618, Zero)
            Name (R619, Zero)
            Name (R61A, Zero)
            Name (R61C, Zero)
            Name (R620, Zero)
            Name (R624, Zero)
            Name (R628, Zero)
            Name (R62C, Zero)
            Name (RH10, Zero)
            Name (RH14, Zero)
            Name (POC0, Zero)
            Name (POCW, Zero)
            Name (GO2S, Zero)
            OperationRegion (RSTR, SystemMemory, NHI1, 0x0100)
            Field (RSTR, DWordAcc, NoLock, Preserve)
            {
                CIOR,   32, 
                Offset (0xB8), 
                ISTA,   32, 
                Offset (0xF0), 
                ICME,   32
            }

            OperationRegion (T2PM, SystemMemory, T2P1, 0x08)
            Field (T2PM, DWordAcc, NoLock, Preserve)
            {
                T2PR,   32, 
                P2TR,   32
            }

            OperationRegion (RPSM, SystemMemory, 0xE0009000, 0xC0)
            Field (RPSM, DWordAcc, NoLock, Preserve)
            {
                RPVD,   32, 
                RPR4,   8, 
                Offset (0x18), 
                R_18,   8, 
                R_19,   8, 
                R_1A,   8, 
                Offset (0x1C), 
                R_1C,   16, 
                Offset (0x20), 
                R_20,   32, 
                R_24,   32, 
                R_28,   32, 
                R_2C,   32, 
                Offset (0xA0), 
                Offset (0xB0), 
                    ,   5, 
                RPTL,   1, 
                    ,   21, 
                RPLT,   1, 
                Offset (0xB4)
            }

            OperationRegion (UPSM, SystemMemory, TUP1, 0x0548)
            Field (UPSM, DWordAcc, NoLock, Preserve)
            {
                UPVD,   32, 
                UP04,   8, 
                Offset (0x08), 
                CLRD,   32, 
                Offset (0x18), 
                UP18,   8, 
                UP19,   8, 
                UP1A,   8, 
                Offset (0x1C), 
                UP1C,   16, 
                Offset (0x20), 
                UP20,   32, 
                UP24,   32, 
                UP28,   32, 
                UP2C,   32, 
                Offset (0xD2), 
                    ,   11, 
                UPLT,   1, 
                Offset (0xD4), 
                Offset (0x544), 
                UPMB,   1, 
                Offset (0x548)
            }

            OperationRegion (DNSM, SystemMemory, TDB1, 0xD4)
            Field (DNSM, DWordAcc, NoLock, Preserve)
            {
                DPVD,   32, 
                DP04,   8, 
                Offset (0x18), 
                DP18,   8, 
                DP19,   8, 
                DP1A,   8, 
                Offset (0x1C), 
                DP1C,   16, 
                Offset (0x20), 
                DP20,   32, 
                DP24,   32, 
                DP28,   32, 
                DP2C,   32, 
                Offset (0xD2), 
                    ,   11, 
                DPLT,   1, 
                Offset (0xD4)
            }

            OperationRegion (DS3M, SystemMemory, TD11, 0x40)
            Field (DS3M, DWordAcc, NoLock, Preserve)
            {
                D3VD,   32, 
                D304,   8, 
                Offset (0x18), 
                D318,   8, 
                D319,   8, 
                D31A,   8, 
                Offset (0x1C), 
                D31C,   16, 
                Offset (0x20), 
                D320,   32, 
                D324,   32, 
                D328,   32, 
                D32C,   32
            }

            OperationRegion (DS4M, SystemMemory, TD21, 0x0568)
            Field (DS4M, DWordAcc, NoLock, Preserve)
            {
                D4VD,   32, 
                D404,   8, 
                Offset (0x18), 
                D418,   8, 
                D419,   8, 
                D41A,   8, 
                Offset (0x1C), 
                D41C,   16, 
                Offset (0x20), 
                D420,   32, 
                D424,   32, 
                D428,   32, 
                D42C,   32, 
                Offset (0x564), 
                DVES,   32
            }

            OperationRegion (DS5M, SystemMemory, TD41, 0x40)
            Field (DS5M, DWordAcc, NoLock, Preserve)
            {
                D5VD,   32, 
                D504,   8, 
                Offset (0x18), 
                D518,   8, 
                D519,   8, 
                D51A,   8, 
                Offset (0x1C), 
                D51C,   16, 
                Offset (0x20), 
                D520,   32, 
                D524,   32, 
                D528,   32, 
                D52C,   32
            }

            OperationRegion (NHIM, SystemMemory, TNH1, 0x40)
            Field (NHIM, DWordAcc, NoLock, Preserve)
            {
                NH00,   32, 
                NH04,   8, 
                Offset (0x10), 
                NH10,   32, 
                NH14,   32
            }

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                If (!OSDW ())
                {
                    TBG1 = One
                    R018 = R_18 /* \_SB_.PCI0.PEG1.R_18 */
                    R019 = R_19 /* \_SB_.PCI0.PEG1.R_19 */
                    R01A = R_1A /* \_SB_.PCI0.PEG1.R_1A */
                    R01C = R_1C /* \_SB_.PCI0.PEG1.R_1C */
                    R020 = R_20 /* \_SB_.PCI0.PEG1.R_20 */
                    R024 = R_24 /* \_SB_.PCI0.PEG1.R_24 */
                    R028 = R_28 /* \_SB_.PCI0.PEG1.R_28 */
                    R02C = R_2C /* \_SB_.PCI0.PEG1.R_2C */
                    R118 = UP18 /* \_SB_.PCI0.PEG1.UP18 */
                    R119 = UP19 /* \_SB_.PCI0.PEG1.UP19 */
                    R11A = UP1A /* \_SB_.PCI0.PEG1.UP1A */
                    R11C = UP1C /* \_SB_.PCI0.PEG1.UP1C */
                    R120 = UP20 /* \_SB_.PCI0.PEG1.UP20 */
                    R124 = UP24 /* \_SB_.PCI0.PEG1.UP24 */
                    R128 = UP28 /* \_SB_.PCI0.PEG1.UP28 */
                    R12C = UP2C /* \_SB_.PCI0.PEG1.UP2C */
                    R218 = DP18 /* \_SB_.PCI0.PEG1.DP18 */
                    R219 = DP19 /* \_SB_.PCI0.PEG1.DP19 */
                    R21A = DP1A /* \_SB_.PCI0.PEG1.DP1A */
                    R21C = DP1C /* \_SB_.PCI0.PEG1.DP1C */
                    R220 = DP20 /* \_SB_.PCI0.PEG1.DP20 */
                    R224 = DP24 /* \_SB_.PCI0.PEG1.DP24 */
                    R228 = DP28 /* \_SB_.PCI0.PEG1.DP28 */
                    R22C = DP2C /* \_SB_.PCI0.PEG1.DP2C */
                    R318 = D318 /* \_SB_.PCI0.PEG1.D318 */
                    R319 = D319 /* \_SB_.PCI0.PEG1.D319 */
                    R31A = D31A /* \_SB_.PCI0.PEG1.D31A */
                    R31C = D31C /* \_SB_.PCI0.PEG1.D31C */
                    R320 = D320 /* \_SB_.PCI0.PEG1.D320 */
                    R324 = D324 /* \_SB_.PCI0.PEG1.D324 */
                    R328 = D328 /* \_SB_.PCI0.PEG1.D328 */
                    R32C = D32C /* \_SB_.PCI0.PEG1.D32C */
                    R418 = D418 /* \_SB_.PCI0.PEG1.D418 */
                    R419 = D419 /* \_SB_.PCI0.PEG1.D419 */
                    R41A = D41A /* \_SB_.PCI0.PEG1.D41A */
                    R41C = D41C /* \_SB_.PCI0.PEG1.D41C */
                    R420 = D420 /* \_SB_.PCI0.PEG1.D420 */
                    R424 = D424 /* \_SB_.PCI0.PEG1.D424 */
                    R428 = D428 /* \_SB_.PCI0.PEG1.D428 */
                    R42C = D42C /* \_SB_.PCI0.PEG1.D42C */
                    RVES = DVES /* \_SB_.PCI0.PEG1.DVES */
                    R518 = D518 /* \_SB_.PCI0.PEG1.D518 */
                    R519 = D519 /* \_SB_.PCI0.PEG1.D519 */
                    R51A = D51A /* \_SB_.PCI0.PEG1.D51A */
                    R51C = D51C /* \_SB_.PCI0.PEG1.D51C */
                    R520 = D520 /* \_SB_.PCI0.PEG1.D520 */
                    R524 = D524 /* \_SB_.PCI0.PEG1.D524 */
                    R528 = D528 /* \_SB_.PCI0.PEG1.D528 */
                    R52C = D52C /* \_SB_.PCI0.PEG1.D52C */
                    RH10 = NH10 /* \_SB_.PCI0.PEG1.NH10 */
                    RH14 = NH14 /* \_SB_.PCI0.PEG1.NH14 */
                    Sleep (One)
                    ICMB (Zero)
                }
            }

            Method (DTFP, 0, NotSerialized)
            {
                \_SB.SGOV (0x03050007, Zero)
                \_SB.SGDO (0x03050007)
                \_SB.SGOV (0x03050008, Zero)
                \_SB.SGDO (0x03050008)
            }

            Method (ICMB, 1, NotSerialized)
            {
                If ((BICM == One))
                {
                    If ((ISWI != One))
                    {
                        If ((Arg0 >= 0x03))
                        {
                            \_SB.PCI0.PEG1.POCW = Zero
                            GO2S = Zero
                            If ((UPVD != 0xFFFFFFFF))
                            {
                                SGDI (0x03050007)
                                Local0 = 0x05
                                While (Local0)
                                {
                                    \_SB.PCI0.PEG1.POC0 = Zero
                                    Local1 = ICMS ()
                                    If (Local1)
                                    {
                                        Break
                                    }
                                    Else
                                    {
                                        Local0--
                                        Local2 = 0x01F4
                                        While (Local2)
                                        {
                                            Local2--
                                            If ((One == \_SB.PCI0.PEG1.POC0))
                                            {
                                                Break
                                            }

                                            Sleep (One)
                                        }
                                    }
                                }

                                If (Local1)
                                {
                                    SXEX ()
                                }
                            }
                        }

                        \_SB.SGOV (0x03050007, Zero)
                        \_SB.SGDO (0x03050007)
                        \_SB.SGOV (0x03050008, Zero)
                        \_SB.SGDO (0x03050008)
                    }
                }
            }

            Method (ICMS, 0, NotSerialized)
            {
                If ((BICM == One))
                {
                    If ((ISWI != One))
                    {
                        If ((\_SB.PCI0.PEG1.ICME != 0x800001A6))
                        {
                            If (\_SB.PCI0.PEG1.CNHI (One))
                            {
                                If ((\_SB.PCI0.PEG1.ICME != 0xFFFFFFFF))
                                {
                                    \_SB.PCI0.PEG1.WTLT ()
                                    If (!Local0 = (\_SB.PCI0.PEG1.ICME & 0x80000000))
                                    {
                                        \_SB.PCI0.PEG1.ICME |= 0x06
                                        Local0 = 0x03E8
                                        While (((\_SB.PCI0.PEG1.ICME & 0x80000000) == Zero))
                                        {
                                            Local0--
                                            If ((Local0 == Zero))
                                            {
                                                Break
                                            }

                                            Sleep (One)
                                        }

                                        Sleep (0x03E8)
                                        Return (One)
                                    }
                                    Else
                                    {
                                        Return (One)
                                    }
                                }
                                Else
                                {
                                    Return (Zero)
                                }
                            }
                            Else
                            {
                                Return (Zero)
                            }
                        }
                        Else
                        {
                            Return (One)
                        }
                    }
                }

                Return (Zero)
            }

            Method (SXEX, 0, Serialized)
            {
                Local1 = 0xC8
                P2TR = 0x09
                While ((Local1 > Zero))
                {
                    Local1 = (Local1 - One)
                    Local2 = T2PR /* \_SB_.PCI0.PEG1.T2PR */
                    If ((Local2 == 0xFFFFFFFF))
                    {
                        Return (Zero)
                    }

                    If ((Local2 & One))
                    {
                        Break
                    }

                    Sleep (0x05)
                }

                P2TR = Zero
                Local1 = 0x01F4
                While ((Local1 > Zero))
                {
                    Local1 = (Local1 - One)
                    Local2 = T2PR /* \_SB_.PCI0.PEG1.T2PR */
                    If ((Local2 == 0xFFFFFFFF))
                    {
                        Return (Zero)
                    }

                    If ((UPVD != 0xFFFFFFFF))
                    {
                        Break
                    }

                    Sleep (0x0A)
                }
            }

            Method (TBTC, 1, Serialized)
            {
                GO2S = One
                \_SB.PCI0.PEG1.POCW = One
                P2TR = Arg0
                Local0 = 0x64
                Local1 = T2PR /* \_SB_.PCI0.PEG1.T2PR */
                While (((Local1 & One) == Zero))
                {
                    If ((Local1 == 0xFFFFFFFF))
                    {
                        Return (Zero)
                    }

                    Local0--
                    If ((Local0 == Zero))
                    {
                        Break
                    }

                    Local1 = T2PR /* \_SB_.PCI0.PEG1.T2PR */
                    Sleep (0x32)
                }

                P2TR = Zero
            }

            Method (CMPE, 0, Serialized)
            {
                Notify (\_SB.PCI0.PEG1, Zero) // Bus Check
            }

            Method (CNHI, 1, Serialized)
            {
                Local0 = 0x0A
                While (Local0)
                {
                    R_18 = R018 /* \_SB_.PCI0.PEG1.R018 */
                    R_19 = R019 /* \_SB_.PCI0.PEG1.R019 */
                    R_1A = R01A /* \_SB_.PCI0.PEG1.R01A */
                    R_1C = R01C /* \_SB_.PCI0.PEG1.R01C */
                    R_20 = R020 /* \_SB_.PCI0.PEG1.R020 */
                    R_24 = R024 /* \_SB_.PCI0.PEG1.R024 */
                    R_28 = R028 /* \_SB_.PCI0.PEG1.R028 */
                    R_2C = R02C /* \_SB_.PCI0.PEG1.R02C */
                    RPR4 = 0x07
                    If ((R020 == R_20))
                    {
                        Break
                    }

                    Sleep (One)
                    Local0--
                }

                If ((R020 != R_20))
                {
                    Return (Zero)
                }

                If (!Arg0)
                {
                    Return (One)
                }

                Local0 = 0x0A
                While (Local0)
                {
                    UP18 = R118 /* \_SB_.PCI0.PEG1.R118 */
                    UP19 = R119 /* \_SB_.PCI0.PEG1.R119 */
                    UP1A = R11A /* \_SB_.PCI0.PEG1.R11A */
                    UP1C = R11C /* \_SB_.PCI0.PEG1.R11C */
                    UP20 = R120 /* \_SB_.PCI0.PEG1.R120 */
                    UP24 = R124 /* \_SB_.PCI0.PEG1.R124 */
                    UP28 = R128 /* \_SB_.PCI0.PEG1.R128 */
                    UP2C = R12C /* \_SB_.PCI0.PEG1.R12C */
                    UP04 = 0x07
                    If ((R119 == UP19))
                    {
                        Break
                    }

                    Sleep (One)
                    Local0--
                }

                If ((R119 != UP19))
                {
                    Return (Zero)
                }

                If ((WTLT () == One)) {}
                Else
                {
                    Return (Zero)
                }

                Local0 = 0x0A
                While (Local0)
                {
                    DP18 = R218 /* \_SB_.PCI0.PEG1.R218 */
                    DP19 = R219 /* \_SB_.PCI0.PEG1.R219 */
                    DP1A = R21A /* \_SB_.PCI0.PEG1.R21A */
                    DP1C = R21C /* \_SB_.PCI0.PEG1.R21C */
                    DP20 = R220 /* \_SB_.PCI0.PEG1.R220 */
                    DP24 = R224 /* \_SB_.PCI0.PEG1.R224 */
                    DP28 = R228 /* \_SB_.PCI0.PEG1.R228 */
                    DP2C = R22C /* \_SB_.PCI0.PEG1.R22C */
                    DP04 = 0x07
                    D318 = R318 /* \_SB_.PCI0.PEG1.R318 */
                    D319 = R319 /* \_SB_.PCI0.PEG1.R319 */
                    D31A = R31A /* \_SB_.PCI0.PEG1.R31A */
                    D31C = R31C /* \_SB_.PCI0.PEG1.R31C */
                    D320 = R320 /* \_SB_.PCI0.PEG1.R320 */
                    D324 = R324 /* \_SB_.PCI0.PEG1.R324 */
                    D328 = R328 /* \_SB_.PCI0.PEG1.R328 */
                    D32C = R32C /* \_SB_.PCI0.PEG1.R32C */
                    D304 = 0x07
                    D418 = R418 /* \_SB_.PCI0.PEG1.R418 */
                    D419 = R419 /* \_SB_.PCI0.PEG1.R419 */
                    D41A = R41A /* \_SB_.PCI0.PEG1.R41A */
                    D41C = R41C /* \_SB_.PCI0.PEG1.R41C */
                    D420 = R420 /* \_SB_.PCI0.PEG1.R420 */
                    D424 = R424 /* \_SB_.PCI0.PEG1.R424 */
                    D428 = R428 /* \_SB_.PCI0.PEG1.R428 */
                    D42C = R42C /* \_SB_.PCI0.PEG1.R42C */
                    DVES = RVES /* \_SB_.PCI0.PEG1.RVES */
                    D404 = 0x07
                    D518 = R518 /* \_SB_.PCI0.PEG1.R518 */
                    D519 = R519 /* \_SB_.PCI0.PEG1.R519 */
                    D51A = R51A /* \_SB_.PCI0.PEG1.R51A */
                    D51C = R51C /* \_SB_.PCI0.PEG1.R51C */
                    D520 = R520 /* \_SB_.PCI0.PEG1.R520 */
                    D524 = R524 /* \_SB_.PCI0.PEG1.R524 */
                    D528 = R528 /* \_SB_.PCI0.PEG1.R528 */
                    D52C = R52C /* \_SB_.PCI0.PEG1.R52C */
                    D504 = 0x07
                    If ((R219 == DP19))
                    {
                        Break
                    }

                    Sleep (One)
                    Local0--
                }

                If ((R219 != DP19))
                {
                    Return (Zero)
                }

                If ((WTDL () == One)) {}
                Else
                {
                    Return (Zero)
                }

                Local0 = 0x0A
                While (Local0)
                {
                    NH10 = RH10 /* \_SB_.PCI0.PEG1.RH10 */
                    NH14 = RH14 /* \_SB_.PCI0.PEG1.RH14 */
                    NH04 = 0x07
                    If ((RH10 == NH10))
                    {
                        Break
                    }
                    Else
                    {
                    }

                    Sleep (One)
                    Local0--
                }

                If ((RH10 != NH10))
                {
                    Return (Zero)
                }

                Return (One)
            }

            Method (UPCK, 0, Serialized)
            {
                If ((((UPVD == 0x156D8086) || (UPVD == 0x156B8086)) || (UPVD == 0x156A8086)))
                {
                    Return (One)
                }

                If ((UPVD == 0x15788086))
                {
                    Return (One)
                }
                ElseIf ((UPVD == 0x15EA8086))
                {
                    Return (One)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (ULTC, 0, Serialized)
            {
                If ((RPLT == Zero))
                {
                    If ((UPLT == Zero))
                    {
                        Return (One)
                    }
                }

                Return (Zero)
            }

            Method (WTLT, 0, Serialized)
            {
                Local0 = 0x07D0
                Local1 = Zero
                While (Local0)
                {
                    If ((RPR4 == 0x07))
                    {
                        If (ULTC ())
                        {
                            If (UPCK ())
                            {
                                Local1 = One
                                Break
                            }
                        }
                    }

                    Sleep (One)
                    Local0--
                }

                Return (Local1)
            }

            Method (DLTC, 0, Serialized)
            {
                If ((RPLT == Zero))
                {
                    If ((UPLT == Zero))
                    {
                        If ((DPLT == Zero))
                        {
                            Return (One)
                        }
                    }
                }

                Return (Zero)
            }

            Method (WTDL, 0, Serialized)
            {
                Local0 = 0x07D0
                Local1 = Zero
                While (Local0)
                {
                    If ((RPR4 == 0x07))
                    {
                        If (DLTC ())
                        {
                            If (UPCK ())
                            {
                                Local1 = One
                                Break
                            }
                        }
                    }

                    Sleep (One)
                    Local0--
                }

                Return (Local1)
            }

            OperationRegion (OPG0, SystemMemory, 0xE0009000, 0x1000)
            Field (OPG0, ByteAcc, NoLock, Preserve)
            {
                P0VI,   16, 
                P0DI,   16, 
                Offset (0x248), 
                    ,   7, 
                Q0L2,   1, 
                Q0L0,   1, 
                Offset (0x91C), 
                    ,   31, 
                BND0,   1, 
                Offset (0x93C), 
                    ,   31, 
                BND1,   1, 
                Offset (0xC20), 
                    ,   4, 
                RC20,   2, 
                Offset (0xC38), 
                    ,   3, 
                RC38,   1
            }

            Name (PUPS, One)
            Method (PUPD, 2, Serialized)
            {
                If ((Arg0 == Zero))
                {
                    If ((PUPS != Zero))
                    {
                        Q0L2 = One
                        Local0 = (Timer + 0x00989680)
                        While ((Timer <= Local0))
                        {
                            If ((Q0L2 == Zero))
                            {
                                RC20 = 0x03
                                RC38 = One
                                BND0 = One
                                BND1 = One
                                Break
                            }
                        }

                        PUPS = Zero
                    }
                }
                ElseIf ((PUPS == Zero))
                {
                    RC20 = Zero
                    RC38 = Zero
                    BND0 = Zero
                    BND1 = Zero
                    Q0L0 = One
                    Local1 = (Timer + 0x000F4240)
                    While ((Timer <= Local1))
                    {
                        If ((Q0L0 == Zero))
                        {
                            Break
                        }
                    }

                    PUPS = One
                }
            }

            OperationRegion (H224, PCI_Config, 0x0224, 0x04)
            Field (H224, DWordAcc, Lock, Preserve)
            {
                LWDT,   4, 
                Offset (0x04)
            }

            OperationRegion (HC74, PCI_Config, 0x0C74, 0x04)
            Field (HC74, DWordAcc, Lock, Preserve)
            {
                LTSM,   4, 
                Offset (0x04)
            }

            Name (IIP3, Zero)
            Name (PRSR, Zero)
            Name (PCIA, One)
            Method (PCEU, 0, Serialized)
            {
                \_SB.PCI0.PEG1.PRSR = Zero
                If ((\_SB.PCI0.PEG1.PSTA != Zero))
                {
                    \_SB.PCI0.PEG1.PRSR = One
                    \_SB.PCI0.PEG1.PSTA = Zero
                }

                If ((\_SB.PCI0.PEG1.UPSB.DSB0.NHI0.XRTE != Zero))
                {
                    \_SB.PCI0.PEG1.PRSR = One
                    \_SB.PCI0.PEG1.UPSB.DSB0.NHI0.XRST (Zero)
                }
            }

            Method (PCDA, 0, Serialized)
            {
                If ((\_SB.PCI0.PEG1.POFF () != Zero))
                {
                    \_SB.PCI0.PEG1.PCIA = Zero
                    \_SB.PCI0.PEG1.PSTA = 0x03
                    \_SB.PCI0.PEG1.TSPD = One
                    \_SB.PCI0.PEG1.UPSB.TSPD = One
                    \_SB.PCI0.PEG1.LRTN = One
                    Local2 = (Timer + 0x00989680)
                    While ((Timer <= Local2))
                    {
                        If ((\_SB.PCI0.PEG1.LACR == Zero))
                        {
                            If ((\_SB.PCI0.PEG1.LTRN != One))
                            {
                                Break
                            }
                        }
                        ElseIf (((\_SB.PCI0.PEG1.LTRN != One) && (\_SB.PCI0.PEG1.LACT == One)))
                        {
                            Break
                        }

                        Sleep (0x0A)
                    }

                    While ((Timer <= Local2))
                    {
                        If ((\_SB.PCI0.PEG1.UPSB.AVND != 0xFFFFFFFF))
                        {
                            Break
                        }

                        Sleep (0x0A)
                    }

                    \_SB.PCI0.PEG1.PUPD (Zero, 0x02)
                    SGOV (0x03050007, Zero)
                    SGDO (0x03050007)
                    SGOV (0x03050008, Zero)
                    SGDO (0x03050008)
                    Sleep (0x0A)
                    \_SB.PCI0.PEG1.GPCI = Zero
                    \_SB.PCI0.PEG1.UGIO ()
                }
                Else
                {
                }

                \_SB.PCI0.PEG1.IIP3 = One
            }

            Method (POFF, 0, Serialized)
            {
                Return ((!\_SB.PCI0.PEG1.RTBT && !\_SB.PCI0.PEG1.RUSB))
            }

            Name (GPCI, One)
            Name (GNHI, One)
            Name (GXCI, One)
            Name (RTBT, One)
            Name (RUSB, One)
            Name (CTPD, Zero)
            Method (TBPE, 1, Serialized)
            {
            }

            Method (TBPS, 0, Serialized)
            {
            }

            Method (CTBT, 0, Serialized)
            {
                If ((\_SB.PCI0.PEG1.PUPS != Zero))
                {
                    If (((GGDV (0x03050007) == One) && (\_SB.PCI0.PEG1.UPSB.AVND != 0xFFFFFFFF)))
                    {
                        Local2 = \_SB.PCI0.PEG1.UPSB.CRMW (0x3C, Zero, 0x02, 0x04000000, 0x04000000)
                        If ((Local2 == Zero))
                        {
                            \_SB.PCI0.PEG1.CTPD = One
                        }
                    }
                }
            }

            Method (UGIO, 0, Serialized)
            {
                If ((\_SB.PCI0.PEG1.GPCI == Zero)) {}
                Else
                {
                }

                If ((\_SB.PCI0.PEG1.GNHI == Zero)) {}
                Else
                {
                }

                If ((\_SB.PCI0.PEG1.GXCI == Zero)) {}
                Else
                {
                }

                If ((\_SB.PCI0.PEG1.RTBT == Zero)) {}
                Else
                {
                }

                If ((\_SB.PCI0.PEG1.RUSB == Zero)) {}
                Else
                {
                }

                Local0 = (\_SB.PCI0.PEG1.GNHI || \_SB.PCI0.PEG1.RTBT)
                Local1 = (\_SB.PCI0.PEG1.GXCI || \_SB.PCI0.PEG1.RUSB)
                If ((\_SB.PCI0.PEG1.GPCI != Zero))
                {
                    If (((Local0 == Zero) && (Local1 == Zero)))
                    {
                        Local0 = One
                        Local1 = One
                    }
                }

                If ((Local0 == Zero)) {}
                Else
                {
                }

                If ((Local1 == Zero)) {}
                Else
                {
                }

                Local2 = Zero
                If ((Local0 != Zero))
                {
                    If ((GGDV (0x03050007) == Zero))
                    {
                        SGDI (0x03050007)
                        Local2 = One
                        \_SB.PCI0.PEG1.CTPD = Zero
                    }
                }

                If ((Local1 != Zero))
                {
                    If ((GGDV (0x03050008) == Zero))
                    {
                        SGDI (0x03050008)
                        Local2 = One
                    }
                }

                If ((Local2 != Zero))
                {
                    Sleep (0x01F4)
                }

                Local3 = Zero
                If ((Local0 == Zero))
                {
                    If ((GGDV (0x03050007) == One))
                    {
                        \_SB.PCI0.PEG1.CTBT ()
                        If ((\_SB.PCI0.PEG1.CTPD != Zero))
                        {
                            SGOV (0x03050007, Zero)
                            SGDO (0x03050007)
                            Local3 = One
                        }
                        Else
                        {
                        }
                    }
                }

                If ((Local1 == Zero))
                {
                    If ((GGDV (0x03050008) == One))
                    {
                        SGOV (0x03050008, Zero)
                        SGDO (0x03050008)
                        Local3 = One
                    }
                }

                If ((Local3 != Zero))
                {
                    Sleep (0x64)
                }

                Return (Local2)
            }

            Method (_PS0, 0, Serialized)  // _PS0: Power State 0
            {
                If (OSDW ())
                {
                    PCEU ()
                }
            }

            Method (_PS3, 0, Serialized)  // _PS3: Power State 3
            {
                If (OSDW ())
                {
                    If ((\_SB.PCI0.PEG1.POFF () != Zero))
                    {
                        \_SB.PCI0.PEG1.CTBT ()
                    }

                    PCDA ()
                }
                ElseIf ((GO2S == Zero))
                {
                    If ((\_SB.PCI0.PEG1.UPCK () == Zero))
                    {
                        \_SB.PCI0.PEG1.UTLK (One, 0x03E8)
                    }
                    Else
                    {
                    }

                    \_SB.PCI0.PEG1.TBTC (0x05)
                    \_SB.PCI0.PEG1.UTLK (Zero, 0x03E8)
                    \_SB.PCI0.PEG1.PSTA = 0x03
                }
            }

            Method (TGPE, 0, Serialized)
            {
                Notify (\_SB.PCI0.PEG1, 0x02) // Device Wake
            }

            Method (UTLK, 2, Serialized)
            {
                If ((Arg0 == Zero))
                {
                    SGOV (0x03050007, Zero)
                    SGDO (0x03050007)
                    Return (Zero)
                }

                Local0 = Zero
                If (((GGOV (0x03050007) == Zero) && (GGDV (0x03050007) == Zero)))
                {
                    \_SB.PCI0.PEG1.PSTA = Zero
                    While (One)
                    {
                        If ((\_SB.PCI0.PEG1.LDIS == One))
                        {
                            \_SB.PCI0.PEG1.LDIS = Zero
                        }

                        SGDI (0x03050007)
                        Local1 = Zero
                        Local2 = (Timer + 0x00989680)
                        While ((Timer <= Local2))
                        {
                            If ((\_SB.PCI0.PEG1.LACR == Zero))
                            {
                                If ((\_SB.PCI0.PEG1.LTRN != One))
                                {
                                    Break
                                }
                            }
                            ElseIf (((\_SB.PCI0.PEG1.LTRN != One) && (\_SB.PCI0.PEG1.LACT == One)))
                            {
                                Break
                            }

                            Sleep (0x0A)
                        }

                        Sleep (Arg1)
                        While ((Timer <= Local2))
                        {
                            If ((\_SB.PCI0.PEG1.UPSB.AVND != 0xFFFFFFFF))
                            {
                                Local1 = One
                                Break
                            }

                            Sleep (0x0A)
                        }

                        If ((Local1 == One))
                        {
                            If ((One == \_SB.PCI0.PEG1.IABT))
                            {
                                \_SB.PCI0.PEG1.IABT = One
                            }

                            Break
                        }

                        If ((Local0 == 0x04))
                        {
                            Break
                        }

                        Local0++
                        SGOV (0x03050007, Zero)
                        SGDO (0x03050007)
                        Sleep (0x03E8)
                    }
                }
            }

            OperationRegion (FUBA, SystemMemory, 0xE0009000, 0x1000)
            Field (FUBA, ByteAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                F004,   16, 
                F006,   16, 
                Offset (0x0C), 
                F00C,   8, 
                Offset (0x19), 
                F019,   8, 
                F01A,   8, 
                Offset (0x1C), 
                F01C,   8, 
                F01D,   8, 
                F01E,   16, 
                F020,   16, 
                F022,   16, 
                F024,   16, 
                F026,   16, 
                F028,   32, 
                F02C,   32, 
                Offset (0x3C), 
                F03C,   8, 
                F03D,   8, 
                F03E,   16, 
                Offset (0x84), 
                F084,   32, 
                Offset (0x8C), 
                F08C,   32, 
                Offset (0x92), 
                F092,   16, 
                F094,   32, 
                F098,   16, 
                Offset (0xA2), 
                F0A2,   16, 
                Offset (0xA8), 
                F0A8,   16, 
                F0AA,   16, 
                F0AC,   16, 
                Offset (0xB0), 
                F0B0,   16, 
                F0B2,   16, 
                F0B4,   32, 
                Offset (0xBC), 
                F0BC,   16, 
                Offset (0xC0), 
                F0C0,   32, 
                Offset (0xC8), 
                F0C8,   16, 
                Offset (0xD0), 
                F0D0,   16, 
                F0D2,   16, 
                Offset (0xEC), 
                F0EC,   32, 
                Offset (0xF4), 
                F0F4,   32, 
                Offset (0x114), 
                F114,   32, 
                Offset (0x11A), 
                    ,   1, 
                F11A,   1, 
                Offset (0x11C), 
                Offset (0x144), 
                F144,   32, 
                Offset (0x150), 
                F150,   32, 
                Offset (0x158), 
                F158,   32, 
                F15C,   32, 
                Offset (0x1C4), 
                F1C4,   16, 
                Offset (0x1CC), 
                F1CC,   32, 
                F1D0,   32, 
                Offset (0x1F0), 
                F1F0,   32, 
                Offset (0x1F8), 
                F1F8,   32, 
                F1FC,   32, 
                F200,   32, 
                F204,   32, 
                F208,   32, 
                Offset (0x214), 
                Offset (0x216), 
                F214,   4, 
                Offset (0x218), 
                Offset (0x224), 
                F224,   32, 
                F228,   32, 
                F22C,   32, 
                Offset (0x238), 
                F238,   32, 
                Offset (0x240), 
                F240,   32, 
                F244,   32, 
                Offset (0x250), 
                F250,   32, 
                Offset (0x258), 
                F258,   32, 
                F25C,   32, 
                F260,   32, 
                Offset (0x508), 
                F508,   1, 
                Offset (0x509), 
                Offset (0x80C), 
                F80C,   32, 
                Offset (0x82C), 
                F82C,   32, 
                Offset (0x84C), 
                F84C,   32, 
                Offset (0x86C), 
                F86C,   32, 
                Offset (0x88C), 
                F88C,   32, 
                Offset (0x8AC), 
                F8AC,   32, 
                Offset (0x8CC), 
                F8CC,   32, 
                Offset (0x8EC), 
                F8EC,   32, 
                Offset (0x900), 
                F900,   32, 
                F904,   32, 
                F908,   32, 
                F90C,   32, 
                F910,   32, 
                Offset (0x918), 
                F918,   32, 
                Offset (0x920), 
                F920,   32, 
                F924,   32, 
                F928,   32, 
                F92C,   32, 
                F930,   32, 
                Offset (0x938), 
                F938,   32, 
                Offset (0x940), 
                F940,   32, 
                F944,   32, 
                F948,   32, 
                F94C,   32, 
                F950,   32, 
                Offset (0x958), 
                F958,   32, 
                Offset (0x960), 
                F960,   32, 
                F964,   32, 
                F968,   32, 
                F96C,   32, 
                F970,   32, 
                Offset (0x978), 
                F978,   32, 
                F980,   32, 
                F984,   32, 
                F988,   32, 
                F98C,   32, 
                F990,   32, 
                Offset (0x998), 
                F998,   32, 
                Offset (0x9A0), 
                F9A0,   32, 
                F9A4,   32, 
                F9A8,   32, 
                F9AC,   32, 
                F9B0,   32, 
                Offset (0x9B8), 
                F9B8,   32, 
                Offset (0x9C0), 
                F9C0,   32, 
                F9C4,   32, 
                F9C8,   32, 
                F9CC,   32, 
                F9D0,   32, 
                Offset (0x9D8), 
                F9D8,   32, 
                FD9C,   32, 
                F9E0,   32, 
                F9E4,   32, 
                F9E8,   32, 
                F9EC,   32, 
                F9F0,   32, 
                Offset (0x9F8), 
                F9F8,   32, 
                Offset (0xA00), 
                FA00,   32, 
                FA04,   32, 
                FA08,   32, 
                FA0C,   32, 
                FA10,   32, 
                FA14,   32, 
                FA18,   32, 
                FA1C,   32, 
                FA20,   32, 
                FA24,   32, 
                FA28,   32, 
                FA2C,   32, 
                FA30,   32, 
                FA34,   32, 
                FA38,   32, 
                FA3C,   32, 
                FA40,   32, 
                FA44,   32, 
                FA48,   32, 
                FA4C,   32, 
                FA50,   32, 
                FA54,   32, 
                FA58,   32, 
                FA5C,   32, 
                FA60,   32, 
                FA64,   32, 
                FA68,   32, 
                FA6C,   32, 
                FA70,   32, 
                FA74,   32, 
                FA78,   32, 
                FA7C,   32, 
                FA80,   32, 
                FA84,   32, 
                FA88,   32, 
                FA8C,   32, 
                FA90,   32, 
                FA94,   32, 
                FA98,   32, 
                FA9C,   32, 
                FAA0,   32, 
                FAA4,   32, 
                FAA8,   32, 
                FAAC,   32, 
                FAB0,   32, 
                FAB4,   32, 
                FAB8,   32, 
                FABC,   32, 
                FAC0,   32, 
                FAC4,   32, 
                FAC8,   32, 
                FACC,   32, 
                FAD0,   32, 
                FAD4,   32, 
                FAD8,   32, 
                FADC,   32, 
                FAE0,   32, 
                FAE4,   32, 
                FAE8,   32, 
                FAEC,   32, 
                FAF0,   32, 
                FAF4,   32, 
                FAF8,   32, 
                FAFC,   32, 
                Offset (0xC20), 
                    ,   4, 
                FSQ1,   1, 
                FSQ2,   1, 
                Offset (0xC24), 
                Offset (0xC28), 
                FC28,   32, 
                Offset (0xC30), 
                FC30,   32, 
                Offset (0xC38), 
                FC38,   32, 
                Offset (0xCD0), 
                FCD0,   32, 
                Offset (0xD10), 
                FD10,   1, 
                Offset (0xD14), 
                FD14,   32, 
                Offset (0xD34), 
                FD34,   32, 
                Offset (0xD94), 
                FD94,   32, 
                FD98,   32, 
                Offset (0xDA0), 
                FDA0,   32, 
                FDA4,   32, 
                FDA8,   32, 
                FDAC,   32, 
                FDB0,   32, 
                FDB4,   32, 
                FDB8,   32, 
                FDBC,   32, 
                Offset (0xDD8), 
                FDD8,   32
            }

            OperationRegion (BNDL, SystemMemory, 0xE000A000, 0x1000)
            Field (BNDL, ByteAcc, NoLock, Preserve)
            {
                Offset (0xB0), 
                    ,   4, 
                FLDS,   1, 
                Offset (0xB2), 
                    ,   4, 
                    ,   7, 
                FLTR,   1, 
                    ,   1, 
                FLAC,   1, 
                Offset (0xB4), 
                Offset (0x91C), 
                    ,   31, 
                B0PD,   1, 
                Offset (0x93C), 
                    ,   31, 
                B1PD,   1, 
                Offset (0x95C), 
                    ,   31, 
                B2PD,   1, 
                Offset (0x97C), 
                    ,   31, 
                B3PD,   1, 
                Offset (0x99C), 
                    ,   31, 
                B4PD,   1, 
                Offset (0x9BC), 
                    ,   31, 
                B5PD,   1, 
                Offset (0x9DC), 
                    ,   31, 
                B6PD,   1, 
                Offset (0x9FC), 
                    ,   31, 
                B7PD,   1
            }

            OperationRegion (C7AR, SystemMemory, 0xFED15DA8, 0x04)
            Field (C7AR, ByteAcc, NoLock, Preserve)
            {
                    ,   2, 
                C7AE,   1, 
                Offset (0x04)
            }

            Name (VDD8, Zero)
            Name (V900, Zero)
            Name (V904, Zero)
            Name (V908, Zero)
            Name (V90C, Zero)
            Name (V910, Zero)
            Name (V80C, Zero)
            Name (V920, Zero)
            Name (V924, Zero)
            Name (V928, Zero)
            Name (V92C, Zero)
            Name (V930, Zero)
            Name (V82C, Zero)
            Name (V940, Zero)
            Name (V944, Zero)
            Name (V948, Zero)
            Name (V94C, Zero)
            Name (V950, Zero)
            Name (V84C, Zero)
            Name (V960, Zero)
            Name (V964, Zero)
            Name (V968, Zero)
            Name (V96C, Zero)
            Name (V970, Zero)
            Name (V86C, Zero)
            Name (V980, Zero)
            Name (V984, Zero)
            Name (V988, Zero)
            Name (V98C, Zero)
            Name (V990, Zero)
            Name (V88C, Zero)
            Name (V9A0, Zero)
            Name (V9A4, Zero)
            Name (V9A8, Zero)
            Name (V9AC, Zero)
            Name (V9B0, Zero)
            Name (V8AC, Zero)
            Name (V9C0, Zero)
            Name (V9C4, Zero)
            Name (V9C8, Zero)
            Name (V9CC, Zero)
            Name (V9D0, Zero)
            Name (V8CC, Zero)
            Name (V9E0, Zero)
            Name (V9E4, Zero)
            Name (V9E8, Zero)
            Name (V9EC, Zero)
            Name (V9F0, Zero)
            Name (V8EC, Zero)
            Name (VC30, Zero)
            Name (VA00, Zero)
            Name (VA04, Zero)
            Name (VA08, Zero)
            Name (VA0C, Zero)
            Name (VA10, Zero)
            Name (VA14, Zero)
            Name (VA18, Zero)
            Name (VA1C, Zero)
            Name (VA20, Zero)
            Name (VA24, Zero)
            Name (VA28, Zero)
            Name (VA2C, Zero)
            Name (VA30, Zero)
            Name (VA34, Zero)
            Name (VA38, Zero)
            Name (VA3C, Zero)
            Name (VA40, Zero)
            Name (VA44, Zero)
            Name (VA48, Zero)
            Name (VA4C, Zero)
            Name (VA50, Zero)
            Name (VA54, Zero)
            Name (VA58, Zero)
            Name (VA5C, Zero)
            Name (VA60, Zero)
            Name (VA64, Zero)
            Name (VA68, Zero)
            Name (VA6C, Zero)
            Name (VA70, Zero)
            Name (VA74, Zero)
            Name (VA78, Zero)
            Name (VA7C, Zero)
            Name (VA80, Zero)
            Name (VA84, Zero)
            Name (VA88, Zero)
            Name (VA8C, Zero)
            Name (VA90, Zero)
            Name (VA94, Zero)
            Name (VA98, Zero)
            Name (VA9C, Zero)
            Name (VAA0, Zero)
            Name (VAA4, Zero)
            Name (VAA8, Zero)
            Name (VAAC, Zero)
            Name (VAB0, Zero)
            Name (VAB4, Zero)
            Name (VAB8, Zero)
            Name (VABC, Zero)
            Name (VAC0, Zero)
            Name (VAC4, Zero)
            Name (VAC8, Zero)
            Name (VACC, Zero)
            Name (VAD0, Zero)
            Name (VAD4, Zero)
            Name (VAD8, Zero)
            Name (VADC, Zero)
            Name (VAE0, Zero)
            Name (VAE4, Zero)
            Name (VAE8, Zero)
            Name (VAEC, Zero)
            Name (VAF0, Zero)
            Name (VAF4, Zero)
            Name (VAF8, Zero)
            Name (VAFC, Zero)
            Name (V918, Zero)
            Name (V938, Zero)
            Name (V958, Zero)
            Name (V978, Zero)
            Name (V998, Zero)
            Name (V9B8, Zero)
            Name (V9D8, Zero)
            Name (V9F8, Zero)
            Name (V224, Zero)
            Name (V1F8, Zero)
            Name (V260, Zero)
            Name (VC28, Zero)
            Name (VC38, Zero)
            Name (VD14, Zero)
            Name (V004, Zero)
            Name (V00C, Zero)
            Name (V019, Zero)
            Name (V01A, Zero)
            Name (V01C, Zero)
            Name (V01D, Zero)
            Name (V020, Zero)
            Name (V022, Zero)
            Name (V024, Zero)
            Name (V026, Zero)
            Name (V028, Zero)
            Name (V02C, Zero)
            Name (V03C, Zero)
            Name (V03D, Zero)
            Name (V03E, Zero)
            Name (V084, Zero)
            Name (V08C, Zero)
            Name (V092, Zero)
            Name (V094, Zero)
            Name (V098, Zero)
            Name (V0A2, Zero)
            Name (V0A8, Zero)
            Name (V0AC, Zero)
            Name (V0B0, Zero)
            Name (V0B4, Zero)
            Name (V0BC, Zero)
            Name (V0C8, Zero)
            Name (V0D0, Zero)
            Name (V0EC, Zero)
            Name (V114, Zero)
            Name (V144, Zero)
            Name (V150, Zero)
            Name (V158, Zero)
            Name (V15C, Zero)
            Name (V1CC, Zero)
            Name (V1FC, Zero)
            Name (V200, Zero)
            Name (V204, Zero)
            Name (V208, Zero)
            Name (V228, Zero)
            Name (V22C, Zero)
            Name (V238, Zero)
            Name (V240, Zero)
            Name (V244, Zero)
            Name (V250, Zero)
            Name (V258, Zero)
            Name (V25C, Zero)
            Name (VCD0, Zero)
            Name (VD34, Zero)
            Name (VD94, Zero)
            Name (VD98, Zero)
            Name (V0F4, Zero)
            Name (VDA0, Zero)
            Name (VDA4, Zero)
            Name (VDA8, Zero)
            Name (VDAC, Zero)
            Name (VDB0, Zero)
            Name (VDB4, Zero)
            Name (VDB8, Zero)
            Name (VDBC, Zero)
            Name (V214, Zero)
            Name (V006, Zero)
            Name (V01E, Zero)
            Name (V0AA, Zero)
            Name (V0C0, Zero)
            Name (V0D2, Zero)
            Name (V1C4, Zero)
            Name (V1D0, Zero)
            Name (V1F0, Zero)
            Name (VD9C, Zero)
            Name (V0B2, Zero)
            Name (V508, Zero)
            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
            Field (A1E0, ByteAcc, NoLock, Preserve)
            {
                AVND,   32, 
                BMIE,   3, 
                Offset (0x18), 
                PRIB,   8, 
                SECB,   8, 
                SUBB,   8, 
                Offset (0x1E), 
                    ,   13, 
                IABT,   1
            }

            OperationRegion (HD94, PCI_Config, 0x0D94, 0x08)
            Field (HD94, ByteAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                PLEQ,   1, 
                Offset (0x08)
            }

            OperationRegion (A1E1, PCI_Config, 0xA0, 0x40)
            Field (A1E1, ByteAcc, NoLock, Preserve)
            {
                Offset (0x01), 
                Offset (0x02), 
                Offset (0x04), 
                Offset (0x08), 
                Offset (0x0A), 
                    ,   5, 
                TPEN,   1, 
                Offset (0x0C), 
                SSPD,   4, 
                    ,   16, 
                LACR,   1, 
                Offset (0x10), 
                ASPM,   2, 
                    ,   2, 
                LDIS,   1, 
                LRTN,   1, 
                Offset (0x12), 
                CSPD,   4, 
                CWDT,   6, 
                    ,   1, 
                LTRN,   1, 
                    ,   1, 
                LACT,   1, 
                Offset (0x14), 
                Offset (0x30), 
                TSPD,   4
            }

            OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
            Field (A1E2, ByteAcc, NoLock, Preserve)
            {
                Offset (0x01), 
                Offset (0x02), 
                Offset (0x04), 
                PSTA,   2
            }

            OperationRegion (OE2H, PCI_Config, 0xE2, One)
            Field (OE2H, ByteAcc, NoLock, Preserve)
            {
                    ,   2, 
                L23E,   1, 
                L23D,   1
            }

            OperationRegion (DMIH, PCI_Config, 0x0324, One)
            Field (DMIH, ByteAcc, NoLock, Preserve)
            {
                    ,   3, 
                LEDM,   1
            }

            OperationRegion (A1E3, PCI_Config, 0x0200, 0x20)
            Field (A1E3, ByteAcc, NoLock, Preserve)
            {
                Offset (0x14), 
                Offset (0x16), 
                PSTS,   4
            }

            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
            {
                Return (Zero)
            }

            Device (UPSB)
            {
                Name (_ADR, Zero)  // _ADR: Address
                OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                Field (A1E0, ByteAcc, NoLock, Preserve)
                {
                    AVND,   32, 
                    BMIE,   3, 
                    Offset (0x18), 
                    PRIB,   8, 
                    SECB,   8, 
                    SUBB,   8, 
                    Offset (0x1E), 
                        ,   13, 
                    IABT,   1
                }

                OperationRegion (A1E1, PCI_Config, 0xC0, 0x40)
                Field (A1E1, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x01), 
                    Offset (0x02), 
                    Offset (0x04), 
                    Offset (0x08), 
                    Offset (0x0A), 
                        ,   5, 
                    TPEN,   1, 
                    Offset (0x0C), 
                    SSPD,   4, 
                        ,   16, 
                    LACR,   1, 
                    Offset (0x10), 
                        ,   4, 
                    LDIS,   1, 
                    LRTN,   1, 
                    Offset (0x12), 
                    CSPD,   4, 
                    CWDT,   6, 
                        ,   1, 
                    LTRN,   1, 
                        ,   1, 
                    LACT,   1, 
                    Offset (0x14), 
                    Offset (0x30), 
                    TSPD,   4
                }

                OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
                Field (A1E2, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x01), 
                    Offset (0x02), 
                    Offset (0x04), 
                    PSTA,   2
                }

                Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                {
                    Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.SECB */
                }

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                {
                    Return (Zero)
                }

                Method (PCED, 0, Serialized)
                {
                    \_SB.PCI0.PEG1.GPCI = One
                    If ((\_SB.PCI0.PEG1.UGIO () != Zero))
                    {
                        \_SB.PCI0.PEG1.PRSR = One
                    }

                    Local0 = Zero
                    Local1 = Zero
                    If ((PUPS == Zero))
                    {
                        Local1 = One
                    }

                    If ((Local1 == Zero))
                    {
                        If ((\_SB.PCI0.PEG1.IIP3 != Zero))
                        {
                            \_SB.PCI0.PEG1.PRSR = One
                            Local0 = One
                            \_SB.PCI0.PEG1.LDIS = One
                        }
                    }

                    LWRT = Zero
                    LRRT = Zero
                    LPRT = Zero
                    Local3 = Zero
                    While ((Local3 == Zero))
                    {
                        Local4 = Zero
                        Local5 = (Timer + 0x00989680)
                        If ((\_SB.PCI0.PEG1.PRSR != Zero))
                        {
                            Sleep (0x1E)
                            If (((Local0 != Zero) || (Local1 != Zero)))
                            {
                                \_SB.PCI0.PEG1.TSPD = One
                                If ((Local1 != Zero))
                                {
                                    \_SB.PCI0.PEG1.PUPD (One, 0x02)
                                }
                                ElseIf ((Local0 != Zero))
                                {
                                    \_SB.PCI0.PEG1.LDIS = Zero
                                }

                                While ((Timer <= Local5))
                                {
                                    Local6 = \_SB.PCI0.PEG1.LTSM
                                    If ((Local6 == 0x03))
                                    {
                                        Break
                                    }

                                    Sleep (0x0A)
                                }

                                Sleep (0x78)
                                While ((Timer <= Local5))
                                {
                                    If ((\_SB.PCI0.PEG1.UPSB.AVND != 0xFFFFFFFF))
                                    {
                                        Break
                                    }

                                    Sleep (0x0A)
                                }

                                \_SB.PCI0.PEG1.TSPD = 0x03
                                \_SB.PCI0.PEG1.PLEQ = One
                                \_SB.PCI0.PEG1.LRTN = One
                            }

                            Local5 = (Timer + 0x00989680)
                            While ((Timer <= Local5))
                            {
                                If ((\_SB.PCI0.PEG1.LACR == Zero))
                                {
                                    If ((\_SB.PCI0.PEG1.LTRN != One))
                                    {
                                        Break
                                    }
                                }
                                ElseIf (((\_SB.PCI0.PEG1.LTRN != One) && (\_SB.PCI0.PEG1.LACT == One)))
                                {
                                    Break
                                }

                                Sleep (0x0A)
                            }

                            Sleep (0xFA)
                        }

                        While ((Timer <= Local5))
                        {
                            Local6 = \_SB.PCI0.PEG1.LTSM
                            If ((Local6 == 0x03))
                            {
                                Break
                            }

                            Sleep (0x0A)
                        }

                        While ((Timer <= Local5))
                        {
                            If ((\_SB.PCI0.PEG1.UPSB.AVND != 0xFFFFFFFF))
                            {
                                Local4 = One
                                Break
                            }

                            Sleep (0x0A)
                        }

                        If ((\_SB.PCI0.PEG1.CSPD != 0x03))
                        {
                            If ((\_SB.PCI0.PEG1.SSPD == 0x03))
                            {
                                If ((\_SB.PCI0.PEG1.UPSB.SSPD == 0x03))
                                {
                                    If ((\_SB.PCI0.PEG1.TSPD != 0x03))
                                    {
                                        \_SB.PCI0.PEG1.TSPD = 0x03
                                    }

                                    If ((\_SB.PCI0.PEG1.UPSB.TSPD != 0x03))
                                    {
                                        \_SB.PCI0.PEG1.UPSB.TSPD = 0x03
                                    }

                                    \_SB.PCI0.PEG1.LRTN = One
                                    Local2 = (Timer + 0x00989680)
                                    While ((Timer <= Local2))
                                    {
                                        If ((\_SB.PCI0.PEG1.LACR == Zero))
                                        {
                                            If (((\_SB.PCI0.PEG1.LTRN != One) && (\_SB.PCI0.PEG1.UPSB.AVND != 0xFFFFFFFF)))
                                            {
                                                \_SB.PCI0.PEG1.PCIA = One
                                                Break
                                            }
                                        }
                                        ElseIf ((((\_SB.PCI0.PEG1.LTRN != One) && (\_SB.PCI0.PEG1.LACT == One)) && 
                                            (\_SB.PCI0.PEG1.UPSB.AVND != 0xFFFFFFFF)))
                                        {
                                            \_SB.PCI0.PEG1.PCIA = One
                                            Break
                                        }

                                        Sleep (0x0A)
                                    }
                                }
                                Else
                                {
                                    \_SB.PCI0.PEG1.PCIA = One
                                }
                            }
                            Else
                            {
                                \_SB.PCI0.PEG1.PCIA = One
                            }
                        }
                        Else
                        {
                            \_SB.PCI0.PEG1.PCIA = One
                        }

                        Local5 = ((LWRT < LWMR) && (\_SB.PCI0.PEG1.PRSR != Zero))
                        Local6 = ((\_SB.PCI0.PEG1.CWDT != 0x04) && ((TFLG & One) == 
                            Zero))
                        Local7 = ((Local4 == Zero) && ((TFLG & 0x02) == Zero))
                        If (((Local6 || Local7) && Local5))
                        {
                            Local1 = Zero
                            If ((LWRT >= LPMN))
                            {
                                LPRT += One
                                \_SB.PCI0.PEG1.UPSB.POCR ()
                                Local4 = Zero
                            }

                            If ((Local4 != Zero))
                            {
                                LRRT += One
                                \_SB.PCI0.PEG1.UPSB.CRMW (0x0771, Zero, 0x02, 0x0200, 0xFFFFFFFF)
                            }

                            Local0 = One
                            \_SB.PCI0.PEG1.LDIS = One
                            \_SB.PCI0.PEG1.PCIA = Zero
                            Sleep (0x64)
                            LWRT += One
                        }
                        Else
                        {
                            Local3 = One
                        }
                    }

                    \_SB.PCI0.PEG1.PRSR = Zero
                    \_SB.PCI0.PEG1.IIP3 = Zero
                }

                Method (AMPE, 0, Serialized)
                {
                    Notify (\_SB.PCI0.PEG1.UPSB.DSB0.NHI0, Zero) // Bus Check
                }

                Method (UMPE, 0, Serialized)
                {
                    Notify (\_SB.PCI0.PEG1.UPSB.DSB2.XHC2, Zero) // Bus Check
                    Notify (\_SB.PCI0.XHC1, Zero) // Bus Check
                }

                Name (MDUV, One)
                Method (MUST, 1, Serialized)
                {
                    If (OSDW ())
                    {
                        If ((MDUV != Arg0))
                        {
                            MDUV = Arg0
                            UMPE ()
                        }
                    }

                    Return (Zero)
                }

                Name (TFLG, Zero)
                Name (LWMR, 0x14)
                Name (LPMN, 0x0A)
                Name (LWRT, Zero)
                Name (LRRT, Zero)
                Name (LPRT, Zero)
                Method (SLMR, 1, Serialized)
                {
                    LWMR = Arg0
                }

                Method (SFLG, 1, Serialized)
                {
                    TFLG = Arg0
                }

                Method (POCR, 0, Serialized)
                {
                    \_SB.PCI0.LPCB.EC.RSTB (Zero, 0x06)
                }

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {
                    If (OSDW ())
                    {
                        PCED ()
                        \_SB.PCI0.PEG1.UPSB.CRMW (0x0150, Zero, 0x02, 0x04000000, 0x04000000)
                        \_SB.PCI0.PEG1.UPSB.CRMW (0x0250, Zero, 0x02, 0x04000000, 0x04000000)
                    }
                }

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {
                    If (!OSDW ())
                    {
                        If ((\_SB.PCI0.PEG1.UPCK () == Zero))
                        {
                            \_SB.PCI0.PEG1.UTLK (One, 0x03E8)
                        }
                        Else
                        {
                        }

                        \_SB.PCI0.PEG1.TBTC (0x05)
                        \_SB.PCI0.PEG1.UTLK (Zero, 0x03E8)
                    }
                }

                OperationRegion (H548, PCI_Config, 0x0548, 0x20)
                Field (H548, DWordAcc, Lock, Preserve)
                {
                    T2PC,   32, 
                    PC2T,   32
                }

                OperationRegion (H530, PCI_Config, 0x0530, 0x0C)
                Field (H530, DWordAcc, Lock, Preserve)
                {
                    DWIX,   13, 
                    PORT,   6, 
                    SPCE,   2, 
                    CMD0,   1, 
                    CMD1,   1, 
                    CMD2,   1, 
                        ,   6, 
                    PROG,   1, 
                    TMOT,   1, 
                    WDAT,   32, 
                    RDAT,   32
                }

                Method (CIOW, 4, Serialized)
                {
                    WDAT = Arg3
                    DWIX = Arg0
                    PORT = Arg1
                    SPCE = Arg2
                    CMD0 = One
                    CMD1 = Zero
                    CMD2 = Zero
                    TMOT = Zero
                    PROG = One
                    Local1 = One
                    Local0 = 0x2710
                    While ((Zero < Local0))
                    {
                        If ((PROG == Zero))
                        {
                            Local1 = Zero
                            Break
                        }

                        Stall (0x19)
                        Local0--
                    }

                    If ((Local1 == Zero))
                    {
                        Local1 = TMOT /* \_SB_.PCI0.PEG1.UPSB.TMOT */
                    }

                    Return (Local1)
                }

                Method (CIOR, 3, Serialized)
                {
                    RDAT = Zero
                    DWIX = Arg0
                    PORT = Arg1
                    SPCE = Arg2
                    CMD0 = Zero
                    CMD1 = Zero
                    CMD2 = Zero
                    TMOT = Zero
                    PROG = One
                    Local1 = One
                    Local0 = 0x2710
                    While ((Zero < Local0))
                    {
                        If ((PROG == Zero))
                        {
                            Local1 = Zero
                            Break
                        }

                        Stall (0x19)
                        Local0--
                    }

                    If ((Local1 == Zero))
                    {
                        Local1 = TMOT /* \_SB_.PCI0.PEG1.UPSB.TMOT */
                    }

                    If ((Local1 == Zero))
                    {
                        Return (Package (0x02)
                        {
                            Zero, 
                            RDAT
                        })
                    }
                    Else
                    {
                        Return (Package (0x02)
                        {
                            One, 
                            RDAT
                        })
                    }
                }

                Method (CRMW, 5, Serialized)
                {
                    Local1 = One
                    If ((\_SB.PCI0.PEG1.PUPS != Zero))
                    {
                        If ((((GGDV (0x03050007) == One) || (GGDV (0x03050008) == One)) && 
                            (\_SB.PCI0.PEG1.UPSB.AVND != 0xFFFFFFFF)))
                        {
                            Local3 = Zero
                            While ((Local3 <= 0x04))
                            {
                                Local2 = CIOR (Arg0, Arg1, Arg2)
                                If ((DerefOf (Local2 [Zero]) == Zero))
                                {
                                    Local2 = DerefOf (Local2 [One])
                                    Local2 &= ~Arg4
                                    Local2 |= Arg3
                                    Local2 = CIOW (Arg0, Arg1, Arg2, Local2)
                                    If ((Local2 == Zero))
                                    {
                                        Local2 = CIOR (Arg0, Arg1, Arg2)
                                        If ((DerefOf (Local2 [Zero]) == Zero))
                                        {
                                            Local2 = DerefOf (Local2 [One])
                                            Local2 &= Arg4
                                            If ((Local2 == Arg3))
                                            {
                                                Local1 = Zero
                                                Break
                                            }
                                        }
                                    }
                                }

                                Local3++
                                Sleep (0x64)
                            }
                        }
                    }

                    Return (Local1)
                }

                Method (LSTX, 2, Serialized)
                {
                    If ((T2PC != 0xFFFFFFFF))
                    {
                        Local0 = Zero
                        If (((T2PC & One) && One))
                        {
                            Local0 = One
                        }

                        If ((Local0 == Zero))
                        {
                            Local1 = 0x2710
                            While ((Zero < Local1))
                            {
                                If ((T2PC == Zero))
                                {
                                    Break
                                }

                                Stall (0x19)
                                Local1--
                            }

                            If ((Zero == Local1))
                            {
                                Local0 = One
                            }
                        }

                        If ((Local0 == Zero))
                        {
                            Local1 = One
                            Local1 |= 0x14
                            Local1 |= (Arg0 << 0x08)
                            Local1 |= (Arg1 << 0x0C)
                            Local1 |= 0x00400000
                            PC2T = Local1
                        }

                        If ((Local0 == Zero))
                        {
                            Local1 = 0x2710
                            While ((Zero < Local1))
                            {
                                If ((T2PC == 0x15))
                                {
                                    Break
                                }

                                Stall (0x19)
                                Local1--
                            }

                            If ((Zero == Local1))
                            {
                                Local0 = One
                            }
                        }

                        Sleep (0x0A)
                        PC2T = Zero
                    }
                }

                Device (DSB0)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                    Field (A1E0, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   32, 
                        BMIE,   3, 
                        Offset (0x18), 
                        PRIB,   8, 
                        SECB,   8, 
                        SUBB,   8, 
                        Offset (0x1E), 
                            ,   13, 
                        IABT,   1
                    }

                    OperationRegion (A1E1, PCI_Config, 0xC0, 0x40)
                    Field (A1E1, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        Offset (0x08), 
                        Offset (0x0A), 
                            ,   5, 
                        TPEN,   1, 
                        Offset (0x0C), 
                        SSPD,   4, 
                            ,   16, 
                        LACR,   1, 
                        Offset (0x10), 
                            ,   4, 
                        LDIS,   1, 
                        LRTN,   1, 
                        Offset (0x12), 
                        CSPD,   4, 
                        CWDT,   6, 
                            ,   1, 
                        LTRN,   1, 
                            ,   1, 
                        LACT,   1, 
                        Offset (0x14), 
                        Offset (0x30), 
                        TSPD,   4
                    }

                    OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
                    Field (A1E2, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        PSTA,   2
                    }

                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                    {
                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB0.SECB */
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }

                    Name (IIP3, Zero)
                    Name (PRSR, Zero)
                    Name (PCIA, One)
                    Method (PCEU, 0, Serialized)
                    {
                        \_SB.PCI0.PEG1.UPSB.DSB0.PRSR = Zero
                        If ((\_SB.PCI0.PEG1.UPSB.DSB0.PSTA != Zero))
                        {
                            \_SB.PCI0.PEG1.UPSB.DSB0.PRSR = One
                            \_SB.PCI0.PEG1.UPSB.DSB0.PSTA = Zero
                        }

                        If ((\_SB.PCI0.PEG1.UPSB.DSB0.LDIS == One))
                        {
                            \_SB.PCI0.PEG1.UPSB.DSB0.PRSR = One
                            \_SB.PCI0.PEG1.UPSB.DSB0.LDIS = Zero
                        }
                    }

                    Method (PCDA, 0, Serialized)
                    {
                        If ((\_SB.PCI0.PEG1.UPSB.DSB0.POFF () != Zero))
                        {
                            \_SB.PCI0.PEG1.UPSB.DSB0.PCIA = Zero
                            \_SB.PCI0.PEG1.UPSB.DSB0.PSTA = 0x03
                            \_SB.PCI0.PEG1.UPSB.DSB0.LDIS = One
                            Local5 = (Timer + 0x00989680)
                            While ((Timer <= Local5))
                            {
                                If ((\_SB.PCI0.PEG1.UPSB.DSB0.LACR == One))
                                {
                                    If ((\_SB.PCI0.PEG1.UPSB.DSB0.LACT == Zero))
                                    {
                                        Break
                                    }
                                }
                                ElseIf ((\_SB.PCI0.PEG1.UPSB.DSB0.NHI0.AVND == 0xFFFFFFFF))
                                {
                                    Break
                                }

                                Sleep (0x0A)
                            }

                            \_SB.PCI0.PEG1.GNHI = Zero
                            \_SB.PCI0.PEG1.UGIO ()
                        }
                        Else
                        {
                        }

                        \_SB.PCI0.PEG1.UPSB.DSB0.IIP3 = One
                    }

                    Method (POFF, 0, Serialized)
                    {
                        Return (!\_SB.PCI0.PEG1.RTBT)
                    }

                    Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                    {
                        If (OSDW ())
                        {
                            PCEU ()
                        }
                    }

                    Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                    {
                        If (OSDW ())
                        {
                            PCDA ()
                        }
                    }

                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        If (OSDW ())
                        {
                            If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b") /* Unknown UUID */))
                            {
                                Local0 = Package (0x02)
                                    {
                                        "PCIHotplugCapable", 
                                        Zero
                                    }
                                DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                                Return (Local0)
                            }
                        }

                        Return (Zero)
                    }

                    Device (NHI0)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Name (_STR, Unicode ("Thunderbolt"))  // _STR: Description String
                        Method (PCED, 0, Serialized)
                        {
                            \_SB.PCI0.PEG1.GNHI = One
                            If ((\_SB.PCI0.PEG1.UGIO () != Zero))
                            {
                                \_SB.PCI0.PEG1.UPSB.DSB0.PRSR = One
                            }

                            Local0 = Zero
                            Local1 = Zero
                            Local3 = Zero
                            While ((Local3 == Zero))
                            {
                                Local4 = Zero
                                Local5 = (Timer + 0x00989680)
                                If ((\_SB.PCI0.PEG1.UPSB.DSB0.PRSR != Zero))
                                {
                                    Local5 = (Timer + 0x00989680)
                                    While ((Timer <= Local5))
                                    {
                                        If ((\_SB.PCI0.PEG1.UPSB.DSB0.LACR == Zero))
                                        {
                                            If ((\_SB.PCI0.PEG1.UPSB.DSB0.LTRN != One))
                                            {
                                                Break
                                            }
                                        }
                                        ElseIf (((\_SB.PCI0.PEG1.UPSB.DSB0.LTRN != One) && (\_SB.PCI0.PEG1.UPSB.DSB0.LACT == One)))
                                        {
                                            Break
                                        }

                                        Sleep (0x0A)
                                    }

                                    Sleep (0x96)
                                }

                                While ((Timer <= Local5))
                                {
                                    If ((\_SB.PCI0.PEG1.UPSB.DSB0.NHI0.AVND != 0xFFFFFFFF))
                                    {
                                        Local4 = One
                                        \_SB.PCI0.PEG1.UPSB.DSB0.PCIA = One
                                        Break
                                    }

                                    Sleep (0x0A)
                                }

                                Local3 = One
                            }

                            \_SB.PCI0.PEG1.UPSB.DSB0.PRSR = Zero
                            \_SB.PCI0.PEG1.UPSB.DSB0.IIP3 = Zero
                        }

                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                        {
                            Return (Zero)
                        }

                        OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                        Field (A1E0, ByteAcc, NoLock, Preserve)
                        {
                            AVND,   32, 
                            BMIE,   3, 
                            Offset (0x18), 
                            PRIB,   8, 
                            SECB,   8, 
                            SUBB,   8, 
                            Offset (0x1E), 
                                ,   13, 
                            IABT,   1
                        }

                        Method (RTPC, 1, Serialized)
                        {
                            If (OSDW ())
                            {
                                If ((Arg0 <= One))
                                {
                                    \_SB.PCI0.PEG1.RTBT = Arg0
                                }
                            }

                            Return (Zero)
                        }

                        Method (MUST, 1, Serialized)
                        {
                            Return (\_SB.PCI0.PEG1.UPSB.MUST (Arg0))
                        }

                        Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                        {
                            If (OSDW ())
                            {
                                PCED ()
                                \_SB.PCI0.PEG1.CTBT ()
                            }
                        }

                        Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                        {
                        }

                        Method (TRPE, 2, Serialized)
                        {
                            If (OSDW ())
                            {
                                If ((Arg0 <= One))
                                {
                                    If ((Arg0 == Zero))
                                    {
                                        \_SB.PCI0.PEG1.PUPD (Zero, 0x02)
                                        \_SB.PCI0.PEG1.PSTA = 0x03
                                        SGOV (0x03050007, Zero)
                                        SGDO (0x03050007)
                                    }
                                    Else
                                    {
                                        Local0 = Zero
                                        If (((GGOV (0x03050007) == Zero) && (GGDV (0x03050007) == Zero)))
                                        {
                                            \_SB.PCI0.PEG1.PSTA = Zero
                                            While (One)
                                            {
                                                SGDI (0x03050007)
                                                Local1 = Zero
                                                Sleep (0x1E)
                                                \_SB.PCI0.PEG1.PUPD (One, 0x02)
                                                Local2 = (Timer + 0x00989680)
                                                While ((Timer <= Local2))
                                                {
                                                    If ((\_SB.PCI0.PEG1.LACR == Zero))
                                                    {
                                                        If ((\_SB.PCI0.PEG1.LTRN != One))
                                                        {
                                                            Break
                                                        }
                                                    }
                                                    ElseIf (((\_SB.PCI0.PEG1.LTRN != One) && (\_SB.PCI0.PEG1.LACT == One)))
                                                    {
                                                        Break
                                                    }

                                                    Sleep (0x0A)
                                                }

                                                Sleep (Arg1)
                                                While ((Timer <= Local2))
                                                {
                                                    If ((\_SB.PCI0.PEG1.UPSB.AVND != 0xFFFFFFFF))
                                                    {
                                                        Local1 = One
                                                        Break
                                                    }

                                                    Sleep (0x0A)
                                                }

                                                If ((Local1 == One))
                                                {
                                                    IABT = One
                                                    Break
                                                }

                                                If ((Local0 == 0x04))
                                                {
                                                    Return (Zero)
                                                }

                                                Local0++
                                                SGOV (0x03050007, Zero)
                                                SGDO (0x03050007)
                                                Sleep (0x03E8)
                                            }

                                            If ((\_SB.PCI0.PEG1.CSPD != 0x03))
                                            {
                                                If ((\_SB.PCI0.PEG1.SSPD == 0x03))
                                                {
                                                    If ((\_SB.PCI0.PEG1.UPSB.SSPD == 0x03))
                                                    {
                                                        If ((\_SB.PCI0.PEG1.TSPD != 0x03))
                                                        {
                                                            \_SB.PCI0.PEG1.TSPD = 0x03
                                                        }

                                                        If ((\_SB.PCI0.PEG1.UPSB.TSPD != 0x03))
                                                        {
                                                            \_SB.PCI0.PEG1.UPSB.TSPD = 0x03
                                                        }

                                                        \_SB.PCI0.PEG1.LRTN = One
                                                        Local2 = (Timer + 0x00989680)
                                                        While ((Timer <= Local2))
                                                        {
                                                            If ((\_SB.PCI0.PEG1.LACR == Zero))
                                                            {
                                                                If (((\_SB.PCI0.PEG1.LTRN != One) && (\_SB.PCI0.PEG1.UPSB.AVND != 0xFFFFFFFF)))
                                                                {
                                                                    Local1 = One
                                                                    Break
                                                                }
                                                            }
                                                            ElseIf ((((\_SB.PCI0.PEG1.LTRN != One) && (\_SB.PCI0.PEG1.LACT == One)) && 
                                                                (\_SB.PCI0.PEG1.UPSB.AVND != 0xFFFFFFFF)))
                                                            {
                                                                Local1 = One
                                                                Break
                                                            }

                                                            Sleep (0x0A)
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }

                            Return (Zero)
                        }

                        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                        {
                            If (OSDW ())
                            {
                                Local0 = Package (0x03)
                                    {
                                        "power-save", 
                                        One, 
                                        Buffer (One)
                                        {
                                             0x00                                             // .
                                        }
                                    }
                                DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                                Return (Local0)
                            }

                            Return (Zero)
                        }

                        Method (SXFP, 1, Serialized)
                        {
                            If ((Arg0 == Zero))
                            {
                                If ((GGDV (0x03050008) == One))
                                {
                                    SGOV (0x03050008, Zero)
                                    SGDO (0x03050008)
                                    Sleep (0x64)
                                }

                                SGOV (0x03050007, Zero)
                                SGDO (0x03050007)
                            }
                        }

                        Name (XRTE, Zero)
                        Name (S0TO, Zero)
                        Name (S0MT, Zero)
                        Method (XRST, 1, Serialized)
                        {
                            If ((Arg0 == Zero))
                            {
                                XRTE = Zero
                                If ((SLTP == Zero))
                                {
                                    \_SB.PCI0.PEG1.PUPD (One, 0x02)
                                    SGDI (0x03050005)
                                }
                            }
                            ElseIf ((Arg0 == One))
                            {
                                XRTE = One
                                If ((SLTP == Zero))
                                {
                                    \_SB.PCI0.PEG1.PSTA = 0x03
                                    \_SB.PCI0.PEG1.PUPD (Zero, 0x02)
                                    SGOV (0x03050005, Zero)
                                    SGDO (0x03050005)
                                    Sleep (0x4B)
                                }
                            }
                        }

                        Method (JCNT, 0, Serialized)
                        {
                            Return (0x02)
                        }

                        Method (JTMS, 2, Serialized)
                        {
                            If ((Arg0 == Zero))
                            {
                                If ((Arg1 == Zero))
                                {
                                    SGOV (0x03030000, Zero)
                                    SGDO (0x03030000)
                                }
                                Else
                                {
                                    SGDI (0x03030000)
                                }
                            }

                            If ((Arg0 == One))
                            {
                                If ((Arg1 == Zero))
                                {
                                    SGOV (0x03030001, Zero)
                                    SGDO (0x03030001)
                                }
                                Else
                                {
                                    SGDI (0x03030001)
                                }
                            }
                        }

                        Method (JTCK, 1, Serialized)
                        {
                            If ((Arg0 == Zero))
                            {
                                SGOV (0x03050002, Zero)
                                SGDO (0x03050002)
                            }
                            Else
                            {
                                SGOV (0x03050002, One)
                                SGDO (0x03050002)
                            }
                        }

                        Method (JTDI, 1, Serialized)
                        {
                            If ((Arg0 == Zero))
                            {
                                SGOV (0x03050003, Zero)
                                SGDO (0x03050003)
                            }
                            Else
                            {
                                SGOV (0x03050003, One)
                                SGDO (0x03050003)
                            }
                        }

                        Method (JTDO, 0, Serialized)
                        {
                            SGDI (0x03050004)
                            Return (GGIV (0x03050004))
                        }
                    }
                }

                Device (DSB1)
                {
                    Name (_ADR, 0x00010000)  // _ADR: Address
                    Name (_SUN, One)  // _SUN: Slot User Number
                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                    Field (A1E0, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   32, 
                        BMIE,   3, 
                        Offset (0x18), 
                        PRIB,   8, 
                        SECB,   8, 
                        SUBB,   8, 
                        Offset (0x1E), 
                            ,   13, 
                        IABT,   1
                    }

                    OperationRegion (A1E1, PCI_Config, 0xC0, 0x40)
                    Field (A1E1, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        Offset (0x08), 
                        Offset (0x0A), 
                            ,   5, 
                        TPEN,   1, 
                        Offset (0x0C), 
                        SSPD,   4, 
                            ,   16, 
                        LACR,   1, 
                        Offset (0x10), 
                            ,   4, 
                        LDIS,   1, 
                        LRTN,   1, 
                        Offset (0x12), 
                        CSPD,   4, 
                        CWDT,   6, 
                            ,   1, 
                        LTRN,   1, 
                            ,   1, 
                        LACT,   1, 
                        Offset (0x14), 
                        Offset (0x30), 
                        TSPD,   4
                    }

                    OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
                    Field (A1E2, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        PSTA,   2
                    }

                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                    {
                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.SECB */
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }

                    Device (UPS0)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                        Field (ARE0, ByteAcc, NoLock, Preserve)
                        {
                            AVND,   16
                        }

                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                        {
                            If (OSDW ())
                            {
                                Return (One)
                            }

                            Return (Zero)
                        }

                        Device (DSB0)
                        {
                            Name (_ADR, Zero)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1, 
                                Offset (0x3E), 
                                    ,   6, 
                                SBRS,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB0.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (DEV0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                Method (_STA, 0, NotSerialized)  // _STA: Status
                                {
                                    Return (0x0F)
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }
                            }
                        }

                        Device (DSB3)
                        {
                            Name (_ADR, 0x00030000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB3.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (UPS0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                                Field (ARE0, ByteAcc, NoLock, Preserve)
                                {
                                    AVND,   16
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }

                                Device (DSB0)
                                {
                                    Name (_ADR, Zero)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1, 
                                        Offset (0x3E), 
                                            ,   6, 
                                        SBRS,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB3.UPS0.DSB0.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }
                                    }
                                }

                                Device (DSB3)
                                {
                                    Name (_ADR, 0x00030000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB3.UPS0.DSB3.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB4)
                                {
                                    Name (_ADR, 0x00040000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB3.UPS0.DSB4.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB5)
                                {
                                    Name (_ADR, 0x00050000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB3.UPS0.DSB5.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }

                                Device (DSB6)
                                {
                                    Name (_ADR, 0x00060000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB3.UPS0.DSB6.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }
                            }
                        }

                        Device (DSB4)
                        {
                            Name (_ADR, 0x00040000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB4.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (UPS0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                                Field (ARE0, ByteAcc, NoLock, Preserve)
                                {
                                    AVND,   16
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }

                                Device (DSB0)
                                {
                                    Name (_ADR, Zero)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1, 
                                        Offset (0x3E), 
                                            ,   6, 
                                        SBRS,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB4.UPS0.DSB0.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB3)
                                {
                                    Name (_ADR, 0x00030000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB4.UPS0.DSB3.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB4)
                                {
                                    Name (_ADR, 0x00040000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB4.UPS0.DSB4.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB5)
                                {
                                    Name (_ADR, 0x00050000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB4.UPS0.DSB5.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }

                                Device (DSB6)
                                {
                                    Name (_ADR, 0x00060000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB4.UPS0.DSB6.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }
                            }
                        }

                        Device (DSB5)
                        {
                            Name (_ADR, 0x00050000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB5.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }
                        }

                        Device (DSB6)
                        {
                            Name (_ADR, 0x00060000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB1.UPS0.DSB6.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }
                        }
                    }
                }

                Device (DSB2)
                {
                    Name (_ADR, 0x00020000)  // _ADR: Address
                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                    Field (A1E0, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   32, 
                        BMIE,   3, 
                        Offset (0x18), 
                        PRIB,   8, 
                        SECB,   8, 
                        SUBB,   8, 
                        Offset (0x1E), 
                            ,   13, 
                        IABT,   1
                    }

                    OperationRegion (A1E1, PCI_Config, 0xC0, 0x40)
                    Field (A1E1, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        Offset (0x08), 
                        Offset (0x0A), 
                            ,   5, 
                        TPEN,   1, 
                        Offset (0x0C), 
                        SSPD,   4, 
                            ,   16, 
                        LACR,   1, 
                        Offset (0x10), 
                            ,   4, 
                        LDIS,   1, 
                        LRTN,   1, 
                        Offset (0x12), 
                        CSPD,   4, 
                        CWDT,   6, 
                            ,   1, 
                        LTRN,   1, 
                            ,   1, 
                        LACT,   1, 
                        Offset (0x14), 
                        Offset (0x30), 
                        TSPD,   4
                    }

                    OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
                    Field (A1E2, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        PSTA,   2
                    }

                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                    {
                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB2.SECB */
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }

                    Name (IIP3, Zero)
                    Name (PRSR, Zero)
                    Name (PCIA, One)
                    Method (PCEU, 0, Serialized)
                    {
                        \_SB.PCI0.PEG1.UPSB.DSB2.PRSR = Zero
                        If ((\_SB.PCI0.PEG1.UPSB.DSB2.PSTA != Zero))
                        {
                            \_SB.PCI0.PEG1.UPSB.DSB2.PRSR = One
                            \_SB.PCI0.PEG1.UPSB.DSB2.PSTA = Zero
                        }

                        If ((\_SB.PCI0.PEG1.UPSB.DSB2.LDIS == One))
                        {
                            \_SB.PCI0.PEG1.UPSB.DSB2.PRSR = One
                            \_SB.PCI0.PEG1.UPSB.DSB2.LDIS = Zero
                        }
                    }

                    Method (PCDA, 0, Serialized)
                    {
                        If ((\_SB.PCI0.PEG1.UPSB.DSB2.POFF () != Zero))
                        {
                            \_SB.PCI0.PEG1.UPSB.DSB2.PCIA = Zero
                            \_SB.PCI0.PEG1.UPSB.DSB2.PSTA = 0x03
                            \_SB.PCI0.PEG1.UPSB.DSB2.LDIS = One
                            Local5 = (Timer + 0x00989680)
                            While ((Timer <= Local5))
                            {
                                If ((\_SB.PCI0.PEG1.UPSB.DSB2.LACR == One))
                                {
                                    If ((\_SB.PCI0.PEG1.UPSB.DSB2.LACT == Zero))
                                    {
                                        Break
                                    }
                                }
                                ElseIf ((\_SB.PCI0.PEG1.UPSB.DSB2.XHC2.AVND == 0xFFFFFFFF))
                                {
                                    Break
                                }

                                Sleep (0x0A)
                            }

                            \_SB.PCI0.PEG1.GXCI = Zero
                            \_SB.PCI0.PEG1.UGIO ()
                        }
                        Else
                        {
                        }

                        \_SB.PCI0.PEG1.UPSB.DSB2.IIP3 = One
                    }

                    Method (POFF, 0, Serialized)
                    {
                        Return (!\_SB.PCI0.PEG1.RUSB)
                    }

                    Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                    {
                        If (OSDW ())
                        {
                            PCEU ()
                        }
                    }

                    Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                    {
                        If (OSDW ())
                        {
                            PCDA ()
                        }
                    }

                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        If (OSDW ())
                        {
                            If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b") /* Unknown UUID */))
                            {
                                Local0 = Package (0x02)
                                    {
                                        "PCIHotplugCapable", 
                                        Zero
                                    }
                                DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                                Return (Local0)
                            }
                        }

                        Return (Zero)
                    }

                    Device (XHC2)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Name (SDPC, Zero)
                        OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                        Field (A1E0, ByteAcc, NoLock, Preserve)
                        {
                            AVND,   32, 
                            BMIE,   3, 
                            Offset (0x18), 
                            PRIB,   8, 
                            SECB,   8, 
                            SUBB,   8, 
                            Offset (0x1E), 
                                ,   13, 
                            IABT,   1
                        }

                        Method (PCED, 0, Serialized)
                        {
                            \_SB.PCI0.PEG1.GXCI = One
                            If ((\_SB.PCI0.PEG1.UGIO () != Zero))
                            {
                                \_SB.PCI0.PEG1.UPSB.DSB2.PRSR = One
                            }

                            Local0 = Zero
                            Local1 = Zero
                            Local3 = Zero
                            While ((Local3 == Zero))
                            {
                                Local4 = Zero
                                Local5 = (Timer + 0x00989680)
                                If ((\_SB.PCI0.PEG1.UPSB.DSB2.PRSR != Zero))
                                {
                                    Local5 = (Timer + 0x00989680)
                                    While ((Timer <= Local5))
                                    {
                                        If ((\_SB.PCI0.PEG1.UPSB.DSB2.LACR == Zero))
                                        {
                                            If ((\_SB.PCI0.PEG1.UPSB.DSB2.LTRN != One))
                                            {
                                                Break
                                            }
                                        }
                                        ElseIf (((\_SB.PCI0.PEG1.UPSB.DSB2.LTRN != One) && (\_SB.PCI0.PEG1.UPSB.DSB2.LACT == One)))
                                        {
                                            Break
                                        }

                                        Sleep (0x0A)
                                    }

                                    Sleep (0x96)
                                }

                                While ((Timer <= Local5))
                                {
                                    If ((\_SB.PCI0.PEG1.UPSB.DSB2.XHC2.AVND != 0xFFFFFFFF))
                                    {
                                        Local4 = One
                                        \_SB.PCI0.PEG1.UPSB.DSB2.PCIA = One
                                        Break
                                    }

                                    Sleep (0x0A)
                                }

                                Local3 = One
                            }

                            \_SB.PCI0.PEG1.UPSB.DSB2.PRSR = Zero
                            \_SB.PCI0.PEG1.UPSB.DSB2.IIP3 = Zero
                        }

                        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                        {
                            If ((U2OP == One))
                            {
                                Local0 = Package (0x04)
                                    {
                                        "USBBusNumber", 
                                        Zero, 
                                        "UsbCompanionControllerPresent", 
                                        One
                                    }
                            }
                            Else
                            {
                                Local0 = Package (0x02)
                                    {
                                        "USBBusNumber", 
                                        Zero
                                    }
                            }

                            DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                            Return (Local0)
                        }

                        Name (HS, Package (0x01)
                        {
                            "XHC1"
                        })
                        Name (FS, Package (0x01)
                        {
                            "XHC1"
                        })
                        Name (LS, Package (0x01)
                        {
                            "XHC1"
                        })
                        Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                        {
                            If (OSDW ())
                            {
                                Return (Package (0x02)
                                {
                                    0x6D, 
                                    0x03
                                })
                            }
                            Else
                            {
                                Return (Package (0x02)
                                {
                                    0x6D, 
                                    0x03
                                })
                            }
                        }

                        Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                        {
                            If (OSDW ())
                            {
                                PCED ()
                            }
                        }

                        Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                        {
                        }

                        Method (_PSW, 1, Serialized)  // _PSW: Power State Wake
                        {
                            If ((\_SB.PCI0.LPCB.EC.SWTB == One))
                            {
                                If (\_SB.PCI0.LPCB.EC.ECOK)
                                {
                                    If (OSDW ())
                                    {
                                        If (Arg0)
                                        {
                                            \_SB.PCI0.LPCB.EC.EWTB = One
                                        }
                                        Else
                                        {
                                            \_SB.PCI0.LPCB.EC.EWTB = Zero
                                            \_SB.PCI0.LPCB.EC.LWTB = Zero
                                        }
                                    }
                                }
                            }
                            Else
                            {
                            }
                        }

                        Method (RTPC, 1, Serialized)
                        {
                            If (OSDW ())
                            {
                                If ((Arg0 <= One))
                                {
                                    \_SB.PCI0.PEG1.RUSB = Arg0
                                }
                            }

                            Return (Zero)
                        }

                        Method (MODU, 0, Serialized)
                        {
                            Return (\_SB.PCI0.PEG1.UPSB.MDUV)
                        }

                        Device (RHUB)
                        {
                            Name (_ADR, Zero)  // _ADR: Address
                            Device (SSP1)
                            {
                                Name (_ADR, 0x03)  // _ADR: Address
                                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                                {
                                    0xFF, 
                                    0x09, 
                                    Zero, 
                                    Zero
                                })
                                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                                {
                                    ToPLD (
                                        PLD_Revision           = 0x1,
                                        PLD_IgnoreColor        = 0x1,
                                        PLD_Red                = 0x0,
                                        PLD_Green              = 0x0,
                                        PLD_Blue               = 0x0,
                                        PLD_Width              = 0x0,
                                        PLD_Height             = 0x0,
                                        PLD_UserVisible        = 0x1,
                                        PLD_Dock               = 0x0,
                                        PLD_Lid                = 0x0,
                                        PLD_Panel              = "UNKNOWN",
                                        PLD_VerticalPosition   = "UPPER",
                                        PLD_HorizontalPosition = "LEFT",
                                        PLD_Shape              = "UNKNOWN",
                                        PLD_GroupOrientation   = 0x0,
                                        PLD_GroupToken         = 0x0,
                                        PLD_GroupPosition      = 0x0,
                                        PLD_Bay                = 0x0,
                                        PLD_Ejectable          = 0x0,
                                        PLD_EjectRequired      = 0x0,
                                        PLD_CabinetNumber      = 0x0,
                                        PLD_CardCageNumber     = 0x0,
                                        PLD_Reference          = 0x0,
                                        PLD_Rotation           = 0x0,
                                        PLD_Order              = 0x0)

                                })
                                Name (HS, Package (0x02)
                                {
                                    "XHC1", 
                                    0x03
                                })
                                Name (FS, Package (0x02)
                                {
                                    "XHC1", 
                                    0x03
                                })
                                Name (LS, Package (0x02)
                                {
                                    "XHC1", 
                                    0x03
                                })
                                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                                {
                                    If ((U2OP == One))
                                    {
                                        Local0 = Package (0x04)
                                            {
                                                "UsbCPortNumber", 
                                                0x02, 
                                                "UsbCompanionPortPresent", 
                                                One
                                            }
                                    }
                                    Else
                                    {
                                        Local0 = Package (0x02)
                                            {
                                                "UsbCPortNumber", 
                                                0x02
                                            }
                                    }

                                    DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                                    Return (Local0)
                                }
                            }

                            Device (SSP2)
                            {
                                Name (_ADR, 0x04)  // _ADR: Address
                                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                                {
                                    0xFF, 
                                    0x09, 
                                    Zero, 
                                    Zero
                                })
                                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                                {
                                    ToPLD (
                                        PLD_Revision           = 0x1,
                                        PLD_IgnoreColor        = 0x1,
                                        PLD_Red                = 0x0,
                                        PLD_Green              = 0x0,
                                        PLD_Blue               = 0x0,
                                        PLD_Width              = 0x0,
                                        PLD_Height             = 0x0,
                                        PLD_UserVisible        = 0x1,
                                        PLD_Dock               = 0x0,
                                        PLD_Lid                = 0x0,
                                        PLD_Panel              = "UNKNOWN",
                                        PLD_VerticalPosition   = "UPPER",
                                        PLD_HorizontalPosition = "LEFT",
                                        PLD_Shape              = "UNKNOWN",
                                        PLD_GroupOrientation   = 0x0,
                                        PLD_GroupToken         = 0x0,
                                        PLD_GroupPosition      = 0x0,
                                        PLD_Bay                = 0x0,
                                        PLD_Ejectable          = 0x0,
                                        PLD_EjectRequired      = 0x0,
                                        PLD_CabinetNumber      = 0x0,
                                        PLD_CardCageNumber     = 0x0,
                                        PLD_Reference          = 0x0,
                                        PLD_Rotation           = 0x0,
                                        PLD_Order              = 0x0)

                                })
                                Name (HS, Package (0x02)
                                {
                                    "XHC1", 
                                    0x04
                                })
                                Name (FS, Package (0x02)
                                {
                                    "XHC1", 
                                    0x04
                                })
                                Name (LS, Package (0x02)
                                {
                                    "XHC1", 
                                    0x04
                                })
                                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                                {
                                    If ((U2OP == One))
                                    {
                                        Local0 = Package (0x04)
                                            {
                                                "UsbCPortNumber", 
                                                One, 
                                                "UsbCompanionPortPresent", 
                                                One
                                            }
                                    }
                                    Else
                                    {
                                        Local0 = Package (0x04)
                                            {
                                                "UsbCPortNumber", 
                                                One, 
                                                "UsbCompanionPortPresent", 
                                                One
                                            }
                                    }

                                    DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                                    Return (Local0)
                                }
                            }
                        }
                    }
                }

                Device (DSB3)
                {
                    Name (_ADR, 0x00030000)  // _ADR: Address
                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                    Field (A1E0, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   32, 
                        BMIE,   3, 
                        Offset (0x18), 
                        PRIB,   8, 
                        SECB,   8, 
                        SUBB,   8, 
                        Offset (0x1E), 
                            ,   13, 
                        IABT,   1
                    }

                    OperationRegion (A1E1, PCI_Config, 0xC0, 0x40)
                    Field (A1E1, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        Offset (0x08), 
                        Offset (0x0A), 
                            ,   5, 
                        TPEN,   1, 
                        Offset (0x0C), 
                        SSPD,   4, 
                            ,   16, 
                        LACR,   1, 
                        Offset (0x10), 
                            ,   4, 
                        LDIS,   1, 
                        LRTN,   1, 
                        Offset (0x12), 
                        CSPD,   4, 
                        CWDT,   6, 
                            ,   1, 
                        LTRN,   1, 
                            ,   1, 
                        LACT,   1, 
                        Offset (0x14), 
                        Offset (0x30), 
                        TSPD,   4
                    }

                    OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
                    Field (A1E2, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        PSTA,   2
                    }

                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                    {
                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB3.SECB */
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }

                    Device (UPS0)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                        Field (ARE0, ByteAcc, NoLock, Preserve)
                        {
                            AVND,   16
                        }

                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                        {
                            If (OSDW ())
                            {
                                Return (One)
                            }

                            Return (Zero)
                        }

                        Device (DSB0)
                        {
                            Name (_ADR, Zero)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1, 
                                Offset (0x3E), 
                                    ,   6, 
                                SBRS,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB3.UPS0.DSB0.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (DEV0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                Method (_STA, 0, NotSerialized)  // _STA: Status
                                {
                                    Return (0x0F)
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }
                            }
                        }

                        Device (DSB3)
                        {
                            Name (_ADR, 0x00030000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB3.UPS0.DSB3.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (UPS0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                                Field (ARE0, ByteAcc, NoLock, Preserve)
                                {
                                    AVND,   16
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }

                                Device (DSB0)
                                {
                                    Name (_ADR, Zero)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1, 
                                        Offset (0x3E), 
                                            ,   6, 
                                        SBRS,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB3.UPS0.DSB3.UPS0.DSB0.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }
                                    }
                                }

                                Device (DSB3)
                                {
                                    Name (_ADR, 0x00030000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB3.UPS0.DSB3.UPS0.DSB3.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB4)
                                {
                                    Name (_ADR, 0x00040000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB3.UPS0.DSB3.UPS0.DSB4.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB5)
                                {
                                    Name (_ADR, 0x00050000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB3.UPS0.DSB3.UPS0.DSB5.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }

                                Device (DSB6)
                                {
                                    Name (_ADR, 0x00060000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB3.UPS0.DSB3.UPS0.DSB6.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }
                            }
                        }

                        Device (DSB4)
                        {
                            Name (_ADR, 0x00040000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB3.UPS0.DSB4.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (UPS0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                                Field (ARE0, ByteAcc, NoLock, Preserve)
                                {
                                    AVND,   16
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }

                                Device (DSB0)
                                {
                                    Name (_ADR, Zero)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1, 
                                        Offset (0x3E), 
                                            ,   6, 
                                        SBRS,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB3.UPS0.DSB4.UPS0.DSB0.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB3)
                                {
                                    Name (_ADR, 0x00030000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB3.UPS0.DSB4.UPS0.DSB3.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB4)
                                {
                                    Name (_ADR, 0x00040000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB3.UPS0.DSB4.UPS0.DSB4.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB5)
                                {
                                    Name (_ADR, 0x00050000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB3.UPS0.DSB4.UPS0.DSB5.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }

                                Device (DSB6)
                                {
                                    Name (_ADR, 0x00060000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB3.UPS0.DSB4.UPS0.DSB6.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }
                            }
                        }

                        Device (DSB5)
                        {
                            Name (_ADR, 0x00050000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB3.UPS0.DSB5.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }
                        }

                        Device (DSB6)
                        {
                            Name (_ADR, 0x00060000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB3.UPS0.DSB6.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }
                        }
                    }
                }

                Device (DSB4)
                {
                    Name (_ADR, 0x00040000)  // _ADR: Address
                    Name (_SUN, 0x02)  // _SUN: Slot User Number
                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                    Field (A1E0, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   32, 
                        BMIE,   3, 
                        Offset (0x18), 
                        PRIB,   8, 
                        SECB,   8, 
                        SUBB,   8, 
                        Offset (0x1E), 
                            ,   13, 
                        IABT,   1
                    }

                    OperationRegion (A1E1, PCI_Config, 0xC0, 0x40)
                    Field (A1E1, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        Offset (0x08), 
                        Offset (0x0A), 
                            ,   5, 
                        TPEN,   1, 
                        Offset (0x0C), 
                        SSPD,   4, 
                            ,   16, 
                        LACR,   1, 
                        Offset (0x10), 
                            ,   4, 
                        LDIS,   1, 
                        LRTN,   1, 
                        Offset (0x12), 
                        CSPD,   4, 
                        CWDT,   6, 
                            ,   1, 
                        LTRN,   1, 
                            ,   1, 
                        LACT,   1, 
                        Offset (0x14), 
                        Offset (0x30), 
                        TSPD,   4
                    }

                    OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
                    Field (A1E2, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        PSTA,   2
                    }

                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                    {
                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.SECB */
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }

                    Device (UPS0)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                        Field (ARE0, ByteAcc, NoLock, Preserve)
                        {
                            AVND,   16
                        }

                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                        {
                            If (OSDW ())
                            {
                                Return (One)
                            }

                            Return (Zero)
                        }

                        Device (DSB0)
                        {
                            Name (_ADR, Zero)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1, 
                                Offset (0x3E), 
                                    ,   6, 
                                SBRS,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB0.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (DEV0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                Method (_STA, 0, NotSerialized)  // _STA: Status
                                {
                                    Return (0x0F)
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }
                            }
                        }

                        Device (DSB3)
                        {
                            Name (_ADR, 0x00030000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB3.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (UPS0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                                Field (ARE0, ByteAcc, NoLock, Preserve)
                                {
                                    AVND,   16
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }

                                Device (DSB0)
                                {
                                    Name (_ADR, Zero)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1, 
                                        Offset (0x3E), 
                                            ,   6, 
                                        SBRS,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB3.UPS0.DSB0.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }
                                    }
                                }

                                Device (DSB3)
                                {
                                    Name (_ADR, 0x00030000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB3.UPS0.DSB3.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB4)
                                {
                                    Name (_ADR, 0x00040000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB3.UPS0.DSB4.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB5)
                                {
                                    Name (_ADR, 0x00050000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB3.UPS0.DSB5.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }

                                Device (DSB6)
                                {
                                    Name (_ADR, 0x00060000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB3.UPS0.DSB6.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }
                            }
                        }

                        Device (DSB4)
                        {
                            Name (_ADR, 0x00040000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB4.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (UPS0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                                Field (ARE0, ByteAcc, NoLock, Preserve)
                                {
                                    AVND,   16
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }

                                Device (DSB0)
                                {
                                    Name (_ADR, Zero)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1, 
                                        Offset (0x3E), 
                                            ,   6, 
                                        SBRS,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB4.UPS0.DSB0.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB3)
                                {
                                    Name (_ADR, 0x00030000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB4.UPS0.DSB3.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB4)
                                {
                                    Name (_ADR, 0x00040000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB4.UPS0.DSB4.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB5)
                                {
                                    Name (_ADR, 0x00050000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB4.UPS0.DSB5.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }

                                Device (DSB6)
                                {
                                    Name (_ADR, 0x00060000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB4.UPS0.DSB6.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }
                            }
                        }

                        Device (DSB5)
                        {
                            Name (_ADR, 0x00050000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB5.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }
                        }

                        Device (DSB6)
                        {
                            Name (_ADR, 0x00060000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB4.UPS0.DSB6.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }
                        }
                    }
                }

                Device (DSB5)
                {
                    Name (_ADR, 0x00050000)  // _ADR: Address
                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                    Field (A1E0, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   32, 
                        BMIE,   3, 
                        Offset (0x18), 
                        PRIB,   8, 
                        SECB,   8, 
                        SUBB,   8, 
                        Offset (0x1E), 
                            ,   13, 
                        IABT,   1
                    }

                    OperationRegion (A1E1, PCI_Config, 0xC0, 0x40)
                    Field (A1E1, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        Offset (0x08), 
                        Offset (0x0A), 
                            ,   5, 
                        TPEN,   1, 
                        Offset (0x0C), 
                        SSPD,   4, 
                            ,   16, 
                        LACR,   1, 
                        Offset (0x10), 
                            ,   4, 
                        LDIS,   1, 
                        LRTN,   1, 
                        Offset (0x12), 
                        CSPD,   4, 
                        CWDT,   6, 
                            ,   1, 
                        LTRN,   1, 
                            ,   1, 
                        LACT,   1, 
                        Offset (0x14), 
                        Offset (0x30), 
                        TSPD,   4
                    }

                    OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
                    Field (A1E2, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        PSTA,   2
                    }

                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                    {
                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB5.SECB */
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }

                    Device (UPS0)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                        Field (ARE0, ByteAcc, NoLock, Preserve)
                        {
                            AVND,   16
                        }

                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                        {
                            If (OSDW ())
                            {
                                Return (One)
                            }

                            Return (Zero)
                        }

                        Device (DSB0)
                        {
                            Name (_ADR, Zero)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1, 
                                Offset (0x3E), 
                                    ,   6, 
                                SBRS,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB5.UPS0.DSB0.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (DEV0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                Method (_STA, 0, NotSerialized)  // _STA: Status
                                {
                                    Return (0x0F)
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }
                            }
                        }

                        Device (DSB3)
                        {
                            Name (_ADR, 0x00030000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB5.UPS0.DSB3.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (UPS0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                                Field (ARE0, ByteAcc, NoLock, Preserve)
                                {
                                    AVND,   16
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }

                                Device (DSB0)
                                {
                                    Name (_ADR, Zero)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1, 
                                        Offset (0x3E), 
                                            ,   6, 
                                        SBRS,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB5.UPS0.DSB3.UPS0.DSB0.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }
                                    }
                                }

                                Device (DSB3)
                                {
                                    Name (_ADR, 0x00030000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB5.UPS0.DSB3.UPS0.DSB3.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB4)
                                {
                                    Name (_ADR, 0x00040000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB5.UPS0.DSB3.UPS0.DSB4.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB5)
                                {
                                    Name (_ADR, 0x00050000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB5.UPS0.DSB3.UPS0.DSB5.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }

                                Device (DSB6)
                                {
                                    Name (_ADR, 0x00060000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB5.UPS0.DSB3.UPS0.DSB6.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }
                            }
                        }

                        Device (DSB4)
                        {
                            Name (_ADR, 0x00040000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB5.UPS0.DSB4.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (UPS0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                                Field (ARE0, ByteAcc, NoLock, Preserve)
                                {
                                    AVND,   16
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }

                                Device (DSB0)
                                {
                                    Name (_ADR, Zero)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1, 
                                        Offset (0x3E), 
                                            ,   6, 
                                        SBRS,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB5.UPS0.DSB4.UPS0.DSB0.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB3)
                                {
                                    Name (_ADR, 0x00030000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB5.UPS0.DSB4.UPS0.DSB3.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB4)
                                {
                                    Name (_ADR, 0x00040000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB5.UPS0.DSB4.UPS0.DSB4.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB5)
                                {
                                    Name (_ADR, 0x00050000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB5.UPS0.DSB4.UPS0.DSB5.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }

                                Device (DSB6)
                                {
                                    Name (_ADR, 0x00060000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB5.UPS0.DSB4.UPS0.DSB6.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }
                            }
                        }

                        Device (DSB5)
                        {
                            Name (_ADR, 0x00050000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB5.UPS0.DSB5.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }
                        }

                        Device (DSB6)
                        {
                            Name (_ADR, 0x00060000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB5.UPS0.DSB6.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }
                        }
                    }
                }

                Device (DSB6)
                {
                    Name (_ADR, 0x00060000)  // _ADR: Address
                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                    Field (A1E0, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   32, 
                        BMIE,   3, 
                        Offset (0x18), 
                        PRIB,   8, 
                        SECB,   8, 
                        SUBB,   8, 
                        Offset (0x1E), 
                            ,   13, 
                        IABT,   1
                    }

                    OperationRegion (A1E1, PCI_Config, 0xC0, 0x40)
                    Field (A1E1, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        Offset (0x08), 
                        Offset (0x0A), 
                            ,   5, 
                        TPEN,   1, 
                        Offset (0x0C), 
                        SSPD,   4, 
                            ,   16, 
                        LACR,   1, 
                        Offset (0x10), 
                            ,   4, 
                        LDIS,   1, 
                        LRTN,   1, 
                        Offset (0x12), 
                        CSPD,   4, 
                        CWDT,   6, 
                            ,   1, 
                        LTRN,   1, 
                            ,   1, 
                        LACT,   1, 
                        Offset (0x14), 
                        Offset (0x30), 
                        TSPD,   4
                    }

                    OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
                    Field (A1E2, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        PSTA,   2
                    }

                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                    {
                        Return (SECB) /* \_SB_.PCI0.PEG1.UPSB.DSB6.SECB */
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If (OSDW ())
                    {
                        If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b") /* Unknown UUID */))
                        {
                            Local0 = Package (0x02)
                                {
                                    "PCI-Thunderbolt", 
                                    One
                                }
                            DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                            Return (Local0)
                        }
                    }

                    Return (Zero)
                }
            }
        }

        Scope (\_SB.PCI0.PEG2)
        {
            Scope (\_GPE)
            {
                Method (_E4C, 0, NotSerialized)  // _Exx: Edge-Triggered GPE, xx=0x00-0xFF
                {
                    If (!OSDW ())
                    {
                        \_SB.PCI0.PEG2.POC0 = One
                        If ((\_SB.PCI0.PEG2.POCW == One))
                        {
                            Return (Zero)
                        }

                        Local0 = 0x01F4
                        While (Local0)
                        {
                            If ((\_SB.PCI0.PEG2.UPVD != 0xFFFFFFFF))
                            {
                                Break
                            }

                            Local0--
                            Sleep (One)
                        }

                        \_SB.PCI0.PEG2.CMPE ()
                    }
                    Else
                    {
                        \_SB.PCI0.PEG2.UPSB.AMPE ()
                    }
                }
            }

            Name (EICM, Zero)
            Name (R018, Zero)
            Name (R019, Zero)
            Name (R01A, Zero)
            Name (R01C, Zero)
            Name (R020, Zero)
            Name (R024, Zero)
            Name (R028, Zero)
            Name (R02C, Zero)
            Name (R118, Zero)
            Name (R119, Zero)
            Name (R11A, Zero)
            Name (R11C, Zero)
            Name (R120, Zero)
            Name (R124, Zero)
            Name (R128, Zero)
            Name (R12C, Zero)
            Name (R218, Zero)
            Name (R219, Zero)
            Name (R21A, Zero)
            Name (R21C, Zero)
            Name (R220, Zero)
            Name (R224, Zero)
            Name (R228, Zero)
            Name (R22C, Zero)
            Name (R318, Zero)
            Name (R319, Zero)
            Name (R31A, Zero)
            Name (R31C, Zero)
            Name (R320, Zero)
            Name (R324, Zero)
            Name (R328, Zero)
            Name (R32C, Zero)
            Name (R418, Zero)
            Name (R419, Zero)
            Name (R41A, Zero)
            Name (R41C, Zero)
            Name (R420, Zero)
            Name (R424, Zero)
            Name (R428, Zero)
            Name (R42C, Zero)
            Name (RVES, Zero)
            Name (R518, Zero)
            Name (R519, Zero)
            Name (R51A, Zero)
            Name (R51C, Zero)
            Name (R520, Zero)
            Name (R524, Zero)
            Name (R528, Zero)
            Name (R52C, Zero)
            Name (R618, Zero)
            Name (R619, Zero)
            Name (R61A, Zero)
            Name (R61C, Zero)
            Name (R620, Zero)
            Name (R624, Zero)
            Name (R628, Zero)
            Name (R62C, Zero)
            Name (RH10, Zero)
            Name (RH14, Zero)
            Name (POC0, Zero)
            Name (POCW, Zero)
            Name (GO2S, Zero)
            OperationRegion (RSTR, SystemMemory, NHI2, 0x0100)
            Field (RSTR, DWordAcc, NoLock, Preserve)
            {
                CIOR,   32, 
                Offset (0xB8), 
                ISTA,   32, 
                Offset (0xF0), 
                ICME,   32
            }

            OperationRegion (T2PM, SystemMemory, T2P2, 0x08)
            Field (T2PM, DWordAcc, NoLock, Preserve)
            {
                T2PR,   32, 
                P2TR,   32
            }

            OperationRegion (RPSM, SystemMemory, 0xE000A000, 0xC0)
            Field (RPSM, DWordAcc, NoLock, Preserve)
            {
                RPVD,   32, 
                RPR4,   8, 
                Offset (0x18), 
                R_18,   8, 
                R_19,   8, 
                R_1A,   8, 
                Offset (0x1C), 
                R_1C,   16, 
                Offset (0x20), 
                R_20,   32, 
                R_24,   32, 
                R_28,   32, 
                R_2C,   32, 
                Offset (0xA0), 
                Offset (0xB0), 
                    ,   5, 
                RPTL,   1, 
                    ,   21, 
                RPLT,   1, 
                Offset (0xB4)
            }

            OperationRegion (UPSM, SystemMemory, TUP2, 0x0548)
            Field (UPSM, DWordAcc, NoLock, Preserve)
            {
                UPVD,   32, 
                UP04,   8, 
                Offset (0x08), 
                CLRD,   32, 
                Offset (0x18), 
                UP18,   8, 
                UP19,   8, 
                UP1A,   8, 
                Offset (0x1C), 
                UP1C,   16, 
                Offset (0x20), 
                UP20,   32, 
                UP24,   32, 
                UP28,   32, 
                UP2C,   32, 
                Offset (0xD2), 
                    ,   11, 
                UPLT,   1, 
                Offset (0xD4), 
                Offset (0x544), 
                UPMB,   1, 
                Offset (0x548)
            }

            OperationRegion (DNSM, SystemMemory, TDB2, 0xD4)
            Field (DNSM, DWordAcc, NoLock, Preserve)
            {
                DPVD,   32, 
                DP04,   8, 
                Offset (0x18), 
                DP18,   8, 
                DP19,   8, 
                DP1A,   8, 
                Offset (0x1C), 
                DP1C,   16, 
                Offset (0x20), 
                DP20,   32, 
                DP24,   32, 
                DP28,   32, 
                DP2C,   32, 
                Offset (0xD2), 
                    ,   11, 
                DPLT,   1, 
                Offset (0xD4)
            }

            OperationRegion (DS3M, SystemMemory, TD12, 0x40)
            Field (DS3M, DWordAcc, NoLock, Preserve)
            {
                D3VD,   32, 
                D304,   8, 
                Offset (0x18), 
                D318,   8, 
                D319,   8, 
                D31A,   8, 
                Offset (0x1C), 
                D31C,   16, 
                Offset (0x20), 
                D320,   32, 
                D324,   32, 
                D328,   32, 
                D32C,   32
            }

            OperationRegion (DS4M, SystemMemory, TD22, 0x0568)
            Field (DS4M, DWordAcc, NoLock, Preserve)
            {
                D4VD,   32, 
                D404,   8, 
                Offset (0x18), 
                D418,   8, 
                D419,   8, 
                D41A,   8, 
                Offset (0x1C), 
                D41C,   16, 
                Offset (0x20), 
                D420,   32, 
                D424,   32, 
                D428,   32, 
                D42C,   32, 
                Offset (0x564), 
                DVES,   32
            }

            OperationRegion (DS5M, SystemMemory, TD42, 0x40)
            Field (DS5M, DWordAcc, NoLock, Preserve)
            {
                D5VD,   32, 
                D504,   8, 
                Offset (0x18), 
                D518,   8, 
                D519,   8, 
                D51A,   8, 
                Offset (0x1C), 
                D51C,   16, 
                Offset (0x20), 
                D520,   32, 
                D524,   32, 
                D528,   32, 
                D52C,   32
            }

            OperationRegion (NHIM, SystemMemory, TNH2, 0x40)
            Field (NHIM, DWordAcc, NoLock, Preserve)
            {
                NH00,   32, 
                NH04,   8, 
                Offset (0x10), 
                NH10,   32, 
                NH14,   32
            }

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                If (!OSDW ())
                {
                    TBG2 = One
                    R018 = R_18 /* \_SB_.PCI0.PEG2.R_18 */
                    R019 = R_19 /* \_SB_.PCI0.PEG2.R_19 */
                    R01A = R_1A /* \_SB_.PCI0.PEG2.R_1A */
                    R01C = R_1C /* \_SB_.PCI0.PEG2.R_1C */
                    R020 = R_20 /* \_SB_.PCI0.PEG2.R_20 */
                    R024 = R_24 /* \_SB_.PCI0.PEG2.R_24 */
                    R028 = R_28 /* \_SB_.PCI0.PEG2.R_28 */
                    R02C = R_2C /* \_SB_.PCI0.PEG2.R_2C */
                    R118 = UP18 /* \_SB_.PCI0.PEG2.UP18 */
                    R119 = UP19 /* \_SB_.PCI0.PEG2.UP19 */
                    R11A = UP1A /* \_SB_.PCI0.PEG2.UP1A */
                    R11C = UP1C /* \_SB_.PCI0.PEG2.UP1C */
                    R120 = UP20 /* \_SB_.PCI0.PEG2.UP20 */
                    R124 = UP24 /* \_SB_.PCI0.PEG2.UP24 */
                    R128 = UP28 /* \_SB_.PCI0.PEG2.UP28 */
                    R12C = UP2C /* \_SB_.PCI0.PEG2.UP2C */
                    R218 = DP18 /* \_SB_.PCI0.PEG2.DP18 */
                    R219 = DP19 /* \_SB_.PCI0.PEG2.DP19 */
                    R21A = DP1A /* \_SB_.PCI0.PEG2.DP1A */
                    R21C = DP1C /* \_SB_.PCI0.PEG2.DP1C */
                    R220 = DP20 /* \_SB_.PCI0.PEG2.DP20 */
                    R224 = DP24 /* \_SB_.PCI0.PEG2.DP24 */
                    R228 = DP28 /* \_SB_.PCI0.PEG2.DP28 */
                    R22C = DP2C /* \_SB_.PCI0.PEG2.DP2C */
                    R318 = D318 /* \_SB_.PCI0.PEG2.D318 */
                    R319 = D319 /* \_SB_.PCI0.PEG2.D319 */
                    R31A = D31A /* \_SB_.PCI0.PEG2.D31A */
                    R31C = D31C /* \_SB_.PCI0.PEG2.D31C */
                    R320 = D320 /* \_SB_.PCI0.PEG2.D320 */
                    R324 = D324 /* \_SB_.PCI0.PEG2.D324 */
                    R328 = D328 /* \_SB_.PCI0.PEG2.D328 */
                    R32C = D32C /* \_SB_.PCI0.PEG2.D32C */
                    R418 = D418 /* \_SB_.PCI0.PEG2.D418 */
                    R419 = D419 /* \_SB_.PCI0.PEG2.D419 */
                    R41A = D41A /* \_SB_.PCI0.PEG2.D41A */
                    R41C = D41C /* \_SB_.PCI0.PEG2.D41C */
                    R420 = D420 /* \_SB_.PCI0.PEG2.D420 */
                    R424 = D424 /* \_SB_.PCI0.PEG2.D424 */
                    R428 = D428 /* \_SB_.PCI0.PEG2.D428 */
                    R42C = D42C /* \_SB_.PCI0.PEG2.D42C */
                    RVES = DVES /* \_SB_.PCI0.PEG2.DVES */
                    R518 = D518 /* \_SB_.PCI0.PEG2.D518 */
                    R519 = D519 /* \_SB_.PCI0.PEG2.D519 */
                    R51A = D51A /* \_SB_.PCI0.PEG2.D51A */
                    R51C = D51C /* \_SB_.PCI0.PEG2.D51C */
                    R520 = D520 /* \_SB_.PCI0.PEG2.D520 */
                    R524 = D524 /* \_SB_.PCI0.PEG2.D524 */
                    R528 = D528 /* \_SB_.PCI0.PEG2.D528 */
                    R52C = D52C /* \_SB_.PCI0.PEG2.D52C */
                    RH10 = NH10 /* \_SB_.PCI0.PEG2.NH10 */
                    RH14 = NH14 /* \_SB_.PCI0.PEG2.NH14 */
                    Sleep (One)
                    ICMB (Zero)
                }
            }

            Method (DTFP, 0, NotSerialized)
            {
                \_SB.SGOV (0x03050009, Zero)
                \_SB.SGDO (0x03050009)
                \_SB.SGOV (0x0305000A, Zero)
                \_SB.SGDO (0x0305000A)
            }

            Method (ICMB, 1, NotSerialized)
            {
                If ((BICM == One))
                {
                    If ((ISWI != One))
                    {
                        If ((Arg0 >= 0x03))
                        {
                            \_SB.PCI0.PEG2.POCW = Zero
                            GO2S = Zero
                            If ((UPVD != 0xFFFFFFFF))
                            {
                                SGDI (0x03050009)
                                Local0 = 0x05
                                While (Local0)
                                {
                                    \_SB.PCI0.PEG2.POC0 = Zero
                                    Local1 = ICMS ()
                                    If (Local1)
                                    {
                                        Break
                                    }
                                    Else
                                    {
                                        Local0--
                                        Local2 = 0x01F4
                                        While (Local2)
                                        {
                                            Local2--
                                            If ((One == \_SB.PCI0.PEG2.POC0))
                                            {
                                                Break
                                            }

                                            Sleep (One)
                                        }
                                    }
                                }

                                If (Local1)
                                {
                                    SXEX ()
                                }
                            }
                        }

                        \_SB.SGOV (0x03050009, Zero)
                        \_SB.SGDO (0x03050009)
                        \_SB.SGOV (0x0305000A, Zero)
                        \_SB.SGDO (0x0305000A)
                    }
                }
            }

            Method (ICMS, 0, NotSerialized)
            {
                If ((BICM == One))
                {
                    If ((ISWI != One))
                    {
                        If ((\_SB.PCI0.PEG2.ICME != 0x800001A6))
                        {
                            If (\_SB.PCI0.PEG2.CNHI (One))
                            {
                                If ((\_SB.PCI0.PEG2.ICME != 0xFFFFFFFF))
                                {
                                    \_SB.PCI0.PEG2.WTLT ()
                                    If (!Local0 = (\_SB.PCI0.PEG2.ICME & 0x80000000))
                                    {
                                        \_SB.PCI0.PEG2.ICME |= 0x06
                                        Local0 = 0x03E8
                                        While (((\_SB.PCI0.PEG2.ICME & 0x80000000) == Zero))
                                        {
                                            Local0--
                                            If ((Local0 == Zero))
                                            {
                                                Break
                                            }

                                            Sleep (One)
                                        }

                                        Sleep (0x03E8)
                                        Return (One)
                                    }
                                    Else
                                    {
                                        Return (One)
                                    }
                                }
                                Else
                                {
                                    Return (Zero)
                                }
                            }
                            Else
                            {
                                Return (Zero)
                            }
                        }
                        Else
                        {
                            Return (One)
                        }
                    }
                }

                Return (Zero)
            }

            Method (SXEX, 0, Serialized)
            {
                Local1 = 0xC8
                P2TR = 0x09
                While ((Local1 > Zero))
                {
                    Local1 = (Local1 - One)
                    Local2 = T2PR /* \_SB_.PCI0.PEG2.T2PR */
                    If ((Local2 == 0xFFFFFFFF))
                    {
                        Return (Zero)
                    }

                    If ((Local2 & One))
                    {
                        Break
                    }

                    Sleep (0x05)
                }

                P2TR = Zero
                Local1 = 0x01F4
                While ((Local1 > Zero))
                {
                    Local1 = (Local1 - One)
                    Local2 = T2PR /* \_SB_.PCI0.PEG2.T2PR */
                    If ((Local2 == 0xFFFFFFFF))
                    {
                        Return (Zero)
                    }

                    If ((UPVD != 0xFFFFFFFF))
                    {
                        Break
                    }

                    Sleep (0x0A)
                }
            }

            Method (TBTC, 1, Serialized)
            {
                GO2S = One
                \_SB.PCI0.PEG2.POCW = One
                P2TR = Arg0
                Local0 = 0x64
                Local1 = T2PR /* \_SB_.PCI0.PEG2.T2PR */
                While (((Local1 & One) == Zero))
                {
                    If ((Local1 == 0xFFFFFFFF))
                    {
                        Return (Zero)
                    }

                    Local0--
                    If ((Local0 == Zero))
                    {
                        Break
                    }

                    Local1 = T2PR /* \_SB_.PCI0.PEG2.T2PR */
                    Sleep (0x32)
                }

                P2TR = Zero
            }

            Method (CMPE, 0, Serialized)
            {
                Notify (\_SB.PCI0.PEG2, Zero) // Bus Check
            }

            Method (CNHI, 1, Serialized)
            {
                Local0 = 0x0A
                While (Local0)
                {
                    R_18 = R018 /* \_SB_.PCI0.PEG2.R018 */
                    R_19 = R019 /* \_SB_.PCI0.PEG2.R019 */
                    R_1A = R01A /* \_SB_.PCI0.PEG2.R01A */
                    R_1C = R01C /* \_SB_.PCI0.PEG2.R01C */
                    R_20 = R020 /* \_SB_.PCI0.PEG2.R020 */
                    R_24 = R024 /* \_SB_.PCI0.PEG2.R024 */
                    R_28 = R028 /* \_SB_.PCI0.PEG2.R028 */
                    R_2C = R02C /* \_SB_.PCI0.PEG2.R02C */
                    RPR4 = 0x07
                    If ((R020 == R_20))
                    {
                        Break
                    }

                    Sleep (One)
                    Local0--
                }

                If ((R020 != R_20))
                {
                    Return (Zero)
                }

                If (!Arg0)
                {
                    Return (One)
                }

                Local0 = 0x0A
                While (Local0)
                {
                    UP18 = R118 /* \_SB_.PCI0.PEG2.R118 */
                    UP19 = R119 /* \_SB_.PCI0.PEG2.R119 */
                    UP1A = R11A /* \_SB_.PCI0.PEG2.R11A */
                    UP1C = R11C /* \_SB_.PCI0.PEG2.R11C */
                    UP20 = R120 /* \_SB_.PCI0.PEG2.R120 */
                    UP24 = R124 /* \_SB_.PCI0.PEG2.R124 */
                    UP28 = R128 /* \_SB_.PCI0.PEG2.R128 */
                    UP2C = R12C /* \_SB_.PCI0.PEG2.R12C */
                    UP04 = 0x07
                    If ((R119 == UP19))
                    {
                        Break
                    }

                    Sleep (One)
                    Local0--
                }

                If ((R119 != UP19))
                {
                    Return (Zero)
                }

                If ((WTLT () == One)) {}
                Else
                {
                    Return (Zero)
                }

                Local0 = 0x0A
                While (Local0)
                {
                    DP18 = R218 /* \_SB_.PCI0.PEG2.R218 */
                    DP19 = R219 /* \_SB_.PCI0.PEG2.R219 */
                    DP1A = R21A /* \_SB_.PCI0.PEG2.R21A */
                    DP1C = R21C /* \_SB_.PCI0.PEG2.R21C */
                    DP20 = R220 /* \_SB_.PCI0.PEG2.R220 */
                    DP24 = R224 /* \_SB_.PCI0.PEG2.R224 */
                    DP28 = R228 /* \_SB_.PCI0.PEG2.R228 */
                    DP2C = R22C /* \_SB_.PCI0.PEG2.R22C */
                    DP04 = 0x07
                    D318 = R318 /* \_SB_.PCI0.PEG2.R318 */
                    D319 = R319 /* \_SB_.PCI0.PEG2.R319 */
                    D31A = R31A /* \_SB_.PCI0.PEG2.R31A */
                    D31C = R31C /* \_SB_.PCI0.PEG2.R31C */
                    D320 = R320 /* \_SB_.PCI0.PEG2.R320 */
                    D324 = R324 /* \_SB_.PCI0.PEG2.R324 */
                    D328 = R328 /* \_SB_.PCI0.PEG2.R328 */
                    D32C = R32C /* \_SB_.PCI0.PEG2.R32C */
                    D304 = 0x07
                    D418 = R418 /* \_SB_.PCI0.PEG2.R418 */
                    D419 = R419 /* \_SB_.PCI0.PEG2.R419 */
                    D41A = R41A /* \_SB_.PCI0.PEG2.R41A */
                    D41C = R41C /* \_SB_.PCI0.PEG2.R41C */
                    D420 = R420 /* \_SB_.PCI0.PEG2.R420 */
                    D424 = R424 /* \_SB_.PCI0.PEG2.R424 */
                    D428 = R428 /* \_SB_.PCI0.PEG2.R428 */
                    D42C = R42C /* \_SB_.PCI0.PEG2.R42C */
                    DVES = RVES /* \_SB_.PCI0.PEG2.RVES */
                    D404 = 0x07
                    D518 = R518 /* \_SB_.PCI0.PEG2.R518 */
                    D519 = R519 /* \_SB_.PCI0.PEG2.R519 */
                    D51A = R51A /* \_SB_.PCI0.PEG2.R51A */
                    D51C = R51C /* \_SB_.PCI0.PEG2.R51C */
                    D520 = R520 /* \_SB_.PCI0.PEG2.R520 */
                    D524 = R524 /* \_SB_.PCI0.PEG2.R524 */
                    D528 = R528 /* \_SB_.PCI0.PEG2.R528 */
                    D52C = R52C /* \_SB_.PCI0.PEG2.R52C */
                    D504 = 0x07
                    If ((R219 == DP19))
                    {
                        Break
                    }

                    Sleep (One)
                    Local0--
                }

                If ((R219 != DP19))
                {
                    Return (Zero)
                }

                If ((WTDL () == One)) {}
                Else
                {
                    Return (Zero)
                }

                Local0 = 0x0A
                While (Local0)
                {
                    NH10 = RH10 /* \_SB_.PCI0.PEG2.RH10 */
                    NH14 = RH14 /* \_SB_.PCI0.PEG2.RH14 */
                    NH04 = 0x07
                    If ((RH10 == NH10))
                    {
                        Break
                    }
                    Else
                    {
                    }

                    Sleep (One)
                    Local0--
                }

                If ((RH10 != NH10))
                {
                    Return (Zero)
                }

                Return (One)
            }

            Method (UPCK, 0, Serialized)
            {
                If ((((UPVD == 0x156D8086) || (UPVD == 0x156B8086)) || (UPVD == 0x156A8086)))
                {
                    Return (One)
                }

                If ((UPVD == 0x15788086))
                {
                    Return (One)
                }
                ElseIf ((UPVD == 0x15EA8086))
                {
                    Return (One)
                }
                Else
                {
                    Return (Zero)
                }
            }

            Method (ULTC, 0, Serialized)
            {
                If ((RPLT == Zero))
                {
                    If ((UPLT == Zero))
                    {
                        Return (One)
                    }
                }

                Return (Zero)
            }

            Method (WTLT, 0, Serialized)
            {
                Local0 = 0x07D0
                Local1 = Zero
                While (Local0)
                {
                    If ((RPR4 == 0x07))
                    {
                        If (ULTC ())
                        {
                            If (UPCK ())
                            {
                                Local1 = One
                                Break
                            }
                        }
                    }

                    Sleep (One)
                    Local0--
                }

                Return (Local1)
            }

            Method (DLTC, 0, Serialized)
            {
                If ((RPLT == Zero))
                {
                    If ((UPLT == Zero))
                    {
                        If ((DPLT == Zero))
                        {
                            Return (One)
                        }
                    }
                }

                Return (Zero)
            }

            Method (WTDL, 0, Serialized)
            {
                Local0 = 0x07D0
                Local1 = Zero
                While (Local0)
                {
                    If ((RPR4 == 0x07))
                    {
                        If (DLTC ())
                        {
                            If (UPCK ())
                            {
                                Local1 = One
                                Break
                            }
                        }
                    }

                    Sleep (One)
                    Local0--
                }

                Return (Local1)
            }

            OperationRegion (OPG0, SystemMemory, 0xE000A000, 0x1000)
            Field (OPG0, ByteAcc, NoLock, Preserve)
            {
                P0VI,   16, 
                P0DI,   16, 
                Offset (0x248), 
                    ,   7, 
                Q0L2,   1, 
                Q0L0,   1, 
                Offset (0x91C), 
                    ,   31, 
                BND0,   1, 
                Offset (0x93C), 
                    ,   31, 
                BND1,   1, 
                Offset (0xC20), 
                    ,   4, 
                RC20,   2, 
                Offset (0xC38), 
                    ,   3, 
                RC38,   1
            }

            Name (PUPS, One)
            Method (PUPD, 2, Serialized)
            {
                If ((Arg0 == Zero))
                {
                    If ((PUPS != Zero))
                    {
                        Q0L2 = One
                        Local0 = (Timer + 0x00989680)
                        While ((Timer <= Local0))
                        {
                            If ((Q0L2 == Zero))
                            {
                                RC20 = 0x03
                                RC38 = One
                                BND0 = One
                                BND1 = One
                                Break
                            }
                        }

                        PUPS = Zero
                    }
                }
                ElseIf ((PUPS == Zero))
                {
                    RC20 = Zero
                    RC38 = Zero
                    BND0 = Zero
                    BND1 = Zero
                    Q0L0 = One
                    Local1 = (Timer + 0x000F4240)
                    While ((Timer <= Local1))
                    {
                        If ((Q0L0 == Zero))
                        {
                            Break
                        }
                    }

                    PUPS = One
                }
            }

            OperationRegion (H224, PCI_Config, 0x0224, 0x04)
            Field (H224, DWordAcc, Lock, Preserve)
            {
                LWDT,   4, 
                Offset (0x04)
            }

            OperationRegion (HC74, PCI_Config, 0x0C74, 0x04)
            Field (HC74, DWordAcc, Lock, Preserve)
            {
                LTSM,   4, 
                Offset (0x04)
            }

            Name (IIP3, Zero)
            Name (PRSR, Zero)
            Name (PCIA, One)
            Method (PCEU, 0, Serialized)
            {
                \_SB.PCI0.PEG2.PRSR = Zero
                If ((\_SB.PCI0.PEG2.PSTA != Zero))
                {
                    \_SB.PCI0.PEG2.PRSR = One
                    \_SB.PCI0.PEG2.PSTA = Zero
                }

                If ((\_SB.PCI0.PEG2.UPSB.DSB0.NHI0.XRTE != Zero))
                {
                    \_SB.PCI0.PEG2.PRSR = One
                    \_SB.PCI0.PEG2.UPSB.DSB0.NHI0.XRST (Zero)
                }
            }

            Method (PCDA, 0, Serialized)
            {
                If ((\_SB.PCI0.PEG2.POFF () != Zero))
                {
                    \_SB.PCI0.PEG2.PCIA = Zero
                    \_SB.PCI0.PEG2.PSTA = 0x03
                    \_SB.PCI0.PEG2.TSPD = One
                    \_SB.PCI0.PEG2.UPSB.TSPD = One
                    \_SB.PCI0.PEG2.LRTN = One
                    Local2 = (Timer + 0x00989680)
                    While ((Timer <= Local2))
                    {
                        If ((\_SB.PCI0.PEG2.LACR == Zero))
                        {
                            If ((\_SB.PCI0.PEG2.LTRN != One))
                            {
                                Break
                            }
                        }
                        ElseIf (((\_SB.PCI0.PEG2.LTRN != One) && (\_SB.PCI0.PEG2.LACT == One)))
                        {
                            Break
                        }

                        Sleep (0x0A)
                    }

                    While ((Timer <= Local2))
                    {
                        If ((\_SB.PCI0.PEG2.UPSB.AVND != 0xFFFFFFFF))
                        {
                            Break
                        }

                        Sleep (0x0A)
                    }

                    \_SB.PCI0.PEG2.PUPD (Zero, 0x02)
                    SGOV (0x03050009, Zero)
                    SGDO (0x03050009)
                    SGOV (0x0305000A, Zero)
                    SGDO (0x0305000A)
                    Sleep (0x0A)
                    \_SB.PCI0.PEG2.GPCI = Zero
                    \_SB.PCI0.PEG2.UGIO ()
                }
                Else
                {
                }

                \_SB.PCI0.PEG2.IIP3 = One
            }

            Method (POFF, 0, Serialized)
            {
                Return ((!\_SB.PCI0.PEG2.RTBT && !\_SB.PCI0.PEG2.RUSB))
            }

            Name (GPCI, One)
            Name (GNHI, One)
            Name (GXCI, One)
            Name (RTBT, One)
            Name (RUSB, One)
            Name (CTPD, Zero)
            Method (TBPE, 1, Serialized)
            {
            }

            Method (TBPS, 0, Serialized)
            {
            }

            Method (CTBT, 0, Serialized)
            {
                If ((\_SB.PCI0.PEG2.PUPS != Zero))
                {
                    If (((GGDV (0x03050009) == One) && (\_SB.PCI0.PEG2.UPSB.AVND != 0xFFFFFFFF)))
                    {
                        Local2 = \_SB.PCI0.PEG2.UPSB.CRMW (0x3C, Zero, 0x02, 0x04000000, 0x04000000)
                        If ((Local2 == Zero))
                        {
                            \_SB.PCI0.PEG2.CTPD = One
                        }
                    }
                }
            }

            Method (UGIO, 0, Serialized)
            {
                If ((\_SB.PCI0.PEG2.GPCI == Zero)) {}
                Else
                {
                }

                If ((\_SB.PCI0.PEG2.GNHI == Zero)) {}
                Else
                {
                }

                If ((\_SB.PCI0.PEG2.GXCI == Zero)) {}
                Else
                {
                }

                If ((\_SB.PCI0.PEG2.RTBT == Zero)) {}
                Else
                {
                }

                If ((\_SB.PCI0.PEG2.RUSB == Zero)) {}
                Else
                {
                }

                Local0 = (\_SB.PCI0.PEG2.GNHI || \_SB.PCI0.PEG2.RTBT)
                Local1 = (\_SB.PCI0.PEG2.GXCI || \_SB.PCI0.PEG2.RUSB)
                If ((\_SB.PCI0.PEG2.GPCI != Zero))
                {
                    If (((Local0 == Zero) && (Local1 == Zero)))
                    {
                        Local0 = One
                        Local1 = One
                    }
                }

                If ((Local0 == Zero)) {}
                Else
                {
                }

                If ((Local1 == Zero)) {}
                Else
                {
                }

                Local2 = Zero
                If ((Local0 != Zero))
                {
                    If ((GGDV (0x03050009) == Zero))
                    {
                        SGDI (0x03050009)
                        Local2 = One
                        \_SB.PCI0.PEG2.CTPD = Zero
                    }
                }

                If ((Local1 != Zero))
                {
                    If ((GGDV (0x0305000A) == Zero))
                    {
                        SGDI (0x0305000A)
                        Local2 = One
                    }
                }

                If ((Local2 != Zero))
                {
                    Sleep (0x01F4)
                }

                Local3 = Zero
                If ((Local0 == Zero))
                {
                    If ((GGDV (0x03050009) == One))
                    {
                        \_SB.PCI0.PEG2.CTBT ()
                        If ((\_SB.PCI0.PEG2.CTPD != Zero))
                        {
                            SGOV (0x03050009, Zero)
                            SGDO (0x03050009)
                            Local3 = One
                        }
                        Else
                        {
                        }
                    }
                }

                If ((Local1 == Zero))
                {
                    If ((GGDV (0x0305000A) == One))
                    {
                        SGOV (0x0305000A, Zero)
                        SGDO (0x0305000A)
                        Local3 = One
                    }
                }

                If ((Local3 != Zero))
                {
                    Sleep (0x64)
                }

                Return (Local2)
            }

            Method (_PS0, 0, Serialized)  // _PS0: Power State 0
            {
                If (OSDW ())
                {
                    PCEU ()
                }
            }

            Method (_PS3, 0, Serialized)  // _PS3: Power State 3
            {
                If (OSDW ())
                {
                    If ((\_SB.PCI0.PEG2.POFF () != Zero))
                    {
                        \_SB.PCI0.PEG2.CTBT ()
                    }

                    PCDA ()
                }
                ElseIf ((GO2S == Zero))
                {
                    If ((\_SB.PCI0.PEG2.UPCK () == Zero))
                    {
                        \_SB.PCI0.PEG2.UTLK (One, 0x03E8)
                    }
                    Else
                    {
                    }

                    \_SB.PCI0.PEG2.TBTC (0x05)
                    \_SB.PCI0.PEG2.UTLK (Zero, 0x03E8)
                    \_SB.PCI0.PEG2.PSTA = 0x03
                }
            }

            Method (TGPE, 0, Serialized)
            {
                Notify (\_SB.PCI0.PEG2, 0x02) // Device Wake
            }

            Method (UTLK, 2, Serialized)
            {
                If ((Arg0 == Zero))
                {
                    SGOV (0x03050009, Zero)
                    SGDO (0x03050009)
                    Return (Zero)
                }

                Local0 = Zero
                If (((GGOV (0x03050009) == Zero) && (GGDV (0x03050009) == Zero)))
                {
                    \_SB.PCI0.PEG2.PSTA = Zero
                    While (One)
                    {
                        If ((\_SB.PCI0.PEG2.LDIS == One))
                        {
                            \_SB.PCI0.PEG2.LDIS = Zero
                        }

                        SGDI (0x03050009)
                        Local1 = Zero
                        Local2 = (Timer + 0x00989680)
                        While ((Timer <= Local2))
                        {
                            If ((\_SB.PCI0.PEG2.LACR == Zero))
                            {
                                If ((\_SB.PCI0.PEG2.LTRN != One))
                                {
                                    Break
                                }
                            }
                            ElseIf (((\_SB.PCI0.PEG2.LTRN != One) && (\_SB.PCI0.PEG2.LACT == One)))
                            {
                                Break
                            }

                            Sleep (0x0A)
                        }

                        Sleep (Arg1)
                        While ((Timer <= Local2))
                        {
                            If ((\_SB.PCI0.PEG2.UPSB.AVND != 0xFFFFFFFF))
                            {
                                Local1 = One
                                Break
                            }

                            Sleep (0x0A)
                        }

                        If ((Local1 == One))
                        {
                            If ((One == \_SB.PCI0.PEG2.IABT))
                            {
                                \_SB.PCI0.PEG2.IABT = One
                            }

                            Break
                        }

                        If ((Local0 == 0x04))
                        {
                            Break
                        }

                        Local0++
                        SGOV (0x03050009, Zero)
                        SGDO (0x03050009)
                        Sleep (0x03E8)
                    }
                }
            }

            OperationRegion (FUBA, SystemMemory, 0xE000A000, 0x1000)
            Field (FUBA, ByteAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                F004,   16, 
                F006,   16, 
                Offset (0x0C), 
                F00C,   8, 
                Offset (0x19), 
                F019,   8, 
                F01A,   8, 
                Offset (0x1C), 
                F01C,   8, 
                F01D,   8, 
                F01E,   16, 
                F020,   16, 
                F022,   16, 
                F024,   16, 
                F026,   16, 
                F028,   32, 
                F02C,   32, 
                Offset (0x3C), 
                F03C,   8, 
                F03D,   8, 
                F03E,   16, 
                Offset (0x84), 
                F084,   32, 
                Offset (0x8C), 
                F08C,   32, 
                Offset (0x92), 
                F092,   16, 
                F094,   32, 
                F098,   16, 
                Offset (0xA2), 
                F0A2,   16, 
                Offset (0xA8), 
                F0A8,   16, 
                F0AA,   16, 
                F0AC,   16, 
                Offset (0xB0), 
                F0B0,   16, 
                F0B2,   16, 
                F0B4,   32, 
                Offset (0xBC), 
                F0BC,   16, 
                Offset (0xC0), 
                F0C0,   32, 
                Offset (0xC8), 
                F0C8,   16, 
                Offset (0xD0), 
                F0D0,   16, 
                F0D2,   16, 
                Offset (0xEC), 
                F0EC,   32, 
                Offset (0xF4), 
                F0F4,   32, 
                Offset (0x114), 
                F114,   32, 
                Offset (0x11A), 
                    ,   1, 
                F11A,   1, 
                Offset (0x11C), 
                Offset (0x144), 
                F144,   32, 
                Offset (0x150), 
                F150,   32, 
                Offset (0x158), 
                F158,   32, 
                F15C,   32, 
                Offset (0x1C4), 
                F1C4,   16, 
                Offset (0x1CC), 
                F1CC,   32, 
                F1D0,   32, 
                Offset (0x1F0), 
                F1F0,   32, 
                Offset (0x1F8), 
                F1F8,   32, 
                F1FC,   32, 
                F200,   32, 
                F204,   32, 
                F208,   32, 
                Offset (0x214), 
                Offset (0x216), 
                F214,   4, 
                Offset (0x218), 
                Offset (0x224), 
                F224,   32, 
                F228,   32, 
                F22C,   32, 
                Offset (0x238), 
                F238,   32, 
                Offset (0x240), 
                F240,   32, 
                F244,   32, 
                Offset (0x250), 
                F250,   32, 
                Offset (0x258), 
                F258,   32, 
                F25C,   32, 
                F260,   32, 
                Offset (0x508), 
                F508,   1, 
                Offset (0x509), 
                Offset (0x80C), 
                F80C,   32, 
                Offset (0x82C), 
                F82C,   32, 
                Offset (0x84C), 
                F84C,   32, 
                Offset (0x86C), 
                F86C,   32, 
                Offset (0x88C), 
                F88C,   32, 
                Offset (0x8AC), 
                F8AC,   32, 
                Offset (0x8CC), 
                F8CC,   32, 
                Offset (0x8EC), 
                F8EC,   32, 
                Offset (0x900), 
                F900,   32, 
                F904,   32, 
                F908,   32, 
                F90C,   32, 
                F910,   32, 
                Offset (0x918), 
                F918,   32, 
                Offset (0x920), 
                F920,   32, 
                F924,   32, 
                F928,   32, 
                F92C,   32, 
                F930,   32, 
                Offset (0x938), 
                F938,   32, 
                Offset (0x940), 
                F940,   32, 
                F944,   32, 
                F948,   32, 
                F94C,   32, 
                F950,   32, 
                Offset (0x958), 
                F958,   32, 
                Offset (0x960), 
                F960,   32, 
                F964,   32, 
                F968,   32, 
                F96C,   32, 
                F970,   32, 
                Offset (0x978), 
                F978,   32, 
                F980,   32, 
                F984,   32, 
                F988,   32, 
                F98C,   32, 
                F990,   32, 
                Offset (0x998), 
                F998,   32, 
                Offset (0x9A0), 
                F9A0,   32, 
                F9A4,   32, 
                F9A8,   32, 
                F9AC,   32, 
                F9B0,   32, 
                Offset (0x9B8), 
                F9B8,   32, 
                Offset (0x9C0), 
                F9C0,   32, 
                F9C4,   32, 
                F9C8,   32, 
                F9CC,   32, 
                F9D0,   32, 
                Offset (0x9D8), 
                F9D8,   32, 
                FD9C,   32, 
                F9E0,   32, 
                F9E4,   32, 
                F9E8,   32, 
                F9EC,   32, 
                F9F0,   32, 
                Offset (0x9F8), 
                F9F8,   32, 
                Offset (0xA00), 
                FA00,   32, 
                FA04,   32, 
                FA08,   32, 
                FA0C,   32, 
                FA10,   32, 
                FA14,   32, 
                FA18,   32, 
                FA1C,   32, 
                FA20,   32, 
                FA24,   32, 
                FA28,   32, 
                FA2C,   32, 
                FA30,   32, 
                FA34,   32, 
                FA38,   32, 
                FA3C,   32, 
                FA40,   32, 
                FA44,   32, 
                FA48,   32, 
                FA4C,   32, 
                FA50,   32, 
                FA54,   32, 
                FA58,   32, 
                FA5C,   32, 
                FA60,   32, 
                FA64,   32, 
                FA68,   32, 
                FA6C,   32, 
                FA70,   32, 
                FA74,   32, 
                FA78,   32, 
                FA7C,   32, 
                FA80,   32, 
                FA84,   32, 
                FA88,   32, 
                FA8C,   32, 
                FA90,   32, 
                FA94,   32, 
                FA98,   32, 
                FA9C,   32, 
                FAA0,   32, 
                FAA4,   32, 
                FAA8,   32, 
                FAAC,   32, 
                FAB0,   32, 
                FAB4,   32, 
                FAB8,   32, 
                FABC,   32, 
                FAC0,   32, 
                FAC4,   32, 
                FAC8,   32, 
                FACC,   32, 
                FAD0,   32, 
                FAD4,   32, 
                FAD8,   32, 
                FADC,   32, 
                FAE0,   32, 
                FAE4,   32, 
                FAE8,   32, 
                FAEC,   32, 
                FAF0,   32, 
                FAF4,   32, 
                FAF8,   32, 
                FAFC,   32, 
                Offset (0xC20), 
                    ,   4, 
                FSQ1,   1, 
                FSQ2,   1, 
                Offset (0xC24), 
                Offset (0xC28), 
                FC28,   32, 
                Offset (0xC30), 
                FC30,   32, 
                Offset (0xC38), 
                FC38,   32, 
                Offset (0xCD0), 
                FCD0,   32, 
                Offset (0xD10), 
                FD10,   1, 
                Offset (0xD14), 
                FD14,   32, 
                Offset (0xD34), 
                FD34,   32, 
                Offset (0xD94), 
                FD94,   32, 
                FD98,   32, 
                Offset (0xDA0), 
                FDA0,   32, 
                FDA4,   32, 
                FDA8,   32, 
                FDAC,   32, 
                FDB0,   32, 
                FDB4,   32, 
                FDB8,   32, 
                FDBC,   32, 
                Offset (0xDD8), 
                FDD8,   32
            }

            OperationRegion (BNDL, SystemMemory, 0xE000A000, 0x1000)
            Field (BNDL, ByteAcc, NoLock, Preserve)
            {
                Offset (0xB0), 
                    ,   4, 
                FLDS,   1, 
                Offset (0xB2), 
                    ,   4, 
                    ,   7, 
                FLTR,   1, 
                    ,   1, 
                FLAC,   1, 
                Offset (0xB4), 
                Offset (0x91C), 
                    ,   31, 
                B0PD,   1, 
                Offset (0x93C), 
                    ,   31, 
                B1PD,   1, 
                Offset (0x95C), 
                    ,   31, 
                B2PD,   1, 
                Offset (0x97C), 
                    ,   31, 
                B3PD,   1, 
                Offset (0x99C), 
                    ,   31, 
                B4PD,   1, 
                Offset (0x9BC), 
                    ,   31, 
                B5PD,   1, 
                Offset (0x9DC), 
                    ,   31, 
                B6PD,   1, 
                Offset (0x9FC), 
                    ,   31, 
                B7PD,   1
            }

            OperationRegion (C7AR, SystemMemory, 0xFED15DA8, 0x04)
            Field (C7AR, ByteAcc, NoLock, Preserve)
            {
                    ,   2, 
                C7AE,   1, 
                Offset (0x04)
            }

            Name (VDD8, Zero)
            Name (V900, Zero)
            Name (V904, Zero)
            Name (V908, Zero)
            Name (V90C, Zero)
            Name (V910, Zero)
            Name (V80C, Zero)
            Name (V920, Zero)
            Name (V924, Zero)
            Name (V928, Zero)
            Name (V92C, Zero)
            Name (V930, Zero)
            Name (V82C, Zero)
            Name (V940, Zero)
            Name (V944, Zero)
            Name (V948, Zero)
            Name (V94C, Zero)
            Name (V950, Zero)
            Name (V84C, Zero)
            Name (V960, Zero)
            Name (V964, Zero)
            Name (V968, Zero)
            Name (V96C, Zero)
            Name (V970, Zero)
            Name (V86C, Zero)
            Name (V980, Zero)
            Name (V984, Zero)
            Name (V988, Zero)
            Name (V98C, Zero)
            Name (V990, Zero)
            Name (V88C, Zero)
            Name (V9A0, Zero)
            Name (V9A4, Zero)
            Name (V9A8, Zero)
            Name (V9AC, Zero)
            Name (V9B0, Zero)
            Name (V8AC, Zero)
            Name (V9C0, Zero)
            Name (V9C4, Zero)
            Name (V9C8, Zero)
            Name (V9CC, Zero)
            Name (V9D0, Zero)
            Name (V8CC, Zero)
            Name (V9E0, Zero)
            Name (V9E4, Zero)
            Name (V9E8, Zero)
            Name (V9EC, Zero)
            Name (V9F0, Zero)
            Name (V8EC, Zero)
            Name (VC30, Zero)
            Name (VA00, Zero)
            Name (VA04, Zero)
            Name (VA08, Zero)
            Name (VA0C, Zero)
            Name (VA10, Zero)
            Name (VA14, Zero)
            Name (VA18, Zero)
            Name (VA1C, Zero)
            Name (VA20, Zero)
            Name (VA24, Zero)
            Name (VA28, Zero)
            Name (VA2C, Zero)
            Name (VA30, Zero)
            Name (VA34, Zero)
            Name (VA38, Zero)
            Name (VA3C, Zero)
            Name (VA40, Zero)
            Name (VA44, Zero)
            Name (VA48, Zero)
            Name (VA4C, Zero)
            Name (VA50, Zero)
            Name (VA54, Zero)
            Name (VA58, Zero)
            Name (VA5C, Zero)
            Name (VA60, Zero)
            Name (VA64, Zero)
            Name (VA68, Zero)
            Name (VA6C, Zero)
            Name (VA70, Zero)
            Name (VA74, Zero)
            Name (VA78, Zero)
            Name (VA7C, Zero)
            Name (VA80, Zero)
            Name (VA84, Zero)
            Name (VA88, Zero)
            Name (VA8C, Zero)
            Name (VA90, Zero)
            Name (VA94, Zero)
            Name (VA98, Zero)
            Name (VA9C, Zero)
            Name (VAA0, Zero)
            Name (VAA4, Zero)
            Name (VAA8, Zero)
            Name (VAAC, Zero)
            Name (VAB0, Zero)
            Name (VAB4, Zero)
            Name (VAB8, Zero)
            Name (VABC, Zero)
            Name (VAC0, Zero)
            Name (VAC4, Zero)
            Name (VAC8, Zero)
            Name (VACC, Zero)
            Name (VAD0, Zero)
            Name (VAD4, Zero)
            Name (VAD8, Zero)
            Name (VADC, Zero)
            Name (VAE0, Zero)
            Name (VAE4, Zero)
            Name (VAE8, Zero)
            Name (VAEC, Zero)
            Name (VAF0, Zero)
            Name (VAF4, Zero)
            Name (VAF8, Zero)
            Name (VAFC, Zero)
            Name (V918, Zero)
            Name (V938, Zero)
            Name (V958, Zero)
            Name (V978, Zero)
            Name (V998, Zero)
            Name (V9B8, Zero)
            Name (V9D8, Zero)
            Name (V9F8, Zero)
            Name (V224, Zero)
            Name (V1F8, Zero)
            Name (V260, Zero)
            Name (VC28, Zero)
            Name (VC38, Zero)
            Name (VD14, Zero)
            Name (V004, Zero)
            Name (V00C, Zero)
            Name (V019, Zero)
            Name (V01A, Zero)
            Name (V01C, Zero)
            Name (V01D, Zero)
            Name (V020, Zero)
            Name (V022, Zero)
            Name (V024, Zero)
            Name (V026, Zero)
            Name (V028, Zero)
            Name (V02C, Zero)
            Name (V03C, Zero)
            Name (V03D, Zero)
            Name (V03E, Zero)
            Name (V084, Zero)
            Name (V08C, Zero)
            Name (V092, Zero)
            Name (V094, Zero)
            Name (V098, Zero)
            Name (V0A2, Zero)
            Name (V0A8, Zero)
            Name (V0AC, Zero)
            Name (V0B0, Zero)
            Name (V0B4, Zero)
            Name (V0BC, Zero)
            Name (V0C8, Zero)
            Name (V0D0, Zero)
            Name (V0EC, Zero)
            Name (V114, Zero)
            Name (V144, Zero)
            Name (V150, Zero)
            Name (V158, Zero)
            Name (V15C, Zero)
            Name (V1CC, Zero)
            Name (V1FC, Zero)
            Name (V200, Zero)
            Name (V204, Zero)
            Name (V208, Zero)
            Name (V228, Zero)
            Name (V22C, Zero)
            Name (V238, Zero)
            Name (V240, Zero)
            Name (V244, Zero)
            Name (V250, Zero)
            Name (V258, Zero)
            Name (V25C, Zero)
            Name (VCD0, Zero)
            Name (VD34, Zero)
            Name (VD94, Zero)
            Name (VD98, Zero)
            Name (V0F4, Zero)
            Name (VDA0, Zero)
            Name (VDA4, Zero)
            Name (VDA8, Zero)
            Name (VDAC, Zero)
            Name (VDB0, Zero)
            Name (VDB4, Zero)
            Name (VDB8, Zero)
            Name (VDBC, Zero)
            Name (V214, Zero)
            Name (V006, Zero)
            Name (V01E, Zero)
            Name (V0AA, Zero)
            Name (V0C0, Zero)
            Name (V0D2, Zero)
            Name (V1C4, Zero)
            Name (V1D0, Zero)
            Name (V1F0, Zero)
            Name (VD9C, Zero)
            Name (V0B2, Zero)
            Name (V508, Zero)
            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
            Field (A1E0, ByteAcc, NoLock, Preserve)
            {
                AVND,   32, 
                BMIE,   3, 
                Offset (0x18), 
                PRIB,   8, 
                SECB,   8, 
                SUBB,   8, 
                Offset (0x1E), 
                    ,   13, 
                IABT,   1
            }

            OperationRegion (HD94, PCI_Config, 0x0D94, 0x08)
            Field (HD94, ByteAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                PLEQ,   1, 
                Offset (0x08)
            }

            OperationRegion (A1E1, PCI_Config, 0xA0, 0x40)
            Field (A1E1, ByteAcc, NoLock, Preserve)
            {
                Offset (0x01), 
                Offset (0x02), 
                Offset (0x04), 
                Offset (0x08), 
                Offset (0x0A), 
                    ,   5, 
                TPEN,   1, 
                Offset (0x0C), 
                SSPD,   4, 
                    ,   16, 
                LACR,   1, 
                Offset (0x10), 
                ASPM,   2, 
                    ,   2, 
                LDIS,   1, 
                LRTN,   1, 
                Offset (0x12), 
                CSPD,   4, 
                CWDT,   6, 
                    ,   1, 
                LTRN,   1, 
                    ,   1, 
                LACT,   1, 
                Offset (0x14), 
                Offset (0x30), 
                TSPD,   4
            }

            OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
            Field (A1E2, ByteAcc, NoLock, Preserve)
            {
                Offset (0x01), 
                Offset (0x02), 
                Offset (0x04), 
                PSTA,   2
            }

            OperationRegion (OE2H, PCI_Config, 0xE2, One)
            Field (OE2H, ByteAcc, NoLock, Preserve)
            {
                    ,   2, 
                L23E,   1, 
                L23D,   1
            }

            OperationRegion (DMIH, PCI_Config, 0x0324, One)
            Field (DMIH, ByteAcc, NoLock, Preserve)
            {
                    ,   3, 
                LEDM,   1
            }

            OperationRegion (A1E3, PCI_Config, 0x0200, 0x20)
            Field (A1E3, ByteAcc, NoLock, Preserve)
            {
                Offset (0x14), 
                Offset (0x16), 
                PSTS,   4
            }

            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
            {
                Return (Zero)
            }

            Device (UPSB)
            {
                Name (_ADR, Zero)  // _ADR: Address
                OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                Field (A1E0, ByteAcc, NoLock, Preserve)
                {
                    AVND,   32, 
                    BMIE,   3, 
                    Offset (0x18), 
                    PRIB,   8, 
                    SECB,   8, 
                    SUBB,   8, 
                    Offset (0x1E), 
                        ,   13, 
                    IABT,   1
                }

                OperationRegion (A1E1, PCI_Config, 0xC0, 0x40)
                Field (A1E1, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x01), 
                    Offset (0x02), 
                    Offset (0x04), 
                    Offset (0x08), 
                    Offset (0x0A), 
                        ,   5, 
                    TPEN,   1, 
                    Offset (0x0C), 
                    SSPD,   4, 
                        ,   16, 
                    LACR,   1, 
                    Offset (0x10), 
                        ,   4, 
                    LDIS,   1, 
                    LRTN,   1, 
                    Offset (0x12), 
                    CSPD,   4, 
                    CWDT,   6, 
                        ,   1, 
                    LTRN,   1, 
                        ,   1, 
                    LACT,   1, 
                    Offset (0x14), 
                    Offset (0x30), 
                    TSPD,   4
                }

                OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
                Field (A1E2, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x01), 
                    Offset (0x02), 
                    Offset (0x04), 
                    PSTA,   2
                }

                Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                {
                    Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.SECB */
                }

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                {
                    Return (Zero)
                }

                Method (PCED, 0, Serialized)
                {
                    \_SB.PCI0.PEG2.GPCI = One
                    If ((\_SB.PCI0.PEG2.UGIO () != Zero))
                    {
                        \_SB.PCI0.PEG2.PRSR = One
                    }

                    Local0 = Zero
                    Local1 = Zero
                    If ((PUPS == Zero))
                    {
                        Local1 = One
                    }

                    If ((Local1 == Zero))
                    {
                        If ((\_SB.PCI0.PEG2.IIP3 != Zero))
                        {
                            \_SB.PCI0.PEG2.PRSR = One
                            Local0 = One
                            \_SB.PCI0.PEG2.LDIS = One
                        }
                    }

                    LWRT = Zero
                    LRRT = Zero
                    LPRT = Zero
                    Local3 = Zero
                    While ((Local3 == Zero))
                    {
                        Local4 = Zero
                        Local5 = (Timer + 0x00989680)
                        If ((\_SB.PCI0.PEG2.PRSR != Zero))
                        {
                            Sleep (0x1E)
                            If (((Local0 != Zero) || (Local1 != Zero)))
                            {
                                \_SB.PCI0.PEG2.TSPD = One
                                If ((Local1 != Zero))
                                {
                                    \_SB.PCI0.PEG2.PUPD (One, 0x02)
                                }
                                ElseIf ((Local0 != Zero))
                                {
                                    \_SB.PCI0.PEG2.LDIS = Zero
                                }

                                While ((Timer <= Local5))
                                {
                                    Local6 = \_SB.PCI0.PEG2.LTSM
                                    If ((Local6 == 0x03))
                                    {
                                        Break
                                    }

                                    Sleep (0x0A)
                                }

                                Sleep (0x78)
                                While ((Timer <= Local5))
                                {
                                    If ((\_SB.PCI0.PEG2.UPSB.AVND != 0xFFFFFFFF))
                                    {
                                        Break
                                    }

                                    Sleep (0x0A)
                                }

                                \_SB.PCI0.PEG2.TSPD = 0x03
                                \_SB.PCI0.PEG2.PLEQ = One
                                \_SB.PCI0.PEG2.LRTN = One
                            }

                            Local5 = (Timer + 0x00989680)
                            While ((Timer <= Local5))
                            {
                                If ((\_SB.PCI0.PEG2.LACR == Zero))
                                {
                                    If ((\_SB.PCI0.PEG2.LTRN != One))
                                    {
                                        Break
                                    }
                                }
                                ElseIf (((\_SB.PCI0.PEG2.LTRN != One) && (\_SB.PCI0.PEG2.LACT == One)))
                                {
                                    Break
                                }

                                Sleep (0x0A)
                            }

                            Sleep (0xFA)
                        }

                        While ((Timer <= Local5))
                        {
                            Local6 = \_SB.PCI0.PEG2.LTSM
                            If ((Local6 == 0x03))
                            {
                                Break
                            }

                            Sleep (0x0A)
                        }

                        While ((Timer <= Local5))
                        {
                            If ((\_SB.PCI0.PEG2.UPSB.AVND != 0xFFFFFFFF))
                            {
                                Local4 = One
                                Break
                            }

                            Sleep (0x0A)
                        }

                        If ((\_SB.PCI0.PEG2.CSPD != 0x03))
                        {
                            If ((\_SB.PCI0.PEG2.SSPD == 0x03))
                            {
                                If ((\_SB.PCI0.PEG2.UPSB.SSPD == 0x03))
                                {
                                    If ((\_SB.PCI0.PEG2.TSPD != 0x03))
                                    {
                                        \_SB.PCI0.PEG2.TSPD = 0x03
                                    }

                                    If ((\_SB.PCI0.PEG2.UPSB.TSPD != 0x03))
                                    {
                                        \_SB.PCI0.PEG2.UPSB.TSPD = 0x03
                                    }

                                    \_SB.PCI0.PEG2.LRTN = One
                                    Local2 = (Timer + 0x00989680)
                                    While ((Timer <= Local2))
                                    {
                                        If ((\_SB.PCI0.PEG2.LACR == Zero))
                                        {
                                            If (((\_SB.PCI0.PEG2.LTRN != One) && (\_SB.PCI0.PEG2.UPSB.AVND != 0xFFFFFFFF)))
                                            {
                                                \_SB.PCI0.PEG2.PCIA = One
                                                Break
                                            }
                                        }
                                        ElseIf ((((\_SB.PCI0.PEG2.LTRN != One) && (\_SB.PCI0.PEG2.LACT == One)) && 
                                            (\_SB.PCI0.PEG2.UPSB.AVND != 0xFFFFFFFF)))
                                        {
                                            \_SB.PCI0.PEG2.PCIA = One
                                            Break
                                        }

                                        Sleep (0x0A)
                                    }
                                }
                                Else
                                {
                                    \_SB.PCI0.PEG2.PCIA = One
                                }
                            }
                            Else
                            {
                                \_SB.PCI0.PEG2.PCIA = One
                            }
                        }
                        Else
                        {
                            \_SB.PCI0.PEG2.PCIA = One
                        }

                        Local5 = ((LWRT < LWMR) && (\_SB.PCI0.PEG2.PRSR != Zero))
                        Local6 = ((\_SB.PCI0.PEG2.CWDT != 0x04) && ((TFLG & One) == 
                            Zero))
                        Local7 = ((Local4 == Zero) && ((TFLG & 0x02) == Zero))
                        If (((Local6 || Local7) && Local5))
                        {
                            Local1 = Zero
                            If ((LWRT >= LPMN))
                            {
                                LPRT += One
                                \_SB.PCI0.PEG2.UPSB.POCR ()
                                Local4 = Zero
                            }

                            If ((Local4 != Zero))
                            {
                                LRRT += One
                                \_SB.PCI0.PEG2.UPSB.CRMW (0x0771, Zero, 0x02, 0x0200, 0xFFFFFFFF)
                            }

                            Local0 = One
                            \_SB.PCI0.PEG2.LDIS = One
                            \_SB.PCI0.PEG2.PCIA = Zero
                            Sleep (0x64)
                            LWRT += One
                        }
                        Else
                        {
                            Local3 = One
                        }
                    }

                    \_SB.PCI0.PEG2.PRSR = Zero
                    \_SB.PCI0.PEG2.IIP3 = Zero
                }

                Method (AMPE, 0, Serialized)
                {
                    Notify (\_SB.PCI0.PEG2.UPSB.DSB0.NHI0, Zero) // Bus Check
                }

                Method (UMPE, 0, Serialized)
                {
                    Notify (\_SB.PCI0.PEG2.UPSB.DSB2.XHC3, Zero) // Bus Check
                    Notify (\_SB.PCI0.XHC1, Zero) // Bus Check
                }

                Name (MDUV, One)
                Method (MUST, 1, Serialized)
                {
                    If (OSDW ())
                    {
                        If ((MDUV != Arg0))
                        {
                            MDUV = Arg0
                            UMPE ()
                        }
                    }

                    Return (Zero)
                }

                Name (TFLG, Zero)
                Name (LWMR, 0x14)
                Name (LPMN, 0x0A)
                Name (LWRT, Zero)
                Name (LRRT, Zero)
                Name (LPRT, Zero)
                Method (SLMR, 1, Serialized)
                {
                    LWMR = Arg0
                }

                Method (SFLG, 1, Serialized)
                {
                    TFLG = Arg0
                }

                Method (POCR, 0, Serialized)
                {
                    \_SB.PCI0.LPCB.EC.RSTB (Zero, Zero)
                }

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {
                    If (OSDW ())
                    {
                        PCED ()
                        \_SB.PCI0.PEG2.UPSB.CRMW (0x0150, Zero, 0x02, 0x04000000, 0x04000000)
                        \_SB.PCI0.PEG2.UPSB.CRMW (0x0250, Zero, 0x02, 0x04000000, 0x04000000)
                    }
                }

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {
                    If (!OSDW ())
                    {
                        If ((\_SB.PCI0.PEG2.UPCK () == Zero))
                        {
                            \_SB.PCI0.PEG2.UTLK (One, 0x03E8)
                        }
                        Else
                        {
                        }

                        \_SB.PCI0.PEG2.TBTC (0x05)
                        \_SB.PCI0.PEG2.UTLK (Zero, 0x03E8)
                    }
                }

                OperationRegion (H548, PCI_Config, 0x0548, 0x20)
                Field (H548, DWordAcc, Lock, Preserve)
                {
                    T2PC,   32, 
                    PC2T,   32
                }

                OperationRegion (H530, PCI_Config, 0x0530, 0x0C)
                Field (H530, DWordAcc, Lock, Preserve)
                {
                    DWIX,   13, 
                    PORT,   6, 
                    SPCE,   2, 
                    CMD0,   1, 
                    CMD1,   1, 
                    CMD2,   1, 
                        ,   6, 
                    PROG,   1, 
                    TMOT,   1, 
                    WDAT,   32, 
                    RDAT,   32
                }

                Method (CIOW, 4, Serialized)
                {
                    WDAT = Arg3
                    DWIX = Arg0
                    PORT = Arg1
                    SPCE = Arg2
                    CMD0 = One
                    CMD1 = Zero
                    CMD2 = Zero
                    TMOT = Zero
                    PROG = One
                    Local1 = One
                    Local0 = 0x2710
                    While ((Zero < Local0))
                    {
                        If ((PROG == Zero))
                        {
                            Local1 = Zero
                            Break
                        }

                        Stall (0x19)
                        Local0--
                    }

                    If ((Local1 == Zero))
                    {
                        Local1 = TMOT /* \_SB_.PCI0.PEG2.UPSB.TMOT */
                    }

                    Return (Local1)
                }

                Method (CIOR, 3, Serialized)
                {
                    RDAT = Zero
                    DWIX = Arg0
                    PORT = Arg1
                    SPCE = Arg2
                    CMD0 = Zero
                    CMD1 = Zero
                    CMD2 = Zero
                    TMOT = Zero
                    PROG = One
                    Local1 = One
                    Local0 = 0x2710
                    While ((Zero < Local0))
                    {
                        If ((PROG == Zero))
                        {
                            Local1 = Zero
                            Break
                        }

                        Stall (0x19)
                        Local0--
                    }

                    If ((Local1 == Zero))
                    {
                        Local1 = TMOT /* \_SB_.PCI0.PEG2.UPSB.TMOT */
                    }

                    If ((Local1 == Zero))
                    {
                        Return (Package (0x02)
                        {
                            Zero, 
                            RDAT
                        })
                    }
                    Else
                    {
                        Return (Package (0x02)
                        {
                            One, 
                            RDAT
                        })
                    }
                }

                Method (CRMW, 5, Serialized)
                {
                    Local1 = One
                    If ((\_SB.PCI0.PEG2.PUPS != Zero))
                    {
                        If ((((GGDV (0x03050009) == One) || (GGDV (0x0305000A) == One)) && 
                            (\_SB.PCI0.PEG2.UPSB.AVND != 0xFFFFFFFF)))
                        {
                            Local3 = Zero
                            While ((Local3 <= 0x04))
                            {
                                Local2 = CIOR (Arg0, Arg1, Arg2)
                                If ((DerefOf (Local2 [Zero]) == Zero))
                                {
                                    Local2 = DerefOf (Local2 [One])
                                    Local2 &= ~Arg4
                                    Local2 |= Arg3
                                    Local2 = CIOW (Arg0, Arg1, Arg2, Local2)
                                    If ((Local2 == Zero))
                                    {
                                        Local2 = CIOR (Arg0, Arg1, Arg2)
                                        If ((DerefOf (Local2 [Zero]) == Zero))
                                        {
                                            Local2 = DerefOf (Local2 [One])
                                            Local2 &= Arg4
                                            If ((Local2 == Arg3))
                                            {
                                                Local1 = Zero
                                                Break
                                            }
                                        }
                                    }
                                }

                                Local3++
                                Sleep (0x64)
                            }
                        }
                    }

                    Return (Local1)
                }

                Method (LSTX, 2, Serialized)
                {
                    If ((T2PC != 0xFFFFFFFF))
                    {
                        Local0 = Zero
                        If (((T2PC & One) && One))
                        {
                            Local0 = One
                        }

                        If ((Local0 == Zero))
                        {
                            Local1 = 0x2710
                            While ((Zero < Local1))
                            {
                                If ((T2PC == Zero))
                                {
                                    Break
                                }

                                Stall (0x19)
                                Local1--
                            }

                            If ((Zero == Local1))
                            {
                                Local0 = One
                            }
                        }

                        If ((Local0 == Zero))
                        {
                            Local1 = One
                            Local1 |= 0x14
                            Local1 |= (Arg0 << 0x08)
                            Local1 |= (Arg1 << 0x0C)
                            Local1 |= 0x00400000
                            PC2T = Local1
                        }

                        If ((Local0 == Zero))
                        {
                            Local1 = 0x2710
                            While ((Zero < Local1))
                            {
                                If ((T2PC == 0x15))
                                {
                                    Break
                                }

                                Stall (0x19)
                                Local1--
                            }

                            If ((Zero == Local1))
                            {
                                Local0 = One
                            }
                        }

                        Sleep (0x0A)
                        PC2T = Zero
                    }
                }

                Device (DSB0)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                    Field (A1E0, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   32, 
                        BMIE,   3, 
                        Offset (0x18), 
                        PRIB,   8, 
                        SECB,   8, 
                        SUBB,   8, 
                        Offset (0x1E), 
                            ,   13, 
                        IABT,   1
                    }

                    OperationRegion (A1E1, PCI_Config, 0xC0, 0x40)
                    Field (A1E1, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        Offset (0x08), 
                        Offset (0x0A), 
                            ,   5, 
                        TPEN,   1, 
                        Offset (0x0C), 
                        SSPD,   4, 
                            ,   16, 
                        LACR,   1, 
                        Offset (0x10), 
                            ,   4, 
                        LDIS,   1, 
                        LRTN,   1, 
                        Offset (0x12), 
                        CSPD,   4, 
                        CWDT,   6, 
                            ,   1, 
                        LTRN,   1, 
                            ,   1, 
                        LACT,   1, 
                        Offset (0x14), 
                        Offset (0x30), 
                        TSPD,   4
                    }

                    OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
                    Field (A1E2, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        PSTA,   2
                    }

                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                    {
                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB0.SECB */
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }

                    Name (IIP3, Zero)
                    Name (PRSR, Zero)
                    Name (PCIA, One)
                    Method (PCEU, 0, Serialized)
                    {
                        \_SB.PCI0.PEG2.UPSB.DSB0.PRSR = Zero
                        If ((\_SB.PCI0.PEG2.UPSB.DSB0.PSTA != Zero))
                        {
                            \_SB.PCI0.PEG2.UPSB.DSB0.PRSR = One
                            \_SB.PCI0.PEG2.UPSB.DSB0.PSTA = Zero
                        }

                        If ((\_SB.PCI0.PEG2.UPSB.DSB0.LDIS == One))
                        {
                            \_SB.PCI0.PEG2.UPSB.DSB0.PRSR = One
                            \_SB.PCI0.PEG2.UPSB.DSB0.LDIS = Zero
                        }
                    }

                    Method (PCDA, 0, Serialized)
                    {
                        If ((\_SB.PCI0.PEG2.UPSB.DSB0.POFF () != Zero))
                        {
                            \_SB.PCI0.PEG2.UPSB.DSB0.PCIA = Zero
                            \_SB.PCI0.PEG2.UPSB.DSB0.PSTA = 0x03
                            \_SB.PCI0.PEG2.UPSB.DSB0.LDIS = One
                            Local5 = (Timer + 0x00989680)
                            While ((Timer <= Local5))
                            {
                                If ((\_SB.PCI0.PEG2.UPSB.DSB0.LACR == One))
                                {
                                    If ((\_SB.PCI0.PEG2.UPSB.DSB0.LACT == Zero))
                                    {
                                        Break
                                    }
                                }
                                ElseIf ((\_SB.PCI0.PEG2.UPSB.DSB0.NHI0.AVND == 0xFFFFFFFF))
                                {
                                    Break
                                }

                                Sleep (0x0A)
                            }

                            \_SB.PCI0.PEG2.GNHI = Zero
                            \_SB.PCI0.PEG2.UGIO ()
                        }
                        Else
                        {
                        }

                        \_SB.PCI0.PEG2.UPSB.DSB0.IIP3 = One
                    }

                    Method (POFF, 0, Serialized)
                    {
                        Return (!\_SB.PCI0.PEG2.RTBT)
                    }

                    Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                    {
                        If (OSDW ())
                        {
                            PCEU ()
                        }
                    }

                    Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                    {
                        If (OSDW ())
                        {
                            PCDA ()
                        }
                    }

                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        If (OSDW ())
                        {
                            If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b") /* Unknown UUID */))
                            {
                                Local0 = Package (0x02)
                                    {
                                        "PCIHotplugCapable", 
                                        Zero
                                    }
                                DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                                Return (Local0)
                            }
                        }

                        Return (Zero)
                    }

                    Device (NHI0)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Name (_STR, Unicode ("Thunderbolt"))  // _STR: Description String
                        Method (PCED, 0, Serialized)
                        {
                            \_SB.PCI0.PEG2.GNHI = One
                            If ((\_SB.PCI0.PEG2.UGIO () != Zero))
                            {
                                \_SB.PCI0.PEG2.UPSB.DSB0.PRSR = One
                            }

                            Local0 = Zero
                            Local1 = Zero
                            Local3 = Zero
                            While ((Local3 == Zero))
                            {
                                Local4 = Zero
                                Local5 = (Timer + 0x00989680)
                                If ((\_SB.PCI0.PEG2.UPSB.DSB0.PRSR != Zero))
                                {
                                    Local5 = (Timer + 0x00989680)
                                    While ((Timer <= Local5))
                                    {
                                        If ((\_SB.PCI0.PEG2.UPSB.DSB0.LACR == Zero))
                                        {
                                            If ((\_SB.PCI0.PEG2.UPSB.DSB0.LTRN != One))
                                            {
                                                Break
                                            }
                                        }
                                        ElseIf (((\_SB.PCI0.PEG2.UPSB.DSB0.LTRN != One) && (\_SB.PCI0.PEG2.UPSB.DSB0.LACT == One)))
                                        {
                                            Break
                                        }

                                        Sleep (0x0A)
                                    }

                                    Sleep (0x96)
                                }

                                While ((Timer <= Local5))
                                {
                                    If ((\_SB.PCI0.PEG2.UPSB.DSB0.NHI0.AVND != 0xFFFFFFFF))
                                    {
                                        Local4 = One
                                        \_SB.PCI0.PEG2.UPSB.DSB0.PCIA = One
                                        Break
                                    }

                                    Sleep (0x0A)
                                }

                                Local3 = One
                            }

                            \_SB.PCI0.PEG2.UPSB.DSB0.PRSR = Zero
                            \_SB.PCI0.PEG2.UPSB.DSB0.IIP3 = Zero
                        }

                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                        {
                            Return (Zero)
                        }

                        OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                        Field (A1E0, ByteAcc, NoLock, Preserve)
                        {
                            AVND,   32, 
                            BMIE,   3, 
                            Offset (0x18), 
                            PRIB,   8, 
                            SECB,   8, 
                            SUBB,   8, 
                            Offset (0x1E), 
                                ,   13, 
                            IABT,   1
                        }

                        Method (RTPC, 1, Serialized)
                        {
                            If (OSDW ())
                            {
                                If ((Arg0 <= One))
                                {
                                    \_SB.PCI0.PEG2.RTBT = Arg0
                                }
                            }

                            Return (Zero)
                        }

                        Method (MUST, 1, Serialized)
                        {
                            Return (\_SB.PCI0.PEG2.UPSB.MUST (Arg0))
                        }

                        Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                        {
                            If (OSDW ())
                            {
                                PCED ()
                                \_SB.PCI0.PEG2.CTBT ()
                            }
                        }

                        Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                        {
                        }

                        Method (TRPE, 2, Serialized)
                        {
                            If (OSDW ())
                            {
                                If ((Arg0 <= One))
                                {
                                    If ((Arg0 == Zero))
                                    {
                                        \_SB.PCI0.PEG2.PUPD (Zero, 0x02)
                                        \_SB.PCI0.PEG2.PSTA = 0x03
                                        SGOV (0x03050009, Zero)
                                        SGDO (0x03050009)
                                    }
                                    Else
                                    {
                                        Local0 = Zero
                                        If (((GGOV (0x03050009) == Zero) && (GGDV (0x03050009) == Zero)))
                                        {
                                            \_SB.PCI0.PEG2.PSTA = Zero
                                            While (One)
                                            {
                                                SGDI (0x03050009)
                                                Local1 = Zero
                                                Sleep (0x1E)
                                                \_SB.PCI0.PEG2.PUPD (One, 0x02)
                                                Local2 = (Timer + 0x00989680)
                                                While ((Timer <= Local2))
                                                {
                                                    If ((\_SB.PCI0.PEG2.LACR == Zero))
                                                    {
                                                        If ((\_SB.PCI0.PEG2.LTRN != One))
                                                        {
                                                            Break
                                                        }
                                                    }
                                                    ElseIf (((\_SB.PCI0.PEG2.LTRN != One) && (\_SB.PCI0.PEG2.LACT == One)))
                                                    {
                                                        Break
                                                    }

                                                    Sleep (0x0A)
                                                }

                                                Sleep (Arg1)
                                                While ((Timer <= Local2))
                                                {
                                                    If ((\_SB.PCI0.PEG2.UPSB.AVND != 0xFFFFFFFF))
                                                    {
                                                        Local1 = One
                                                        Break
                                                    }

                                                    Sleep (0x0A)
                                                }

                                                If ((Local1 == One))
                                                {
                                                    IABT = One
                                                    Break
                                                }

                                                If ((Local0 == 0x04))
                                                {
                                                    Return (Zero)
                                                }

                                                Local0++
                                                SGOV (0x03050009, Zero)
                                                SGDO (0x03050009)
                                                Sleep (0x03E8)
                                            }

                                            If ((\_SB.PCI0.PEG2.CSPD != 0x03))
                                            {
                                                If ((\_SB.PCI0.PEG2.SSPD == 0x03))
                                                {
                                                    If ((\_SB.PCI0.PEG2.UPSB.SSPD == 0x03))
                                                    {
                                                        If ((\_SB.PCI0.PEG2.TSPD != 0x03))
                                                        {
                                                            \_SB.PCI0.PEG2.TSPD = 0x03
                                                        }

                                                        If ((\_SB.PCI0.PEG2.UPSB.TSPD != 0x03))
                                                        {
                                                            \_SB.PCI0.PEG2.UPSB.TSPD = 0x03
                                                        }

                                                        \_SB.PCI0.PEG2.LRTN = One
                                                        Local2 = (Timer + 0x00989680)
                                                        While ((Timer <= Local2))
                                                        {
                                                            If ((\_SB.PCI0.PEG2.LACR == Zero))
                                                            {
                                                                If (((\_SB.PCI0.PEG2.LTRN != One) && (\_SB.PCI0.PEG2.UPSB.AVND != 0xFFFFFFFF)))
                                                                {
                                                                    Local1 = One
                                                                    Break
                                                                }
                                                            }
                                                            ElseIf ((((\_SB.PCI0.PEG2.LTRN != One) && (\_SB.PCI0.PEG2.LACT == One)) && 
                                                                (\_SB.PCI0.PEG2.UPSB.AVND != 0xFFFFFFFF)))
                                                            {
                                                                Local1 = One
                                                                Break
                                                            }

                                                            Sleep (0x0A)
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }

                            Return (Zero)
                        }

                        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                        {
                            If (OSDW ())
                            {
                                Local0 = Package (0x03)
                                    {
                                        "power-save", 
                                        One, 
                                        Buffer (One)
                                        {
                                             0x00                                             // .
                                        }
                                    }
                                DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                                Return (Local0)
                            }

                            Return (Zero)
                        }

                        Method (SXFP, 1, Serialized)
                        {
                            If ((Arg0 == Zero))
                            {
                                If ((GGDV (0x0305000A) == One))
                                {
                                    SGOV (0x0305000A, Zero)
                                    SGDO (0x0305000A)
                                    Sleep (0x64)
                                }

                                SGOV (0x03050009, Zero)
                                SGDO (0x03050009)
                            }
                        }

                        Name (XRTE, Zero)
                        Name (S0TO, Zero)
                        Name (S0MT, Zero)
                        Method (XRST, 1, Serialized)
                        {
                            If ((Arg0 == Zero))
                            {
                                XRTE = Zero
                                If ((SLTP == Zero))
                                {
                                    \_SB.PCI0.PEG2.PUPD (One, 0x02)
                                    SGDI (0x03050006)
                                }
                            }
                            ElseIf ((Arg0 == One))
                            {
                                XRTE = One
                                If ((SLTP == Zero))
                                {
                                    \_SB.PCI0.PEG2.PSTA = 0x03
                                    \_SB.PCI0.PEG2.PUPD (Zero, 0x02)
                                    SGOV (0x03050006, Zero)
                                    SGDO (0x03050006)
                                    Sleep (0x4B)
                                }
                            }
                        }

                        Method (JCNT, 0, Serialized)
                        {
                            Return (0x02)
                        }

                        Method (JTMS, 2, Serialized)
                        {
                            If ((Arg0 == Zero))
                            {
                                If ((Arg1 == Zero))
                                {
                                    SGOV (0x03030000, Zero)
                                    SGDO (0x03030000)
                                }
                                Else
                                {
                                    SGDI (0x03030000)
                                }
                            }

                            If ((Arg0 == One))
                            {
                                If ((Arg1 == Zero))
                                {
                                    SGOV (0x03030001, Zero)
                                    SGDO (0x03030001)
                                }
                                Else
                                {
                                    SGDI (0x03030001)
                                }
                            }
                        }

                        Method (JTCK, 1, Serialized)
                        {
                            If ((Arg0 == Zero))
                            {
                                SGOV (0x03050002, Zero)
                                SGDO (0x03050002)
                            }
                            Else
                            {
                                SGOV (0x03050002, One)
                                SGDO (0x03050002)
                            }
                        }

                        Method (JTDI, 1, Serialized)
                        {
                            If ((Arg0 == Zero))
                            {
                                SGOV (0x03050003, Zero)
                                SGDO (0x03050003)
                            }
                            Else
                            {
                                SGOV (0x03050003, One)
                                SGDO (0x03050003)
                            }
                        }

                        Method (JTDO, 0, Serialized)
                        {
                            SGDI (0x03050004)
                            Return (GGIV (0x03050004))
                        }
                    }
                }

                Device (DSB1)
                {
                    Name (_ADR, 0x00010000)  // _ADR: Address
                    Name (_SUN, One)  // _SUN: Slot User Number
                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                    Field (A1E0, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   32, 
                        BMIE,   3, 
                        Offset (0x18), 
                        PRIB,   8, 
                        SECB,   8, 
                        SUBB,   8, 
                        Offset (0x1E), 
                            ,   13, 
                        IABT,   1
                    }

                    OperationRegion (A1E1, PCI_Config, 0xC0, 0x40)
                    Field (A1E1, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        Offset (0x08), 
                        Offset (0x0A), 
                            ,   5, 
                        TPEN,   1, 
                        Offset (0x0C), 
                        SSPD,   4, 
                            ,   16, 
                        LACR,   1, 
                        Offset (0x10), 
                            ,   4, 
                        LDIS,   1, 
                        LRTN,   1, 
                        Offset (0x12), 
                        CSPD,   4, 
                        CWDT,   6, 
                            ,   1, 
                        LTRN,   1, 
                            ,   1, 
                        LACT,   1, 
                        Offset (0x14), 
                        Offset (0x30), 
                        TSPD,   4
                    }

                    OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
                    Field (A1E2, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        PSTA,   2
                    }

                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                    {
                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.SECB */
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }

                    Device (UPS0)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                        Field (ARE0, ByteAcc, NoLock, Preserve)
                        {
                            AVND,   16
                        }

                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                        {
                            If (OSDW ())
                            {
                                Return (One)
                            }

                            Return (Zero)
                        }

                        Device (DSB0)
                        {
                            Name (_ADR, Zero)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1, 
                                Offset (0x3E), 
                                    ,   6, 
                                SBRS,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB0.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (DEV0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                Method (_STA, 0, NotSerialized)  // _STA: Status
                                {
                                    Return (0x0F)
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }
                            }
                        }

                        Device (DSB3)
                        {
                            Name (_ADR, 0x00030000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB3.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (UPS0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                                Field (ARE0, ByteAcc, NoLock, Preserve)
                                {
                                    AVND,   16
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }

                                Device (DSB0)
                                {
                                    Name (_ADR, Zero)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1, 
                                        Offset (0x3E), 
                                            ,   6, 
                                        SBRS,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB3.UPS0.DSB0.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }
                                    }
                                }

                                Device (DSB3)
                                {
                                    Name (_ADR, 0x00030000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB3.UPS0.DSB3.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB4)
                                {
                                    Name (_ADR, 0x00040000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB3.UPS0.DSB4.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB5)
                                {
                                    Name (_ADR, 0x00050000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB3.UPS0.DSB5.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }

                                Device (DSB6)
                                {
                                    Name (_ADR, 0x00060000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB3.UPS0.DSB6.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }
                            }
                        }

                        Device (DSB4)
                        {
                            Name (_ADR, 0x00040000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB4.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (UPS0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                                Field (ARE0, ByteAcc, NoLock, Preserve)
                                {
                                    AVND,   16
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }

                                Device (DSB0)
                                {
                                    Name (_ADR, Zero)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1, 
                                        Offset (0x3E), 
                                            ,   6, 
                                        SBRS,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB4.UPS0.DSB0.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB3)
                                {
                                    Name (_ADR, 0x00030000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB4.UPS0.DSB3.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB4)
                                {
                                    Name (_ADR, 0x00040000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB4.UPS0.DSB4.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB5)
                                {
                                    Name (_ADR, 0x00050000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB4.UPS0.DSB5.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }

                                Device (DSB6)
                                {
                                    Name (_ADR, 0x00060000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB4.UPS0.DSB6.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }
                            }
                        }

                        Device (DSB5)
                        {
                            Name (_ADR, 0x00050000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB5.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }
                        }

                        Device (DSB6)
                        {
                            Name (_ADR, 0x00060000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB1.UPS0.DSB6.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }
                        }
                    }
                }

                Device (DSB2)
                {
                    Name (_ADR, 0x00020000)  // _ADR: Address
                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                    Field (A1E0, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   32, 
                        BMIE,   3, 
                        Offset (0x18), 
                        PRIB,   8, 
                        SECB,   8, 
                        SUBB,   8, 
                        Offset (0x1E), 
                            ,   13, 
                        IABT,   1
                    }

                    OperationRegion (A1E1, PCI_Config, 0xC0, 0x40)
                    Field (A1E1, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        Offset (0x08), 
                        Offset (0x0A), 
                            ,   5, 
                        TPEN,   1, 
                        Offset (0x0C), 
                        SSPD,   4, 
                            ,   16, 
                        LACR,   1, 
                        Offset (0x10), 
                            ,   4, 
                        LDIS,   1, 
                        LRTN,   1, 
                        Offset (0x12), 
                        CSPD,   4, 
                        CWDT,   6, 
                            ,   1, 
                        LTRN,   1, 
                            ,   1, 
                        LACT,   1, 
                        Offset (0x14), 
                        Offset (0x30), 
                        TSPD,   4
                    }

                    OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
                    Field (A1E2, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        PSTA,   2
                    }

                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                    {
                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB2.SECB */
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }

                    Name (IIP3, Zero)
                    Name (PRSR, Zero)
                    Name (PCIA, One)
                    Method (PCEU, 0, Serialized)
                    {
                        \_SB.PCI0.PEG2.UPSB.DSB2.PRSR = Zero
                        If ((\_SB.PCI0.PEG2.UPSB.DSB2.PSTA != Zero))
                        {
                            \_SB.PCI0.PEG2.UPSB.DSB2.PRSR = One
                            \_SB.PCI0.PEG2.UPSB.DSB2.PSTA = Zero
                        }

                        If ((\_SB.PCI0.PEG2.UPSB.DSB2.LDIS == One))
                        {
                            \_SB.PCI0.PEG2.UPSB.DSB2.PRSR = One
                            \_SB.PCI0.PEG2.UPSB.DSB2.LDIS = Zero
                        }
                    }

                    Method (PCDA, 0, Serialized)
                    {
                        If ((\_SB.PCI0.PEG2.UPSB.DSB2.POFF () != Zero))
                        {
                            \_SB.PCI0.PEG2.UPSB.DSB2.PCIA = Zero
                            \_SB.PCI0.PEG2.UPSB.DSB2.PSTA = 0x03
                            \_SB.PCI0.PEG2.UPSB.DSB2.LDIS = One
                            Local5 = (Timer + 0x00989680)
                            While ((Timer <= Local5))
                            {
                                If ((\_SB.PCI0.PEG2.UPSB.DSB2.LACR == One))
                                {
                                    If ((\_SB.PCI0.PEG2.UPSB.DSB2.LACT == Zero))
                                    {
                                        Break
                                    }
                                }
                                ElseIf ((\_SB.PCI0.PEG2.UPSB.DSB2.XHC3.AVND == 0xFFFFFFFF))
                                {
                                    Break
                                }

                                Sleep (0x0A)
                            }

                            \_SB.PCI0.PEG2.GXCI = Zero
                            \_SB.PCI0.PEG2.UGIO ()
                        }
                        Else
                        {
                        }

                        \_SB.PCI0.PEG2.UPSB.DSB2.IIP3 = One
                    }

                    Method (POFF, 0, Serialized)
                    {
                        Return (!\_SB.PCI0.PEG2.RUSB)
                    }

                    Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                    {
                        If (OSDW ())
                        {
                            PCEU ()
                        }
                    }

                    Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                    {
                        If (OSDW ())
                        {
                            PCDA ()
                        }
                    }

                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                    {
                        If (OSDW ())
                        {
                            If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b") /* Unknown UUID */))
                            {
                                Local0 = Package (0x02)
                                    {
                                        "PCIHotplugCapable", 
                                        Zero
                                    }
                                DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                                Return (Local0)
                            }
                        }

                        Return (Zero)
                    }

                    Device (XHC3)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Name (SDPC, Zero)
                        OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                        Field (A1E0, ByteAcc, NoLock, Preserve)
                        {
                            AVND,   32, 
                            BMIE,   3, 
                            Offset (0x18), 
                            PRIB,   8, 
                            SECB,   8, 
                            SUBB,   8, 
                            Offset (0x1E), 
                                ,   13, 
                            IABT,   1
                        }

                        Method (PCED, 0, Serialized)
                        {
                            \_SB.PCI0.PEG2.GXCI = One
                            If ((\_SB.PCI0.PEG2.UGIO () != Zero))
                            {
                                \_SB.PCI0.PEG2.UPSB.DSB2.PRSR = One
                            }

                            Local0 = Zero
                            Local1 = Zero
                            Local3 = Zero
                            While ((Local3 == Zero))
                            {
                                Local4 = Zero
                                Local5 = (Timer + 0x00989680)
                                If ((\_SB.PCI0.PEG2.UPSB.DSB2.PRSR != Zero))
                                {
                                    Local5 = (Timer + 0x00989680)
                                    While ((Timer <= Local5))
                                    {
                                        If ((\_SB.PCI0.PEG2.UPSB.DSB2.LACR == Zero))
                                        {
                                            If ((\_SB.PCI0.PEG2.UPSB.DSB2.LTRN != One))
                                            {
                                                Break
                                            }
                                        }
                                        ElseIf (((\_SB.PCI0.PEG2.UPSB.DSB2.LTRN != One) && (\_SB.PCI0.PEG2.UPSB.DSB2.LACT == One)))
                                        {
                                            Break
                                        }

                                        Sleep (0x0A)
                                    }

                                    Sleep (0x96)
                                }

                                While ((Timer <= Local5))
                                {
                                    If ((\_SB.PCI0.PEG2.UPSB.DSB2.XHC3.AVND != 0xFFFFFFFF))
                                    {
                                        Local4 = One
                                        \_SB.PCI0.PEG2.UPSB.DSB2.PCIA = One
                                        Break
                                    }

                                    Sleep (0x0A)
                                }

                                Local3 = One
                            }

                            \_SB.PCI0.PEG2.UPSB.DSB2.PRSR = Zero
                            \_SB.PCI0.PEG2.UPSB.DSB2.IIP3 = Zero
                        }

                        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                        {
                            If ((U2OP == One))
                            {
                                Local0 = Package (0x04)
                                    {
                                        "USBBusNumber", 
                                        One, 
                                        "UsbCompanionControllerPresent", 
                                        One
                                    }
                            }
                            Else
                            {
                                Local0 = Package (0x02)
                                    {
                                        "USBBusNumber", 
                                        One
                                    }
                            }

                            DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                            Return (Local0)
                        }

                        Name (HS, Package (0x01)
                        {
                            "XHC1"
                        })
                        Name (FS, Package (0x01)
                        {
                            "XHC1"
                        })
                        Name (LS, Package (0x01)
                        {
                            "XHC1"
                        })
                        Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                        {
                            If (OSDW ())
                            {
                                Return (Package (0x02)
                                {
                                    0x6D, 
                                    0x03
                                })
                            }
                            Else
                            {
                                Return (Package (0x02)
                                {
                                    0x6D, 
                                    0x03
                                })
                            }
                        }

                        Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                        {
                            If (OSDW ())
                            {
                                PCED ()
                            }
                        }

                        Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                        {
                        }

                        Method (_PSW, 1, Serialized)  // _PSW: Power State Wake
                        {
                            If ((\_SB.PCI0.LPCB.EC.SWTB == One))
                            {
                                If (\_SB.PCI0.LPCB.EC.ECOK)
                                {
                                    If (OSDW ())
                                    {
                                        If (Arg0)
                                        {
                                            \_SB.PCI0.LPCB.EC.EWTB = One
                                        }
                                        Else
                                        {
                                            \_SB.PCI0.LPCB.EC.EWTB = Zero
                                            \_SB.PCI0.LPCB.EC.LWTB = Zero
                                        }
                                    }
                                }
                            }
                            Else
                            {
                            }
                        }

                        Method (RTPC, 1, Serialized)
                        {
                            If (OSDW ())
                            {
                                If ((Arg0 <= One))
                                {
                                    \_SB.PCI0.PEG2.RUSB = Arg0
                                }
                            }

                            Return (Zero)
                        }

                        Method (MODU, 0, Serialized)
                        {
                            Return (\_SB.PCI0.PEG2.UPSB.MDUV)
                        }

                        Device (RHUB)
                        {
                            Name (_ADR, Zero)  // _ADR: Address
                            Device (SSP1)
                            {
                                Name (_ADR, 0x03)  // _ADR: Address
                                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                                {
                                    0xFF, 
                                    0x09, 
                                    Zero, 
                                    Zero
                                })
                                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                                {
                                    ToPLD (
                                        PLD_Revision           = 0x1,
                                        PLD_IgnoreColor        = 0x1,
                                        PLD_Red                = 0x0,
                                        PLD_Green              = 0x0,
                                        PLD_Blue               = 0x0,
                                        PLD_Width              = 0x0,
                                        PLD_Height             = 0x0,
                                        PLD_UserVisible        = 0x1,
                                        PLD_Dock               = 0x0,
                                        PLD_Lid                = 0x0,
                                        PLD_Panel              = "UNKNOWN",
                                        PLD_VerticalPosition   = "UPPER",
                                        PLD_HorizontalPosition = "LEFT",
                                        PLD_Shape              = "UNKNOWN",
                                        PLD_GroupOrientation   = 0x0,
                                        PLD_GroupToken         = 0x0,
                                        PLD_GroupPosition      = 0x0,
                                        PLD_Bay                = 0x0,
                                        PLD_Ejectable          = 0x0,
                                        PLD_EjectRequired      = 0x0,
                                        PLD_CabinetNumber      = 0x0,
                                        PLD_CardCageNumber     = 0x0,
                                        PLD_Reference          = 0x0,
                                        PLD_Rotation           = 0x0,
                                        PLD_Order              = 0x0)

                                })
                                Name (HS, Package (0x02)
                                {
                                    "XHC1", 
                                    One
                                })
                                Name (FS, Package (0x02)
                                {
                                    "XHC1", 
                                    One
                                })
                                Name (LS, Package (0x02)
                                {
                                    "XHC1", 
                                    One
                                })
                                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                                {
                                    If ((U2OP == One))
                                    {
                                        Local0 = Package (0x04)
                                            {
                                                "UsbCPortNumber", 
                                                0x03, 
                                                "UsbCompanionPortPresent", 
                                                One
                                            }
                                    }
                                    Else
                                    {
                                        Local0 = Package (0x02)
                                            {
                                                "UsbCPortNumber", 
                                                0x03
                                            }
                                    }

                                    DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                                    Return (Local0)
                                }
                            }

                            Device (SSP2)
                            {
                                Name (_ADR, 0x04)  // _ADR: Address
                                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                                {
                                    0xFF, 
                                    0x09, 
                                    Zero, 
                                    Zero
                                })
                                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                                {
                                    ToPLD (
                                        PLD_Revision           = 0x1,
                                        PLD_IgnoreColor        = 0x1,
                                        PLD_Red                = 0x0,
                                        PLD_Green              = 0x0,
                                        PLD_Blue               = 0x0,
                                        PLD_Width              = 0x0,
                                        PLD_Height             = 0x0,
                                        PLD_UserVisible        = 0x1,
                                        PLD_Dock               = 0x0,
                                        PLD_Lid                = 0x0,
                                        PLD_Panel              = "UNKNOWN",
                                        PLD_VerticalPosition   = "UPPER",
                                        PLD_HorizontalPosition = "LEFT",
                                        PLD_Shape              = "UNKNOWN",
                                        PLD_GroupOrientation   = 0x0,
                                        PLD_GroupToken         = 0x0,
                                        PLD_GroupPosition      = 0x0,
                                        PLD_Bay                = 0x0,
                                        PLD_Ejectable          = 0x0,
                                        PLD_EjectRequired      = 0x0,
                                        PLD_CabinetNumber      = 0x0,
                                        PLD_CardCageNumber     = 0x0,
                                        PLD_Reference          = 0x0,
                                        PLD_Rotation           = 0x0,
                                        PLD_Order              = 0x0)

                                })
                                Name (HS, Package (0x02)
                                {
                                    "XHC1", 
                                    0x02
                                })
                                Name (FS, Package (0x02)
                                {
                                    "XHC1", 
                                    0x02
                                })
                                Name (LS, Package (0x02)
                                {
                                    "XHC1", 
                                    0x02
                                })
                                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                                {
                                    If ((U2OP == One))
                                    {
                                        Local0 = Package (0x04)
                                            {
                                                "UsbCPortNumber", 
                                                0x04, 
                                                "UsbCompanionPortPresent", 
                                                One
                                            }
                                    }
                                    Else
                                    {
                                        Local0 = Package (0x04)
                                            {
                                                "UsbCPortNumber", 
                                                0x04, 
                                                "UsbCompanionPortPresent", 
                                                One
                                            }
                                    }

                                    DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                                    Return (Local0)
                                }
                            }
                        }
                    }
                }

                Device (DSB3)
                {
                    Name (_ADR, 0x00030000)  // _ADR: Address
                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                    Field (A1E0, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   32, 
                        BMIE,   3, 
                        Offset (0x18), 
                        PRIB,   8, 
                        SECB,   8, 
                        SUBB,   8, 
                        Offset (0x1E), 
                            ,   13, 
                        IABT,   1
                    }

                    OperationRegion (A1E1, PCI_Config, 0xC0, 0x40)
                    Field (A1E1, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        Offset (0x08), 
                        Offset (0x0A), 
                            ,   5, 
                        TPEN,   1, 
                        Offset (0x0C), 
                        SSPD,   4, 
                            ,   16, 
                        LACR,   1, 
                        Offset (0x10), 
                            ,   4, 
                        LDIS,   1, 
                        LRTN,   1, 
                        Offset (0x12), 
                        CSPD,   4, 
                        CWDT,   6, 
                            ,   1, 
                        LTRN,   1, 
                            ,   1, 
                        LACT,   1, 
                        Offset (0x14), 
                        Offset (0x30), 
                        TSPD,   4
                    }

                    OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
                    Field (A1E2, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        PSTA,   2
                    }

                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                    {
                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB3.SECB */
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }

                    Device (UPS0)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                        Field (ARE0, ByteAcc, NoLock, Preserve)
                        {
                            AVND,   16
                        }

                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                        {
                            If (OSDW ())
                            {
                                Return (One)
                            }

                            Return (Zero)
                        }

                        Device (DSB0)
                        {
                            Name (_ADR, Zero)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1, 
                                Offset (0x3E), 
                                    ,   6, 
                                SBRS,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB3.UPS0.DSB0.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (DEV0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                Method (_STA, 0, NotSerialized)  // _STA: Status
                                {
                                    Return (0x0F)
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }
                            }
                        }

                        Device (DSB3)
                        {
                            Name (_ADR, 0x00030000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB3.UPS0.DSB3.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (UPS0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                                Field (ARE0, ByteAcc, NoLock, Preserve)
                                {
                                    AVND,   16
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }

                                Device (DSB0)
                                {
                                    Name (_ADR, Zero)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1, 
                                        Offset (0x3E), 
                                            ,   6, 
                                        SBRS,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB3.UPS0.DSB3.UPS0.DSB0.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }
                                    }
                                }

                                Device (DSB3)
                                {
                                    Name (_ADR, 0x00030000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB3.UPS0.DSB3.UPS0.DSB3.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB4)
                                {
                                    Name (_ADR, 0x00040000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB3.UPS0.DSB3.UPS0.DSB4.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB5)
                                {
                                    Name (_ADR, 0x00050000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB3.UPS0.DSB3.UPS0.DSB5.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }

                                Device (DSB6)
                                {
                                    Name (_ADR, 0x00060000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB3.UPS0.DSB3.UPS0.DSB6.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }
                            }
                        }

                        Device (DSB4)
                        {
                            Name (_ADR, 0x00040000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB3.UPS0.DSB4.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (UPS0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                                Field (ARE0, ByteAcc, NoLock, Preserve)
                                {
                                    AVND,   16
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }

                                Device (DSB0)
                                {
                                    Name (_ADR, Zero)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1, 
                                        Offset (0x3E), 
                                            ,   6, 
                                        SBRS,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB3.UPS0.DSB4.UPS0.DSB0.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB3)
                                {
                                    Name (_ADR, 0x00030000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB3.UPS0.DSB4.UPS0.DSB3.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB4)
                                {
                                    Name (_ADR, 0x00040000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB3.UPS0.DSB4.UPS0.DSB4.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB5)
                                {
                                    Name (_ADR, 0x00050000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB3.UPS0.DSB4.UPS0.DSB5.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }

                                Device (DSB6)
                                {
                                    Name (_ADR, 0x00060000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB3.UPS0.DSB4.UPS0.DSB6.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }
                            }
                        }

                        Device (DSB5)
                        {
                            Name (_ADR, 0x00050000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB3.UPS0.DSB5.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }
                        }

                        Device (DSB6)
                        {
                            Name (_ADR, 0x00060000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB3.UPS0.DSB6.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }
                        }
                    }
                }

                Device (DSB4)
                {
                    Name (_ADR, 0x00040000)  // _ADR: Address
                    Name (_SUN, 0x02)  // _SUN: Slot User Number
                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                    Field (A1E0, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   32, 
                        BMIE,   3, 
                        Offset (0x18), 
                        PRIB,   8, 
                        SECB,   8, 
                        SUBB,   8, 
                        Offset (0x1E), 
                            ,   13, 
                        IABT,   1
                    }

                    OperationRegion (A1E1, PCI_Config, 0xC0, 0x40)
                    Field (A1E1, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        Offset (0x08), 
                        Offset (0x0A), 
                            ,   5, 
                        TPEN,   1, 
                        Offset (0x0C), 
                        SSPD,   4, 
                            ,   16, 
                        LACR,   1, 
                        Offset (0x10), 
                            ,   4, 
                        LDIS,   1, 
                        LRTN,   1, 
                        Offset (0x12), 
                        CSPD,   4, 
                        CWDT,   6, 
                            ,   1, 
                        LTRN,   1, 
                            ,   1, 
                        LACT,   1, 
                        Offset (0x14), 
                        Offset (0x30), 
                        TSPD,   4
                    }

                    OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
                    Field (A1E2, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        PSTA,   2
                    }

                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                    {
                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.SECB */
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }

                    Device (UPS0)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                        Field (ARE0, ByteAcc, NoLock, Preserve)
                        {
                            AVND,   16
                        }

                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                        {
                            If (OSDW ())
                            {
                                Return (One)
                            }

                            Return (Zero)
                        }

                        Device (DSB0)
                        {
                            Name (_ADR, Zero)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1, 
                                Offset (0x3E), 
                                    ,   6, 
                                SBRS,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB0.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (DEV0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                Method (_STA, 0, NotSerialized)  // _STA: Status
                                {
                                    Return (0x0F)
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }
                            }
                        }

                        Device (DSB3)
                        {
                            Name (_ADR, 0x00030000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB3.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (UPS0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                                Field (ARE0, ByteAcc, NoLock, Preserve)
                                {
                                    AVND,   16
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }

                                Device (DSB0)
                                {
                                    Name (_ADR, Zero)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1, 
                                        Offset (0x3E), 
                                            ,   6, 
                                        SBRS,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB3.UPS0.DSB0.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }
                                    }
                                }

                                Device (DSB3)
                                {
                                    Name (_ADR, 0x00030000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB3.UPS0.DSB3.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB4)
                                {
                                    Name (_ADR, 0x00040000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB3.UPS0.DSB4.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB5)
                                {
                                    Name (_ADR, 0x00050000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB3.UPS0.DSB5.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }

                                Device (DSB6)
                                {
                                    Name (_ADR, 0x00060000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB3.UPS0.DSB6.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }
                            }
                        }

                        Device (DSB4)
                        {
                            Name (_ADR, 0x00040000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB4.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (UPS0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                                Field (ARE0, ByteAcc, NoLock, Preserve)
                                {
                                    AVND,   16
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }

                                Device (DSB0)
                                {
                                    Name (_ADR, Zero)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1, 
                                        Offset (0x3E), 
                                            ,   6, 
                                        SBRS,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB4.UPS0.DSB0.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB3)
                                {
                                    Name (_ADR, 0x00030000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB4.UPS0.DSB3.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB4)
                                {
                                    Name (_ADR, 0x00040000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB4.UPS0.DSB4.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB5)
                                {
                                    Name (_ADR, 0x00050000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB4.UPS0.DSB5.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }

                                Device (DSB6)
                                {
                                    Name (_ADR, 0x00060000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB4.UPS0.DSB6.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }
                            }
                        }

                        Device (DSB5)
                        {
                            Name (_ADR, 0x00050000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB5.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }
                        }

                        Device (DSB6)
                        {
                            Name (_ADR, 0x00060000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB4.UPS0.DSB6.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }
                        }
                    }
                }

                Device (DSB5)
                {
                    Name (_ADR, 0x00050000)  // _ADR: Address
                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                    Field (A1E0, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   32, 
                        BMIE,   3, 
                        Offset (0x18), 
                        PRIB,   8, 
                        SECB,   8, 
                        SUBB,   8, 
                        Offset (0x1E), 
                            ,   13, 
                        IABT,   1
                    }

                    OperationRegion (A1E1, PCI_Config, 0xC0, 0x40)
                    Field (A1E1, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        Offset (0x08), 
                        Offset (0x0A), 
                            ,   5, 
                        TPEN,   1, 
                        Offset (0x0C), 
                        SSPD,   4, 
                            ,   16, 
                        LACR,   1, 
                        Offset (0x10), 
                            ,   4, 
                        LDIS,   1, 
                        LRTN,   1, 
                        Offset (0x12), 
                        CSPD,   4, 
                        CWDT,   6, 
                            ,   1, 
                        LTRN,   1, 
                            ,   1, 
                        LACT,   1, 
                        Offset (0x14), 
                        Offset (0x30), 
                        TSPD,   4
                    }

                    OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
                    Field (A1E2, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        PSTA,   2
                    }

                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                    {
                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB5.SECB */
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }

                    Device (UPS0)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                        Field (ARE0, ByteAcc, NoLock, Preserve)
                        {
                            AVND,   16
                        }

                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                        {
                            If (OSDW ())
                            {
                                Return (One)
                            }

                            Return (Zero)
                        }

                        Device (DSB0)
                        {
                            Name (_ADR, Zero)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1, 
                                Offset (0x3E), 
                                    ,   6, 
                                SBRS,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB5.UPS0.DSB0.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (DEV0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                Method (_STA, 0, NotSerialized)  // _STA: Status
                                {
                                    Return (0x0F)
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }
                            }
                        }

                        Device (DSB3)
                        {
                            Name (_ADR, 0x00030000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB5.UPS0.DSB3.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (UPS0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                                Field (ARE0, ByteAcc, NoLock, Preserve)
                                {
                                    AVND,   16
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }

                                Device (DSB0)
                                {
                                    Name (_ADR, Zero)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1, 
                                        Offset (0x3E), 
                                            ,   6, 
                                        SBRS,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB5.UPS0.DSB3.UPS0.DSB0.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }
                                    }
                                }

                                Device (DSB3)
                                {
                                    Name (_ADR, 0x00030000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB5.UPS0.DSB3.UPS0.DSB3.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB4)
                                {
                                    Name (_ADR, 0x00040000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB5.UPS0.DSB3.UPS0.DSB4.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB5)
                                {
                                    Name (_ADR, 0x00050000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB5.UPS0.DSB3.UPS0.DSB5.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }

                                Device (DSB6)
                                {
                                    Name (_ADR, 0x00060000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB5.UPS0.DSB3.UPS0.DSB6.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }
                            }
                        }

                        Device (DSB4)
                        {
                            Name (_ADR, 0x00040000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB5.UPS0.DSB4.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }

                            Device (UPS0)
                            {
                                Name (_ADR, Zero)  // _ADR: Address
                                OperationRegion (ARE0, PCI_Config, Zero, 0x04)
                                Field (ARE0, ByteAcc, NoLock, Preserve)
                                {
                                    AVND,   16
                                }

                                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                {
                                    If (OSDW ())
                                    {
                                        Return (One)
                                    }

                                    Return (Zero)
                                }

                                Device (DSB0)
                                {
                                    Name (_ADR, Zero)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1, 
                                        Offset (0x3E), 
                                            ,   6, 
                                        SBRS,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB5.UPS0.DSB4.UPS0.DSB0.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB3)
                                {
                                    Name (_ADR, 0x00030000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB5.UPS0.DSB4.UPS0.DSB3.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB4)
                                {
                                    Name (_ADR, 0x00040000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB5.UPS0.DSB4.UPS0.DSB4.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }

                                    Device (DEV0)
                                    {
                                        Name (_ADR, Zero)  // _ADR: Address
                                        Method (_STA, 0, NotSerialized)  // _STA: Status
                                        {
                                            Return (0x0F)
                                        }

                                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                        {
                                            If (OSDW ())
                                            {
                                                Return (One)
                                            }

                                            Return (Zero)
                                        }
                                    }
                                }

                                Device (DSB5)
                                {
                                    Name (_ADR, 0x00050000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB5.UPS0.DSB4.UPS0.DSB5.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }

                                Device (DSB6)
                                {
                                    Name (_ADR, 0x00060000)  // _ADR: Address
                                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                                    Field (A1E0, ByteAcc, NoLock, Preserve)
                                    {
                                        AVND,   32, 
                                        BMIE,   3, 
                                        Offset (0x18), 
                                        PRIB,   8, 
                                        SECB,   8, 
                                        SUBB,   8, 
                                        Offset (0x1E), 
                                            ,   13, 
                                        IABT,   1
                                    }

                                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                                    {
                                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB5.UPS0.DSB4.UPS0.DSB6.SECB */
                                    }

                                    Method (_STA, 0, NotSerialized)  // _STA: Status
                                    {
                                        Return (0x0F)
                                    }

                                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                                    {
                                        If (OSDW ())
                                        {
                                            Return (One)
                                        }

                                        Return (Zero)
                                    }
                                }
                            }
                        }

                        Device (DSB5)
                        {
                            Name (_ADR, 0x00050000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB5.UPS0.DSB5.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }
                        }

                        Device (DSB6)
                        {
                            Name (_ADR, 0x00060000)  // _ADR: Address
                            OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                            Field (A1E0, ByteAcc, NoLock, Preserve)
                            {
                                AVND,   32, 
                                BMIE,   3, 
                                Offset (0x18), 
                                PRIB,   8, 
                                SECB,   8, 
                                SUBB,   8, 
                                Offset (0x1E), 
                                    ,   13, 
                                IABT,   1
                            }

                            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                            {
                                Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB5.UPS0.DSB6.SECB */
                            }

                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                            {
                                If (OSDW ())
                                {
                                    Return (One)
                                }

                                Return (Zero)
                            }
                        }
                    }
                }

                Device (DSB6)
                {
                    Name (_ADR, 0x00060000)  // _ADR: Address
                    OperationRegion (A1E0, PCI_Config, Zero, 0x40)
                    Field (A1E0, ByteAcc, NoLock, Preserve)
                    {
                        AVND,   32, 
                        BMIE,   3, 
                        Offset (0x18), 
                        PRIB,   8, 
                        SECB,   8, 
                        SUBB,   8, 
                        Offset (0x1E), 
                            ,   13, 
                        IABT,   1
                    }

                    OperationRegion (A1E1, PCI_Config, 0xC0, 0x40)
                    Field (A1E1, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        Offset (0x08), 
                        Offset (0x0A), 
                            ,   5, 
                        TPEN,   1, 
                        Offset (0x0C), 
                        SSPD,   4, 
                            ,   16, 
                        LACR,   1, 
                        Offset (0x10), 
                            ,   4, 
                        LDIS,   1, 
                        LRTN,   1, 
                        Offset (0x12), 
                        CSPD,   4, 
                        CWDT,   6, 
                            ,   1, 
                        LTRN,   1, 
                            ,   1, 
                        LACT,   1, 
                        Offset (0x14), 
                        Offset (0x30), 
                        TSPD,   4
                    }

                    OperationRegion (A1E2, PCI_Config, 0x80, 0x08)
                    Field (A1E2, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0x01), 
                        Offset (0x02), 
                        Offset (0x04), 
                        PSTA,   2
                    }

                    Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
                    {
                        Return (SECB) /* \_SB_.PCI0.PEG2.UPSB.DSB6.SECB */
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }
                }

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {
                    If (OSDW ())
                    {
                        If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b") /* Unknown UUID */))
                        {
                            Local0 = Package (0x02)
                                {
                                    "PCI-Thunderbolt", 
                                    One
                                }
                            DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
                            Return (Local0)
                        }
                    }

                    Return (Zero)
                }
            }
        }
    }
}



SSDT6
-----
DefinitionBlock ("", "SSDT", 2, "CpuRef", "CpuSsdt", 0x00003000)
{
    External (_PR_.CPU0, DeviceObj)
    External (_PR_.CPU1, DeviceObj)
    External (_PR_.CPU2, DeviceObj)
    External (_PR_.CPU3, DeviceObj)
    External (_PR_.CPU4, DeviceObj)
    External (_PR_.CPU5, DeviceObj)
    External (_PR_.CPU6, DeviceObj)
    External (_PR_.CPU7, DeviceObj)
    External (_PR_.CPU8, DeviceObj)
    External (_PR_.CPU9, DeviceObj)
    External (_PR_.CPUA, DeviceObj)
    External (_PR_.CPUB, DeviceObj)
    External (_PR_.CPUC, DeviceObj)
    External (_PR_.CPUD, DeviceObj)
    External (_PR_.CPUE, DeviceObj)
    External (_PR_.CPUF, DeviceObj)
    External (OSYS, UnknownObj)

    Scope (\)
    {
        Name (SSDT, Package (0x1B)
        {
            "CPU0IST ", 
            0x7AED6598, 
            0x0000051E, 
            "APIST   ", 
            0x7AED3698, 
            0x000005FC, 
            "CPU0CST ", 
            0x7AED1C18, 
            0x00000370, 
            "APCST   ", 
            0x7AED0C98, 
            0x0000024A, 
            "CPU0HWP ", 
            0x7AED5C18, 
            0x00000128, 
            "APHWP   ", 
            0x7AED3D18, 
            0x00000257, 
            "HWPLVT  ", 
            0x7AED4C18, 
            0x0000029B, 
            "CPU0PSD ", 
            0x7AED5D98, 
            0x000000F4, 
            "APPSD   ", 
            0x7AED2018, 
            0x00000AB0
        })
        Name (\PC00, 0x80000000)
        Name (\PC01, 0x80000000)
        Name (\PC02, 0x80000000)
        Name (\PC03, 0x80000000)
        Name (\PC04, 0x80000000)
        Name (\PC05, 0x80000000)
        Name (\PC06, 0x80000000)
        Name (\PC07, 0x80000000)
        Name (\PC08, 0x80000000)
        Name (\PC09, 0x80000000)
        Name (\PC10, 0x80000000)
        Name (\PC11, 0x80000000)
        Name (\PC12, 0x80000000)
        Name (\PC13, 0x80000000)
        Name (\PC14, 0x80000000)
        Name (\PC15, 0x80000000)
        Name (\SDTL, Zero)
    }

    Scope (\_PR)
    {
        Name (CTPC, Zero)
        Name (OSCP, Zero)
        OperationRegion (PNVS, SystemMemory, 0x68184000, 0x0070)
        Field (PNVS, AnyAcc, Lock, Preserve)
        {
            PGRV,   8, 
            CFGD,   32, 
            Offset (0x06), 
            ACRT,   8, 
            APSV,   8, 
            AAC0,   8, 
            CPID,   32, 
            CPPC,   8, 
            CLVL,   8, 
            CBMI,   8, 
            PL10,   16, 
            PL11,   16, 
            PL12,   16, 
            PL20,   16, 
            PL21,   16, 
            PL22,   16, 
            PLW0,   8, 
            PLW1,   8, 
            PLW2,   8, 
            CTC0,   8, 
            CTC1,   8, 
            CTC2,   8, 
            TAR0,   8, 
            TAR1,   8, 
            TAR2,   8, 
            PPC0,   8, 
            PPC1,   8, 
            PPC2,   8, 
            Offset (0x29), 
            C6MW,   8, 
            C7MW,   8, 
            CDMW,   8, 
            Offset (0x2E), 
            C6LT,   16, 
            C7LT,   16, 
            CDLT,   16, 
            CDLV,   16, 
            CDPW,   16, 
            MPMF,   8, 
            DTSE,   8, 
            DTS1,   8, 
            DTS2,   8, 
            DTSF,   8, 
            PDTS,   8, 
            PKGA,   8, 
            DTS3,   8, 
            DTS4,   8, 
            BGMA,   64, 
            BGMS,   8, 
            BGIA,   16, 
            BGIL,   16, 
            DSIA,   16, 
            DSIL,   8, 
            DSAE,   8, 
            EPCS,   8, 
            EMNA,   64, 
            ELNG,   64, 
            HWPV,   8, 
            HWPI,   8, 
            DTSI,   8, 
            HWPS,   8, 
            LMPS,   8, 
            ITBM,   8, 
            ITBD,   8, 
            ITBI,   8, 
            ITBS,   8, 
            OBIN,   8, 
            C3MW,   8, 
            C3LT,   16
        }

        OperationRegion (IO_D, SystemIO, \_PR.DSIA, \_PR.DSIL)
        Field (IO_D, ByteAcc, NoLock, Preserve)
        {
            TRPD,   8
        }

        OperationRegion (IO_P, SystemIO, \_PR.BGIA, \_PR.BGIL)
        Field (IO_P, ByteAcc, NoLock, Preserve)
        {
            TRPF,   8
        }
    }

    Scope (\_PR.CPU0)
    {
        Name (HI0, Zero)
        Name (HC0, Zero)
        Name (HW0, Zero)
        Name (HW2, Zero)
        Name (HP0, Zero)
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (CPDC, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, REVS)
            CreateDWordField (Arg0, 0x04, SIZE)
            Local0 = SizeOf (Arg0)
            Local1 = (Local0 - 0x08)
            CreateField (Arg0, 0x40, (Local1 * 0x08), TEMP)
            Local3 = Buffer (0x04)
                {
                     0x00, 0x00, 0x00, 0x00                           // ....
                }
            Concatenate (Local3, TEMP, Local2)
            Return (COSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */, REVS, SIZE, Local2))
        }

        Method (COSC, 4, NotSerialized)
        {
            CreateDWordField (Arg3, Zero, STS0)
            CreateDWordField (Arg0, Zero, IID0)
            CreateDWordField (Arg0, 0x04, IID1)
            CreateDWordField (Arg0, 0x08, IID2)
            CreateDWordField (Arg0, 0x0C, IID3)
            Local0 = ToUUID ("4077a616-290c-47be-9ebd-d87058713953") /* Unknown UUID */
            CreateDWordField (Local0, Zero, EID0)
            CreateDWordField (Local0, 0x04, EID1)
            CreateDWordField (Local0, 0x08, EID2)
            CreateDWordField (Local0, 0x0C, EID3)
            If (!(((IID0 == EID0) && (IID1 == EID1)) && ((
                IID2 == EID2) && (IID3 == EID3))))
            {
                STS0 = 0x06
                Return (Arg3)
            }

            If ((Arg1 != One))
            {
                STS0 = 0x0A
                Return (Arg3)
            }

            Return (Arg3)
        }

        Method (GCAP, 1, Serialized)
        {
            CreateDWordField (Arg0, Zero, STS0)
            CreateDWordField (Arg0, 0x04, CAP0)
            If (((STS0 == 0x06) || (STS0 == 0x0A)))
            {
                Return (Zero)
            }

            If ((STS0 & One))
            {
                CAP0 &= 0x0BFF
                Return (Zero)
            }

            PC00 = ((PC00 & 0x7FFFFFFF) | CAP0) /* \_PR_.CPU0.GCAP.CAP0 */
            If ((CFGD & 0x7A))
            {
                If ((((CFGD & 0x0200) && (PC00 & 0x18)) && !
                    (SDTL & 0x02)))
                {
                    SDTL |= 0x02
                    OperationRegion (CST0, SystemMemory, DerefOf (SSDT [0x07]), DerefOf (SSDT [0x08]))
                    Load (CST0, HC0) /* \_PR_.CPU0.HC0_ */
                }
            }

            If (((PC00 & 0x09) == 0x09))
            {
                If (((CFGD & One) && !(SDTL & 0x08)))
                {
                    SDTL |= 0x08
                    OperationRegion (IST0, SystemMemory, DerefOf (SSDT [One]), DerefOf (SSDT [0x02]))
                    Load (IST0, HI0) /* \_PR_.CPU0.HI0_ */
                }
            }

            If ((((CFGD & One) || (CFGD & 0x00400000)) && !
                (SDTL & 0x0100)))
            {
                SDTL |= 0x0100
                OperationRegion (PSD0, SystemMemory, DerefOf (SSDT [0x16]), DerefOf (SSDT [0x17]))
                Load (PSD0, HP0) /* \_PR_.CPU0.HP0_ */
            }

            If ((OSYS >= 0x07DF))
            {
                If (((CFGD & 0x00400000) && !(SDTL & 0x40)))
                {
                    If ((\_PR.OSCP & 0x40))
                    {
                        SDTL |= 0x40
                        OperationRegion (HWP0, SystemMemory, DerefOf (SSDT [0x0D]), DerefOf (SSDT [0x0E]))
                        Load (HWP0, HW0) /* \_PR_.CPU0.HW0_ */
                        If ((CFGD & 0x00800000))
                        {
                            OperationRegion (HWPL, SystemMemory, DerefOf (SSDT [0x13]), DerefOf (SSDT [0x14]))
                            Load (HWPL, HW2) /* \_PR_.CPU0.HW2_ */
                        }
                    }

                    If ((\_PR.OSCP & 0x20))
                    {
                        If (!(\_PR.OSCP & 0x40))
                        {
                            HWPV = Zero
                        }
                    }

                    If ((\_PR.OSCP & 0x40))
                    {
                        HWPV = 0x02
                    }
                }
            }

            OperationRegion (SMIP, SystemIO, 0xB2, One)
            Field (SMIP, ByteAcc, NoLock, Preserve)
            {
                IOB2,   8
            }

            If (!(PC00 & 0x1000))
            {
                IOB2 = HWPS /* \_PR_.HWPS */
            }

            If ((((\_PR.CFGD & 0x02000000) && (\_PR.CFGD & 0x00400000)) && 
                (\_PR.OBIN != Zero)))
            {
                If ((\_PR.OSCP & 0x1000))
                {
                    IOB2 = ITBS /* \_PR_.ITBS */
                }
            }

            Return (Zero)
        }

        Method (DTGP, 5, NotSerialized)
        {
            If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b") /* Unknown UUID */))
            {
                If ((Arg1 == One))
                {
                    If ((Arg2 == Zero))
                    {
                        Arg4 = Buffer (One)
                            {
                                 0x03                                             // .
                            }
                        Return (One)
                    }

                    If ((Arg2 == One))
                    {
                        Return (One)
                    }
                }
            }

            Arg4 = Buffer (One)
                {
                     0x00                                             // .
                }
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b") /* Unknown UUID */))
            {
                Debug = "Writing plugin-type to Registry!"
                Local0 = Package (0x02)
                    {
                        "plugin-type", 
                        One
                    }
                DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))
            }
            Else
            {
                Local0 = Package (0x02)
                    {
                        "No-Plugin", 
                        Zero
                    }
            }

            Return (Local0)
        }
    }

    Scope (\_PR.CPU1)
    {
        Name (HI1, Zero)
        Name (HC1, Zero)
        Name (HW1, Zero)
        Name (HP1, Zero)
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, ST01)
            CreateDWordField (Arg0, 0x04, CP01)
            If (((ST01 == 0x06) || (ST01 == 0x0A)))
            {
                Return (Zero)
            }

            If ((ST01 & One))
            {
                CP01 &= 0x0BFF
                Return (Zero)
            }

            PC01 = ((PC01 & 0x7FFFFFFF) | CP01) /* \_PR_.CPU1.GCAP.CP01 */
            If (((PC01 & 0x09) == 0x09))
            {
                APPT ()
            }

            If ((\_PR.OSCP & 0x20))
            {
                HWPT ()
            }

            If ((((PC01 & 0x09) == 0x09) || (\_PR.OSCP & 0x20)))
            {
                APPS ()
            }

            If ((PC01 & 0x18))
            {
                APCT ()
            }

            PC00 = PC01 /* \PC01 */
            Return (Zero)
        }

        Method (APCT, 0, Serialized)
        {
            If (((CFGD & 0x7A) && !(SDTL & 0x20)))
            {
                SDTL |= 0x20
                OperationRegion (CST1, SystemMemory, DerefOf (SSDT [0x0A]), DerefOf (SSDT [0x0B]))
                Load (CST1, HC1) /* \_PR_.CPU1.HC1_ */
            }
        }

        Method (APPT, 0, Serialized)
        {
            If (((CFGD & One) && !(SDTL & 0x10)))
            {
                SDTL |= 0x10
                OperationRegion (IST1, SystemMemory, DerefOf (SSDT [0x04]), DerefOf (SSDT [0x05]))
                Load (IST1, HI1) /* \_PR_.CPU1.HI1_ */
            }
        }

        Method (APPS, 0, Serialized)
        {
            If ((((CFGD & One) || (CFGD & 0x00400000)) && !
                (SDTL & 0x0200)))
            {
                SDTL |= 0x0200
                OperationRegion (PSD1, SystemMemory, DerefOf (SSDT [0x19]), DerefOf (SSDT [0x1A]))
                Load (PSD1, HP1) /* \_PR_.CPU1.HP1_ */
            }
        }

        Method (HWPT, 0, Serialized)
        {
            If ((OSYS >= 0x07DF))
            {
                If (((CFGD & 0x00400000) && !(SDTL & 0x80)))
                {
                    SDTL |= 0x80
                    OperationRegion (HWP1, SystemMemory, DerefOf (SSDT [0x10]), DerefOf (SSDT [0x11]))
                    Load (HWP1, HW1) /* \_PR_.CPU1.HW1_ */
                }
            }
        }
    }

    Scope (\_PR.CPU2)
    {
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, ST02)
            CreateDWordField (Arg0, 0x04, CP02)
            If (((ST02 == 0x06) || (ST02 == 0x0A)))
            {
                Return (Zero)
            }

            If ((ST02 & One))
            {
                CP02 &= 0x0BFF
                Return (Zero)
            }

            PC02 = ((PC02 & 0x7FFFFFFF) | CP02) /* \_PR_.CPU2.GCAP.CP02 */
            If (((PC02 & 0x09) == 0x09))
            {
                \_PR.CPU1.APPT ()
            }

            If ((\_PR.OSCP & 0x20))
            {
                \_PR.CPU1.HWPT ()
            }

            If ((((PC02 & 0x09) == 0x09) || (\_PR.OSCP & 0x20)))
            {
                \_PR.CPU1.APPS ()
            }

            If ((PC02 & 0x18))
            {
                \_PR.CPU1.APCT ()
            }

            PC00 = PC02 /* \PC02 */
            Return (Zero)
        }
    }

    Scope (\_PR.CPU3)
    {
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, ST03)
            CreateDWordField (Arg0, 0x04, CP03)
            If (((ST03 == 0x06) || (ST03 == 0x0A)))
            {
                Return (Zero)
            }

            If ((ST03 & One))
            {
                CP03 &= 0x0BFF
                Return (Zero)
            }

            PC03 = ((PC03 & 0x7FFFFFFF) | CP03) /* \_PR_.CPU3.GCAP.CP03 */
            If (((PC03 & 0x09) == 0x09))
            {
                \_PR.CPU1.APPT ()
            }

            If ((\_PR.OSCP & 0x20))
            {
                \_PR.CPU1.HWPT ()
            }

            If ((((PC03 & 0x09) == 0x09) || (\_PR.OSCP & 0x20)))
            {
                \_PR.CPU1.APPS ()
            }

            If ((PC03 & 0x18))
            {
                \_PR.CPU1.APCT ()
            }

            PC00 = PC03 /* \PC03 */
            Return (Zero)
        }
    }

    Scope (\_PR.CPU4)
    {
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, ST04)
            CreateDWordField (Arg0, 0x04, CP04)
            If (((ST04 == 0x06) || (ST04 == 0x0A)))
            {
                Return (Zero)
            }

            If ((ST04 & One))
            {
                CP04 &= 0x0BFF
                Return (Zero)
            }

            PC04 = ((PC04 & 0x7FFFFFFF) | CP04) /* \_PR_.CPU4.GCAP.CP04 */
            If (((PC04 & 0x09) == 0x09))
            {
                \_PR.CPU1.APPT ()
            }

            If ((\_PR.OSCP & 0x20))
            {
                \_PR.CPU1.HWPT ()
            }

            If ((((PC04 & 0x09) == 0x09) || (\_PR.OSCP & 0x20)))
            {
                \_PR.CPU1.APPS ()
            }

            If ((PC04 & 0x18))
            {
                \_PR.CPU1.APCT ()
            }

            PC00 = PC04 /* \PC04 */
            Return (Zero)
        }
    }

    Scope (\_PR.CPU5)
    {
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, ST05)
            CreateDWordField (Arg0, 0x04, CP05)
            If (((ST05 == 0x06) || (ST05 == 0x0A)))
            {
                Return (Zero)
            }

            If ((ST05 & One))
            {
                CP05 &= 0x0BFF
                Return (Zero)
            }

            PC05 = ((PC05 & 0x7FFFFFFF) | CP05) /* \_PR_.CPU5.GCAP.CP05 */
            If (((PC05 & 0x09) == 0x09))
            {
                \_PR.CPU1.APPT ()
            }

            If ((\_PR.OSCP & 0x20))
            {
                \_PR.CPU1.HWPT ()
            }

            If ((((PC05 & 0x09) == 0x09) || (\_PR.OSCP & 0x20)))
            {
                \_PR.CPU1.APPS ()
            }

            If ((PC05 & 0x18))
            {
                \_PR.CPU1.APCT ()
            }

            PC00 = PC05 /* \PC05 */
            Return (Zero)
        }
    }

    Scope (\_PR.CPU6)
    {
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, ST06)
            CreateDWordField (Arg0, 0x04, CP06)
            If (((ST06 == 0x06) || (ST06 == 0x0A)))
            {
                Return (Zero)
            }

            If ((ST06 & One))
            {
                CP06 &= 0x0BFF
                Return (Zero)
            }

            PC06 = ((PC06 & 0x7FFFFFFF) | CP06) /* \_PR_.CPU6.GCAP.CP06 */
            If (((PC06 & 0x09) == 0x09))
            {
                \_PR.CPU1.APPT ()
            }

            If ((\_PR.OSCP & 0x20))
            {
                \_PR.CPU1.HWPT ()
            }

            If ((((PC06 & 0x09) == 0x09) || (\_PR.OSCP & 0x20)))
            {
                \_PR.CPU1.APPS ()
            }

            If ((PC06 & 0x18))
            {
                \_PR.CPU1.APCT ()
            }

            PC00 = PC06 /* \PC06 */
            Return (Zero)
        }
    }

    Scope (\_PR.CPU7)
    {
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, ST07)
            CreateDWordField (Arg0, 0x04, CP07)
            If (((ST07 == 0x06) || (ST07 == 0x0A)))
            {
                Return (Zero)
            }

            If ((ST07 & One))
            {
                CP07 &= 0x0BFF
                Return (Zero)
            }

            PC07 = ((PC07 & 0x7FFFFFFF) | CP07) /* \_PR_.CPU7.GCAP.CP07 */
            If (((PC07 & 0x09) == 0x09))
            {
                \_PR.CPU1.APPT ()
            }

            If ((\_PR.OSCP & 0x20))
            {
                \_PR.CPU1.HWPT ()
            }

            If ((((PC07 & 0x09) == 0x09) || (\_PR.OSCP & 0x20)))
            {
                \_PR.CPU1.APPS ()
            }

            If ((PC07 & 0x18))
            {
                \_PR.CPU1.APCT ()
            }

            PC00 = PC07 /* \PC07 */
            Return (Zero)
        }
    }

    Scope (\_PR.CPU8)
    {
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, ST08)
            CreateDWordField (Arg0, 0x04, CP08)
            If (((ST08 == 0x06) || (ST08 == 0x0A)))
            {
                Return (Zero)
            }

            If ((ST08 & One))
            {
                CP08 &= 0x0BFF
                Return (Zero)
            }

            PC08 = ((PC08 & 0x7FFFFFFF) | CP08) /* \_PR_.CPU8.GCAP.CP08 */
            If (((PC08 & 0x09) == 0x09))
            {
                \_PR.CPU1.APPT ()
            }

            If ((\_PR.OSCP & 0x20))
            {
                \_PR.CPU1.HWPT ()
            }

            If ((((PC08 & 0x09) == 0x09) || (\_PR.OSCP & 0x20)))
            {
                \_PR.CPU1.APPS ()
            }

            If ((PC08 & 0x18))
            {
                \_PR.CPU1.APCT ()
            }

            PC00 = PC08 /* \PC08 */
            Return (Zero)
        }
    }

    Scope (\_PR.CPU9)
    {
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, ST09)
            CreateDWordField (Arg0, 0x04, CP09)
            If (((ST09 == 0x06) || (ST09 == 0x0A)))
            {
                Return (Zero)
            }

            If ((ST09 & One))
            {
                CP09 &= 0x0BFF
                Return (Zero)
            }

            PC09 = ((PC09 & 0x7FFFFFFF) | CP09) /* \_PR_.CPU9.GCAP.CP09 */
            If (((PC09 & 0x09) == 0x09))
            {
                \_PR.CPU1.APPT ()
            }

            If ((\_PR.OSCP & 0x20))
            {
                \_PR.CPU1.HWPT ()
            }

            If ((((PC09 & 0x09) == 0x09) || (\_PR.OSCP & 0x20)))
            {
                \_PR.CPU1.APPS ()
            }

            If ((PC09 & 0x18))
            {
                \_PR.CPU1.APCT ()
            }

            PC00 = PC09 /* \PC09 */
            Return (Zero)
        }
    }

    Scope (\_PR.CPUA)
    {
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, ST10)
            CreateDWordField (Arg0, 0x04, CP10)
            If (((ST10 == 0x06) || (ST10 == 0x0A)))
            {
                Return (Zero)
            }

            If ((ST10 & One))
            {
                CP10 = (ST10 & 0x0BFF)
                Return (Zero)
            }

            PC10 = ((PC10 & 0x7FFFFFFF) | CP10) /* \_PR_.CPUA.GCAP.CP10 */
            If (((PC10 & 0x09) == 0x09))
            {
                \_PR.CPU1.APPT ()
            }

            If ((\_PR.OSCP & 0x20))
            {
                \_PR.CPU1.HWPT ()
            }

            If ((((PC10 & 0x09) == 0x09) || (\_PR.OSCP & 0x20)))
            {
                \_PR.CPU1.APPS ()
            }

            If ((PC10 & 0x18))
            {
                \_PR.CPU1.APCT ()
            }

            PC00 = PC10 /* \PC10 */
            Return (Zero)
        }
    }

    Scope (\_PR.CPUB)
    {
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, ST11)
            CreateDWordField (Arg0, 0x04, CP11)
            If (((ST11 == 0x06) || (ST11 == 0x0A)))
            {
                Return (Zero)
            }

            If ((ST11 & One))
            {
                CP11 = (ST11 & 0x0BFF)
                Return (Zero)
            }

            PC11 = ((PC11 & 0x7FFFFFFF) | CP11) /* \_PR_.CPUB.GCAP.CP11 */
            If (((PC11 & 0x09) == 0x09))
            {
                \_PR.CPU1.APPT ()
            }

            If ((\_PR.OSCP & 0x20))
            {
                \_PR.CPU1.HWPT ()
            }

            If ((((PC11 & 0x09) == 0x09) || (\_PR.OSCP & 0x20)))
            {
                \_PR.CPU1.APPS ()
            }

            If ((PC11 & 0x18))
            {
                \_PR.CPU1.APCT ()
            }

            PC00 = PC11 /* \PC11 */
            Return (Zero)
        }
    }

    Scope (\_PR.CPUC)
    {
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, ST12)
            CreateDWordField (Arg0, 0x04, CP12)
            If (((ST12 == 0x06) || (ST12 == 0x0A)))
            {
                Return (Zero)
            }

            If ((ST12 & One))
            {
                CP12 = (ST12 & 0x0BFF)
                Return (Zero)
            }

            PC12 = ((PC12 & 0x7FFFFFFF) | CP12) /* \_PR_.CPUC.GCAP.CP12 */
            If (((PC12 & 0x09) == 0x09))
            {
                \_PR.CPU1.APPT ()
            }

            If ((\_PR.OSCP & 0x20))
            {
                \_PR.CPU1.HWPT ()
            }

            If ((((PC12 & 0x09) == 0x09) || (\_PR.OSCP & 0x20)))
            {
                \_PR.CPU1.APPS ()
            }

            If ((PC12 & 0x18))
            {
                \_PR.CPU1.APCT ()
            }

            PC00 = PC12 /* \PC12 */
            Return (Zero)
        }
    }

    Scope (\_PR.CPUD)
    {
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, ST13)
            CreateDWordField (Arg0, 0x04, CP13)
            If (((ST13 == 0x06) || (ST13 == 0x0A)))
            {
                Return (Zero)
            }

            If ((ST13 & One))
            {
                CP13 = (ST13 & 0x0BFF)
                Return (Zero)
            }

            PC13 = ((PC13 & 0x7FFFFFFF) | CP13) /* \_PR_.CPUD.GCAP.CP13 */
            If (((PC13 & 0x09) == 0x09))
            {
                \_PR.CPU1.APPT ()
            }

            If ((\_PR.OSCP & 0x20))
            {
                \_PR.CPU1.HWPT ()
            }

            If ((((PC13 & 0x09) == 0x09) || (\_PR.OSCP & 0x20)))
            {
                \_PR.CPU1.APPS ()
            }

            If ((PC13 & 0x18))
            {
                \_PR.CPU1.APCT ()
            }

            PC00 = PC13 /* \PC13 */
            Return (Zero)
        }
    }

    Scope (\_PR.CPUE)
    {
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, ST14)
            CreateDWordField (Arg0, 0x04, CP14)
            If (((ST14 == 0x06) || (ST14 == 0x0A)))
            {
                Return (Zero)
            }

            If ((ST14 & One))
            {
                CP14 = (ST14 & 0x0BFF)
                Return (Zero)
            }

            PC14 = ((PC14 & 0x7FFFFFFF) | CP14) /* \_PR_.CPUE.GCAP.CP14 */
            If (((PC14 & 0x09) == 0x09))
            {
                \_PR.CPU1.APPT ()
            }

            If ((\_PR.OSCP & 0x20))
            {
                \_PR.CPU1.HWPT ()
            }

            If ((((PC14 & 0x09) == 0x09) || (\_PR.OSCP & 0x20)))
            {
                \_PR.CPU1.APPS ()
            }

            If ((PC14 & 0x18))
            {
                \_PR.CPU1.APCT ()
            }

            PC00 = PC14 /* \PC14 */
            Return (Zero)
        }
    }

    Scope (\_PR.CPUF)
    {
        Method (_PDC, 1, NotSerialized)  // _PDC: Processor Driver Capabilities
        {
            Local0 = \_PR.CPU0.CPDC (Arg0)
            GCAP (Local0)
        }

        Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
        {
            Local0 = \_PR.CPU0.COSC (Arg0, Arg1, Arg2, Arg3)
            GCAP (Local0)
            Return (Local0)
        }

        Method (GCAP, 1, NotSerialized)
        {
            CreateDWordField (Arg0, Zero, ST15)
            CreateDWordField (Arg0, 0x04, CP15)
            If (((ST15 == 0x06) || (ST15 == 0x0A)))
            {
                Return (Zero)
            }

            If ((ST15 & One))
            {
                CP15 = (ST15 & 0x0BFF)
                Return (Zero)
            }

            PC15 = ((PC15 & 0x7FFFFFFF) | CP15) /* \_PR_.CPUF.GCAP.CP15 */
            If (((PC15 & 0x09) == 0x09))
            {
                \_PR.CPU1.APPT ()
            }

            If ((\_PR.OSCP & 0x20))
            {
                \_PR.CPU1.HWPT ()
            }

            If ((((PC15 & 0x09) == 0x09) || (\_PR.OSCP & 0x20)))
            {
                \_PR.CPU1.APPS ()
            }

            If ((PC15 & 0x18))
            {
                \_PR.CPU1.APCT ()
            }

            PC00 = PC15 /* \PC15 */
            Return (Zero)
        }
    }
}



SSDT7
-----
DefinitionBlock ("", "SSDT", 1, "APPLE ", "SataAhci", 0x00001000)
{
    External (GTF0, UnknownObj)
    External (GTF1, UnknownObj)
    External (GTF2, UnknownObj)
    External (GTF3, UnknownObj)
    External (GTF4, UnknownObj)
    External (GTF5, UnknownObj)

}



SSDT8
-----
DefinitionBlock ("", "SSDT", 2, "PmRef", "Cpu0Cst", 0x00003001)
{
    External (_PR_.C3LT, UnknownObj)
    External (_PR_.C3MW, UnknownObj)
    External (_PR_.C6LT, UnknownObj)
    External (_PR_.C6MW, UnknownObj)
    External (_PR_.C7LT, UnknownObj)
    External (_PR_.C7MW, UnknownObj)
    External (_PR_.CDLT, UnknownObj)
    External (_PR_.CDLV, UnknownObj)
    External (_PR_.CDMW, UnknownObj)
    External (_PR_.CDPW, UnknownObj)
    External (_PR_.CFGD, UnknownObj)
    External (_PR_.CPU0, DeviceObj)
    External (_PR_.FEMD, UnknownObj)
    External (_PR_.FMBL, UnknownObj)
    External (_PR_.PFLV, UnknownObj)
    External (C3LT, IntObj)
    External (C3MW, IntObj)
    External (C6LT, IntObj)
    External (C6MW, IntObj)
    External (C7LT, IntObj)
    External (C7MW, IntObj)
    External (CDLT, IntObj)
    External (CDLV, IntObj)
    External (CDMW, IntObj)
    External (CDPW, IntObj)
    External (PC00, UnknownObj)
    External (PWRS, UnknownObj)

    Scope (\_PR.CPU0)
    {
        Name (C1TM, Package (0x04)
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            One, 
            One, 
            0x03E8
        })
        Name (C3TM, Package (0x04)
        {
            ResourceTemplate ()
            {
                Register (SystemIO, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000001814, // Address
                    ,)
            }, 

            0x02, 
            Zero, 
            0x01F4
        })
        Name (C6TM, Package (0x04)
        {
            ResourceTemplate ()
            {
                Register (SystemIO, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000001815, // Address
                    ,)
            }, 

            0x02, 
            Zero, 
            0x015E
        })
        Name (C7TM, Package (0x04)
        {
            ResourceTemplate ()
            {
                Register (SystemIO, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000001816, // Address
                    ,)
            }, 

            0x02, 
            Zero, 
            0xC8
        })
        Name (CDTM, Package (0x04)
        {
            ResourceTemplate ()
            {
                Register (SystemIO, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000001816, // Address
                    ,)
            }, 

            0x03, 
            Zero, 
            Zero
        })
        Name (MWES, ResourceTemplate ()
        {
            Register (FFixedHW, 
                0x01,               // Bit Width
                0x02,               // Bit Offset
                0x0000000000000000, // Address
                0x01,               // Access Size
                )
        })
        Name (AC2V, Zero)
        Name (AC3V, Zero)
        Name (C3ST, Package (0x04)
        {
            0x03, 
            Package (0x00) {}, 
            Package (0x00) {}, 
            Package (0x00) {}
        })
        Name (C2ST, Package (0x03)
        {
            0x02, 
            Package (0x00) {}, 
            Package (0x00) {}
        })
        Name (C1ST, Package (0x02)
        {
            One, 
            Package (0x00) {}
        })
        Name (CSTF, Zero)
        Method (_CST, 0, Serialized)  // _CST: C-States
        {
            If (!CSTF)
            {
                C3TM [0x02] = C3LT /* External reference */
                C6TM [0x02] = C6LT /* External reference */
                C7TM [0x02] = C7LT /* External reference */
                CDTM [0x02] = CDLT /* External reference */
                CDTM [0x03] = CDPW /* External reference */
                DerefOf (CDTM [Zero]) [0x07] = CDLV /* External reference */
                If (((\_PR.CFGD & 0x0800) && (PC00 & 0x0200)))
                {
                    C1TM [Zero] = MWES /* \_PR_.CPU0.MWES */
                    C6TM [Zero] = MWES /* \_PR_.CPU0.MWES */
                    C7TM [Zero] = MWES /* \_PR_.CPU0.MWES */
                    CDTM [Zero] = MWES /* \_PR_.CPU0.MWES */
                    C3TM [Zero] = MWES /* \_PR_.CPU0.MWES */
                    DerefOf (C3TM [Zero]) [0x07] = C3MW /* External reference */
                    DerefOf (C6TM [Zero]) [0x07] = C6MW /* External reference */
                    DerefOf (C7TM [Zero]) [0x07] = C7MW /* External reference */
                    DerefOf (CDTM [Zero]) [0x07] = CDMW /* External reference */
                }
                ElseIf (((\_PR.CFGD & 0x0800) && (PC00 & 0x0100)))
                {
                    C1TM [Zero] = MWES /* \_PR_.CPU0.MWES */
                }

                CSTF = Ones
            }

            AC2V = Zero
            AC3V = Zero
            C3ST [One] = C1TM /* \_PR_.CPU0.C1TM */
            C3ST [0x02] = C7TM /* \_PR_.CPU0.C7TM */
            C3ST [0x03] = CDTM /* \_PR_.CPU0.CDTM */
            Return (C3ST) /* \_PR_.CPU0.C3ST */
        }
    }
}



SSDT9
-----
DefinitionBlock ("", "SSDT", 2, "PmRef", "Cpu0Ist", 0x00003000)
{
    External (_PR_.CPPC, FieldUnitObj)
    External (_PR_.CPU0, DeviceObj)
    External (_PR_.OSCP, IntObj)
    External (TCNT, FieldUnitObj)

    Scope (\_PR.CPU0)
    {
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (\_PR.CPPC) /* External reference */
        }

        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Method (_PSS, 0, NotSerialized)  // _PSS: Performance Supported States
        {
            If ((\_PR.OSCP & 0x0400))
            {
                Return (TPSS) /* \_PR_.CPU0.TPSS */
            }
            Else
            {
                Return (LPSS) /* \_PR_.CPU0.LPSS */
            }
        }

        Name (LPSS, Package (0x10)
        {
            Package (0x06)
            {
                0x000008FD, 
                0x0000AFC8, 
                0x0000000A, 
                0x0000000A, 
                0x00003000, 
                0x00003000
            }, 

            Package (0x06)
            {
                0x000008FC, 
                0x0000AFC8, 
                0x0000000A, 
                0x0000000A, 
                0x00001700, 
                0x00001700
            }, 

            Package (0x06)
            {
                0x00000898, 
                0x0000A518, 
                0x0000000A, 
                0x0000000A, 
                0x00001600, 
                0x00001600
            }, 

            Package (0x06)
            {
                0x00000834, 
                0x00009C55, 
                0x0000000A, 
                0x0000000A, 
                0x00001500, 
                0x00001500
            }, 

            Package (0x06)
            {
                0x000007D0, 
                0x0000920B, 
                0x0000000A, 
                0x0000000A, 
                0x00001400, 
                0x00001400
            }, 

            Package (0x06)
            {
                0x0000076C, 
                0x000089A4, 
                0x0000000A, 
                0x0000000A, 
                0x00001300, 
                0x00001300
            }, 

            Package (0x06)
            {
                0x00000708, 
                0x00008167, 
                0x0000000A, 
                0x0000000A, 
                0x00001200, 
                0x00001200
            }, 

            Package (0x06)
            {
                0x000006A4, 
                0x000077B7, 
                0x0000000A, 
                0x0000000A, 
                0x00001100, 
                0x00001100
            }, 

            Package (0x06)
            {
                0x000005DC, 
                0x00006818, 
                0x0000000A, 
                0x0000000A, 
                0x00000F00, 
                0x00000F00
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00005EF1, 
                0x0000000A, 
                0x0000000A, 
                0x00000E00, 
                0x00000E00
            }, 

            Package (0x06)
            {
                0x00000514, 
                0x0000578D, 
                0x0000000A, 
                0x0000000A, 
                0x00000D00, 
                0x00000D00
            }, 

            Package (0x06)
            {
                0x000004B0, 
                0x00005056, 
                0x0000000A, 
                0x0000000A, 
                0x00000C00, 
                0x00000C00
            }, 

            Package (0x06)
            {
                0x0000044C, 
                0x000047BB, 
                0x0000000A, 
                0x0000000A, 
                0x00000B00, 
                0x00000B00
            }, 

            Package (0x06)
            {
                0x000003E8, 
                0x000040D3, 
                0x0000000A, 
                0x0000000A, 
                0x00000A00, 
                0x00000A00
            }, 

            Package (0x06)
            {
                0x00000384, 
                0x00003A13, 
                0x0000000A, 
                0x0000000A, 
                0x00000900, 
                0x00000900
            }, 

            Package (0x06)
            {
                0x00000320, 
                0x00003201, 
                0x0000000A, 
                0x0000000A, 
                0x00000800, 
                0x00000800
            }
        })
        Name (TPSS, Package (0x11)
        {
            Package (0x06)
            {
                0x000008FD, 
                0x0000AFC8, 
                0x0000000A, 
                0x0000000A, 
                0x00003000, 
                0x00003000
            }, 

            Package (0x06)
            {
                0x000008FC, 
                0x0000AFC8, 
                0x0000000A, 
                0x0000000A, 
                0x00001700, 
                0x00001700
            }, 

            Package (0x06)
            {
                0x00000898, 
                0x0000A518, 
                0x0000000A, 
                0x0000000A, 
                0x00001600, 
                0x00001600
            }, 

            Package (0x06)
            {
                0x00000834, 
                0x00009C55, 
                0x0000000A, 
                0x0000000A, 
                0x00001500, 
                0x00001500
            }, 

            Package (0x06)
            {
                0x000007D0, 
                0x0000920B, 
                0x0000000A, 
                0x0000000A, 
                0x00001400, 
                0x00001400
            }, 

            Package (0x06)
            {
                0x0000076C, 
                0x000089A4, 
                0x0000000A, 
                0x0000000A, 
                0x00001300, 
                0x00001300
            }, 

            Package (0x06)
            {
                0x00000708, 
                0x00008167, 
                0x0000000A, 
                0x0000000A, 
                0x00001200, 
                0x00001200
            }, 

            Package (0x06)
            {
                0x000006A4, 
                0x000077B7, 
                0x0000000A, 
                0x0000000A, 
                0x00001100, 
                0x00001100
            }, 

            Package (0x06)
            {
                0x00000640, 
                0x00006FD3, 
                0x0000000A, 
                0x0000000A, 
                0x00001000, 
                0x00001000
            }, 

            Package (0x06)
            {
                0x000005DC, 
                0x00006818, 
                0x0000000A, 
                0x0000000A, 
                0x00000F00, 
                0x00000F00
            }, 

            Package (0x06)
            {
                0x00000578, 
                0x00005EF1, 
                0x0000000A, 
                0x0000000A, 
                0x00000E00, 
                0x00000E00
            }, 

            Package (0x06)
            {
                0x00000514, 
                0x0000578D, 
                0x0000000A, 
                0x0000000A, 
                0x00000D00, 
                0x00000D00
            }, 

            Package (0x06)
            {
                0x000004B0, 
                0x00005056, 
                0x0000000A, 
                0x0000000A, 
                0x00000C00, 
                0x00000C00
            }, 

            Package (0x06)
            {
                0x0000044C, 
                0x000047BB, 
                0x0000000A, 
                0x0000000A, 
                0x00000B00, 
                0x00000B00
            }, 

            Package (0x06)
            {
                0x000003E8, 
                0x000040D3, 
                0x0000000A, 
                0x0000000A, 
                0x00000A00, 
                0x00000A00
            }, 

            Package (0x06)
            {
                0x00000384, 
                0x00003A13, 
                0x0000000A, 
                0x0000000A, 
                0x00000900, 
                0x00000900
            }, 

            Package (0x06)
            {
                0x00000320, 
                0x00003201, 
                0x0000000A, 
                0x0000000A, 
                0x00000800, 
                0x00000800
            }
        })
    }
}



VFCT
----
[000h 0000   4]                    Signature : "VFCT"    
[004h 0004   4]                 Table Length : 0000F684
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : EF
[00Ah 0010   6]                       Oem ID : "APPLE "
[010h 0016   8]                 Oem Table ID : "Apple00"
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "AMD"
[020h 0032   4]        Asl Compiler Revision : 31504F47


**** Unknown ACPI table signature [VFCT]


Raw Table Data: Length 63108 (0xF684)

    0000: 56 46 43 54 84 F6 00 00 01 EF 41 50 50 4C 45 20  // VFCT......APPLE 
    0010: 41 70 70 6C 65 30 30 00 01 00 00 00 41 4D 44 00  // Apple00.....AMD.
    0020: 47 4F 50 31 32 9B A3 5D BD C6 CF 49 95 A6 E8 E4  // GOP12..]...I....
    0030: 2E CD 79 A7 4C 00 00 00 00 00 00 00 00 00 00 00  // ..y.L...........
    0040: 00 00 00 00 00 00 00 00 00 00 00 00 03 00 00 00  // ................
    0050: 00 00 00 00 00 00 00 00 02 10 40 73 00 00 00 00  // ..........@s....
    0060: 01 00 00 00 00 F6 00 00 55 AA 7B E9 33 03 00 00  // ........U.{.3...
    0070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0080: E4 02 00 00 00 00 49 42 4D 4C CC 8E 00 00 00 00  // ......IBML......
    0090: 00 00 00 00 00 00 00 04 20 37 36 31 32 39 35 35  // ........ 7612955
    00A0: 32 30 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // 20..............
    00B0: BA 02 00 00 00 00 00 00 30 37 2F 31 34 2F 32 30  // ........07/14/20
    00C0: 20 31 36 3A 32 30 00 00 33 00 00 00 E9 21 04 00  //  16:20..3....!..
    00D0: E9 2B 04 00 00 00 88 01 09 00 00 00 00 00 00 00  // .+..............
    00E0: 0B 00 0E 81 87 1F 50 00 00 00 00 00 01 00 01 00  // ......P.........
    00F0: 01 30 88 79 1E 45 A8 79 14 02 10 BD C1 6F 1C CF  // .0.y.E.y.....o..
    0100: F9 FF 1F 00 00 00 00 00 00 C4 AF F8 3F 00 00 00  // ............?...
    0110: 00 00 00 00 00 00 40 73 38 AB 46 73 44 73 04 00  // ......@s8.FsDs..
    0120: 00 00 31 03 D0 31 37 55 00 F8 80 10 42 F0 DF 03  // ..1..17U....B...
    0130: 00 2C 23 20 20 1E 04 70 56 8D E6 00 00 1E A8 00  // .,#  ..pV.......
    0140: 0F 80 08 F0 3E A7 68 B4 06 21 00 21 00 21 00 01  // ....>.h..!.!.!..
    0150: 00 2C 80 4C 60 19 20 00 30 00 03 80 0C 0C 00 00  // .,.L`. .0.......
    0160: 36 10 07 52 80 18 0C 0E 0A 00 00 00 04 F0 02 00  // 6..R............
    0170: 00 00 08 00 00 00 00 00 08 40 18 10 10 00 00 00  // .........@......
    0180: 20 00 00 00 04 00 00 00 1C 04 00 00 C8 00 00 00  //  ...............
    0190: 30 00 00 00 00 00 00 08 40 00 00 00 00 00 00 00  // 0.......@.......
    01A0: 00 00 00 00 1C 32 00 AC 41 3C 08 00 00 00 00 00  // .....2..A<......
    01B0: 00 00 00 00 00 00 00 00 00 00 00 E4 27 09 40 10  // ............'.@.
    01C0: 18 00 64 00 00 00 00 C0 98 07 00 00 40 7A 01 A0  // ..d.........@z..
    01D0: 00 24 00 00 00 80 10 90 01 18 00 00 08 00 80 81  // .$..............
    01E0: 47 01 00 F0 A1 1F 11 30 00 00 00 00 AA 00 00 00  // G......0........
    01F0: 31 31 33 2D 44 33 32 32 30 36 55 31 2D 30 32 30  // 113-D32206U1-020
    0200: 00 4E 41 56 49 31 34 00 50 43 49 5F 45 58 50 52  // .NAVI14.PCI_EXPR
    0210: 45 53 53 00 47 44 44 52 36 00 0D 0A 4E 41 56 49  // ESS.GDDR6...NAVI
    0220: 31 34 20 55 4C 41 20 41 31 20 45 56 41 4C 20 34  // 14 ULA A1 EVAL 4
    0230: 47 42 2F 38 47 42 20 33 30 30 65 2F 39 35 6D 20  // GB/8GB 300e/95m 
    0240: 30 2E 37 56 2F 31 2E 33 35 56 20 20 20 20 20 20  // 0.7V/1.35V      
    0250: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20  //                 
    0260: 20 20 20 20 20 20 20 20 0D 0A 00 0D 0A 20 0D 0A  //         ..... ..
    0270: 00 28 43 29 20 31 39 38 38 2D 32 30 31 38 2C 20  // .(C) 1988-2018, 
    0280: 41 64 76 61 6E 63 65 64 20 4D 69 63 72 6F 20 44  // Advanced Micro D
    0290: 65 76 69 63 65 73 2C 20 49 6E 63 2E 00 41 54 4F  // evices, Inc..ATO
    02A0: 4D 42 49 4F 53 42 4B 2D 41 4D 44 20 56 45 52 30  // MBIOSBK-AMD VER0
    02B0: 31 37 2E 30 30 32 2E 30 30 30 2E 30 30 30 2E 30  // 17.002.000.000.0
    02C0: 30 30 30 30 30 00 44 33 32 32 30 36 55 31 2E 30  // 00000.D32206U1.0
    02D0: 32 30 00 32 30 31 31 37 32 32 20 00 35 32 32 38  // 20.2011722 .5228
    02E0: 33 31 20 20 00 20 20 20 20 20 20 20 20 00 46 41  // 31  .        .FA
    02F0: 4C 43 4F 4E 5F 4E 41 56 49 31 34 5F 55 4C 41 5F  // LCON_NAVI14_ULA_
    0300: 4A 31 35 32 5F 41 31 5F 47 44 44 52 36 5F 55 4E  // J152_A1_GDDR6_UN
    0310: 49 46 49 45 44 5C 63 6F 6E 66 69 67 2E 68 00 00  // IFIED\config.h..
    0320: 00 90 28 00 02 02 41 54 4F 4D 00 C0 33 04 5E 02  // ..(...ATOM..3.^.
    0330: 09 03 B2 01 66 04 00 00 00 00 6B 10 0F 02 E4 02  // ....f.....k.....
    0340: 18 92 BE 92 00 00 80 C9 00 00 00 00 50 43 49 52  // ............PCIR
    0350: 02 10 40 73 00 00 18 00 00 00 00 03 7B 00 02 11  // ..@s........{...
    0360: 00 80 00 00 41 4D 44 20 41 54 4F 4D 42 49 4F 53  // ....AMD ATOMBIOS
    0370: 00 22 F1 F9 9A 00 00 00 00 00 00 00 00 00 00 00  // ."..............
    0380: 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00  // ................
    0390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    03A0: 00 1E 06 66 50 66 51 66 52 66 53 66 55 66 56 66  // ...fPfQfRfSfUfVf
    03B0: 57 0E 1F A3 14 00 8C 0E 08 00 B2 20 E8 8F 2C 0B  // W.......... ..,.
    03C0: C0 75 14 A2 02 00 66 5F 66 5E 66 5D 66 5B 66 5A  // .u....f_f^f]f[fZ
    03D0: 66 59 66 58 07 1F CB E8 A9 2D E8 7B 2B 32 D2 8D  // fYfX.....-.{+2..
    03E0: 3E BA 02 89 55 16 E8 3C 11 E8 FF 10 E8 56 12 E8  // >...U..<.....V..
    03F0: AD 02 E8 35 28 0B C0 74 0C E8 39 00 E8 83 53 E8  // ...5(..t..9...S.
    0400: FB 10 E8 D8 53 E8 A9 00 B4 80 E8 75 2B 8A C7 66  // ....S......u+..f
    0410: C1 E0 10 8A E3 B0 20 66 A3 CC 8E E8 AC 02 E8 0E  // ...... f........
    0420: 11 E8 A2 2D 66 5F 66 5E 66 5D 66 5B 66 5A 66 59  // ...-f_f^f]f[fZfY
    0430: 66 58 07 1F CB 2E 8B 1E 08 00 83 3E 45 04 00 75  // fX.........>E..u
    0440: 04 89 1E 43 04 1E 2E 8E 1E 3B 04 9C FA 66 C7 06  // ...C.....;...f..
    0450: 08 01 65 F0 00 F0 C7 06 40 00 66 04 89 1E 42 00  // ..e.....@.f...B.
    0460: C7 06 B4 01 66 04 89 1E B6 01 C7 06 7C 00 AE 5C  // ....f.......|..\
    0470: 89 1E 7E 00 C7 06 0C 01 C1 60 89 1E 0E 01 C7 06  // ..~......`......
    0480: A8 04 E0 56 89 1E AA 04 2E 8E 1E 43 04 8B C3 A3  // ...V.......C....
    0490: E2 56 A3 F2 56 A3 04 57 9D 1F C3 50 4D 49 44 66  // .V..V..W...PMIDf
    04A0: 04 12 47 00 00 00 A0 00 B0 00 B8 00 C0 00 00 00  // ..G.............
    04B0: 00 BB 00 00 E8 61 10 66 C1 E8 10 A3 EA 02 BB 0B  // .....a.f........
    04C0: 00 E8 54 10 8D 3E BA 02 66 89 45 18 C3 00 E8 D0  // ..T..>..f.E.....
    04D0: 2C 80 FC A0 75 05 E8 3D 00 EB 11 80 FC 4F 75 05  // ,...u..=.....Ou.
    04E0: E8 BD 41 EB 07 E8 12 47 EB 02 B4 01 E8 D7 2C CF  // ..A....G......,.
    04F0: E8 AE 2C E8 20 00 EB 02 B4 01 E8 C9 2C CB E8 A0  // ..,. .......,...
    0500: 2C 80 FC 4F 75 05 E8 97 41 EB 07 E8 EC 46 EB 02  // ,..Ou...A....F..
    0510: B4 01 E8 B1 2C CB 1E 06 66 50 66 51 66 52 66 53  // ....,...fPfQfRfS
    0520: 66 55 66 56 66 57 0E 1F 3C 04 75 29 2E A1 1A 00  // fUfVfW..<.u)....
    0530: 66 C1 E0 10 2E A1 18 00 8D 36 AF 01 8A 3C 80 EF  // f........6...<..
    0540: 30 B3 02 8B EC 89 5E 0C 89 46 04 66 C1 E8 10 89  // 0.....^..F.f....
    0550: 46 00 E9 28 01 3C 05 75 18 E8 26 2A E8 F9 29 2E  // F..(.<.u..&*..).
    0560: A1 08 00 8B EC 89 56 10 89 46 00 89 5E 04 E9 0C  // ......V..F..^...
    0570: 01 3C 06 75 32 E8 88 0F 66 D1 E0 8B EC 89 46 14  // .<.u2...f.....F.
    0580: BB 02 00 E8 92 0F 88 46 18 E8 7C 0F 66 89 46 0C  // .......F..|.f.F.
    0590: BB 09 00 E8 82 0F 33 C0 66 89 46 00 2E 8B 16 EA  // ......3.f.F.....
    05A0: 02 89 56 10 E9 D6 00 3C 0B 75 24 0A DB 75 11 B9  // ..V....<.u$..u..
    05B0: 80 00 BB 02 00 8B EC 89 5E 0C 89 4E 14 E9 BD 00  // ........^..N....
    05C0: 8A C7 E8 D0 00 E8 34 01 0F 84 A9 00 E9 AE 00 3C  // ......4........<
    05D0: 17 75 1D E8 31 12 74 06 E8 8B 0D E8 0C 17 E8 EE  // .u..1.t.........
    05E0: 09 E8 FA 0E 33 C9 8B C8 8B EC 89 4E 14 E9 8D 00  // ....3......N....
    05F0: 3C 18 75 45 0A FF 75 10 E8 B8 11 8B EC 89 46 0C  // <.uE..u.......F.
    0600: E8 3B 0A 89 4E 10 EB 75 E8 FC 11 75 68 BB 00 1C  // .;..N..u...uh...
    0610: E8 2C 2B 66 0B C0 74 5D 23 C9 74 59 E8 D0 11 BE  // .,+f..t]#.tY....
    0620: 00 1C E8 20 0F 74 4E BE 00 1C B0 40 E8 6F 0F E8  // ... .tN....@.o..
    0630: 81 11 8B EC 89 46 0C EB 44 3C 82 75 1A 80 FB 05  // .....F..D<.u....
    0640: 75 15 0A FF 75 0A E8 C5 10 8B EC 89 46 14 EB 2D  // u...u.......F..-
    0650: E8 92 10 74 18 EB 26 3C 8E 75 12 80 FF 01 74 08  // ...t..&<.u....t.
    0660: 80 FF 02 75 08 80 C1 02 E8 EB 10 EB 10 8B EC C6  // ...u............
    0670: 46 19 02 EB 0F 8B EC C6 46 19 01 EB 07 32 E4 8B  // F.......F....2..
    0680: EC 88 66 19 66 5F 66 5E 66 5D 66 5B 66 5A 66 59  // ..f.f_f^f]f[fZfY
    0690: 66 58 07 1F C3 51 8A C8 B8 01 00 D3 E0 59 C3 E8  // fX...Q.......Y..
    06A0: 4A 2B C3 0C 01 C3 50 51 B0 B6 E6 43 B0 33 E6 42  // J+....PQ...C.3.B
    06B0: B0 05 E6 42 E4 61 8A E0 0C 03 E6 61 8A C4 B9 C8  // ...B.a.....a....
    06C0: 00 E8 16 27 E6 61 59 58 C3 00 1E 56 0E 1F 80 3E  // ...'.aYX...V...>
    06D0: 02 00 80 76 05 C6 06 02 00 80 8A 0E 02 00 C1 E1  // ...v............
    06E0: 09 FC C6 06 21 00 00 33 F6 32 E4 AC 02 E0 E2 FB  // ....!..3.2......
    06F0: F6 D4 FE C4 88 26 21 00 5E 1F C3 00 57 0B C0 75  // .....&!.^...W..u
    0700: 0F E8 2A 0C 74 25 E8 24 00 F6 C3 04 74 F3 EB 11  // ..*.t%.$....t...
    0710: 8B C8 E8 15 25 23 C1 74 12 E8 11 00 F6 C3 04 74  // ....%#.t.......t
    0720: 0A 5F 8D 5C 28 E8 4C 06 0B F6 C3 5F C3 50 E8 DF  // ._.\(.L...._.P..
    0730: 0B E8 67 24 E8 75 24 0A C9 74 69 0A ED 74 10 8A  // ..g$.u$..ti..t..
    0740: CD B5 02 E8 17 26 B1 02 8D 9C 48 01 E8 94 29 E8  // .....&....H...).
    0750: 76 02 F6 C3 04 74 08 E8 F2 0C E8 D8 22 74 45 8D  // v....t......"tE.
    0760: 5C 28 E8 69 00 56 83 C6 08 E8 A4 22 5E 80 FD 02  // \(.i.V....."^...
    0770: 75 11 51 E8 04 18 59 80 FB 00 75 4D 51 B5 08 E8  // u.Q...Y...uMQ...
    0780: E8 05 59 8A DD 33 C9 E8 F5 16 0A C0 75 3B E8 37  // ..Y..3......u;.7
    0790: 02 8A EB 8D 5C 28 80 CD 02 E8 3B 00 74 03 80 CD  // ....\(....;.t...
    07A0: 04 E8 C6 05 8D 9C A6 00 E8 94 29 0A C0 74 1A 56  // ..........)..t.V
    07B0: 83 C6 08 E8 5A 22 5E 8A DD B9 80 00 E8 C0 16 E8  // ....Z"^.........
    07C0: D8 04 74 05 33 C9 E8 A1 05 E8 FC 01 58 C3 51 B9  // ..t.3.......X.Q.
    07D0: 49 00 E8 B4 25 59 C3 51 E8 1A 00 75 14 E8 B9 01  // I...%Y.Q...u....
    07E0: 3C 01 75 0D B9 20 00 E8 27 00 75 05 80 C9 01 EB  // <.u.. ..'.u.....
    07F0: 02 33 C9 59 C3 53 E8 46 29 66 3D 00 FF FF FF 75  // .3.Y.S.F)f=....u
    0800: 0E 83 C3 04 E8 38 29 66 3D FF FF FF 00 75 00 5B  // .....8)f=....u.[
    0810: C3 50 52 32 D2 E8 27 29 02 D0 02 D4 66 C1 E8 10  // .PR2..')....f...
    0820: 02 D0 02 D4 83 C3 04 E2 EC 0A D2 5A 58 C3 E8 DF  // ...........ZX...
    0830: 0A 8D 9C 4C 01 E8 39 01 E8 8D 01 B5 13 F6 C3 08  // ...L..9.........
    0840: 75 0C E8 07 0C 8A EA 80 FD 13 75 02 B5 03 66 50  // u.........u...fP
    0850: 8D 9C B8 02 66 33 C0 8A C5 E8 43 28 66 58 A9 C8  // ....f3....C(fX..
    0860: 0E 74 55 E8 62 01 F6 C3 08 74 0F E8 0F 05 8D 5C  // .tU.b....t.....\
    0870: 28 E8 04 01 75 04 E8 72 00 C3 B5 02 E8 23 01 E8  // (...u..r.....#..
    0880: 46 01 F6 C3 04 74 21 8D 5C 28 E8 49 01 E8 94 03  // F....t!.\(.I....
    0890: 74 05 B5 03 E8 0B 01 E8 68 04 E8 21 01 80 FD 00  // t.......h..!....
    08A0: 75 48 B5 02 E8 0D 01 C3 8D 9C 68 01 B8 00 55 E8  // uH........h...U.
    08B0: 51 11 B5 02 E8 FD 00 C3 A9 02 00 74 2D B5 04 E8  // Q..........t-...
    08C0: E0 00 E8 03 01 F6 C3 08 74 03 E8 B0 04 8D 9C 68  // ........t......h
    08D0: 01 56 E8 3A 26 8B F7 E8 68 04 5E E8 D7 25 E8 D3  // .V.:&...h.^..%..
    08E0: 00 8D 5C 28 E8 F7 25 E8 18 04 C3 B5 01 E8 B2 00  // ..\(..%.........
    08F0: B5 02 E8 BF 00 E8 D0 00 F6 C3 04 75 10 8D 9C 68  // ...........u...h
    0900: 01 B8 00 55 E8 FC 10 B5 02 E8 17 00 C3 E8 C6 00  // ...U............
    0910: B5 02 8D 5C 28 E8 6E 00 75 02 B5 01 E8 04 00 E8  // ...\(.n.u.......
    0920: E0 03 C3 8D 9C B4 02 B1 02 E8 B7 27 B5 02 E8 83  // ...........'....
    0930: 00 C3 8D 9C 4C 01 E8 38 00 E8 8C 00 F6 C3 04 74  // ....L..8.......t
    0940: 23 8D 5C 28 E8 8F 00 E8 C5 25 8D 9C 68 01 06 0E  // #.\(.....%..h...
    0950: 07 B9 07 00 E8 6C 24 07 E8 63 00 E8 EE 0A 8D 5C  // .....l$..c.....\
    0960: 28 E8 B6 25 8D 5C 28 E8 54 25 B8 02 00 E8 BE FE  // (..%.\(.T%......
    0970: C3 B9 61 00 E8 12 24 C3 53 81 C3 05 01 E8 BF 27  // ..a...$.S......'
    0980: 24 06 3C 02 5B C3 E8 10 00 3D 01 04 75 0A 53 83  // $.<.[....=..u.S.
    0990: C3 18 E8 AA 27 5B A8 01 C3 53 83 C3 12 E8 9F 27  // ....'[...S.....'
    09A0: 5B C3 8D 9C B4 02 32 C9 E8 38 27 C3 8D 9C B4 02  // [.....2..8'.....
    09B0: E8 8C 27 C3 8D 9C B4 02 B1 01 E8 26 27 C3 8D 9C  // ..'........&'...
    09C0: B4 02 B1 01 E8 34 27 C3 66 50 8D 9C 48 01 E8 6E  // .....4'.fP..H..n
    09D0: 27 8A D8 66 58 C3 55 57 51 B9 08 00 BD 00 00 BB  // '..fX.UWQ.......
    09E0: 08 00 2B D9 D1 E3 8D 58 4E E8 53 27 E8 E3 01 E2  // ..+....XN.S'....
    09F0: EE 8D 5C 4B E8 48 27 B9 03 00 8B D0 BF 4E 0A 85  // ..\K.H'......N..
    0A00: 55 06 74 17 66 8B 05 8D 9A F4 01 E8 91 26 8B 45  // U.t.f........&.E
    0A10: 04 8D 9A F8 01 E8 9F 26 83 C5 08 83 C7 08 E2 DF  // .......&........
    0A20: 8D 7C 5E B9 04 00 33 ED 8B DF E8 12 27 0B C0 74  // .|^...3.....'..t
    0A30: 09 E8 5D 01 E8 97 00 83 C5 1C 83 C7 12 E2 E9 55  // ..]............U
    0A40: 32 ED E8 6F FF 8D 5C 28 E8 4E FF 3D 01 04 75 10  // 2..o..\(.N.=..u.
    0A50: 83 C3 14 E8 E9 26 24 70 C0 E8 04 8A E8 E8 54 FF  // .....&$p......T.
    0A60: 5D 8D 9C A6 00 E8 D7 26 0A C0 74 46 8D 9C A8 00  // ]......&..tF....
    0A70: E8 CC 26 3C 02 75 3B 66 C1 E8 10 3C 04 72 33 8D  // ..&<.u;f...<.r3.
    0A80: 9C A8 00 32 E4 03 D8 8B FB B9 04 00 8B DF E8 AE  // ...2............
    0A90: 26 0B C0 74 15 E8 F9 00 A9 80 00 75 0D E8 2E 00  // &..t.......u....
    0AA0: 83 C5 1C 55 58 83 F8 70 73 08 83 C7 12 49 0B C9  // ...UX..ps....I..
    0AB0: 75 DA 59 5F 5D C3 20 03 58 02 3C 00 01 00 00 04  // u.Y_]. .X.<.....
    0AC0: 00 03 3C 00 00 08 80 02 E0 01 3C 00 20 00 51 8D  // ..<.......<. .Q.
    0AD0: 1D E8 6B 26 8D 9A 68 01 E8 DC 25 8D 5D 02 E8 5E  // ..k&..h...%.]..^
    0AE0: 26 8D 9A 6A 01 E8 89 00 8D 5D 05 E8 51 26 8D 9A  // &..j.....]..Q&..
    0AF0: 6E 01 E8 7C 00 8D 5D 08 E8 44 26 8B C8 8A DC 66  // n..|..]..D&....f
    0B00: C1 C8 10 8A D0 80 E2 0F 8A F0 C0 EE 04 8A EC C0  // ................
    0B10: ED 06 8A FC C0 EF 04 80 E7 03 80 E4 0F C0 E4 04  // ................
    0B20: 0A D4 80 E2 3F 80 E4 C0 C0 EC 02 0A F4 8B C3 8D  // ....?...........
    0B30: 9A 74 01 E8 81 25 8D 9A 72 01 8B C1 E8 78 25 8D  // .t...%..r....x%.
    0B40: 9A 76 01 33 C0 8A C6 E8 6D 25 8D 9A 78 01 33 C0  // .v.3....m%..x.3.
    0B50: 8A C2 E8 62 25 8D 5D 0C E8 E4 25 8D 9A 7A 01 E8  // ...b%.]...%..z..
    0B60: 0F 00 8D 5D 0F E8 D7 25 8D 9A 7E 01 E8 48 25 59  // ...]...%..~..H%Y
    0B70: C3 8B C8 8A D4 66 C1 C8 10 8A F0 80 E6 0F 8A E8  // .....f..........
    0B80: C0 ED 04 8B C1 E8 2F 25 83 C3 02 8B C2 E8 27 25  // ....../%......'%
    0B90: C3 8D 5D 11 E8 A8 25 8A E0 BA 06 00 C0 E8 07 74  // ..]...%........t
    0BA0: 03 80 CA 80 8A C4 C0 E8 03 24 03 3C 02 75 03 80  // .........$.<.u..
    0BB0: CA 40 3C 03 75 12 8A C4 D0 E8 A8 01 74 03 80 E2  // .@<.u.......t...
    0BC0: FD A8 02 74 03 80 E2 FB 8B C2 8D 9A 80 01 E8 E6  // ...t............
    0BD0: 24 C3 3C 01 74 3D 8B D0 0F B6 C6 24 3F 04 3C 8D  // $.<.t=.....$?.<.
    0BE0: 9A F8 01 E8 D1 24 0F B6 C2 83 C0 1F C1 E0 03 8D  // .....$..........
    0BF0: 9A F4 01 E8 C1 24 0F B6 DE C1 EB 06 C1 E3 02 2E  // .....$..........
    0C00: F7 A7 AE 0B 2E F7 B7 AC 0B 8D 9A F6 01 E8 A7 24  // ...............$
    0C10: 83 C5 08 C3 10 00 0A 00 04 00 03 00 05 00 04 00  // ................
    0C20: 10 00 09 00 8D 9C A6 00 E8 14 25 0A C0 74 1F 8D  // ..........%..t..
    0C30: 9C A8 00 51 B1 03 E8 18 00 59 0B DB 74 10 E8 FE  // ...Q.....Y..t...
    0C40: 24 32 C0 66 3D 00 03 0C 00 75 03 0B DB C3 33 DB  // $2.f=....u....3.
    0C50: C3 66 50 52 E8 E8 24 3C 02 75 39 80 FC 03 72 34  // .fPR..$<.u9...r4
    0C60: 66 C1 E8 10 32 E4 3C 04 76 2A 03 C3 8B D0 83 C3  // f...2.<.v*......
    0C70: 04 3B DA 73 1F E8 C7 24 8A E0 80 E4 E0 C0 EC 05  // .;.s...$........
    0C80: 24 1F 38 CC 74 08 32 E4 FE C0 03 D8 EB E3 0B DB  // $.8.t.2.........
    0C90: 5A 66 58 C3 33 DB 5A 66 58 C3 51 8D 9C A6 00 E8  // ZfX.3.ZfX.Q.....
    0CA0: 9D 24 0A C0 74 1B 8D 9C A8 00 B1 12 E8 18 00 74  // .$..t..........t
    0CB0: 10 E8 8B 24 66 C1 E8 10 80 E4 07 75 04 B0 01 EB  // ...$f......u....
    0CC0: 02 32 C0 0A C0 59 C3 66 50 52 E8 72 24 3C 70 75  // .2...Y.fPR.r$<pu
    0CD0: 2B 66 C1 E8 10 32 E4 83 C3 05 03 C3 8B D0 3B DA  // +f...2........;.
    0CE0: 73 1A E8 5A 24 38 C8 74 0D 66 C1 E8 10 32 E4 83  // s..Z$8.t.f...2..
    0CF0: C0 03 03 D8 EB E8 0B DB 5A 66 58 C3 33 DB 5A 66  // ........ZfX.3.Zf
    0D00: 58 C3 57 66 51 8D 9C 68 01 8B FB 8B DF E8 3D 00  // X.WfQ..h......=.
    0D10: 0B C9 74 0B 66 8B D1 E8 97 0F 83 C7 1C EB EC 66  // ..t.f..........f
    0D20: 59 5F C3 50 53 51 B9 07 00 53 8B DA E8 10 24 83  // Y_.PSQ...S....$.
    0D30: F8 00 5B 74 09 66 C1 E3 10 8B DA E8 60 20 59 5B  // ..[t.f......` Y[
    0D40: 58 C3 51 53 B9 07 00 E8 6D 20 5B 59 C3 66 50 53  // X.QS....m [Y.fPS
    0D50: 83 C3 06 E8 E9 23 5B 8B C8 66 C1 E1 10 53 83 C3  // .....#[..f...S..
    0D60: 02 E8 DB 23 8B C8 5B 66 58 C3 8D 9C 48 01 32 C9  // ...#..[fX...H.2.
    0D70: E8 70 23 C3 57 B9 20 00 E8 48 20 5F C3 E8 83 01  // .p#.W. ..H _....
    0D80: 66 8B CA 66 52 E8 C4 06 E8 AA 1C 66 5A 74 10 E8  // f..fR......fZt..
    0D90: 3A 06 B3 00 E8 96 19 66 3B CA 73 03 66 8B D1 8D  // :......f;.s.f...
    0DA0: 9C D0 03 E8 99 23 0B C0 75 44 8D 9C 54 02 66 B8  // .....#..uD..T.f.
    0DB0: 48 3F 00 00 E8 E8 22 B5 01 66 81 FA 78 69 00 00  // H?...."..f..xi..
    0DC0: 72 25 83 C3 04 66 B8 78 69 00 00 E8 D1 22 B5 02  // r%...f.xi...."..
    0DD0: 66 81 FA F0 D2 00 00 72 0E 83 C3 04 66 B8 F0 D2  // f......r....f...
    0DE0: 00 00 E8 BA 22 B5 03 B1 03 E8 CF 01 EB 45 66 B9  // ...."........Ef.
    0DF0: 08 00 00 00 66 33 D2 53 8D 9C 54 02 8B D3 5B E8  // ....f3.S..T...[.
    0E00: 3D 23 0B C0 74 22 66 25 FF FF 00 00 66 D1 E0 53  // =#..t"f%....f..S
    0E10: 8B DA E8 8A 22 5B 66 C1 CA 10 FE C2 66 C1 CA 10  // ...."[f.....f...
    0E20: 83 C2 04 83 C3 02 E2 D7 66 C1 CA 10 8A EA B1 03  // ........f.......
    0E30: E8 88 01 E8 38 06 A8 01 74 3F 8D 9C AE 03 E8 FE  // ....8...t?......
    0E40: 22 3C 00 74 34 E8 CF 05 8A EB E8 5C 01 32 ED E8  // "<.t4......\.2..
    0E50: 63 01 E8 A2 05 8D 9C BB 02 E8 E3 22 33 C9 8A C8  // c.........."3...
    0E60: E8 28 01 66 3B C2 74 0E 51 E8 43 01 FE C5 E8 44  // .(.f;.t.Q.C....D
    0E70: 01 59 E2 EC EB 03 B3 00 C3 8D 9C BB 02 E8 BF 22  // .Y............."
    0E80: FE C8 8A E8 E8 2E 01 8D 9C 40 03 B9 00 00 E8 52  // .........@.....R
    0E90: 22 E8 C2 02 E8 D2 00 E8 0F 01 66 52 E8 AD 05 E8  // ".........fR....
    0EA0: 93 1B 66 5A 75 04 B3 00 EB 58 E8 F6 00 80 FD 01  // ..fZu....X......
    0EB0: 77 07 E8 FA 00 0A ED 74 47 E8 1E 03 E8 28 11 80  // w......tG....(..
    0EC0: FB 00 75 1D E8 A7 05 A8 01 74 07 B1 0D E8 3F 19  // ..u......t....?.
    0ED0: EB 30 B5 01 E8 9E 05 E8 25 0F B5 00 E8 96 05 EB  // .0......%.......
    0EE0: 21 E8 BF 00 80 FD 01 76 07 D0 ED E8 BB 00 EB BA  // !......v........
    0EF0: E8 76 00 E8 B3 00 E8 B6 00 FE CD E8 B7 00 EB AA  // .v..............
    0F00: B3 08 C3 8D 9C 29 01 E8 35 22 66 33 D2 8A D0 66  // .....)..5"f3...f
    0F10: B8 8C 0A 00 00 66 F7 E2 E8 31 05 E8 17 1B 75 3D  // .....f...1....u=
    0F20: 66 50 8D 9C 28 01 E8 16 22 3C 14 66 58 72 2E 66  // fP..(..."<.fXr.f
    0F30: 50 8D 9C D0 03 E8 07 22 0B C0 66 58 74 1F B9 08  // P......"..fXt...
    0F40: 00 8D 9C D0 03 8B C1 D1 E0 03 D8 E8 F1 21 0B C0  // .............!..
    0F50: 75 02 E2 ED 66 25 FF FF 00 00 66 D1 E0 66 0B C0  // u...f%....f..f..
    0F60: 75 03 B8 48 3F 66 8B D0 C3 8D 9C 2A 01 E8 CF 21  // u..H?f.....*...!
    0F70: 24 0F 8A E8 0A ED 75 02 B5 01 C3 B5 00 8D 9C 31  // $.....u........1
    0F80: 01 E8 BB 21 A8 01 74 02 B5 01 C3 53 51 E8 1F 00  // ...!..t....SQ...
    0F90: 32 E4 8A C5 C1 E0 02 59 8D 9C 54 02 03 D8 E8 9E  // 2......Y..T.....
    0FA0: 21 5B C3 B1 02 E8 1D 00 C3 B1 02 E8 0D 00 C3 B1  // ![..............
    0FB0: 01 E8 11 00 C3 B1 01 E8 01 00 C3 53 8D 9C B8 02  // ...........S....
    0FC0: E8 20 21 5B C3 53 8D 9C B8 02 E8 2E 21 5B C3 33  // . ![.S......![.3
    0FD0: C9 E8 7F 1E 75 3C 66 BA 37 F1 FF FF 66 33 C0 E8  // ....u<f.7...f3..
    0FE0: E3 04 33 C0 E8 47 03 74 1C A9 C8 0E 74 F6 E8 3C  // ..3..G.t....t..<
    0FF0: F7 F6 C3 04 75 05 F6 C3 18 74 E9 E8 30 00 50 E8  // ....u....t..0.P.
    1000: 2C F8 58 EB DF E8 1C 00 75 08 E8 31 00 8B C1 E8  // ,.X.....u..1....
    1010: 1C F8 C3 8D 5D 28 66 C1 E3 10 8D 5C 28 B9 49 00  // ....](f....\(.I.
    1020: E8 7B 1D C3 66 50 E8 B5 04 8B C8 66 58 C3 66 52  // .{..fP.....fX.fR
    1030: 66 BA FF FF FF FF 33 D0 E8 8A 04 66 5A C3 50 53  // f.....3....fZ.PS
    1040: 52 E8 E0 FF 75 09 33 C0 E8 E3 02 8B C8 EB 10 83  // R...u.3.........
    1050: F9 02 74 0B E8 2F 08 80 FB 01 75 03 83 E1 FD 5A  // ..t../....u....Z
    1060: 5B 58 C3 56 66 33 C0 66 BA 00 F0 FF FF E8 52 07  // [X.Vf3.f......R.
    1070: 66 C1 E6 10 E8 C4 02 0B C0 74 03 E8 1C 00 E8 32  // f........t.....2
    1080: 07 5E C3 66 52 66 8B D0 E8 D2 15 8D 9C 1C 03 E8  // .^.fRf..........
    1090: AD 20 8A C2 E8 08 20 66 5A C3 50 51 E8 71 02 50  // . .... fZ.PQ.q.P
    10A0: 32 C0 E8 00 04 E8 CC 01 E8 98 00 8D 9C 40 03 E8  // 2............@..
    10B0: 8D 20 38 E8 74 0A 8A C5 E8 E4 1F B0 02 E8 E5 03  // . 8.t...........
    10C0: 58 E8 CA 00 E8 A8 00 E8 8C 00 8D 9C 4C 01 E8 6E  // X...........L..n
    10D0: 20 8B C8 8B D3 8D 9C 00 03 E8 63 20 3B C1 74 05  //  .........c ;.t.
    10E0: B0 02 E8 C0 03 E8 3B FC 8D 9C 00 03 E8 4B 15 8D  // ......;......K..
    10F0: 9C D8 02 E8 A9 1F E8 8A FF 66 C1 CE 10 8B FE 66  // .........f.....f
    1100: C1 CE 10 E8 95 00 E8 D1 00 E8 24 03 8A E9 8D 9C  // ..........$.....
    1110: DC 02 32 C9 E8 CC 1F E8 0D 03 66 25 FF 0F 00 00  // ..2.......f%....
    1120: 59 58 66 BA FF FF FF FF 33 D0 E8 95 06 33 D2 C3  // YXf.....3....3..
    1130: 53 66 50 8D 9C D4 02 E8 05 20 8A C4 E8 60 1F 66  // SfP...... ...`.f
    1140: 58 5B C3 53 66 50 8D 9C D4 02 E8 F2 1F 8A E0 E8  // X[.SfP..........
    1150: 4D 1F 66 58 5B C3 E8 73 02 E8 2E 02 8A DD E8 93  // M.fX[..s........
    1160: 16 8A E9 8D 9C 3C 03 32 C9 E8 77 1F 0B DB C3 83  // .....<.2..w.....
    1170: EC 08 8B EC E8 55 02 E8 10 02 E8 19 16 8D 9C 4C  // .....U.........L
    1180: 03 E8 BB 1F 8A 46 00 E8 15 1F 83 C4 08 C3 8D 9C  // .....F..........
    1190: D4 02 E8 AA 1F 32 C0 E8 05 1F C3 E8 0A 00 8D 9C  // .....2..........
    11A0: D0 02 32 C9 E8 3C 1F C3 B5 00 8D 1D E8 90 1F 66  // ..2..<.........f
    11B0: 8B D0 8D 9C 02 03 E8 86 1F 0B C0 74 1C 51 8B C8  // ...........t.Q..
    11C0: 8D 9C 06 03 E8 78 1F 66 C1 E0 10 8B C1 59 66 3B  // .....x.f.....Yf;
    11D0: C2 75 04 B5 00 EB 02 B5 02 C3 E8 2B 02 8D 9C 40  // .u.........+...@
    11E0: 03 B1 03 E8 FD 1E E8 D5 F7 8D 9C 40 03 B1 02 E8  // ...........@....
    11F0: F1 1E E8 95 01 80 FD 00 75 14 E8 A6 FD E8 8E 02  // ........u.......
    1200: E8 88 FD 66 8B D0 E8 77 02 E8 8E 02 EB 21 E8 4A  // ...f...w.....!.J
    1210: 02 E8 6C 02 E8 73 01 80 FD 02 B5 04 75 0B 81 FA  // ..l..s......u...
    1220: 74 40 76 05 B5 08 66 D1 EA E8 6E 02 E8 5F 02 E8  // t@v...f...n.._..
    1230: 2B 00 C3 66 52 52 32 ED 83 C1 02 B8 06 00 F7 E1  // +..fRR2.........
    1240: 66 33 C9 8B C8 5A 51 66 8B C2 8A CF 66 F7 E1 66  // f3...ZQf....f..f
    1250: C1 E0 03 59 66 F7 F1 66 8B C8 66 5A C3 B5 00 E8  // ...Yf..f..fZ....
    1260: EA 01 E8 CC 17 75 03 E8 11 FD 8D 9C 48 03 32 C9  // .....u......H.2.
    1270: E8 70 1E C3 53 E8 5F 01 66 C1 E2 10 E8 4D 01 8D  // .p..S._.f....M..
    1280: 9C B8 02 E8 B9 1E 8A E8 8D 9C B4 02 E8 B0 1E 8A  // ................
    1290: C8 E8 BA 14 8A EB 5B C3 57 53 53 E8 D6 FF E8 2B  // ......[.WSS....+
    12A0: 01 5B E8 1F 15 74 66 80 FD 00 75 29 53 E8 DB FC  // .[...tf...u)S...
    12B0: 66 8B D0 E8 08 F7 8A CD 51 E8 E7 FC 8A FD 59 E8  // f.......Q.....Y.
    12C0: 71 FF 5B E8 79 1E 66 25 FF FF 00 00 66 3B C8 73  // q.[.y.f%....f;.s
    12D0: 39 32 DB EB 38 80 FD 02 75 16 E8 6F 01 E8 62 17  // 92..8...u..o..b.
    12E0: 74 28 8D 1F E8 58 1E 3D 74 40 76 1E 32 DB EB 1D  // t(...X.=t@v.2...
    12F0: 80 FD 03 75 15 53 E8 D3 00 B3 03 E8 2F 14 5B E8  // ...u.S....../.[.
    1300: 3D 1E 3B C2 76 04 32 DB EB 03 80 CB 01 5B 5F C3  // =.;.v.2......[_.
    1310: 53 8B F0 E8 14 19 23 F0 74 09 8B C6 E8 B3 17 8B  // S.....#.t.......
    1320: F3 0B DB 5B C3 51 E8 15 FD E8 0F 00 59 C3 51 50  // ...[.Q......Y.QP
    1330: E8 F7 18 8B C8 58 E8 02 00 59 C3 57 53 E8 28 19  // .....X...Y.WS.(.
    1340: 0B C0 74 09 8B 1D 83 C7 02 3B C3 75 F7 8B 1D 83  // ..t......;.u....
    1350: FB FF 74 0B 83 C7 02 85 D9 74 F2 8B C3 EB 02 33  // ..t......t.....3
    1360: C0 0B C0 5B 5F C3 33 C0 E8 C3 FF 74 13 E8 A0 FF  // ...[_.3....t....
    1370: 8B DE B9 FB 00 E8 11 1A 83 C6 08 E8 5C 18 EB E8  // ............\...
    1380: BB F0 16 B8 5A A5 E8 2E 1D C3 53 66 50 8D 9C 40  // ....Z.....SfP..@
    1390: 03 E8 AB 1D 8A E8 66 58 5B C3 8D 9C 69 03 E8 9E  // ......fX[...i...
    13A0: 1D C3 8D 9C 64 03 E8 96 1D 0B C0 C3 53 66 50 8D  // ....d.......SfP.
    13B0: 9C D4 02 E8 89 1D 8A C8 66 58 5B C3 53 66 50 8D  // ........fX[.SfP.
    13C0: 9C D5 02 E8 79 1D 8A C8 66 58 5B C3 53 8D 5C 14  // ....y...fX[.S.\.
    13D0: E8 6C 1D 8B D0 5B C3 53 66 50 8D 5C 16 E8 5F 1D  // .l...[.SfP.\.._.
    13E0: 8B D0 66 58 5B C3 53 66 50 8D 9C 50 03 E8 4F 1D  // ..fX[.SfP..P..O.
    13F0: 66 8B D0 66 58 5B C3 53 66 50 8D 9C 54 03 E8 3E  // f..fX[.SfP..T..>
    1400: 1D 66 8B D0 66 58 5B C3 53 66 50 8D 5C 10 E8 2E  // .f..fX[.SfP.\...
    1410: 1D 8B C8 66 58 5B C3 66 50 53 8D 9C 41 03 E8 1E  // ...fX[.fPS..A...
    1420: 1D 5B 8A D8 66 58 C3 53 8D 5C 08 E8 11 1D 5B C3  // .[..fX.S.\....[.
    1430: 53 50 8D 9C 4C 03 E8 06 1D 8A C8 58 5B C3 53 50  // SP..L......X[.SP
    1440: 8D 9C 4D 03 E8 F8 1C 8A C8 58 5B C3 53 66 50 8D  // ..M......X[.SfP.
    1450: 5C 0C E8 EA 1C 8B D0 66 58 5B C3 53 66 50 8D 9C  // \......fX[.SfP..
    1460: 00 03 E8 DA 1C 66 33 D2 8B D0 66 58 5B C3 8D 5C  // .....f3...fX[..\
    1470: 04 E8 CB 1C C3 51 8D 5C 04 32 C9 E8 65 1C 59 C3  // .....Q.\.2..e.Y.
    1480: 8D 9C 50 03 E8 B8 1C 66 8B C2 E8 12 1C C3 53 8D  // ..P....f......S.
    1490: 9C 40 03 B1 01 E8 4B 1C 5B C3 8D 9C 54 03 66 8B  // .@....K.[...T.f.
    14A0: C2 E8 FB 1B C3 53 51 8A E8 E8 C2 FF 24 FD 0A E8  // .....SQ.....$...
    14B0: E8 C2 FF 59 5B C3 66 50 8D 9C D8 02 E8 80 1C 66  // ...Y[.fP.......f
    14C0: 8B D0 66 58 C3 53 66 50 51 66 8B C8 BB 00 00 E8  // ..fX.SfPQf......
    14D0: E1 15 23 C2 0B C1 E8 E3 15 59 66 58 5B C3 BB 00  // ..#......YfX[...
    14E0: 00 E8 CF 15 66 25 CA 0E 00 00 C3 E8 59 18 E8 E8  // ....f%......Y...
    14F0: 17 E8 C6 17 75 06 E8 43 17 E8 CA 17 C3 B0 01 C3  // ....u..C........
    1500: 55 B3 01 E8 2D 1A 5D C3 66 53 66 BB 04 00 00 00  // U...-.].fSf.....
    1510: E8 05 00 33 C0 66 5B C3 55 66 C1 E3 10 BB 00 00  // ...3.f[.Uf......
    1520: E8 10 1A 5D C3 E8 18 19 BB 0A 00 E8 8E 15 C3 BB  // ...]............
    1530: 0A 00 E8 7E 15 66 8B C8 E8 05 19 BB 0A 00 66 2B  // ...~.f........f+
    1540: C1 E8 78 15 C3 E8 29 00 0B C9 74 22 E8 14 FB E8  // ..x...)...t"....
    1550: 24 07 66 51 66 8B C8 BB 07 00 E8 56 15 66 25 00  // $.fQf......V.f%.
    1560: FE 00 00 66 0B C1 E8 53 15 66 59 0C 01 C3 32 C0  // ...f...S.fY...2.
    1570: C3 E8 6B 02 0B C9 75 06 E8 C3 FA E8 71 02 51 E8  // ..k...u.....q.Q.
    1580: BC FA 66 C1 E6 10 33 C0 E8 9A FD 74 09 E8 09 03  // ..f...3....t....
    1590: 75 F6 33 C8 EB F2 58 23 C8 66 C1 EE 10 C3 A8 10  // u.3...X#.f......
    15A0: 75 63 E8 E3 06 66 C1 E6 10 33 C0 E8 80 FD 74 35  // uc...f...3....t5
    15B0: E8 5D FD 50 51 8B C8 E8 F9 01 85 C1 59 58 74 0D  // .].PQ.......YXt.
    15C0: 50 E8 AA FE 24 03 3C 03 58 75 E0 EB 0C 50 E8 9D  // P...$.<.Xu...P..
    15D0: FE A8 01 58 74 D5 E8 6A FB 50 E8 CD 07 58 B5 00  // ...Xt..j.P...X..
    15E0: E8 92 FE EB C6 E8 CB 01 E8 25 FD E8 34 01 B1 00  // .........%..4...
    15F0: E8 41 07 66 C1 EE 10 E8 87 06 A8 20 75 42 A8 40  // .A.f....... uB.@
    1600: 75 03 E8 0F 0E E8 6E 06 0A C0 75 07 32 C9 B5 01  // u.....n...u.2...
    1610: E8 B2 0E E8 9D 01 E8 F7 FC E8 30 FE E8 16 14 75  // ..........0....u
    1620: 14 E8 62 02 0A DB 74 0D E8 18 FB E8 7C 07 B5 00  // ..b...t.....|...
    1630: E8 42 FE EB 08 E8 59 07 B5 01 E8 38 FE E8 E6 00  // .B....Y....8....
    1640: C3 E8 E6 15 C3 E8 1E FD E8 9F 06 33 C9 E8 9F 01  // ...........3....
    1650: 66 33 D2 66 33 C0 E8 6C FE E8 52 00 B1 FF E8 84  // f3.f3..l..R.....
    1660: 00 33 C0 E8 C8 FC 74 0A E8 A5 FC 50 E8 C5 07 58  // .3....t....P...X
    1670: EB F1 32 C9 E8 C4 01 E8 B0 15 0B C0 C3 E8 E6 FC  // ..2.............
    1680: E8 67 06 66 33 C0 66 BA 00 F0 FF FF E8 33 01 51  // .g.f3.f......3.Q
    1690: B1 01 E8 8C 01 59 33 C0 E8 93 FC 74 0A E8 70 FC  // .....Y3....t..p.
    16A0: 50 E8 5B 07 58 EB F1 E8 A7 0D E8 7F 16 C3 B8 02  // P.[.X...........
    16B0: 00 E8 5C FC 74 2E B1 07 E8 CA 11 B8 02 00 E8 6C  // ..\.t..........l
    16C0: F0 F6 C3 04 75 12 E8 46 18 83 3D 00 75 0A E8 59  // ....u..F..=.u..Y
    16D0: 15 83 E0 FD E8 5C 15 C3 66 B8 02 00 00 00 E8 E4  // .....\..f.......
    16E0: FD E8 4E F2 C3 E8 DD 13 74 23 38 E1 76 04 8A CC  // ..N.....t#8.v...
    16F0: EB 06 38 C1 73 02 8A C8 BB 02 00 E8 B5 13 8A E1  // ..8.s...........
    1700: E8 B9 13 B1 04 E8 7D 11 0C 01 C3 0C 01 C3 51 E8  // ......}.......Q.
    1710: B3 13 74 0C 8A CC BB 02 00 E8 97 13 8A C4 8A E1  // ..t.............
    1720: 59 C3 E8 F1 05 C3 E8 FC 05 C3 E8 26 17 75 18 E8  // Y..........&.u..
    1730: 81 00 E8 DB FB 80 F9 01 75 0E 51 E8 53 06 B5 01  // ........u.Q.S...
    1740: E8 32 FD 59 E8 DF FF C3 E8 D7 FF 51 E8 B0 06 B5  // .2.Y.......Q....
    1750: 00 E8 21 FD 59 C3 B8 02 00 E8 B4 FB 74 03 E8 24  // ..!.Y.......t..$
    1760: 11 C3 E8 B0 04 3B C1 7C 3A 8B C1 E8 F0 04 E8 BA  // .....;.|:.......
    1770: 0E 8B C8 51 E8 20 05 E8 E4 04 59 E8 AD 0E 3B C8  // ...Q. ....Y...;.
    1780: 72 02 8B C1 8D 5C 04 E8 2D 19 32 C9 B5 0F E8 F8  // r....\..-.2.....
    1790: 0C E8 EC 15 FE C1 38 C1 72 F2 8D 5C 04 E8 9F 19  // ......8.r..\....
    17A0: 0B C0 C3 33 C0 C3 BB 00 18 33 C0 8A C2 C1 E0 02  // ...3.....3......
    17B0: 03 D8 C3 53 BB 03 00 E8 F9 12 66 25 FF 0F 00 00  // ...S......f%....
    17C0: 5B C3 53 66 50 66 51 66 8B C8 BB 03 00 E8 E3 12  // [.SfPfQf........
    17D0: 66 23 C2 66 0B C1 E8 E3 12 66 59 66 58 5B C3 66  // f#.f.....fYfX[.f
    17E0: 50 BB 05 00 E8 CC 12 25 FF 0F 8B C8 66 58 C3 E8  // P......%....fX..
    17F0: 38 14 23 C8 66 50 BB 05 00 E8 B7 12 25 00 F0 0B  // 8.#.fP......%...
    1800: C1 E8 B8 12 66 58 C3 66 50 53 BB 06 00 E8 A3 12  // ....fX.fPS......
    1810: A8 10 75 09 BB F0 16 E8 25 19 3D 5A A5 5B 66 58  // ..u.....%.=Z.[fX
    1820: C3 66 50 53 BB 06 00 E8 89 12 80 F1 01 C0 E1 04  // .fPS............
    1830: 24 EF 0A C1 E8 85 12 5B 66 58 C3 53 66 50 BB F8  // $......[fX.SfP..
    1840: 16 E8 FB 18 8A C1 E8 56 18 66 58 5B C3 53 BB F8  // .......V.fX[.S..
    1850: 16 E8 EB 18 83 E0 01 5B C3 53 66 50 BB 07 00 E8  // .......[.SfP....
    1860: 51 12 F6 C4 01 66 58 B0 06 74 02 B0 08 5B C3 53  // Q....fX..t...[.S
    1870: BB 07 00 E8 3D 12 80 E4 FE 80 FD 06 74 03 80 CC  // ....=.......t...
    1880: 01 E8 38 12 5B C3 66 50 BB 06 00 E8 25 12 24 40  // ..8.[.fP....%.$@
    1890: C0 E8 06 8A D8 66 58 C3 C3 50 66 51 E8 71 FA 83  // .....fX..PfQ.q..
    18A0: EC 04 8B EC 66 33 C0 66 89 46 00 33 D2 8D BC 68  // ....f3.f.F.3...h
    18B0: 01 8D 1D E8 89 18 0B C0 74 22 8B DF B0 00 E8 12  // ........t"......
    18C0: 01 74 14 8B DF E8 85 F4 66 8B 46 00 66 3B C8 72  // .t......f.F.f;.r
    18D0: 06 8B D7 66 89 4E 00 83 C7 1C EB D5 0B D2 74 0A  // ...f.N........t.
    18E0: 8D 9C 4C 01 E8 3C F4 E9 88 00 66 33 C0 66 89 46  // ..L..<....f3.f.F
    18F0: 00 8D BC F4 01 33 D2 8D 1D E8 43 18 0B C0 74 58  // .....3....C...tX
    1900: 66 50 E8 A7 F0 3C 01 66 58 74 05 3D 40 06 73 43  // fP...<.fXt.=@.sC
    1910: 66 52 66 8B D0 8D 5D 04 E8 24 18 E8 5D 00 8B CA  // fRf...]..$..]...
    1920: 66 5A 74 2F 56 8D 9C 4C 01 8B F1 E8 14 F4 5E B0  // fZt/V..L......^.
    1930: 00 E8 9F 00 74 1D 8D 1D E8 04 18 8B D9 8B 47 06  // ....t.........G.
    1940: 66 C1 E0 10 8B 47 02 66 3B 46 00 72 06 8B D1 66  // f....G.f;F.r...f
    1950: 89 46 00 83 C7 08 EB 9F 0B D2 74 16 56 8D 9C 4C  // .F........t.V..L
    1960: 01 8B F2 E8 DC F3 5E 53 8D 9C 62 01 33 C0 E8 46  // ......^S..b.3..F
    1970: 17 5B 83 C4 04 0B D2 66 59 58 C3 57 53 51 E8 05  // .[.....fYX.WSQ..
    1980: 13 3B 55 02 75 18 66 C1 CA 10 8B DA 66 C1 CA 10  // .;U.u.f.....f...
    1990: 3B 5D 06 75 09 0A C0 74 0E 3A 45 1B 74 09 83 C7  // ;].u...t.:E.t...
    19A0: 1C E2 DE 33 D2 EB 02 8B D7 0B D2 59 5B 5F C3 51  // ...3.......Y[_.Q
    19B0: 66 52 E8 D1 12 3A 65 1A 75 09 0A C0 74 0E 3A 45  // fR...:e.u...t.:E
    19C0: 1B 74 09 83 C7 1C E2 ED 33 FF EB 00 0B FF 66 5A  // .t......3.....fZ
    19D0: 59 C3 C3 66 51 66 52 53 53 66 C1 CE 10 8B DE 66  // Y..fQfRSSf.....f
    19E0: C1 CE 10 E8 59 17 5B 66 8B D0 E8 60 F3 3B CA 72  // ....Y.[f...`.;.r
    19F0: 0A 66 3B CA 72 05 E8 9F F8 75 02 32 C0 5B 66 5A  // .f;.r....u.2.[fZ
    1A00: 66 59 C3 56 57 E8 A7 FF 8B F7 E8 35 F3 5F 5E C3  // fY.VW......5._^.
    1A10: 66 50 53 66 51 52 57 56 51 8B DE B9 08 00 E8 68  // fPSfQRWVQ......h
    1A20: 13 59 8D 5C 08 8B C1 66 C1 E0 10 8A C2 E8 6F 16  // .Y.\...f......o.
    1A30: F6 C2 03 75 24 8B C1 24 7F BF F3 1A 80 3D FF 0F  // ...u$..$.....=..
    1A40: 84 0F 01 3A 05 75 0D 66 8B 45 01 66 B9 00 05 02  // ...:.u.f.E.f....
    1A50: 00 E9 96 00 83 C7 05 EB E3 F6 C2 01 74 25 8B C1  // ............t%..
    1A60: E8 70 01 0F 84 EB 00 33 C9 8A CC 8A D0 0A C0 75  // .p.....3.......u
    1A70: 12 8D 5C 08 66 25 FF FF 00 00 66 C1 E0 08 E8 1E  // ..\.f%....f.....
    1A80: 16 EB B2 8A E1 8A CA 80 E1 0C C0 E9 02 80 E2 F0  // ................
    1A90: C0 EA 04 8A EA 80 FC 70 72 2A 80 FC 75 73 25 80  // .......pr*..us%.
    1AA0: EC 70 8A C4 32 E4 50 E8 30 02 8B D8 58 38 D8 72  // .p..2.P.0...X8.r
    1AB0: 05 33 C0 E9 9C 00 E8 28 02 E8 83 16 0B C0 0F 84  // .3.....(........
    1AC0: 90 00 EB 1B 32 C0 E8 E6 FE 0F 84 85 00 8D 5C 16  // ....2.........\.
    1AD0: 8B 05 E8 E2 15 8B 45 06 66 C1 E0 10 8B 45 02 50  // ......E.f....E.P
    1AE0: E8 48 0B 66 C1 E1 10 8B C8 58 8D 1C E8 B0 15 66  // .H.f.....X.....f
    1AF0: 50 8D 5C 04 66 8B C1 E8 A5 15 66 58 66 C1 E8 10  // P.\.f.....fXf...
    1B00: 66 81 E1 FF FF 00 00 66 F7 E1 66 50 8D 5C 06 E8  // f......f..fP.\..
    1B10: 2D 16 8B C8 66 58 66 D3 E0 66 C1 E8 10 40 8D 5C  // -...fXf..f...@.\
    1B20: 14 E8 93 15 BF 53 1B 83 F9 01 74 11 BF 5B 1B 81  // .....S....t..[..
    1B30: F9 01 01 74 08 BF 63 1B 83 F9 02 75 15 8D 5C 0C  // ...t..c....u..\.
    1B40: 66 8B 05 E8 59 15 8D 5C 10 66 8B 45 04 E8 4F 15  // f...Y..\.f.E..O.
    1B50: 0B DB 5E 5F 5A 66 59 5B 66 58 C3 00 40 01 90 01  // ..^_ZfY[fX..@...
    1B60: 01 40 01 90 01 02 80 02 90 01 03 80 02 90 01 04  // .@..............
    1B70: 40 01 90 01 05 40 01 90 01 06 80 02 90 01 07 D0  // @....@..........
    1B80: 02 5E 01 0D 40 01 90 01 0E 80 02 90 01 0F 80 02  // .^..@...........
    1B90: 5E 01 10 80 02 5E 01 11 80 02 E0 01 12 80 02 E0  // ^....^..........
    1BA0: 01 13 80 02 90 01 23 20 04 90 01 32 20 04 B0 02  // ......# ...2 ...
    1BB0: 33 20 04 C0 02 62 80 02 E0 01 FF 05 0A 05 05 05  // 3 ...b..........
    1BC0: 00 00 00 05 0B 06 05 05 00 00 00 08 10 08 08 08  // ................
    1BD0: 00 00 00 56 E8 CF 12 80 E4 01 3B 04 74 09 83 C6  // ...V......;.t...
    1BE0: 04 E2 F7 33 C0 EB 05 8B 44 02 0B C0 5E C3 57 53  // ...3....D...^.WS
    1BF0: 50 E8 B2 12 83 E9 0A E8 E0 00 83 F8 05 76 03 B8  // P............v..
    1C00: 05 00 D1 E0 03 C8 FB A5 83 C6 02 E2 FA B8 FF FF  // ................
    1C10: AB 58 5B 5F C3 66 53 51 66 52 E8 41 00 E8 77 00  // .X[_.fSQfR.A..w.
    1C20: 66 C1 E8 10 66 0F B7 D8 66 B8 00 00 00 03 66 D3  // f...f...f.....f.
    1C30: E8 66 33 D2 66 F7 F3 E8 F1 09 66 5A 59 66 5B C3  // .f3.f.....fZYf[.
    1C40: 53 66 50 BB 07 00 E8 6A 0E 0A C0 66 58 5B C3 53  // SfP....j...fX[.S
    1C50: 66 50 BB 07 00 E8 5B 0E A8 01 66 58 5B C3 53 66  // fP....[...fX[.Sf
    1C60: 50 8D 5C 06 E8 D8 14 8A C8 66 58 5B C3 51 B9 08  // P.\......fX[.Q..
    1C70: 00 E8 2A 11 59 C3 53 8D 5C 08 E8 C2 14 24 03 5B  // ..*.Y.S.\....$.[
    1C80: C3 8D 5C 09 E8 B8 14 C3 51 53 B1 01 8A E8 8D 5C  // ..\.....QS.....\
    1C90: 08 E8 4F 14 5B 59 C3 53 8D 1C E8 A2 14 5B C3 53  // ..O.[Y.S.....[.S
    1CA0: 8D 5C 04 E8 99 14 5B C3 53 8D 5C 16 E8 90 14 5B  // .\....[.S.\....[
    1CB0: C3 53 66 52 33 C0 E8 C2 FC 66 5A 75 1B E8 34 00  // .SfR3....fZu..4.
    1CC0: 74 16 E8 15 00 40 83 F8 05 73 0D E8 D1 13 48 E8  // t....@...s....H.
    1CD0: 0F 00 66 8B C2 E8 C7 13 5B C3 BB 00 1E E8 5F 14  // ..f.....[....._.
    1CE0: C3 BB 08 1E C1 E0 03 03 D8 C3 BB 00 1E B9 32 00  // ..............2.
    1CF0: E8 96 10 C3 51 E8 E2 FF 0B C0 74 12 8B C8 BB 08  // ....Q.....t.....
    1D00: 1E E8 3B 14 66 3B C2 74 07 83 C3 08 E2 F3 0B DB  // ..;.f;.t........
    1D10: 59 C3 C3 00 C3 00 BB 20 DF E8 E3 33 E8 8D F6 B5  // Y...... ...3....
    1D20: 01 E8 E5 07 C3 BB 00 DF E8 D4 33 E8 7E F6 B5 00  // ..........3.~...
    1D30: E8 D6 07 C3 80 F9 00 75 0A E8 4A 10 8A C8 B5 02  // .......u..J.....
    1D40: E8 1D 09 0B F6 74 2E E8 62 F6 B5 01 51 E8 C0 07  // .....t..b...Q...
    1D50: 59 E8 C3 07 56 33 F6 B5 00 E8 2D 07 5E B5 01 E8  // Y...V3....-.^...
    1D60: CE F6 E8 FB 08 E8 C4 09 E8 41 F6 8D 9C 00 03 E8  // .........A......
    1D70: AC 07 E8 F5 07 66 C1 CE 10 B5 01 E8 0B 07 E8 00  // .....f..........
    1D80: FF A8 40 75 07 32 C0 B5 01 E8 7E 08 66 C1 CE 10  // ..@u.2....~.f...
    1D90: C3 E8 18 F6 B5 01 E8 4B 07 B5 00 E8 79 07 E8 DC  // .......K....y...
    1DA0: 07 B1 0F E8 69 0A E8 26 00 C3 E8 52 00 E8 0C F6  // ....i..&...R....
    1DB0: B5 00 E8 2F 07 B5 00 E8 5D 07 E8 81 F6 E8 C6 0F  // .../....].......
    1DC0: 38 C1 74 0A 80 F9 0B 74 05 B5 03 E8 92 08 C3 B1  // 8.t....t........
    1DD0: 10 E8 3B 0A E8 B3 F5 80 FD 00 74 06 B1 01 E8 A4  // ..;.......t.....
    1DE0: 0A C3 E8 A6 05 80 FD 01 75 07 B5 02 E8 D5 05 EB  // ........u.......
    1DF0: 03 E8 F3 01 B1 0D E8 16 0A B1 03 E8 54 00 C3 E8  // ............T...
    1E00: D5 F5 0B D2 74 05 B1 00 E8 42 0A B1 02 E8 42 00  // ....t....B....B.
    1E10: E8 5B F6 A8 01 74 12 E8 70 F5 80 FD 00 75 0A B1  // .[...t..p....u..
    1E20: 0C E8 EB 09 B0 02 E8 91 04 B1 00 E8 57 0A B1 0D  // ............W...
    1E30: E8 1F 00 C3 B1 07 E8 4C 0A E8 9B F5 0B D2 75 0C  // .......L......u.
    1E40: E8 09 F6 E8 EB 0B 75 09 E8 F2 0A C3 B1 07 E8 FC  // ......u.........
    1E50: 09 C3 E8 F7 F5 E8 D9 0B 75 24 51 E8 27 0A 59 80  // ........u$Q.'.Y.
    1E60: F9 0C 75 1A 33 D2 56 83 C6 08 E8 02 0C 5E 0A C0  // ..u.3.V......^..
    1E70: 75 0C B9 0A 00 E8 62 0F 42 83 FA 1E 75 E8 C3 80  // u.....b.B...u...
    1E80: FB 01 0F 84 C5 00 E8 A5 05 66 C1 E1 10 8D 9C 35  // .........f.....5
    1E90: 01 E8 AB 12 A8 01 74 05 51 E8 2B 04 59 E8 68 F5  // ......t.Q.+.Y.h.
    1EA0: B0 04 E8 9C 05 66 BA 50 01 40 50 E8 76 05 E8 B8  // .....f.P.@P.v...
    1EB0: 0A 75 7E 66 BA 50 01 50 4F 8D 9C 2D 01 E8 7F 12  // .u~f.P.PO..-....
    1EC0: 24 06 3C 02 75 02 B6 02 B0 05 E8 74 05 E8 54 05  // $.<.u......t..T.
    1ED0: 8D 5C 28 03 D8 E8 91 0A 75 57 0A FF 75 09 B0 0A  // .\(.....uW..u...
    1EE0: E8 5E 05 32 DB EB 4A 51 33 C9 8A CF E8 35 05 03  // .^.2..JQ3....5..
    1EF0: C8 E8 3A 05 59 B0 07 E8 47 05 66 BA 50 01 10 30  // ..:.Y...G.f.P..0
    1F00: 33 DB E8 64 0A 74 0F 51 8A EB 8D 9C 44 01 B1 02  // 3..d.t.Q....D...
    1F10: E8 D0 11 59 EB 61 E8 0B 05 66 C1 C9 10 2B C1 66  // ...Y.a...f...+.f
    1F20: C1 C1 10 3D 80 00 0F 82 76 FF B0 08 E8 12 05 EB  // ...=....v.......
    1F30: 43 51 8A EB 8D 9C 44 01 B1 02 E8 A6 11 59 66 BA  // CQ....D......Yf.
    1F40: 50 01 10 30 33 DB E8 20 0A EB 2C 8D 5C 28 03 D9  // P..03.. ..,.\(..
    1F50: 53 8A E9 B1 32 51 5F E8 AE F4 8A E9 B1 A0 BA 00  // S...2Q_.........
    1F60: 80 E8 DA 09 80 FF 01 5B 74 0A B1 A2 E8 CF 09 80  // .......[t.......
    1F70: FF 01 75 03 B0 00 C3 B0 01 C3 51 B1 0C E8 D2 FE  // ..u.......Q.....
    1F80: 59 B0 01 E8 BB 04 56 83 C6 08 E8 E2 0A 5E 0A C0  // Y.....V......^..
    1F90: 75 04 B3 10 EB 3F B0 02 E8 A6 04 E8 38 00 74 11  // u....?......8.t.
    1FA0: B0 03 E8 9C 04 B0 01 E8 10 03 75 29 E8 27 00 75  // ..........u).'.u
    1FB0: 24 66 BA 0C 00 90 43 8D 9C 30 01 E8 AB 09 66 BA  // $f....C..0....f.
    1FC0: 20 00 90 41 8D 9C 34 01 E8 9E 09 E8 BD 03 B0 09  //  ..A..4.........
    1FD0: E8 6E 04 33 DB C3 E8 2F F4 66 BA 00 00 90 47 8D  // .n.3.../.f....G.
    1FE0: 9C 28 01 E8 83 09 C3 B1 0C E8 66 FE B1 00 E8 94  // .(........f.....
    1FF0: 08 B1 01 E8 8F 08 8D 9C AC 03 66 B8 00 00 00 00  // ..........f.....
    2000: E8 9C 10 B0 01 E8 B2 02 74 0A B5 04 E8 CB 03 B3  // ........t.......
    2010: 08 E9 3F 01 B1 08 E8 F6 07 E8 D2 02 B1 09 E8 EE  // ..?.............
    2020: 07 E8 C5 01 8D 9C B8 03 66 33 C0 E8 71 10 E8 60  // ........f3..q..`
    2030: 01 B9 90 01 E8 98 0D B0 01 E8 63 02 B5 02 E8 8D  // ..........c.....
    2040: 03 E8 74 01 E8 9F 03 E8 E0 01 B5 03 E8 7F 03 33  // ..t............3
    2050: C9 E8 00 01 F6 C5 01 75 34 B5 02 E8 70 03 E8 20  // .......u4...p.. 
    2060: 01 F6 C5 04 74 08 B5 01 E8 6F 03 E9 CC 00 8A FD  // ....t....o......
    2070: 80 E7 03 E8 E8 00 80 E3 03 38 FB 75 0D E8 4C 01  // .........8.u..L.
    2080: 75 08 B5 02 E8 53 03 E9 B0 00 E8 67 01 FE C1 E8  // u....S.....g....
    2090: 85 F3 38 D9 75 BB 8D 9C AC 03 E8 A2 10 3C 03 74  // ..8.u........<.t
    20A0: 05 E8 ED 00 EB 9B 8D 9C B0 03 66 33 C0 E8 EF 0F  // ..........f3....
    20B0: 8D 9C 2A 01 E8 88 10 A8 40 74 0C B1 13 E8 4F 07  // ..*.....@t....O.
    20C0: B0 03 E8 DA 01 EB 0A B1 0A E8 43 07 B0 02 E8 CE  // ..........C.....
    20D0: 01 B5 04 E8 F8 02 E8 DF 00 E8 0A 03 E8 4B 01 B5  // .............K..
    20E0: 05 E8 EA 02 33 C9 E8 6B 00 80 FD 07 75 05 E8 86  // ....3..k....u...
    20F0: 00 75 2E 51 B5 04 E8 D5 02 59 F6 C5 01 75 07 B5  // .u.Q.....Y...u..
    2100: 03 E8 D6 02 EB 34 E8 78 00 8A D5 E8 E6 00 E8 70  // .....4.x.......p
    2110: 00 38 EA 75 0C E8 B4 00 75 07 B5 02 E8 BB 02 EB  // .8.u....u.......
    2120: 19 FE C1 E8 F1 F2 38 D9 75 BC 8D 9C AC 03 E8 0E  // ......8.u.......
    2130: 10 3C 04 75 05 E8 59 00 EB 9C B0 00 E8 60 01 B1  // .<.u..Y......`..
    2140: 0B E8 CB 06 8D 9C AD 03 E8 F4 0F B3 00 0A C0 74  // ...............t
    2150: 02 B3 08 C3 8D 9C C0 03 E8 0F 00 8A E8 C3 53 8D  // ..............S.
    2160: 9C C4 03 E8 04 00 5B 8A D8 C3 51 E8 D1 0F C0 E1  // ......[...Q.....
    2170: 02 D3 E8 24 0F 59 C3 8D 9C C2 03 E8 C1 0F A8 01  // ...$.Y..........
    2180: C3 8D 9C B8 03 E8 73 0F C3 8D 9C B8 03 E8 53 0F  // ......s.......S.
    2190: C3 33 C9 33 D2 E8 E9 FF 38 D5 76 02 8A D5 FE C1  // .3.3....8.v.....
    21A0: E8 74 F2 38 D9 72 EE 33 C9 8A EA 8D 9C 5C 03 E8  // .t.8.r.3.....\..
    21B0: 31 0F B1 0B E8 CE 06 C3 E8 4D F2 8D 9C B8 03 E8  // 1........M......
    21C0: 7D 0F 66 BA 03 01 80 83 E8 9E 07 C3 51 53 8D 9C  // }.f.........QS..
    21D0: B0 03 E8 26 0F FE C5 E8 09 0F 80 FD 06 72 07 B5  // ...&.........r..
    21E0: 02 E8 F6 01 33 C9 5B 59 C3 66 33 C0 8D 9C B0 03  // ....3.[Y.f3.....
    21F0: E8 AC 0E C3 32 ED E8 65 FF 80 E3 0C C0 EB 02 B7  // ....2..e........
    2200: 03 2A FB C0 E3 03 8A EB 80 FB 18 72 03 80 CD 20  // .*.........r... 
    2210: E8 4B FF 80 E3 03 38 FB 72 02 8A DF 80 FB 03 75  // .K....8.r......u
    2220: 03 80 CD 04 0A EB E8 60 FF C3 E8 DB F1 8D 9C C0  // .......`........
    2230: 03 66 BA 02 02 90 45 E8 2F 07 C3 E8 CA F1 66 BA  // .f....E./.....f.
    2240: 00 01 90 42 8D 9C B4 03 E8 1E 07 E8 BA F1 66 BA  // ...B..........f.
    2250: 03 01 90 45 8D 9C B8 03 E8 0E 07 E8 EE F1 E8 D4  // ...E............
    2260: 07 75 3B E8 A2 F1 66 BA 0A 01 90 40 8D 9C BF 03  // .u;...f....@....
    2270: E8 F6 06 8D 9C 28 01 E8 C5 0E 3C 14 72 20 E8 87  // .....(....<.r ..
    2280: F1 66 BA 10 00 90 4F 8D 9C D0 03 E8 DB 06 E8 77  // .f....O........w
    2290: F1 66 BA 15 01 90 40 8D 9C CC 03 E8 CB 06 C3 E8  // .f....@.........
    22A0: 66 F1 66 BA 02 01 80 50 E8 BE 06 C3 E8 48 F1 8B  // f.f....P.....H..
    22B0: C2 66 33 D2 B9 8C 0A F7 F1 C3 E8 4B F1 66 BA 00  // .f3........K.f..
    22C0: 06 80 50 E8 A3 06 C3 E8 3E F1 66 BA 11 01 80 50  // ..P.....>.f....P
    22D0: B0 04 E8 94 06 C3 E8 2F F1 66 BA 00 06 90 40 8D  // ......./.f....@.
    22E0: 9C C8 03 E8 83 06 8D 9C C8 03 E8 52 0E C3 E8 BB  // ...........R....
    22F0: FF 3C 06 74 0E 3C 0A 74 0A 3C 14 74 06 3C 1E 74  // .<.t.<.t.<.t.<.t
    2300: 02 33 C0 E8 11 F1 8A E3 80 CC 80 50 E8 F9 F0 58  // .3.........P...X
    2310: 66 BA 00 01 80 61 E8 50 06 33 C9 E8 84 F0 0B C0  // f....a.P.3......
    2320: 74 02 B5 10 8D 9C BC 03 E8 B8 0D 8A C5 E8 D8 F0  // t...............
    2330: 66 BA 07 01 80 50 E8 30 06 E8 10 F1 E8 F6 06 75  // f....P.0.......u
    2340: 49 8D 9C 48 03 E8 F7 0D 0A C0 74 0E E8 B9 F0 66  // I..H......t....f
    2350: BA 0A 01 80 50 B0 01 E8 0F 06 8D 9C 28 01 E8 DE  // ....P.......(...
    2360: 0D 3C 14 72 25 8D 9C D0 03 E8 D3 0D 0B C0 74 1A  // .<.r%.........t.
    2370: E8 3C EC 32 C9 8D 9C CC 03 E8 67 0D 8A C5 E8 87  // .<.2......g.....
    2380: F0 66 BA 15 01 80 50 E8 DF 05 C3 8D 9C B4 03 B9  // .f....P.........
    2390: 0E 00 E8 F4 09 E8 A3 FE E8 8F FE E8 38 FF 3C 01  // ............8.<.
    23A0: 75 1C E8 D2 FD 74 17 33 C9 E8 A8 FD 80 FD 07 75  // u....t.3.......u
    23B0: 0D FE C1 E8 61 F0 38 D9 75 EF B5 01 EB 02 B5 00  // ....a.8.u.......
    23C0: E8 01 00 C3 8D 9C AC 03 B1 02 E8 16 0D C3 51 8D  // ..............Q.
    23D0: 9C AC 03 32 C9 E8 0B 0D 59 C3 51 8D 9C AC 03 B1  // ...2....Y.Q.....
    23E0: 01 E8 FF 0C 59 C3 8D 9C 32 01 E8 52 0D 24 07 75  // ....Y...2..R.$.u
    23F0: 15 B9 64 00 8D 9C AC 03 E8 44 0D 3C 02 74 03 B9  // ..d......D.<.t..
    2400: 90 01 E8 CA 09 C3 32 E4 B1 04 33 D2 F6 E1 8B C8  // ......2...3.....
    2410: E8 C7 09 C3 51 8D 5C 14 E8 24 0D 66 C1 E0 10 E8  // ....Q.\..$.f....
    2420: A4 01 59 C3 53 8D 9C 44 01 E8 13 0D 5B C3 53 66  // ..Y.S..D....[.Sf
    2430: 50 8D 9C 44 01 E8 07 0D 8B C1 E8 62 0C 66 58 5B  // P..D.......b.fX[
    2440: C3 53 51 8D 9C 44 01 8A E8 B1 03 E8 95 0C 59 5B  // .SQ..D........Y[
    2450: C3 33 C9 E8 2D 09 38 C1 73 05 B5 00 E8 8C 00 B5  // .3..-.8.s.......
    2460: 00 E8 80 00 FE C1 E8 1A 09 38 C1 72 E6 B1 14 8A  // .........8.r....
    2470: E9 E8 12 09 38 C1 74 05 B5 03 E8 E3 01 FE C1 E8  // ....8.t.........
    2480: FB 08 04 14 38 C1 76 E7 C3 83 EC 0C 8B EC 0B F6  // ....8.v.........
    2490: 74 1E E8 02 F8 66 C1 C8 10 66 89 46 00 8D 5C 04  // t....f...f.F..\.
    24A0: E8 9C 0C 66 89 46 04 8D 5C 08 E8 92 0C 88 46 0A  // ...f.F..\.....F.
    24B0: 89 4E 08 8C D0 66 C1 E0 10 8B C4 BB 2B 00 E8 D8  // .N...f......+...
    24C0: 07 83 C4 0C C3 83 EC 04 8B EC B0 02 88 46 01 88  // .............F..
    24D0: 4E 00 8C D0 66 C1 E0 10 8B C4 BB 25 00 E8 B9 07  // N...f......%....
    24E0: 83 C4 04 C3 BB 23 00 E8 08 00 C3 BB 17 00 E8 01  // .....#..........
    24F0: 00 C3 83 EC 04 8B EC 89 4E 00 8C D0 66 C1 E0 10  // ........N...f...
    2500: 8B C4 E8 94 07 83 C4 04 C3 BB 22 00 E8 E3 FF C3  // ..........".....
    2510: BB 27 00 E8 DC FF C3 BB 2C 00 E8 D5 FF C3 E8 1E  // .'......,.......
    2520: 0C 66 A9 00 00 FF FF 74 40 83 EC 18 8B EC 55 51  // .f.....t@.....UQ
    2530: B9 04 00 83 C3 02 E8 06 0C 66 89 46 00 83 C5 04  // .........f.F....
    2540: 83 C3 04 E2 F1 83 C3 04 E8 F4 0B 66 C1 C8 10 66  // ...........f...f
    2550: 89 46 00 59 5D 88 4E 14 8C D0 66 C1 E0 10 8B C4  // .F.Y].N...f.....
    2560: BB 31 00 E8 33 07 83 C4 18 C3 E8 3F EE 8D 9C D0  // .1..3......?....
    2570: 02 E8 CB 0B 8A E8 BB 21 00 E8 76 FF C3 8D 9C 3C  // .......!..v....<
    2580: 03 E8 BB 0B 8A F8 E8 01 EE 8A DD 53 8D 9C 42 03  // ...........S..B.
    2590: E8 AC 0B 8A E8 5B E8 13 EE E8 B0 EE E8 96 04 75  // .....[.........u
    25A0: 02 B3 01 83 EC 04 8B EC 88 4E 00 88 7E 01 88 5E  // .........N..~..^
    25B0: 02 88 6E 03 8C D0 66 C1 E0 10 8B C4 BB 2A 00 E8  // ..n...f......*..
    25C0: D7 06 83 C4 04 C3 83 EC 10 8B EC 66 3D F0 FF FF  // ...........f=...
    25D0: 03 76 06 66 B8 F0 FF FF 03 66 8B C8 66 33 C0 66  // .v.f.....f..f3.f
    25E0: 89 46 04 66 89 46 00 66 89 46 08 66 B8 00 00 00  // .F.f.F.f.F.f....
    25F0: D0 66 0B C1 66 89 46 0C 8C D0 66 C1 E0 10 8B C4  // .f..f.F...f.....
    2600: BB 35 00 E8 93 06 83 C4 10 C3 83 EC 08 8B EC 89  // .5..............
    2610: 4E 00 66 89 56 02 89 5E 06 8C D0 66 C1 E0 10 8B  // N.f.V..^...f....
    2620: C4 BB 2D 00 E8 72 06 83 C4 08 C3 3D C0 7F 76 04  // ..-..r.....=..v.
    2630: B8 C0 7F C3 83 C0 3F 24 C0 C3 51 E8 01 0B 66 33  // ......?$..Q...f3
    2640: D2 B9 0A 00 F7 F1 8B C8 E8 F4 0A 03 C1 66 25 FF  // .............f%.
    2650: FF 00 00 59 3D 10 27 73 03 B8 10 27 C3 32 D2 C3  // ...Y=.'s...'.2..
    2660: 80 FD 02 75 25 E8 4E EE 66 BB 00 08 00 00 E8 9A  // ...u%.N.f.......
    2670: 00 E8 42 EE 66 BB 03 08 00 00 E8 8E 00 66 33 D2  // ..B.f........f3.
    2680: 66 BB 01 08 00 00 E8 82 00 C3 80 FD 03 75 10 66  // f............u.f
    2690: 33 C0 8A C1 66 33 D2 66 BB FF 00 00 00 EB 36 51  // 3...f3.f......6Q
    26A0: 33 D2 E8 E5 EC 8A D5 66 C1 E2 10 E8 1E ED 8A F2  // 3......f........
    26B0: 8A D1 66 8B C2 66 0D 00 00 00 80 E8 59 ED 80 FB  // ..f..f......Y...
    26C0: 04 76 06 66 0D 00 00 00 08 E8 8F ED E8 DD EC 66  // .v.f...........f
    26D0: 33 DB 8A D9 59 83 EC 10 8B EC 66 89 46 04 66 89  // 3...Y.....f.F.f.
    26E0: 5E 08 66 8B C2 66 33 D2 66 BB 64 00 00 00 66 F7  // ^.f..f3.f.d...f.
    26F0: E3 66 89 46 00 BB 0C 00 8C D0 66 C1 E0 10 8B C4  // .f.F......f.....
    2700: E8 96 05 8B EC B3 01 83 C4 10 C3 83 EC 10 8B EC  // ................
    2710: 66 89 56 00 66 89 5E 04 BB 2E 00 8C D0 66 C1 E0  // f.V.f.^......f..
    2720: 10 8B C4 E8 73 05 B3 01 83 C4 10 C3 C3 53 51 66  // ....s........SQf
    2730: 50 B9 68 74 80 FB 03 74 0B B9 A0 8C 80 FB 00 75  // P.ht...t.......u
    2740: 03 B9 78 69 66 33 D2 8B D1 66 58 59 5B C3 66 52  // ..xif3...fXY[.fR
    2750: B3 00 66 F7 C2 00 00 FF FF 75 1A 80 FD 13 74 15  // ..f......u....t.
    2760: 80 FD 14 74 10 B3 01 80 FD 0E 74 09 B3 03 80 F9  // ...t......t.....
    2770: 03 74 02 B3 02 66 5A C3 B5 11 80 FA 23 74 07 80  // .t...fZ.....#t..
    2780: FA 22 74 02 B5 00 C3 B5 02 80 FA 23 74 07 80 FA  // ."t........#t...
    2790: 22 74 02 B3 01 C3 32 C9 80 FD 00 75 08 C7 46 00  // "t....2....u..F.
    27A0: 0B 01 B1 01 C3 50 33 C0 E8 73 01 04 14 89 46 00  // .....P3..s....F.
    27B0: 58 B1 01 C3 C3 8B DA B7 22 80 FE 21 74 02 B7 21  // X......."..!t..!
    27C0: C3 0C 01 C3 E8 78 09 66 C1 E8 10 0B C0 74 1C 53  // .....x.f.....t.S
    27D0: 83 C3 06 E8 69 09 5B 3D E0 01 72 0F 53 83 C3 18  // ....i.[=..r.S...
    27E0: E8 5C 09 5B A8 80 75 03 0C 01 C3 32 C0 C3 B5 0C  // .\.[..u....2....
    27F0: C3 B5 02 C3 50 E8 26 01 B1 03 0A C0 74 04 B1 08  // ....P.&.....t...
    2800: 02 C8 58 C3 80 FA 22 75 05 C7 46 00 78 69 C3 E8  // ..X..."u..F.xi..
    2810: EF 00 80 FD FF 74 35 83 EC 0C 8B EC 88 4E 01 88  // .....t5......N..
    2820: 6E 00 80 F9 0F 75 05 E8 24 00 EB 0F 80 F9 10 75  // n....u..$......u
    2830: 0A 8D 9C 48 03 E8 07 09 88 46 02 8C D0 66 C1 E0  // ...H.....F...f..
    2840: 10 8B C4 BB 04 00 E8 50 04 83 C4 0C C3 C3 66 53  // .......P......fS
    2850: E8 A4 EB 66 8B C2 66 33 D2 66 BB 8C 0A 00 00 66  // ...f..f3.f.....f
    2860: F7 F3 66 5B 8A E8 88 6E 09 8D 9C 40 03 E8 CF 08  // ..f[...n...@....
    2870: 88 46 02 88 66 03 66 C1 E8 10 88 46 08 E8 66 EB  // .F..f.f....F..f.
    2880: 66 89 56 04 C3 83 EC 20 8B EC 80 F9 04 75 0A 88  // f.V.... .....u..
    2890: 4E 01 32 C0 88 46 00 EB 56 E8 30 EB E8 7F 00 88  // N.2..F..V.0.....
    28A0: 46 00 88 4E 01 E8 A4 EB 88 56 0A 80 F9 01 74 18  // F..N.....V....t.
    28B0: 80 F9 0B 75 3A 8D 9C 5C 03 E8 83 08 88 46 02 E8  // ...u:..\.....F..
    28C0: 24 EB 66 89 56 04 EB 27 E8 3D EB 88 6E 08 E8 15  // $.f.V..'.=..n...
    28D0: EB 66 89 56 04 E8 3F EB 88 5E 03 E8 AC EA 88 6E  // .f.V..?..^.....n
    28E0: 02 51 E8 1C 00 8A CD B0 01 D2 E0 59 88 46 09 8C  // .Q.........Y.F..
    28F0: D0 66 C1 E0 10 8B C4 BB 4C 00 E8 9C 03 83 C4 20  // .f......L...... 
    2900: C3 8D 9C 3C 03 E8 37 08 32 ED 3C 03 74 0C 3C 09  // ...<..7.2.<.t.<.
    2910: 72 09 3C 0E 77 05 2C 08 8A E8 C3 B5 FF C3 52 32  // r.<.w.,.......R2
    2920: C0 80 EE 21 80 FA 1E 74 10 B0 02 80 FA 20 74 09  // ...!...t..... t.
    2930: B0 04 80 FA 21 74 02 B0 06 02 C6 5A C3 C3 83 EC  // ....!t.....Z....
    2940: 08 8B EC 89 7E 00 89 5E 02 89 56 04 89 4E 06 8C  // ....~..^..V..N..
    2950: D0 66 C1 E0 10 8B C4 BB 36 00 E8 3C 03 8B EC 8B  // .f......6..<....
    2960: 5E 02 8A 7E 01 83 C4 08 C3 56 33 F6 66 F7 C2 00  // ^..~.....V3.f...
    2970: 00 80 00 75 0A 50 33 C0 8A C6 8B F0 32 F6 58 53  // ...u.P3.....2.XS
    2980: BB 04 1F E8 19 07 66 8B C2 BB 00 1F E8 10 07 5B  // ......f........[
    2990: 66 F7 C2 00 00 10 00 75 02 33 DB 8B D3 66 C1 E2  // f......u.3...f..
    29A0: 10 BA 00 1F 83 EC 08 8B EC 66 89 56 00 88 4E 04  // .........f.V..N.
    29B0: 8A C5 FE C8 88 46 07 C6 46 05 00 C6 46 06 00 8C  // .....F..F...F...
    29C0: D0 66 C1 E0 10 8B C4 BB 4E 00 E8 CC 02 8B EC 8A  // .f......N.......
    29D0: 5E 05 8A 7E 06 83 C4 08 0A DB 74 32 51 B9 90 01  // ^..~......t2Q...
    29E0: 80 FB 20 74 05 80 FB 80 75 13 B9 0A 00 8B C6 0A  // .. t....u.......
    29F0: C0 74 0A B9 90 01 3C 01 74 03 B9 E8 03 E8 CF 03  // .t....<.t.......
    2A00: 59 8B C6 FE C4 8B F0 80 FC 06 76 98 0A DB 5E C3  // Y.........v...^.
    2A10: 8D 5C 04 E8 29 07 8B D0 B5 02 E8 14 00 74 11 B5  // .\..)........t..
    2A20: 01 80 FA 13 75 0A E8 61 00 80 FA 13 75 02 B5 02  // ....u..a....u...
    2A30: C3 80 FA 14 C3 E8 F9 FF 74 03 80 FA 0E C3 80 FA  // ........t.......
    2A40: 05 C3 80 FA 02 74 03 80 FA 04 C3 80 FA 01 74 03  // .....t........t.
    2A50: 80 FA 02 C3 80 FA 02 75 03 B2 01 C3 80 FA 04 75  // .......u.......u
    2A60: 03 B2 03 C3 C3 B5 08 E8 D8 FF 74 02 B5 04 C3 8D  // ..........t.....
    2A70: 5C 09 E8 CA 06 8A C8 0A C9 75 03 32 C0 C3 B5 02  // \........u.2....
    2A80: E8 DA 02 8A C5 24 02 D0 E8 C3 8D 5C 08 E8 AF 06  // .....$.....\....
    2A90: 8A D0 B6 01 83 EC 10 8B EC 89 56 02 8C D0 66 C1  // ..........V...f.
    2AA0: E0 10 8B C4 BB 4F 00 E8 EF 01 8B EC 8A 56 04 83  // .....O.......V..
    2AB0: C4 10 C3 53 83 C3 4C E8 53 06 5B C3 53 83 C3 4C  // ...S..L.S.[.S..L
    2AC0: E8 A5 05 5B C3 56 E8 96 01 8B 44 38 83 7D 20 00  // ...[.V....D8.} .
    2AD0: 5E C3 52 50 0F BC D8 32 FF 80 FB 01 75 05 BB 00  // ^.RP...2....u...
    2AE0: 24 EB 0C FE CB B8 00 04 F7 E3 05 00 20 8B D8 58  // $........... ..X
    2AF0: 5A C3 57 E8 56 00 74 0A 8B 5D 02 E8 08 00 0B DB  // Z.W.V.t..]......
    2B00: 5F C3 33 DB 5F C3 52 51 0B DB 74 1B 56 E8 36 01  // _.3._.RQ..t.V.6.
    2B10: 03 DE 5E 33 C9 8A 4F 01 80 3F FF 74 08 3A 07 74  // ..^3..O..?.t.:.t
    2B20: 06 03 D9 EB F0 33 DB 0B DB 59 5A C3 56 51 E8 15  // .....3...YZ.VQ..
    2B30: 01 32 C9 8D 7C 08 3B 5D 04 74 0C 83 C7 10 FE C1  // .2..|.;].t......
    2B40: 3A 4C 06 72 F1 33 FF 0B FF 59 5E C3 56 51 E8 F5  // :L.r.3...Y^.VQ..
    2B50: 00 32 C9 8D 7C 08 3B 1D 74 0C 83 C7 10 FE C1 3A  // .2..|.;.t......:
    2B60: 4C 06 72 F2 33 FF 0B FF 59 5E C3 56 51 E8 D6 00  // L.r.3...Y^.VQ...
    2B70: 32 C9 8D 7C 08 3B 45 0C 74 0C 83 C7 10 FE C1 3A  // 2..|.;E.t......:
    2B80: 4C 06 72 F1 33 FF 0B FF 59 5E C3 57 50 E8 DB FF  // L.r.3...Y^.WP...
    2B90: 8A C3 8B 5D 02 E8 6E FF 58 5F C3 53 32 C9 B3 01  // ...]..n.X_.S2...
    2BA0: E8 E8 FF 74 03 8A 4F 02 0A C9 5B C3 53 32 ED B3  // ...t..O...[.S2..
    2BB0: 02 E8 D7 FF 74 03 8A 6F 02 0A ED 5B C3 50 57 8B  // ....t..o...[.PW.
    2BC0: DA E8 68 FF 75 04 33 DB EB 0D B0 14 8B 5D 08 E8  // ..h.u.3......]..
    2BD0: 34 FF 74 F2 8B 5F 02 5F 58 C3 66 50 53 51 57 8D  // 4.t.._._X.fPSQW.
    2BE0: 1C 66 25 FF FF 00 00 E8 B5 04 8B D8 E8 3B 00 23  // .f%..........;.#
    2BF0: C3 74 31 E8 75 FF 0B FF 74 2A 66 50 66 8B 45 04  // .t1.u...t*fPf.E.
    2C00: 8D 5C 0C E8 99 04 66 33 C0 8B 05 8D 5C 04 E8 8E  // .\....f3....\...
    2C10: 04 66 58 E8 85 FF E8 93 FF 8D 5C 08 66 33 C0 8B  // .fX.......\.f3..
    2C20: C1 E8 7B 04 5F 59 5B 66 58 C3 56 E8 18 00 8B 44  // ..{._Y[fX.V....D
    2C30: 04 5E C3 56 E8 0F 00 89 44 04 5E C3 C3 BF DA 02  // .^.V....D.^.....
    2C40: 8B 3D 8B 7D 0C C3 BE DA 02 8B 34 8B 74 30 C3 1E  // .=.}......4.t0..
    2C50: 0E 1F BF DA 02 8B 3D 8B 7D 0E 83 C7 04 1F C3 BE  // ......=.}.......
    2C60: DA 02 8B 34 8B 74 10 C3 BF DA 02 8B 3D 8B 7D 26  // ...4.t......=.}&
    2C70: 83 C7 04 C3 BE DA 02 8B 34 8B 74 1A C3 BE DA 02  // ........4.t.....
    2C80: 8B 34 8B 74 3A C3 BF DA 02 8B 3D 8B 7D 0A 83 C7  // .4.t:.....=.}...
    2C90: 04 B9 07 00 C3 E8 01 00 CB 83 EC 06 8B EC 89 46  // ...............F
    2CA0: 00 66 33 C0 C6 46 04 00 89 46 02 06 52 8A D3 8B  // .f3..F...F..R...
    2CB0: C5 E8 CD 16 5A 07 83 C4 06 C3 E8 80 FF 66 F7 45  // ....Z........f.E
    2CC0: 10 01 00 00 00 C3 50 E8 73 FF B8 01 00 09 45 10  // ......P.s.....E.
    2CD0: 58 C3 E8 68 FF 88 45 10 C3 66 53 83 EC 48 8B EC  // X..h..E..fS..H..
    2CE0: 66 89 5E 00 66 89 4E 04 8C D0 66 C1 E0 10 8B C4  // f.^.f.N...f.....
    2CF0: BB 00 00 E8 A3 FF 83 C4 48 66 5B E8 6A 01 E8 A4  // ........Hf[.j...
    2D00: 01 83 EC 1C 8B EC C6 46 01 07 8C D0 66 C1 E0 10  // .......F....f...
    2D10: 8B C4 BB 0D 00 E8 81 FF 83 C4 1C E8 0E 00 BB 04  // ................
    2D20: 00 E8 8F FD 66 C1 E8 10 E8 A7 FF C3 83 EC 1C 8B  // ....f...........
    2D30: EC C6 46 01 08 8C D0 66 C1 E0 10 8B C4 BB 0D 00  // ..F....f........
    2D40: E8 56 FF 83 C4 1C C3 E8 F3 FE 66 8B 5D 08 66 8B  // .V........f.].f.
    2D50: 4D 0C C3 56 E8 26 FF 66 8B 44 08 5E C3 83 EC 04  // M..V.&.f.D.^....
    2D60: 8B EC 89 4E 00 8C D0 66 C1 E0 10 8B C4 BB 38 00  // ...N...f......8.
    2D70: E8 26 FF 8B EC 8A 6E 02 83 C4 04 C3 C3 B0 06 C3  // .&....n.........
    2D80: B0 01 C3 B0 05 C3 B0 08 C3 53 66 50 66 33 C0 E8  // .........SfPf3..
    2D90: 0D 03 83 C3 04 E2 F8 66 58 5B C3 32 C0 C3 FC E8  // .......fX[.2....
    2DA0: 9D 03 66 C1 CB 10 E8 F6 02 66 C1 CB 10 66 81 C3  // ..f......f...f..
    2DB0: 04 00 04 00 E2 E9 C3 FC 66 AD E8 E2 02 83 C3 04  // ........f.......
    2DC0: E2 F6 C3 FC E8 78 03 66 AB 83 C3 04 E2 F6 C3 66  // .....x.f.......f
    2DD0: 50 B8 64 00 E8 10 00 66 58 C3 66 50 B8 50 C3 D1  // P.d....fX.fP.P..
    2DE0: E1 E8 03 00 66 58 C3 52 F7 E1 8B CA E8 69 01 66  // ....fX.R.....i.f
    2DF0: 53 8B D9 66 C1 E3 10 8B D8 66 B8 04 B1 03 00 B2  // S..f.....f......
    2E00: 00 66 EF B2 04 66 33 C0 66 EF 66 B8 08 B1 03 00  // .f...f3.f.f.....
    2E10: B2 00 66 EF B2 04 66 ED 33 C9 66 03 D8 73 0A 66  // ..f...f.3.f..s.f
    2E20: ED 66 A9 00 00 00 80 75 F6 66 ED 66 3B C3 73 0C  // .f.....u.f.f;.s.
    2E30: 66 C1 E8 10 3B C1 72 04 8B C8 EB ED 66 5B 5A C3  // f...;.r.....f[Z.
    2E40: BB 42 EC E8 C7 02 66 33 D2 66 BB 64 00 00 00 66  // .B....f3.f.d...f
    2E50: F7 F3 C3 66 50 53 BB 07 00 E8 57 FC 25 00 02 35  // ...fPS....W.%..5
    2E60: 00 02 0B C0 5B 66 58 C3 66 51 B3 01 E8 C4 00 E8  // ....[fX.fQ......
    2E70: 02 FE 66 33 C9 8B 4C 08 66 C1 E0 0A 0B C9 75 03  // ..f3..L.f.....u.
    2E80: B9 20 00 66 2B C1 E8 EB FD 66 89 44 04 89 4C 08  // . .f+....f.D..L.
    2E90: 66 59 C3 56 1E 0E 1F E8 DA FD 66 8B 44 04 66 C1  // fY.V......f.D.f.
    2EA0: E0 0A 1F 5E C3 C3 BE DA 02 8B 34 8B 74 1E 83 C6  // ...^......4.t...
    2EB0: 04 B9 1C 00 C3 56 E8 A6 FD 8A 6C 33 5E C3 56 E8  // .....V....l3^.V.
    2EC0: 9D FD 53 81 C3 09 01 E8 75 02 8A E8 5B 53 81 C3  // ..S.....u...[S..
    2ED0: 00 01 E8 6A 02 5B 8A C5 66 89 44 34 5E C3 56 E8  // ...j.[..f.D4^.V.
    2EE0: 7D FD 66 8B 44 34 53 81 C3 08 01 B1 01 8A E8 E8  // }.f.D4S.........
    2EF0: F1 01 5B 53 81 C3 00 01 B1 01 8A EC E8 E4 01 5B  // ..[S...........[
    2F00: 53 81 C3 02 01 66 C1 E8 10 E8 AB 01 5B 5E C3 56  // S....f......[^.V
    2F10: E8 4C FD 8B FE 83 C7 04 5E C3 56 E8 41 FD 8A 44  // .L......^.V.A..D
    2F20: 24 80 FD 00 74 05 88 6C 33 0C 02 88 44 24 5E C3  // $...t..l3...D$^.
    2F30: 32 C0 C3 66 53 83 EC 04 8B EC 8C D0 66 C1 E0 10  // 2..fS.......f...
    2F40: 8B C4 66 89 5E 00 BB 06 00 E8 4D FD 8B EC 66 8B  // ..f.^.....M...f.
    2F50: 46 00 83 C4 04 66 5B C3 66 50 8C C8 3D 00 C0 75  // F....f[.fP..=..u
    2F60: 0C BA C3 03 EC 8A F0 0A F6 74 02 EB 0E 53 2E 8B  // .........t...S..
    2F70: 1E 14 00 B2 20 E8 D6 00 8A F4 5B 32 D2 66 ED 66  // .... .....[2.f.f
    2F80: 58 C3 2E 8B 1E 14 00 C3 0B C9 75 1A 4B 74 16 43  // X.........u.Kt.C
    2F90: 3B DA 77 09 8B C8 8B C2 2B D2 F7 F3 91 F7 F3 8B  // ;.w.....+.......
    2FA0: DA 8B D1 2B C9 C3 3B CA 72 1A 75 10 3B D8 77 0C  // ...+..;.r.u.;.w.
    2FB0: 2B C3 8B D8 2B C9 2B D2 B8 01 00 C3 2B C9 2B DB  // +...+.+.....+.+.
    2FC0: 93 87 CA C3 55 56 2B F6 8B EE 03 DB 13 C9 72 11  // ....UV+.......r.
    2FD0: 45 3B CA 72 F5 77 04 3B D8 76 EF F8 13 F6 4D 78  // E;.r.w.;.v....Mx
    2FE0: 20 D1 D9 D1 DB 2B C3 1B D1 F5 72 F0 03 F6 4D 78  //  ....+....r...Mx
    2FF0: 0C D1 E9 D1 DB 03 C3 13 D1 73 F1 EB DF 03 C3 13  // .........s......
    3000: D1 8B D8 8B CA 8B C6 33 D2 5E 5D C3 93 50 92 0B  // .......3.^]..P..
    3010: C0 74 02 F7 E2 91 0B C0 74 04 F7 E3 03 C8 58 F7  // .t......t.....X.
    3020: E3 03 D1 C3 52 66 50 B4 80 8A C7 66 C1 E0 10 8A  // ....RfP....f....
    3030: E3 8A C2 24 FC BA F8 0C 66 EF 66 58 5A C3 52 BA  // ...$....f.fXZ.R.
    3040: FC 0C 66 ED 5A C3 52 BA FC 0C 66 EF 5A C3 E8 31  // ..f.Z.R...f.Z..1
    3050: FF 9C FA E8 CE FF E8 E5 FF 9D C3 E8 24 FF 9C FA  // ............$...
    3060: E8 C1 FF E8 E0 FF 9D C3 52 66 53 66 50 E8 06 00  // ........RfSfP...
    3070: 66 58 66 5B 5A C3 66 C1 E3 10 66 C1 EB 0E E8 D7  // fXf[Z.f...f.....
    3080: FE E8 93 01 C3 66 50 66 C1 E3 10 66 C1 EB 10 E8  // .....fPf...f....
    3090: 01 FE 66 03 D8 66 81 CB 00 00 00 80 66 58 C3 52  // ..f..f......fX.R
    30A0: 66 53 E8 04 00 66 5B 5A C3 66 50 E8 AA FE E8 D4  // fS...f[Z.fP.....
    30B0: FF E8 63 01 66 58 C3 52 51 66 53 66 50 8A CB 80  // ..c.fX.RQfSfP...
    30C0: E3 FC 80 E1 03 C0 E1 03 E8 8D FE E8 B7 FF E8 2D  // ...............-
    30D0: 01 66 D3 C8 58 50 66 D3 C0 E8 3B 01 66 58 66 5B  // .f..XPf...;.fXf[
    30E0: 59 5A C3 66 50 51 C0 E1 03 E8 53 00 66 D3 C8 8A  // YZ.fPQ....S.f...
    30F0: C5 66 D3 C0 E8 A8 FF 59 66 58 C3 66 50 51 C0 E1  // .f.....YfX.fPQ..
    3100: 03 E8 3B 00 66 D3 C8 59 8A E8 66 58 C3 E8 5F 00  // ..;.f..Y..fX.._.
    3110: C3 E8 44 FE 66 C1 E3 10 66 C1 EB 0E E8 DF 00 C3  // ..D.f...f.......
    3120: E8 35 FE 66 C1 E3 02 E8 D4 00 C3 52 66 53 E8 04  // .5.f.......RfS..
    3130: 00 66 5B 5A C3 E8 20 FE E8 4A FF E8 C0 00 C3 51  // .f[Z.. ..J.....Q
    3140: 66 52 8A EB 8A CB 80 E1 03 C0 E1 03 80 E3 FC E8  // fR..............
    3150: D9 FF 80 F9 00 74 14 66 8B D0 83 C3 04 E8 CB FF  // .....t.f........
    3160: 83 EB 04 66 92 66 0F AD D0 8A DD 66 5A 59 C3 52  // ...f.f.....fZY.R
    3170: 66 53 E8 9C FF 66 5B 5A C3 52 66 53 E8 A1 FF 66  // fS...f[Z.RfS...f
    3180: 5B 5A C3 66 50 55 52 66 50 8B EC 8B 56 0C 89 56  // [Z.fPURfP...V..V
    3190: 08 E8 C4 FD B2 00 66 ED 66 89 46 0A 66 58 5A 5D  // ......f.f.F.fXZ]
    31A0: C3 66 50 55 52 66 50 8B EC 8B 56 0C 89 56 08 E8  // .fPURfP...V..V..
    31B0: A6 FD 2E A1 29 03 B2 18 EF B2 00 66 ED 66 89 46  // ....)......f.f.F
    31C0: 0A 66 58 5A 5D C3 66 50 55 52 8B EC E8 89 FD B2  // .fXZ].fPUR......
    31D0: 00 66 8B 46 0A 66 EF 8B 56 08 89 56 0C 66 8B 46  // .f.F.f..V..V.f.F
    31E0: 04 66 89 46 08 5A 5D 66 58 66 58 C3 66 50 52 E8  // .f.F.Z]fXfX.fPR.
    31F0: 66 FD B2 18 66 ED 2E A3 29 03 5A 66 58 C3 66 81  // f...f...).ZfX.f.
    3200: FB FF 00 00 00 77 04 8A D3 EB 09 66 8B C3 B2 00  // .....w.....f....
    3210: 66 EF B2 04 66 ED C3 66 81 FB FF 00 00 00 77 04  // f...f..f......w.
    3220: 8A D3 EB 0A 66 93 B2 00 66 EF 66 93 B2 04 66 EF  // ....f...f.f...f.
    3230: C3 C3 C3 55 8B EC 53 51 8B F0 26 8B 5C 14 26 8B  // ...U..SQ..&.\.&.
    3240: 4C 16 E8 28 00 8D 66 FC 59 5B 5D C3 53 51 8B F0  // L..(..f.Y[].SQ..
    3250: 26 8B 5C 24 33 C9 E8 14 00 59 5B C3 55 8B EC 53  // &.\$3....Y[.U..S
    3260: 51 8B F0 26 8B 5C 08 26 8B 4C 0A EB D5 52 56 57  // Q..&.\.&.L...RVW
    3270: C8 06 00 00 8B F0 89 4E FE 8C D0 8E C0 26 8B 7C  // .......N.....&.|
    3280: 26 8A 45 01 32 E4 B9 20 00 2B C8 B8 FF FF 8B D0  // &.E.2.. .+......
    3290: E3 06 D1 EA D1 D8 E2 FA 8A 4D 03 32 ED 8B FA E3  // .........M.2....
    32A0: 06 D1 E0 D1 D7 E2 FA F7 D0 F7 D7 26 21 44 1C 26  // ...........&!D.&
    32B0: 21 7C 1E 8C D0 8E C0 26 8B 7C 26 8A 4D 01 32 ED  // !|.....&.|&.M.2.
    32C0: B8 20 00 2B C1 8B C8 66 C7 46 FA FF FF FF FF E3  // . .+...f.F......
    32D0: 08 D1 6E FC D1 5E FA E2 F8 8A 4D 02 32 ED 8B C3  // ..n..^....M.2...
    32E0: 8B 56 FE E3 06 D1 EA D1 D8 E2 FA 23 46 FA 23 56  // .V.........#F.#V
    32F0: FC 8A 4D 03 32 ED E3 06 D1 E0 D1 D2 E2 FA 26 09  // ..M.2.........&.
    3300: 44 1C 26 09 54 1E C9 5F 5E 5A C3 55 8B EC 53 51  // D.&.T.._^Z.U..SQ
    3310: 52 57 50 8B D8 26 8B 7F 26 8A 45 01 32 E4 B9 20  // RWP..&..&.E.2.. 
    3320: 00 2B C8 B8 FF FF 8B D0 E3 06 D1 EA D1 D8 E2 FA  // .+..............
    3330: 8A 4D 02 88 4E F6 C6 46 F7 00 8B FA 8B 4E F6 E3  // .M..N..F.....N..
    3340: 06 D1 E0 D1 D7 E2 FA 26 09 47 1C 26 09 7F 1E 8D  // .......&.G.&....
    3350: 66 F8 5F 5A E9 F1 FE 53 51 52 57 8B D8 8C D0 8E  // f._Z...SQRW.....
    3360: C0 26 8B 77 26 8A 4C 01 32 ED B8 20 00 2B C1 8B  // .&.w&.L.2.. .+..
    3370: C8 BE FF FF 8B D6 E3 06 D1 EA D1 DE E2 FA 26 8B  // ..............&.
    3380: 7F 26 8A 4D 02 32 ED 8B C6 E3 06 D1 E0 D1 D2 E2  // .&.M.2..........
    3390: FA F7 D0 F7 D2 26 21 47 1C 26 21 57 1E 5F E9 CC  // .....&!G.&!W._..
    33A0: 05 53 56 8B D8 8C D2 8E C2 26 8B 77 26 80 3C 00  // .SV......&.w&.<.
    33B0: 74 73 80 3C 01 75 58 8A 44 01 32 E4 26 83 7F 1E  // ts.<.uX.D.2.&...
    33C0: 00 75 4C 26 3B 47 1C 75 46 8A 04 6B F0 03 8A 84  // .uL&;G.uF..k....
    33D0: 00 90 26 01 47 26 8C D0 8E C0 26 8B 77 26 80 3C  // ..&.G&....&.w&.<
    33E0: 09 74 17 8A 04 32 E4 6B F0 03 8B C3 FF 94 FE 8F  // .t...2.k........
    33F0: 26 8B 77 26 8A 04 32 E4 EB D1 8B 44 01 26 29 47  // &.w&..2....D.&)G
    3400: 26 26 FF 47 26 26 8B 47 1C 26 8B 77 1E EB 1A 26  // &&.G&&.G.&.w...&
    3410: 8B 77 26 8A 04 32 E4 6B F0 03 8A 84 00 90 26 01  // .w&..2.k......&.
    3420: 47 26 E9 80 FF 33 C0 33 F6 8B D6 5E 5B C3 53 51  // G&...3.3...^[.SQ
    3430: 52 56 8B D8 8D 77 35 26 8B 54 02 26 89 57 14 26  // RV...w5&.T.&.W.&
    3440: C7 47 16 00 00 8B F0 26 8B 47 20 33 D2 26 01 47  // .G.....&.G 3.&.G
    3450: 14 26 11 54 16 8C D1 8E C1 26 F6 47 2F 06 0F 85  // .&.T.....&.G/...
    3460: 0A 05 26 80 7F 34 00 75 22 26 8B 77 16 26 0B 77  // ..&..4.u"&.w.&.w
    3470: 14 75 10 26 D1 67 08 26 D1 57 0A 26 D1 67 08 26  // .u.&.g.&.W.&.g.&
    3480: D1 57 0A 8B C3 E8 79 11 E9 E1 04 26 8A 47 34 32  // .W....y....&.G42
    3490: E4 05 80 00 99 26 89 47 1C 26 89 57 1E 8B C3 E8  // .....&.G.&.W....
    34A0: FF FE E9 C7 04 53 56 8B D8 8D 77 35 26 8A 44 02  // .....SV...w5&.D.
    34B0: 32 E4 C1 E0 02 26 8B 37 26 8B 34 03 F0 26 8B 47  // 2....&.7&.4..&.G
    34C0: 08 26 8B 5F 0A 26 89 04 26 89 5C 02 5E 5B C3 53  // .&._.&..&.\.^[.S
    34D0: 52 56 8B D8 8C D0 8D 77 35 8E C0 26 8A 54 02 80  // RV.....w5..&.T..
    34E0: FA 40 73 21 26 8B 77 02 32 F6 C1 E2 02 26 8B 74  // .@s!&.w.2....&.t
    34F0: 04 03 F2 26 8B 57 08 26 8B 47 0A 26 89 14 26 89  // ...&.W.&.G.&..&.
    3500: 44 02 E9 7F 00 80 FA 41 75 12 26 8B 47 08 26 8B  // D......Au.&.G.&.
    3510: 57 0A 26 89 47 10 26 89 57 12 EB 68 80 FA 40 75  // W.&.G.&.W..h..@u
    3520: 12 26 8B 47 08 26 8B 57 0A 26 89 47 0C 26 89 57  // .&.G.&.W.&.G.&.W
    3530: 0E EB 51 80 FA 42 75 0A 26 8B 47 08 26 89 47 22  // ..Q..Bu.&.G.&.G"
    3540: EB 42 80 FA 43 75 0A 26 8A 47 08 26 88 47 33 EB  // .B..Cu.&.G.&.G3.
    3550: 33 80 FA 46 75 12 26 8B 57 08 26 8B 47 0A 26 89  // 3..Fu.&.W.&.G.&.
    3560: 57 18 26 89 47 1A EB 1C 80 FA 47 75 0A 26 8B 47  // W.&.G.....Gu.&.G
    3570: 08 26 89 47 24 EB 0D 80 FA 48 75 08 26 8B 47 08  // .&.G$....Hu.&.G.
    3580: 26 89 47 20 5E 5A 5B C3 53 56 8B D8 8D 77 35 26  // &.G ^Z[.SV...w5&
    3590: 8A 44 02 32 E4 26 89 47 14 26 C7 47 16 00 00 5E  // .D.2.&.G.&.G...^
    35A0: 5B C3 53 56 8B D8 26 8B 77 02 26 8B 74 02 8A 04  // [.SV..&.w.&.t...
    35B0: 32 E4 26 89 47 14 26 C7 47 16 00 00 26 8B 5F 02  // 2.&.G.&.G...&._.
    35C0: 26 FF 47 02 5E 5B C3 53 56 8B D8 26 8B 77 02 26  // &.G.^[.SV..&.w.&
    35D0: 8B 74 02 8B 34 26 89 77 14 26 C7 47 16 00 00 26  // .t..4&.w.&.G...&
    35E0: 8B 5F 02 26 83 47 02 02 5E 5B C3 53 56 8B D8 26  // ._.&.G..^[.SV..&
    35F0: 8B 77 02 26 8B 74 02 8B 04 8B 74 02 26 89 47 14  // .w.&.t....t.&.G.
    3600: 26 89 77 16 26 8B 5F 02 26 83 47 02 04 5E 5B C3  // &.w.&._.&.G..^[.
    3610: 53 52 56 8B D8 E8 70 FF 8B F3 26 8B 47 18 26 8B  // SRV...p...&.G.&.
    3620: 57 1A D1 EA D1 D8 D1 EA D1 D8 26 01 47 14 26 11  // W.........&.G.&.
    3630: 54 16 8B C3 E8 2B 10 E9 4A FF 53 8B D8 26 8B 5F  // T....+..J.S..&._
    3640: 02 26 FF 47 02 5B C3 53 8B D8 26 8B 5F 02 26 83  // .&.G.[.S..&._.&.
    3650: 47 02 02 5B C3 53 56 8B D8 E8 6B FF 8B F3 26 8B  // G..[.SV...k...&.
    3660: 57 20 33 C0 26 01 57 14 26 11 44 16 8C D2 8E C2  // W 3.&.W.&.D.....
    3670: 26 8B 47 2E 32 C0 80 E4 06 3D 00 02 75 07 32 E4  // &.G.2....=..u.2.
    3680: 33 D2 5E 5B C3 26 8B 47 2E 32 C0 80 E4 06 3D 00  // 3.^[.&.G.2....=.
    3690: 04 74 EB 26 80 7F 34 00 75 08 8B C3 E8 2F 0F 5E  // .t.&..4.u..../.^
    36A0: 5B C3 26 8A 47 34 32 E4 26 89 47 1C 26 C7 47 1E  // [.&.G42.&.G.&.G.
    36B0: 00 00 8B C3 E8 EA FC 5E 5B C3 53 8B D8 E8 E2 FE  // .......^[.S.....
    36C0: 26 8B 47 14 C1 E0 02 26 8B 1F 26 8B 1F 03 D8 26  // &.G....&..&....&
    36D0: 8B 07 26 8B 57 02 5B C3 DE 36 D3 36 E9 36 38 37  // ..&.W.[..6.6.687
    36E0: EF 36 07 37 21 37 2C 37 32 37 53 51 56 8B D8 E8  // .6.7!7,727SQV...
    36F0: B0 FE 8C D2 8E C2 26 83 7F 16 00 75 22 26 83 7F  // ......&....u"&..
    3700: 14 40 73 1B 26 8B 77 02 26 8B 5F 14 C1 E3 02 26  // .@s.&.w.&._....&
    3710: 8B 44 04 03 D8 26 8B 07 26 8B 57 02 E9 7B 05 26  // .D...&..&.W..{.&
    3720: 8B 77 14 26 8B 47 16 83 C6 C0 83 D0 FF 75 71 83  // .w.&.G.......uq.
    3730: FE 08 77 6C 03 F6 2E FF A4 70 36 26 8B 47 10 26  // ..wl.....p6&.G.&
    3740: 8B 57 12 E9 54 05 26 8B 47 0C 26 8B 57 0E E9 49  // .W..T.&.G.&.W..I
    3750: 05 26 8B 47 22 EB 4B 26 8A 4F 33 32 ED BB 01 00  // .&.G".K&.O32....
    3760: 33 D2 E3 06 D1 E3 D1 D2 E2 FA 8B C3 E9 2B 05 26  // 3............+.&
    3770: 8A 4F 33 32 ED B8 01 00 33 D2 E3 06 D1 E0 D1 D2  // .O32....3.......
    3780: E2 FA F7 D0 F7 D2 E9 11 05 26 8B 47 18 26 8B 57  // .........&.G.&.W
    3790: 1A E9 06 05 26 8B 47 24 EB 08 26 8B 47 20 EB 02  // ....&.G$..&.G ..
    37A0: 33 C0 33 D2 E9 F3 04 53 56 8B D8 E8 F4 FD 8B F3  // 3.3....SV.......
    37B0: 26 8B 47 18 26 8B 57 1A D1 EA D1 D8 D1 EA D1 D8  // &.G.&.W.........
    37C0: 26 01 47 14 26 11 54 16 8B C3 E8 16 0E 5E 5B C3  // &.G.&.T......^[.
    37D0: 33 C0 33 D2 C3 53 56 8B D8 E8 EB FD 26 8B 77 14  // 3.3..SV.....&.w.
    37E0: 26 03 77 22 8B 04 8B 54 02 5E 5B C3 53 8B D8 26  // &.w"...T.^[.S..&
    37F0: C6 47 2B 04 E8 AB FD 26 8B 47 14 26 8B 57 16 5B  // .G+....&.G.&.W.[
    3800: C3 53 8B D8 26 C6 47 2B 01 E8 BB FD EB E9 53 8B  // .S..&.G+......S.
    3810: D8 26 C6 47 2B 00 E8 D2 FD EB DC 53 8B D8 83 C3  // .&.G+......S....
    3820: 35 26 8A 5F 01 C0 EB 03 80 E3 07 32 FF 03 DB FF  // 5&._.......2....
    3830: 97 8E 8F 5B C3 53 52 56 8B D8 26 8A 47 2C 32 E4  // ...[.SRV..&.G,2.
    3840: 8B F0 03 F0 8B C3 FF 94 AA 8F 26 89 47 08 26 89  // ..........&.G.&.
    3850: 57 0A 26 8A 47 2D 32 E4 8B F0 03 F0 8B C3 FF 94  // W.&.G-2.........
    3860: C2 8F 26 89 47 04 26 89 57 06 E9 17 FD 53 51 56  // ..&.G.&.W....SQV
    3870: 8B D8 26 8A 4F 2B 32 ED 8B F1 8A 8C F2 8F E3 0A  // ..&.O+2.........
    3880: 26 D1 6F 06 26 D1 5F 04 E2 F6 26 8A 4F 2B 32 ED  // &.o.&._...&.O+2.
    3890: 8B F1 C1 E6 02 8B 8C D2 8F 8B B4 D4 8F 26 21 4F  // .............&!O
    38A0: 04 26 21 77 06 26 8A 4F 2A 32 ED 8B F1 8A 8C FA  // .&!w.&.O*2......
    38B0: 8F E3 0A 26 D1 67 04 26 D1 57 06 E2 F6 26 8B 4F  // ...&.g.&.W...&.O
    38C0: 08 26 8B 77 0A 26 89 4F 14 26 89 77 16 E9 CA 03  // .&.w.&.O.&.w....
    38D0: 53 51 52 56 57 8B D8 8C D0 8E C0 26 8A 47 2B 32  // SQRVW......&.G+2
    38E0: E4 8B F0 C1 E6 02 26 8A 47 2A 8B F8 8A 8D FA 8F  // ......&.G*......
    38F0: 32 ED 8B 84 D2 8F 8B 94 D4 8F E3 06 D1 E0 D1 D2  // 2...............
    3900: E2 FA F7 D0 F7 D2 26 21 47 14 26 21 57 16 26 8A  // ......&!G.&!W.&.
    3910: 47 2A 32 E4 8B F0 8A 8C FA 8F 32 ED E3 0A 26 D1  // G*2.......2...&.
    3920: 6F 0A 26 D1 5F 08 E2 F6 26 8A 47 2B 8B F0 C1 E6  // o.&._...&.G+....
    3930: 02 8B 84 D2 8F 8B 94 D4 8F 26 21 47 08 26 21 57  // .........&!G.&!W
    3940: 0A 26 8A 47 2A 32 E4 8B F0 8A 8C FA 8F 32 ED E3  // .&.G*2.......2..
    3950: 0A 26 D1 67 08 26 D1 57 0A E2 F6 26 8B 47 14 26  // .&.g.&.W...&.G.&
    3960: 8B 57 16 26 09 47 08 26 09 57 0A 5F 5E 5A 59 5B  // .W.&.G.&.W._^ZY[
    3970: C3 53 51 56 8B D8 26 8A 4F 2B 32 ED 8B F1 8A 8C  // .SQV..&.O+2.....
    3980: F2 8F E3 0A 26 D1 6F 06 26 D1 5F 04 E2 F6 26 8A  // ....&.o.&._...&.
    3990: 4F 2B 32 ED 8B F1 C1 E6 02 8B 8C D2 8F 8B B4 D4  // O+2.............
    39A0: 8F 26 21 4F 04 26 21 77 06 26 8A 4F 2A 32 ED 8B  // .&!O.&!w.&.O*2..
    39B0: F1 8A 8C FA 8F E3 0A 26 D1 6F 0A 26 D1 5F 08 E2  // .......&.o.&._..
    39C0: F6 26 8A 4F 2B 32 ED 8B F1 C1 E6 02 8B 8C D2 8F  // .&.O+2..........
    39D0: 8B B4 D4 8F 26 21 4F 08 26 21 77 0A E9 BB 02 51  // ....&!O.&!w....Q
    39E0: 52 57 8B D8 8C D0 8E C0 26 80 7F 2B 00 74 1A 26  // RW......&..+.t.&
    39F0: 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 AA 8F 26  // .G,2...........&
    3A00: 89 47 08 26 89 57 0A EB 10 26 8A 47 2C 32 E4 8B  // .G.&.W...&.G,2..
    3A10: F0 03 F0 8B C3 FF 94 B6 8F 26 8A 47 2D 32 E4 8B  // .........&.G-2..
    3A20: F0 03 F0 8B C3 FF 94 C2 8F 26 89 47 04 26 89 57  // .........&.G.&.W
    3A30: 06 8C D2 8E C2 26 80 7F 2B 00 74 4A 26 8A 47 2B  // .....&..+.tJ&.G+
    3A40: 32 E4 8B F0 C1 E6 02 26 8A 47 2A 8B F8 8A 8D FA  // 2......&.G*.....
    3A50: 8F 32 ED 8B 84 D2 8F 8B 94 D4 8F E3 06 D1 E0 D1  // .2..............
    3A60: D2 E2 FA F7 D0 F7 D2 26 21 47 08 26 21 57 0A 8B  // .......&!G.&!W..
    3A70: C3 E8 F9 FD 26 8B 47 04 26 8B 57 06 26 09 47 08  // ....&.G.&.W.&.G.
    3A80: 26 09 57 0A EB 10 26 8B 57 04 26 8B 47 06 26 89  // &.W...&.W.&.G.&.
    3A90: 57 08 26 89 47 0A 26 8A 47 2C 32 E4 8B F0 03 F0  // W.&.G.&.G,2.....
    3AA0: 8B C3 FF 94 9E 8F 5F 5A 59 C3 53 51 52 56 57 8B  // ......_ZY.SQRVW.
    3AB0: D8 26 8A 47 2A 32 E4 8B F0 8A 8C FA 8F 32 ED E3  // .&.G*2.......2..
    3AC0: 0A 26 D1 67 04 26 D1 57 06 E2 F6 8C D0 8E C0 26  // .&.g.&.W.......&
    3AD0: 8A 47 2B 32 E4 8B F0 C1 E6 02 26 8A 47 2A 8B F8  // .G+2......&.G*..
    3AE0: 8A 8D FA 8F 32 ED 8B 84 D2 8F 8B 94 D4 8F E3 06  // ....2...........
    3AF0: D1 E0 D1 D2 E2 FA F7 D0 F7 D2 26 09 47 04 26 09  // ..........&.G.&.
    3B00: 57 06 26 8B 47 04 26 8B 57 06 26 21 47 08 26 21  // W.&.G.&.W.&!G.&!
    3B10: 57 0A E9 56 FE 55 8B EC 51 52 50 8B D8 26 8A 47  // W..V.U..QRP..&.G
    3B20: 2C 32 E4 8B F0 03 F0 8B C3 FF 94 AA 8F 26 89 47  // ,2...........&.G
    3B30: 08 26 89 57 0A 26 8A 47 2B 88 46 FA 8B C3 E8 DA  // .&.W.&.G+.F.....
    3B40: FC 26 89 47 04 26 89 57 06 26 8A 4F 2D 32 ED 8B  // .&.G.&.W.&.O-2..
    3B50: F1 03 F1 8B C3 FF 94 C2 8F 26 89 47 14 26 89 57  // .........&.G.&.W
    3B60: 16 8B C3 E8 44 FF 8A 46 FA 32 E4 8B F0 8A 8C F2  // ....D..F.2......
    3B70: 8F E3 0A 26 D1 6F 16 26 D1 5F 14 E2 F6 26 8A 57  // ...&.o.&._...&.W
    3B80: 2B 32 F6 8B F2 C1 E6 02 8B 84 D2 8F 8B 94 D4 8F  // +2..............
    3B90: 26 21 47 14 26 21 57 16 26 8A 47 2A 32 E4 8B F0  // &!G.&!W.&.G*2...
    3BA0: 8A 8C FA 8F 32 ED E3 0A 26 D1 67 14 26 D1 57 16  // ....2...&.g.&.W.
    3BB0: E2 F6 26 8B 47 14 26 8B 57 16 26 09 47 08 26 09  // ..&.G.&.W.&.G.&.
    3BC0: 57 0A 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94  // W.&.G,2.........
    3BD0: 9E 8F 8D 66 FC 5A 59 5D C3 51 8B D8 E8 56 FC 26  // ...f.ZY].Q...V.&
    3BE0: 8A 4F 2B 32 ED 8B F1 8A 8C F2 8F E3 0A 26 D1 6F  // .O+2.........&.o
    3BF0: 06 26 D1 5F 04 E2 F6 8B C3 E8 AE FE 26 8A 4F 2C  // .&._........&.O,
    3C00: 32 ED 8B F1 03 F1 8B C3 FF 94 9E 8F 59 C3 8B D8  // 2...........Y...
    3C10: E8 22 FC 8B C3 E8 55 FC 26 8B 47 04 26 8B 77 06  // ."....U.&.G.&.w.
    3C20: 26 09 47 08 26 09 77 0A 26 8A 47 2C 32 E4 8B F0  // &.G.&.w.&.G,2...
    3C30: 03 F0 8B C3 FF 94 9E 8F C3 53 56 8B D8 E8 F5 FB  // .........SV.....
    3C40: 8B C3 E8 28 FC 26 8B 47 04 26 8B 77 06 26 31 47  // ...(.&.G.&.w.&1G
    3C50: 08 26 31 77 0A 26 8A 47 2C 32 E4 8B F0 03 F0 8B  // .&1w.&.G,2......
    3C60: C3 FF 94 9E 8F 5E 5B C3 53 51 56 8B D8 E8 C5 FB  // .....^[.SQV.....
    3C70: 8B C3 E8 F8 FB 26 8B 4F 04 E3 0A 26 D1 67 08 26  // .....&.O...&.g.&
    3C80: D1 57 0A E2 F6 8B C3 E8 46 FC 26 8A 4F 2C 32 ED  // .W......F.&.O,2.
    3C90: 8B F1 03 F1 8B C3 FF 94 9E 8F 5E 59 5B C3 53 51  // ..........^Y[.SQ
    3CA0: 56 8B D8 E8 8F FB 8B C3 E8 C2 FB 26 8B 4F 04 E3  // V..........&.O..
    3CB0: 0A 26 D1 6F 0A 26 D1 5F 08 E2 F6 EB C8 52 8B D8  // .&.o.&._.....R..
    3CC0: E8 72 FB 8B C3 E8 A5 FB 8B F3 26 8B 47 04 26 8B  // .r........&.G.&.
    3CD0: 57 06 26 01 47 08 26 11 54 0A 8B C3 E8 F1 FB 26  // W.&.G.&.T......&
    3CE0: 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 9E 8F 5A  // .G,2...........Z
    3CF0: C3 52 8B D8 E8 3E FB 8B C3 E8 71 FB 8B F3 26 8B  // .R...>....q...&.
    3D00: 47 04 26 8B 57 06 26 29 47 08 26 19 54 0A EB CA  // G.&.W.&)G.&.T...
    3D10: 51 52 8B F0 E8 1E FB 8B C6 E8 55 FC 26 8B 44 08  // QR........U.&.D.
    3D20: 26 8B 54 0A 26 8B 5C 04 26 8B 4C 06 E8 DD F2 26  // &.T.&.\.&.L....&
    3D30: 89 44 0C 26 89 54 0E 5A 59 C3 52 8B D0 E8 F5 FA  // .D.&.T.ZY.R.....
    3D40: 8B C2 E8 2C FC 8B C2 E8 5C 08 5A C3 51 52 57 8B  // ...,....\.Z.QRW.
    3D50: F0 E8 E1 FA 8B C6 E8 18 FC 26 8B 44 08 26 8B 54  // .........&.D.&.T
    3D60: 0A 26 8B 5C 04 26 8B 4C 06 E8 1C F2 26 89 44 0C  // .&.\.&.L....&.D.
    3D70: 26 89 54 0E 8C D7 8E C7 26 8B 44 08 26 8B 54 0A  // &.T.....&.D.&.T.
    3D80: 26 8B 5C 04 26 8B 4C 06 E8 FD F1 26 89 5C 10 26  // &.\.&.L....&.\.&
    3D90: 89 4C 12 E9 10 FD 52 8B D0 E8 99 FA 8B C2 E8 D0  // .L....R.........
    3DA0: FB 8B C2 E8 D3 07 5A C3 51 52 8B D8 E8 86 FA 8B  // ......Z.QR......
    3DB0: C3 E8 BD FB 8C D1 8E C1 26 8B 47 08 26 8B 57 0A  // ........&.G.&.W.
    3DC0: 26 3B 57 06 75 0E 26 3B 47 04 75 08 26 C6 47 30  // &;W.u.&;G.u.&.G0
    3DD0: 01 5A 59 C3 8B D0 26 8B 47 0A 26 3B 47 06 72 08  // .ZY...&.G.&;G.r.
    3DE0: 75 0A 26 3B 57 04 73 04 33 C0 EB 03 B8 02 00 26  // u.&;W.s.3......&
    3DF0: 88 47 30 5A 59 C3 51 52 57 8B D8 26 8A 47 2C 32  // .G0ZY.QRW..&.G,2
    3E00: E4 8B F0 03 F0 8B C3 FF 94 AA 8F 26 89 47 08 26  // ...........&.G.&
    3E10: 89 57 0A 8C D0 8E C0 26 8A 47 2B 32 E4 8B F0 C1  // .W.....&.G+2....
    3E20: E6 02 8B F8 8A 8D F2 8F 32 ED 8B 84 D2 8F 8B 94  // ........2.......
    3E30: D4 8F E3 06 D1 E0 D1 D2 E2 FA F7 D0 F7 D2 26 21  // ..............&!
    3E40: 47 08 26 21 57 0A E9 4D FC 55 8B EC 51 52 57 83  // G.&!W..M.U..QRW.
    3E50: EC 06 8B D8 26 8A 47 2B 32 E4 8B F0 C1 E6 02 8B  // ....&.G+2.......
    3E60: F8 8A 8D F2 8F 32 ED 8B 84 D2 8F 89 46 F4 8B 84  // .....2......F...
    3E70: D4 8F 89 46 F6 E3 08 D1 66 F4 D1 56 F6 E2 F8 8B  // ...F....f..V....
    3E80: 7E F4 8B 46 F6 89 46 F8 26 8A 47 2C 32 E4 8B F0  // ~..F..F.&.G,2...
    3E90: 03 F0 8B C3 FF 94 AA 8F 26 89 47 08 26 89 57 0A  // ........&.G.&.W.
    3EA0: 8B C3 E8 47 F9 26 89 47 04 26 89 57 06 8B C7 F7  // ...G.&.G.&.W....
    3EB0: D0 8B 56 F6 F7 D2 26 23 47 08 26 23 57 0A 26 89  // ..V...&#G.&#W.&.
    3EC0: 47 14 26 89 57 16 26 21 7F 08 8B 46 F6 26 21 47  // G.&.W.&!...F.&!G
    3ED0: 0A 8C D1 8D 77 35 8E C1 26 80 3C 19 73 12 26 8B  // ....w5..&.<.s.&.
    3EE0: 4F 04 E3 0A 26 D1 67 08 26 D1 57 0A E2 F6 EB 10  // O...&.g.&.W.....
    3EF0: 26 8B 4F 04 E3 0A 26 D1 6F 0A 26 D1 5F 08 E2 F6  // &.O...&.o.&._...
    3F00: 26 21 7F 08 8B 46 F8 26 21 47 0A 26 8B 57 14 26  // &!...F.&!G.&.W.&
    3F10: 8B 47 16 26 09 57 08 26 09 47 0A 26 8A 47 2C 32  // .G.&.W.&.G.&.G,2
    3F20: E4 8B F0 03 F0 8B C3 FF 94 9E 8F 8D 66 FA 5F E9  // ............f._.
    3F30: A3 FC 52 8B D8 E8 FD F8 8B C3 E8 34 FA 26 8B 47  // ..R........4.&.G
    3F40: 08 26 8B 57 0A 26 85 57 06 75 06 26 85 47 04 74  // .&.W.&.W.u.&.G.t
    3F50: 05 B8 03 00 EB 03 B8 01 00 26 88 47 30 5A C3 53  // .........&.G0Z.S
    3F60: 51 52 56 8B D8 26 8A 4F 2D 32 ED 8B F1 03 F1 FF  // QRV..&.O-2......
    3F70: 94 C2 8F 26 89 47 04 26 89 57 06 26 8A 47 2B 32  // ...&.G.&.W.&.G+2
    3F80: E4 8B F0 8A 8C F2 8F E3 0A 26 D1 6F 06 26 D1 5F  // .........&.o.&._
    3F90: 04 E2 F6 26 8A 47 2B 8B F0 C1 E6 02 8B 84 D2 8F  // ...&.G+.........
    3FA0: 8B 94 D4 8F 26 21 47 04 26 21 57 06 E9 BD F9 52  // ....&!G.&!W....R
    3FB0: 8B D8 E8 AA FF 26 8B 47 04 26 8B 57 06 26 89 47  // .....&.G.&.W.&.G
    3FC0: 18 26 89 57 1A 5A C3 51 52 8B D8 E8 91 FF 8C D0  // .&.W.Z.QR.......
    3FD0: 8E C0 26 8B 77 02 26 8B 74 02 81 3C 5A 5A 74 5B  // ..&.w.&.t..<ZZt[
    3FE0: 26 8B 77 02 26 8B 74 02 80 3C 63 75 E1 26 8B 77  // &.w.&.t..<cu.&.w
    3FF0: 02 26 FF 44 02 8B C3 E8 21 F8 26 89 47 08 26 89  // .&.D....!.&.G.&.
    4000: 57 0A 8B C3 E8 FA F7 26 89 47 14 26 89 57 16 8C  // W......&.G.&.W..
    4010: D1 8E C1 26 8B 57 04 26 8B 47 06 26 3B 47 0A 75  // ...&.W.&.G.&;G.u
    4020: AD 26 3B 57 08 75 A7 26 8B 77 02 26 8B 04 26 03  // .&;W.u.&.w.&..&.
    4030: 47 14 8B DE 26 89 47 02 5A 59 C3 26 8B 5F 02 26  // G...&.G.ZY.&._.&
    4040: 83 47 02 02 5A 59 C3 52 57 8B D8 8C D0 8E C0 26  // .G..ZY.RW......&
    4050: 8B 77 02 26 8B 74 02 8A 54 01 84 D2 75 08 26 C7  // .w.&.t..T...u.&.
    4060: 47 22 00 00 EB 2F 80 FA FF 75 14 26 8B 77 02 26  // G".../...u.&.w.&
    4070: 8B 3F 26 8B 34 26 2B 75 02 26 89 77 22 EB 16 26  // .?&.4&+u.&.w"..&
    4080: 8B 07 E8 E3 02 8B F0 8A C2 32 E4 03 C0 03 F0 8B  // .........2......
    4090: 04 26 89 47 22 26 8B 5F 02 26 83 47 02 02 5F 5A  // .&.G"&._.&.G.._Z
    40A0: C3 8B D8 26 80 67 2F F9 26 8B 77 02 26 8B 74 02  // ...&.g/.&.w.&.t.
    40B0: 8A 44 01 26 88 47 34 26 8B 5F 02 26 83 47 02 03  // .D.&.G4&._.&.G..
    40C0: C3 8B D8 26 8B 77 02 26 8B 74 02 8B 74 01 26 89  // ...&.w.&.t..t.&.
    40D0: 77 20 EB E3 53 8B D8 26 8A 47 2C 32 E4 24 03 26  // w ..S..&.G,2.$.&
    40E0: 80 67 2F F9 C1 E0 09 26 09 47 2E E9 4F F5 8B D8  // .g/....&.G..O...
    40F0: 26 8B 77 02 26 8B 74 02 8A 44 01 32 E4 26 89 47  // &.w.&.t..D.2.&.G
    4100: 04 26 C7 47 06 00 00 8B C3 E8 40 04 26 8B 5F 02  // .&.G......@.&._.
    4110: 26 83 47 02 02 C3 8B D8 26 8B 77 02 26 8B 74 02  // &.G.....&.w.&.t.
    4120: 8A 44 01 32 E4 26 89 47 04 26 C7 47 06 00 00 8B  // .D.2.&.G.&.G....
    4130: C3 E8 08 04 EB D6 53 56 8B D8 26 8B 77 02 26 8B  // ......SV..&.w.&.
    4140: 74 02 8A 44 01 32 E4 26 89 47 04 26 C7 47 06 00  // t..D.2.&.G.&.G..
    4150: 00 8B C3 E8 06 04 E9 86 F4 53 56 8B D8 26 8B 77  // .........SV..&.w
    4160: 02 26 8B 74 02 8A 44 01 32 E4 26 89 47 04 26 C7  // .&.t..D.2.&.G.&.
    4170: 47 06 00 00 8B C3 E8 F0 03 E9 63 F4 53 56 8B D8  // G.........c.SV..
    4180: 26 8B 77 02 8B DE 26 8B 5F 02 8B 5F 01 83 C3 03  // &.w...&._.._....
    4190: 26 01 5C 02 5E 5B C3 51 52 8B D8 26 8B 77 02 26  // &.\.^[.QR..&.w.&
    41A0: 83 44 02 02 26 8B 07 E8 A0 01 8B C8 26 8B 77 28  // .D..&.......&.w(
    41B0: 8A 44 01 32 E4 03 C0 8B F1 03 F0 83 3C 00 74 4F  // .D.2........<.tO
    41C0: 26 8B 77 28 8A 54 01 32 F6 8B C3 E8 B0 01 26 88  // &.w(.T.2......&.
    41D0: 47 31 26 8B 77 02 26 8B 34 8B 44 04 C1 E8 08 32  // G1&.w.&.4.D....2
    41E0: E4 24 7F C1 E8 02 32 E4 24 1F 26 80 67 2F 07 C1  // .$....2.$.&.g/..
    41F0: E0 0B 26 09 47 2E 26 8B 37 26 8B 47 2E C1 E8 0B  // ..&.G.&.7&.G....
    4200: C1 E0 02 26 01 04 26 C6 47 32 01 26 89 4F 28 5A  // ...&..&.G2.&.O(Z
    4210: 59 C3 53 8B D8 26 C6 47 32 82 5B C3 57 8B D8 8C  // Y.S..&.G2.[.W...
    4220: D6 8E C6 26 80 7F 2C 05 74 0A 26 8A 47 2C 26 3A  // ...&..,.t.&.G,&:
    4230: 47 30 75 1E 26 8B 77 02 26 8B 74 02 26 8B 7F 02  // G0u.&.w.&.t.&...
    4240: 26 8B 3D 8B 74 01 03 F7 26 8B 5F 02 26 89 77 02  // &.=.t...&._.&.w.
    4250: 5F C3 26 8B 5F 02 26 83 47 02 03 5F C3 53 56 57  // _.&._.&.G.._.SVW
    4260: 8B D8 8C D6 8E C6 26 80 7F 30 01 74 0A 26 8A 47  // ......&..0.t.&.G
    4270: 30 26 3A 47 2C 75 20 26 8B 77 02 26 8B 74 02 26  // 0&:G,u &.w.&.t.&
    4280: 8B 7F 02 26 8B 3D 8B 74 01 03 F7 26 8B 5F 02 26  // ...&.=.t...&._.&
    4290: 89 77 02 5F 5E 5B C3 26 8B 5F 02 26 83 47 02 03  // .w._^[.&._.&.G..
    42A0: EB F1 53 56 57 8B D8 8C D0 8E C0 26 80 7F 30 01  // ..SVW......&..0.
    42B0: 74 E5 EB C3 55 8B EC 53 51 52 57 8B D8 26 8B 77  // t...U..SQRW..&.w
    42C0: 02 26 8B 74 02 8A 04 26 C6 47 3D 00 8C D1 8E C1  // .&.t...&.G=.....
    42D0: 26 80 7F 3D 08 73 20 26 8B 77 02 26 8A 57 3D 32  // &..=.s &.w.&.W=2
    42E0: F6 26 8B 7C 02 03 FA 8B F3 03 F2 8A 15 26 88 54  // .&.|.........&.T
    42F0: 35 26 FE 47 3D EB D5 26 8B 7F 02 8A D0 32 F6 8B  // 5&.G=..&.....2..
    4300: F2 C1 E6 02 8A 94 1F 90 26 01 55 02 26 8B 7F 28  // ........&.U.&..(
    4310: 8A 55 01 80 E2 07 26 88 57 2D 26 8B 7F 28 8A 55  // .U....&.W-&..(.U
    4320: 01 C0 EA 03 80 E2 07 26 88 57 2B 26 8B 7F 28 8A  // .......&.W+&..(.
    4330: 55 01 C0 EA 06 26 88 57 2A 8A 94 1E 90 26 88 57  // U....&.W*....&.W
    4340: 2C 8D 66 F8 5F 5A 59 5B 5D C3 53 56 8B D8 26 8B  // ,.f._ZY[].SV..&.
    4350: 77 02 8B C6 8B 74 48 03 F0 8B D8 8B 74 1E 8B C6  // w....tH.....t...
    4360: 03 C3 83 C0 04 5E 5B C3 53 56 8B D8 26 8B 77 02  // .....^[.SV..&.w.
    4370: 8B C6 8B 74 48 03 F0 8B D8 8B 74 20 EB E0 8A C2  // ...tH.....t ....
    4380: C3 16 07 55 8B EC 53 51 56 57 83 EC 40 8B F8 89  // ...U..SQVW..@...
    4390: 46 B8 E8 D3 FF 8B D8 89 46 E0 26 8B 45 02 8B 5F  // F.......F.&.E.._
    43A0: 2E 03 D8 89 5E DE 83 46 DE 04 8B C7 E8 9B FF 89  // ....^..F........
    43B0: 46 E0 32 F6 8D 46 B8 E8 C4 FF 8A D0 32 F6 03 D2  // F.2..F......2...
    43C0: 8B 5E E0 03 DA 83 3F 00 0F 84 65 01 88 46 E9 80  // .^....?...e..F..
    43D0: 66 E7 F9 C6 46 EC 00 C7 46 D8 00 00 66 C7 46 D0  // f...F...F...f.F.
    43E0: 00 00 00 00 C7 46 F6 00 00 C6 46 EA 01 EB 06 3C  // .....F....F....<
    43F0: 01 0F 85 8C 00 8A 56 E9 8A C2 32 E4 03 C0 8B 5E  // ......V...2....^
    4400: E0 03 D8 83 3F 00 74 75 26 8B 45 02 8B 1F 03 D8  // ....?.tu&.E.....
    4410: 8B 47 04 32 E4 8B C8 83 C1 09 32 ED 80 E1 FE 83  // .G.2......2.....
    4420: F9 00 74 07 D1 E9 33 C0 50 E2 FD 8B C4 8B D8 89  // ..t...3.P.......
    4430: 46 BA 85 C0 74 41 83 C0 08 26 89 47 04 8A C2 32  // F...tA...&.G...2
    4440: E4 03 C0 8B 5E E0 03 D8 26 8B 45 02 03 07 8B 5E  // ....^...&.E....^
    4450: BA 26 89 07 8B 5E BA 26 8B 07 83 C0 06 26 89 47  // .&...^.&.....&.G
    4460: 02 8B 5E BA 8B 76 F6 26 89 77 06 8B 5E BA 89 5E  // ..^..v.&.w..^..^
    4470: F6 C6 46 EA 00 EB 0A C6 46 EA 87 EB 04 C6 46 EA  // ..F.....F.....F.
    4480: 83 8A 46 EA 32 E4 83 F8 10 0F 8F 99 00 88 66 EA  // ..F.2.........f.
    4490: 8A 46 EA 32 E4 85 C0 0F 8F 83 00 8C D0 8B 5E BA  // .F.2..........^.
    44A0: 8E C0 26 8B 5F 02 89 5E E0 8B 5E BA 26 8B 5F 02  // ..&._..^..^.&._.
    44B0: 80 3F 5B 75 4A C6 46 EA 10 8B 5E BA 26 8B 5F 06  // .?[uJ.F...^.&._.
    44C0: 89 5E F6 8B 5E BA 26 8B 1F 8B 47 04 32 E4 8B C8  // .^..^.&...G.2...
    44D0: 83 C1 09 32 ED 80 E1 FE 03 E1 8B 5E F6 89 5E BA  // ...2.......^..^.
    44E0: 85 DB 74 AC 26 8B 1F 8B 47 04 C1 E8 08 32 E4 24  // ..t.&...G....2.$
    44F0: 7F C1 E8 02 C1 E0 02 8B 5E B8 26 29 07 EB 91 8D  // ........^.&)....
    4500: 46 B8 E8 AF FD 8A D0 8D 46 B8 E8 2E 00 8A DA 32  // F.......F......2
    4510: FF C1 E3 02 8D 46 B8 FF 97 1C 90 E9 72 FF 83 7E  // .....F......r..~
    4520: F6 00 0F 85 C9 FE 80 7E EA 10 74 05 8A 46 EA EB  // .......~..t..F..
    4530: 02 32 C0 8D 66 F8 5F 5E E9 0B FE C3 53 51 8B D8  // .2..f._^....SQ..
    4540: 26 8A 4F 04 32 ED E8 86 E8 59 5B C3 53 51 8B D8  // &.O.2....Y[.SQ..
    4550: 26 8A 4F 04 32 ED E8 81 E8 59 5B C3 53 8B D8 26  // &.O.2....Y[.S..&
    4560: 8A 47 04 32 E4 E6 80 5B C3 53 51 8B D8 26 8A 4F  // .G.2...[.SQ..&.O
    4570: 04 32 ED E8 9E D7 59 5B C3 53 8B D8 66 50 66 52  // .2....Y[.S..fPfR
    4580: 66 51 66 26 8B 47 08 66 26 8B 57 10 66 26 8B 4F  // fQf&.G.f&.W.f&.O
    4590: 04 66 F7 F1 66 26 89 47 0C 66 26 89 57 10 66 59  // .f..f&.G.f&.W.fY
    45A0: 66 5A 66 58 5B C3 53 8B D8 66 50 66 52 66 51 66  // fZfX[.S..fPfRfQf
    45B0: 26 8B 47 08 66 26 8B 4F 04 66 F7 E1 66 26 89 47  // &.G.f&.O.f..f&.G
    45C0: 0C 66 26 89 57 10 66 59 66 5A 66 58 5B C3 53 57  // .f&.W.fYfZfX[.SW
    45D0: 8B D8 26 8B 5F 14 E8 38 EB 8B D0 66 C1 E8 10 92  // ..&._..8...f....
    45E0: 5F 5B C3 53 57 8B D8 26 8B 47 14 26 8B 57 16 8B  // _[.SW..&.G.&.W..
    45F0: D8 87 D3 66 C1 E3 10 8B DA C1 E3 02 E8 36 EB EB  // ...f.........6..
    4600: D8 53 52 57 8B D8 26 8B 47 08 26 8B 57 0A 92 66  // .SRW..&.G.&.W..f
    4610: C1 E0 10 8B C2 26 8B 5F 14 E8 5A EA 5F 5A 5B C3  // .....&._..Z._Z[.
    4620: 53 52 8B D8 26 8B 47 1C 26 8B 57 1E 92 66 C1 E0  // SR..&.G.&.W..f..
    4630: 10 8B C2 26 8B 5F 26 8B 5F 01 E8 39 EA 5A 5B C3  // ...&._&._..9.Z[.
    4640: 53 52 56 8B F0 26 8B 5C 26 8B 5F 01 E8 C2 EA 8B  // SRV..&.\&._.....
    4650: D0 66 C1 E8 10 92 26 89 44 1C 26 89 54 1E 5E 5A  // .f....&.D.&.T.^Z
    4660: 5B C3 53 51 52 57 8B D8 26 8B 47 08 26 8B 57 0A  // [.SQRW..&.G.&.W.
    4670: 92 66 C1 E0 10 8B C2 8B C8 26 8B 47 14 26 8B 57  // .f.......&.G.&.W
    4680: 16 8B D8 87 D3 66 C1 E3 10 8B DA C1 E3 02 8B C1  // .....f..........
    4690: E8 16 EA 5F 5A 59 5B C3 8B D0 66 C1 E8 10 92 C3  // ..._ZY[...f.....
    46A0: 1E 06 66 50 66 51 66 52 66 53 66 55 66 56 66 57  // ..fPfQfRfSfUfVfW
    46B0: 0E 1F 0A C0 75 06 E8 07 01 E9 A8 00 3C 01 75 06  // ....u.......<.u.
    46C0: E8 37 01 E9 9E 00 3C 02 75 06 E8 5F 02 E9 94 00  // .7....<.u.._....
    46D0: 3C 03 75 0B E8 91 03 8B EC 89 5E 0C E9 85 00 3C  // <.u.......^....<
    46E0: 04 75 02 EB 7D 3C 05 75 0A E8 0E 04 8B EC 89 56  // .u..}<.u.......V
    46F0: 10 EB 71 3C 06 75 10 E8 8C 03 8B EC 89 5E 0C 89  // ..q<.u.......^..
    4700: 4E 14 89 56 10 EB 5D 3C 07 75 02 EB 55 3C 08 75  // N..V..]<.u..U<.u
    4710: 0A E8 D0 03 8B EC 88 7E 0D EB 49 3C 09 75 02 EB  // .......~..I<.u..
    4720: 41 3C 0A 75 10 E8 65 04 8B EC 89 4E 14 89 7E 00  // A<.u..e....N..~.
    4730: 8C 46 1C EB 2F 3C 0B 75 02 EB 27 3C 10 75 0A E8  // .F../<.u..'<.u..
    4740: 5A 04 8B EC 89 5E 0C EB 1B 3C 11 75 02 EB 13 3C  // Z....^...<.u...<
    4750: 15 75 0F E8 80 04 8B EC 89 5E 0C EB 07 B8 4F 01  // .u.......^....O.
    4760: EB 02 32 C0 8B EC 89 46 18 66 5F 66 5E 66 5D 66  // ..2....F.f_f^f]f
    4770: 5B 66 5A 66 59 66 58 07 1F C3 50 1E 2E 8E 1E 43  // [fZfYfX...P....C
    4780: 04 8C D8 A3 E2 56 A3 F2 56 A3 04 57 2E 8E 1E 3B  // .....V..V..W...;
    4790: 04 A3 AA 04 1F 58 CB 00 30 31 2E 30 30 00 56 45  // .....X..01.00.VE
    47A0: 53 41 00 03 FC 02 00 00 01 00 00 00 00 00 00 00  // SA..............
    47B0: 00 03 02 11 09 02 00 00 99 01 00 00 30 47 00 00  // ............0G..
    47C0: B9 3F 00 8B DF 83 C7 04 FC 66 33 C0 F3 66 AB 8B  // .?.......f3..f..
    47D0: FB BE 36 47 B9 22 00 F3 A4 06 1F 8C 4F 08 8C 47  // ..6G."......O..G
    47E0: 10 8C 4F 18 8C 4F 1C 8C 4F 20 83 C7 22 89 7F 0E  // ..O..O..O .."...
    47F0: 0E 1F E8 F9 D3 B0 4F 32 E4 C3 56 51 57 B9 10 00  // ......O2..VQW...
    4800: 66 33 C0 F3 66 AB 5F 59 8C DB 06 1F C7 05 BB 00  // f3..f._Y........
    4810: C6 45 02 07 C7 45 04 40 00 C7 45 06 40 00 C6 45  // .E...E.@..E.@..E
    4820: 1B 06 C6 45 18 01 C6 45 1A 01 C6 45 1E 01 66 C7  // ...E...E...E..f.
    4830: 45 3E 00 84 D7 17 8E DB E8 CD CC 66 0B C0 0F 84  // E>.........f....
    4840: E1 00 06 1F 66 89 45 28 8C C8 66 C1 E0 10 B8 EF  // ....f.E(..f.....
    4850: 4A 66 89 45 0C 81 F9 FF 81 0F 84 C2 00 80 E5 03  // Jf.E............
    4860: B2 01 53 8E DB BE 80 1C E8 A5 D1 5B 06 1F 0F 84  // ..S........[....
    4870: B1 00 53 E8 21 D4 66 89 45 12 C7 45 16 08 10 8D  // ..S.!.f.E..E....
    4880: 5C 0C E8 BA E8 66 89 45 1F 66 89 45 36 8D 5C 10  // \....f.E.f.E6.\.
    4890: E8 AC E8 66 89 45 23 66 89 45 3A 8D 5C 08 E8 9E  // ...f.E#f.E:.\...
    48A0: E8 0A C0 75 03 5B EB 7B E8 EC D3 66 C1 E8 10 3D  // ...u.[.{...f...=
    48B0: 58 02 74 0D 3D 5E 01 74 08 77 0A C6 45 17 08 EB  // X.t.=^.t.w..E...
    48C0: 04 C6 45 17 0E 2E A1 3D 04 89 45 08 8D 5C 04 E8  // ..E....=..E..\..
    48D0: 6D E8 66 8B C8 66 C1 E9 10 D3 E0 89 45 10 89 45  // m.f..f......E..E
    48E0: 32 B0 08 D2 E0 88 45 19 8D 5C 14 E8 51 E8 5B 3D  // 2.....E..\..Q.[=
    48F0: 00 03 77 2F 53 8B D8 B8 00 03 33 D2 F7 F3 5B FE  // ..w/S.....3...[.
    4900: C8 88 45 1D 88 45 35 88 45 34 8E DB 57 53 BE 80  // ..E..E5.E4..WS..
    4910: 1C E8 5D CC 5B 5F 0B C9 75 05 06 1F 83 25 FE 32  // ..].[_..u....%.2
    4920: E4 EB 02 B4 03 B0 4F 8E DB 5E C3 00 81 FB FF 81  // ......O..^......
    4930: 74 68 0A FF 75 04 8B C3 EB 21 F6 C7 08 75 61 8B  // th..u....!...ua.
    4940: CB B2 01 BE 20 1C E8 C7 D0 74 55 E8 28 D3 0A C0  // .... ....tU.(...
    4950: 75 0E 66 C1 E8 10 80 E7 80 0A C7 E8 D5 02 EB 3A  // u.f............:
    4960: E8 A4 CE 74 06 E8 15 CD E8 64 C6 BE 20 1C E8 D4  // ...t.....d.. ...
    4970: CB 74 2D E8 A5 00 E8 2C 00 66 BB 20 1C 00 1C E8  // .t-....,.f. ....
    4980: EB D2 BE 00 1C E8 EE D2 66 C1 E8 10 8B D8 32 C0  // ........f.....2.
    4990: F6 C7 80 74 02 B0 40 E8 04 CC B0 4F 32 E4 EB 04  // ...t..@....O2...
    49A0: B0 4F B4 03 C3 56 06 33 C0 8E C0 BE 20 1C E8 E6  // .O...V.3.... ...
    49B0: D2 8B C8 66 C1 E8 10 8B D0 C1 E9 03 26 89 0E 4A  // ...f........&..J
    49C0: 04 C1 EA 04 FE CA 26 88 16 84 04 26 C6 06 51 04  // ......&....&..Q.
    49D0: 00 26 C6 06 50 04 00 26 C6 06 49 04 62 26 C7 06  // .&..P..&..I.b&..
    49E0: 4C 04 00 A0 26 C6 06 85 04 10 26 C7 06 0C 01 C1  // L...&.....&.....
    49F0: 60 8C C8 26 A3 0E 01 07 5E C3 01 0F 00 0A 00 00  // `..&....^.......
    4A00: 00 00 00 40 05 0F FF 00 01 02 03 04 05 06 07 08  // ...@............
    4A10: 09 0A 0B 0C 0D 0E 0F 01 00 0F 00 FC BA C4 03 B8  // ................
    4A20: 00 01 EF B9 04 00 B4 01 BE 92 49 AC 86 E0 EF 8A  // ..........I.....
    4A30: E0 FE C4 E2 F6 B8 00 03 EF B9 09 00 BA CE 03 32  // ...............2
    4A40: E4 BE 96 49 8A C4 EE AC 42 EE 4A FE C4 E2 F5 BA  // ...I....B.J.....
    4A50: DA 03 EC B9 14 00 BA C0 03 32 E4 BE 9F 49 8A C4  // .........2...I..
    4A60: EE AC EE FE C4 E2 F7 C3 BE 00 1C E8 08 D2 66 C1  // ..............f.
    4A70: E8 10 8B D8 E8 D8 D1 75 05 E8 C4 D1 75 04 B8 4F  // .......u....u..O
    4A80: 00 C3 B8 4F 03 C3 E8 C6 D1 74 53 BE 00 1C 80 FB  // ...O.....tS.....
    4A90: 00 74 18 80 FB 01 75 05 E8 04 D2 EB 1D 80 FB 02  // .t....u.........
    4AA0: 75 10 8B C1 E8 B7 D1 D3 E8 8B C8 E8 B4 CC 74 2E  // u.............t.
    4AB0: EB 08 80 FB 03 75 24 E8 5B D1 E8 A1 D1 8B D8 D3  // .....u$.[.......
    4AC0: E3 50 33 C0 BA 00 03 3B DA 77 05 BA FF FF EB 04  // .P3....;.w......
    4AD0: F7 F3 8B D0 58 8B C8 B8 4F 00 C3 32 C0 C3 B0 4F  // ....X...O..2...O
    4AE0: B4 03 C3 00 0A DB 75 07 8A EF E8 82 CD EB 05 E8  // ......u.........
    4AF0: 67 CD 8A F8 B0 4F 32 E4 C3 00 E8 52 D1 74 2C BE  // g....O2....R.t,.
    4B00: 00 1C E8 71 D1 66 C1 E8 10 F6 C4 40 75 1D 0A FF  // ...q.f.....@u...
    4B10: 75 05 E8 1E 00 EB 0F 80 FF 01 75 14 BB 13 00 E8  // u.........u.....
    4B20: EB E5 D1 E8 8B D0 B0 4F 32 E4 C3 B0 4F B4 03 C3  // .......O2...O...
    4B30: 32 C0 C3 52 53 66 50 81 E2 FF 02 D1 E2 8B C2 40  // 2..RSfP........@
    4B40: 66 C1 E0 10 8B C2 BB 13 00 E8 1C E5 BB 12 00 E8  // f...............
    4B50: 16 E5 66 58 5B 5A C3 9C 1E 06 66 50 66 51 66 52  // ..fX[Z....fPfQfR
    4B60: 66 53 66 55 66 56 66 57 0E 1F E8 34 E6 E8 8A FF  // fSfUfVfW...4....
    4B70: E8 53 E6 8B EC 89 56 10 89 46 18 66 5F 66 5E 66  // .S....V..F.f_f^f
    4B80: 5D 66 5B 66 5A 66 59 66 58 07 1F 9D CB 0E 07 BF  // ]f[fZfYfX.......
    4B90: C4 8E 2E 8B 0E C2 8E B8 4F 00 C3 00 0A DB 75 06  // ........O.....u.
    4BA0: B7 04 B3 10 EB 26 80 FB 01 75 14 E8 59 CC 75 21  // .....&...u..Y.u!
    4BB0: 53 B1 01 0A FF 74 02 B1 00 E8 6E CB 5B EB 0D 80  // S....t....n.[...
    4BC0: FB 02 75 0D E8 86 CC 8A F8 C0 E7 02 B0 4F 32 E4  // ..u..........O2.
    4BD0: C3 B8 4F 03 C3 00 80 E3 01 0A DB 75 05 BB 02 01  // ..O........u....
    4BE0: EB 0E E8 22 CC 75 0E 33 C0 53 E8 0F BB 5B 74 05  // ...".u.3.S...[t.
    4BF0: B0 4F 32 E4 C3 B0 4F B4 03 C3 80 FC 1D 72 03 CD  // .O2...O......r..
    4C00: 42 C3 1E 06 66 50 66 51 66 52 66 53 66 55 66 56  // B...fPfQfRfSfUfV
    4C10: 66 57 0E 1F 50 0F B6 C4 D1 E0 8B F0 58 2E FF 94  // fW..P.......X...
    4C20: DC 4B 66 5F 66 5E 66 5D 66 5B 66 5A 66 59 66 58  // .Kf_f^f]f[fZfYfX
    4C30: 07 1F C3 0E 1F 50 0F B6 C4 D1 E0 8B F0 58 2E FF  // .....P.......X..
    4C40: 94 DC 4B C3 16 4C 2C 85 45 85 62 85 09 4D 65 7C  // ..K..L,.E.b..Me|
    4C50: 97 7C 0A 7D 8D 7D 1B 7F 1F 7F 28 82 F9 82 7C 83  // .|.}.}....(...|.
    4C60: E3 83 7E 85 E0 85 89 88 22 4F D0 8C CA 4B CA 4B  // ..~....."O...K.K
    4C70: CA 4B CA 4B CA 4B CA 4B A0 8D A3 71 F7 72 2E 8E  // .K.K.K.K...q.r..
    4C80: 1E 3B 04 80 26 87 04 F3 50 8A E0 80 E4 7F E8 C4  // .;..&...P.......
    4C90: 01 3B D3 75 02 58 C3 BA CC 03 EC B2 B4 B1 30 26  // .;.u.X........0&
    4CA0: F6 47 09 01 74 0C B2 D4 B1 20 A8 01 75 49 B5 09  // .G..t.... ..uI..
    4CB0: EB 06 A8 01 74 41 B5 0B 53 E8 70 41 0A FF 5B 75  // ....tA..S.pA..[u
    4CC0: 0B 80 26 88 04 F0 08 2E 88 04 EB 2B 58 80 0E 87  // ..&........+X...
    4CD0: 04 08 80 26 10 04 CF 08 0E 10 04 89 16 63 04 C7  // ...&.........c..
    4CE0: 06 85 04 08 00 C6 06 84 04 18 C7 06 0C 01 AE 58  // ...............X
    4CF0: 8C 0E 0E 01 CD 42 C3 80 26 10 04 CF 08 0E 10 04  // .....B..&.......
    4D00: 58 53 50 0E 1F 33 C9 8A C8 E8 FB CA 74 06 E8 6C  // XSP..3......t..l
    4D10: C9 E8 BB C2 B2 08 BE 40 1C E8 F4 CC BE 40 1C E8  // .......@.....@..
    4D20: 23 C8 58 5B 0F 84 6E FF 2E 8E 1E 3B 04 0E 07 E8  // #.X[..n....;....
    4D30: 19 29 0E 1F 53 66 BB 40 1C 00 1C E8 2F CF BE 00  // .)..Sf.@..../...
    4D40: 1C B0 20 E8 58 C8 5B 2E 8E 1E 3B 04 0E 07 E8 22  // .. .X.[...;...."
    4D50: 2E E8 24 00 E8 2E 3D E8 D1 01 E8 8E 01 E8 B4 3E  // ..$...=........>
    4D60: 0E 1F BE 00 1C B0 10 E8 34 C8 E8 FD 2D E8 F5 2D  // ........4...-..-
    4D70: C3 8B EC C6 46 1B 00 C3 E8 2F 00 E8 0A 00 E8 BD  // ....F..../......
    4D80: 00 E8 52 00 E8 62 0A C3 53 83 C3 0A 8B 16 63 04  // ..R..b..S.....c.
    4D90: B9 19 00 B8 11 30 EF 32 C0 26 8A 27 EF 43 FE C0  // .....0.2.&.'.C..
    4DA0: E2 F7 5B 80 C2 06 32 C0 EE C3 53 BA C4 03 83 C3  // ..[...2...S.....
    4DB0: 05 B9 04 00 B0 01 26 8A 27 3C 01 75 03 80 CC 20  // ......&.'<.u... 
    4DC0: EF 43 FE C0 E2 F0 5B 26 8A 47 09 BA C2 03 EE B2  // .C....[&.G......
    4DD0: C4 B8 00 03 EF C3 8B F3 83 C6 23 BA DA 03 26 F6  // ..........#...&.
    4DE0: 47 09 01 75 02 B2 BA F6 06 89 04 08 74 1D 83 C6  // G..u........t...
    4DF0: 10 EC B9 04 00 B4 10 B2 C0 80 FC 11 74 07 8A C4  // ............t...
    4E00: EE 26 8A 04 EE 46 FE C4 E2 EF C3 53 EC 8B DE B9  // .&...F.....S....
    4E10: 14 00 32 E4 B2 C0 8A C4 EE FE C4 26 8A 07 EE 43  // ..2........&...C
    4E20: E2 F4 8A C4 EE 32 C0 EE 1E 06 E8 4F 2D 0B ED 74  // .....2.....O-..t
    4E30: 09 1F 1E B9 10 00 F3 A4 46 A4 07 1F 5B C3 53 83  // ........F...[.S.
    4E40: C3 37 B9 09 00 32 C0 BA CE 03 26 8A 27 EF 43 FE  // .7...2....&.'.C.
    4E50: C0 E2 F7 5B C3 BB E0 50 0E 07 8B D3 0A E4 7D 01  // ...[...P......}.
    4E60: C3 E8 01 00 C3 33 F6 80 FC 03 7F 3C 4A F6 06 89  // .....3.....<J...
    4E70: 04 10 75 20 A0 88 04 24 0F 3C 02 7E 24 3C 08 74  // ..u ...$.<.~$<.t
    4E80: 20 3C 06 74 1C 3C 07 74 18 B0 40 F6 E4 03 D8 81  //  <.t.<.t..@.....
    4E90: C3 00 04 C3 B0 40 D0 EC F6 E4 03 D8 81 C3 80 04  // .....@..........
    4EA0: C3 B0 40 F6 E4 03 D8 C3 80 FC 07 75 11 F6 06 89  // ..@........u....
    4EB0: 04 10 75 05 81 C3 00 01 C3 81 C3 00 05 C3 BF 62  // ..u............b
    4EC0: 4E BE 83 4E 33 C9 E8 4E 00 C3 04 80 00 05 80 00  // N..N3..N........
    4ED0: 06 C0 00 0D 80 02 0E C0 02 0F 80 03 10 C0 03 11  // ................
    4EE0: 40 05 12 80 05 13 C0 05 62 40 01 53 8A 1E 49 04  // @.......b@.S..I.
    4EF0: 80 FB 07 7F 10 32 FF D1 E3 2E 8B 87 9F 4E A2 65  // .....2.......N.e
    4F00: 04 88 26 66 04 5B C3 2C 30 28 30 2D 30 29 30 2A  // ..&f.[.,0(0-0)0*
    4F10: 30 2E 30 1E 3F 29 30 2E 38 25 75 07 2E 03 5D 01  // 0.0.?)0.8%u...].
    4F20: 33 F6 C3 83 C7 03 3B FE 75 ED C3 1E 06 2E 8E 1E  // 3.....;.u.......
    4F30: 3B 04 F6 06 87 04 80 75 49 83 3E 4C 04 00 74 42  // ;......uI.>L..tB
    4F40: A0 49 04 B9 00 20 2E 8B 3E 41 04 26 F6 47 33 01  // .I... ..>A.&.G3.
    4F50: 75 0E 26 F6 47 09 01 75 1B 2E 8B 3E 3F 04 EB 14  // u.&.G..u...>?...
    4F60: 3C 06 7E 0B 2E 8B 3E 3D 04 26 8A 67 37 B5 40 66  // <.~...>=.&.g7.@f
    4F70: 33 C0 EB 06 66 B8 20 07 20 07 8E C7 66 33 FF F3  // 3...f. . ...f3..
    4F80: 66 AB 80 26 87 04 7F 07 1F C3 2E 8E 1E 3B 04 80  // f..&.........;..
    4F90: FB 10 75 03 E9 7A 01 80 FB 20 75 03 E9 9B 01 80  // ..u..z... u.....
    4FA0: FB 32 75 1F BA CC 03 0A C0 75 09 EC 0C 02 B2 C2  // .2u......u......
    4FB0: EE E9 F3 00 FE C8 0F 85 F3 00 EC 24 FD B2 C2 EE  // ...........$....
    4FC0: E9 E4 00 80 FB 35 75 28 3C 80 75 08 80 0E 89 04  // .....5u(<.u.....
    4FD0: 40 E9 D3 00 F6 06 89 04 40 0F 84 D0 00 0A C0 0F  // @.......@.......
    4FE0: 84 CA 00 FE C8 75 06 E8 98 07 E9 BA 00 E9 BD 00  // .....u..........
    4FF0: 80 FB 30 74 03 E9 96 00 50 E8 30 3E 8A EF BA CC  // ..0t....P.0>....
    5000: 03 EC 8A C8 58 0A C0 75 30 B7 08 F6 C1 01 75 12  // ....X..u0.....u.
    5010: 0A ED 75 0B A0 10 04 24 30 3C 30 75 10 B7 02 E9  // ..u....$0<0u....
    5020: 8B 00 A0 10 04 24 30 3C 30 75 02 B7 02 80 26 89  // .....$0<0u....&.
    5030: 04 6F 80 0E 89 04 80 EB 36 3C 01 75 41 80 26 89  // .o......6<.uA.&.
    5040: 04 6F B7 09 F6 C1 01 75 15 B7 0B A0 10 04 24 30  // .o.....u......$0
    5050: 3C 30 74 1B B7 09 0A ED 74 15 B7 05 EB 11 A0 10  // <0t.....t.......
    5060: 04 24 30 3C 30 75 08 B7 0B 0A ED 74 02 B7 03 8A  // .$0<0u.....t....
    5070: 1E 88 04 80 E3 F0 0A DF 88 1E 88 04 EB 29 3C 02  // .............)<.
    5080: 75 2B 80 26 89 04 6F 80 0E 89 04 10 EB B4 80 FB  // u+.&..o.........
    5090: 31 75 1B 0A C0 74 0B 3C 01 75 0C 80 0E 89 04 08  // 1u...t.<.u......
    50A0: EB 05 80 26 89 04 F7 8B EC C6 46 1A 12 C3 80 FB  // ...&......F.....
    50B0: 33 75 16 3C 00 74 0B 3C 01 75 EC 80 26 89 04 FD  // 3u.<.t.<.u..&...
    50C0: EB E5 80 0E 89 04 02 EB DE 80 FB 34 75 17 3C 00  // ...........4u.<.
    50D0: 75 07 80 26 87 04 FE EB CE 3C 01 75 07 80 0E 87  // u..&.....<.u....
    50E0: 04 01 EB C3 C3 80 FB 36 75 26 BB 20 FF 3C 01 74  // .......6u&. .<.t
    50F0: 09 BB 00 DF 3C 00 74 02 EB AD E8 02 00 EB A8 9C  // ....<.t.........
    5100: FA BA C4 03 B0 01 EE 42 EC 22 C7 0A C3 EE 9D C3  // .......B."......
    5110: C3 B3 03 B7 00 BA CC 03 EC A8 01 75 02 B7 01 A0  // ...........u....
    5120: 88 04 8A E0 B1 04 D2 EC 25 0F 0F 8B C8 8B EC 89  // ........%.......
    5130: 5E 0E 89 4E 16 C6 46 1A 12 C3 9C FA C7 06 14 00  // ^..N..F.........
    5140: 90 76 8C 0E 16 00 9D C3 28 18 08 00 08 09 03 00  // .v......(.......
    5150: 02 63 2D 27 28 90 2B A0 BF 1F 00 C7 06 07 00 00  // .c-'(.+.........
    5160: 00 00 9C 8E 8F 14 1F 96 B9 A3 FF 00 01 02 03 04  // ................
    5170: 05 06 07 10 11 12 13 14 15 16 17 08 00 0F 00 00  // ................
    5180: 00 00 00 00 10 0E 00 FF 50 18 08 00 10 01 03 00  // ........P.......
    5190: 02 63 5F 4F 50 82 55 81 BF 1F 00 C7 06 07 00 00  // .c_OP.U.........
    51A0: 00 00 9C 8E 8F 28 1F 96 B9 A3 FF 00 01 02 03 04  // .....(..........
    51B0: 05 06 07 10 11 12 13 14 15 16 17 08 00 0F 00 00  // ................
    51C0: 00 00 00 00 10 0E 00 FF 28 18 08 00 40 09 03 00  // ........(...@...
    51D0: 02 63 2D 27 28 90 2B 80 BF 1F 00 C1 00 00 00 00  // .c-'(.+.........
    51E0: 00 00 9C 8E 8F 14 00 96 B9 A2 FF 00 13 15 17 02  // ................
    51F0: 04 06 07 10 11 12 13 14 15 16 17 01 00 03 00 00  // ................
    5200: 00 00 00 00 30 0F 00 FF 50 18 08 00 40 01 01 00  // ....0...P...@...
    5210: 06 63 5F 4F 50 82 54 80 BF 1F 00 C1 00 00 00 00  // .c_OP.T.........
    5220: 00 00 9C 8E 8F 28 00 96 B9 C2 FF 00 17 17 17 17  // .....(..........
    5230: 17 17 17 17 17 17 17 17 17 17 17 01 00 01 00 00  // ................
    5240: 00 00 00 00 00 0D 00 FF 50 18 0E 00 10 00 03 00  // ........P.......
    5250: 03 A6 5F 4F 50 82 55 81 BF 1F 00 4D 0B 0C 00 00  // .._OP.U....M....
    5260: 00 00 83 85 5D 28 0D 63 BA A3 FF 00 08 08 08 08  // ....](.c........
    5270: 08 08 08 10 18 18 18 18 18 18 18 0E 00 0F 08 00  // ................
    5280: 00 00 00 00 10 0A 00 FF 50 1D 10 00 A0 01 0F 00  // ........P.......
    5290: 0A E3 5F 4F 50 82 54 80 0B 3E 00 40 00 00 00 00  // .._OP.T..>.@....
    52A0: 00 00 EA 8C DF 50 00 E7 04 E3 FF 00 01 02 03 04  // .....P..........
    52B0: 05 06 07 08 09 0A 0B 0C 0D 0E 0F 01 00 0F 00 10  // ................
    52C0: 00 00 00 00 40 05 0F FF 00 05 11 1C 08 0B 14 28  // ....@..........(
    52D0: 0E 18 2D 32 20 24 38 3F 00 05 08 0B 0E 11 14 18  // ..-2 $8?........
    52E0: 1C 20 24 28 2D 32 38 3F 07 0C 10 15 1A 18 16 15  // . $(-28?........
    52F0: 13 1C 25 2F 38 33 2E 2A 25 27 29 2A 2C 23 19 10  // ..%/83.*%')*,#..
    5300: 23 25 27 2A 2C 2B 2A 29 29 2D 32 37 3B 39 37 34  // #%'*,+*))-27;974
    5310: 32 33 34 35 35 31 2C 27 2F 30 32 33 34 34 33 33  // 234551,'/0234433
    5320: 32 35 38 3A 3D 3C 3A 39 38 38 39 39 3A 37 34 31  // 258:=<:98899:741
    5330: 03 05 07 09 0B 0B 0A 09 08 0D 11 15 19 17 15 13  // ................
    5340: 11 11 12 13 14 0F 0B 07 10 10 12 13 14 13 13 13  // ................
    5350: 12 14 16 18 1A 19 18 17 16 17 17 17 18 15 14 11  // ................
    5360: 15 15 16 17 17 17 17 17 16 18 19 1A 1B 1B 1A 19  // ................
    5370: 19 19 19 19 1A 18 17 16 02 03 04 05 07 06 06 05  // ................
    5380: 05 07 0A 0C 0E 0D 0C 0B 09 0A 0A 0B 0B 09 06 04  // ................
    5390: 09 09 0A 0B 0B 0B 0B 0B 0A 0C 0D 0E 0F 0F 0E 0D  // ................
    53A0: 0D 0D 0D 0D 0E 0C 0B 0A 0C 0C 0C 0D 0D 0D 0D 0D  // ................
    53B0: 0C 0D 0E 0F 0F 0F 0F 0E 0E 0E 0E 0E 0E 0E 0D 0C  // ................
    53C0: 00 00 00 00 00 00 00 00 28 18 08 00 20 09 0F 00  // ........(... ...
    53D0: 06 63 2D 27 28 90 2B 80 BF 1F 00 C0 00 00 00 00  // .c-'(.+.........
    53E0: 00 00 9C 8E 8F 14 00 96 B9 E3 FF 00 01 02 03 04  // ................
    53F0: 05 06 07 10 11 12 13 14 15 16 17 01 00 0F 00 00  // ................
    5400: 00 00 00 00 00 05 0F FF 50 18 08 00 40 01 0F 00  // ........P...@...
    5410: 06 63 5F 4F 50 82 54 80 BF 1F 00 C0 00 00 00 00  // .c_OP.T.........
    5420: 00 00 9C 8E 8F 28 00 96 B9 E3 FF 00 01 02 03 04  // .....(..........
    5430: 05 06 07 10 11 12 13 14 15 16 17 01 00 0F 00 00  // ................
    5440: 00 00 00 00 00 05 0F FF 00 05 11 1C 08 0B 25 28  // ..............%(
    5450: 02 07 1B 20 0F 14 28 2C 0C 11 25 2A 14 1E 32 36  // ... ..(,..%*..26
    5460: 0F 13 27 2C 1B 20 34 39 06 0B 1F 24 13 18 2C 30  // ..',. 49...$..,0
    5470: 09 0D 21 26 15 1A 2E 33 13 17 2B 30 1F 24 38 3D  // ..!&...3..+0.$8=
    5480: 0E 18 2D 32 20 24 38 3F 00 05 11 1C 08 0B 14 18  // ..-2 $8?........
    5490: 00 05 11 1C 08 0B 14 18 0E 18 2D 32 20 24 38 3F  // ..........-2 $8?
    54A0: 0E 18 2D 32 20 24 38 3F 00 05 11 1C 08 0B 14 18  // ..-2 $8?........
    54B0: 00 05 11 1C 08 0B 14 18 0E 18 2D 32 20 24 38 3F  // ..........-2 $8?
    54C0: 0E 18 2D 32 20 24 38 3F 50 18 0E 00 80 01 0F 00  // ..-2 $8?P.......
    54D0: 06 A2 5F 4F 50 82 54 80 BF 1F 00 40 00 00 00 00  // .._OP.T....@....
    54E0: 00 00 83 85 5D 28 0F 63 BA E3 FF 00 08 00 00 18  // ....](.c........
    54F0: 18 00 00 00 08 00 00 00 18 00 00 0B 00 05 00 00  // ................
    5500: 00 00 00 00 00 05 05 FF 50 18 0E 00 80 01 0F 00  // ........P.......
    5510: 06 A3 5F 4F 50 82 54 80 BF 1F 00 40 00 00 00 00  // .._OP.T....@....
    5520: 00 00 83 85 5D 28 0F 63 BA E3 FF 00 01 02 03 04  // ....](.c........
    5530: 05 14 07 38 39 3A 3B 3C 3D 3E 3F 01 00 0F 00 00  // ...89:;<=>?.....
    5540: 00 00 00 00 00 05 0F FF 28 18 0E 00 08 09 03 00  // ........(.......
    5550: 02 A3 2D 27 28 90 2B A0 BF 1F 00 4D 0B 0C 00 00  // ..-'(.+....M....
    5560: 00 00 83 85 5D 14 1F 63 BA A3 FF 00 01 02 03 04  // ....]..c........
    5570: 05 14 07 38 39 3A 3B 3C 3D 3E 3F 08 00 0F 00 00  // ...89:;<=>?.....
    5580: 00 00 00 00 10 0E 00 FF 50 18 0E 00 10 01 03 00  // ........P.......
    5590: 02 A3 5F 4F 50 82 55 81 BF 1F 00 4D 0B 0C 00 00  // .._OP.U....M....
    55A0: 00 00 83 85 5D 28 1F 63 BA A3 FF 00 01 02 03 04  // ....](.c........
    55B0: 05 14 07 38 39 3A 3B 3C 3D 3E 3F 08 00 0F 00 00  // ...89:;<=>?.....
    55C0: 00 00 00 00 10 0E 00 FF 28 18 10 00 08 08 03 00  // ........(.......
    55D0: 02 67 2D 27 28 90 2B A0 BF 1F 00 4F 0D 0E 00 00  // .g-'(.+....O....
    55E0: 00 00 9C 8E 8F 14 1F 96 B9 A3 FF 00 01 02 03 04  // ................
    55F0: 05 14 07 38 39 3A 3B 3C 3D 3E 3F 0C 00 0F 08 00  // ...89:;<=>?.....
    5600: 00 00 00 00 10 0E 00 FF 50 18 10 00 10 00 03 00  // ........P.......
    5610: 02 67 5F 4F 50 82 55 81 BF 1F 00 4F 0D 0E 00 00  // .g_OP.U....O....
    5620: 00 00 9C 8E 8F 28 1F 96 B9 A3 FF 00 01 02 03 04  // .....(..........
    5630: 05 14 07 38 39 3A 3B 3C 3D 3E 3F 0C 00 0F 08 00  // ...89:;<=>?.....
    5640: 00 00 00 00 10 0E 00 FF 50 18 10 00 10 00 03 00  // ........P.......
    5650: 02 66 5F 4F 50 82 55 81 BF 1F 00 4F 0D 0E 00 00  // .f_OP.U....O....
    5660: 00 00 9C 8E 8F 28 0F 96 B9 A3 FF 00 08 08 08 08  // .....(..........
    5670: 08 08 08 10 18 18 18 18 18 18 18 0E 00 0F 08 00  // ................
    5680: 00 00 00 00 10 0A 00 FF 50 1D 10 00 A0 01 0F 00  // ........P.......
    5690: 06 E3 5F 4F 50 82 54 80 0B 3E 00 40 00 00 00 00  // .._OP.T..>.@....
    56A0: 00 00 EA 8C DF 28 00 E7 04 C3 FF 00 3F 3F 3F 3F  // .....(......????
    56B0: 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 01 00 0F 00 00  // ???????????.....
    56C0: 00 00 00 00 00 05 01 FF 50 1D 10 00 A0 01 0F 00  // ........P.......
    56D0: 06 E3 5F 4F 50 82 54 80 0B 3E 00 40 00 00 00 00  // .._OP.T..>.@....
    56E0: 00 00 EA 8C DF 28 00 E7 04 E3 FF 00 01 02 03 04  // .....(..........
    56F0: 05 14 07 38 39 3A 3B 3C 3D 3E 3F 01 00 0F 00 00  // ...89:;<=>?.....
    5700: 00 00 00 00 00 05 0F FF 28 18 08 00 20 01 0F 00  // ........(... ...
    5710: 0E 63 5F 4F 50 82 54 80 BF 1F 00 41 00 00 00 00  // .c_OP.T....A....
    5720: 00 00 9C 8E 8F 28 40 96 B9 A3 FF 00 01 02 03 04  // .....(@.........
    5730: 05 06 07 08 09 0A 0B 0C 0D 0E 0F 41 00 0F 00 00  // ...........A....
    5740: 00 00 00 00 40 05 0F FF E0 50 00 C0 00 00 00 00  // ....@....P......
    5750: 00 00 00 00 00 00 00 00 00 57 00 C0 00 00 00 00  // .........W......
    5760: 00 00 00 00 00 00 00 00 1A 00 9E 8E 00 C0 00 00  // ................
    5770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    5780: 00 00 1E E8 10 00 2E 8E 1E 3B 04 E8 FE 36 E8 D5  // .........;...6..
    5790: 36 E8 76 1A 1F C3 2E 8E 1E 3B 04 C7 06 87 04 60  // 6.v......;.....`
    57A0: F9 C6 06 8A 04 0B A0 89 04 0C 11 24 17 A2 89 04  // ...........$....
    57B0: B4 01 E8 73 1E A0 89 04 80 26 10 04 CF 80 0E 10  // ...s.....&......
    57C0: 04 20 C7 06 63 04 D4 03 0E 1F E8 71 B8 F7 C1 02  // . ..c......q....
    57D0: 00 75 03 E8 F9 B7 B8 03 00 E8 57 F4 C3 1E 2E 8E  // .u........W.....
    57E0: 1E 3B 04 0E 07 EB 00 1F C3 F6 06 89 04 08 74 01  // .;............t.
    57F0: C3 53 BA C8 03 EC B0 FF B2 C6 EE B2 C8 80 3E 63  // .S............>c
    5800: 04 B4 75 2F BE 62 58 B9 40 00 33 DB 9C FA 8A C3  // ..u/.bX.@.3.....
    5810: EE 8B FB C1 EF 03 83 E7 03 03 FE 2E 8A 05 42 EE  // ..............B.
    5820: 2E 8A 45 04 EE 2E 8A 45 08 EE FE C3 4A E2 DF 9D  // ..E....E....J...
    5830: E9 85 00 26 8A 47 2B F6 06 89 04 06 74 31 B9 F8  // ...&.G+.....t1..
    5840: 00 BF 60 52 3C 08 74 11 B9 40 00 BF E0 53 3C 38  // ..`R<.t..@...S<8
    5850: 74 07 3C 3F 74 03 BF 20 54 33 DB 9C FA 8A C3 EE  // t.<?t.. T3......
    5860: 2E 8A 01 42 EE EE EE FE C3 4A E2 F1 9D EB 49 3C  // ...B.....J....I<
    5870: 08 74 25 3C 38 74 2E 3C 3F 74 2A B9 08 00 33 DB  // .t%<8t.<?t*...3.
    5880: 51 E8 CB D3 B9 08 00 F7 C3 10 00 74 03 83 C7 18  // Q..........t....
    5890: E8 67 00 59 E2 EA EB 20 E8 B4 D3 B9 10 00 33 DB  // .g.Y... ......3.
    58A0: E8 57 00 EB 13 B9 40 00 33 DB 51 E8 28 00 8A C3  // .W....@.3.Q.(...
    58B0: E8 B7 2F FE C3 59 E2 F2 5B C3 00 2A 00 2A 00 2A  // ../..Y..[..*.*.*
    58C0: 00 2A 15 3F 15 3F 15 3F 15 3F 00 2A 00 3F 00 2A  // .*.?.?.?.?.*.?.*
    58D0: 00 3F 00 2A 00 3F 8B FB C1 EF 02 83 E7 0F 2E 8A  // .?.*.?..........
    58E0: B5 52 58 8B FB D1 EF 83 E7 0F 2E 8A AD 52 58 8B  // .RX..........RX.
    58F0: FB 83 E7 0F 2E 8A 8D 52 58 C3 9C 8A C3 FA EE 2E  // .......RX.......
    5900: 8A 05 42 EE 47 2E 8A 05 EE 47 2E 8A 05 EE 47 FE  // ..B.G....G....G.
    5910: C3 4A E2 E7 9D C3 00 00 00 00 00 00 00 00 7E 81  // .J............~.
    5920: A5 81 BD 99 81 7E 7C FE D6 BA C6 FE 7C 00 C6 EE  // .....~|.....|...
    5930: FE FE 7C 38 10 00 10 38 7C FE 7C 38 10 00 10 38  // ..|8...8|.|8...8
    5940: 10 EE EE 10 38 00 38 7C FE FE 6C 10 38 00 00 18  // ....8.8|..l.8...
    5950: 3C 7E 3C 18 00 00 FF E7 C3 81 C3 E7 FF FF 00 18  // <~<.............
    5960: 3C 66 66 3C 18 00 FF E7 C3 99 99 C3 E7 FF 1E 0E  // <ff<............
    5970: 1E 36 78 CC CC 78 7E C3 C3 7E 18 7E 18 18 1E 1A  // .6x..x~..~.~....
    5980: 1E 18 18 70 F0 60 3E 3E 36 36 F6 66 1E 0C DB 3C  // ...p.`>>66.f...<
    5990: 66 E7 66 3C DB 00 80 C0 F0 F8 F0 C0 80 00 02 06  // f.f<............
    59A0: 1E 3E 1E 06 02 00 18 3C 7E 18 7E 3C 18 00 66 66  // .>.....<~.~<..ff
    59B0: 66 66 66 00 66 00 7F DB 7B 3B 1B 1B 1B 00 3C 66  // fff.f...{;....<f
    59C0: 38 6C 6C 38 CC 78 00 00 00 00 FE FE FE 00 18 3C  // 8ll8.x.........<
    59D0: 7E 18 7E 3C 18 7E 18 3C 7E 18 18 18 18 00 18 18  // ~.~<.~.<~.......
    59E0: 18 18 7E 3C 18 00 00 18 1C FE 1C 18 00 00 00 30  // ..~<...........0
    59F0: 70 FE 70 30 00 00 00 00 C0 C0 C0 FE 00 00 00 24  // p.p0...........$
    5A00: 66 FF 66 24 00 00 00 10 38 7C 7C FE 00 00 00 FE  // f.f$....8||.....
    5A10: 7C 7C 38 10 00 00 00 00 00 00 00 00 00 00 18 3C  // ||8............<
    5A20: 3C 18 18 00 18 00 6C 6C 6C 00 00 00 00 00 6C 6C  // <.....lll.....ll
    5A30: FE 6C FE 6C 6C 00 18 7E C0 7C 06 FC 18 00 00 C6  // .l.ll..~.|......
    5A40: 0C 18 30 60 C6 00 38 6C 38 76 CC CC 76 00 18 18  // ..0`..8l8v..v...
    5A50: 30 00 00 00 00 00 18 30 60 60 60 30 18 00 60 30  // 0......0```0..`0
    5A60: 18 18 18 30 60 00 00 EE 7C FE 7C EE 00 00 00 18  // ...0`...|.|.....
    5A70: 18 7E 18 18 00 00 00 00 00 00 18 18 30 00 00 00  // .~..........0...
    5A80: 00 FE 00 00 00 00 00 00 00 00 00 38 38 00 06 0C  // ...........88...
    5A90: 18 30 60 C0 80 00 7C C6 CE DE F6 E6 7C 00 18 78  // .0`...|.....|..x
    5AA0: 18 18 18 18 7E 00 7C C6 0C 18 30 66 FE 00 7C C6  // ....~.|...0f..|.
    5AB0: 06 3C 06 C6 7C 00 0C 1C 3C 6C FE 0C 0C 00 FE C0  // .<..|...<l......
    5AC0: FC 06 06 C6 7C 00 7C C6 C0 FC C6 C6 7C 00 FE C6  // ....|.|.....|...
    5AD0: 06 0C 18 18 18 00 7C C6 C6 7C C6 C6 7C 00 7C C6  // ......|..|..|.|.
    5AE0: C6 7E 06 C6 7C 00 00 1C 1C 00 00 1C 1C 00 00 18  // .~..|...........
    5AF0: 18 00 00 18 18 30 0C 18 30 60 30 18 0C 00 00 00  // .....0..0`0.....
    5B00: FE 00 00 FE 00 00 60 30 18 0C 18 30 60 00 7C C6  // ......`0...0`.|.
    5B10: 06 0C 18 00 18 00 7C C6 C6 DE DC C0 7E 00 38 6C  // ......|.....~.8l
    5B20: C6 C6 FE C6 C6 00 FC 66 66 7C 66 66 FC 00 3C 66  // .......ff|ff..<f
    5B30: C0 C0 C0 66 3C 00 F8 6C 66 66 66 6C F8 00 FE C2  // ...f<..lfffl....
    5B40: C0 F8 C0 C2 FE 00 FE 62 60 7C 60 60 F0 00 7C C6  // .......b`|``..|.
    5B50: C0 C0 DE C6 7C 00 C6 C6 C6 FE C6 C6 C6 00 3C 18  // ....|.........<.
    5B60: 18 18 18 18 3C 00 3C 18 18 18 D8 D8 70 00 C6 CC  // ....<.<.....p...
    5B70: D8 F0 D8 CC C6 00 F0 60 60 60 60 62 FE 00 C6 EE  // .......````b....
    5B80: FE D6 D6 C6 C6 00 C6 E6 E6 F6 DE CE C6 00 7C C6  // ..............|.
    5B90: C6 C6 C6 C6 7C 00 FC 66 66 7C 60 60 F0 00 7C C6  // ....|..ff|``..|.
    5BA0: C6 C6 C6 D6 7C 06 FC C6 C6 FC D8 CC C6 00 7C C6  // ....|.........|.
    5BB0: C0 7C 06 C6 7C 00 7E 5A 18 18 18 18 3C 00 C6 C6  // .|..|.~Z....<...
    5BC0: C6 C6 C6 C6 7C 00 C6 C6 C6 C6 6C 38 10 00 C6 C6  // ....|.....l8....
    5BD0: D6 D6 FE EE C6 00 C6 6C 38 38 38 6C C6 00 66 66  // .......l888l..ff
    5BE0: 66 3C 18 18 3C 00 FE 86 0C 18 30 62 FE 00 7C 60  // f<..<.....0b..|`
    5BF0: 60 60 60 60 7C 00 C0 60 30 18 0C 06 02 00 7C 0C  // ````|..`0.....|.
    5C00: 0C 0C 0C 0C 7C 00 10 38 6C C6 00 00 00 00 00 00  // ....|..8l.......
    5C10: 00 00 00 00 00 FF 30 30 18 00 00 00 00 00 00 00  // ......00........
    5C20: 78 0C 7C CC 7E 00 E0 60 7C 66 66 66 FC 00 00 00  // x.|.~..`|fff....
    5C30: 7C C6 C0 C6 7C 00 1C 0C 7C CC CC CC 7E 00 00 00  // |...|...|...~...
    5C40: 7C C6 FE C0 7C 00 1C 36 30 FC 30 30 78 00 00 00  // |...|..60.00x...
    5C50: 76 CE C6 7E 06 7C E0 60 7C 66 66 66 E6 00 18 00  // v..~.|.`|fff....
    5C60: 38 18 18 18 3C 00 0C 00 1C 0C 0C 0C CC 78 E0 60  // 8...<........x.`
    5C70: 66 6C 78 6C E6 00 18 18 18 18 18 18 1C 00 00 00  // flxl............
    5C80: 6C FE D6 D6 C6 00 00 00 DC 66 66 66 66 00 00 00  // l........ffff...
    5C90: 7C C6 C6 C6 7C 00 00 00 DC 66 66 7C 60 F0 00 00  // |...|....ff|`...
    5CA0: 76 CC CC 7C 0C 1E 00 00 DC 66 60 60 F0 00 00 00  // v..|.....f``....
    5CB0: 7C C0 7C 06 7C 00 30 30 FC 30 30 36 1C 00 00 00  // |.|.|.00.006....
    5CC0: CC CC CC CC 76 00 00 00 C6 C6 6C 38 10 00 00 00  // ....v.....l8....
    5CD0: C6 C6 D6 FE 6C 00 00 00 C6 6C 38 6C C6 00 00 00  // ....l....l8l....
    5CE0: C6 C6 CE 76 06 7C 00 00 FC 98 30 64 FC 00 0E 18  // ...v.|....0d....
    5CF0: 18 70 18 18 0E 00 18 18 18 00 18 18 18 00 70 18  // .p............p.
    5D00: 18 0E 18 18 70 00 76 DC 00 00 00 00 00 00 00 10  // ....p.v.........
    5D10: 38 38 6C 6C FE 00 3C 66 C0 66 3C 18 CC 78 00 C6  // 88ll..<f.f<..x..
    5D20: 00 C6 C6 CE 76 00 0E 00 7C C6 FE C0 7C 00 7C C6  // ....v...|...|.|.
    5D30: 78 0C 7C CC 7E 00 C6 00 78 0C 7C CC 7E 00 E0 00  // x.|.~...x.|.~...
    5D40: 78 0C 7C CC 7E 00 38 38 78 0C 7C CC 7E 00 00 00  // x.|.~.88x.|.~...
    5D50: 7C C0 7C 18 6C 38 7C C6 7C C6 FE C0 7C 00 C6 00  // |.|.l8|.|...|...
    5D60: 7C C6 FE C0 7C 00 E0 00 7C C6 FE C0 7C 00 66 00  // |...|...|...|.f.
    5D70: 38 18 18 18 3C 00 7C C6 38 18 18 18 3C 00 00 00  // 8...<.|.8...<...
    5D80: 38 18 18 18 3C 00 C6 38 6C C6 FE C6 C6 00 38 38  // 8...<..8l.....88
    5D90: 00 7C C6 FE C6 00 0E 00 FE C0 F8 C0 FE 00 00 00  // .|..............
    5DA0: 6C 9A 7E D8 6E 00 7E D8 D8 FE D8 D8 DE 00 7C C6  // l.~.n.~.......|.
    5DB0: 00 7C C6 C6 7C 00 00 C6 00 7C C6 C6 7C 00 00 E0  // .|..|....|..|...
    5DC0: 00 7C C6 C6 7C 00 7C C6 00 C6 C6 CE 76 00 00 E0  // .|..|.|.....v...
    5DD0: 00 C6 C6 CE 76 00 18 00 3C 18 18 18 3C 00 C6 38  // ....v...<...<..8
    5DE0: 6C C6 C6 6C 38 00 C6 00 C6 C6 C6 C6 7C 00 00 18  // l..l8.......|...
    5DF0: 7E D8 D8 7E 18 00 38 6C 60 F0 66 F6 6C 00 C3 66  // ~..~..8l`.f.l..f
    5E00: 3C 7E 18 3C 18 00 3E 63 38 0E 63 3E 00 1C 00 3E  // <~.<..>c8.c>...>
    5E10: 61 3C 86 7C 00 1C 0E 00 78 0C 7C CC 7E 00 1C 00  // a<.|....x.|.~...
    5E20: 38 18 18 18 3C 00 00 0E 00 7C C6 C6 7C 00 00 0E  // 8...<....|..|...
    5E30: 00 CC CC DC 76 00 00 FC 00 BC 66 66 E6 00 FE 00  // ....v.....ff....
    5E40: C6 E6 F6 CE C6 00 3E 00 3E 60 67 63 3D 00 3E 00  // ......>.>`gc=.>.
    5E50: 76 CE C6 7E 06 7C 18 00 18 30 60 66 3C 00 00 00  // v..~.|...0`f<...
    5E60: 00 7C 60 60 00 00 00 00 00 7C 0C 0C 00 00 C0 CC  // .|``.....|......
    5E70: D8 30 7C 36 0C 3E C0 CC D8 30 6C 3C 7E 0C 18 00  // .0|6.>...0l<~...
    5E80: 18 18 3C 3C 18 00 00 36 6C D8 6C 36 00 00 00 D8  // ..<<...6l.l6....
    5E90: 6C 36 6C D8 00 00 22 88 22 88 22 88 22 88 55 AA  // l6l...".".".".U.
    5EA0: 55 AA 55 AA 55 AA DD 77 DD 77 DD 77 DD 77 18 18  // U.U.U..w.w.w.w..
    5EB0: 18 18 18 18 18 18 18 18 18 18 F8 18 18 18 18 18  // ................
    5EC0: F8 18 F8 18 18 18 36 36 36 36 F6 36 36 36 00 00  // ......6666.666..
    5ED0: 00 00 FE 36 36 36 00 00 F8 18 F8 18 18 18 36 36  // ...666........66
    5EE0: F6 06 F6 36 36 36 36 36 36 36 36 36 36 36 00 00  // ...66666666666..
    5EF0: FE 06 F6 36 36 36 36 36 F6 06 FE 00 00 00 36 36  // ...66666......66
    5F00: 36 36 FE 00 00 00 18 18 F8 18 F8 00 00 00 00 00  // 66..............
    5F10: 00 00 F8 18 18 18 18 18 18 18 1F 00 00 00 18 18  // ................
    5F20: 18 18 FF 00 00 00 00 00 00 00 FF 18 18 18 18 18  // ................
    5F30: 18 18 1F 18 18 18 00 00 00 00 FF 00 00 00 18 18  // ................
    5F40: 18 18 FF 18 18 18 18 18 1F 18 1F 18 18 18 36 36  // ..............66
    5F50: 36 36 37 36 36 36 36 36 37 30 3F 00 00 00 00 00  // 6676666670?.....
    5F60: 3F 30 37 36 36 36 36 36 F7 00 FF 00 00 00 00 00  // ?0766666........
    5F70: FF 00 F7 36 36 36 36 36 37 30 37 36 36 36 00 00  // ...66666707666..
    5F80: FF 00 FF 00 00 00 36 36 F7 00 F7 36 36 36 18 18  // ......66...666..
    5F90: FF 00 FF 00 00 00 36 36 36 36 FF 00 00 00 00 00  // ......6666......
    5FA0: FF 00 FF 18 18 18 00 00 00 00 FF 36 36 36 36 36  // ...........66666
    5FB0: 36 36 3F 00 00 00 18 18 1F 18 1F 00 00 00 00 00  // 66?.............
    5FC0: 1F 18 1F 18 18 18 00 00 00 00 3F 36 36 36 36 36  // ..........?66666
    5FD0: 36 36 FF 36 36 36 18 18 FF 18 FF 18 18 18 18 18  // 66.666..........
    5FE0: 18 18 F8 00 00 00 00 00 00 00 1F 18 18 18 FF FF  // ................
    5FF0: FF FF FF FF FF FF 00 00 00 00 FF FF FF FF F0 F0  // ................
    6000: F0 F0 F0 F0 F0 F0 0F 0F 0F 0F 0F 0F 0F 0F FF FF  // ................
    6010: FF FF 00 00 00 00 00 00 66 DC D8 DC 66 00 00 78  // ........f...f..x
    6020: CC F8 CC C6 CC 00 00 FE 62 60 60 60 E0 00 00 FE  // ........b```....
    6030: 6C 6C 6C 6C 6C 00 FE C6 60 30 60 C6 FE 00 00 7E  // lllll...`0`....~
    6040: D8 CC CC D8 70 00 00 66 66 66 66 7C C0 00 00 76  // ....p..ffff|...v
    6050: DC 18 18 18 38 00 FE 38 6C C6 6C 38 FE 00 38 6C  // ....8..8l.l8..8l
    6060: C6 FE C6 6C 38 00 38 6C C6 C6 6C 6C EE 00 3E 60  // ...l8.8l..ll..>`
    6070: 38 66 C6 CC 78 00 00 00 7E DB DB 7E 00 00 06 7C  // 8f..x...~..~...|
    6080: DE F6 E6 7C C0 00 38 60 C0 F8 C0 60 38 00 7C C6  // ...|..8`...`8.|.
    6090: C6 C6 C6 C6 C6 00 00 FE 00 FE 00 FE 00 00 18 18  // ................
    60A0: 7E 18 18 00 7E 00 30 18 0C 18 30 00 7E 00 0C 18  // ~...~.0...0.~...
    60B0: 30 18 0C 00 7E 00 0C 1E 18 18 18 18 18 18 18 18  // 0...~...........
    60C0: 18 18 18 78 30 00 00 00 18 00 7E 00 18 00 00 76  // ...x0.....~....v
    60D0: DC 00 76 DC 00 00 7C C6 C6 7C 00 00 00 00 00 00  // ..v...|..|......
    60E0: 00 18 18 00 00 00 00 00 00 00 18 00 00 00 1F 18  // ................
    60F0: 18 18 F8 38 18 00 D8 6C 6C 6C 00 00 00 00 70 D8  // ...8...lll....p.
    6100: 30 F8 00 00 00 00 00 00 7C 7C 7C 7C 00 00 00 00  // 0.......||||....
    6110: 00 00 00 00 00 00 1D 00 00 00 00 24 66 FF 66 24  // ...........$f.f$
    6120: 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00 00  // ................
    6130: 00 00 00 00 00 00 00 00 00 00 00 7E 81 A5 81 81  // ...........~....
    6140: BD 99 81 81 7E 00 00 00 00 00 00 7C FE FE D6 FE  // ....~......|....
    6150: FE BA C6 FE 7C 00 00 00 00 00 00 00 6C EE FE FE  // ....|.......l...
    6160: FE FE 7C 38 10 00 00 00 00 00 00 00 10 38 7C FE  // ..|8.........8|.
    6170: 7C 38 10 00 00 00 00 00 00 00 00 00 10 38 38 10  // |8...........88.
    6180: 6C EE 6C 10 38 00 00 00 00 00 00 10 38 7C 7C FE  // l.l.8.......8||.
    6190: FE FE 6C 10 38 00 00 00 00 00 00 00 00 00 18 3C  // ..l.8..........<
    61A0: 3C 3C 18 00 00 00 00 00 00 FF FF FF FF FF E7 C3  // <<..............
    61B0: C3 C3 E7 FF FF FF FF FF FF 00 00 00 00 18 3C 66  // ..............<f
    61C0: 66 66 3C 18 00 00 00 00 00 FF FF FF FF E7 C3 99  // ff<.............
    61D0: 99 99 C3 E7 FF FF FF FF FF 00 00 1E 0E 1E 36 78  // ..............6x
    61E0: CC CC CC CC 78 00 00 00 00 00 00 3C 66 66 66 3C  // ....x......<fff<
    61F0: 18 7E 18 18 18 00 00 00 00 00 00 1E 1A 1E 18 18  // .~..............
    6200: 18 18 78 F8 70 00 00 00 00 00 00 3E 36 3E 36 36  // ..x.p......>6>66
    6210: 76 F6 66 0E 1E 0C 00 00 00 00 00 18 DB 7E 3C 66  // v.f..........~<f
    6220: 66 3C 7E DB 18 00 00 00 00 00 00 00 80 E0 F0 FC  // f<~.............
    6230: FE FC F0 E0 80 00 00 00 00 00 00 00 02 0E 3E 7E  // ..............>~
    6240: FE 7E 3E 0E 02 00 00 00 00 00 00 18 3C 7E 18 18  // .~>.........<~..
    6250: 18 18 7E 3C 18 00 00 00 00 00 00 66 66 66 66 66  // ..~<.......fffff
    6260: 66 66 00 66 66 00 00 00 00 00 00 7F DB DB DB DB  // ff.ff...........
    6270: 7B 1B 1B 1B 1B 00 00 00 00 00 00 7C C6 C6 60 7C  // {..........|..`|
    6280: F6 DE 7C 0C C6 C6 7C 00 00 00 00 00 00 00 00 00  // ..|...|.........
    6290: 00 FE FE FE FE 00 00 00 00 00 00 18 3C 7E 18 18  // ............<~..
    62A0: 18 7E 3C 18 7E 00 00 00 00 00 00 18 3C 7E 18 18  // .~<.~.......<~..
    62B0: 18 18 18 18 18 00 00 00 00 00 00 18 18 18 18 18  // ................
    62C0: 18 18 7E 3C 18 00 00 00 00 00 00 00 00 00 0C 0E  // ..~<............
    62D0: FF 0E 0C 00 00 00 00 00 00 00 00 00 00 00 30 70  // ..............0p
    62E0: FE 70 30 00 00 00 00 00 00 00 00 00 00 00 00 C0  // .p0.............
    62F0: C0 C0 FE 00 00 00 00 00 00 00 00 00 00 00 24 66  // ..............$f
    6300: FF 66 24 00 00 00 00 00 00 00 00 00 10 38 38 38  // .f$..........888
    6310: 7C 7C FE FE 00 00 00 00 00 00 00 00 FE FE 7C 7C  // ||............||
    6320: 7C 38 38 10 00 00 00 00 00 00 00 00 00 00 00 00  // |88.............
    6330: 00 00 00 00 00 00 00 00 00 00 00 18 3C 3C 3C 3C  // ............<<<<
    6340: 18 18 00 18 18 00 00 00 00 00 36 36 36 36 14 00  // ..........6666..
    6350: 00 00 00 00 00 00 00 00 00 00 00 6C 6C 6C FE 6C  // ...........lll.l
    6360: 6C FE 6C 6C 6C 00 00 00 00 00 00 18 18 7C C6 C0  // l.lll........|..
    6370: 78 3C 06 C6 7C 18 18 00 00 00 00 00 00 00 62 66  // x<..|.........bf
    6380: 0C 18 30 66 C6 00 00 00 00 00 00 38 6C 38 30 76  // ..0f.......8l80v
    6390: 7E CC CC CC 76 00 00 00 00 00 0C 0C 0C 18 00 00  // ~...v...........
    63A0: 00 00 00 00 00 00 00 00 00 00 00 0C 18 30 30 30  // .............000
    63B0: 30 30 30 18 0C 00 00 00 00 00 00 30 18 0C 0C 0C  // 000........0....
    63C0: 0C 0C 0C 18 30 00 00 00 00 00 00 00 00 00 6C 38  // ....0.........l8
    63D0: FE 38 6C 00 00 00 00 00 00 00 00 00 00 00 18 18  // .8l.............
    63E0: 7E 18 18 00 00 00 00 00 00 00 00 00 00 00 00 00  // ~...............
    63F0: 00 00 0C 0C 0C 18 00 00 00 00 00 00 00 00 00 00  // ................
    6400: FE 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    6410: 00 00 00 18 18 00 00 00 00 00 00 00 00 02 06 0C  // ................
    6420: 18 30 60 C0 80 00 00 00 00 00 00 7C C6 C6 CE DE  // .0`........|....
    6430: F6 E6 C6 C6 7C 00 00 00 00 00 00 18 78 18 18 18  // ....|.......x...
    6440: 18 18 18 18 7E 00 00 00 00 00 00 7C C6 C6 06 0C  // ....~......|....
    6450: 18 30 60 C6 FE 00 00 00 00 00 00 7C C6 06 06 3C  // .0`........|...<
    6460: 06 06 06 C6 7C 00 00 00 00 00 00 0C 1C 3C 6C CC  // ....|........<l.
    6470: CC FE 0C 0C 1E 00 00 00 00 00 00 FE C0 C0 C0 FC  // ................
    6480: 06 06 06 C6 7C 00 00 00 00 00 00 7C C6 C0 C0 FC  // ....|......|....
    6490: C6 C6 C6 C6 7C 00 00 00 00 00 00 FE C6 06 0C 18  // ....|...........
    64A0: 30 30 30 30 30 00 00 00 00 00 00 7C C6 C6 C6 7C  // 00000......|...|
    64B0: C6 C6 C6 C6 7C 00 00 00 00 00 00 7C C6 C6 C6 C6  // ....|......|....
    64C0: 7E 06 06 C6 7C 00 00 00 00 00 00 00 00 00 0C 0C  // ~...|...........
    64D0: 00 00 0C 0C 00 00 00 00 00 00 00 00 00 00 0C 0C  // ................
    64E0: 00 00 0C 0C 0C 18 00 00 00 00 00 00 0C 18 30 60  // ..............0`
    64F0: C0 60 30 18 0C 00 00 00 00 00 00 00 00 00 00 FE  // .`0.............
    6500: 00 FE 00 00 00 00 00 00 00 00 00 00 60 30 18 0C  // ............`0..
    6510: 06 0C 18 30 60 00 00 00 00 00 00 7C C6 C6 0C 18  // ...0`......|....
    6520: 18 18 00 18 18 00 00 00 00 00 00 7C C6 C6 C6 DE  // ...........|....
    6530: DE DE DC C0 7E 00 00 00 00 00 00 38 6C C6 C6 C6  // ....~......8l...
    6540: FE C6 C6 C6 C6 00 00 00 00 00 00 FC 66 66 66 7C  // ............fff|
    6550: 66 66 66 66 FC 00 00 00 00 00 00 3C 66 C2 C0 C0  // ffff.......<f...
    6560: C0 C0 C2 66 3C 00 00 00 00 00 00 F8 6C 66 66 66  // ...f<.......lfff
    6570: 66 66 66 6C F8 00 00 00 00 00 00 FE 66 60 64 7C  // fffl........f`d|
    6580: 64 60 60 66 FE 00 00 00 00 00 00 FE 66 60 64 7C  // d``f........f`d|
    6590: 64 60 60 60 F0 00 00 00 00 00 00 7C C6 C6 C0 C0  // d```.......|....
    65A0: C0 CE C6 C6 7C 00 00 00 00 00 00 C6 C6 C6 C6 FE  // ....|...........
    65B0: C6 C6 C6 C6 C6 00 00 00 00 00 00 3C 18 18 18 18  // ...........<....
    65C0: 18 18 18 18 3C 00 00 00 00 00 00 3C 18 18 18 18  // ....<......<....
    65D0: 18 18 D8 D8 70 00 00 00 00 00 00 C6 C6 CC D8 F0  // ....p...........
    65E0: F0 D8 CC C6 C6 00 00 00 00 00 00 F0 60 60 60 60  // ............````
    65F0: 60 60 62 66 FE 00 00 00 00 00 00 C6 C6 EE EE FE  // ``bf............
    6600: D6 D6 D6 C6 C6 00 00 00 00 00 00 C6 C6 E6 E6 F6  // ................
    6610: DE CE CE C6 C6 00 00 00 00 00 00 7C C6 C6 C6 C6  // ...........|....
    6620: C6 C6 C6 C6 7C 00 00 00 00 00 00 FC 66 66 66 66  // ....|.......ffff
    6630: 7C 60 60 60 F0 00 00 00 00 00 00 7C C6 C6 C6 C6  // |```.......|....
    6640: C6 C6 D6 D6 7C 06 00 00 00 00 00 FC 66 66 66 7C  // ....|.......fff|
    6650: 78 6C 66 66 E6 00 00 00 00 00 00 7C C6 C0 C0 70  // xlff.......|...p
    6660: 1C 06 06 C6 7C 00 00 00 00 00 00 7E 5A 18 18 18  // ....|......~Z...
    6670: 18 18 18 18 3C 00 00 00 00 00 00 C6 C6 C6 C6 C6  // ....<...........
    6680: C6 C6 C6 C6 7C 00 00 00 00 00 00 C6 C6 C6 C6 C6  // ....|...........
    6690: C6 C6 6C 38 10 00 00 00 00 00 00 C6 C6 C6 D6 D6  // ..l8............
    66A0: D6 FE EE C6 C6 00 00 00 00 00 00 C6 C6 C6 6C 38  // ..............l8
    66B0: 38 6C C6 C6 C6 00 00 00 00 00 00 66 66 66 66 66  // 8l.........fffff
    66C0: 3C 18 18 18 3C 00 00 00 00 00 00 FE C6 86 0C 18  // <...<...........
    66D0: 30 60 C2 C6 FE 00 00 00 00 00 00 7C 60 60 60 60  // 0`.........|````
    66E0: 60 60 60 60 7C 00 00 00 00 00 00 00 00 80 C0 60  // ````|..........`
    66F0: 30 18 0C 06 02 00 00 00 00 00 00 7C 0C 0C 0C 0C  // 0..........|....
    6700: 0C 0C 0C 0C 7C 00 00 00 00 00 10 38 6C C6 00 00  // ....|......8l...
    6710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    6720: 00 00 00 00 00 00 FF 00 00 00 18 18 18 0C 00 00  // ................
    6730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 78 0C  // ..............x.
    6740: 7C CC CC DC 76 00 00 00 00 00 00 E0 60 60 7C 66  // |...v.......``|f
    6750: 66 66 66 66 FC 00 00 00 00 00 00 00 00 00 7C C6  // ffff..........|.
    6760: C0 C0 C0 C6 7C 00 00 00 00 00 00 1C 0C 0C 7C CC  // ....|.........|.
    6770: CC CC CC CC 7E 00 00 00 00 00 00 00 00 00 7C C6  // ....~.........|.
    6780: C6 FE C0 C6 7C 00 00 00 00 00 00 1C 36 30 30 FC  // ....|.......600.
    6790: 30 30 30 30 78 00 00 00 00 00 00 00 00 00 76 CE  // 0000x.........v.
    67A0: C6 C6 CE 76 06 C6 7C 00 00 00 00 E0 60 60 7C 66  // ...v..|.....``|f
    67B0: 66 66 66 66 E6 00 00 00 00 00 00 18 18 00 38 18  // ffff..........8.
    67C0: 18 18 18 18 3C 00 00 00 00 00 00 0C 0C 00 1C 0C  // ....<...........
    67D0: 0C 0C 0C 0C CC CC 78 00 00 00 00 E0 60 60 66 66  // ......x.....``ff
    67E0: 6C 78 6C 66 E6 00 00 00 00 00 00 18 18 18 18 18  // lxlf............
    67F0: 18 18 18 18 1C 00 00 00 00 00 00 00 00 00 6C FE  // ..............l.
    6800: D6 D6 C6 C6 C6 00 00 00 00 00 00 00 00 00 DC 66  // ...............f
    6810: 66 66 66 66 66 00 00 00 00 00 00 00 00 00 7C C6  // fffff.........|.
    6820: C6 C6 C6 C6 7C 00 00 00 00 00 00 00 00 00 DC 66  // ....|..........f
    6830: 66 66 66 7C 60 60 F0 00 00 00 00 00 00 00 76 CC  // fff|``........v.
    6840: CC CC CC 7C 0C 0C 1E 00 00 00 00 00 00 00 DC 66  // ...|...........f
    6850: 60 60 60 60 F0 00 00 00 00 00 00 00 00 00 7C C6  // ````..........|.
    6860: C0 7C 06 C6 7C 00 00 00 00 00 00 30 30 30 FC 30  // .|..|......000.0
    6870: 30 30 30 36 1C 00 00 00 00 00 00 00 00 00 CC CC  // 0006............
    6880: CC CC CC CC 76 00 00 00 00 00 00 00 00 00 C6 C6  // ....v...........
    6890: C6 C6 6C 38 10 00 00 00 00 00 00 00 00 00 C6 C6  // ..l8............
    68A0: D6 D6 D6 FE 6C 00 00 00 00 00 00 00 00 00 C6 C6  // ....l...........
    68B0: 6C 38 6C C6 C6 00 00 00 00 00 00 00 00 00 C6 C6  // l8l.............
    68C0: C6 C6 CE 76 06 C6 7C 00 00 00 00 00 00 00 FE 86  // ...v..|.........
    68D0: 0C 18 30 62 FE 00 00 00 00 00 00 0E 18 18 18 70  // ..0b...........p
    68E0: 18 18 18 18 0E 00 00 00 00 00 00 18 18 18 18 00  // ................
    68F0: 18 18 18 18 18 00 00 00 00 00 00 70 18 18 18 0E  // ...........p....
    6900: 18 18 18 18 70 00 00 00 00 00 00 76 DC 00 00 00  // ....p......v....
    6910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10 38  // ...............8
    6920: 38 6C 6C FE 00 00 00 00 00 00 00 3C 66 C0 C0 C0  // 8ll........<f...
    6930: C6 66 3C 18 0C CC 38 00 00 00 00 C6 00 00 C6 C6  // .f<...8.........
    6940: C6 C6 C6 CE 76 00 00 00 00 00 0C 18 30 00 7C C6  // ....v.......0.|.
    6950: C6 FE C0 C6 7C 00 00 00 00 00 30 78 CC 00 78 0C  // ....|.....0x..x.
    6960: 7C CC CC DC 76 00 00 00 00 00 00 CC 00 00 78 0C  // |...v.........x.
    6970: 7C CC CC DC 76 00 00 00 00 00 60 30 18 00 78 0C  // |...v.....`0..x.
    6980: 7C CC CC DC 76 00 00 00 00 00 38 6C 38 00 78 0C  // |...v.....8l8.x.
    6990: 7C CC CC DC 76 00 00 00 00 00 00 00 00 7C C6 C0  // |...v........|..
    69A0: C0 C6 7C 18 0C 6C 38 00 00 00 30 78 CC 00 7C C6  // ..|..l8...0x..|.
    69B0: C6 FE C0 C6 7C 00 00 00 00 00 00 CC 00 00 7C C6  // ....|.........|.
    69C0: C6 FE C0 C6 7C 00 00 00 00 00 30 18 0C 00 7C C6  // ....|.....0...|.
    69D0: C6 FE C0 C6 7C 00 00 00 00 00 00 66 00 00 38 18  // ....|......f..8.
    69E0: 18 18 18 18 3C 00 00 00 00 00 18 3C 66 00 38 18  // ....<......<f.8.
    69F0: 18 18 18 18 3C 00 00 00 00 00 00 00 00 00 38 18  // ....<.........8.
    6A00: 18 18 18 18 3C 00 00 00 00 00 C6 00 38 6C C6 C6  // ....<.......8l..
    6A10: C6 FE C6 C6 C6 00 00 00 00 38 6C 38 00 38 6C C6  // .........8l8.8l.
    6A20: C6 FE C6 C6 C6 00 00 00 00 0C 18 30 00 FE 60 60  // ...........0..``
    6A30: 7C 60 60 60 FE 00 00 00 00 00 00 00 00 66 DB 1B  // |```.........f..
    6A40: 7F D8 D8 DF 76 00 00 00 00 00 00 7E D8 D8 D8 D8  // ....v......~....
    6A50: FE D8 D8 D8 DE 00 00 00 00 00 30 78 CC 00 7C C6  // ..........0x..|.
    6A60: C6 C6 C6 C6 7C 00 00 00 00 00 00 C6 00 00 7C C6  // ....|.........|.
    6A70: C6 C6 C6 C6 7C 00 00 00 00 00 30 18 0C 00 7C C6  // ....|.....0...|.
    6A80: C6 C6 C6 C6 7C 00 00 00 00 00 30 78 CC 00 C6 C6  // ....|.....0x....
    6A90: C6 C6 C6 CE 76 00 00 00 00 00 60 30 18 00 C6 C6  // ....v.....`0....
    6AA0: C6 C6 C6 CE 76 00 00 00 00 00 18 00 3C 18 18 18  // ....v.......<...
    6AB0: 18 18 18 18 3C 00 00 00 00 00 C6 00 7C C6 C6 C6  // ....<.......|...
    6AC0: C6 C6 C6 C6 7C 00 00 00 00 00 C6 00 C6 C6 C6 C6  // ....|...........
    6AD0: C6 C6 C6 C6 7C 00 00 00 00 00 00 18 18 7C C6 C0  // ....|........|..
    6AE0: C0 C6 7C 18 18 00 00 00 00 00 38 6C 60 60 F0 60  // ..|.......8l``.`
    6AF0: 60 60 66 F6 6C 00 00 00 00 00 66 66 66 66 3C 18  // ``f.l.....ffff<.
    6B00: 7E 18 3C 18 18 00 00 00 00 00 00 3E 63 63 30 1C  // ~.<........>cc0.
    6B10: 06 63 63 3E 00 1C 00 00 00 00 00 00 00 00 3E 63  // .cc>..........>c
    6B20: 38 0E 63 3E 00 1C 00 00 00 00 0C 18 30 00 78 0C  // 8.c>........0.x.
    6B30: 7C CC CC DC 76 00 00 00 00 00 0C 18 30 00 38 18  // |...v.......0.8.
    6B40: 18 18 18 18 3C 00 00 00 00 00 0C 18 30 00 7C C6  // ....<.......0.|.
    6B50: C6 C6 C6 C6 7C 00 00 00 00 00 18 30 60 00 CC CC  // ....|......0`...
    6B60: CC CC CC DC 76 00 00 00 00 00 00 76 DC 00 BC 66  // ....v......v...f
    6B70: 66 66 66 66 E6 00 00 00 00 00 76 DC 00 C6 C6 E6  // ffff......v.....
    6B80: F6 DE CE C6 C6 00 00 00 00 00 21 1E 00 1E 33 60  // ..........!...3`
    6B90: 60 67 63 33 1D 00 00 00 00 00 42 3C 00 3B 66 66  // `gc3......B<.;ff
    6BA0: 66 3E 06 66 3C 00 00 00 00 00 00 30 30 00 30 30  // f>.f<......00.00
    6BB0: 30 60 C6 C6 7C 00 00 00 00 00 00 00 00 00 00 00  // 0`..|...........
    6BC0: 7E 60 60 60 00 00 00 00 00 00 00 00 00 00 00 00  // ~```............
    6BD0: 7E 06 06 06 00 00 00 00 00 00 60 60 62 66 6C 18  // ~.........``bfl.
    6BE0: 30 60 DC 36 0C 18 3E 00 00 00 60 60 62 66 6C 18  // 0`.6..>...``bfl.
    6BF0: 36 6E DE 36 7E 06 06 00 00 00 00 18 18 00 18 18  // 6n.6~...........
    6C00: 3C 3C 3C 3C 18 00 00 00 00 00 00 00 00 00 36 6C  // <<<<..........6l
    6C10: D8 6C 36 00 00 00 00 00 00 00 00 00 00 00 D8 6C  // .l6............l
    6C20: 36 6C D8 00 00 00 00 00 00 11 44 11 44 11 44 11  // 6l........D.D.D.
    6C30: 44 11 44 11 44 11 44 11 44 AA 55 AA 55 AA 55 AA  // D.D.D.D.D.U.U.U.
    6C40: 55 AA 55 AA 55 AA 55 AA 55 DD 77 DD 77 DD 77 DD  // U.U.U.U.U.w.w.w.
    6C50: 77 DD 77 DD 77 DD 77 DD 77 18 18 18 18 18 18 18  // w.w.w.w.w.......
    6C60: 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18  // ................
    6C70: F8 18 18 18 18 18 18 18 18 18 18 18 18 18 F8 18  // ................
    6C80: F8 18 18 18 18 18 18 18 18 36 36 36 36 36 36 36  // .........6666666
    6C90: F6 36 36 36 36 36 36 36 36 00 00 00 00 00 00 00  // .66666666.......
    6CA0: FE 36 36 36 36 36 36 36 36 00 00 00 00 00 F8 18  // .66666666.......
    6CB0: F8 18 18 18 18 18 18 18 18 36 36 36 36 36 F6 06  // .........66666..
    6CC0: F6 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36  // .666666666666666
    6CD0: 36 36 36 36 36 36 36 36 36 00 00 00 00 00 FE 06  // 666666666.......
    6CE0: F6 36 36 36 36 36 36 36 36 36 36 36 36 36 F6 06  // .6666666666666..
    6CF0: FE 00 00 00 00 00 00 00 00 36 36 36 36 36 36 36  // .........6666666
    6D00: FE 00 00 00 00 00 00 00 00 18 18 18 18 18 F8 18  // ................
    6D10: F8 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    6D20: F8 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18  // ................
    6D30: 1F 00 00 00 00 00 00 00 00 18 18 18 18 18 18 18  // ................
    6D40: FF 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    6D50: FF 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18  // ................
    6D60: 1F 18 18 18 18 18 18 18 18 00 00 00 00 00 00 00  // ................
    6D70: FF 00 00 00 00 00 00 00 00 18 18 18 18 18 18 18  // ................
    6D80: FF 18 18 18 18 18 18 18 18 18 18 18 18 18 1F 18  // ................
    6D90: 1F 18 18 18 18 18 18 18 18 36 36 36 36 36 36 36  // .........6666666
    6DA0: 37 36 36 36 36 36 36 36 36 36 36 36 36 36 37 30  // 7666666666666670
    6DB0: 3F 00 00 00 00 00 00 00 00 00 00 00 00 00 3F 30  // ?.............?0
    6DC0: 37 36 36 36 36 36 36 36 36 36 36 36 36 36 F7 00  // 76666666666666..
    6DD0: FF 00 00 00 00 00 00 00 00 00 00 00 00 00 FF 00  // ................
    6DE0: F7 36 36 36 36 36 36 36 36 36 36 36 36 36 37 30  // .666666666666670
    6DF0: 37 36 36 36 36 36 36 36 36 00 00 00 00 00 FF 00  // 766666666.......
    6E00: FF 00 00 00 00 00 00 00 00 36 36 36 36 36 F7 00  // .........66666..
    6E10: F7 36 36 36 36 36 36 36 36 18 18 18 18 18 FF 00  // .66666666.......
    6E20: FF 00 00 00 00 00 00 00 00 36 36 36 36 36 36 36  // .........6666666
    6E30: FF 00 00 00 00 00 00 00 00 00 00 00 00 00 FF 00  // ................
    6E40: FF 18 18 18 18 18 18 18 18 00 00 00 00 00 00 00  // ................
    6E50: FF 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36  // .666666666666666
    6E60: 3F 00 00 00 00 00 00 00 00 18 18 18 18 18 1F 18  // ?...............
    6E70: 1F 00 00 00 00 00 00 00 00 00 00 00 00 00 1F 18  // ................
    6E80: 1F 18 18 18 18 18 18 18 18 00 00 00 00 00 00 00  // ................
    6E90: 3F 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36  // ?666666666666666
    6EA0: FF 36 36 36 36 36 36 36 36 18 18 18 18 18 FF 18  // .66666666.......
    6EB0: FF 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18  // ................
    6EC0: F8 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    6ED0: 1F 18 18 18 18 18 18 18 18 FF FF FF FF FF FF FF  // ................
    6EE0: FF FF FF FF FF FF FF FF FF 00 00 00 00 00 00 00  // ................
    6EF0: 00 FF FF FF FF FF FF FF FF F0 F0 F0 F0 F0 F0 F0  // ................
    6F00: F0 F0 F0 F0 F0 F0 F0 F0 F0 0F 0F 0F 0F 0F 0F 0F  // ................
    6F10: 0F 0F 0F 0F 0F 0F 0F 0F 0F FF FF FF FF FF FF FF  // ................
    6F20: FF 00 00 00 00 00 00 00 00 00 00 00 00 76 DC D8  // .............v..
    6F30: D8 D8 D8 DC 76 00 00 00 00 00 00 78 CC CC D8 FC  // ....v......x....
    6F40: C6 C6 C6 C6 CC 00 00 00 00 00 00 FE 66 62 60 60  // ............fb``
    6F50: 60 60 60 60 60 00 00 00 00 00 00 00 00 00 FE 6C  // `````..........l
    6F60: 6C 6C 6C 6C 6C 00 00 00 00 00 00 FE C6 62 30 18  // lllll........b0.
    6F70: 18 30 62 C6 FE 00 00 00 00 00 00 00 00 00 7E D8  // .0b...........~.
    6F80: CC CC CC D8 70 00 00 00 00 00 00 00 00 66 66 66  // ....p........fff
    6F90: 66 66 7C 60 C0 80 00 00 00 00 00 00 00 00 76 DC  // ff|`..........v.
    6FA0: 18 18 18 18 18 00 00 00 00 00 00 FE 38 38 6C C6  // ............88l.
    6FB0: C6 6C 38 38 FE 00 00 00 00 00 00 00 38 6C C6 C6  // .l88........8l..
    6FC0: FE C6 C6 6C 38 00 00 00 00 00 00 38 6C C6 C6 C6  // ...l8......8l...
    6FD0: C6 6C 6C 6C EE 00 00 00 00 00 00 3E 60 60 3C 66  // .lll.......>``<f
    6FE0: C6 C6 C6 CC 78 00 00 00 00 00 00 00 00 00 7E DB  // ....x.........~.
    6FF0: DB DB 7E 00 00 00 00 00 00 00 00 02 06 7C CE DE  // ..~..........|..
    7000: F6 F6 7C 60 C0 00 00 00 00 00 00 00 1C 30 60 60  // ..|`.........0``
    7010: 7C 60 60 30 1C 00 00 00 00 00 00 7C C6 C6 C6 C6  // |``0.......|....
    7020: C6 C6 C6 C6 C6 00 00 00 00 00 00 00 00 FE 00 00  // ................
    7030: FE 00 00 FE 00 00 00 00 00 00 00 00 00 18 18 7E  // ...............~
    7040: 18 18 00 00 7E 00 00 00 00 00 00 30 18 0C 06 0C  // ....~......0....
    7050: 18 30 00 00 7E 00 00 00 00 00 00 0C 18 30 60 30  // .0..~........0`0
    7060: 18 0C 00 00 7E 00 00 00 00 00 00 00 00 0C 1E 1A  // ....~...........
    7070: 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18  // ................
    7080: 18 18 18 58 78 30 00 00 00 00 00 00 00 18 18 00  // ...Xx0..........
    7090: 7E 00 18 18 00 00 00 00 00 00 00 00 00 00 00 76  // ~..............v
    70A0: DC 00 76 DC 00 00 00 00 00 00 00 78 CC CC 78 00  // ..v........x..x.
    70B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    70C0: 18 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    70D0: 00 18 00 00 00 00 00 00 00 00 00 1F 18 18 18 18  // ................
    70E0: 18 D8 D8 78 38 18 00 00 00 00 00 D8 6C 6C 6C 6C  // ...x8.......llll
    70F0: 6C 00 00 00 00 00 00 00 00 00 00 70 D8 18 30 60  // l..........p..0`
    7100: F8 00 00 00 00 00 00 00 00 00 00 00 00 00 7E 7E  // ..............~~
    7110: 7E 7E 7E 7E 00 00 00 00 00 00 00 00 00 00 00 00  // ~~~~............
    7120: 00 00 00 00 00 00 00 00 00 1D 00 00 00 00 00 24  // ...............$
    7130: 66 FF 66 24 00 00 00 00 00 00 2F 00 00 00 01 03  // f.f$....../.....
    7140: 06 0C 18 30 60 C0 80 00 00 00 00 30 00 00 7E C3  // ...0`......0..~.
    7150: C3 C3 DB DB C3 C3 C3 7E 00 00 00 00 4D 00 00 C3  // .......~....M...
    7160: C3 E7 FF FF DB DB C3 C3 C3 00 00 00 00 54 00 00  // .............T..
    7170: FF 99 18 18 18 18 18 18 18 3C 00 00 00 00 56 00  // .........<....V.
    7180: 00 C3 C3 C3 C3 C3 C3 C3 66 3C 18 00 00 00 00 57  // ........f<.....W
    7190: 00 00 C3 C3 C3 C3 DB DB DB DB FF 66 00 00 00 00  // ...........f....
    71A0: 58 00 00 C3 C3 C3 66 3C 3C 66 C3 C3 C3 00 00 00  // X.....f<<f......
    71B0: 00 59 00 00 C3 C3 C3 C3 66 3C 18 18 18 3C 00 00  // .Y......f<...<..
    71C0: 00 00 5C 00 00 00 80 C0 60 30 18 0C 06 03 01 00  // ..\.....`0......
    71D0: 00 00 00 6D 00 00 00 00 00 66 FF DB DB DB C3 C3  // ...m.....f......
    71E0: 00 00 00 00 76 00 00 00 00 00 C3 C3 C3 C3 66 3C  // ....v.........f<
    71F0: 18 00 00 00 00 77 00 00 00 00 00 C3 C3 DB DB DB  // .....w..........
    7200: FF 66 00 00 00 00 00 00 C1 60 C3 0B DB 74 03 E9  // .f.......`...t..
    7210: 46 01 57 32 C0 B9 40 00 F3 AA 5F BB 8E 8E 26 89  // F.W2..@..._...&.
    7220: 1D 26 8C 4D 02 2E 8E 1E 3B 04 57 BE 49 04 B9 1E  // .&.M....;.W.I...
    7230: 00 83 C7 04 FC 8A 04 26 88 05 46 47 E2 F7 5F A0  // .......&..FG.._.
    7240: 84 04 FE C0 26 88 45 22 A1 85 04 26 89 45 23 57  // ....&.E"...&.E#W
    7250: E8 D9 1B 5F 26 88 5D 25 26 88 7D 26 8A 1E 49 04  // ..._&.]%&.}&..I.
    7260: E8 FC 05 74 05 80 FB 13 7F 1D 32 FF D1 E3 2E 8A  // ...t......2.....
    7270: 87 66 8E 32 E4 0A C0 74 01 40 26 89 45 27 2E 8A  // .f.2...t.@&.E'..
    7280: 87 67 8E 26 88 45 29 A1 85 04 8A 16 84 04 FE C2  // .g.&.E).........
    7290: F6 E2 B2 00 3D C8 00 7E 15 B2 01 3D 5E 01 7E 0E  // ....=..~...=^.~.
    72A0: B2 02 3D 90 01 7E 07 B2 03 3D E0 01 7E 00 26 88  // ..=..~...=..~.&.
    72B0: 55 2A 8A 26 87 04 8A C4 24 01 C0 E0 04 80 E4 02  // U*.&....$.......
    72C0: D0 E4 0A E0 80 F4 10 A0 89 04 24 0A 0A E0 E8 94  // ..........$.....
    72D0: 08 B2 C0 B0 30 EE 42 EC 24 08 C0 E0 02 0A C4 0C  // ....0.B.$.......
    72E0: 01 26 88 45 2D B0 03 26 88 45 31 E8 77 08 1E 06  // .&.E-..&.E1.w...
    72F0: 32 D2 C4 1E A8 04 8C C1 8C CE 3B CE 74 34 26 C5  // 2.........;.t4&.
    7300: 77 04 8C D9 0B F1 74 03 80 CA 10 26 C5 77 0C 8C  // w.....t....&.w..
    7310: D9 0B F1 74 03 80 CA 08 26 C5 77 08 8C D9 0B F1  // ...t....&.w.....
    7320: 74 03 80 CA 04 26 C5 77 10 8C D9 0B F1 74 03 80  // t....&.w.....t..
    7330: CA 01 07 1F 26 88 55 32 B0 03 BA C4 03 E8 E4 04  // ....&.U2........
    7340: 8A E0 C0 EC 02 8A D4 8A F2 D0 EE 81 E2 04 04 25  // ...............%
    7350: 03 03 0B C2 26 89 45 2B 8B EC C6 46 1A 1B C3 0A  // ....&.E+...F....
    7360: C0 74 0F FE C8 74 36 FE C8 74 56 8B EC C6 46 1A  // .t...t6..tV...F.
    7370: 00 C3 B8 20 00 F6 C1 01 74 03 83 C0 60 F6 C1 02  // ... ....t...`...
    7380: 74 03 83 C0 3A F6 C1 04 74 03 05 03 03 83 C0 3F  // t...:...t......?
    7390: C1 E8 06 8B EC 89 46 0E C6 46 1A 1C C3 8B FB 83  // ......F..F......
    73A0: C7 20 F6 C1 01 74 03 E8 85 00 F6 C1 02 74 03 E8  // . ...t.......t..
    73B0: EF 00 F6 C1 04 74 03 E8 F8 01 8B EC C6 46 1A 1C  // .....t.......F..
    73C0: C3 F6 C1 01 74 06 E8 16 15 E8 25 01 F6 C1 02 74  // ....t.....%....t
    73D0: 03 E8 85 01 F6 C1 04 74 03 E8 12 02 EB DC 8A C4  // .......t........
    73E0: EE 42 EC AA FE C4 4A E2 F5 C3 E8 6B 04 BD C0 03  // .B....J....k....
    73F0: B9 15 00 32 E4 EC 87 EA 8A C4 EE 42 EC AA FE C4  // ...2.......B....
    7400: 4A 87 EA E2 F0 EC 87 EA B0 20 EE C3 26 8A 05 88  // J........ ..&...
    7410: 04 47 46 E2 F7 C3 26 8A 25 EF 47 FE C0 E2 F7 C3  // .GF...&.%.G.....
    7420: B2 C0 8A C4 EE 26 8A 05 47 FE C4 EE E2 F4 C3 9C  // .....&..G.......
    7430: FA 51 57 8B C7 2B C3 26 89 07 8B F7 E8 0A 04 EC  // .QW..+.&........
    7440: 26 88 44 01 26 89 54 41 B2 CE EC 26 88 44 02 B2  // &.D.&.TA...&.D..
    7450: CC EC 26 88 44 09 B2 CA EC 26 88 44 04 B2 C4 EC  // ..&.D....&.D....
    7460: 26 88 04 83 C7 05 B9 04 00 B4 01 E8 70 FF 26 8A  // &...........p.&.
    7470: 04 EE 8B FE 83 C7 0A 26 8B 54 41 32 E4 B9 19 00  // .......&.TA2....
    7480: E8 5B FF 26 8A 44 01 EE E8 5F FF B2 CE 32 E4 B9  // .[.&.D..._...2..
    7490: 09 00 E8 49 FF 26 8A 44 02 EE 5F 59 83 C7 60 9D  // ...I.&.D.._Y..`.
    74A0: C3 9C FA 8B C7 2B C3 26 89 47 02 51 57 2E 8E 1E  // .....+.&.G.QW...
    74B0: 3B 04 A0 10 04 24 30 AA BE 49 04 B9 1E 00 F3 A4  // ;....$0..I......
    74C0: BE 84 04 B1 07 F3 A4 BE A8 04 B1 04 F3 A4 BE 14  // ................
    74D0: 00 B1 04 F3 A4 BE 74 00 B1 04 F3 A4 BE 7C 00 B1  // ......t......|..
    74E0: 04 F3 A4 BE 0C 01 B1 04 F3 A4 5F 59 83 C7 3A 9D  // .........._Y..:.
    74F0: C3 9C FA 26 8B 3F 03 FB 8B F7 51 8B FE 83 C7 05  // ...&.?....Q.....
    7500: BA C4 03 B8 00 01 EF B0 01 B9 04 00 E8 07 FF 47  // ...............G
    7510: B2 C2 26 8A 44 09 EE B2 C4 B8 00 03 EF 26 8A 04  // ..&.D........&..
    7520: EE 26 8B 54 41 B8 11 00 EF B1 19 32 C0 E8 E6 FE  // .&.TA......2....
    7530: 26 8A 44 01 EE 80 C2 06 26 8A 44 04 EE EC B1 15  // &.D.....&.D.....
    7540: 32 E4 E8 DB FE B0 20 EE B1 09 32 C0 B2 CE E8 C5  // 2..... ...2.....
    7550: FE 26 8A 44 02 EE 59 9D C3 9C FA 26 8B 7F 02 03  // .&.D..Y....&....
    7560: FB 06 51 2E 8E 1E 3B 04 26 8A 05 80 26 10 04 CF  // ..Q...;.&...&...
    7570: 08 06 10 04 47 BE 49 04 B9 1E 00 E8 8E FE BE 84  // ....G.I.........
    7580: 04 B1 07 E8 86 FE BE A8 04 B1 04 E8 7E FE BE 14  // ............~...
    7590: 00 B1 04 E8 76 FE BE 74 00 B1 04 E8 6E FE BE 7C  // ....v..t....n..|
    75A0: 00 B1 04 E8 66 FE BE 0C 01 B1 04 E8 5E FE 59 07  // ....f.......^.Y.
    75B0: 9D C3 9C FA 8B C7 2B C3 26 89 47 04 E8 A6 05 B2  // ......+.&.G.....
    75C0: C0 B0 34 EE 42 EC 26 88 05 BA C8 03 EC 26 88 45  // ..4.B.&......&.E
    75D0: 01 50 4A 4A EC 26 88 45 02 83 C7 03 B9 00 03 42  // .PJJ.&.E.......B
    75E0: 32 C0 EE 42 42 EC AA E2 FC 58 4A EE 9D C3 9C FA  // 2..BB....XJ.....
    75F0: 26 8B 77 04 03 F3 E8 6C 05 B2 C0 B0 34 EE 26 8A  // &.w....l....4.&.
    7600: 04 EE BA C6 03 26 8A 44 02 EE 56 42 42 83 C6 03  // .....&.D..VBB...
    7610: 32 C0 EE 42 B9 00 03 26 8A 04 EE 46 E2 F9 5E FE  // 2..B...&...F..^.
    7620: CA 26 8A 44 01 EE 9D C3 BA CC 03 EC 24 FE 0A C4  // .&.D........$...
    7630: B2 C2 EE C3 E8 A8 12 B2 C0 86 C4 EE EB 00 EB 00  // ................
    7640: 86 C4 EE EB 00 EB 00 B0 20 EE C3 50 8A E0 80 E4  // ........ ..P....
    7650: 80 80 26 87 04 7F 08 26 87 04 24 7F 8A E0 3C 07  // ..&....&..$...<.
    7660: 7E 1E 26 F6 47 33 01 75 17 3C 23 74 13 3C 32 74  // ~.&.G3.u.<#t.<2t
    7670: 0F 3C 33 74 0B B4 03 26 F6 47 09 01 75 02 B4 07  // .<3t...&.G..u...
    7680: 88 26 49 04 BA B4 03 80 0E 87 04 02 26 F6 47 09  // .&I.........&.G.
    7690: 01 74 07 B2 D4 80 26 87 04 FD 89 16 63 04 C7 06  // .t....&.....c...
    76A0: 4E 04 00 00 C6 06 62 04 00 B9 08 00 BF 50 04 FC  // N.....b......P..
    76B0: 06 1E 07 33 C0 F3 AB 07 26 8A 07 32 E4 A3 4A 04  // ...3....&..2..J.
    76C0: 26 8A 47 01 A2 84 04 26 8A 47 02 A3 85 04 26 8B  // &.G....&.G....&.
    76D0: 47 03 A3 4C 04 26 8B 47 14 86 C4 A3 60 04 58 C3  // G..L.&.G....`.X.
    76E0: 52 32 E4 33 D2 B0 0D CD 17 F6 C4 29 75 08 32 E4  // R2.3.......)u.2.
    76F0: 33 D2 B0 0A CD 17 5A C3 06 1E 60 2E 8E 1E 3B 04  // 3.....Z...`...;.
    7700: 2E 83 0E 45 04 00 75 6E 80 3E 00 05 01 74 67 C6  // ...E..un.>...tg.
    7710: 06 00 05 01 8A 1E 62 04 32 FF D1 E3 8B FB 8B 85  // ......b.2.......
    7720: 50 04 8A 3E 62 04 50 32 F6 8A 0E 84 04 32 ED 41  // P..>b.P2.....2.A
    7730: 51 8B 0E 4A 04 32 D2 E8 A6 FF F6 C4 29 75 3D 51  // Q..J.2......)u=Q
    7740: 52 89 95 50 04 B4 08 E8 B0 D4 0A C0 75 02 B0 20  // R..P........u.. 
    7750: 33 D2 32 E4 CD 17 F6 C4 29 75 1F 5A FE C2 59 E2  // 3.2.....)u.Z..Y.
    7760: DE FE C6 59 E2 CA E8 77 FF 32 C0 A2 00 05 58 89  // ...Y...w.2....X.
    7770: 85 50 04 E8 AF 03 61 1F 07 CF 5A 59 59 B0 FF EB  // .P....a...ZYY...
    7780: EA 52 2A F5 38 C6 7D 02 32 C0 2E 8E 06 3D 04 5A  // .R*.8.}.2....=.Z
    7790: C3 A0 85 04 F6 E3 8A F7 8B D8 8B CA BA C4 03 B8  // ................
    77A0: 02 0F EF B4 02 E8 6D 00 8B D1 32 ED 8A E6 8A C6  // ......m...2.....
    77B0: F3 AA 03 FD 8A CA 4B 75 F7 32 E4 E8 57 00 C3 53  // ......Ku.2..W..S
    77C0: 8A 1E 62 04 0B C0 75 04 0A DB 74 03 E8 35 03 5B  // ..b...u...t..5.[
    77D0: 8B F8 2B D1 81 C2 01 01 8A C3 32 E4 C3 8A C6 32  // ..+.......2....2
    77E0: F6 2B EA 0A DB 74 2A 2A C3 F6 26 85 04 8B C8 52  // .+...t**..&....R
    77F0: B4 01 E8 20 00 B2 C4 B8 02 0F EF 5A 1E 06 1F 8B  // ... .......Z....
    7800: C1 8B CA F3 A4 03 F5 03 FD 48 75 F5 1F E8 81 FF  // .........Hu.....
    7810: C3 8A D8 EB F8 BA CE 03 B0 05 EE 42 EC 24 FC 0A  // ...........B.$..
    7820: C4 EE 4A C3 9C FA EE 42 EB 00 EC 4A 9D C3 1E 2E  // ..J....B...J....
    7830: 8E 1E 3B 04 8B 16 63 04 80 C2 06 1F C3 1E 2E 8E  // ..;...c.........
    7840: 1E 3B 04 8B 16 63 04 1F C3 50 BA CC 03 EC B2 D4  // .;...c...P......
    7850: A8 01 75 02 B2 B4 58 C3 E8 EE FF 80 C2 06 C3 1E  // ..u...X.........
    7860: 2E 8E 1E 3B 04 80 3E 49 04 03 74 13 80 3E 49 04  // ...;..>I..t..>I.
    7870: 02 74 0C 80 3E 49 04 01 74 05 80 3E 49 04 00 1F  // .t..>I..t..>I...
    7880: C3 50 2E 8E 06 3F 04 A0 10 04 24 30 3C 30 74 05  // .P...?....$0<0t.
    7890: 2E 8E 06 41 04 58 0B C0 74 03 E8 E1 01 03 06 4E  // ...A.X..t......N
    78A0: 04 81 C2 01 01 2B D1 32 ED 8B 2E 4A 04 8B F8 8B  // .....+.2...J....
    78B0: F0 8B C5 F6 E3 D1 E0 D1 E5 0A DB 75 02 8A DE 38  // ...........u...8
    78C0: F3 7E 02 8A DE C3 FC 8A D8 8B C1 E8 B3 FF 03 F0  // .~..............
    78D0: 3A 16 4A 04 74 06 06 1F E8 1B 00 C3 06 1F E8 40  // :.J.t..........@
    78E0: 00 C3 FC 8A D8 8A C1 8A E6 E8 95 FF F7 DD 2B F0  // ..............+.
    78F0: 06 1F E8 01 00 C3 53 8A CE 2A CB 32 ED 32 F6 2B  // ......S..*.2.2.+
    7900: EA 2B EA E3 0E 8A E1 8B CA F3 A5 03 F5 03 FD FE  // .+..............
    7910: CC 75 F4 58 B0 20 8A CA F3 AB 03 FD FE CB 75 F6  // .u.X. ........u.
    7920: C3 53 8A C6 2A C3 74 06 F6 E2 8B C8 F3 A5 58 8B  // .S..*.t.......X.
    7930: C8 F6 E2 91 B0 20 F3 AB C3 8B D8 E8 2E 00 2E 8E  // ..... ..........
    7940: 1E 41 04 8A C3 22 DF D3 E3 A8 80 74 03 30 1C C3  // .A...".....t.0..
    7950: F6 D7 8A 34 22 F7 0A DE 88 1C C3 8A FC E8 0C 00  // ...4"...........
    7960: 2E 8E 1E 41 04 8A 04 D2 E8 22 C7 C3 B0 28 F6 E2  // ...A....."...(..
    7970: F6 C2 01 74 03 05 D8 1F 8B F1 C1 EE 02 80 FF 05  // ...t............
    7980: 7F 0C 03 F0 F6 D1 80 E1 03 D0 E1 B7 03 C3 D1 EE  // ................
    7990: 03 F0 F6 D1 80 E1 07 B7 01 C3 FC 8A D8 2E 8E 06  // ................
    79A0: 41 04 8B C1 E8 86 00 75 02 8A DE 03 F0 E8 24 00  // A......u......$.
    79B0: C3 FC 8A D8 2E 8E 06 41 04 8A C1 8A E6 E8 6D 00  // .......A......m.
    79C0: 75 02 8A DE F7 DD 81 C6 F0 00 81 C7 F0 00 2B F0  // u.............+.
    79D0: E8 01 00 C3 8A CE 2A CB E3 2C 51 8A CA 56 57 D1  // ......*..,Q..VW.
    79E0: E9 F3 A5 13 C9 F3 A4 8A CA 2B F1 2B F9 81 C6 00  // .........+.+....
    79F0: 20 81 C7 00 20 D1 E9 F3 A5 13 C9 F3 A4 5F 5E 03  //  ... ........_^.
    7A00: F5 03 FD 59 E2 D4 8A C7 8A E7 8A CA 57 D1 E9 F3  // ...Y........W...
    7A10: AB 13 C9 F3 AA 8A CA 2B F9 81 C7 00 20 D1 E9 F3  // .......+.... ...
    7A20: AB 13 C9 F3 AA 5F 03 FD FE CB 75 DE C3 E8 B0 00  // ....._....u.....
    7A30: 81 C2 01 01 2B D1 38 F3 76 02 32 DB 51 B1 02 D2  // ....+.8.v.2.Q...
    7A40: E6 D2 E3 59 32 ED BD 50 00 80 3E 49 04 06 74 04  // ...Y2..P..>I..t.
    7A50: D0 E2 D1 E0 06 1F 8B F8 8B F0 B0 50 F6 E3 0A DB  // ...........P....
    7A60: C3 52 53 8A DF 32 FF D1 E3 8B 87 50 04 E8 0E 00  // .RS..2.....P....
    7A70: 50 D1 EB A1 4C 04 F7 E3 5B 03 C3 5B 5A C3 52 8B  // P...L...[..[Z.R.
    7A80: D0 A0 4A 04 F6 E4 32 F6 03 C2 D1 E0 5A C3 8B E8  // ..J...2.....Z...
    7A90: 83 E5 0F 2E 8A A6 3E 7A 8B E8 C1 ED 04 83 E5 0F  // ......>z........
    7AA0: 2E 8A 86 3E 7A C3 00 03 0C 0F 30 33 3C 3F C0 C3  // ...>z.....03<?..
    7AB0: CC CF F0 F3 FC FF 26 8B 04 86 E0 BA 00 80 F6 C4  // ......&.........
    7AC0: C0 74 02 0A D6 D0 EE C1 E0 02 75 F2 88 56 00 45  // .t........u..V.E
    7AD0: C3 8B 16 63 04 8A C5 86 E0 EF 8A E1 FE C0 EF C3  // ...c............
    7AE0: 52 8B D0 8A C4 F6 26 4A 04 C1 E0 02 32 F6 03 C2  // R.....&J....2...
    7AF0: 5A C3 53 8A DF 32 FF D1 E3 8B 87 50 04 D1 EB E8  // Z.S..2.....P....
    7B00: 02 00 5B C3 52 8B D0 32 F6 52 8A C4 F6 26 85 04  // ..[.R..2.R...&..
    7B10: F7 26 4A 04 5A 03 C2 0A DB 74 08 03 06 4C 04 FE  // .&J.Z....t...L..
    7B20: CB 75 F8 5A C3 52 8B D0 A0 4A 04 F6 E4 32 F6 03  // .u.Z.R...J...2..
    7B30: C2 D1 E0 03 06 4E 04 D1 F8 8B C8 B4 0E E8 91 FF  // .....N..........
    7B40: 5A C3 8B C2 F7 26 4A 04 8B F9 C1 EF 03 03 F8 0A  // Z....&J.........
    7B50: FF 74 0A 8A C7 32 E4 F7 26 4C 04 03 F8 80 E1 07  // .t...2..&L......
    7B60: B4 80 D2 EC C3 E8 F0 FC EC C3 E8 F8 FF B2 C0 B0  // ................
    7B70: 20 EE C3 E8 EF FF B2 C0 32 C0 EE C3 C4 3E A8 04  //  .......2....>..
    7B80: 26 C4 7D 04 8C C5 0B EF C3 53 B0 0E E8 95 FC 8A  // &.}......S......
    7B90: E0 B0 0F E8 8E FC 8B D8 B8 0E AA EF B8 0F 55 EF  // ..............U.
    7BA0: B0 0E E8 7F FC 3C AA 74 0D B0 0F E8 76 FC 3C 55  // .....<.t....v.<U
    7BB0: 74 04 32 C0 5B C3 B0 0E 8A E7 EF FE C0 8A E3 EF  // t.2.[...........
    7BC0: B0 01 0A C0 5B C3 8A EE 8A 36 85 04 06 1F 0A DB  // ....[....6......
    7BD0: 74 25 8A C5 2A C3 F6 E6 8B C8 52 32 F6 C1 E2 02  // t%..*.....R2....
    7BE0: 8B C2 D1 E2 2B D5 51 8B C8 F3 A5 2B FA 2B F2 59  // ....+.Q....+.+.Y
    7BF0: E2 F4 5A E8 05 00 C3 8A DD EB F8 8A C6 F6 E3 8B  // ..Z.............
    7C00: C8 8A C7 8A E0 32 F6 C1 E2 02 8B DA D1 E2 8B F1  // .....2..........
    7C10: 2B D5 8B CB F3 AB 2B FA 4E 75 F7 C3 2E 8E 1E 3B  // +.....+.Nu.....;
    7C20: 04 89 0E 60 04 8A C5 24 60 A8 20 74 06 B9 00 1E  // ...`...$`. t....
    7C30: E9 94 00 F6 06 87 04 01 0F 85 8B 00 80 3E 49 04  // .............>I.
    7C40: 07 74 06 E8 19 FC 74 01 C3 F6 06 87 04 08 74 03  // .t....t.......t.
    7C50: CD 42 C3 8A 36 85 04 8A D6 FE CA 38 CD 7E 1F 0A  // .B..6......8.~..
    7C60: C9 74 64 8A E9 8A CE FE C9 EB 5C 38 D1 74 58 8A  // .td.......\8.tX.
    7C70: CE 80 FD 03 7C 04 8A E9 D0 ED FE C9 EB 49 80 F9  // ....|........I..
    7C80: 03 7E 44 8A E1 2A E5 0A E4 75 0A 38 CA 74 38 FE  // .~D..*...u.8.t8.
    7C90: CA 38 CA 74 32 8A C5 0A C1 38 F0 7E 0A 80 FC 02  // .8.t2....8.~....
    7CA0: 7E 12 80 FD 02 7F C8 80 FC 03 7D BF 8A D6 FE CA  // ~.........}.....
    7CB0: 38 D1 74 13 8A CE FE C9 FE C9 8A E9 2A EC 80 FE  // 8.t.........*...
    7CC0: 08 7F 04 FE C1 FE C5 B4 0A E8 05 FE C3 2E 8E 1E  // ................
    7CD0: 3B 04 A2 62 04 32 E4 8B F0 F7 26 4C 04 A3 4E 04  // ;..b.2....&L..N.
    7CE0: 8B C8 E8 7A FB 74 07 80 3E 49 04 07 77 02 D1 F9  // ...z.t..>I..w...
    7CF0: B4 0C E8 DC FD D1 E6 8B 84 50 04 E8 27 FE C3 2E  // .........P..'...
    7D00: 8E 1E 3B 04 8A 26 49 04 E8 35 9F 74 07 C7 06 50  // ..;..&I..5.t...P
    7D10: 04 00 00 C3 E8 48 FB 74 0B 80 FC 07 74 06 77 08  // .....H.t....t.w.
    7D20: E8 77 FC C3 E8 9F FB C3 80 FC 13 7C 03 74 1F C3  // .w.........|.t..
    7D30: E8 4E FA 8A D8 8B C1 E8 85 FA 8B 2E 4A 04 52 F6  // .N..........J.R.
    7D40: 26 85 04 F7 E5 8B F7 03 F0 5A E8 90 FA C3 E8 30  // &........Z.....0
    7D50: FA 8A D8 8B C1 E8 67 FA C1 E7 03 52 8B 2E 4A 04  // ......g....R..J.
    7D60: C1 E5 03 F7 26 85 04 F7 E5 8B F7 03 F0 5A E8 55  // ....&........Z.U
    7D70: FE C3 2E 8E 1E 3B 04 8A 26 49 04 E8 E1 FA 74 0C  // .....;..&I....t.
    7D80: 80 FC 07 74 07 77 40 80 FC 03 7F 04 E8 53 FB C3  // ...t.w@......S..
    7D90: E8 1E FC C3 E8 EA F9 8A D8 8A C1 8A E6 FE C4 E8  // ................
    7DA0: 1D FA 2B 3E 4A 04 C1 E7 03 52 F7 26 85 04 F7 26  // ..+>J....R.&...&
    7DB0: 4A 04 C1 E0 03 8B F7 2B F0 5A 8B 2E 4A 04 C1 E5  // J......+.Z..J...
    7DC0: 03 F7 DD E8 00 FE C3 80 FC 13 7C 03 74 C6 C3 E8  // ..........|.t...
    7DD0: AF F9 8A D8 8A C1 8A E6 FE C4 E8 E2 F9 52 8B 2E  // .............R..
    7DE0: 4A 04 F7 26 85 04 F7 E5 2B FD 8B F7 2B F0 5A F7  // J..&....+...+.Z.
    7DF0: DD E8 E9 F9 C3 2E 8E 1E 3B 04 2E 8E 06 41 04 E8  // ........;....A..
    7E00: 5D FA 74 11 80 3E 49 04 07 7C 18 2E 8E 06 3F 04  // ].t..>I..|....?.
    7E10: 74 03 E9 B1 00 E8 49 FC 8B D8 26 8B 07 8B EC 89  // t.....I...&.....
    7E20: 46 1A C3 A1 50 04 E8 B7 FC 8B F0 BB 08 00 2B E3  // F...P.........+.
    7E30: 8B EC 80 3E 49 04 06 75 1F B9 04 00 26 8A 04 88  // ...>I..u....&...
    7E40: 46 00 45 26 8A 84 00 20 88 46 00 45 83 C6 50 E2  // F.E&... .F.E..P.
    7E50: EB B8 00 02 B2 80 EB 17 D1 E6 B9 04 00 E8 56 FC  // ..............V.
    7E60: 81 C6 00 20 E8 4F FC 81 EE B0 1F E2 F0 EB E2 2B  // ... .O.........+
    7E70: EB C4 3E 0C 01 32 F6 80 FB 0E 75 09 26 83 7D FE  // ..>..2....u.&.}.
    7E80: 10 75 02 B6 80 16 1F 8B F5 8B CB F6 C6 80 74 01  // .u............t.
    7E90: 47 56 57 F3 A6 5F 5E 74 23 FE C0 03 FB F6 C6 80  // GVW.._^t#.......
    7EA0: 74 01 47 FE CA 75 E2 FE CC 74 0F 2E 8E 1E 3B 04  // t.G..u...t....;.
    7EB0: C4 3E 7C 00 B0 80 B2 80 EB CB 32 C0 8B E5 03 E3  // .>|.......2.....
    7EC0: 8B EC 89 46 1A C3 80 3E 49 04 13 7C 05 75 02 EB  // ...F...>I..|.u..
    7ED0: 5A C3 2E 8E 06 3D 04 E8 18 FC 8B F0 8B 1E 85 04  // Z....=..........
    7EE0: 2B E3 8B EC B8 05 08 B9 05 00 BA CE 03 80 3E 49  // +.............>I
    7EF0: 04 0F 72 1A F6 06 87 04 60 75 13 B4 0A F7 C6 01  // ..r.....`u......
    7F00: 00 75 02 B4 05 B0 07 EF B8 05 18 B9 05 01 EF 51  // .u.............Q
    7F10: 8B CB 26 8A 04 F6 D0 88 46 00 45 03 36 4A 04 E2  // ..&.....F.E.6J..
    7F20: F1 58 EF B8 00 01 32 D2 E9 44 FF 2E 8E 06 3D 04  // .X....2..D....=.
    7F30: A1 50 04 8B D0 32 F6 52 8A C4 32 E4 F7 26 4A 04  // .P...2.R..2..&J.
    7F40: F7 26 85 04 5A 03 C2 8B F0 8B 1E 85 04 2B E3 8B  // .&..Z........+..
    7F50: EC 53 8B 3E 4A 04 4F C1 E7 03 C1 E6 03 B9 08 00  // .S.>J.O.........
    7F60: 32 E4 26 8A 04 D0 E4 0A C0 74 03 80 CC 01 46 E2  // 2.&......t....F.
    7F70: F1 88 66 00 45 03 F7 4B 75 E3 5B B8 00 01 32 D2  // ..f.E..Ku.[...2.
    7F80: E9 EC FE 33 ED EB 03 BD 01 00 2E 8E 1E 3B 04 2E  // ...3.........;..
    7F90: 8E 06 41 04 8A 26 49 04 E8 C4 F8 74 0F 2E 8E 06  // ..A..&I....t....
    7FA0: 3F 04 80 FC 07 74 05 7C 3D E9 0B 02 8A E3 8B F0  // ?....t.|=.......
    7FB0: 8A DF 32 FF D1 E3 8B 87 50 04 8B D0 A0 4A 04 F6  // ..2.....P....J..
    7FC0: E4 32 F6 03 C2 8B F8 D1 E7 0A DB 74 0B D0 EB A1  // .2.........t....
    7FD0: 4C 04 03 F8 FE CB 75 FA 8B C6 0B ED 75 03 F3 AB  // L.....u.....u...
    7FE0: C3 AA 47 E2 FC C3 50 2E 8E 06 41 04 A1 50 04 E8  // ..G...P...A..P..
    7FF0: EE FA 8B F8 A0 50 04 8A 26 4A 04 8B E8 58 A8 80  // .....P..&J...X..
    8000: 74 08 24 7F C5 36 7C 00 EB 04 C5 36 0C 01 8A FC  // t.$..6|....6....
    8010: 32 E4 C1 E0 03 03 F0 80 FF 06 74 69 D1 E7 8A F3  // 2.........ti....
    8020: B0 55 80 E3 03 F6 E3 8A D8 8A F8 8B C5 50 B2 04  // .U...........P..
    8030: F6 C6 80 75 27 AC E8 55 FA 23 C3 AB AC E8 4E FA  // ...u'..U.#....N.
    8040: 23 C3 26 89 85 FE 1F 83 C7 4E FE CA 75 E7 83 EE  // #.&......N..u...
    8050: 08 81 EF 3E 01 58 E8 72 00 E2 D2 C3 AC E8 2E FA  // ...>.X.r........
    8060: 23 C3 26 31 05 AC E8 25 FA 23 C3 26 31 85 00 20  // #.&1...%.#.&1.. 
    8070: 83 C7 50 FE CA 75 E5 83 EE 08 81 EF 3E 01 58 E8  // ..P..u......>.X.
    8080: 49 00 E2 A9 C3 8B C5 50 B2 04 F6 C3 80 74 1F AC  // I......P.....t..
    8090: 26 30 05 AC 26 30 85 00 20 83 C7 50 FE CA 7F EF  // &0..&0.. ..P....
    80A0: 83 EE 08 81 EF 3F 01 58 E8 20 00 E2 DA C3 AC AA  // .....?.X. ......
    80B0: AC 26 88 85 FF 1F 83 C7 4F FE CA 7F F1 83 EE 08  // .&......O.......
    80C0: 81 EF 3F 01 58 E8 03 00 E2 BD C3 FE C0 38 E0 72  // ..?.X........8.r
    80D0: 06 32 C0 81 C7 F0 00 C3 8A 16 85 04 F6 E2 8B F0  // .2..............
    80E0: 32 F6 8B EA 66 0F B6 06 51 04 F6 E2 66 0F B7 16  // 2...f...Q...f...
    80F0: 4A 04 83 FA 64 75 03 BA 68 00 83 FA 5A 75 03 BA  // J...du..h...Zu..
    8100: 60 00 81 FA AF 00 75 03 BA B0 00 52 F7 E2 66 0F  // `.....u....R..f.
    8110: B7 F8 66 0F B6 06 50 04 66 03 F8 66 C1 CF 10 03  // ..f...P.f..f....
    8120: FA 66 C1 C7 03 81 CF 00 FF 66 C1 C7 10 5A 8A E2  // .f.......f...Z..
    8130: 4A C1 E2 03 A0 50 04 50 C5 06 0C 01 03 F0 2E 8E  // J....P.P........
    8140: 06 3D 04 58 57 51 50 9C FC 8B CD E8 3B 00 B5 08  // .=.XWQP.....;...
    8150: AC 8A E0 8A C7 D0 E4 73 02 8A C3 26 88 05 66 47  // .......s...&..fG
    8160: FE CD 75 EF 66 03 FA E2 E2 9D 58 59 5F 83 C7 08  // ..u.f.....XY_...
    8170: FE C0 38 E0 72 0E 51 32 C0 8B CD 49 03 FA 83 C7  // ..8.r.Q2...I....
    8180: 08 E2 F9 59 2B F5 E2 BC C3 06 52 33 C0 8E C0 66  // ...Y+.....R3...f
    8190: C1 C7 10 8B C7 66 C1 C7 10 E8 A4 9A 74 16 38 E0  // .....f......t.8.
    81A0: 74 12 0F B6 D0 E8 8B C9 8A E0 66 C1 C7 10 8B F8  // t.........f.....
    81B0: 66 C1 C7 10 5A 07 C3 80 FC 13 7C 0B 0F 84 18 FF  // f...Z.....|.....
    81C0: 80 FC 62 0F 84 11 FF E8 01 00 C3 80 FC 11 75 06  // ..b...........u.
    81D0: 80 E3 80 80 CB 0F 50 53 8A DF 32 FF D1 E3 8B 97  // ......PS..2.....
    81E0: 50 04 5B 2E 8E 06 3D 04 E8 07 F9 8B F8 8B 2E 85  // P.[...=.........
    81F0: 04 58 32 F6 52 8B 36 4A 04 56 8A 26 85 04 C5 36  // .X2.R.6J.V.&...6
    8200: 0C 01 80 FC 0E 75 09 83 7C FE 10 75 03 B4 10 46  // .....u..|..u...F
    8210: F6 E4 03 F0 B6 03 F6 C3 80 75 6D B2 C4 B8 02 0F  // .........um.....
    8220: EF 5A 58 50 52 4A 8A E0 57 51 51 57 8B CD 32 C0  // .ZXPRJ..WQQW..2.
    8230: AA 03 FA E2 FB 5F 47 FE C4 38 D4 76 0A 32 E4 8B  // ....._G..8.v.2..
    8240: CD 49 03 FA 47 E2 FB 59 E2 E0 59 5F BA C4 03 B0  // .I..G..Y..Y_....
    8250: 02 8A E3 EF 5B 4B 5A 51 57 8B CD AC 26 8A 25 AA  // ....[KZQW...&.%.
    8260: 03 FB E2 F7 5F 47 2B F5 42 3B D3 76 0A 33 D2 8B  // ...._G+.B;.v.3..
    8270: CD 49 03 FB 47 E2 FB 59 E2 DD BA CE 03 B8 03 00  // .I..G..Y........
    8280: EF B2 C4 B8 02 0F EF C3 B2 CE B8 03 18 EF EB BC  // ................
    8290: 2E 8E 1E 3B 04 80 3E 63 04 B4 74 0B BA CC 03 EC  // ...;..>c..t.....
    82A0: A8 01 75 04 CD 42 C3 C3 E8 D1 F8 0A FF 75 1C 8A  // ..u..B.......u..
    82B0: E3 80 E4 1F 80 26 66 04 E0 08 26 66 04 E8 2D 00  // .....&f...&f..-.
    82C0: 8A 1E 66 04 80 E3 20 B1 05 D2 EB E8 91 F5 74 19  // ..f... .......t.
    82D0: A0 66 04 24 DF 80 E3 01 74 02 0C 20 A2 66 04 24  // .f.$....t.. .f.$
    82E0: 10 0C 02 0A D8 E8 53 00 C3 E8 7E F8 C3 53 50 80  // ......S...~..SP.
    82F0: E3 0F 8A FB D0 E3 81 E3 10 07 0A DF E8 60 F5 74  // .............`.t
    8300: 0E B4 00 8A C3 E8 2C F3 0B ED 74 03 26 88 1D 8A  // ......,...t.&...
    8310: C3 E8 0B 00 0B ED 74 04 26 88 5D 10 58 5B C3 8A  // ......t.&.].X[..
    8320: E0 1E 2E 8E 1E 3B 04 80 3E 49 04 33 1F 7F 08 8A  // .....;..>I.3....
    8330: C4 B4 11 E8 FE F2 C3 E8 30 F8 C3 9C FA E8 9F 05  // ........0.......
    8340: B2 C0 B9 03 00 B4 01 8A C4 EE 8A C3 EE 0B ED 74  // ...............t
    8350: 04 47 26 88 1D FE C4 80 C3 02 E2 EB B0 20 EE 9D  // .G&.......... ..
    8360: C3 2E 8E 1E 3B 04 8A 26 49 04 E8 F2 F4 74 0A 80  // ....;..&I....t..
    8370: FC 07 77 06 74 03 E8 C0 F5 C3 80 FC 13 7C 03 74  // ..w.t........|.t
    8380: 4C C3 8A D8 E8 BB F7 BA CE 03 B0 08 EF 2E 8E 1E  // L...............
    8390: 3D 04 F6 C3 80 75 1C B2 C4 B8 02 FF EF 8A 25 C6  // =....u........%.
    83A0: 05 00 8A E3 EF 8A 25 B4 FF 88 25 EF B2 CE B8 08  // ......%...%.....
    83B0: FF EF C3 B8 03 18 EF B2 C4 B0 02 8A E3 EF 8A 25  // ...............%
    83C0: B4 FF 88 25 EF B2 CE B8 03 00 EF EB E1 50 2E 8E  // ...%.........P..
    83D0: 06 3D 04 A1 4A 04 C1 E0 03 F7 E2 03 C1 8B F8 58  // .=..J..........X
    83E0: 26 88 05 C3 2E 8E 1E 3B 04 8A 26 49 04 E8 6F F4  // &......;..&I..o.
    83F0: 74 0F 80 FC 07 77 0B 74 08 E8 5F F5 8B EC 89 46  // t....w.t.._....F
    8400: 1A C3 80 FC 13 7C 03 74 29 C3 E8 35 F7 8A CC 2E  // .....|.t)..5....
    8410: 8E 1E 3D 04 BA CE 03 32 FF B8 04 03 EF D0 E7 8A  // ..=....2........
    8420: 1D 22 D9 74 03 80 CF 01 FE CC 7D F0 8B EC 88 7E  // .".t......}....~
    8430: 1A C3 A1 4A 04 C1 E0 03 F7 E2 03 C1 8B F8 2E 8E  // ...J............
    8440: 1E 3D 04 8A 05 8B EC 88 46 1A C3 2E 8E 1E 3B 04  // .=......F.....;.
    8450: 8A 3E 62 04 8A CF D0 E1 32 ED BE 50 04 03 F1 8B  // .>b.....2..P....
    8460: 14 8A 0E 49 04 3C 0D 76 4A 2E 8E 06 41 04 E8 EE  // ...I.<.vJ...A...
    8470: F3 75 33 8A 1E 4A 04 8A F8 8A C6 F6 E3 8A CA 03  // .u3..J..........
    8480: C8 D1 E1 03 0E 4E 04 8B F9 8A C7 AA D1 E9 41 FE  // .....N........A.
    8490: C2 38 DA 73 59 89 14 8B 16 63 04 B0 0E 8A E5 EF  // .8.sY....c......
    84A0: 8A E1 FE C0 EF C3 2E 8E 06 3F 04 80 F9 07 74 C3  // .........?....t.
    84B0: E9 83 00 75 04 32 D2 EB 0F 3C 0A 75 1D 3A 36 84  // ...u.2...<.u.:6.
    84C0: 04 75 03 E9 93 00 FE C6 89 14 E8 92 F3 75 05 80  // .u...........u..
    84D0: F9 07 7F 05 8B C2 E8 4C F6 C3 3C 07 75 04 E8 C5  // .......L..<.u...
    84E0: 81 C3 3C 08 75 83 0A D2 74 DE FE CA EB DA 32 FF  // ..<.u...t.....2.
    84F0: 32 D2 2B CB 3A 36 84 04 74 06 FE C6 03 CB EB 95  // 2.+.:6..t.......
    8500: 89 14 8B 16 63 04 B0 0E 8A E5 EF 8A E1 FE C0 EF  // ....c...........
    8510: 2B FB 2B FB 26 8A 65 02 50 8B 3E 4E 04 8B F3 D1  // +.+.&.e.P.>N....
    8520: E6 03 F7 A0 84 04 F6 E3 8B C8 06 1F F3 A5 8B CB  // ................
    8530: 58 B0 20 F3 AB C3 B9 01 00 B4 0A E8 BC C6 FE C2  // X. .............
    8540: 3A 16 4A 04 74 03 89 14 C3 32 FF 32 D2 89 14 3A  // :.J.t....2.2...:
    8550: 36 84 04 74 2E FE C6 EB ED 89 14 2E 8E 06 41 04  // 6..t..........A.
    8560: E8 FC F2 74 0E 2E 8E 06 3F 04 80 F9 07 74 04 32  // ...t....?....t.2
    8570: FF EB 10 8B C2 E8 AD F5 8B F9 D1 E7 4F 8B 1E 4A  // ............O..J
    8580: 04 EB 91 33 C9 8A 36 84 04 8A 16 4A 04 FE CA B0  // ...3..6....J....
    8590: 01 E9 70 F7 2E 8E 1E 3B 04 F6 06 87 04 08 74 03  // ..p....;......t.
    85A0: CD 42 C3 E8 76 F6 8B EC C6 46 1B 00 C3 2E 8E 1E  // .B..v....F......
    85B0: 3B 04 8A DF 32 FF D1 E3 89 97 50 04 D0 EB 38 1E  // ;...2.....P...8.
    85C0: 62 04 75 05 8B C2 E8 5C F5 C3 2E 8E 1E 3B 04 8A  // b.u....\.....;..
    85D0: DF 32 FF D1 E3 8B 97 50 04 8B 0E 60 04 8B EC 89  // .2.....P...`....
    85E0: 4E 16 89 56 12 C3 2E 8E 1E 3B 04 A0 87 04 24 80  // N..V.....;....$.
    85F0: 0A 06 49 04 8A 26 4A 04 F6 06 87 04 08 75 2D E8  // ..I..&J......u-.
    8600: 5D F2 74 07 80 3E 49 04 07 7F 21 51 8A CC 8A 2E  // ].t..>I...!Q....
    8610: 84 04 BE D7 85 81 FE E0 85 74 10 2E 3B 0C 74 05  // .........t..;.t.
    8620: 83 C6 03 EB F0 24 80 2E 0A 44 02 59 8A 3E 62 04  // .....$...D.Y.>b.
    8630: 8B EC 89 46 1A 89 5E 0E 89 4E 16 89 56 12 C3 84  // ...F..^..N..V...
    8640: 18 23 84 2B 33 84 2A 32 2E 8E 1E 3B 04 3C 04 7F  // .#.+3.*2...;.<..
    8650: 1B 50 52 BA CC 03 EC A8 01 5A 58 74 08 80 3E 63  // .PR......ZXt..>c
    8660: 04 D4 74 08 C3 80 3E 63 04 B4 75 F8 3C 1C 73 F4  // ..t...>c..u.<.s.
    8670: 32 E4 8B E8 D1 E5 2E FF A6 13 86 4B 86 6B 86 7D  // 2..........K.k.}
    8680: 86 B2 86 FC 85 FC 85 FC 85 D7 86 EF 86 F3 86 FC  // ................
    8690: 85 FC 85 FC 85 FC 85 FC 85 FC 85 21 87 FC 85 25  // ...........!...%
    86A0: 87 40 87 FC 85 7F 87 FC 85 8D 87 A8 87 AF 87 BB  // .@..............
    86B0: 87 DF 87 80 3E 49 04 13 74 15 E8 BF F4 8B C3 86  // ....>I..t.......
    86C0: E0 E8 70 EF 0B ED 74 07 8A C7 32 FF 26 88 01 E8  // ..p...t...2.&...
    86D0: 93 F4 C3 E8 A6 F4 8A C7 E8 44 FC 0B ED 74 F0 26  // .........D...t.&
    86E0: 88 7D 11 EB EA 80 3E 49 04 13 74 E3 06 E8 8C F4  // .}....>I..t.....
    86F0: 1F 0B ED 74 07 8B F2 B9 11 00 F3 A4 8B F2 E8 DE  // ...t............
    8700: 01 32 E4 B9 10 00 B2 C0 9C FA 8A C4 EE AC EE 9D  // .2..............
    8710: FE C4 E2 F4 AC E8 07 FC EB B5 80 FB 01 77 B0 E8  // .............w..
    8720: 43 F4 B2 C0 B0 30 E8 FB F0 24 F7 80 26 65 04 DF  // C....0...$..&e..
    8730: 80 FB 00 74 07 0C 08 80 0E 65 04 20 EE EB 90 E8  // ...t.....e. ....
    8740: 9D 01 8A C3 B2 C0 E8 DB F0 8B C8 EE B0 20 EE 8B  // ............. ..
    8750: EC 88 4E 0F E9 78 FF B3 11 EB E4 8B FA E8 05 F4  // ..N..x..........
    8760: B9 10 00 32 E4 B2 C0 8A C4 9C FA EE 42 EC 26 88  // ...2........B.&.
    8770: 05 FE C4 4A EE 9D 47 E2 EE 9C FA B0 11 EE 42 EC  // ...J..G.......B.
    8780: 9D 26 88 05 E8 E3 F3 EB 5A E8 CE 00 C3 8B FA 51  // .&......Z......Q
    8790: 8B C3 26 8A 35 26 8A 6D 01 26 8A 4D 02 E8 CA 00  // ..&.5&.m.&.M....
    87A0: 83 C7 03 43 59 E2 E8 C3 0A DB 75 1A E8 B6 F3 B2  // ...CY.....u.....
    87B0: C0 B0 30 E8 6E F0 24 7F F6 C7 01 74 02 0C 80 B4  // ..0.n.$....t....
    87C0: 30 E8 70 EE EB 1D FE CB 75 1C E8 98 F3 B2 C0 B0  // 0.p.....u.......
    87D0: 30 E8 50 F0 EE A8 80 75 03 C0 E7 02 B4 34 8A C7  // 0.P....u.....4..
    87E0: E8 51 EE E8 7F F3 C3 8A C3 E8 D1 00 8B EC 89 4E  // .Q.............N
    87F0: 16 88 76 13 C3 8B FA 51 8B C3 E8 C3 00 26 88 35  // ..v....Q.....&.5
    8800: 26 88 6D 01 26 88 4D 02 83 C7 03 43 59 E2 E8 C3  // &.m.&.M....CY...
    8810: BA C6 03 8A C3 EE C3 BA C6 03 EC 32 E4 8B EC 89  // ...........2....
    8820: 46 0E C3 E8 3F F3 B2 C0 B0 34 E8 F7 EF 8A F8 EE  // F...?....4......
    8830: B0 30 E8 EF EF B3 01 A8 80 75 05 B3 00 C0 EF 02  // .0.......u......
    8840: 8B EC 89 5E 0E EB 9C 51 8B C3 E8 73 00 E8 2A 00  // ...^...Q...s..*.
    8850: 8A C3 E8 52 00 43 59 E2 EE C3 F6 06 89 04 02 74  // ...R.CY........t
    8860: 03 E8 16 00 8A C3 E8 39 00 C3 F6 06 89 04 02 74  // .......9.......t
    8870: 03 E8 06 00 8A C3 E8 2E 00 C3 50 B0 1E F6 E6 50  // ..........P....P
    8880: B0 3B F6 E5 50 B0 0B F6 E1 59 03 C1 59 03 C1 B1  // .;..P....Y..Y...
    8890: 64 F6 F1 80 FC 32 7C 02 FE C0 8A F0 8A E8 8A C8  // d....2|.........
    88A0: 58 C3 52 E8 39 00 5A 53 8B DA BA C8 03 9C FA EE  // X.R.9.ZS........
    88B0: 42 8A C7 EE 8A C5 EE 8A C1 EE 9D 5B C3 E8 1F 00  // B..........[....
    88C0: 53 9C FA BA C7 03 EE 42 42 EC 8A F8 EB 00 EB 00  // S......BB.......
    88D0: EC 8A E8 EB 00 EB 00 EC 8A C8 8A F7 9D 5B C3 50  // .............[.P
    88E0: 51 E8 81 F2 B9 FF 7F EC A8 08 75 02 E2 F9 59 58  // Q.........u...YX
    88F0: C3 2E 8E 1E 3B 04 8B F8 24 0F 81 E7 F0 00 C1 EF  // ....;...$.......
    8900: 03 83 FF 06 7F 18 2E FF A5 A3 88 AB 88 C0 88 5E  // ...............^
    8910: 89 BA 89 3C 03 74 08 3C 04 7F 03 E8 CF 01 C3 BA  // ...<.t.<........
    8920: C4 03 B0 03 8A E3 EF C3 3C 04 77 F2 50 53 50 52  // ........<.w.PSPR
    8930: 8B 16 63 04 B0 07 E8 EB EE 8A E0 D0 EC 80 E4 01  // ..c.............
    8940: A8 40 74 03 80 CC 02 B0 12 E8 D8 EE 40 A3 85 04  // .@t.........@...
    8950: B0 09 E8 CF EE A8 80 74 04 D1 2E 85 04 A1 85 04  // .......t........
    8960: 8B D0 3D F4 01 73 1B BA E0 01 3D C2 01 73 13 BA  // ..=..s....=..s..
    8970: 90 01 3D 7C 01 73 0B BA 5E 01 3D 4A 01 73 03 BA  // ..=|.s..^.=J.s..
    8980: C8 00 89 16 85 04 5A 58 C6 06 84 04 FF E8 5D 01  // ......ZX......].
    8990: 5B 58 8A DF 32 FF 0A C0 74 0E B3 0E 3C 01 74 08  // [X..2...t...<.t.
    89A0: B3 08 3C 02 74 02 B3 10 8A CB 8A E9 81 E9 01 02  // ..<.t...........
    89B0: 80 F9 08 7E 04 81 E9 01 01 87 1E 85 04 53 E8 5B  // ...~.........S.[
    89C0: F2 5B E8 85 02 C3 0A C0 74 11 FE C8 74 1A FE C8  // .[......t...t...
    89D0: 74 38 FE C8 74 3C FE C8 74 40 C3 89 2E 7C 00 8C  // t8..t<..t@...|..
    89E0: 06 7E 00 C3 8C C8 8E C0 FE CA 0A DB 74 07 32 FF  // .~..........t.2.
    89F0: 2E 8A 97 9E 89 89 0E 85 04 88 16 84 04 89 2E 0C  // ................
    8A00: 01 8C 06 0E 01 C3 00 0D 18 2A E8 09 03 B9 0E 00  // .........*......
    8A10: EB D6 BD AE 58 B9 08 00 EB CA BD C1 60 B9 10 00  // ....X.......`...
    8A20: EB C2 0A C0 75 BD 8B 0E 85 04 8A 16 84 04 80 FF  // ....u...........
    8A30: 07 77 35 80 FF 01 77 10 0A FF 75 06 C4 2E 7C 00  // .w5...w...u...|.
    8A40: EB 26 C4 2E 0C 01 EB 20 80 FF 02 75 0B 8C CD 8E  // .&..... ...u....
    8A50: C5 2E 8B 2E A0 71 EB 10 0E 07 8A DF 32 FF 80 EB  // .....q......2...
    8A60: 02 D1 E3 2E 8B AF 11 8A 8B C5 8B EC 89 4E 16 89  // .............N..
    8A70: 56 12 89 46 0A 8C 46 1E C3 C1 60 AE 58 AE 5C AE  // V..F..F...`.X.\.
    8A80: 60 C1 60 C1 70 53 06 8A 26 49 04 E8 C7 C3 26 8A  // `.`.pS..&I....&.
    8A90: 47 02 26 8A 67 33 F6 C4 01 74 22 BD C1 60 3C 10  // G.&.g3...t"..`<.
    8AA0: 7D 0E E8 71 02 8C 06 0E 01 3C 0E 7D 07 BD AE 58  // }..q.....<.}...X
    8AB0: 8C 0E 0E 01 89 2E 0C 01 E8 10 01 EB 2D B4 84 3C  // ............-..<
    8AC0: 10 7D 13 B4 81 3C 0E 74 0D 7F 15 B4 02 3C 08 74  // .}...<.t.....<.t
    8AD0: 05 80 CC 80 EB 0A 26 F6 47 05 01 74 03 80 E4 7F  // ......&.G..t....
    8AE0: 86 C4 32 DB E8 06 00 E8 C9 01 07 5B C3 8B F8 8B  // ..2........[....
    8AF0: F2 BA CE 03 EC B8 05 00 EF B8 06 04 EF B2 C4 EC  // ................
    8B00: B8 02 04 EF B8 04 07 EF 8B D6 8B C7 50 24 7F 0A  // ............P$..
    8B10: C0 74 22 0E 07 33 D2 B9 00 01 3C 04 75 07 B7 10  // .t"..3....<.u...
    8B20: BD C1 60 EB 10 FE C8 75 07 B7 0E E8 E8 01 EB 05  // ..`....u........
    8B30: B7 08 BD AE 58 E8 2D 00 58 A8 80 74 00 BA C4 03  // ....X.-.X..t....
    8B40: B8 02 03 EF B8 04 02 EF B2 CC EC A8 01 B8 06 0E  // ................
    8B50: 75 02 B4 0A B2 CE 50 EC 58 EF B0 04 EE 32 C0 EE  // u.....P.X....2..
    8B60: B8 05 10 EF C3 FC 0B C9 75 01 C3 80 FF 0E 75 0A  // ........u.....u.
    8B70: 26 83 7E FE 10 75 03 80 CD 80 1E 06 1F 2E 8E 06  // &.~..u..........
    8B80: 3D 04 8B FA C1 E7 05 B0 40 53 80 E3 03 F6 E3 5B  // =.......@S.....[
    8B90: F6 C3 04 74 02 04 20 86 E0 8B D0 03 FA 8B F5 E3  // ...t.. .........
    8BA0: 28 32 C0 86 FB 32 FF 51 F6 C5 80 74 01 46 8B CB  // (2...2.Q...t.F..
    8BB0: F3 A4 83 FB 20 74 07 B9 20 00 2B CB F3 AA 59 F6  // .... t.. .+...Y.
    8BC0: C5 80 74 01 46 FE C9 75 DE 1F C3 8A 26 49 04 50  // ..t.F..u....&I.P
    8BD0: 06 57 C4 3E A8 04 26 C4 7D 0C 8C C5 0B EF 74 30  // .W.>..&.}.....t0
    8BE0: 8B EF 83 C7 07 26 8A 05 3C FF 74 24 38 E0 74 03  // .....&..<.t$8.t.
    8BF0: 47 EB F2 8B FD 26 8A 05 FE C8 A2 84 04 26 8B 45  // G....&.......&.E
    8C00: 01 A3 85 04 26 C4 7D 03 89 3E 0C 01 8C 06 0E 01  // ....&.}..>......
    8C10: 5F 07 58 C3 26 F6 47 33 01 74 01 C3 C4 1E A8 04  // _.X.&.G3.t......
    8C20: 26 C4 5F 08 8C C0 0B C3 74 1F BF 0B 00 26 8A 01  // &._.....t....&..
    8C30: 3C FF 74 15 47 38 06 49 04 75 F2 26 8A 07 32 E4  // <.t.G8.I.u.&..2.
    8C40: 87 06 85 04 8B D8 E8 01 00 C3 8B 16 63 04 8A 26  // ............c..&
    8C50: 85 04 FE CC 80 E4 1F 9C FA 80 FA D4 74 0B B0 14  // ............t...
    8C60: EE 42 EC 24 E0 0A C4 EE 4A B0 09 EE 42 EC 24 E0  // .B.$....J...B.$.
    8C70: 0A C4 EE 9D 8A C8 8B C3 8A 16 85 04 F6 F2 80 3E  // ...............>
    8C80: 84 04 FF 75 07 A2 84 04 FE 0E 84 04 F6 E2 F6 C1  // ...u............
    8C90: 80 74 02 D1 E0 48 8A E0 B0 12 8B 16 63 04 EF A0  // .t...H......c...
    8CA0: 4A 04 8A 26 84 04 FE C4 F6 E4 D1 E0 05 00 01 A3  // J..&............
    8CB0: 4C 04 C3 8A 26 49 04 50 06 57 C4 3E A8 04 26 C4  // L...&I.P.W.>..&.
    8CC0: 7D 08 8C C5 0B EF 74 4A 8B EF 83 C7 0B 26 8A 05  // }.....tJ.....&..
    8CD0: 3C FF 74 3E 38 E0 74 03 47 EB F2 8B FD 26 8A 3D  // <.t>8.t.G....&.=
    8CE0: 26 8A 5D 01 26 8B 4D 02 26 8B 55 04 26 8A 45 0A  // &.].&.M.&.U.&.E.
    8CF0: 3C FF 74 02 FE C8 50 A0 84 04 FE C0 F6 26 85 04  // <.t...P......&..
    8D00: A3 85 04 58 A2 84 04 26 C4 7D 06 8B EF 32 C0 E8  // ...X...&.}...2..
    8D10: DB FD 5F 07 58 C3 50 53 51 52 2E A1 45 04 0B C0  // .._.X.PSQR..E...
    8D20: 74 09 2E 8B 2E A0 71 0E 07 EB 08 B8 30 11 B7 02  // t.....q.....0...
    8D30: E8 C7 BE 5A 59 5B 58 C3 3C 04 7C 01 C3 E3 FD 53  // ...ZY[X.<.|....S
    8D40: 2E 8E 1E 3B 04 86 FB 32 FF D1 E3 8B FB 81 C7 50  // ...;...2.......P
    8D50: 04 8B 35 5B 89 15 56 8B F0 51 53 26 8A 46 00 45  // ..5[..V..QS&.F.E
    8D60: 3C 0D 7F 1F 75 04 32 D2 EB 40 3C 0A 74 32 3C 07  // <...u.2..@<.t2<.
    8D70: 75 05 E8 31 79 EB 62 3C 08 75 08 0A D2 74 5A FE  // u..1y.b<.u...tZ.
    8D80: CA EB 27 F7 C6 02 00 74 05 26 8A 5E 00 45 B9 01  // ..'....t.&.^.E..
    8D90: 00 B4 09 E8 64 BE FE C2 3A 16 4A 04 72 0C 32 D2  // ....d...:.J.r.2.
    8DA0: 89 15 3A 36 84 04 73 06 FE C6 89 15 EB 2B 50 E8  // ..:6..s......+P.
    8DB0: AD EA 75 08 B8 00 08 E8 40 BE EB 09 80 3E 49 04  // ..u.....@....>I.
    8DC0: 07 74 F1 32 E4 86 3E 62 04 53 8A FC 55 E8 25 00  // .t.2..>b.S..U.%.
    8DD0: 5D 5B 86 3E 62 04 58 8B 15 5B 59 E2 15 5A F7 C6  // ][.>b.X..[Y..Z..
    8DE0: 01 00 75 02 89 15 8B 05 3A 3E 62 04 75 03 E8 34  // ..u.....:>b.u..4
    8DF0: ED C3 E9 64 FF 33 C9 8A 36 84 04 8A 16 4A 04 FE  // ...d.3..6....J..
    8E00: CA B8 01 06 E8 F3 BD C3 2E 8E 1E 3B 04 0A C0 75  // ...........;...u
    8E10: 0D E8 18 00 8B EC 89 5E 0E C6 46 1A 1A C3 3C 01  // .......^..F...<.
    8E20: 75 09 E8 41 00 8B EC C6 46 1A 1A C3 A0 8A 04 BF  // u..A....F.......
    8E30: 9E 8E 2E 3A 05 72 04 BB FF FF C3 32 E4 D1 E0 03  // ...:.r.....2....
    8E40: F8 2E 8B 5D 04 0A DB 74 05 0A FF 75 04 C3 86 FB  // ...]...t...u....
    8E50: C3 A0 10 04 24 30 3C 30 74 06 F6 C3 01 75 EF C3  // ....$0<0t....u..
    8E60: F6 C3 01 74 E9 C3 BF 9E 8E 2E 8A 0D 32 C0 83 C7  // ...t........2...
    8E70: 04 2E 3B 1D 74 12 86 FB 2E 3B 1D 74 0B 83 C7 02  // ..;.t....;.t....
    8E80: FE C0 38 C8 7E EB B0 FF A2 8A 04 C3 BB 08 00 F6  // ..8.~...........
    8E90: 06 89 04 02 74 0E BB 07 00 BA CC 03 EC A8 01 74  // ....t..........t
    8EA0: 18 BB 08 00 BA B4 03 E8 DF EC 74 21 B7 01 E8 8C  // ..........t!....
    8EB0: E9 80 FA D4 74 17 86 FB C3 BA D4 03 E8 CA EC 74  // ....t..........t
    8EC0: 0C B7 02 E8 77 E9 80 FA B4 74 02 86 FB C3 0F 08  // ....w....t......
    8ED0: 0F 08 0F 08 0F 08 03 01 03 01 01 01 00 08 01 01  // ................
    8EE0: 01 01 01 01 01 01 0F 01 0F 08 0F 04 00 02 0F 02  // ................
    8EF0: 01 01 0F 01 FF 01 FF E0 0F 00 00 00 00 07 02 08  // ................
    8F00: FF 0E 00 00 3F 00 10 01 08 00 00 00 00 01 00 02  // ....?...........
    8F10: 02 01 00 04 04 01 00 05 02 05 00 06 01 06 05 06  // ................
    8F20: 00 08 01 08 00 07 02 07 06 07 CA 00 34 00 90 00  // ............4...
    8F30: 96 00 00 00 00 00 00 00 5F 57 C3 90 50 66 52 E8  // ........_W..PfR.
    8F40: F4 FF FF FF 81 EF 10 00 00 00 2E 8B 07 66 BA F8  // .............f..
    8F50: 0C EF 66 BA FC 0C ED 32 C0 66 8B F8 66 5A 58 C3  // ..f....2.f..fZX.
    8F60: 66 B8 4F 03 66 52 66 56 53 57 50 0A FF 75 44 E8  // f.O.fRfVSWP..uD.
    8F70: C8 FF FF FF 66 33 F6 66 BB 53 00 E8 48 00 00 00  // ....f3.f.S..H...
    8F80: C1 E8 10 F6 C4 40 75 2B 66 81 E2 FF 02 66 D1 E2  // .....@u+f....f..
    8F90: 66 8B C2 66 40 C1 E0 10 66 8B C2 66 BB 13 00 E8  // f..f@...f..f....
    8FA0: 30 00 00 00 66 BB 12 00 E8 27 00 00 00 66 58 32  // 0...f....'...fX2
    8FB0: E4 66 50 58 5F 5B 66 5E 66 5A C3 90 66 B8 4F 03  // .fPX_[f^fZ..f.O.
    8FC0: C3 90 66 B8 4F 03 C3 90 66 52 E8 11 00 00 00 ED  // ..f.O...fR......
    8FD0: 66 5A C3 90 66 52 E8 05 00 00 00 EF 66 5A C3 90  // fZ..fR......fZ..
    8FE0: 66 8B D7 50 33 C0 66 8B C3 66 03 C6 C1 E0 02 EF  // f..P3.f..f......
    8FF0: 66 83 C2 04 58 C3 A6 37 99 37 99 37 99 37 84 37  // f...X..7.7.7.7.7
    9000: 84 37 84 37 84 37 C6 33 3D 34 67 34 A8 35 A7 35  // .7.7.7.3=4g4.5.5
    9010: A7 35 ED 35 52 36 82 36 3F 37 68 37 68 37 DF 35  // .5.5R6.6?7h7h7.5
    9020: D2 35 D2 35 D2 35 D2 35 D2 35 ED 35 52 36 82 36  // .5.5.5.5.5.5R6.6
    9030: 3F 37 6D 37 B3 37 68 37 68 37 FF FF FF FF FF FF  // ?7m7.7h7h7......
    9040: 00 00 FF FF 00 00 FF FF 00 00 FF 00 00 00 FF 00  // ................
    9050: 00 00 FF 00 00 00 FF 00 00 00 00 00 08 10 00 08  // ................
    9060: 10 18 00 08 10 18 CA 31 01 CA 31 02 D8 45 03 B8  // .......1..1..E..
    9070: 45 03 EF 32 03 A3 32 03 CB 31 04 E4 31 04 F4 31  // E..2..2..1..1..1
    9080: 04 CA 31 03 00 00 00 00 77 39 00 02 77 39 01 02  // ..1.....w9..w9..
    9090: 77 39 02 02 77 39 03 02 77 39 04 02 77 39 05 02  // w9..w9..w9..w9..
    90A0: 71 3B 00 02 71 3B 01 02 71 3B 02 02 71 3B 03 02  // q;..q;..q;..q;..
    90B0: 71 3B 04 02 71 3B 05 02 A6 3B 00 02 A6 3B 01 02  // q;..q;...;...;..
    90C0: A6 3B 02 02 A6 3B 03 02 A6 3B 04 02 A6 3B 05 02  // .;...;...;...;..
    90D0: E1 3D 00 02 E1 3D 01 02 E1 3D 02 02 E1 3D 03 02  // .=...=...=...=..
    90E0: E1 3D 04 02 E1 3D 05 02 E1 3D 00 02 E1 3D 01 02  // .=...=...=...=..
    90F0: E1 3D 02 02 E1 3D 03 02 E1 3D 04 02 E1 3D 05 02  // .=...=...=...=..
    9100: A8 3C 00 02 A8 3C 01 02 A8 3C 02 02 A8 3C 03 02  // .<...<...<...<..
    9110: A8 3C 04 02 A8 3C 05 02 E4 3C 00 02 E4 3C 01 02  // .<...<...<...<..
    9120: E4 3C 02 02 E4 3C 03 02 E4 3C 04 02 E4 3C 05 02  // .<...<...<...<..
    9130: 55 3C 00 02 55 3C 01 02 55 3C 02 02 55 3C 03 02  // U<..U<..U<..U<..
    9140: 55 3C 04 02 55 3C 05 02 89 3C 00 02 89 3C 01 02  // U<..U<...<...<..
    9150: 89 3C 02 02 89 3C 03 02 89 3C 04 02 89 3C 05 02  // .<...<...<...<..
    9160: 39 40 00 00 6C 40 01 00 6C 40 02 00 59 40 00 00  // 9@..l@..l@..Y@..
    9170: 47 3F 00 02 40 3D 00 02 40 3D 01 02 40 3D 02 02  // G?..@=..@=..@=..
    9180: 40 3D 03 02 40 3D 04 02 40 3D 05 02 5F 3F 00 02  // @=..@=..@=.._?..
    9190: B4 41 05 00 B4 41 01 00 B4 41 00 00 B4 41 02 00  // .A...A...A...A..
    91A0: F5 41 00 00 F5 41 02 00 3A 42 00 00 CA 3E 00 02  // .A...A..:B...>..
    91B0: CA 3E 01 02 CA 3E 02 02 CA 3E 03 02 CA 3E 04 02  // .>...>...>...>..
    91C0: CA 3E 05 02 86 40 00 00 AE 40 00 00 2F 41 00 00  // .>...@...@../A..
    91D0: AA 41 00 00 8E 3D 00 02 8E 3D 01 02 8E 3D 02 02  // .A...=...=...=..
    91E0: 8E 3D 03 02 8E 3D 04 02 8E 3D 05 02 A9 41 00 01  // .=...=...=...A..
    91F0: A9 41 00 01 AD 3A 00 02 AD 3A 01 02 AD 3A 02 02  // .A...:...:...:..
    9200: AD 3A 03 02 AD 3A 04 02 AD 3A 05 02 CE 40 00 00  // .:...:...:...@..
    9210: AA 41 00 00 AA 41 00 00 AA 41 00 00 DF 3F 00 00  // .A...A...A...?..
    9220: D1 3B 00 02 D1 3B 01 02 D1 3B 02 02 D1 3B 03 02  // .;...;...;...;..
    9230: D1 3B 04 02 D1 3B 05 02 00 3C 00 02 00 3C 01 02  // .;...;...<...<..
    9240: 00 3C 02 02 00 3C 03 02 00 3C 04 02 00 3C 05 02  // .<...<...<...<..
    9250: 36 3C 00 02 36 3C 01 02 36 3C 02 02 36 3C 03 02  // 6<..6<..6<..6<..
    9260: 36 3C 04 02 36 3C 05 02 F1 40 00 00 14 41 00 00  // 6<..6<...@...A..
    9270: D2 3C 01 02 D2 3C 02 02 2E 3D 01 02 2E 3D 02 02  // .<...<...=...=..
    9280: A6 00 02 01 08 93 00 00 00 00 00 00 08 AB 00 00  // ................
    9290: 2E 93 00 00 00 00 3E 94 00 00 00 00 08 95 40 99  // ......>.......@.
    92A0: 00 00 00 00 00 00 00 00 00 00 00 00 24 A0 7A 93  // ............$.z.
    92B0: E8 93 CC 98 10 94 00 00 1C C3 00 00 00 00 00 00  // ................
    92C0: 00 00 00 00 00 00 E0 A0 52 A1 C6 A1 00 00 0A A2  // ........R.......
    92D0: 00 00 50 C2 00 00 DA A2 B0 A4 70 A5 CE A6 10 A7  // ..P.......p.....
    92E0: B6 BF 00 00 00 00 24 A7 00 00 DA BC 00 00 06 BF  // ......$.........
    92F0: EA A8 00 00 C2 AA 00 00 00 00 00 00 68 C1 36 BE  // ............h.6.
    9300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9310: 00 00 00 00 00 00 00 00 00 00 00 00 1C AE 28 AF  // ..............(.
    9320: 5E BA 7E BC 00 00 4A 00 02 01 00 00 00 00 26 D2  // ^.~...J.......&.
    9330: 40 C3 EE D2 08 C4 3C C4 12 C6 FA F4 6C C9 00 00  // @.....<.....l...
    9340: 98 C4 30 CB A4 C4 14 C9 9C CB 00 00 18 C5 DA F4  // ..0.............
    9350: 00 00 C6 F4 00 00 2C C5 D4 C5 42 F4 00 00 00 00  // ......,...B.....
    9360: DA C5 5A D3 00 00 00 00 00 00 92 F4 00 00 00 00  // ..Z.............
    9370: 25 00 02 01 00 08 37 00 00 4B E5 00 04 49 19 00  // %.....7..K...I..
    9380: 02 05 02 06 00 00 00 52 15 52 3D 52 18 52 1A 0D  // .......R.R=R.R..
    9390: 65 53 00 02 5B 00 4B 00 01 01 00 00 37 00 00 42  // eS..[.K.....7..B
    93A0: 21 00 63 00 1F 00 63 01 39 00 63 03 3F 00 63 02  // !.c...c.9.c.?.c.
    93B0: 45 00 5A 5A 5B 03 05 40 00 00 05 04 2D 19 40 00  // E.ZZ[..@....-.@.
    93C0: 15 05 40 02 01 02 0C 00 40 02 00 00 0D 00 5B 02  // ..@.....@.....[.
    93D0: 00 00 E3 0D 5B 02 00 00 E7 0D 5B 02 00 00 E8 0D  // ....[.....[.....
    93E0: 5B 00 6E 00 02 01 0C 08 37 00 00 3D 25 00 00 44  // [.n.....7..=%..D
    93F0: 22 00 3D 25 00 06 44 5D 00 3D 25 00 04 44 58 00  // ".=%..D].=%..DX.
    9400: 55 38 00 5B 01 05 00 00 61 60 01 00 3C E5 01 00  // U8.[....a`..<...
    9410: 80 49 2A 00 01 05 00 00 62 60 01 00 01 01 01 00  // .I*.....b`......
    9420: 01 56 00 40 03 A9 40 00 01 05 00 00 61 60 01 00  // .V.@..@.....a`..
    9430: 01 02 01 00 40 02 E5 00 01 5B 02 E5 00 01 5B 01  // ....@....[....[.
    9440: 05 00 00 61 60 01 00 3C E5 01 00 80 49 65 00 5B  // ...a`..<....Ie.[
    9450: 28 00 02 01 00 00 37 00 00 01 05 00 00 6C A8 01  // (.....7......l..
    9460: 00 02 00 00 01 00 02 01 01 00 01 05 00 00 6D A8  // ..............m.
    9470: 01 00 02 00 02 01 00 5B 2E 00 02 01 00 00 37 00  // .......[......7.
    9480: 00 52 16 03 01 41 00 15 05 41 10 01 02 60 0F 41  // .R...A...A...`.A
    9490: 03 01 40 00 1B 05 40 10 01 02 62 0F 40 01 05 F3  // ..@...@...b.@...
    94A0: 0F E1 0A 60 2D 5B CA 00 02 01 04 04 37 00 00 66  // ...`-[......7..f
    94B0: 0C 03 0C 41 00 00 2D 0A 41 42 2D 0D 42 04 00 3D  // ...A..-.AB-.B..=
    94C0: 24 00 06 00 44 31 00 2D 0D 42 08 00 3E 0A 42 41  // $...D1.-.B..>.BA
    94D0: 45 19 00 55 20 00 5B 56 00 43 03 24 43 05 00 03  // E..U .[V.C.$C...
    94E0: 04 46 00 00 33 05 46 01 00 00 00 01 02 00 00 46  // .F..3.F........F
    94F0: 03 00 00 01 00 0D 02 01 00 44 2D 05 46 02 00 00  // .........D-.F...
    9500: 00 01 02 00 00 46 03 24 43 04 00 4B E5 00 01 49  // .....F.$C..K...I
    9510: AA 00 07 02 01 00 45 2D 05 46 01 00 00 00 01 02  // ......E-.F......
    9520: 00 00 46 4A 02 01 00 44 44 90 00 03 29 43 00 0E  // ..FJ...DD...)C..
    9530: A2 00 44 43 98 00 03 29 43 00 08 A2 00 45 33 05  // ..DC...)C....E3.
    9540: 46 03 00 00 00 01 02 00 00 46 01 02 01 00 00 5B  // F........F.....[
    9550: 0D 02 01 00 44 01 04 00 00 00 00 3D A5 00 01 44  // ....D......=...D
    9560: C4 00 07 02 01 00 45 43 C9 00 0D 02 01 00 44 5B  // ......EC......D[
    9570: C3 03 01 07 10 08 37 00 00 3D 25 01 FF 44 A1 03  // ......7..=%..D..
    9580: 3D 25 01 19 46 9D 03 3D 25 01 02 47 9D 03 3D 25  // =%..F..=%..G..=%
    9590: 01 14 45 A1 03 3D 05 00 00 00 00 00 44 FD 01 66  // ..E..=......D..f
    95A0: 1B 56 00 02 3D A5 01 02 49 41 00 56 08 40 43 53  // .V..=...IA.V.@CS
    95B0: 00 3D A5 01 03 49 4E 00 56 08 40 43 53 00 03 0C  // .=...IN.V.@CS...
    95C0: 40 18 00 3E 0D 40 00 00 44 62 00 03 0A 02 40 43  // @..>.@..Db....@C
    95D0: 66 00 0E E5 01 80 4B E5 01 02 49 74 00 02 A9 02  // f.....K...It....
    95E0: 02 55 28 02 03 01 00 00 03 05 46 A8 61 00 00 3D  // .U(.......F.a..=
    95F0: A5 01 00 44 8D 00 03 05 46 50 C3 00 00 5C A5 0F  // ...D....FP...\..
    9600: 5E F3 08 55 28 01 3E 05 00 40 4B 4C 00 47 A7 00  // ^..U(.>..@KL.G..
    9610: 1B 05 00 01 43 BC 00 2C 65 01 01 3E 05 00 A0 25  // ....C..,e..>...%
    9620: 26 00 48 BC 00 15 05 00 01 43 A7 00 14 2D 01 04  // &.H......C...-..
    9630: 4B E5 01 80 49 EB 00 21 05 02 80 00 00 00 7C 02  // K...I..!......|.
    9640: 40 00 7E 02 40 46 7C 05 40 10 00 00 00 7E 05 40  // @.~.@F|.@....~.@
    9650: 35 0C 00 00 03 02 02 40 43 EE 00 56 00 02 27 02  // 5......@C..V..'.
    9660: 00 46 21 05 41 00 00 01 00 27 02 40 46 03 0A 42  // .F!.A....'.@F..B
    9670: 40 3E 05 41 00 00 00 00 49 16 01 03 0D 40 01 00  // @>.A....I....@..
    9680: 56 08 01 43 40 01 03 02 40 46 03 02 01 41 03 02  // V..C@...@F...A..
    9690: 03 41 27 02 40 41 03 02 40 03 3E 05 41 00 00 00  // .A'.@A..@.>.A...
    96A0: 00 49 1E 01 27 02 01 03 03 0A 01 40 27 02 46 03  // .I..'......@'.F.
    96B0: 03 0A 03 01 03 0A 01 40 03 8A 01 42 27 02 00 46  // .......@...B'..F
    96C0: 33 05 40 10 00 00 00 15 05 40 05 03 8A 03 40 66  // 3.@......@....@f
    96D0: FF 2D 0D 42 AB 03 56 00 40 03 21 40 01 33 25 40  // .-.B..V.@.!@.3%@
    96E0: 14 15 25 40 01 2D 0A 42 40 03 0C 48 00 00 4A 25  // ..%@.-.B@..H..J%
    96F0: 06 5E 04 44 23 02 56 00 40 4B E5 01 30 44 9B 01  // .^.D#.V.@K..0D..
    9700: 4A 25 F1 5D 01 44 DC 01 43 A3 01 4A 25 F1 5D 01  // J%.].D..C..J%.].
    9710: 49 DC 01 03 00 40 0B 5E 09 0D 40 F0 FF 3E 1A 40  // I....@.^..@..>.@
    9720: 03 49 DC 01 3C 02 07 5E 01 49 DC 01 3C 0A 0A 5E  // .I..<..^.I..<..^
    9730: 03 49 DC 01 03 00 40 0C 5E 09 25 40 70 3E 29 40  // .I....@.^.%@p>)@
    9740: 01 49 DC 01 3C 02 08 5E 02 44 E0 01 0E E5 01 01  // .I..<..^.D......
    9750: 3A 00 00 4B E5 01 01 44 75 03 4B E5 01 02 49 FD  // :..K...Du.K...I.
    9760: 01 3D 25 02 04 46 FD 01 55 28 02 52 23 3A 00 00  // .=%..F..U(.R#:..
    9770: 02 01 03 02 02 05 02 00 00 03 04 02 21 02 01 32  // ............!..2
    9780: 25 02 14 52 4D 02 01 02 03 3D 05 00 00 00 00 00  // %..RM....=......
    9790: 44 9D 03 3D A5 01 00 44 4E 02 02 01 03 02 02 05  // D..=...DN.......
    97A0: 02 00 0F 03 00 02 21 02 01 32 25 02 14 4B E5 01  // ......!..2%..K..
    97B0: 30 44 48 02 0E E5 02 01 52 4D 02 01 02 03 66 FF  // 0DH.....RM....f.
    97C0: 2D 0D 42 AB 03 56 00 40 03 21 40 01 33 25 40 14  // -.B..V.@.!@.3%@.
    97D0: 15 25 40 01 2D 0A 42 40 03 0C 48 00 00 03 05 40  // .%@.-.B@..H....@
    97E0: 00 00 38 00 3E 05 00 C0 C6 2D 00 47 A0 02 5E A5  // ..8.>....-.G..^.
    97F0: 40 CF 20 3E 05 00 E0 67 35 00 47 A0 02 5E A5 40  // @. >...g5.G..^.@
    9800: CF 10 3E 05 00 00 09 3D 00 47 A0 02 09 A5 40 CF  // ..>....=.G....@.
    9810: 5C B2 0F 5E C3 40 03 05 40 20 00 10 26 3D A5 01  // \..^.@..@ ..&=..
    9820: 00 44 BB 02 03 05 40 10 00 0C 12 5C 9A 10 5E 03  // .D....@....\..^.
    9830: 00 40 5C 1A 0B 5E 0F 00 03 5C A2 0B 5E 8F 40 56  // .@\..^...\..^.@V
    9840: 00 40 03 29 40 01 0F 25 40 01 4B E5 01 80 49 E5  // .@.)@..%@.K...I.
    9850: 02 0F 65 40 01 5C 0A 0C 5E 8B FE 40 07 8D 0D 5E  // ..e@.\..^..@...^
    9860: 0F E0 3E 8D 01 00 00 49 0A 03 3E 0D 03 00 00 49  // ..>....I..>....I
    9870: 0A 03 07 E5 0E 5E FE 43 0F 03 0D E5 0E 5E 01 4A  // .....^.C.....^.J
    9880: E5 0E 5E 01 49 27 03 4A 65 0C 5E 01 49 27 03 07  // ..^.I'.Je.^.I'..
    9890: E5 0E 5E EF 43 2C 03 0D E5 0E 5E 10 01 02 07 5E  // ..^.C,....^....^
    98A0: 01 01 02 08 5E 02 7C 05 02 00 EC 04 00 7E 02 40  // ....^.|......~.@
    98B0: 46 27 05 40 0A 00 00 00 01 02 09 5E 40 01 0A 0A  // F'.@.......^@...
    98C0: 5E 03 3A 00 00 3D A5 01 00 44 9D 03 03 01 00 02  // ^.:..=...D......
    98D0: 02 05 02 00 01 03 04 02 21 02 01 32 25 02 14 52  // ........!..2%..R
    98E0: 4D 02 02 02 00 3A 00 00 3D 25 02 04 46 9D 03 02  // M....:..=%..F...
    98F0: 25 03 02 02 E1 03 02 02 61 03 01 02 B9 03 01 08  // %.......a.......
    9900: A5 03 04 0E B1 03 02 02 01 02 00 52 2E 3A 00 00  // ...........R.:..
    9910: 5B 02 25 01 0B 43 75 03 7A 18 00 00 00 D8 00 B0  // [.%..Cu.z.......
    9920: 01 88 02 60 03 38 04 00 00 00 01 00 02 00 03 00  // ...`.8..........
    9930: 04 00 05 00 73 00 02 01 00 00 37 00 00 3D 65 00  // ....s.....7..=e.
    9940: 01 44 72 00 56 00 40 03 21 40 00 21 25 40 DC 03  // .Dr.V.@.!@.!%@..
    9950: 0A 48 40 01 05 B6 3A 00 01 00 00 5C 05 2D 3B CF  // .H@...:....\.-;.
    9960: FF FF FF 20 00 00 00 5C 05 40 3B CF FF FF FF 20  // ... ...\.@;.... 
    9970: 00 00 00 56 00 40 03 21 40 00 21 25 40 80 03 0A  // ...V.@.!@.!%@...
    9980: 48 40 5C 05 01 50 FF FC FF FF 00 03 00 00 56 00  // H@\..P........V.
    9990: 40 03 21 40 00 15 05 40 19 5C 02 50 50 FF FF FF  // @.!@...@.\.PP...
    99A0: F1 40 3A 00 00 5B 5B 00 E4 06 02 01 08 04 37 00  // .@:..[[.......7.
    99B0: 00 42 29 00 63 07 13 02 63 08 17 00 5A 5A 5B 0D  // .B).c...c...ZZ[.
    99C0: 25 C8 39 02 5C 25 34 47 FC 01 01 25 32 01 00 01  // %.9.\%4G...%2...
    99D0: 05 42 35 00 00 00 00 01 05 40 35 00 00 00 00 01  // .B5......@5.....
    99E0: 05 46 35 00 00 00 00 01 05 44 35 00 00 00 00 01  // .F5......D5.....
    99F0: 05 4A 35 00 00 00 00 01 05 48 35 00 00 00 00 01  // .J5......H5.....
    9A00: 05 4E 35 00 00 00 00 01 05 4C 35 00 00 00 00 01  // .N5......L5.....
    9A10: 05 52 35 00 00 00 00 01 05 50 35 00 00 00 00 01  // .R5......P5.....
    9A20: 05 61 35 00 00 00 00 01 05 63 35 00 00 00 00 01  // .a5......c5.....
    9A30: 05 65 35 00 00 00 00 01 05 67 35 00 00 00 00 01  // .e5......g5.....
    9A40: 05 69 35 00 00 00 00 01 05 72 35 01 00 00 00 01  // .i5......r5.....
    9A50: 05 DF 39 02 10 00 00 01 05 B3 3A 00 00 00 00 01  // ..9.......:.....
    9A60: 05 B1 3A 00 1B 5D 05 01 05 06 3B 35 00 13 00 01  // ..:..]....;5....
    9A70: 05 07 3B 36 11 00 00 01 05 08 3B 41 E6 01 00 01  // ..;6......;A....
    9A80: 05 09 3B 00 00 00 00 01 05 0A 3B 00 00 08 2C 01  // ..;.......;...,.
    9A90: 05 0C 3B 02 04 00 00 01 05 1F 3B 5E 4E 01 00 01  // ..;.......;^N...
    9AA0: 05 0A 3B 00 00 08 2C 01 05 0D 3B A4 01 00 00 01  // ..;...,...;.....
    9AB0: 05 0F 3B A4 01 00 00 01 05 14 3B 00 02 00 00 01  // ..;.......;.....
    9AC0: 05 15 3B 49 D2 00 00 01 05 18 3B 20 00 00 00 01  // ..;I......; ....
    9AD0: 05 19 3B 24 0D 00 00 01 05 1C 3B 00 00 00 00 01  // ..;$......;.....
    9AE0: 05 1D 3B 00 00 00 00 01 05 ED 3A 00 00 92 06 01  // ..;.......:.....
    9AF0: 05 EE 3A AA 08 00 E0 01 05 C9 39 FE 01 00 00 01  // ..:.......9.....
    9B00: 05 CA 39 1E 05 00 00 01 05 CB 39 BA 04 00 00 01  // ..9.......9.....
    9B10: 05 CC 39 24 04 00 00 01 05 CD 39 A2 08 00 00 01  // ..9$......9.....
    9B20: 05 CE 39 FE 01 00 00 01 05 CF 39 1E 05 00 00 01  // ..9.......9.....
    9B30: 05 D0 39 BA 04 00 00 01 05 D1 39 24 04 00 00 01  // ..9.......9$....
    9B40: 05 D2 39 A2 08 00 00 01 05 D3 39 FE 01 00 00 01  // ..9.......9.....
    9B50: 05 D4 39 1E 05 00 00 01 05 D5 39 BA 04 00 00 01  // ..9.......9.....
    9B60: 05 D6 39 24 04 00 00 01 05 D7 39 A2 08 00 00 01  // ..9$......9.....
    9B70: 05 D8 39 FE 01 00 00 01 05 D9 39 1E 05 00 00 01  // ..9.......9.....
    9B80: 05 DA 39 BA 04 00 00 01 05 DB 39 24 04 00 00 01  // ..9.......9$....
    9B90: 05 DC 39 A2 08 00 00 0D 25 C8 39 02 0D 25 DA 41  // ..9.....%.9..%.A
    9BA0: 01 01 25 33 47 00 01 25 31 47 00 01 25 32 47 00  // ..%3G..%1G..%2G.
    9BB0: 01 25 45 48 00 01 65 8B 4F F0 5B 01 05 1F 35 FF  // .%EH..e.O.[...5.
    9BC0: FF FF FF 01 05 20 35 1F 00 00 00 01 05 3B 01 64  // ..... 5......;.d
    9BD0: 02 12 00 01 05 30 01 A0 86 11 00 01 05 31 01 3C  // .....0.......1.<
    9BE0: 00 01 08 01 8D 83 38 64 00 01 25 82 38 01 01 25  // ......8d..%.8..%
    9BF0: 32 01 00 01 05 42 35 00 00 00 00 01 05 40 35 00  // 2....B5......@5.
    9C00: 00 00 00 01 05 46 35 00 00 00 00 01 05 44 35 00  // .....F5......D5.
    9C10: 00 00 00 01 05 4A 35 00 00 00 00 01 05 48 35 00  // .....J5......H5.
    9C20: 00 00 00 01 05 4E 35 00 00 00 00 01 05 4C 35 00  // .....N5......L5.
    9C30: 00 00 00 01 05 52 35 00 00 00 00 01 05 50 35 00  // .....R5......P5.
    9C40: 00 00 00 01 05 61 35 00 00 00 00 01 05 63 35 00  // .....a5......c5.
    9C50: 00 00 00 01 05 65 35 00 00 00 00 01 05 67 35 00  // .....e5......g5.
    9C60: 00 00 00 01 05 69 35 00 00 00 00 01 05 72 35 01  // .....i5......r5.
    9C70: 00 00 00 01 05 DF 39 02 10 00 00 01 05 B3 3A 00  // ......9.......:.
    9C80: 00 00 00 01 05 8F 3B 10 00 00 00 01 05 6B 3C 20  // ......;......k< 
    9C90: 00 00 00 01 05 47 3D 30 00 00 00 01 05 23 3E 40  // .....G=0.....#>@
    9CA0: 00 00 00 55 00 01 20 0D 01 DC 00 03 0A 48 40 01  // ...U.. ......H@.
    9CB0: 05 B1 3A 00 1B 5D 05 01 05 06 3B 35 00 13 00 01  // ..:..]....;5....
    9CC0: 05 07 3B 36 11 00 00 01 05 08 3B 41 E6 01 00 01  // ..;6......;A....
    9CD0: 05 09 3B 00 00 00 00 01 05 0A 3B 00 00 08 2C 01  // ..;.......;...,.
    9CE0: 05 0C 3B 02 04 00 00 01 05 1F 3B 5E 4E 01 00 01  // ..;.......;^N...
    9CF0: 05 0A 3B 00 00 08 2C 01 05 0D 3B A4 01 00 00 01  // ..;...,...;.....
    9D00: 05 0F 3B A4 01 00 00 01 05 14 3B 00 02 00 00 01  // ..;.......;.....
    9D10: 05 15 3B 49 D2 00 00 01 05 18 3B 20 00 00 00 01  // ..;I......; ....
    9D20: 05 19 3B 24 0D 00 00 01 05 1C 3B 00 00 00 00 01  // ..;$......;.....
    9D30: 05 1D 3B 00 00 00 00 01 05 ED 3A 00 00 92 06 01  // ..;.......:.....
    9D40: 05 EE 3A AA 08 00 E0 2C 05 01 01 00 00 00 3D 0D  // ..:....,......=.
    9D50: 01 05 00 45 FE 02 56 08 48 01 05 C9 39 FE 01 00  // ...E..V.H...9...
    9D60: 00 01 05 CA 39 1E 05 00 00 01 05 CB 39 BA 04 00  // ....9.......9...
    9D70: 00 01 05 CC 39 24 04 00 00 01 05 CD 39 A2 08 00  // ....9$......9...
    9D80: 00 01 05 CE 39 FE 01 00 00 01 05 CF 39 1E 05 00  // ....9.......9...
    9D90: 00 01 05 D0 39 BA 04 00 00 01 05 D1 39 24 04 00  // ....9.......9$..
    9DA0: 00 01 05 D2 39 A2 08 00 00 01 05 D3 39 FE 01 00  // ....9.......9...
    9DB0: 00 01 05 D4 39 1E 05 00 00 01 05 D5 39 BA 04 00  // ....9.......9...
    9DC0: 00 01 05 D6 39 24 04 00 00 01 05 D7 39 A2 08 00  // ....9$......9...
    9DD0: 00 01 05 D8 39 FE 01 00 00 01 05 D9 39 1E 05 00  // ....9.......9...
    9DE0: 00 01 05 DA 39 BA 04 00 00 01 05 DB 39 24 04 00  // ....9.......9$..
    9DF0: 00 01 05 DC 39 A2 08 00 00 0D 25 C8 39 02 55 00  // ....9.....%.9.U.
    9E00: 01 66 FF 2D 0D 42 DA 06 03 0C 48 00 00 0D 25 DA  // .f.-.B....H...%.
    9E10: 41 01 20 0D 01 1B 00 03 0A 48 40 01 21 33 47 01  // A. ......H@.!3G.
    9E20: 01 21 31 47 01 01 21 32 47 01 20 0D 01 04 00 03  // .!1G..!2G. .....
    9E30: 0A 48 40 01 21 45 48 01 20 0D 01 10 00 03 0A 48  // .H@.!EH. ......H
    9E40: 40 03 0D 40 00 F0 0F 61 40 01 01 6A 8B 4F 40 2C  // @..@...a@..j.O@,
    9E50: 0D 01 01 00 2D 0D 42 02 00 3D 25 01 05 45 60 04  // ....-.B..=%..E`.
    9E60: 56 08 48 55 00 01 52 17 2C 25 01 01 3D 25 01 05  // V.HU..R.,%..=%..
    9E70: 45 BE 04 02 05 01 05 02 00 00 52 29 66 08 03 0C  // E.........R)f...
    9E80: 41 0C 00 3E 0D 41 00 00 44 02 05 01 A5 15 01 03  // A..>.A..D.......
    9E90: 01 05 13 01 10 27 00 00 01 01 14 01 01 0D 25 15  // .....'........%.
    9EA0: 01 01 4A 65 15 01 02 44 FA 04 01 01 42 01 01 01  // ..Je...D....B...
    9EB0: 01 46 01 01 01 01 4A 01 01 01 01 4E 01 01 01 01  // .F....J....N....
    9EC0: 52 01 01 55 00 01 52 4E 5C 05 DD 5D 00 F0 FF FF  // R..U..RN\..]....
    9ED0: AA 0A 00 00 5C 05 63 53 FF FF FF 00 00 00 00 30  // ....\.cS.......0
    9EE0: 5C 05 65 53 FF FF FF 00 00 00 00 30 5C 05 67 53  // \.eS.......0\.gS
    9EF0: FF FF FF 00 00 00 00 30 5C 05 69 53 FF FF FF 00  // .......0\.iS....
    9F00: 00 00 00 30 5C 05 6B 53 FF FF FF 00 00 00 00 30  // ...0\.kS.......0
    9F10: 5C 05 6D 53 FF FF FF 00 00 00 00 30 5C 05 31 55  // \.mS.......0\.1U
    9F20: EE FF C0 FF 11 00 01 00 5C 05 31 56 EE FF C0 FF  // ........\.1V....
    9F30: 11 00 01 00 5C 05 31 57 EE FF C0 FF 11 00 01 00  // ....\.1W........
    9F40: 5C 05 31 59 EE FF C0 FF 11 00 01 00 5C 05 31 5A  // \.1Y........\.1Z
    9F50: EE FF C0 FF 11 00 01 00 01 05 9A 55 01 00 00 00  // ...........U....
    9F60: 01 05 9A 56 01 00 00 00 01 05 9A 57 01 00 00 00  // ...V.......W....
    9F70: 01 05 9A 59 01 00 00 00 01 05 9A 5A 01 00 00 00  // ...Y.......Z....
    9F80: 02 25 01 07 52 33 02 05 01 00 07 00 00 55 00 02  // .%..R3.......U..
    9F90: 52 4D 2C 25 01 01 3D 25 01 06 45 E8 05 66 16 03  // RM,%..=%..E..f..
    9FA0: A4 00 06 00 2D 0D 42 08 00 03 0A 00 42 3E A5 00  // ....-.B.....B>..
    9FB0: 00 44 79 06 03 0A 42 00 03 0C 01 04 00 3E 0D 01  // .Dy...B......>..
    9FC0: 21 21 44 25 06 3E 0D 01 21 22 49 6D 06 03 0C 40  // !!D%.>..!"Im...@
    9FD0: 08 00 66 16 2D 0A 42 40 03 24 40 00 00 3E 25 40  // ..f.-.B@.$@..>%@
    9FE0: FF 44 6D 06 3E 25 40 14 49 65 06 03 04 40 02 00  // .Dm.>%@.Ie...@..
    9FF0: 4C 05 40 00 01 00 00 44 6D 06 3E 0D 01 21 22 44  // L.@....Dm.>..!"D
    A000: 62 06 01 A5 59 61 01 43 6D 06 43 6D 06 2D 0C 42  // b...Ya.Cm.Cm.-.B
    A010: 01 00 43 30 06 2D 0D 00 10 00 33 A5 00 01 43 05  // ..C0.-....3...C.
    A020: 06 66 16 03 0C 41 04 00 4C 0D 41 02 00 44 8D 06  // .f...A..L.A..D..
    A030: 0D A5 4C 00 02 52 16 01 01 53 39 02 01 01 54 39  // ..L..R...S9...T9
    A040: 03 01 05 55 39 00 00 00 00 03 01 41 01 15 05 41  // ...U9......A...A
    A050: 18 01 02 C4 00 41 03 01 41 01 1B 05 41 08 01 02  // .....A..A...A...
    A060: C9 00 41 03 00 41 55 39 01 02 59 39 41 03 01 40  // ..A..AU9..Y9A..@
    A070: 03 33 01 40 02 2D 02 40 41 01 02 5A 39 40 5B 7A  // .3.@.-.@A..Z9@[z
    A080: 0A 00 00 00 6B 01 D6 02 41 04 0B 29 BC 00 02 01  // ....k...A..)....
    A090: 00 04 66 FF 56 08 47 2D 0D 42 74 00 03 21 47 00  // ..f.V.G-.Bt..!G.
    A0A0: 09 25 47 F0 42 22 47 63 00 5B 00 63 60 56 00 63  // .%G.B"Gc.[.c`V.c
    A0B0: 20 36 00 63 90 4E 00 63 A0 3E 00 63 B0 46 00 5A  //  6.c.N.c.>.c.F.Z
    A0C0: 5A 5B 2D 0D 42 30 00 43 5B 00 2D 0D 42 24 00 43  // Z[-.B0.C[.-.B$.C
    A0D0: 5B 00 2D 0D 42 3C 00 43 5B 00 2D 0D 42 18 00 43  // [.-.B<.C[.-.B..C
    A0E0: 5B 00 2D 0D 42 0C 00 03 21 47 00 09 25 47 07 2D  // [.-.B...!G..%G.-
    A0F0: 0A 42 47 2D 0A 42 47 03 0C 48 00 00 5B 7A BC 00  // .BG-.BG..H..[z..
    A100: 00 00 80 00 00 01 80 01 00 02 80 02 00 00 00 01  // ................
    A110: 00 02 00 03 00 04 00 05 00 00 DC 00 B8 01 94 02  // ................
    A120: 70 03 4C 04 00 00 6B 01 D6 02 41 04 0B 29 76 2A  // p.L...k...A..)v*
    A130: 00 00 D8 00 B0 01 88 02 60 03 38 04 00 00 5A 00  // ........`.8...Z.
    A140: B4 00 0E 01 68 01 C2 01 72 00 01 01 00 00 37 00  // ....h...r.....7.
    A150: 00 56 00 40 03 21 40 00 21 0D 40 6B 01 03 02 48  // .V.@.!@.!.@k...H
    A160: 40 01 25 AC 41 01 3D 65 00 02 49 4C 00 01 0D BD  // @.%.A.=e..IL....
    A170: 41 01 00 54 00 BB 41 0D 25 AE 41 01 01 05 AD 41  // A..T..A.%.A....A
    A180: 11 00 00 00 07 A5 AC 41 FE 01 05 AF 41 11 01 11  // .......A....A...
    A190: 01 43 6E 00 01 05 B1 41 00 00 00 01 01 05 B5 41  // .Cn....A.......A
    A1A0: 00 00 00 01 01 05 AF 41 11 01 11 01 54 00 AD 41  // .......A....T..A
    A1B0: 01 0D BD 41 00 01 3A 00 00 5B 73 00 01 01 00 00  // ...A..:..[s.....
    A1C0: 37 00 00 52 14 03 00 41 C0 41 33 1A 41 41 03 8A  // 7..R...A.A3.AA..
    A1D0: 40 41 03 00 41 C1 41 33 1A 41 41 03 0A 40 41 3E  // @A..A.A3.AA..@A>
    A1E0: 05 40 00 00 00 00 49 36 00 03 05 40 70 08 00 0F  // .@....I6...@p...
    A1F0: 0E 25 00 B0 52 14 3D 65 00 00 44 6D 00 01 02 16  // .%..R.=e..Dm....
    A200: 4D 40 01 05 17 4D 00 00 00 00 01 05 18 4D 00 00  // M@...M.......M..
    A210: 00 00 01 05 19 4D 00 00 00 00 5C 05 14 4D 8F FF  // .....M....\..M..
    A220: 0F FF 31 00 00 00 5B 07 25 14 4D FE 5B 00 43 00  // ..1...[.%.M.[.C.
    A230: 01 01 00 00 37 00 00 52 14 3D 65 00 01 44 3A 00  // ....7..R.=e..D:.
    A240: 0D 65 01 50 03 54 20 01 50 4A A5 01 50 01 49 1B  // .e.P.T .PJ..P.I.
    A250: 00 54 20 0F 50 56 00 40 20 25 00 01 03 0A 48 40  // .T .PV.@ %....H@
    A260: 07 E5 E8 39 7F 43 3F 00 0D 25 01 50 01 3A 00 00  // ...9.C?..%.P.:..
    A270: 5B 00 CF 00 02 01 00 00 37 00 00 42 29 00 63 00  // [.......7..B).c.
    A280: 1B 00 63 01 1B 00 63 02 AA 00 5A 5A 5B 66 FF 56  // ..c...c...ZZ[f.V
    A290: 08 40 2D 0D 42 C3 00 03 21 40 00 15 25 40 01 2D  // .@-.B...!@..%@.-
    A2A0: 0A 42 40 03 0C 48 00 00 3D 65 00 00 44 72 00 0D  // .B@..H..=e..Dr..
    A2B0: 25 CC 00 01 3A 00 00 01 8D C0 00 00 02 51 02 01  // %...:........Q..
    A2C0: 05 C6 00 00 00 10 00 01 05 C8 00 00 00 50 00 01  // .............P..
    A2D0: 0D C3 00 02 00 54 20 CA 00 01 05 C2 00 00 01 00  // .....T .........
    A2E0: 00 43 1A 00 07 25 CC 00 FE 3A 00 00 0D 25 CA 00  // .C...%...:...%..
    A2F0: 01 01 25 C2 00 01 07 A5 C1 00 FE 0D 25 D5 00 01  // ..%.........%...
    A300: 0D 65 D5 00 01 4A 65 D5 00 01 44 93 00 54 08 D5  // .e...Je...D..T..
    A310: 00 54 00 C6 00 54 00 C8 00 43 1A 00 5C 65 D4 00  // .T...T...C..\e..
    A320: FC 02 01 A1 C0 00 00 2B A5 C0 00 01 0D A5 C1 00  // .......+........
    A330: 01 5B 7A 0C 00 00 00 02 00 2C 00 2D 00 2E 00 2F  // .[z......,.-.../
    A340: 00 00 D5 01 03 01 04 00 37 00 00 66 08 03 05 46  // ........7..f...F
    A350: 10 27 00 00 3D A5 00 02 49 1E 00 02 02 00 46 5B  // .'..=...I.....F[
    A360: 03 05 40 0C 00 00 00 21 21 40 00 66 FF 2D 0D 42  // ..@....!!@.f.-.B
    A370: 81 01 2D 0A 42 40 03 04 40 00 00 03 04 41 04 00  // ..-.B@..@....A..
    A380: 03 04 00 08 00 01 02 00 00 40 03 88 40 01 00 03  // .........@..@...
    A390: 18 40 01 00 09 8D 40 FF 01 3E 8D 40 00 00 49 99  // .@....@..>.@..I.
    A3A0: 00 01 02 00 00 41 03 00 40 01 00 09 05 40 FF 01  // .....A..@....@..
    A3B0: 00 00 3E 0D 40 00 00 49 82 00 03 05 46 00 71 02  // ..>.@..I....F.q.
    A3C0: 00 43 BC 00 21 02 40 46 03 00 41 01 00 09 05 41  // .C..!.@F..A....A
    A3D0: 00 1E 00 00 1B 05 41 09 43 B4 00 7C 02 40 46 7E  // ......A.C..|.@F~
    A3E0: 05 40 00 00 01 00 03 00 41 01 00 09 05 41 00 F0  // .@......A....A..
    A3F0: 00 00 1B 05 41 0C 75 02 40 41 03 02 46 40 3D A5  // ....A.u.@A..F@=.
    A400: 00 01 49 C8 00 02 02 00 46 5B 3D E5 00 00 49 0B  // ..I.....F[=...I.
    A410: 01 56 00 40 03 29 40 00 21 0D 40 0A 00 03 02 41  // .V.@.)@.!.@....A
    A420: 00 2D 02 40 41 01 02 00 00 40 03 00 41 01 00 09  // .-.@A....@..A...
    A430: 05 41 00 00 F0 07 1B 05 41 14 02 E2 00 41 3D E5  // .A......A....A=.
    A440: 00 00 49 0B 01 02 05 00 10 27 00 00 5B 56 00 40  // ..I......'..[V.@
    A450: 03 39 40 00 55 38 00 66 FF 2D 0D 42 59 01 3E 0C  // .9@.U8.f.-.BY.>.
    A460: 40 02 00 47 2C 01 2D 0D 42 08 00 43 1C 01 33 0C  // @..G,.-.B..C..3.
    A470: 40 04 00 21 0C 40 06 00 2D 0C 40 00 00 03 09 42  // @..!.@..-.@....B
    A480: 00 55 00 00 02 0A 00 40 7C 05 46 40 42 0F 00 7E  // .U.....@|.F@B..~
    A490: 01 40 00 02 02 00 40 5B 7A 7C 00 FF FF 07 00 00  // .@....@[z|......
    A4A0: 00 00 00 C8 00 3F 00 08 00 19 00 40 06 5F 00 40  // .....?.....@._.@
    A4B0: 00 32 00 80 0C 7E 00 60 00 64 00 00 32 7F 00 7F  // .2...~.`.d..2...
    A4C0: 00 64 00 11 6C 01 00 00 6C 01 00 4C 6C 01 00 0D  // .d..l...l..Ll...
    A4D0: 6E 01 00 00 6E 01 00 48 6E 01 00 0D 70 01 00 00  // n...n..Hn...p...
    A4E0: 70 01 00 48 70 01 00 0D 6E 01 00 00 6E 01 00 48  // p..Hp...n...n..H
    A4F0: 6E 01 00 0D 7E 01 00 00 7E 01 00 48 7E 01 00 0E  // n...~...~..H~...
    A500: 72 01 00 00 72 01 00 49 72 01 00 0E B0 01 00 00  // r...r..Ir.......
    A510: B0 01 00 49 B0 01 00 00 BF 00 02 03 04 00 37 00  // ...I..........7.
    A520: 00 56 00 46 56 00 00 03 21 00 00 55 20 00 3D 65  // .V.FV...!..U .=e
    A530: 00 03 44 2C 00 3D 65 00 0D 46 B4 00 02 29 00 00  // ..D,.=e..F...)..
    A540: 32 25 00 08 0E 25 00 60 52 14 5C 22 28 55 F8 00  // 2%...%.`R.\"(U..
    A550: 02 22 00 00 03 0D 41 01 00 66 FF 2D 0D 42 BB 00  // ."....A..f.-.B..
    A560: 2D 0A 42 41 03 24 00 00 00 3D E2 00 00 48 A0 00  // -.BA.$...=...H..
    A570: 3E 25 00 04 44 6F 00 03 22 46 00 33 25 46 01 15  // >%..Do.."F.3%F..
    A580: 25 46 04 0F 25 46 01 33 39 00 00 3E 25 00 01 44  // %F..%F.39..>%..D
    A590: 8C 00 3E 25 00 02 44 85 00 03 25 46 21 03 65 00  // ..>%..D...%F!.e.
    A5A0: 2F 43 90 00 03 65 00 13 03 79 46 00 33 65 46 01  // /C...e...yF.3eF.
    A5B0: 15 2D 46 03 0F 65 46 01 52 14 01 02 01 4D 46 01  // .-F..eF.R....MF.
    A5C0: 52 00 4D 00 54 00 05 4D 54 00 FF 4C 3A 00 00 5B  // R.M.T..MT..L:..[
    A5D0: 7A 04 00 03 02 01 04 00 5E 01 01 04 04 08 37 00  // z.......^.....7.
    A5E0: 00 3D 65 02 01 49 27 01 4B A5 02 03 49 2A 00 52  // .=e..I'.K...I*.R
    A5F0: 25 02 05 00 00 00 00 00 02 05 01 00 05 02 00 43  // %..............C
    A600: 2F 00 55 28 02 52 25 03 38 00 C4 00 03 48 00 C9  // /.U(.R%.8....H..
    A610: 00 0E 25 02 90 52 14 08 25 02 07 0D 05 B4 3A 11  // ..%..R..%.....:.
    A620: 11 01 00 5C 25 B3 3A 0B 01 03 21 41 02 15 25 41  // ...\%.:...!A..%A
    A630: 04 0D 22 B3 3A 41 0D 65 B6 3A 01 5C 25 DB 3A FD  // ..".:A.e.:.\%.:.
    A640: 01 03 02 41 00 1B 05 41 08 01 0A CB 3A 41 01 0A  // ...A...A....:A..
    A650: CF 3A 41 15 05 00 18 01 02 CA 3A 00 01 02 CE 3A  // .:A.......:....:
    A660: 00 4B A5 02 03 49 A0 00 2B 05 CA 3A 00 00 10 00  // .K...I..+..:....
    A670: 2B 05 CE 3A 00 00 50 00 01 0D A7 3A 80 00 01 0D  // +..:..P....:....
    A680: B1 3A 00 03 01 0D 0C 3B 01 03 01 05 0A 3B 00 00  // .:.....;.....;..
    A690: 08 28 01 05 0B 3B 00 00 08 00 01 E5 EF 3A 08 01  // .(...;.......:..
    A6A0: E5 EE 3A E0 54 00 A9 3A 01 19 AA 3A 00 01 89 AA  // ..:.T..:...:....
    A6B0: 3A 00 01 19 AE 3A 00 01 89 AE 3A 00 07 0D A5 3A  // :....:....:....:
    A6C0: FF F8 66 FF 2D 0D 42 4F 01 03 0C 40 00 00 3E 0D  // ..f.-.BO...@..>.
    A6D0: 40 FF FF 44 0E 01 3D 8C 01 00 00 44 0E 01 2D 0D  // @..D..=....D..-.
    A6E0: 42 03 00 43 F1 00 01 24 A5 3A 02 00 01 09 C7 3A  // B..C...$.:.....:
    A6F0: 01 07 25 B3 3A FE 07 25 DB 3A FE 3A 00 00 5B 0E  // ..%.:..%.:.:..[.
    A700: 25 02 90 52 14 3D 65 02 00 49 3C 01 0D 25 B3 3A  // %..R.=e..I<..%.:
    A710: 01 43 48 01 3D 65 02 10 44 48 01 01 09 C7 3A 01  // .CH.=e..DH....:.
    A720: 3A 00 00 5B 7A 0F 00 01 00 01 01 01 03 01 05 02  // :..[z...........
    A730: 02 00 08 FF FF 08 42 00 01 01 00 00 37 00 00 52  // ......B.....7..R
    A740: 14 3D 65 00 01 44 21 00 54 20 4B 50 4A 65 4B 50  // .=e..D!.T KPJeKP
    A750: 01 49 16 00 43 3E 00 5C 4D 1B 50 FE FF 00 01 4A  // .I..C>.\M.P....J
    A760: A5 01 50 01 44 3E 00 0D 25 4B 50 01 4A 65 4B 50  // ..P.D>..%KP.JeKP
    A770: 01 44 36 00 3A 00 00 5B 13 00 01 03 00 00 37 00  // .D6.:..[......7.
    A780: 00 0E 25 00 A0 52 14 3A 00 00 5B 00 C6 01 01 01  // ..%..R.:..[.....
    A790: 00 18 56 00 40 03 21 40 05 21 0D 40 80 00 03 0A  // ..V.@.!@.!.@....
    A7A0: 48 40 37 00 00 01 0D 47 50 0D 00 3D 8D 01 0D 00  // H@7....GP..=....
    A7B0: 46 2C 00 01 19 47 50 01 01 8D 48 50 40 01 01 0D  // F,...GP...HP@...
    A7C0: 49 50 2C 01 03 09 41 00 2D 19 41 00 03 8A 41 41  // IP,...A.-.A...AA
    A7D0: 2D 8D 41 01 00 1B 1D 41 02 01 1A 48 50 41 33 0D  // -.A....A...HPA3.
    A7E0: 41 01 00 01 0A EA 4F 41 54 08 EC 4F 01 99 EC 4F  // A.....OAT..O...O
    A7F0: 02 03 19 41 00 33 09 41 02 56 18 41 03 B1 41 04  // ...A.3.A.V.A..A.
    A800: 33 1A 41 41 01 8A EB 4F 41 03 19 41 00 33 09 41  // 3.AA...OA..A.3.A
    A810: 02 2D 1A 41 41 2D 09 41 00 4B 25 04 10 44 98 00  // .-.AA-.A.K%..D..
    A820: 2D 09 41 00 01 0A EB 4F 41 03 21 41 04 09 25 41  // -.A....OA.!A..%A
    A830: 02 1B 25 41 01 01 22 ED 4F 41 03 09 41 01 2D 19  // ..%A..".OA..A.-.
    A840: 41 01 33 0D 41 01 00 01 0A EF 4F 41 54 08 F7 4F  // A.3.A.....OAT..O
    A850: 01 99 F7 4F 03 03 19 41 01 33 09 41 03 56 18 41  // ...O...A.3.A.V.A
    A860: 03 B9 41 04 33 1A 41 41 01 8A F6 4F 41 03 19 41  // ..A.3.AA...OA..A
    A870: 01 33 09 41 03 2D 1A 41 41 2D 09 41 01 4B 25 04  // .3.A.-.AA-.A.K%.
    A880: 20 44 FC 00 2D 09 41 01 01 0A F6 4F 41 03 21 41  //  D..-.A....OA.!A
    A890: 04 09 25 41 04 1B 25 41 02 01 22 F8 4F 41 3D 65  // ..%A..%A..".OA=e
    A8A0: 05 00 44 21 01 07 65 01 50 EF 43 26 01 0D 65 01  // ..D!..e.P.C&..e.
    A8B0: 50 10 03 00 46 EB 4F 02 00 02 F6 4F 56 00 40 03  // P...F.O....OV.@.
    A8C0: 21 40 05 21 0D 40 01 00 03 0A 48 40 56 00 40 03  // !@.!.@....H@V.@.
    A8D0: 09 40 02 3D 65 05 00 49 53 01 33 0D 40 02 00 15  // .@.=e..IS.3.@...
    A8E0: 05 40 0F 56 00 41 3D 8D 02 0D 00 48 6B 01 03 0D  // .@.V.A=....Hk...
    A8F0: 41 0D 00 33 19 41 02 0F 02 40 41 0F E5 40 80 01  // A..3.A...@A..@..
    A900: 02 E8 39 40 56 00 40 03 21 40 05 21 0D 40 6B 01  // ..9@V.@.!@.!.@k.
    A910: 03 0A 48 40 01 09 C3 41 00 01 89 C3 41 01 01 09  // ..H@...A....A...
    A920: C4 41 00 01 89 C4 41 01 01 02 C0 41 46 01 01 C1  // .A....A....AF...
    A930: 41 02 54 00 BE 41 01 31 BE 41 04 01 B1 BE 41 04  // A.T..A.1.A....A.
    A940: 54 00 BF 41 01 39 BF 41 04 01 B9 BF 41 04 3A 00  // T..A.9.A....A.:.
    A950: 00 5B D8 01 01 01 00 00 37 00 00 56 00 41 03 39  // .[......7..V.A.9
    A960: 41 01 09 25 41 0F 3E 25 41 07 49 1C 00 5B 56 00  // A..%A.>%A.I..[V.
    A970: 40 03 62 40 41 01 02 58 53 40 03 0A 46 42 66 FF  // @.b@A..XS@..FBf.
    A980: 2D 0D 42 C0 01 15 25 41 02 2D 0A 42 41 03 0C 48  // -.B...%A.-.BA..H
    A990: 00 00 07 05 90 5D 00 00 01 00 03 0C 48 02 00 03  // .....]......H...
    A9A0: 05 40 50 C3 00 00 56 00 41 03 21 41 00 27 02 40  // .@P...V.A.!A.'.@
    A9B0: 41 15 05 40 10 03 25 40 02 01 02 62 53 40 01 05  // A..@..%@...bS@..
    A9C0: 63 53 40 00 00 30 03 0A 42 46 56 08 48 0D 25 5A  // cS@..0..BFV.H.%Z
    A9D0: 53 01 54 00 59 53 56 00 41 03 71 41 01 0F E5 41  // S.T.YSV.A.qA...A
    A9E0: 80 01 02 72 53 41 03 69 41 00 03 A5 41 01 01 02  // ...rSA.iA...A...
    A9F0: 72 53 41 4B 25 01 01 44 D5 00 03 71 41 00 03 A5  // rSAK%..D...qA...
    AA00: 41 02 01 02 72 53 41 03 79 41 00 03 A5 41 03 01  // A...rSA.yA...A..
    AA10: 02 72 53 41 03 05 40 00 31 01 00 2D A9 40 01 01  // .rSA..@.1..-.@..
    AA20: 02 6E 53 40 43 08 01 03 71 41 01 0F 65 41 01 03  // .nS@C...qA..eA..
    AA30: A5 41 02 01 02 72 53 41 03 05 40 00 11 01 00 01  // .A...rSA..@.....
    AA40: 02 6E 53 40 03 05 40 01 30 00 00 03 A9 40 01 01  // .nS@..@.0....@..
    AA50: 02 6F 53 40 5C A5 58 53 CF 10 0D 25 58 53 01 02  // .oS@\.XS...%XS..
    AA60: 65 00 02 56 00 40 03 29 40 01 2D 25 40 04 21 05  // e..V.@.)@.-%@.!.
    AA70: 40 C8 00 00 00 56 00 41 03 21 41 00 27 02 40 41  // @....V.A.!A.'.@A
    AA80: 03 0A 41 40 33 0D 41 01 00 3E 0D 41 00 00 44 AC  // ..A@3.A..>.A..D.
    AA90: 01 51 64 4A 25 5B 53 04 44 32 01 4A 65 5B 53 31  // .QdJ%[S.D2.Je[S1
    AAA0: 49 AC 01 02 65 00 01 4B 25 01 01 49 AC 01 01 05  // I...e..K%..I....
    AAB0: 72 53 01 00 03 80 3D 65 01 01 49 73 01 02 A8 00  // rS....=e..Is....
    AAC0: 72 53 43 AC 01 56 00 41 03 19 41 00 56 00 40 03  // rSC..V.A..A.V.@.
    AAD0: 0A 40 41 3B 02 40 03 28 40 72 53 03 68 40 72 53  // .@A;.@.(@rS.h@rS
    AAE0: 03 A8 40 72 53 03 E8 40 72 53 04 02 00 40 2D A5  // ..@rS..@rS...@-.
    AAF0: 41 04 2D 0D 41 04 00 3E A9 41 01 45 7A 01 0D 25  // A.-.A..>.A.Ez..%
    AB00: 5A 53 02 01 25 58 53 02 51 01 54 00 58 53 5B 7A  // ZS..%XS.Q.T.XS[z
    AB10: 18 00 00 00 00 00 04 00 02 00 08 00 04 00 0C 00  // ................
    AB20: 06 00 10 00 08 00 14 00 0A 00 46 00 02 02 00 04  // ..........F.....
    AB30: 37 00 00 55 30 00 32 25 00 01 20 25 00 08 56 08  // 7..U0.2%.. %..V.
    AB40: 48 03 22 48 40 0D A5 D5 53 01 02 A0 00 D4 53 08  // H."H@...S.....S.
    AB50: A5 00 03 4A 25 D4 53 02 44 3C 00 5C 0D D5 53 FF  // ...J%.S.D<.\..S.
    AB60: FE 01 00 43 42 00 0D 0D D5 53 01 01 3A 00 00 5B  // ...CB....S..:..[
    AB70: 14 03 01 05 00 00 37 00 00 0E 25 00 60 52 14 08  // ......7...%.`R..
    AB80: 25 00 0F 42 29 00 63 0F 53 00 63 11 09 02 63 12  // %..B).c.S.c...c.
    AB90: 66 02 63 01 CC 02 63 00 F5 02 63 08 D8 01 63 09  // f.c...c...c...c.
    ABA0: B9 01 63 0A C0 01 63 13 C8 01 63 14 D0 01 63 0B  // ..c...c...c...c.
    ABB0: E0 01 63 0C BC 02 63 0D E8 01 63 10 01 02 5A 5A  // ..c...c...c...ZZ
    ABC0: 43 B5 01 54 00 9A 55 01 0D 2B 55 1F 00 3D A5 00  // C..T..U..+U..=..
    ABD0: 00 44 72 00 3D A5 00 02 44 A2 01 3D A5 00 05 49  // .Dr.=...D..=...I
    ABE0: A2 01 54 00 C9 55 3D 25 02 00 49 81 00 02 25 02  // ..T..U=%..I...%.
    ABF0: 02 32 25 02 01 01 E1 C9 55 02 4A 25 CC 55 01 49  // .2%.....U.J%.U.I
    AC00: B5 01 7B 05 01 00 80 00 00 7E 05 40 8C 0A 00 00  // ..{......~.@....
    AC10: 56 00 46 03 29 46 02 27 02 40 46 07 65 D0 55 FE  // V.F.)F.'.@F.e.U.
    AC20: 01 05 D1 55 00 80 00 00 01 02 D2 55 40 0D E5 D3  // ...U.......U@...
    AC30: 55 10 0D 65 28 55 04 51 01 07 65 28 55 FB 51 01  // U..e(U.Q..e(U.Q.
    AC40: 03 21 40 02 15 25 40 05 01 E2 CA 55 40 54 20 CE  // .!@..%@....U@T .
    AC50: 55 02 A0 02 28 55 03 0A 46 48 08 A5 02 07 56 00  // U...(U..FH....V.
    AC60: 40 03 31 40 02 21 0D 40 80 00 03 8A 46 40 03 0A  // @.1@.!.@....F@..
    AC70: 48 40 03 88 40 EA 4F 03 08 40 EF 4F 2D 05 40 01  // H@..@.O..@.O-.@.
    AC80: 00 01 00 03 98 41 EB 4F 03 18 41 F6 4F 03 0A 48  // .....A.O..A.O..H
    AC90: 46 01 02 0C 56 40 01 02 0D 56 41 03 1A 48 46 03  // F...V@...VA..HF.
    ACA0: 00 40 EB 4F 33 1A 40 40 33 08 40 BE 41 33 08 40  // .@.O3.@@3.@.A3.@
    ACB0: BE 41 03 00 41 F6 4F 33 1A 41 41 33 08 41 BF 41  // .A..A.O3.AA3.A.A
    ACC0: 33 08 41 BF 41 03 0A 48 46 01 0A 0F 56 41 01 8A  // 3.A.A..HF...VA..
    ACD0: 0F 56 40 03 1A 48 46 03 00 40 EC 4F 33 8A 40 40  // .V@..HF..@.O3.@@
    ACE0: 03 00 41 F7 4F 33 8A 41 41 4A 25 ED 4F 01 44 85  // ..A.O3.AAJ%.O.D.
    ACF0: 01 0F E5 40 80 4A 25 F8 4F 01 44 91 01 0F E5 41  // ...@.J%.O.D....A
    AD00: 80 03 0A 48 46 01 1A 0E 56 41 01 9A 0E 56 40 43  // ...HF...VA...V@C
    AD10: B5 01 07 E5 28 55 2F 0D 65 28 55 04 51 01 07 65  // ....(U/.e(U.Q..e
    AD20: 28 55 FB 51 01 3A 00 00 5B 54 20 D8 55 43 B5 01  // (U.Q.:..[T .UC..
    AD30: 01 25 D8 55 01 43 B5 01 01 25 D8 55 02 43 B5 01  // .%.U.C...%.U.C..
    AD40: 01 25 D8 55 03 43 B5 01 07 25 C8 55 EF 43 B5 01  // .%.U.C...%.U.C..
    AD50: 0D 25 C8 55 10 43 B5 01 0D 65 D0 55 01 51 0A 07  // .%.U.C...e.U.Q..
    AD60: 25 CD 55 FE 51 0A 01 0D CC 55 01 02 51 C8 43 B5  // %.U.Q....U..Q.C.
    AD70: 01 0D 25 DE 55 10 43 B5 01 01 69 6F 55 02 3D A5  // ..%.U.C...ioU.=.
    AD80: 00 03 49 25 02 4A 25 35 55 10 49 25 02 01 A5 6F  // ..I%.J%5U.I%...o
    AD90: 55 02 43 2A 02 01 B1 6F 55 00 3D 25 02 00 44 3F  // U.C*...oU.=%..D?
    ADA0: 02 32 25 02 01 14 25 02 04 5C E1 6F 55 8F 02 3D  // .2%...%..\.oU..=
    ADB0: A5 00 05 44 4D 02 3D A5 00 00 49 5E 02 02 A5 00  // ...DM.=...I^....
    ADC0: 00 03 39 40 00 33 25 40 01 01 22 CB 55 40 02 E0  // ..9@.3%@..".U@..
    ADD0: 02 70 55 43 B5 01 02 E0 02 70 55 4B E5 02 01 44  // .pUC.....pUK...D
    ADE0: B5 01 02 B0 00 6F 55 3D A5 00 00 44 8C 02 3D A5  // .....oU=...D..=.
    ADF0: 00 05 44 8C 02 02 E5 00 04 43 95 02 02 E0 00 CB  // ..D......C......
    AE00: 55 2C E5 00 01 3D A5 00 02 44 A3 02 3D A5 00 03  // U,...=...D..=...
    AE10: 49 AC 02 54 00 70 55 50 02 43 B5 01 02 A5 00 00  // I..T.pUP.C......
    AE20: 03 31 43 00 4A 62 6F 55 44 44 B5 01 54 08 CC 55  // .1C.JboUDD..T..U
    AE30: 51 C8 0D 25 CD 55 01 51 32 43 B5 01 0D 25 70 55  // Q..%.U.Q2C...%pU
    AE40: 01 3D A5 00 00 44 E1 02 01 0D A1 55 0F 01 43 B5  // .=...D.....U..C.
    AE50: 01 03 39 43 00 03 02 40 44 33 25 40 01 01 0A A1  // ..9C...@D3%@....
    AE60: 55 40 43 B5 01 54 00 A1 55 07 25 70 55 FE 07 0D  // U@C..T..U.%pU...
    AE70: 6F 55 FF 80 07 25 35 55 EF 54 20 C8 55 54 20 D8  // oU...%5U.T .UT .
    AE80: 55 43 B5 01 0C 01 01 06 04 00 37 00 00 42 29 00  // UC........7..B).
    AE90: 63 07 EA 00 63 01 25 00 63 00 C0 00 63 0B ED 00  // c...c.%.c...c...
    AEA0: 63 04 F2 00 5A 5A 43 05 01 02 65 00 10 52 4D 3D  // c...ZZC...e..RM=
    AEB0: 65 00 00 44 E6 00 02 65 00 11 52 04 4B E5 02 01  // e..D...e..R.K...
    AEC0: 49 E6 00 3D A5 00 00 49 57 00 03 01 00 00 02 65  // I..=...IW......e
    AED0: 00 0F 55 38 00 52 4D 02 02 00 00 02 65 00 0A 55  // ..U8.RM.....e..U
    AEE0: 08 02 52 4D 3D A5 00 00 49 70 00 02 65 00 0B 52  // ..RM=...Ip..e..R
    AEF0: 4D 43 79 00 02 65 00 0E 52 4D 43 AD 00 20 05 01  // MCy..e..RMC.. ..
    AF00: 64 00 00 00 02 05 01 14 1E 00 02 2C 21 01 00 03  // d..........,!...
    AF10: 01 00 00 02 02 00 40 52 0C 26 05 00 64 00 00 00  // ......@R.&..d...
    AF20: 02 02 01 40 02 02 00 00 02 65 00 01 55 08 02 52  // ...@.....e..U..R
    AF30: 4D 51 05 02 65 00 01 52 04 51 0A 02 65 00 09 52  // MQ..e..R.Q..e..R
    AF40: 4D 43 E6 00 02 65 00 12 52 04 4B E5 02 01 44 E6  // MC...e..R.K...D.
    AF50: 00 02 65 00 08 52 4D 02 65 00 00 52 04 3D A5 00  // ..e..RM.e..R.=..
    AF60: 00 49 E6 00 02 65 00 00 52 4D 3A 00 00 5B 43 E6  // .I...e..RM:..[C.
    AF70: 00 52 4D 43 E6 00 66 06 02 29 00 00 02 68 00 4E  // .RMC..f..)...h.N
    AF80: 00 02 8C 00 20 00 52 33 5B 02 29 00 00 52 33 5B  // .... .R3[.)..R3[
    AF90: 35 0B 02 02 08 00 37 00 00 3D 25 00 03 44 22 0B  // 5.....7..=%..D".
    AFA0: 66 FF 2D 0D 42 29 0B 56 00 40 03 21 40 00 15 25  // f.-.B).V.@.!@..%
    AFB0: 40 01 2D 0A 42 40 03 0C 48 00 00 3D 65 00 10 49  // @.-.B@..H..=e..I
    AFC0: 74 00 02 65 00 01 3D 25 00 04 45 22 0B 4A A5 F9  // t..e..=%..E".J..
    AFD0: 5D 01 44 22 0B 02 65 00 00 4A A5 15 5E 02 49 22  // ].D"..e..J..^.I"
    AFE0: 0B 0D 25 16 5E 01 07 05 15 5E FF FF FB FF 3D E5  // ..%.^....^....=.
    AFF0: 00 04 45 6D 00 4A A5 15 5E 01 44 22 0B 02 65 00  // ..Em.J..^.D"..e.
    B000: 01 43 22 0B 3D 25 00 04 48 85 00 03 05 00 01 01  // .C".=%..H.......
    B010: 01 01 43 C5 00 4A A5 F9 5D 01 44 7B 00 4A A5 15  // ..C..J..].D{.J..
    B020: 5E 02 49 22 0B 0D 25 16 5E 01 07 05 15 5E FF FF  // ^.I"..%.^....^..
    B030: FB FF 03 05 00 01 01 00 00 3D E5 00 01 44 C5 00  // .........=...D..
    B040: 03 05 00 01 01 00 00 3D E5 00 02 44 C5 00 03 05  // .......=...D....
    B050: 00 01 01 01 01 42 29 00 63 07 EF 00 63 0A DD 04  // .....B).c...c...
    B060: 63 01 4D 05 63 00 DA 06 63 09 7C 08 63 08 EC 09  // c.M.c...c.|.c...
    B070: 63 0B 9F 0A 63 0E 4D 0A 63 0F 0E 01 5A 5A 5B 01  // c...c.M.c...ZZ[.
    B080: 05 FD 5D 00 00 00 00 01 05 EE 5D 00 40 00 00 5C  // ..].......].@..\
    B090: 05 F0 5D FF FF 0F FF 00 00 40 00 43 22 0B 4A A5  // ..]......@.C".J.
    B0A0: F9 5D 01 49 22 0B 4A 25 00 5E 01 49 42 01 3C 25  // .].I".J%.^.IB.<%
    B0B0: F9 5D 00 49 42 01 3C 71 F9 5D 00 49 42 01 08 E5  // .].IB.<q.].IB...
    B0C0: 00 01 03 00 40 F1 5D 09 25 40 01 3E 39 40 00 44  // ....@.].%@.>9@.D
    B0D0: 22 0B 54 20 F9 5D 07 4D F1 5D DF FE 4A 65 F1 5D  // ".T .].M.]..Je.]
    B0E0: 40 49 4C 01 0D 05 03 5E 01 01 01 01 0D 25 00 5E  // @IL....^.....%.^
    B0F0: 01 0D A5 00 5E 20 0D 25 00 5E 01 0D 05 03 5E 01  // ....^ .%.^....^.
    B100: 01 01 01 03 39 40 00 09 25 40 01 5C 22 F1 5D FE  // ....9@..%@.\".].
    B110: 40 5C 65 00 5E C1 06 0D 25 02 5E 08 0D E5 00 5E  // @\e.^...%.^....^
    B120: A0 5C 05 06 5E BB BB FF FF 33 33 00 00 5C 05 03  // .\..^....33..\..
    B130: 5E F7 F7 F7 F7 02 02 02 02 66 07 2D 0C 42 0A 00  // ^........f.-.B..
    B140: 56 00 40 20 25 00 0C 2D 0A 42 40 03 24 40 09 00  // V.@ %..-.B@.$@..
    B150: 03 62 40 40 03 8A 40 40 5C 02 04 5E F8 F8 F8 F8  // .b@@..@@\..^....
    B160: 40 03 21 43 00 03 A2 46 44 3D A5 00 00 44 15 02  // @.!C...FD=...D..
    B170: 03 05 40 04 00 00 00 66 07 2D 0C 42 04 00 03 04  // ..@....f.-.B....
    B180: 41 00 00 3E 05 41 00 00 00 00 44 4C 02 4C A4 46  // A..>.A....DL.L.F
    B190: 06 00 49 0D 02 2D 0D 42 0C 00 43 EE 01 03 24 40  // ..I..-.B..C...$@
    B1A0: 07 00 43 4C 02 03 05 40 05 00 00 00 66 07 2D 0C  // ..CL...@....f.-.
    B1B0: 42 08 00 03 04 41 00 00 3E 05 41 00 00 00 00 44  // B....A..>.A....D
    B1C0: 4C 02 4C A4 46 04 00 49 42 02 2D 0D 42 44 00 43  // L.L.F..IB.-.BD.C
    B1D0: 23 02 2D 0D 42 08 00 03 24 40 05 00 15 05 40 0E  // #.-.B...$@....@.
    B1E0: 5C 02 00 5E FF 3F FE FF 40 07 65 00 5E FE 3D A5  // \..^.?..@.e.^.=.
    B1F0: 00 00 49 00 03 5C 05 0B 5E FF FF 8F FF 00 00 20  // ..I..\..^...... 
    B200: 00 0D 05 0C 5E 01 01 00 00 5C 05 0B 5E 0F 00 FF  // ....^....\..^...
    B210: FF 40 16 00 00 0D 05 0E 5E 00 00 00 01 01 05 07  // .@......^.......
    B220: 5E 05 00 66 66 01 05 0A 5E 02 00 00 00 01 05 09  // ^..ff...^.......
    B230: 5E F3 20 01 00 01 05 08 5E F3 DF 00 00 01 05 0D  // ^. .....^.......
    B240: 5E 00 00 00 00 5C 05 0B 5E FF FF F8 FF 00 00 00  // ^....\..^.......
    B250: 00 5C 05 0C 5E 8F FF FF FF 20 00 00 00 0D 05 0E  // .\..^.... ......
    B260: 5E 00 00 00 10 07 05 0C 5E FB FF FF FF 01 05 0F  // ^.......^.......
    B270: 5E 3E 00 08 00 01 05 10 5E 3E 00 18 24 01 05 11  // ^>......^>..$...
    B280: 5E 3E 00 00 00 01 05 12 5E 3E 00 34 00 43 90 03  // ^>......^>.4.C..
    B290: 5C 05 0B 5E FF FF 8F FF 00 00 10 00 0D 05 0C 5E  // \..^...........^
    B2A0: 01 01 00 00 5C 05 0B 5E 0F 00 FF FF 60 0A 00 00  // ....\..^....`...
    B2B0: 0D 05 0E 5E 00 00 00 01 01 05 07 5E 01 00 52 F8  // ...^.......^..R.
    B2C0: 54 00 0A 5E 01 05 09 5E E9 09 00 00 01 05 08 5E  // T..^...^.......^
    B2D0: 5C 0F 00 00 01 05 0D 5E 00 00 00 00 5C 05 0B 5E  // \......^....\..^
    B2E0: FF FF F8 FF 00 00 04 00 07 05 0C 5E 8F FF FF FF  // ...........^....
    B2F0: 0D 05 0E 5E 00 00 00 10 0D 05 0C 5E 04 00 00 00  // ...^.......^....
    B300: 01 05 0F 5E 3E 00 0C 00 01 05 10 5E 3E 00 80 88  // ...^>......^>...
    B310: 01 05 11 5E 3E 00 00 00 01 05 12 5E 3E 00 34 00  // ...^>......^>.4.
    B320: 0D A5 06 5E 08 0D 25 F3 5D 01 0D 65 F1 5D 20 4A  // ...^..%.]..e.] J
    B330: 65 F1 5D 40 49 9F 03 0D A5 F1 5D 01 07 25 00 5E  // e.]@I.....]..%.^
    B340: FE 07 05 03 5E FE FE FE FE 4A E5 00 5E 10 44 B9  // ....^....J..^.D.
    B350: 03 66 07 2D 0C 42 0C 00 03 04 40 00 00 3E 05 40  // .f.-.B....@..>.@
    B360: FF FF FF FF 44 EB 03 01 04 F4 5D 00 00 01 04 F5  // ....D.....].....
    B370: 5D 04 00 2D 0D 42 08 00 43 C8 03 01 05 F4 5D 38  // ]..-.B..C.....]8
    B380: 20 00 00 01 05 F5 5D 0C 00 00 00 56 00 01 4A 05  //  .....]....V..J.
    B390: 03 5E 20 20 20 20 44 24 04 51 02 2D 05 01 01 00  // .^    D$.Q.-....
    B3A0: 00 00 3E 05 01 A0 86 01 00 49 FE 03 01 25 F9 5D  // ..>......I...%.]
    B3B0: 03 43 22 0B 0D 05 00 5E 00 01 00 00 03 00 40 04  // .C"....^......@.
    B3C0: 5E 09 05 40 07 00 00 00 21 05 40 03 00 00 00 03  // ^..@....!.@.....
    B3D0: 05 41 21 20 00 00 2D 02 41 40 01 02 F4 5D 41 03  // .A! ..-.A@...]A.
    B3E0: 00 41 F5 5D 01 05 F4 5D 84 00 00 00 01 02 F5 5D  // .A.]...].......]
    B3F0: 41 03 05 41 22 20 00 00 2D 02 41 40 01 02 F4 5D  // A..A" ..-.A@...]
    B400: 41 03 00 41 F5 5D 01 05 F4 5D 85 00 00 00 01 02  // A..A.]...]......
    B410: F5 5D 41 3D 25 00 04 45 C0 04 03 00 40 00 5E 09  // .]A=%..E....@.^.
    B420: 05 40 00 C0 01 00 1B 05 40 0A 01 05 F4 5D 21 00  // .@......@....]!.
    B430: 00 00 03 00 41 F5 5D 09 25 41 0F 0F 22 41 40 0F  // ....A.].%A.."A@.
    B440: 25 41 80 01 05 F4 5D 21 00 00 00 01 02 F5 5D 41  // %A....]!......]A
    B450: 56 00 41 3D A5 00 00 44 CF 04 03 0D 41 01 01 5C  // V.A=...D....A..\
    B460: A2 0B 5E F8 41 0D 65 00 5E 01 43 22 0B 03 0A 46  // ..^.A.e.^.C"...F
    B470: 48 66 07 2D 0C 42 0A 00 56 00 40 20 25 00 0C 2D  // Hf.-.B..V.@ %..-
    B480: 0A 42 40 20 25 00 02 03 0A 48 40 01 04 2E 5D 00  // .B@ %....H@...].
    B490: 00 07 E5 2D 5D FC 03 0A 48 46 03 05 40 01 01 01  // ...-]...HF..@...
    B4A0: 01 3D 25 00 04 45 2F 05 4A A5 F9 5D 01 44 2F 05  // .=%..E/.J..].D/.
    B4B0: 4A A5 06 5E 01 49 2F 05 09 05 40 FF FF FE FE 0D  // J..^.I/...@.....
    B4C0: 02 03 5E 40 51 05 03 02 40 00 69 05 40 FF FF FF  // ..^@Q...@.i.@...
    B4D0: FF 07 02 03 5E 40 51 C8 51 C8 43 22 0B 4A 25 FC  // ....^@Q.Q.C".J%.
    B4E0: 5D 01 49 22 0B 3C 25 F9 5D 00 49 22 0B 4C 25 00  // ].I".<%.].I".L%.
    B4F0: 01 44 6C 05 0D 05 06 5E 04 00 00 00 4C 65 00 01  // .Dl....^....Le..
    B500: 44 7B 05 0D 05 06 5E 40 00 00 00 4C A5 00 01 44  // D{....^@...L...D
    B510: 8A 05 0D 05 06 5E 00 04 00 00 4C E5 00 01 44 99  // .....^....L...D.
    B520: 05 0D 05 06 5E 00 40 00 00 03 02 40 00 15 05 40  // ....^.@....@...@
    B530: 04 0D 02 03 5E 40 56 00 01 4A 25 FC 5D 01 49 22  // ....^@V..J%.].I"
    B540: 0B 03 02 40 00 15 05 40 05 03 00 41 03 5E 09 02  // ...@...@...A.^..
    B550: 41 40 09 05 40 20 20 20 20 3E 02 41 40 44 EB 05  // A@..@    >.A@D..
    B560: 51 02 2D 05 01 01 00 00 00 3E 05 01 A0 86 01 00  // Q.-......>......
    B570: 49 A9 05 01 25 F9 5D 04 43 22 0B 03 02 40 00 15  // I...%.].C"...@..
    B580: 05 40 04 69 05 40 FF FF FF FF 07 02 03 5E 40 56  // .@.i.@.......^@V
    B590: 00 01 4A 25 FC 5D 01 49 22 0B 03 02 40 00 15 05  // ..J%.].I"...@...
    B5A0: 40 05 03 00 41 03 5E 09 02 41 40 3E 05 41 00 00  // @...A.^..A@>.A..
    B5B0: 00 00 44 40 06 51 02 2D 05 01 01 00 00 00 3E 05  // ..D@.Q.-......>.
    B5C0: 01 A0 86 01 00 49 02 06 01 25 F9 5D 05 43 22 0B  // .....I...%.].C".
    B5D0: 56 00 01 4A 25 FC 5D 01 49 22 0B 4A 25 0C 5E 80  // V..J%.].I".J%.^.
    B5E0: 49 6E 06 51 02 2D 05 01 01 00 00 00 3E 05 01 A0  // In.Q.-......>...
    B5F0: 86 01 00 49 43 06 01 25 F9 5D 06 43 22 0B 03 0A  // ...IC..%.].C"...
    B600: 41 48 56 00 40 03 21 40 00 03 0A 48 40 0D 25 60  // AHV.@.!@...H@.%`
    B610: 01 01 51 0A 03 0A 48 41 0D 25 E8 5D 03 4A 25 E8  // ..Q...HA.%.].J%.
    B620: 5D 04 44 8D 06 0D 65 F1 5D 12 4A 65 F1 5D 04 44  // ].D...e.].Je.].D
    B630: 9A 06 4C 25 00 01 44 AE 06 0D 65 F0 5D 10 4C 65  // ..L%..D...e.].Le
    B640: 00 01 44 BA 06 0D 65 F0 5D 20 4C A5 00 01 44 C6  // ..D...e.] L...D.
    B650: 06 0D 65 F0 5D 40 4C E5 00 01 44 D2 06 0D 65 F0  // ..e.]@L...D...e.
    B660: 5D 80 01 71 F9 5D 00 43 22 0B 4A 05 06 5E 44 44  // ]..q.].C".J..^DD
    B670: 00 00 44 22 0B 07 65 F1 5D FD 07 25 E8 5D FD 03  // ..D"..e.]..%.]..
    B680: 0A 41 48 56 00 40 03 21 40 00 03 0A 48 40 07 25  // .AHV.@.!@...H@.%
    B690: 60 01 FE 03 0A 48 41 4C 25 00 01 44 16 07 07 05  // `....HAL%..D....
    B6A0: 06 5E FB FF FF FF 4C 65 00 01 44 25 07 07 05 06  // .^....Le..D%....
    B6B0: 5E BF FF FF FF 4C A5 00 01 44 34 07 07 05 06 5E  // ^....L...D4....^
    B6C0: FF FB FF FF 4C E5 00 01 44 43 07 07 05 06 5E FF  // ....L...DC....^.
    B6D0: BF FF FF 07 65 0C 5E FE 54 00 08 5E 54 00 09 5E  // ....e.^.T..^T..^
    B6E0: 03 00 40 06 5E 4C 25 00 01 44 67 07 5E 05 40 FC  // ..@.^L%..Dg.^.@.
    B6F0: FF FF FF 03 00 00 00 4C 65 00 01 44 79 07 5E 05  // .......Le..Dy.^.
    B700: 40 CF FF FF FF 30 00 00 00 4C A5 00 01 44 8B 07  // @....0...L...D..
    B710: 5E 05 40 FF FC FF FF 00 03 00 00 4C E5 00 01 44  // ^.@........L...D
    B720: 9D 07 5E 05 40 FF CF FF FF 00 30 00 00 3C 02 06  // ..^.@.....0..<..
    B730: 5E 40 44 51 08 01 02 06 5E 40 03 02 40 00 15 05  // ^@DQ....^@..@...
    B740: 40 04 0D 02 03 5E 40 56 00 01 4A 25 FC 5D 01 49  // @....^@V..J%.].I
    B750: FC 07 03 02 40 00 15 05 40 05 03 00 41 03 5E 09  // ....@...@...A.^.
    B760: 02 41 40 09 05 40 20 20 20 20 3E 02 41 40 44 FC  // .A@..@    >.A@D.
    B770: 07 51 02 2D 05 01 01 00 00 00 3E 05 01 A0 86 01  // .Q.-......>.....
    B780: 00 49 BA 07 01 25 F9 5D 07 43 22 0B 03 02 40 00  // .I...%.].C"...@.
    B790: 15 05 40 04 69 05 40 FF FF FF FF 07 02 03 5E 40  // ..@.i.@.......^@
    B7A0: 56 00 01 4A 25 FC 5D 01 49 51 08 03 02 40 00 15  // V..J%.].IQ...@..
    B7B0: 05 40 05 03 00 41 03 5E 09 02 41 40 3E 05 41 00  // .@...A.^..A@>.A.
    B7C0: 00 00 00 44 51 08 51 02 2D 05 01 01 00 00 00 3E  // ...DQ.Q.-......>
    B7D0: 05 01 A0 86 01 00 49 13 08 01 25 F9 5D 08 43 22  // ......I...%.].C"
    B7E0: 0B 03 02 40 00 15 05 40 02 69 05 40 FF FF FF FF  // ...@...@.i.@....
    B7F0: 07 02 03 5E 40 03 02 40 00 15 05 40 01 09 05 40  // ...^@..@...@...@
    B800: 02 02 02 02 0D 02 03 5E 40 43 22 0B 4A 25 FC 5D  // .......^@C".J%.]
    B810: 01 49 22 0B 56 00 40 20 25 00 02 03 0A 41 48 03  // .I".V.@ %....AH.
    B820: 02 48 40 0D E5 2E 5D 10 03 0A 48 41 3D A5 00 00  // .H@...]...HA=...
    B830: 44 A8 08 0D 65 F0 5D F0 0D A5 F0 5D 01 0D A5 E9  // D...e.]....]....
    B840: 5D 01 3D A5 00 00 44 C4 08 4A 05 06 5E 33 33 00  // ].=...D..J..^33.
    B850: 00 44 D5 09 03 02 40 00 15 05 40 01 69 05 40 FF  // .D....@...@.i.@.
    B860: FF FF FF 07 02 03 5E 40 03 02 40 00 15 05 40 02  // ......^@..@...@.
    B870: 09 05 40 04 04 04 04 0D 02 03 5E 40 03 00 40 06  // ..@.......^@..@.
    B880: 5E 4C 25 00 01 44 FF 08 09 05 40 FC FF FF FF 4C  // ^L%..D....@....L
    B890: 65 00 01 44 0D 09 09 05 40 CF FF FF FF 4C A5 00  // e..D....@....L..
    B8A0: 01 44 1B 09 09 05 40 FF FC FF FF 4C E5 00 01 44  // .D....@....L...D
    B8B0: 29 09 09 05 40 FF CF FF FF 01 02 06 5E 40 03 02  // )...@.......^@..
    B8C0: 40 00 15 05 40 04 0D 02 03 5E 40 56 00 01 4A 25  // @...@....^@V..J%
    B8D0: FC 5D 01 49 22 0B 03 02 40 00 15 05 40 05 03 00  // .].I"...@...@...
    B8E0: 41 03 5E 09 02 41 40 09 05 40 20 20 20 20 3E 02  // A.^..A@..@    >.
    B8F0: 41 40 44 80 09 51 02 2D 05 01 01 00 00 00 3E 05  // A@D..Q.-......>.
    B900: 01 A0 86 01 00 49 3E 09 01 25 F9 5D 09 43 22 0B  // .....I>..%.].C".
    B910: 03 02 40 00 15 05 40 04 69 05 40 FF FF FF FF 07  // ..@...@.i.@.....
    B920: 02 03 5E 40 56 00 01 4A 25 FC 5D 01 49 22 0B 03  // ..^@V..J%.].I"..
    B930: 02 40 00 15 05 40 05 03 00 41 03 5E 09 02 41 40  // .@...@...A.^..A@
    B940: 3E 05 41 00 00 00 00 44 D5 09 51 02 2D 05 01 01  // >.A....D..Q.-...
    B950: 00 00 00 3E 05 01 A0 86 01 00 49 97 09 01 25 F9  // ...>......I...%.
    B960: 5D 0A 43 22 0B 03 02 40 00 15 05 40 03 09 05 40  // ].C"...@...@...@
    B970: 08 08 08 08 0D 02 03 5E 40 43 22 0B 03 02 40 00  // .......^@C"...@.
    B980: 15 05 40 03 69 05 40 FF FF FF FF 07 02 03 5E 40  // ..@.i.@.......^@
    B990: 07 A5 F0 5D FE 4C 25 00 01 44 11 0A 07 65 F0 5D  // ...].L%..D...e.]
    B9A0: EF 4C 65 00 01 44 1D 0A 07 65 F0 5D DF 4C A5 00  // .Le..D...e.].L..
    B9B0: 01 44 29 0A 07 65 F0 5D BF 4C E5 00 01 44 35 0A  // .D)..e.].L...D5.
    B9C0: 07 65 F0 5D 7F 07 A5 E9 5D FE 56 00 40 20 25 00  // .e.]....].V.@ %.
    B9D0: 02 03 0A 48 40 07 E5 2E 5D EF 43 22 0B 03 21 43  // ...H@...].C"..!C
    B9E0: 00 03 A2 46 44 66 07 2D 0C 42 04 00 3D A5 00 03  // ...FDf.-.B..=...
    B9F0: 44 71 0A 66 07 2D 0C 42 06 00 3D A5 00 02 49 22  // Dq.f.-.B..=...I"
    BA00: 0B 03 04 41 00 00 3E 05 41 00 00 00 00 44 22 0B  // ...A..>.A....D".
    BA10: 3D 02 01 41 46 8F 0A 4C A4 46 06 00 49 97 0A 2D  // =..AF..L.F..I..-
    BA20: 0D 42 0C 00 43 71 0A 03 04 41 08 00 43 FE 0A 08  // .B..Cq...A..C...
    BA30: A5 00 1B 66 07 2D 0C 42 08 00 03 21 43 00 03 A2  // ...f.-.B...!C...
    BA40: 46 44 03 04 41 00 00 3E 05 41 00 00 00 00 44 22  // FD..A..>.A....D"
    BA50: 0B 3D 02 01 41 46 D0 0A 4C A4 46 04 00 49 D8 0A  // .=..AF..L.F..I..
    BA60: 2D 0D 42 44 00 43 B2 0A 2D 0D 42 08 00 3D A4 00  // -.BD.C..-.B..=..
    BA70: 00 00 44 F9 0A 03 24 41 00 00 3E 25 41 18 44 F9  // ..D...$A..>%A.D.
    BA80: 0A 2D 0D 42 06 00 43 DD 0A 03 04 41 01 00 5C 02  // .-.B..C....A..\.
    BA90: 0F 5E 00 00 FC FF 41 5C 02 10 5E 00 00 FC FF 41  // .^....A\..^....A
    BAA0: 5C 02 11 5E 00 00 FC FF 41 5C 02 12 5E 00 00 FC  // \..^....A\..^...
    BAB0: FF 41 3A 00 00 5B 7A 0C 00 00 00 D8 00 B0 01 88  // .A:..[z.........
    BAC0: 02 60 03 38 04 00 1F 02 01 02 00 00 37 00 00 3D  // .`.8........7..=
    BAD0: 0D 00 00 00 44 CE 01 56 00 41 03 21 41 01 09 25  // ....D..V.A.!A..%
    BAE0: 41 0F 15 0D 41 02 03 0A 40 42 66 FF 2D 0D 42 07  // A...A...@Bf.-.B.
    BAF0: 02 2D 0A 42 41 03 0C 48 02 00 0D A5 90 5D 01 54  // .-.BA..H.....].T
    BB00: 08 90 5D 03 0C 48 00 00 03 F9 41 01 15 3D 41 04  // ..]..H....A..=A.
    BB10: 5C BA 10 54 8F 41 03 0A 42 40 4A 25 10 54 01 49  // \..T.A..B@J%.T.I
    BB20: 81 00 0D 0D 10 54 01 01 0D 25 10 54 10 4A 25 10  // .....T...%.T.J%.
    BB30: 54 20 44 67 00 07 25 10 54 EF 4A 25 10 54 20 49  // T Dg..%.T.J%.T I
    BB40: 74 00 0D 25 13 54 40 56 00 41 03 09 41 00 3B 02  // t..%.T@V.A..A.;.
    BB50: 41 03 3B 41 00 1B 25 41 04 01 A2 11 54 41 03 69  // A.;A..%A....TA.i
    BB60: 41 01 15 2D 41 04 01 2A 11 54 41 56 00 40 0F E5  // A..-A..*.TAV.@..
    BB70: 40 80 03 73 40 00 01 02 16 54 40 56 00 40 03 6B  // @..s@....T@V.@.k
    BB80: 40 00 01 02 16 54 40 03 63 40 00 01 02 16 54 40  // @....T@.c@....T@
    BB90: 03 7B 40 00 09 65 40 0F 01 02 16 54 40 3E 25 41  // .{@..e@....T@>%A
    BBA0: 04 47 10 01 33 25 41 04 2D 05 46 04 00 00 00 03  // .G..3%A.-.F.....
    BBB0: 63 40 00 01 02 16 54 40 03 6B 40 00 01 02 16 54  // c@....T@.k@....T
    BBC0: 40 03 73 40 00 01 02 16 54 40 03 7B 40 00 01 02  // @.s@....T@.{@...
    BBD0: 16 54 40 43 D7 00 0D 25 13 54 02 0D 25 11 54 01  // .T@C...%.T..%.T.
    BBE0: 03 29 40 01 21 25 40 0A 2D 25 40 64 4A 25 14 54  // .)@.!%@.-%@dJ%.T
    BBF0: 01 49 42 01 51 14 33 25 40 01 3E 25 40 00 49 26  // .IB.Q.3%@.>%@.I&
    BC00: 01 02 65 01 01 43 CA 01 4A 05 14 54 F0 8F FF 00  // ..e..C..J..T....
    BC10: 44 54 01 02 65 01 02 43 CA 01 01 05 16 54 01 00  // DT..e..C.....T..
    BC20: 00 80 03 00 40 16 54 02 6A 01 40 02 B8 01 14 54  // ....@.T.j.@....T
    BC30: 08 A5 01 1F 3D A5 01 00 46 7C 01 02 65 01 03 43  // ....=...F|..e..C
    BC40: CA 01 32 A5 01 01 3D 8D 00 00 00 44 CA 01 3D A5  // ..2...=....D..=.
    BC50: 01 00 44 CA 01 03 31 41 01 03 19 40 00 56 18 40  // ..D...1A...@.V.@
    BC60: 3B 02 40 03 28 40 16 54 03 68 40 16 54 03 A8 40  // ;.@.(@.T.h@.T..@
    BC70: 16 54 03 E8 40 16 54 04 02 00 40 3E 25 41 04 47  // .T..@.T...@>%A.G
    BC80: CA 01 33 25 41 04 2D 05 46 04 00 00 00 43 9D 01  // ..3%A.-.F....C..
    BC90: 3A 00 00 5B 66 FF 2D 0D 42 07 02 03 0C 48 00 00  // :..[f.-.B....H..
    BCA0: 01 8D 18 54 32 00 01 05 19 54 7A 1C 02 00 01 05  // ...T2....Tz.....
    BCB0: 1A 54 10 11 3D 10 2D 0D 42 04 00 2C 25 00 01 3D  // .T..=.-.B..,%..=
    BCC0: 25 00 06 49 D5 01 56 08 48 5B 7A 18 00 00 00 00  // %..I..V.H[z.....
    BCD0: 00 1C 00 04 00 38 00 08 00 54 00 0C 00 70 00 10  // .....8...T...p..
    BCE0: 00 8C 00 14 00 00 5C 00 01 02 00 04 02 25 01 04  // ......\......%..
    BCF0: 03 31 41 00 09 0D 41 0F 00 15 0D 41 01 66 FF 2D  // .1A...A....A.f.-
    BD00: 0D 42 50 00 2D 0A 42 41 03 0C 48 00 00 07 A5 90  // .BP.-.BA..H.....
    BD10: 5D FE 01 0D 90 5D 11 11 50 02 4A 0D 93 5D 01 00  // ]....]..P.J..]..
    BD20: 49 41 00 02 25 01 13 54 08 90 5D 54 00 92 5D 3A  // IA..%..T..]T..]:
    BD30: 00 00 5B 7A 0C 00 00 00 04 00 08 00 0C 00 10 00  // ..[z............
    BD40: 14 00 5B 01 02 01 04 04 37 00 00 42 21 00 63 07  // ..[.....7..B!.c.
    BD50: 29 00 63 03 4E 00 63 02 60 00 63 04 84 00 63 0C  // ).c.N.c.`.c...c.
    BD60: 12 01 63 0D 1B 01 5A 5A 43 5A 01 01 0D 45 5D 9F  // ..c...ZZCZ...E].
    BD70: 0F 66 06 01 24 47 5D 30 00 01 4C 47 5D 31 00 03  // .f..$G]0..LG]1..
    BD80: 24 46 3B 00 3E 25 46 00 44 5A 01 54 20 47 5D 5B  // $F;.>%F.DZ.T G][
    BD90: 0D E5 47 5D 01 5C 05 43 5D FF FF FF FD 11 00 03  // ..G].\.C].......
    BDA0: 00 5B 0D E5 47 5D 01 4A 25 44 5D 02 44 72 00 0D  // .[..G].J%D].Dr..
    BDB0: A5 43 5D 01 0D A5 43 5D 02 5C 05 43 5D EF FF FF  // .C]...C].\.C]...
    BDC0: FD 01 00 00 00 5B 4A 05 53 00 00 02 00 00 44 94  // .....[J.S.....D.
    BDD0: 00 0D 25 4B 5D 01 3D 8D 00 00 00 44 11 01 03 05  // ..%K].=....D....
    BDE0: 46 80 F0 FA 02 56 00 41 03 19 41 00 21 05 41 FF  // F....V.A..A.!.A.
    BDF0: 0F 00 00 27 02 46 40 3E 05 41 00 00 00 00 44 C4  // ...'.F@>.A....D.
    BE00: 00 2D 0D 40 01 00 01 8A 45 5D 40 56 00 41 03 19  // .-.@....E]@V.A..
    BE10: 41 00 21 02 40 41 27 02 46 40 01 A5 4A 5D 0C 01  // A.!.@A'.F@..J]..
    BE20: 0A 4A 5D 40 15 05 40 04 56 00 41 03 29 41 00 2D  // .J]@..@.V.A.)A.-
    BE30: 0D 41 01 00 21 02 40 41 1B 05 40 08 01 0A 48 5D  // .A..!.@A..@...H]
    BE40: 40 0D E5 48 5D C0 07 25 4B 5D FE 4A 65 4B 5D 01  // @..H]..%K].JeK].
    BE50: 49 09 01 5B 01 05 43 5D 00 00 03 00 5B 0D E5 47  // I..[..C]....[..G
    BE60: 5D 01 4A 05 43 5D 01 00 00 00 44 41 01 4A 05 43  // ].J.C]....DA.J.C
    BE70: 5D 10 00 00 00 49 4E 01 4A 05 44 5D 01 00 00 00  // ]....IN.J.D]....
    BE80: 49 36 01 5C 05 43 5D FF FF FE FF 00 00 02 00 5B  // I6.\.C]........[
    BE90: 5C 05 43 5D EF FF FD FD 01 00 00 00 5B 00 D0 00  // \.C]........[...
    BEA0: 02 01 00 00 01 05 00 C2 00 00 00 E0 01 05 3E 26  // ..............>&
    BEB0: 43 00 00 00 5C 05 7E 12 38 FF FF FF 43 00 00 00  // C...\.~.8...C...
    BEC0: 5C 05 7E 18 F8 FF FF FF 03 00 00 00 5C 05 7F 12  // \.~.........\...
    BED0: F8 FF FF FF 03 00 00 00 5C 05 7F 18 F8 FF FF FF  // ........\.......
    BEE0: 03 00 00 00 01 05 17 74 2D 0B 15 00 03 00 40 26  // .......t-.....@&
    BEF0: 74 3E 05 40 F9 00 00 00 49 70 00 01 05 0B F0 00  // t>.@....Ip......
    BF00: 00 12 00 01 05 25 CE 30 21 21 03 43 CF 00 3E 05  // .....%.0!!.C..>.
    BF10: 40 F6 00 00 00 49 8D 00 01 05 0B F0 00 00 21 00  // @....I........!.
    BF20: 01 05 25 CE 23 01 10 23 43 CF 00 3E 05 40 F0 00  // ..%.#..#C..>.@..
    BF30: 00 00 49 AA 00 01 05 0B F0 00 00 33 00 01 05 25  // ..I........3...%
    BF40: CE 31 20 31 20 43 CF 00 3E 05 40 0F 00 00 00 49  // .1 1 C..>.@....I
    BF50: C7 00 01 05 0B F0 00 00 CC 00 01 05 25 CE 20 31  // ............%. 1
    BF60: 20 31 43 CF 00 01 05 25 CE 20 31 20 13 5B AF 00  //  1C....%. 1 .[..
    BF70: 03 02 0C 00 37 00 00 03 01 00 00 03 01 01 01 03  // ....7...........
    BF80: 01 02 02 52 16 03 01 46 00 1B 05 46 08 02 02 00  // ...R...F...F....
    BF90: 00 02 02 01 01 02 02 02 02 3D 65 02 00 49 36 00  // .........=e..I6.
    BFA0: 2C 22 02 46 3D E5 02 00 49 41 00 2C A2 02 46 3D  // ,".F=...IA.,..F=
    BFB0: 65 02 02 49 48 00 03 01 40 03 09 05 40 00 00 00  // e..IH...@...@...
    BFC0: FC 3E 05 40 00 00 00 D0 49 6E 00 01 05 63 C0 00  // .>.@....In...c..
    BFD0: 00 00 40 55 00 00 55 20 02 43 72 00 54 00 63 C0  // ..@U..U .Cr.T.c.
    BFE0: 01 01 64 C0 00 56 00 40 03 21 40 02 01 02 65 C0  // ..d..V.@.!@...e.
    BFF0: 40 01 01 66 C0 01 03 31 40 02 01 02 67 C0 40 01  // @..f...1@...g.@.
    C000: 01 E8 C0 03 3D 65 02 01 44 A6 00 3D E5 02 01 44  // ....=e..D..=...D
    C010: A6 00 51 02 4A E5 A0 21 80 49 A6 00 5B 00 B2 01  // ..Q.J..!.I..[...
    C020: 02 02 00 00 37 00 00 3D 25 01 01 44 8D 00 3D 25  // ....7..=%..D..=%
    C030: 01 02 44 8E 00 3D 25 01 03 44 33 00 3D 25 01 00  // ..D..=%..D3.=%..
    C040: 49 93 01 3D 05 00 00 00 00 00 49 5E 00 3A 00 00  // I..=......I^.:..
    C050: 5B 52 3C 03 00 40 24 01 3E F9 40 00 44 5A 00 4A  // [R<..@$.>.@.DZ.J
    C060: A5 24 01 10 44 41 00 03 F9 40 00 01 02 24 01 40  // .$..DA...@...$.@
    C070: 4A A5 24 01 10 44 52 00 55 38 00 5B 54 20 A4 53  // J.$..DR.U8.[T .S
    C080: 52 3C 03 00 40 24 01 3E 39 40 00 44 89 00 4A A5  // R<..@$.>9@.D..J.
    C090: 24 01 08 44 70 00 03 39 40 00 01 02 24 01 40 4A  // $..Dp..9@...$.@J
    C0A0: A5 24 01 08 44 81 00 55 38 00 5B 5B 66 FF 2D 0D  // .$..D..U8.[[f.-.
    C0B0: 42 9A 01 56 00 41 03 39 41 01 15 25 41 02 2D 0A  // B..V.A.9A..%A.-.
    C0C0: 42 41 3D 65 01 0B 49 01 01 20 05 00 64 00 00 00  // BA=e..I.. ..d...
    C0D0: 03 0C 48 02 00 03 00 41 40 01 0F 25 41 10 09 0D  // ..H....A@..%A...
    C0E0: 41 DF FF 03 0C 48 00 00 4A 05 01 50 01 00 00 00  // A....H..J..P....
    C0F0: 44 EA 00 03 0C 48 02 00 3C 02 41 01 40 49 EA 00  // D....H..<.A.@I..
    C100: 3C 02 40 01 41 44 93 01 03 0C 48 02 00 07 25 40  // <.@.AD....H...%@
    C110: 01 EF 01 02 41 01 40 01 0A 40 01 41 43 93 01 56  // ....A.@..@.AC..V
    C120: 00 40 03 8D 40 0C 00 3D 65 01 18 44 24 01 03 8D  // .@..@..=e..D$...
    C130: 40 3E 00 3D 65 01 19 44 24 01 03 A9 40 01 33 A5  // @>.=e..D$...@.3.
    C140: 40 14 03 31 40 01 09 25 40 03 15 25 40 04 0F 0D  // @..1@..%@..%@...
    C150: 40 01 01 56 00 41 03 29 41 01 33 25 41 14 03 0C  // @..V.A.)A.3%A...
    C160: 48 00 00 4A 05 01 50 01 00 00 00 44 71 01 03 0C  // H..J..P....Dq...
    C170: 48 02 00 4A 25 40 01 10 49 71 01 3C 22 43 01 41  // H..J%@..Iq.<"C.A
    C180: 49 71 01 03 1A 48 40 3C 0A 00 01 40 44 93 01 03  // Iq...H@<...@D...
    C190: 1A 48 40 07 25 00 01 FE 03 0C 48 02 00 01 22 43  // .H@.%.....H..."C
    C1A0: 01 41 07 0D 40 01 EF FF 03 1A 48 40 01 0A 00 01  // .A..@.....H@....
    C1B0: 40 3A 00 00 5B 7A 18 00 00 00 00 00 80 00 04 00  // @:..[z..........
    C1C0: 00 01 08 00 80 01 0C 00 00 02 10 00 80 02 14 00  // ................
    C1D0: E7 00 01 08 08 00 03 01 00 00 02 05 00 05 00 01  // ................
    C1E0: 00 52 29 20 05 00 64 00 00 00 03 02 46 40 02 02  // .R) ..d.....F@..
    C1F0: 00 00 03 01 00 00 55 38 00 03 05 40 00 32 00 00  // ......U8...@.2..
    C200: 3D 05 00 00 00 00 00 44 64 00 03 02 40 46 27 01  // =......Dd...@F'.
    C210: 40 00 3E 05 40 9C 18 00 00 47 53 00 03 05 40 00  // @.>.@....GS...@.
    C220: 32 00 00 3E 05 40 C8 00 00 00 46 64 00 03 05 40  // 2..>.@....Fd...@
    C230: C8 00 00 00 66 FF 2D 0D 42 C7 00 3E 0C 40 02 00  // ....f.-.B..>.@..
    C240: 47 7B 00 2D 0D 42 08 00 43 6B 00 33 0C 40 00 00  // G{.-.B..Ck.3.@..
    C250: 03 0C 01 06 00 3E 0D 01 19 00 49 9A 00 27 0D 40  // .....>....I..'.@
    C260: 32 00 21 0D 40 02 00 43 9F 00 27 0C 40 06 00 2D  // 2.!.@..C..'.@..-
    C270: 0C 40 04 00 02 E2 00 40 33 0C 40 04 00 21 0C 40  // .@.....@3.@..!.@
    C280: 06 00 2D 0C 40 00 00 27 02 46 40 02 0A 00 40 02  // ..-.@..'.F@...@.
    C290: B2 00 40 5B 7A 20 00 C8 00 40 06 08 00 19 00 40  // ..@[z ...@.....@
    C2A0: 06 80 0C 40 00 32 00 80 0C 38 18 60 00 64 00 00  // ...@.2...8.`.d..
    C2B0: 32 00 32 7F 00 64 00 00 CB 00 01 01 00 00 37 00  // 2.2..d........7.
    C2C0: 00 3D 65 00 01 44 61 00 56 00 40 20 25 00 10 03  // .=e..Da.V.@ %...
    C2D0: 0A 48 40 07 25 8F 4F FD 4A 25 8F 4F 04 49 20 00  // .H@.%.O.J%.O.I .
    C2E0: 52 14 07 25 46 50 FE 4A 65 46 50 01 49 2F 00 03  // R..%FP.JeFP.I/..
    C2F0: 21 40 00 21 0D 40 DC 00 03 0A 48 40 07 25 B4 3A  // !@.!.@....H@.%.:
    C300: FE 56 00 40 03 21 40 00 21 0D 40 6B 01 03 0A 48  // .V.@.!@.!.@k...H
    C310: 40 07 25 85 41 EF 43 C7 00 56 00 40 20 25 00 10  // @.%.A.C..V.@ %..
    C320: 03 0A 48 40 0D 25 8F 4F 02 4A 25 8F 4F 04 44 71  // ..H@.%.O.J%.O.Dq
    C330: 00 52 14 0D 25 46 50 01 4A 65 46 50 01 44 80 00  // .R..%FP.JeFP.D..
    C340: 56 00 40 03 21 40 00 21 0D 40 DC 00 03 0A 48 40  // V.@.!@.!.@....H@
    C350: 0D 25 B4 3A 01 56 00 40 03 21 40 00 21 0D 40 6B  // .%.:.V.@.!@.!.@k
    C360: 01 03 0A 48 40 0D 25 85 41 10 56 00 40 03 21 40  // ...H@.%.A.V.@.!@
    C370: 00 21 0D 40 5A 00 03 0A 48 40 0D 25 4C 4D 01 3A  // .!.@Z...H@.%LM.:
    C380: 00 00 5B 00 24 00 01 01 00 00 37 00 00 03 00 41  // ..[.$.....7....A
    C390: E3 0D 33 05 41 01 00 00 00 1B 05 41 0B 01 02 06  // ..3.A......A....
    C3A0: 00 41 0D 25 1F 0E 03 5B C8 00 02 01 D6 09 80 02  // .A.%...[........
    C3B0: A0 00 E0 01 2D 00 10 00 60 00 0A 00 02 00 00 00  // ....-...`.......
    C3C0: 00 00 08 08 06 00 12 3C A0 0F 20 03 00 01 58 02  // .......<.. ...X.
    C3D0: 1C 00 28 00 80 00 01 00 04 00 00 00 00 00 00 00  // ..(.............
    C3E0: 00 00 6A 3C 64 19 00 04 40 01 00 03 26 00 18 00  // ..j<d...@...&...
    C3F0: 88 00 03 00 06 00 00 00 00 00 00 00 06 00 55 3C  // ..............U<
    C400: 30 2A 00 05 08 02 C0 03 28 00 60 00 70 00 01 00  // 0*......(.`.p...
    C410: 03 00 00 00 00 00 00 00 00 00 E9 3C 30 2A 00 05  // ...........<0*..
    C420: 98 01 00 04 2A 00 30 00 70 00 01 00 03 00 00 00  // ....*.0.p.......
    C430: 00 00 00 00 00 00 EA 3C 8F 2F 78 05 D0 01 1A 04  // .......<./x.....
    C440: 27 00 58 00 90 00 03 00 04 00 00 00 00 00 00 00  // '.X.............
    C450: 02 00 EB 3C 48 3F 40 06 30 02 B0 04 32 00 40 00  // ...<H?@.0...2.@.
    C460: C0 00 01 00 03 00 00 00 00 00 00 00 00 00 EC 3C  // ...............<
    C470: 34 00 02 01 00 00 00 00 00 2A 00 2A 00 00 2A 2A  // 4........*.*..**
    C480: 2A 00 00 2A 00 2A 2A 15 00 2A 2A 2A 15 15 15 15  // *..*.**..***....
    C490: 15 3F 15 3F 15 15 3F 3F 3F 15 15 3F 15 3F 3F 3F  // .?.?..???..?.???
    C4A0: 15 3F 3F 3F 5C 00 02 01 00 00 00 00 00 00 00 00  // .???\...........
    C4B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    C4C0: 06 00 00 00 C8 00 00 00 00 00 34 21 00 00 B8 0B  // ..........4!....
    C4D0: 00 00 00 00 7D 00 00 01 00 00 00 00 00 FF FF 00  // ....}...........
    C4E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    C4F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    C500: 0C 00 02 01 00 00 00 00 80 00 00 00 74 00 01 01  // ............t...
    C510: 10 01 06 12 11 01 16 12 13 01 06 6A 14 01 16 6A  // ...........j...j
    C520: 16 01 06 55 17 01 16 55 19 01 06 EA 1A 01 16 EA  // ...U...U........
    C530: 65 01 16 E9 66 01 0A E9 21 01 0A 12 22 01 0A 6A  // e...f...!..."..j
    C540: 23 01 0A 55 24 01 0A EA 45 01 16 EB 46 01 0A EB  // #..U$...E...F...
    C550: 75 01 16 EC 76 01 0A EC D2 01 16 70 D4 01 0A 70  // u...v......p...p
    C560: D8 01 16 71 D9 01 0A 71 E2 01 16 72 E4 01 0A 72  // ...q...q...r...r
    C570: E8 01 16 73 E9 01 0A 73 F5 01 16 74 F6 01 0A 74  // ...s...s...t...t
    C580: 14 00 02 01 02 00 08 00 80 00 00 02 00 04 00 08  // ................
    C590: 40 00 FF FF A8 00 01 04 8A 06 05 00 14 31 58 00  // @............1X.
    C5A0: 20 21 00 00 85 00 00 00 02 00 00 00 13 31 61 00  //  !...........1a.
    C5B0: 1E 22 00 00 8C 00 00 00 08 00 00 00 13 32 6A 00  // ."...........2j.
    C5C0: 1E 21 00 00 93 00 00 00 80 00 00 00 13 33 73 00  // .!...........3s.
    C5D0: 21 21 00 00 9A 00 00 00 00 02 00 00 13 34 7C 00  // !!...........4|.
    C5E0: 21 22 00 00 A1 00 00 00 00 04 00 00 01 04 90 00  // !"..............
    C5F0: 02 04 01 00 FF 01 04 91 00 02 04 02 00 FF 01 04  // ................
    C600: 92 00 02 04 03 00 FF 01 04 94 00 02 04 05 00 FF  // ................
    C610: 01 04 93 00 02 04 04 00 FF 14 06 0F 00 00 00 FF  // ................
    C620: 14 06 0F 00 00 00 FF 14 06 0F 00 00 00 FF 14 06  // ................
    C630: 0F 00 00 00 FF 14 06 0F 00 00 00 FF 05 00 01 01  // ................
    C640: 00 00 38 00 04 03 04 00 00 00 24 F4 00 00 10 27  // ..8.......$....'
    C650: 88 13 00 00 00 00 00 00 00 00 C2 01 4E 0C 01 01  // ............N...
    C660: 00 00 55 00 00 00 10 27 00 00 00 02 05 01 00 06  // ..U....'........
    C670: 06 00 00 00 00 00 00 00 00 00 02 03 05 03 0E 00  // ................
    C680: 36 00 46 00 6A 02 B2 02 30 75 00 00 0C 00 3F 05  // 6.F.j...0u....?.
    C690: 3A 40 00 00 40 9C 00 00 0C 00 3F 05 3E 00 00 00  // :@..@.....?.>...
    C6A0: FF FF FF 00 0C 00 3F 05 F3 80 00 00 00 00 00 00  // ......?.........
    C6B0: FF FF FF 00 0C 00 3F 05 3E 00 00 00 00 00 00 00  // ......?.>.......
    C6C0: 48 3F 00 00 04 00 44 00 00 16 00 00 00 04 01 16  // H?....D.........
    C6D0: 00 00 00 04 02 16 00 00 00 04 03 16 00 00 00 04  // ................
    C6E0: 08 16 00 00 00 04 09 16 00 00 00 04 0A 16 00 00  // ................
    C6F0: 00 04 10 16 00 00 00 04 11 16 00 00 00 04 18 16  // ................
    C700: 00 00 00 04 78 69 00 00 04 00 44 00 00 16 00 00  // ....xi....D.....
    C710: 00 04 01 16 00 00 00 04 02 16 00 00 00 04 03 16  // ................
    C720: 00 00 00 04 08 16 00 00 00 04 09 16 00 00 00 04  // ................
    C730: 0A 16 00 00 00 04 10 16 00 00 00 04 11 16 00 00  // ................
    C740: 00 04 18 16 00 00 00 04 F0 D2 00 00 04 00 44 00  // ..............D.
    C750: 00 1E 00 00 00 04 01 1E 00 00 00 04 02 1E 00 00  // ................
    C760: 00 04 03 1E 00 00 00 04 08 1E 00 00 00 04 09 1E  // ................
    C770: 00 00 00 04 0A 1E 00 00 00 04 10 1E 00 00 00 04  // ................
    C780: 11 1E 00 00 00 04 18 1E 00 00 00 04 68 3C 01 00  // ............h<..
    C790: 04 00 44 00 00 1E 00 00 00 04 01 1E 00 00 00 04  // ..D.............
    C7A0: 02 1E 00 00 00 04 03 1E 00 00 00 04 08 1E 00 00  // ................
    C7B0: 00 04 09 1E 00 00 00 04 0A 1E 00 00 00 04 10 1E  // ................
    C7C0: 00 00 00 04 11 1E 00 00 00 04 18 1E 00 00 00 04  // ................
    C7D0: 48 3F 00 00 3F 00 44 00 00 2C 00 00 00 04 01 2C  // H?..?.D..,.....,
    C7E0: 00 00 00 04 02 2C 00 00 00 04 03 2C 00 00 00 04  // .....,.....,....
    C7F0: 08 2C 00 00 00 04 09 2C 00 00 00 04 0A 2C 00 00  // .,.....,.....,..
    C800: 00 04 10 2C 00 00 00 04 11 2C 00 00 00 04 18 2C  // ...,.....,.....,
    C810: 00 00 00 04 78 69 00 00 3F 00 44 00 00 2C 00 00  // ....xi..?.D..,..
    C820: 00 04 01 2C 00 00 00 04 02 2C 00 00 00 04 03 2C  // ...,.....,.....,
    C830: 00 00 00 04 08 2C 00 00 00 04 09 2C 00 00 00 04  // .....,.....,....
    C840: 0A 2C 00 00 00 04 10 2C 00 00 00 04 11 2C 00 00  // .,.....,.....,..
    C850: 00 04 18 2C 00 00 00 04 F0 D2 00 00 3F 00 44 00  // ...,........?.D.
    C860: 00 30 00 00 00 04 01 30 00 00 00 04 02 30 00 00  // .0.....0.....0..
    C870: 00 04 03 30 00 00 00 04 08 30 00 00 00 04 09 30  // ...0.....0.....0
    C880: 00 00 00 04 0A 30 00 00 00 04 10 30 00 00 00 04  // .....0.....0....
    C890: 11 30 00 00 00 04 18 30 00 00 00 04 68 3C 01 00  // .0.....0....h<..
    C8A0: 3F 00 44 00 00 30 00 00 00 04 01 30 00 00 00 04  // ?.D..0.....0....
    C8B0: 02 30 00 00 00 04 03 30 00 00 00 04 08 30 00 00  // .0.....0.....0..
    C8C0: 00 04 09 30 00 00 00 04 0A 30 00 00 00 04 10 30  // ...0.....0.....0
    C8D0: 00 00 00 04 11 30 00 00 00 04 18 30 00 00 00 04  // .....0.....0....
    C8E0: 00 00 00 00 00 01 02 03 02 03 00 01 00 07 05 00  // ................
    C8F0: 00 01 02 03 02 03 00 01 00 07 05 00 00 01 02 03  // ................
    C900: 02 03 00 01 00 07 05 00 00 01 02 03 02 03 00 01  // ................
    C910: 00 07 05 00 00 01 02 03 02 03 00 01 00 07 05 00  // ................
    C920: 00 01 02 03 02 03 00 01 00 07 05 00 08 30 00 00  // .............0..
    C930: 9B 00 00 00 07 30 00 00 46 25 00 00 08 31 00 00  // .....0..F%...1..
    C940: 9B 00 00 00 07 31 00 00 46 25 00 00 08 32 00 00  // .....1..F%...2..
    C950: 9B 00 00 00 07 32 00 00 46 25 00 00 08 33 00 00  // .....2..F%...3..
    C960: 9B 00 00 00 07 33 00 00 46 25 00 00 56 00 00 00  // .....3..F%..V...
    C970: 05 00 00 00 FF FF FF FF 00 00 00 00 58 00 02 05  // ............X...
    C980: 01 0A 01 00 0C 02 04 02 64 C0 00 00 65 C0 00 00  // ........d...e...
    C990: 66 C0 00 00 67 C0 00 00 E8 C0 00 00 A0 21 00 00  // f...g........!..
    C9A0: 42 EC 00 00 10 27 00 00 0C 04 00 00 00 00 00 00  // B....'..........
    C9B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    C9C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    C9D0: 00 00 00 00 C4 01 02 05 00 00 00 00 00 00 00 00  // ................
    C9E0: 00 00 00 00 00 00 00 00 24 50 53 50 73 60 78 44  // ........$PSPs`xD
    C9F0: 16 00 00 00 00 00 00 00 00 00 00 00 40 04 00 00  // ............@...
    CA00: 00 00 03 00 00 00 00 00 01 00 00 00 00 60 00 00  // .............`..
    CA10: 00 30 04 00 00 00 00 00 04 00 00 00 00 F6 00 00  // .0..............
    CA20: 00 00 00 00 00 00 00 00 05 00 00 00 00 01 00 00  // ................
    CA30: 00 0A 03 00 00 00 00 00 07 00 00 00 40 04 00 00  // ............@...
    CA40: 40 0B 03 00 00 00 00 00 09 00 00 00 08 00 00 00  // @...............
    CA50: F0 CA 00 00 00 00 00 00 11 00 00 00 00 10 01 00  // ................
    CA60: 00 10 05 00 00 00 00 00 12 00 00 00 00 50 00 00  // .............P..
    CA70: 00 20 06 00 00 00 00 00 14 00 00 00 00 30 00 00  // . ...........0..
    CA80: 00 10 03 00 00 00 00 00 21 00 00 00 10 00 00 00  // ........!.......
    CA90: 00 0B 03 00 00 00 00 00 23 00 00 00 00 50 00 00  // ........#....P..
    CAA0: 00 00 02 00 00 00 00 00 2D 00 00 00 00 F0 00 00  // ........-.......
    CAB0: 00 40 03 00 00 00 00 00 2E 00 00 00 00 80 00 00  // .@..............
    CAC0: 00 90 04 00 00 00 00 00 35 00 00 00 38 00 00 00  // ........5...8...
    CAD0: F8 CA 00 00 00 00 00 00 36 00 00 00 00 40 00 00  // ........6....@..
    CAE0: 00 70 06 00 00 00 00 00 37 00 00 00 00 10 00 00  // .p......7.......
    CAF0: 00 B0 06 00 00 00 00 00 38 00 00 00 40 04 00 00  // ........8...@...
    CB00: 00 05 03 00 00 00 00 00 3A 00 00 00 00 62 00 00  // ........:....b..
    CB10: 00 C0 06 00 00 00 00 00 3B 00 00 00 00 03 00 00  // ........;.......
    CB20: 00 22 07 00 00 00 00 00 3D 00 00 00 00 40 00 00  // ."......=....@..
    CB30: 00 25 07 00 00 00 00 00 03 00 00 00 00 60 00 00  // .%...........`..
    CB40: 00 65 07 00 00 00 00 00 42 00 00 00 00 08 00 00  // .e......B.......
    CB50: 00 C5 07 00 00 00 00 00 01 00 00 00 00 00 00 00  // ................
    CB60: 04 01 00 00 00 08 00 00 00 00 00 00 01 01 2C 00  // ..............,.
    CB70: 00 40 40 73 69 00 5F 00 96 00 00 00 90 01 00 00  // .@@si._.........
    CB80: 7C 99 05 00 00 00 00 00 00 00 00 00 00 00 00 00  // |...............
    CB90: 00 00 00 00 00 00 00 00 6C 00 02 01 B5 5D 00 00  // ........l....]..
    CBA0: 00 00 01 00 B5 5D 00 00 08 08 02 00 B5 5D 00 00  // .....].......]..
    CBB0: 10 10 03 00 B5 5D 00 00 18 14 04 00 B5 5D 00 00  // .....].......]..
    CBC0: 1A 18 05 00 B5 5D 00 00 1C 1C 06 00 91 5D 00 00  // .....].......]..
    CBD0: 08 08 90 00 95 5D 00 00 08 08 91 00 99 5D 00 00  // .....].......]..
    CBE0: 08 08 92 00 9D 5D 00 00 08 08 93 00 A1 5D 00 00  // .....].......]..
    CBF0: 08 08 94 00 A5 5D 00 00 08 08 95 00 A9 5D 00 00  // .....].......]..
    CC00: 08 08 97 00 8A 06 0C 00 01 E2 01 EA 08 00 00 B8  // ................
    CC10: 3A 00 00 7D 00 00 00 00 00 1B 00 00 00 00 00 00  // :..}............
    CC20: 00 00 00 00 71 00 00 00 00 00 00 00 00 00 00 00  // ....q...........
    CC30: 00 00 01 00 00 00 0A 00 00 00 AA 05 00 00 F3 04  // ................
    CC40: 00 00 3E 04 00 00 F3 04 00 00 F3 04 00 00 EE 02  // ..>.............
    CC50: 00 00 F3 04 00 00 04 05 00 00 04 05 00 00 2A 03  // ..............*.
    CC60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CC70: 00 00 00 00 00 00 00 00 00 00 2C 01 00 00 30 01  // ..........,...0.
    CC80: 00 00 30 01 00 00 30 01 00 00 30 01 00 00 5F 00  // ..0...0...0..._.
    CC90: 00 00 30 01 00 00 34 01 00 00 2C 01 00 00 2C 01  // ..0...4...,...,.
    CCA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CCB0: 00 00 00 00 00 00 00 00 00 00 80 00 00 00 0E 00  // ................
    CCC0: 00 00 1E 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CCD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CCE0: 00 00 00 00 00 00 81 06 00 00 81 06 00 00 81 06  // ................
    CCF0: 00 00 1A 04 00 00 81 06 00 00 1A 04 00 00 81 06  // ................
    CD00: 00 00 1A 04 00 00 B6 03 00 00 14 00 00 00 56 13  // ..............V.
    CD10: 00 00 56 13 00 00 64 00 00 00 6E 00 00 00 02 00  // ..V...d...n.....
    CD20: 00 00 00 00 00 00 01 00 00 00 01 00 00 00 01 00  // ................
    CD30: 00 00 64 00 00 00 64 00 00 00 64 00 00 00 64 00  // ..d...d...d...d.
    CD40: 00 00 64 00 00 00 64 00 00 00 64 00 00 00 64 00  // ..d...d...d...d.
    CD50: 00 00 64 00 00 00 64 00 00 00 00 00 00 00 00 00  // ..d...d.........
    CD60: 00 00 00 00 00 00 2C 01 00 00 2C 01 00 00 2C 01  // ......,...,...,.
    CD70: 00 00 BC 02 00 00 2C 01 00 00 BC 02 00 00 2C 01  // ......,.......,.
    CD80: 00 00 BC 02 00 00 64 00 00 00 14 00 00 00 90 01  // ......d.........
    CD90: 00 00 90 01 00 00 19 00 00 00 32 00 00 00 00 00  // ..........2.....
    CDA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CDB0: 00 00 19 00 00 00 0A 00 00 00 19 00 00 00 0A 00  // ................
    CDC0: 00 00 19 00 00 00 0A 00 00 00 19 00 00 00 0A 00  // ................
    CDD0: 00 00 19 00 00 00 0A 00 00 00 00 00 00 00 00 00  // ................
    CDE0: 00 00 00 00 00 00 08 00 00 00 BB EF CB AB 42 06  // ..............B.
    CDF0: 00 00 32 00 00 00 00 00 00 00 00 00 00 00 00 00  // ..2.............
    CE00: 00 00 32 00 00 00 00 00 00 00 00 00 00 00 00 00  // ..2.............
    CE10: 00 00 0A 00 00 00 3C 00 00 00 6E 00 69 00 96 00  // ......<...n.i...
    CE20: 73 00 73 00 73 00 73 00 00 00 00 00 00 00 00 00  // s.s.s.s.........
    CE30: 00 00 00 00 00 00 FC 70 00 00 01 01 00 00 4B 00  // .......p......K.
    CE40: 4B 00 00 00 00 00 00 00 00 00 A5 0A A5 0A F0 0A  // K...............
    CE50: F0 0A D8 0E 68 10 80 00 00 00 00 00 02 00 00 00  // ....h...........
    CE60: 00 00 00 00 00 00 0D E0 4D 3E FC DE A6 BD 74 98  // ........M>....t.
    CE70: 27 3F 00 00 02 00 00 00 80 3F 00 00 00 00 0C E5  // '?.......?......
    CE80: 24 3E 8C DB 08 3E E1 45 07 3F 01 01 04 00 00 00  // $>...>.E.?......
    CE90: 80 3F 00 00 00 00 0C E5 24 3E 8C DB 08 3E E1 45  // .?......$>...>.E
    CEA0: 07 3F 01 00 02 00 22 89 92 3F BD 35 B0 3C F7 75  // .?...."..?.5.<.u
    CEB0: 20 BE 27 31 80 3F 1D 38 E7 3D 01 00 02 00 33 1B  //  .'1.?.8.=....3.
    CEC0: 64 3F C8 EF 0D 3E 00 00 00 00 4A 7B 03 3F DA AC  // d?...>....J{.?..
    CED0: BA 3E 01 00 02 00 BA DA 5A 3F FC DE 46 3E 76 4F  // .>......Z?..F>vO
    CEE0: AE 3F E8 6A 03 C0 31 99 C2 3F 01 00 02 00 7B A0  // .?.j..1..?....{.
    CEF0: 5D 3F BB 0F 00 3E 39 45 C7 3D 78 0B A4 3E 00 00  // ]?...>9E.=x..>..
    CF00: C0 3E 02 00 02 00 00 00 00 00 00 00 00 00 00 00  // .>..............
    CF10: 00 00 00 00 00 00 00 00 00 00 02 00 02 00 00 00  // ................
    CF20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    CF30: 00 00 2C 01 AA 05 E8 03 E8 03 E8 03 E8 03 E8 03  // ..,.............
    CF40: E8 03 E8 03 E8 03 E8 03 E8 03 E8 03 E8 03 E8 03  // ................
    CF50: E8 03 30 01 F3 04 E8 03 E8 03 E8 03 E8 03 E8 03  // ..0.............
    CF60: E8 03 30 01 3E 04 B0 04 B0 04 B0 04 B0 04 B0 04  // ..0.>...........
    CF70: B0 04 30 01 F3 04 E8 03 E8 03 E8 03 E8 03 E8 03  // ..0.............
    CF80: E8 03 5F 00 F0 01 E0 02 EE 02 30 01 F3 04 E8 03  // .._.......0.....
    CF90: E8 03 E8 03 E8 03 E8 03 E8 03 34 01 04 05 E8 03  // ..........4.....
    CFA0: E8 03 E8 03 E8 03 E8 03 E8 03 2C 01 04 05 E8 03  // ..........,.....
    CFB0: E8 03 E8 03 E8 03 E8 03 E8 03 2C 01 2A 03 20 03  // ..........,.*. .
    CFC0: 20 03 20 03 20 03 20 03 20 03 D0 01 D0 01 D0 01  //  . . . . .......
    CFD0: D0 01 D0 01 D0 01 D0 01 D0 01 D0 01 D0 01 D0 01  // ................
    CFE0: D0 01 D0 01 D0 01 D0 01 D0 01 D0 01 D0 01 D0 01  // ................
    CFF0: D0 01 D0 01 D0 01 D0 01 D0 01 D0 01 D0 01 D0 01  // ................
    D000: D0 01 D0 01 D0 01 D0 01 D0 01 AA 05 F3 04 EE 02  // ................
    D010: 3E 04 F3 04 F3 04 04 05 04 05 2A 03 D0 01 00 02  // >.........*.....
    D020: 03 03 30 01 FB 01 F0 0A F0 0A 28 0A 48 0D 48 0D  // ..0.......(.H.H.
    D030: 48 0D 88 13 18 15 18 15 18 15 F4 01 F4 01 F4 01  // H...............
    D040: 00 00 00 00 D0 01 00 00 01 02 00 00 5B 00 00 08  // ............[...
    D050: 00 00 00 02 02 04 51 00 33 01 00 00 00 00 00 00  // ......Q.3.......
    D060: 00 00 00 00 00 00 90 01 90 01 90 01 90 01 90 01  // ................
    D070: 90 01 90 01 90 01 90 01 90 01 0A 00 34 08 34 08  // ............4.4.
    D080: 56 13 5F 00 20 03 01 00 00 02 00 00 00 00 00 00  // V._. ...........
    D090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D0A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D0B0: 00 00 00 00 00 00 00 00 00 00 EC 4C A1 3C 6E C0  // ...........L.<n.
    D0C0: E7 3C 73 2E C5 3C 73 63 7A 3D 58 39 34 BC 61 C3  // .<s..<scz=X94.a.
    D0D0: D3 3C 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // .<..............
    D0E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D0F0: 00 00 00 00 00 00 00 00 00 00 94 00 94 00 00 00  // ................
    D100: 00 00 00 00 00 00 94 00 94 00 00 06 00 00 00 00  // ................
    D110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00  // ................
    D140: 00 00 1E 00 46 00 00 00 00 00 00 00 00 00 00 00  // ....F...........
    D150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D170: 00 00 CB 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D180: 00 00 00 00 00 00 94 00 94 00 00 00 00 00 00 00  // ................
    D190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D1A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D1B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D1C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D1D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D1E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D1F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 C8 00  // ................
    D290: 04 05 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    D2A0: 00 00 00 00 00 00 00 01 02 00 00 00 00 00 00 00  // ................
    D2B0: 00 00 00 02 03 01 00 00 00 00 00 00 00 00 00 03  // ................
    D2C0: 04 01 00 00 00 00 00 00 00 00 00 04 05 04 00 00  // ................
    D2D0: 00 00 00 00 00 00 00 05 06 04 00 00 00 00 00 00  // ................
    D2E0: 00 00 00 06 07 04 00 00 00 00 00 00 00 00 00 07  // ................
    D2F0: 00 00 E7 18 E7 18 00 02 01 03 01 00 00 00 87 00  // ................
    D300: 00 00 0F 00 00 00 1A 00 00 00 0F 00 00 00 FF 00  // ................
    D310: 06 00 06 00 05 00 FF FF FF 00 01 20 1F 00 01 20  // ........... ... 
    D320: 1F 00 00 00 21 00 00 00 00 00 90 01 00 00 00 00  // ....!...........
    D330: 01 00 00 00 00 00 30 00 00 00 00 00 00 00 00 00  // ......0.........
    D340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D350: 00 00 00 00 00 00 6C 00 03 03 00 00 02 11 30 75  // ......l.......0u
    D360: 00 00 1C 25 00 00 00 04 00 00 2D 2C 00 00 4C 00  // ...%......-,..L.
    D370: 00 00 BC 02 52 03 46 05 BC 02 00 00 00 00 80 00  // ....R.F.........
    D380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D390: 00 00 00 00 00 00 E8 03 00 00 84 03 84 03 46 05  // ..............F.
    D3A0: 84 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D3B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D3C0: 00 00 E7 20 02 04 43 01 F7 02 FF 1A 9F 1E 1B 20  // ... ..C........ 
    D3D0: 00 00 00 00 00 00 06 00 08 04 00 10 00 00 FF 00  // ................
    D3E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 29 00  // ..............).
    D3F0: 00 70 08 04 62 00 00 08 00 00 00 04 04 00 00 00  // .p..b...........
    D400: 00 00 00 00 10 00 00 FF 00 00 00 00 00 00 00 00  // ................
    D410: 00 00 00 00 00 00 00 33 00 00 70 08 04 62 00 81  // .......3..p..b..
    D420: 08 00 00 00 04 04 00 C0 00 00 00 4B 34 5A 38 30  // ...........K4Z80
    D430: 33 32 35 42 43 00 00 10 00 00 FF 00 00 00 00 00  // 325BC...........
    D440: 00 00 00 00 00 00 00 00 00 00 34 00 00 70 08 04  // ..........4..p..
    D450: 62 01 0F 08 00 00 00 04 0D 00 C0 00 00 00 4D 54  // b.............MT
    D460: 36 31 4B 32 35 36 4D 33 32 00 00 20 00 00 FF 00  // 61K256M32.. ....
    D470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 34 00  // ..............4.
    D480: 00 70 08 04 72 02 06 08 00 00 00 04 04 00 C0 00  // .p..r...........
    D490: 00 00 48 35 36 43 42 4D 32 34 4D 49 52 00 00 20  // ..H56CBM24MIR.. 
    D4A0: 00 00 FF 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D4B0: 00 00 33 00 00 70 08 04 72 03 81 08 00 00 00 04  // ..3..p..r.......
    D4C0: 04 00 C0 00 00 00 4B 34 5A 41 46 33 32 35 42 4D  // ......K4ZAF325BM
    D4D0: 00 00 10 00 00 FF 00 00 00 00 00 00 00 00 00 00  // ................
    D4E0: 00 00 00 00 00 34 00 00 70 08 04 62 04 06 08 00  // .....4..p..b....
    D4F0: 00 00 04 04 00 C0 00 00 00 48 35 36 43 38 48 32  // .........H56C8H2
    D500: 34 41 49 52 00 11 00 00 00 50 4C 01 00 51 4C 01  // 4AIR.....PL..QL.
    D510: 00 00 FE 00 01 14 FE 00 01 18 FE 00 01 1C FE 00  // ................
    D520: 01 30 FE 00 01 3C FE 00 01 40 FE 00 01 48 FE 00  // .0...<...@...H..
    D530: 01 4C FE 00 01 54 FE 00 01 58 FE 00 01 78 FE 00  // .L...T...X...x..
    D540: 01 8C FE 00 01 A8 FE 00 01 55 02 00 05 FF FF FF  // .........U......
    D550: 00 05 00 00 00 00 00 2A 00 06 00 03 00 48 04 48  // .......*.....H.H
    D560: 04 00 00 08 00 00 00 08 00 0F 0F DE 00 00 00 00  // ................
    D570: 20 00 00 00 00 38 38 30 43 08 08 10 68 2A 88 48  //  ....880C...h*.H
    D580: 00 00 00 00 00 C0 E0 28 84 00 00 00 00 00 00 00  // .......(........
    D590: 00 14 00 00 00 FF FF FF 01 0D 00 00 09 00 00 2A  // ...............*
    D5A0: 00 06 00 07 00 48 04 4C 04 00 80 08 43 00 00 08  // .....H.L....C...
    D5B0: 43 0C 0F DE 00 00 00 00 00 00 00 00 00 38 38 2E  // C............88.
    D5C0: 49 08 08 10 6B 2A 88 48 00 DA D8 D8 D8 C0 E0 38  // I...k*.H.......8
    D5D0: 86 00 02 18 00 00 40 00 44 14 00 00 00 FF FF FF  // ......@.D.......
    D5E0: 02 05 00 DB 00 00 00 24 00 06 00 03 00 48 04 48  // .......$.....H.H
    D5F0: 04 00 00 08 40 00 00 08 40 0F 0F DE 00 00 00 00  // ....@...@.......
    D600: 00 00 00 20 00 38 38 2C 46 05 05 10 6B 24 88 48  // ... .88,F...k$.H
    D610: 00 00 00 00 00 C0 E0 28 82 00 00 00 00 00 00 00  // .......(........
    D620: 00 16 00 00 00 FF FF FF 03 05 00 00 00 00 00 2A  // ...............*
    D630: 00 06 00 03 00 48 04 48 04 00 00 08 00 00 00 08  // .....H.H........
    D640: 00 0F 0F DE 00 00 00 00 00 00 00 00 00 38 38 30  // .............880
    D650: 43 06 06 10 6A 2A 8F 48 00 00 00 00 00 C0 E0 28  // C...j*.H.......(
    D660: 86 00 00 00 00 00 00 00 00 16 00 00 00 FF FF FF  // ................
    D670: 04 05 00 DB 00 00 00 26 00 06 00 03 00 48 04 48  // .......&.....H.H
    D680: 04 00 00 08 40 00 00 08 40 0F 0F DE 00 00 00 00  // ....@...@.......
    D690: 00 00 00 00 00 38 38 30 46 05 05 10 6B 26 88 48  // .....880F...k&.H
    D6A0: 00 00 00 00 00 C0 E0 28 84 00 00 00 00 00 00 00  // .......(........
    D6B0: 00 16 00 00 00 00 00 00 00 1C 00 00 00 51 4C 01  // .............QL.
    D6C0: 00 5F 4C 01 00 5E 4C 01 00 60 4C 01 00 61 4C 01  // ._L..^L..`L..aL.
    D6D0: 00 81 40 01 00 82 40 01 00 83 40 01 00 84 40 01  // ..@...@...@...@.
    D6E0: 00 85 40 01 00 86 40 01 00 87 40 01 00 88 40 01  // ..@...@...@...@.
    D6F0: 00 89 40 01 00 8A 40 01 00 8C 40 01 00 8D 40 01  // ..@...@...@...@.
    D700: 00 8E 40 01 00 90 40 01 00 91 40 01 00 94 40 01  // ..@...@...@...@.
    D710: 00 95 40 01 00 96 40 01 00 97 40 01 00 A3 40 01  // ..@...@...@...@.
    D720: 00 A4 40 01 00 98 40 01 00 A1 40 01 00 D4 30 00  // ..@...@...@...0.
    D730: 01 00 00 00 00 25 01 00 00 00 00 00 00 BA 08 00  // .....%..........
    D740: 00 40 00 00 00 09 05 03 03 07 00 03 00 02 02 00  // .@..............
    D750: 02 08 00 00 00 05 03 03 00 05 00 00 00 11 02 05  // ................
    D760: 00 00 00 01 01 01 00 01 01 00 11 18 00 EE 00 00  // ................
    D770: 00 0A 0A 00 00 14 00 00 00 14 00 00 00 42 51 2A  // .............BQ*
    D780: 02 08 00 00 00 0C 00 0A 0A 08 03 00 01 1F 2A 0C  // ..............*.
    D790: 00 0F 00 00 00 C9 F0 13 0F 0F 00 00 00 00 00 00  // ................
    D7A0: 00 A8 61 00 01 00 00 00 00 25 01 00 00 00 00 00  // ..a......%......
    D7B0: 00 BA 08 00 00 40 00 00 00 09 09 05 03 0D 00 05  // .....@..........
    D7C0: 00 02 02 00 02 08 00 00 00 05 03 03 00 05 00 00  // ................
    D7D0: 00 11 04 05 00 00 00 01 01 01 00 01 01 00 11 18  // ................
    D7E0: 00 DB 01 00 00 0A 0A 00 00 1E 00 00 00 1E 00 00  // ................
    D7F0: 00 43 51 2A 02 0F 00 00 00 0C 00 0A 0A 08 03 00  // .CQ*............
    D800: 01 1F 2A 0C 00 1E 00 00 00 09 F1 13 0F 1E 00 00  // ..*.............
    D810: 00 00 00 00 00 50 C3 00 01 00 00 00 00 2D 04 00  // .....P.......-..
    D820: 00 00 00 00 00 BA 08 00 00 40 00 00 00 0A 0F 09  // .........@......
    D830: 05 17 00 08 00 02 02 00 02 08 00 00 00 05 04 04  // ................
    D840: 00 08 00 00 00 11 04 05 00 00 00 01 01 01 00 01  // ................
    D850: 01 00 12 18 00 B6 03 00 00 0A 0A 00 00 3C 00 00  // .............<..
    D860: 00 3C 00 00 00 45 51 36 02 1E 00 00 00 0C 00 0A  // .<...EQ6........
    D870: 0A 09 03 00 01 1F 2A 0C 00 3C 00 00 00 C9 F1 13  // ......*..<......
    D880: 0F 3C 00 00 00 00 00 00 00 F8 24 01 01 00 00 00  // .<........$.....
    D890: 00 45 08 00 00 00 00 00 00 BA 08 00 00 40 00 00  // .E...........@..
    D8A0: 00 0D 17 0D 07 23 00 0C 00 04 04 00 02 0C 00 00  // .....#..........
    D8B0: 00 05 05 05 00 0C 00 00 00 11 06 05 00 00 00 01  // ................
    D8C0: 01 01 00 01 01 00 15 18 00 91 05 00 00 0A 0A 00  // ................
    D8D0: 00 5A 00 00 00 5A 00 00 00 48 51 46 02 2D 00 00  // .Z...Z...HQF.-..
    D8E0: 00 0C 00 0A 0A 0C 03 00 01 1F 2A 0C 00 5A 00 00  // ..........*..Z..
    D8F0: 00 89 F2 13 0F 5A 00 00 00 00 00 00 00 CC 55 01  // .....Z........U.
    D900: 01 00 00 00 00 55 0A 00 00 00 00 00 00 CA 08 00  // .....U..........
    D910: 00 40 00 00 00 0F 1B 0F 09 29 00 0E 00 04 04 00  // .@.......)......
    D920: 02 10 00 00 00 05 06 06 00 0E 00 00 00 11 88 05  // ................
    D930: 00 00 00 01 01 01 00 01 01 00 17 18 00 7F 06 00  // ................
    D940: 00 0A 0A 00 00 69 00 00 00 69 00 00 00 49 51 50  // .....i...i...IQP
    D950: 02 35 00 00 00 0C 00 0A 0A 0E 03 00 01 1F 2A 0C  // .5............*.
    D960: 00 69 00 00 00 0A F3 13 0F 69 00 00 00 00 00 00  // .i.......i......
    D970: 00 A0 86 01 01 00 00 00 00 5D 0C 00 00 00 00 00  // .........]......
    D980: 00 DA 08 00 00 40 00 00 00 10 1E 0F 09 2D 00 0F  // .....@.......-..
    D990: 00 04 04 00 02 10 00 00 00 05 06 06 00 10 00 00  // ................
    D9A0: 00 11 08 06 00 00 00 01 01 01 00 01 01 00 18 18  // ................
    D9B0: 00 6C 07 00 00 0A 0A 00 00 78 00 00 00 78 00 00  // .l.......x...x..
    D9C0: 00 4A 51 56 02 3C 00 00 00 0C 00 0A 0A 0F 03 00  // .JQV.<..........
    D9D0: 01 1F 2A 0C 00 78 00 00 00 4A F3 13 0F 78 00 00  // ..*..x...J...x..
    D9E0: 00 00 00 00 00 48 E8 01 01 00 00 00 00 7E 00 00  // .....H.......~..
    D9F0: 00 00 00 00 00 6A 09 00 00 40 02 00 00 14 26 13  // .....j...@....&.
    DA00: 0D 39 00 13 00 06 06 00 02 14 00 00 00 06 07 07  // .9..............
    DA10: 00 14 00 00 00 21 8A 06 00 00 00 01 01 01 00 01  // .....!..........
    DA20: 01 00 1B 18 00 47 09 00 00 0D 0D 00 00 96 00 00  // .....G..........
    DA30: 00 96 00 00 00 4D 51 66 02 4B 00 00 00 0C 00 0A  // .....MQf.K......
    DA40: 0D 13 04 00 01 1F 2A 0C 00 96 00 00 00 0A F4 13  // ......*.........
    DA50: 0F 96 00 00 00 00 00 00 00 78 5D 02 01 00 00 00  // .........x].....
    DA60: 00 0F 04 00 00 00 00 00 00 7A 09 00 00 40 03 00  // .........z...@..
    DA70: 00 16 2D 17 0F 44 00 17 00 06 06 00 02 18 00 00  // ..-..D..........
    DA80: 00 07 08 08 00 18 00 00 00 21 0C 07 00 00 00 01  // .........!......
    DA90: 01 01 00 01 01 00 1C 18 00 81 0B 00 00 0F 0F 00  // ................
    DAA0: 00 B4 00 00 00 B4 00 00 00 4F 51 78 02 5A 00 00  // .........OQx.Z..
    DAB0: 00 0C 00 0A 0F 15 05 00 01 1F 2A 0C 00 B4 00 00  // ..........*.....
    DAC0: 00 CB F4 13 0F B4 00 00 00 00 00 00 00 20 BF 02  // ............. ..
    DAD0: 01 00 00 00 00 1F 08 00 00 00 00 00 00 0A 09 00  // ................
    DAE0: 00 40 03 00 00 18 34 1B 11 4E 00 1A 00 08 08 00  // .@....4..N......
    DAF0: 02 20 00 00 00 07 09 09 00 1C 00 00 00 21 8E 07  // . ...........!..
    DB00: 00 00 00 01 01 01 00 01 01 00 1E 18 00 5C 0D 00  // .............\..
    DB10: 00 12 12 00 00 D2 00 00 00 D2 00 00 00 52 51 86  // .............RQ.
    DB20: 02 69 00 00 00 0C 00 0A 12 17 05 00 01 1F 2A 0C  // .i............*.
    DB30: 00 D2 00 00 00 8B F5 13 0F D2 00 00 00 00 00 00  // ................
    DB40: 00 40 0D 03 01 00 00 00 00 28 0B 00 00 00 00 00  // .@.......(......
    DB50: 00 1A 09 00 00 40 03 00 00 1A 3C 1F 13 5A 00 1E  // .....@....<..Z..
    DB60: 00 08 08 00 02 20 00 00 00 08 0A 0A 00 1F 00 00  // ..... ..........
    DB70: 00 21 10 08 00 00 00 01 01 01 00 01 01 00 1F 18  // .!..............
    DB80: 00 D8 0E 00 00 14 14 00 00 F0 00 00 00 F0 00 00  // ................
    DB90: 00 54 51 98 02 78 00 00 00 0C 00 0A 14 19 06 00  // .TQ..x..........
    DBA0: 01 1F 2A 0C 00 F0 00 00 00 4C F6 13 0F F0 00 00  // ..*......L......
    DBB0: 00 00 00 00 00 E8 6E 03 01 00 00 00 00 38 0B 00  // ......n......8..
    DBC0: 00 00 00 00 00 2A 09 00 00 40 03 00 00 1C 44 25  // .....*...@....D%
    DBD0: 15 66 00 22 00 0A 0A 00 02 24 00 00 00 08 0C 0C  // .f.".....$......
    DBE0: 00 1F 00 00 00 21 92 08 00 00 00 01 01 01 00 01  // .....!..........
    DBF0: 01 00 21 18 00 B3 10 00 00 17 17 00 00 0E 01 00  // ..!.............
    DC00: 00 0E 01 00 00 57 51 A8 02 87 00 00 00 0C 00 0A  // .....WQ.........
    DC10: 17 1B 06 00 01 1F 2A 0C 00 0E 01 00 00 0C F7 13  // ......*.........
    DC20: 0F 0E 01 00 00 00 00 00 00 D4 30 00 02 00 01 00  // ..........0.....
    DC30: 00 25 00 00 00 00 00 00 00 3A 09 00 00 40 00 00  // .%.......:...@..
    DC40: 00 09 04 03 01 06 00 02 00 04 04 00 02 0C 00 00  // ................
    DC50: 00 05 03 03 00 04 00 00 00 21 06 05 00 00 00 01  // .........!......
    DC60: 01 01 00 01 01 00 11 18 00 EE 00 00 00 0A 0A 00  // ................
    DC70: 00 0F 00 00 00 0F 00 00 00 8A 20 22 02 08 00 00  // .......... "....
    DC80: 00 0A 00 04 0A 08 03 00 01 1F 2A 0C 00 0E 00 00  // ..........*.....
    DC90: 00 C2 F0 13 0F 0E 00 00 00 00 00 00 00 20 4E 00  // ............. N.
    DCA0: 02 C0 01 00 00 25 00 00 00 00 00 00 00 3A 09 00  // .....%.......:..
    DCB0: 00 40 00 00 00 09 07 05 01 0B 00 04 00 04 04 00  // .@..............
    DCC0: 02 0C 00 00 00 05 03 03 00 04 00 00 00 21 06 05  // .............!..
    DCD0: 00 00 00 01 01 01 00 01 01 00 11 18 00 7C 01 00  // .............|..
    DCE0: 00 0A 0A 00 00 18 00 00 00 18 00 00 00 8A 20 22  // .............. "
    DCF0: 02 0C 00 00 00 0A 00 04 0A 08 03 00 01 1F 2A 0C  // ..............*.
    DD00: 00 1C 00 00 00 C2 F0 13 0F 1C 00 00 00 00 00 00  // ................
    DD10: 00 50 C3 00 02 40 03 00 00 2D 04 00 00 00 00 00  // .P...@...-......
    DD20: 00 3A 09 00 00 40 00 00 00 0A 0D 09 03 15 00 08  // .:...@..........
    DD30: 00 04 04 00 02 0C 00 00 00 05 04 04 00 08 00 00  // ................
    DD40: 00 21 08 05 00 00 00 01 01 01 00 01 01 00 12 18  // .!..............
    DD50: 00 B6 03 00 00 0A 0A 00 00 3C 00 00 00 3C 00 00  // .........<...<..
    DD60: 00 8A 20 2E 02 1A 00 00 00 0A 00 04 0A 09 03 00  // .. .............
    DD70: 01 1F 2A 0C 00 37 00 00 00 82 F1 13 0F 37 00 00  // ..*..7.......7..
    DD80: 00 00 00 00 00 F8 24 01 02 C0 04 00 00 3D 08 00  // ......$......=..
    DD90: 00 00 00 00 00 3A 09 00 00 40 00 00 00 0C 13 0D  // .....:...@......
    DDA0: 07 1F 00 0C 00 04 04 00 02 0C 00 00 00 05 05 05  // ................
    DDB0: 00 0C 00 00 00 21 08 05 00 00 00 01 01 01 00 01  // .....!..........
    DDC0: 01 00 14 18 00 91 05 00 00 0A 0A 00 00 5A 00 00  // .............Z..
    DDD0: 00 5A 00 00 00 8A 20 3E 02 26 00 00 00 0A 00 04  // .Z.... >.&......
    DDE0: 0A 0B 03 00 01 1F 2A 0C 00 53 00 00 00 42 F2 13  // ......*..S...B..
    DDF0: 0F 53 00 00 00 00 00 00 00 CC 55 01 02 80 05 00  // .S........U.....
    DE00: 00 4D 0A 00 00 00 00 00 00 3A 09 00 00 40 00 00  // .M.......:...@..
    DE10: 00 0E 16 0F 09 24 00 0E 00 04 04 00 02 0C 00 00  // .....$..........
    DE20: 00 05 06 06 00 0E 00 00 00 21 0A 05 00 00 00 01  // .........!......
    DE30: 01 01 00 01 01 00 16 18 00 7F 06 00 00 0A 0A 00  // ................
    DE40: 00 69 00 00 00 69 00 00 00 8A 20 46 02 2C 00 00  // .i...i.... F.,..
    DE50: 00 0A 00 04 0A 0D 03 00 01 1F 2A 0C 00 61 00 00  // ..........*..a..
    DE60: 00 82 F2 13 0F 61 00 00 00 00 00 00 00 A0 86 01  // .....a..........
    DE70: 02 40 06 00 00 55 0C 00 00 00 00 00 00 4A 09 00  // .@...U.......J..
    DE80: 00 40 00 00 00 0F 19 11 0B 28 00 0F 00 04 04 00  // .@.......(......
    DE90: 02 0C 00 00 00 05 06 06 00 10 00 00 00 21 8A 05  // .............!..
    DEA0: 00 00 00 01 01 01 00 01 01 00 17 18 00 6C 07 00  // .............l..
    DEB0: 00 0A 0A 00 00 78 00 00 00 78 00 00 00 8A 20 4C  // .....x...x.... L
    DEC0: 02 32 00 00 00 0A 00 04 0A 0E 03 00 01 1F 2A 0C  // .2............*.
    DED0: 00 6E 00 00 00 C2 F2 13 0F 6E 00 00 00 00 00 00  // .n.......n......
    DEE0: 00 48 E8 01 02 00 08 00 00 65 00 00 00 00 00 00  // .H.......e......
    DEF0: 00 5A 09 00 00 40 02 00 00 11 20 15 0F 33 00 13  // .Z...@.... ..3..
    DF00: 00 06 06 00 02 0C 00 00 00 05 07 07 00 14 00 00  // ................
    DF10: 00 21 0C 06 00 00 00 01 01 01 00 01 01 00 19 18  // .!..............
    DF20: 00 47 09 00 00 0A 0A 00 00 96 00 00 00 96 00 00  // .G..............
    DF30: 00 8A 20 5C 02 40 00 00 00 0A 00 04 0A 10 03 00  // .. \.@..........
    DF40: 01 1F 2A 0C 00 8A 00 00 00 82 F3 13 0F 8A 00 00  // ..*.............
    DF50: 00 00 00 00 00 78 5D 02 02 80 09 00 00 7D 04 00  // .....x]......}..
    DF60: 00 00 00 00 00 6A 09 00 00 40 02 00 00 14 26 19  // .....j...@....&.
    DF70: 13 3D 00 17 00 06 06 00 02 10 00 00 00 05 08 08  // .=..............
    DF80: 00 18 00 00 00 21 8E 06 00 00 00 01 01 01 00 01  // .....!..........
    DF90: 01 00 1C 18 00 81 0B 00 00 0A 0A 00 00 B4 00 00  // ................
    DFA0: 00 B4 00 00 00 8A 20 6C 02 4C 00 00 00 0A 00 04  // ...... l.L......
    DFB0: 0A 13 03 00 01 1F 2A 0C 00 A5 00 00 00 02 F4 13  // ......*.........
    DFC0: 0F A5 00 00 00 00 00 00 00 98 AB 02 02 00 0B 00  // ................
    DFD0: 00 0D 08 00 00 00 00 00 00 EA 09 00 00 40 03 00  // .............@..
    DFE0: 00 16 2C 1D 17 47 00 1B 00 08 08 00 02 10 00 00  // ..,..G..........
    DFF0: 00 05 09 09 00 1C 00 00 00 31 90 06 00 00 00 01  // .........1......
    E000: 01 01 00 01 01 00 1E 18 00 FD 0C 00 00 0A 0A 00  // ................
    E010: 00 D2 00 00 00 D2 00 00 00 8A 20 7C 02 58 00 00  // .......... |.X..
    E020: 00 0A 00 04 0A 15 03 00 01 1F 2A 0C 00 C1 00 00  // ..........*.....
    E030: 00 C2 F4 13 0F C1 00 00 00 00 00 00 00 20 BF 02  // ............. ..
    E040: 02 00 0B 00 00 0D 08 00 00 00 00 00 00 EA 09 00  // ................
    E050: 00 40 03 00 00 16 2C 1D 17 47 00 1B 00 08 08 00  // .@....,..G......
    E060: 02 10 00 00 00 05 09 09 00 1C 00 00 00 31 90 06  // .............1..
    E070: 00 00 00 01 01 01 00 01 01 00 1E 18 00 5C 0D 00  // .............\..
    E080: 00 0A 0A 00 00 D2 00 00 00 D2 00 00 00 8A 20 7C  // .............. |
    E090: 02 58 00 00 00 0A 00 04 0A 15 03 00 01 1F 2A 0C  // .X............*.
    E0A0: 00 C1 00 00 00 C2 F4 13 0F C1 00 00 00 00 00 00  // ................
    E0B0: 00 6C DC 02 02 C0 0B 00 00 15 0A 00 00 00 00 00  // .l..............
    E0C0: 00 FA 09 00 00 40 03 00 00 17 2F 1F 19 4C 00 1D  // .....@..../..L..
    E0D0: 00 08 08 00 02 14 00 00 00 05 0A 0A 00 1E 00 00  // ................
    E0E0: 00 31 12 07 00 00 00 01 01 01 00 01 01 00 1F 18  // .1..............
    E0F0: 00 EB 0D 00 00 0A 0A 00 00 E1 00 00 00 E1 00 00  // ................
    E100: 00 8A 20 84 02 5E 00 00 00 0A 00 04 0A 16 03 00  // .. ..^..........
    E110: 01 1F 2A 0C 00 CF 00 00 00 02 F5 13 0F CF 00 00  // ..*.............
    E120: 00 00 00 00 00 40 0D 03 02 80 0C 00 00 1D 0C 00  // .....@..........
    E130: 00 00 00 00 00 FA 09 00 00 40 03 00 00 18 32 21  // .........@....2!
    E140: 1B 50 00 1E 00 08 08 00 02 14 00 00 00 05 0A 0A  // .P..............
    E150: 00 20 00 00 00 31 12 07 00 00 00 01 01 01 00 01  // . ...1..........
    E160: 01 00 20 18 00 D8 0E 00 00 0A 0A 00 00 F0 00 00  // .. .............
    E170: 00 F0 00 00 00 8A 20 8A 02 64 00 00 00 0A 00 04  // ...... ..d......
    E180: 0A 17 03 00 01 1F 2A 0C 00 DC 00 00 00 42 F5 13  // ......*......B..
    E190: 0F DC 00 00 00 00 00 00 00 74 27 00 03 00 00 00  // .........t'.....
    E1A0: 00 25 0E 00 00 00 00 00 00 BA 08 00 00 40 00 00  // .%...........@..
    E1B0: 00 09 04 03 03 05 00 02 00 04 04 00 02 08 00 00  // ................
    E1C0: 00 05 03 03 00 02 00 00 00 11 02 05 00 00 00 01  // ................
    E1D0: 01 01 00 01 01 00 11 18 00 C0 00 00 00 04 08 00  // ................
    E1E0: 00 0D 00 00 00 0E 00 00 00 4C 51 1A 02 0D 00 00  // .........LQ.....
    E1F0: 00 05 00 0A 02 08 03 00 01 1F 2A 0C 00 0D 00 00  // ..........*.....
    E200: 00 88 F0 13 0F 0D 00 00 00 00 00 00 00 4C 4F 00  // .............LO.
    E210: 03 00 00 00 00 25 00 00 00 00 00 00 00 BA 08 00  // .....%..........
    E220: 00 40 00 00 00 09 07 05 03 0A 00 04 00 04 04 00  // .@..............
    E230: 02 08 00 00 00 05 04 04 00 04 00 00 00 11 04 05  // ................
    E240: 00 00 00 01 01 01 00 01 01 00 11 18 00 82 01 00  // ................
    E250: 00 04 08 00 00 19 00 00 00 1C 00 00 00 4D 51 20  // .............MQ 
    E260: 02 19 00 00 00 05 00 0A 03 08 03 00 01 1F 2A 0C  // ..............*.
    E270: 00 19 00 00 00 09 F1 13 0F 19 00 00 00 00 00 00  // ................
    E280: 00 E4 57 00 03 00 00 00 00 35 00 00 00 00 00 00  // ..W......5......
    E290: 00 BA 08 00 00 40 00 00 00 0B 08 05 03 0B 00 04  // .....@..........
    E2A0: 00 04 04 00 02 10 00 00 00 05 04 04 00 04 00 00  // ................
    E2B0: 00 11 0A 05 00 00 00 01 01 01 00 01 01 00 13 18  // ................
    E2C0: 00 AC 01 00 00 04 08 00 00 1B 00 00 00 1F 00 00  // ................
    E2D0: 00 8E 61 2A 02 1B 00 00 00 12 00 0A 0C 0A 03 00  // ..a*............
    E2E0: 01 1F 2A 0C 00 24 00 00 00 4B F1 13 0F 24 00 00  // ..*..$...K...$..
    E2F0: 00 00 00 00 00 C8 AF 00 03 00 00 00 00 37 04 00  // .............7..
    E300: 00 00 00 00 00 3A 09 00 00 40 00 00 00 0B 0F 07  // .....:...@......
    E310: 07 16 00 07 00 04 04 00 02 08 00 00 00 07 05 05  // ................
    E320: 00 08 00 00 00 21 0A 05 00 00 00 01 01 01 00 01  // .....!..........
    E330: 01 00 11 18 00 57 03 00 00 04 08 00 00 36 00 00  // .....W.......6..
    E340: 00 3E 00 00 00 8E 61 30 02 36 00 00 00 12 00 0A  // .>....a0.6......
    E350: 0C 0A 05 00 01 1F 2A 0C 00 48 00 00 00 4C F2 13  // ......*..H...L..
    E360: 0F 48 00 00 00 00 00 00 00 08 4C 01 03 00 00 00  // .H........L.....
    E370: 00 57 0A 00 00 00 00 00 00 4A 09 00 00 40 00 00  // .W.......J...@..
    E380: 00 0F 1C 0D 0B 28 00 0D 00 04 04 00 02 10 00 00  // .....(..........
    E390: 00 07 07 07 00 0E 00 00 00 21 8A 05 00 00 00 01  // .........!......
    E3A0: 01 01 00 01 01 00 15 18 00 50 06 00 00 04 08 00  // .........P......
    E3B0: 00 66 00 00 00 74 00 00 00 AF 69 48 02 66 00 00  // .f...t....iH.f..
    E3C0: 00 13 00 0A 0D 0E 05 00 01 1F 2A 0C 00 88 00 00  // ..........*.....
    E3D0: 00 4E F4 13 0F 88 00 00 00 00 00 00 00 A0 86 01  // .N..............
    E3E0: 03 00 00 00 00 57 0B 00 00 00 00 00 00 4A 09 00  // .....W.......J..
    E3F0: 00 40 00 00 00 0F 20 0F 0D 2F 00 0F 00 06 06 00  // .@.... ../......
    E400: 02 14 00 00 00 07 07 07 00 0F 00 00 00 21 8A 05  // .............!..
    E410: 00 00 00 01 01 01 00 01 01 00 15 18 00 6C 07 00  // .............l..
    E420: 00 04 08 00 00 78 00 00 00 87 00 00 00 AF 69 50  // .....x........iP
    E430: 02 78 00 00 00 13 00 0A 0D 0E 05 00 01 1F 2A 0C  // .x............*.
    E440: 00 78 00 00 00 CE F4 13 0F 78 00 00 00 00 00 00  // .x.......x......
    E450: 00 F0 49 02 03 00 00 00 00 0F 03 00 00 00 00 00  // ..I.............
    E460: 00 4A 09 00 00 40 03 00 00 16 30 17 13 47 00 17  // .J...@....0..G..
    E470: 00 08 08 00 02 20 00 00 00 07 0A 0A 00 17 00 00  // ..... ..........
    E480: 00 21 90 05 00 00 00 01 01 01 00 01 01 00 1C 18  // .!..............
    E490: 00 22 0B 00 00 06 0C 00 00 B4 00 00 00 CB 00 00  // ."..............
    E4A0: 00 F2 79 70 02 B4 00 00 00 15 00 0A 0F 15 05 00  // ..yp............
    E4B0: 01 1F 2A 0C 00 B4 00 00 00 51 F7 13 0F B4 00 00  // ..*......Q......
    E4C0: 00 00 00 00 00 20 BF 02 03 00 00 00 00 1F 08 00  // ..... ..........
    E4D0: 00 00 00 00 00 FA 09 00 00 40 03 00 00 18 38 1B  // .........@....8.
    E4E0: 15 53 00 1B 00 08 08 00 02 20 00 00 00 07 0B 0B  // .S....... ......
    E4F0: 00 1C 00 00 00 31 12 07 00 00 00 01 01 01 00 01  // .....1..........
    E500: 01 00 1E 18 00 5C 0D 00 00 07 0E 00 00 D2 00 00  // .....\..........
    E510: 00 EC 00 00 00 52 92 80 02 D2 00 00 00 15 00 0A  // .....R..........
    E520: 12 17 05 00 01 1F 2A 0C 00 18 01 00 00 92 F8 13  // ......*.........
    E530: 0F 18 01 00 00 00 00 00 00 D4 30 00 04 00 00 00  // ..........0.....
    E540: 00 25 01 00 00 00 00 00 00 BA 08 00 00 40 00 00  // .%...........@..
    E550: 00 09 05 03 03 07 00 03 00 02 02 00 02 08 00 00  // ................
    E560: 00 05 03 03 00 05 00 00 00 11 02 05 00 00 00 01  // ................
    E570: 01 01 00 01 01 00 11 18 00 EE 00 00 00 0A 0A 00  // ................
    E580: 00 14 00 00 00 14 00 00 00 42 51 2A 02 08 00 00  // .........BQ*....
    E590: 00 0C 00 0A 0A 08 03 00 01 1F 2A 0C 00 0F 00 00  // ..........*.....
    E5A0: 00 C9 F0 13 0F 0F 00 00 00 00 00 00 00 A8 61 00  // ..............a.
    E5B0: 04 00 00 00 00 25 01 00 00 00 00 00 00 BA 08 00  // .....%..........
    E5C0: 00 40 00 00 00 09 09 05 03 0D 00 05 00 02 02 00  // .@..............
    E5D0: 02 08 00 00 00 05 03 03 00 05 00 00 00 11 04 05  // ................
    E5E0: 00 00 00 01 01 01 00 01 01 00 11 18 00 DB 01 00  // ................
    E5F0: 00 0A 0A 00 00 1E 00 00 00 1E 00 00 00 43 51 2A  // .............CQ*
    E600: 02 0F 00 00 00 0C 00 0A 0A 08 03 00 01 1F 2A 0C  // ..............*.
    E610: 00 1E 00 00 00 09 F1 13 0F 1E 00 00 00 00 00 00  // ................
    E620: 00 50 C3 00 04 00 00 00 00 2D 04 00 00 00 00 00  // .P.......-......
    E630: 00 BA 08 00 00 40 00 00 00 0A 0F 09 05 17 00 08  // .....@..........
    E640: 00 02 02 00 02 08 00 00 00 05 04 04 00 08 00 00  // ................
    E650: 00 11 04 05 00 00 00 01 01 01 00 01 01 00 12 18  // ................
    E660: 00 B6 03 00 00 0A 0A 00 00 3C 00 00 00 3C 00 00  // .........<...<..
    E670: 00 45 51 36 02 1E 00 00 00 0C 00 0A 0A 09 03 00  // .EQ6............
    E680: 01 1F 2A 0C 00 3C 00 00 00 C9 F1 13 0F 3C 00 00  // ..*..<.......<..
    E690: 00 00 00 00 00 F8 24 01 04 00 00 00 00 45 08 00  // ......$......E..
    E6A0: 00 00 00 00 00 3A 09 00 00 40 00 00 00 0D 17 0D  // .....:...@......
    E6B0: 07 23 00 0C 00 04 04 00 02 0C 00 00 00 05 05 05  // .#..............
    E6C0: 00 0C 00 00 00 21 06 05 00 00 00 01 01 01 00 01  // .....!..........
    E6D0: 01 00 15 18 00 91 05 00 00 0A 0A 00 00 5A 00 00  // .............Z..
    E6E0: 00 5A 00 00 00 48 51 46 02 2D 00 00 00 0C 00 0A  // .Z...HQF.-......
    E6F0: 0A 0C 03 00 01 1F 2A 0C 00 5A 00 00 00 89 F2 13  // ......*..Z......
    E700: 0F 5A 00 00 00 00 00 00 00 CC 55 01 04 00 00 00  // .Z........U.....
    E710: 00 55 0A 00 00 00 00 00 00 4A 09 00 00 40 00 00  // .U.......J...@..
    E720: 00 0F 1B 0F 09 29 00 0E 00 04 04 00 02 10 00 00  // .....)..........
    E730: 00 05 06 06 00 0E 00 00 00 21 88 05 00 00 00 01  // .........!......
    E740: 01 01 00 01 01 00 17 18 00 7F 06 00 00 0A 0A 00  // ................
    E750: 00 69 00 00 00 69 00 00 00 49 51 50 02 35 00 00  // .i...i...IQP.5..
    E760: 00 0C 00 0A 0A 0E 03 00 01 1F 2A 0C 00 69 00 00  // ..........*..i..
    E770: 00 0A F3 13 0F 69 00 00 00 00 00 00 00 A0 86 01  // .....i..........
    E780: 04 00 00 00 00 5D 0C 00 00 00 00 00 00 5A 09 00  // .....].......Z..
    E790: 00 40 00 00 00 10 1E 0F 09 2D 00 0F 00 04 04 00  // .@.......-......
    E7A0: 02 10 00 00 00 05 06 06 00 10 00 00 00 21 08 06  // .............!..
    E7B0: 00 00 00 01 01 01 00 01 01 00 18 18 00 6C 07 00  // .............l..
    E7C0: 00 0A 0A 00 00 78 00 00 00 78 00 00 00 4A 51 56  // .....x...x...JQV
    E7D0: 02 3C 00 00 00 0C 00 0A 0A 0F 03 00 01 1F 2A 0C  // .<............*.
    E7E0: 00 78 00 00 00 4A F3 13 0F 78 00 00 00 00 00 00  // .x...J...x......
    E7F0: 00 48 E8 01 04 00 00 00 00 7E 00 00 00 00 00 00  // .H.......~......
    E800: 00 EA 09 00 00 40 02 00 00 14 26 13 0D 39 00 13  // .....@....&..9..
    E810: 00 06 06 00 02 14 00 00 00 06 07 07 00 14 00 00  // ................
    E820: 00 31 8A 06 00 00 00 01 01 01 00 01 01 00 1B 18  // .1..............
    E830: 00 47 09 00 00 0D 0D 00 00 96 00 00 00 96 00 00  // .G..............
    E840: 00 4D 51 66 02 4B 00 00 00 0C 00 0A 0D 13 04 00  // .MQf.K..........
    E850: 01 1F 2A 0C 00 96 00 00 00 0A F4 13 0F 96 00 00  // ..*.............
    E860: 00 00 00 00 00 F0 49 02 04 00 00 00 00 0F 04 00  // ......I.........
    E870: 00 00 00 00 00 FA 09 00 00 40 03 00 00 16 2D 17  // .........@....-.
    E880: 0F 44 00 17 00 06 06 00 02 18 00 00 00 07 08 08  // .D..............
    E890: 00 18 00 00 00 31 0C 07 00 00 00 01 01 01 00 01  // .....1..........
    E8A0: 01 00 1C 18 00 22 0B 00 00 0F 0F 00 00 B4 00 00  // ....."..........
    E8B0: 00 B4 00 00 00 4F 51 78 02 5A 00 00 00 0C 00 0A  // .....OQx.Z......
    E8C0: 0F 15 05 00 01 1F 2A 0C 00 B4 00 00 00 CB F4 13  // ......*.........
    E8D0: 0F B4 00 00 00 00 00 00 00 20 BF 02 04 00 00 00  // ......... ......
    E8E0: 00 1F 08 00 00 00 00 00 00 8A 09 00 00 40 03 00  // .............@..
    E8F0: 00 18 34 1B 11 4E 00 1A 00 08 08 00 02 20 00 00  // ..4..N....... ..
    E900: 00 07 09 09 00 1C 00 00 00 31 8E 07 00 00 00 01  // .........1......
    E910: 01 01 00 01 01 00 1E 18 00 5C 0D 00 00 12 12 00  // .........\......
    E920: 00 D2 00 00 00 D2 00 00 00 52 51 86 02 69 00 00  // .........RQ..i..
    E930: 00 0C 00 0A 12 17 05 00 01 1F 2A 0C 00 D2 00 00  // ..........*.....
    E940: 00 8B F5 13 0F D2 00 00 00 00 00 00 00 B0 24 03  // ..............$.
    E950: 04 00 00 00 00 28 0B 00 00 00 00 00 00 9A 09 00  // .....(..........
    E960: 00 40 03 00 00 1A 3C 1F 13 5A 00 1E 00 08 08 00  // .@....<..Z......
    E970: 02 20 00 00 00 08 0A 0A 00 1F 00 00 00 31 10 08  // . ...........1..
    E980: 00 00 00 01 01 01 00 01 01 00 1F 18 00 4A 0F 00  // .............J..
    E990: 00 14 14 00 00 F0 00 00 00 F0 00 00 00 54 51 98  // .............TQ.
    E9A0: 02 78 00 00 00 0C 00 0A 14 19 06 00 01 1F 2A 0C  // .x............*.
    E9B0: 00 F0 00 00 00 4C F6 13 0F F0 00 00 00 00 00 00  // .....L..........
    E9C0: 00 14 3E 03 04 00 00 00 00 30 0B 00 00 00 00 00  // ..>......0......
    E9D0: 00 AA 09 00 00 40 03 00 00 1B 41 23 15 61 00 21  // .....@....A#.a.!
    E9E0: 00 08 08 00 02 20 00 00 00 08 0B 0B 00 1F 00 00  // ..... ..........
    E9F0: 00 31 92 08 00 00 00 01 01 01 00 01 01 00 20 18  // .1............ .
    EA00: 00 C6 0F 00 00 16 16 00 00 FF 00 00 00 FF 00 00  // ................
    EA10: 00 56 51 9C 02 80 00 00 00 0C 00 0A 16 1A 06 00  // .VQ.............
    EA20: 01 1F 2A 0C 00 FF 00 00 00 CC F6 13 0F FF 00 00  // ..*.............
    EA30: 00 00 00 00 00 E8 6E 03 04 00 00 00 00 40 0B 00  // ......n......@..
    EA40: 00 00 00 00 00 AA 09 00 00 40 03 00 00 1D 44 25  // .........@....D%
    EA50: 15 66 00 22 00 0A 0A 00 02 24 00 00 00 08 0C 0C  // .f.".....$......
    EA60: 00 1F 00 00 00 31 92 08 00 00 00 01 01 01 00 01  // .....1..........
    EA70: 01 00 22 18 00 B3 10 00 00 17 17 00 00 0E 01 00  // ..".............
    EA80: 00 0E 01 00 00 57 51 A8 02 87 00 00 00 0C 00 0A  // .....WQ.........
    EA90: 17 1C 06 00 01 1F 2A 0C 00 0E 01 00 00 0C F7 13  // ......*.........
    EAA0: 0F 0E 01 00 00 00 00 00 00 74 27 00 05 00 00 00  // .........t'.....
    EAB0: 00 25 0E 00 00 00 00 00 00 3A 09 00 00 40 00 00  // .%.......:...@..
    EAC0: 00 09 04 03 03 05 00 02 00 04 04 00 02 08 00 00  // ................
    EAD0: 00 05 03 03 00 02 00 00 00 21 02 05 00 00 00 01  // .........!......
    EAE0: 01 01 00 01 01 00 11 18 00 C0 00 00 00 04 08 00  // ................
    EAF0: 00 0D 00 00 00 0E 00 00 00 4C 51 1A 02 0D 00 00  // .........LQ.....
    EB00: 00 05 00 0A 02 08 03 00 01 1F 2A 0C 00 0D 00 00  // ..........*.....
    EB10: 00 88 F0 13 0F 0D 00 00 00 00 00 00 00 4C 4F 00  // .............LO.
    EB20: 05 00 00 00 00 25 00 00 00 00 00 00 00 3A 09 00  // .....%.......:..
    EB30: 00 40 00 00 00 09 07 05 03 0A 00 04 00 04 04 00  // .@..............
    EB40: 02 08 00 00 00 05 04 04 00 04 00 00 00 21 04 05  // .............!..
    EB50: 00 00 00 01 01 01 00 01 01 00 11 18 00 82 01 00  // ................
    EB60: 00 04 08 00 00 19 00 00 00 1C 00 00 00 4D 51 20  // .............MQ 
    EB70: 02 19 00 00 00 05 00 0A 03 08 03 00 01 1F 2A 0C  // ..............*.
    EB80: 00 19 00 00 00 09 F1 13 0F 19 00 00 00 00 00 00  // ................
    EB90: 00 E4 57 00 05 00 00 00 00 27 00 00 00 00 00 00  // ..W......'......
    EBA0: 00 3A 09 00 00 40 00 00 00 09 08 05 03 0B 00 04  // .:...@..........
    EBB0: 00 04 04 00 02 08 00 00 00 07 04 04 00 04 00 00  // ................
    EBC0: 00 21 0A 05 00 00 00 01 01 01 00 01 01 00 0F 18  // .!..............
    EBD0: 00 AC 01 00 00 04 08 00 00 1B 00 00 00 1F 00 00  // ................
    EBE0: 00 8E 61 2A 02 1B 00 00 00 12 00 0A 0C 08 05 00  // ..a*............
    EBF0: 01 1F 2A 0C 00 24 00 00 00 4B F1 13 0F 24 00 00  // ..*..$...K...$..
    EC00: 00 00 00 00 00 C8 AF 00 05 00 00 00 00 37 04 00  // .............7..
    EC10: 00 00 00 00 00 3A 09 00 00 40 00 00 00 0B 0F 07  // .....:...@......
    EC20: 07 16 00 07 00 04 04 00 02 08 00 00 00 07 05 05  // ................
    EC30: 00 08 00 00 00 21 0A 05 00 00 00 01 01 01 00 01  // .....!..........
    EC40: 01 00 11 18 00 57 03 00 00 04 08 00 00 36 00 00  // .....W.......6..
    EC50: 00 3E 00 00 00 8E 61 30 02 36 00 00 00 12 00 0A  // .>....a0.6......
    EC60: 0C 0A 05 00 01 1F 2A 0C 00 48 00 00 00 4C F2 13  // ......*..H...L..
    EC70: 0F 48 00 00 00 00 00 00 00 08 4C 01 05 00 00 00  // .H........L.....
    EC80: 00 57 0A 00 00 00 00 00 00 4A 09 00 00 40 00 00  // .W.......J...@..
    EC90: 00 0F 1C 0D 0B 28 00 0D 00 04 04 00 02 10 00 00  // .....(..........
    ECA0: 00 07 07 07 00 0E 00 00 00 21 8A 05 00 00 00 01  // .........!......
    ECB0: 01 01 00 01 01 00 15 18 00 50 06 00 00 04 08 00  // .........P......
    ECC0: 00 66 00 00 00 74 00 00 00 AF 69 48 02 66 00 00  // .f...t....iH.f..
    ECD0: 00 13 00 0A 0D 0E 05 00 01 1F 2A 0C 00 88 00 00  // ..........*.....
    ECE0: 00 4E F4 13 0F 88 00 00 00 00 00 00 00 A0 86 01  // .N..............
    ECF0: 05 00 00 00 00 57 0B 00 00 00 00 00 00 4A 09 00  // .....W.......J..
    ED00: 00 40 00 00 00 0F 20 0F 0D 2F 00 0F 00 06 06 00  // .@.... ../......
    ED10: 02 14 00 00 00 07 07 07 00 0F 00 00 00 21 8A 05  // .............!..
    ED20: 00 00 00 01 01 01 00 01 01 00 15 18 00 6C 07 00  // .............l..
    ED30: 00 04 08 00 00 78 00 00 00 87 00 00 00 AF 69 50  // .....x........iP
    ED40: 02 78 00 00 00 13 00 0A 0D 0E 05 00 01 1F 2A 0C  // .x............*.
    ED50: 00 78 00 00 00 CE F4 13 0F 78 00 00 00 00 00 00  // .x.......x......
    ED60: 00 48 E8 01 05 00 00 00 00 7F 00 00 00 00 00 00  // .H..............
    ED70: 00 4A 09 00 00 40 02 00 00 14 28 15 0F 3C 00 14  // .J...@....(..<..
    ED80: 00 08 08 00 02 1B 00 00 00 07 09 09 00 14 00 00  // ................
    ED90: 00 21 8E 05 00 00 00 01 01 01 00 01 01 00 1A 18  // .!..............
    EDA0: 00 47 09 00 00 05 0A 00 00 96 00 00 00 AA 00 00  // .G..............
    EDB0: 00 AF 69 5E 02 96 00 00 00 14 00 0A 0D 13 05 00  // ..i^............
    EDC0: 01 1F 2A 0C 00 96 00 00 00 50 F6 13 0F 96 00 00  // ..*......P......
    EDD0: 00 00 00 00 00 F0 49 02 05 00 00 00 00 0F 03 00  // ......I.........
    EDE0: 00 00 00 00 00 4A 09 00 00 40 03 00 00 16 30 17  // .....J...@....0.
    EDF0: 13 47 00 17 00 08 08 00 02 20 00 00 00 07 0A 0A  // .G....... ......
    EE00: 00 17 00 00 00 21 90 05 00 00 00 01 01 01 00 01  // .....!..........
    EE10: 01 00 1C 18 00 22 0B 00 00 06 0C 00 00 B4 00 00  // ....."..........
    EE20: 00 CB 00 00 00 F2 79 70 02 B4 00 00 00 15 00 0A  // ......yp........
    EE30: 0F 15 05 00 01 1F 2A 0C 00 B4 00 00 00 51 F7 13  // ......*......Q..
    EE40: 0F B4 00 00 00 00 00 00 00 20 BF 02 05 00 00 00  // ......... ......
    EE50: 00 1F 08 00 00 00 00 00 00 FA 09 00 00 40 03 00  // .............@..
    EE60: 00 18 38 1B 15 53 00 1B 00 08 08 00 02 20 00 00  // ..8..S....... ..
    EE70: 00 07 0B 0B 00 1C 00 00 00 31 12 07 00 00 00 01  // .........1......
    EE80: 01 01 00 01 01 00 1E 18 00 FD 0C 00 00 07 0E 00  // ................
    EE90: 00 D2 00 00 00 EC 00 00 00 52 92 80 02 D2 00 00  // .........R......
    EEA0: 00 15 00 0A 12 17 05 00 01 1F 2A 0C 00 18 01 00  // ..........*.....
    EEB0: 00 92 F8 13 0F 18 01 00 00 00 00 00 00 00 00 00  // ................
    EEC0: 00 0A 00 00 00 55 4C 01 00 7C FE 00 01 80 FE 00  // .....UL..|......
    EED0: 01 84 FE 00 01 88 FE 00 01 A0 FE 00 01 A4 FE 00  // ................
    EEE0: 01 09 1C 00 03 C9 1A 00 03 09 1B 00 03 FF FF FF  // ................
    EEF0: 00 00 28 00 00 A8 49 88 40 00 00 04 B0 80 02 00  // ..(...I.@.......
    EF00: 00 00 00 04 01 C0 C0 C0 C0 C0 C0 C0 C0 C0 00 00  // ................
    EF10: 00 80 00 00 00 80 00 00 00 FF FF FF 01 00 28 00  // ..............(.
    EF20: 00 A8 49 88 40 00 00 04 B0 80 02 00 00 00 00 04  // ..I.@...........
    EF30: 01 C0 C0 C0 C0 C0 C0 C0 C0 D0 00 00 00 80 00 00  // ................
    EF40: 00 90 00 00 00 FF FF FF 02 00 28 00 00 A8 49 88  // ..........(...I.
    EF50: 40 00 00 04 B0 80 02 00 00 00 00 04 01 C0 C0 C0  // @...............
    EF60: C0 C0 C0 C0 C0 D0 00 00 00 80 00 00 00 90 00 00  // ................
    EF70: 00 FF FF FF 03 00 28 00 00 A8 49 88 40 00 00 04  // ......(...I.@...
    EF80: B0 80 02 00 00 00 00 04 01 C0 C0 C0 C0 C0 C0 C0  // ................
    EF90: C0 C0 00 00 00 80 00 00 00 80 00 00 00 FF FF FF  // ................
    EFA0: 04 00 28 00 00 A8 49 88 60 00 00 01 C0 80 02 00  // ..(...I.`.......
    EFB0: 00 00 00 01 01 C0 C0 C0 C0 C0 C0 C0 C0 C0 00 00  // ................
    EFC0: 00 80 00 00 00 80 00 00 00 FF FF FF 05 00 28 00  // ..............(.
    EFD0: 00 A8 49 88 60 00 00 05 C0 80 02 00 00 00 00 05  // ..I.`...........
    EFE0: 01 C0 C0 C0 C0 C0 C0 C0 C0 D0 00 00 00 80 00 00  // ................
    EFF0: 00 90 00 00 00 FF FF FF 06 00 28 00 00 A8 49 88  // ..........(...I.
    F000: 60 00 03 00 C0 80 02 00 00 00 03 00 01 C0 C0 C0  // `...............
    F010: C0 C0 C0 C0 C0 D0 00 00 00 80 00 00 00 90 00 00  // ................
    F020: 00 FF FF FF 07 00 28 00 00 A8 49 88 60 00 01 00  // ......(...I.`...
    F030: C0 80 02 00 00 00 01 00 01 C0 C0 C0 C0 C0 C0 C0  // ................
    F040: C0 C0 00 00 00 80 00 00 00 80 00 00 00 FF FF FF  // ................
    F050: 08 00 28 00 00 A8 49 88 40 00 01 00 A0 80 02 00  // ..(...I.@.......
    F060: 00 00 01 00 01 C0 C0 C0 C0 C0 C0 C0 C0 C0 00 00  // ................
    F070: 00 80 00 00 00 80 00 00 00 FF FF FF 09 00 28 00  // ..............(.
    F080: 00 A8 49 88 40 00 01 00 A0 80 02 00 00 00 01 00  // ..I.@...........
    F090: 01 C0 C0 C0 C0 C0 C0 C0 C0 D0 00 00 00 80 00 00  // ................
    F0A0: 00 90 00 00 00 FF FF FF 0A 00 28 00 00 A8 49 88  // ..........(...I.
    F0B0: 40 00 01 00 A0 80 02 00 00 00 01 00 01 C0 C0 C0  // @...............
    F0C0: C0 C0 C0 C0 C0 D0 00 00 00 80 00 00 00 90 00 00  // ................
    F0D0: 00 FF FF FF 0B 00 28 00 00 A8 49 88 40 00 01 00  // ......(...I.@...
    F0E0: A0 80 02 00 00 00 01 00 01 C0 C0 C0 C0 C0 C0 C0  // ................
    F0F0: C0 C0 00 00 00 80 00 00 00 80 00 00 00 FF FF FF  // ................
    F100: 0C 00 28 00 00 A8 49 88 40 00 00 04 B0 80 02 00  // ..(...I.@.......
    F110: 00 00 00 04 01 C0 C0 C0 C0 C0 C0 C0 C0 C0 00 00  // ................
    F120: 00 80 00 00 00 80 00 00 00 FF FF FF 0D 00 28 00  // ..............(.
    F130: 00 A8 49 88 40 00 00 04 B0 80 02 00 00 00 00 04  // ..I.@...........
    F140: 01 C0 C0 C0 C0 C0 C0 C0 C0 D0 00 00 00 80 00 00  // ................
    F150: 00 90 00 00 00 FF FF FF 0E 00 28 00 00 A8 49 88  // ..........(...I.
    F160: 40 00 00 04 B0 80 02 00 00 00 00 04 01 C0 C0 C0  // @...............
    F170: C0 C0 C0 C0 C0 D0 00 00 00 80 00 00 00 90 00 00  // ................
    F180: 00 FF FF FF 0F 00 28 00 00 A8 49 88 40 00 00 04  // ......(...I.@...
    F190: B0 80 02 00 00 00 00 04 01 C0 C0 C0 C0 C0 C0 C0  // ................
    F1A0: C0 C0 00 00 00 80 00 00 00 80 00 00 00 FF FF FF  // ................
    F1B0: 10 00 28 00 00 A8 49 88 40 00 01 00 A0 80 02 00  // ..(...I.@.......
    F1C0: 00 00 01 00 01 C0 C0 C0 C0 C0 C0 C0 C0 C0 00 00  // ................
    F1D0: 00 80 00 00 00 80 00 00 00 FF FF FF 11 00 28 00  // ..............(.
    F1E0: 00 A8 49 88 40 00 01 00 A0 80 02 00 00 00 01 00  // ..I.@...........
    F1F0: 01 C0 C0 C0 C0 C0 C0 C0 C0 D0 00 00 00 80 00 00  // ................
    F200: 00 90 00 00 00 FF FF FF 12 00 28 00 00 A8 49 88  // ..........(...I.
    F210: 40 00 01 00 A0 80 02 00 00 00 01 00 01 C0 C0 C0  // @...............
    F220: C0 C0 C0 C0 C0 D0 00 00 00 80 00 00 00 90 00 00  // ................
    F230: 00 FF FF FF 13 00 28 00 00 A8 49 88 40 00 01 00  // ......(...I.@...
    F240: A0 80 02 00 00 00 01 00 01 C0 C0 C0 C0 C0 C0 C0  // ................
    F250: C0 C0 00 00 00 80 00 00 00 80 00 00 00 00 00 00  // ................
    F260: 00 2E 00 00 00 4F 4C 01 00 52 4C 01 00 53 4C 01  // .....OL..RL..SL.
    F270: 00 54 4C 01 00 56 4C 01 00 57 4C 01 00 58 4C 01  // .TL..VL..WL..XL.
    F280: 00 5E 4C 01 00 04 FE 00 01 08 FE 00 01 0C FE 00  // .^L.............
    F290: 01 10 FE 00 01 20 FE 00 01 24 FE 00 01 28 FE 00  // ..... ...$...(..
    F2A0: 01 2C FE 00 01 34 FE 00 01 38 FE 00 01 44 FE 00  // .,...4...8...D..
    F2B0: 01 50 FE 00 01 90 FE 00 01 98 FE 00 01 9C FE 00  // .P..............
    F2C0: 01 B4 FE 00 01 B8 FE 00 01 BC FE 00 01 84 FF 00  // ................
    F2D0: 01 88 FF 00 01 8C FF 00 01 90 FF 00 01 94 FF 00  // ................
    F2E0: 01 98 FF 00 01 9C FF 00 01 A0 FF 00 01 A4 FF 00  // ................
    F2F0: 01 A8 FF 00 01 AC FF 00 01 EC FF 00 01 F0 FF 00  // ................
    F300: 01 F4 FF 00 01 F8 FF 00 01 02 1D 00 03 03 1D 00  // ................
    F310: 03 8C 1C 00 03 A1 04 00 05 18 04 00 05 FF FF FF  // ................
    F320: 00 1A A7 20 00 00 00 06 06 00 04 00 00 F4 25 E5  // ... ..........%.
    F330: 0F 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    F340: 00 00 00 03 04 00 00 03 05 00 00 00 00 9C 00 04  // ................
    F350: 08 17 10 00 00 0F 30 00 00 22 0A 4C 56 50 05 01  // ......0..".LVP..
    F360: 00 20 40 04 00 10 42 00 00 00 00 00 00 66 00 00  // . @...B......f..
    F370: 1B 03 00 00 00 00 14 2F 2F 22 22 2B 2B 00 00 00  // .......//""++...
    F380: 00 00 00 00 00 00 00 00 00 1C 03 8E 03 AA 02 8E  // ................
    F390: 03 E3 00 AA 02 E3 00 71 00 E3 00 71 00 55 01 71  // .......q...q.U.q
    F3A0: 00 1C 03 55 01 1C 03 8E 03 CF 00 30 FF FF 0C 00  // ...U.......0....
    F3B0: F3 00 80 01 90 00 08 80 01 05 00 00 00 0E 10 00  // ................
    F3C0: 40 3F FF 3F 0F 2B 00 00 00 22 00 00 00 10 00 00  // @?.?.+..."......
    F3D0: 00 12 00 00 00 00 00 00 00 00 00 00 00 18 00 00  // ................
    F3E0: 00 24 40 01 00 25 40 01 00 26 40 01 00 24 48 01  // .$@..%@..&@..$H.
    F3F0: 00 25 48 01 00 26 48 01 00 24 40 05 00 25 40 05  // .%H..&H..$@..%@.
    F400: 00 26 40 05 00 24 48 05 00 25 48 05 00 26 48 05  // .&@..$H..%H..&H.
    F410: 00 24 40 09 00 25 40 09 00 26 40 09 00 24 48 09  // .$@..%@..&@..$H.
    F420: 00 25 48 09 00 26 48 09 00 24 40 0D 00 25 40 0D  // .%H..&H..$@..%@.
    F430: 00 26 40 0D 00 24 48 0D 00 25 48 0D 00 26 48 0D  // .&@..$H..%H..&H.
    F440: 00 FF FF FF 00 10 00 00 00 10 23 45 76 67 54 32  // ..........#EvgT2
    F450: 01 10 00 00 00 67 04 53 12 20 37 45 16 10 00 00  // .....g.S. 7E....
    F460: 00 65 43 72 10 64 25 17 03 10 00 00 00 67 54 13  // .eCr.d%......gT.
    F470: 02 76 54 23 10 01 00 00 00 46 27 15 03 20 17 36  // .vT#.....F'.. .6
    F480: 45 01 00 00 00 67 54 13 02 20 31 45 76 01 00 00  // E....gT.. 1Ev...
    F490: 00 51 23 40 76 20 31 45 76 01 00 00 00 10 32 45  // .Q#@v 1Ev.....2E
    F4A0: 76 20 14 53 76 00 00 00 00 00 50 00 03 03 00 00  // v .Sv.....P.....
    F4B0: 00 00 00 10 05 00 00 02 01 00 00 00 00 00 00 00  // ................
    F4C0: E4 0C 00 08 70 00 10 27 00 00 80 1F 01 00 98 E9  // ....p..'........
    F4D0: 00 00 C0 C1 00 00 1C 25 00 00 00 00 00 00 6B 00  // .......%......k.
    F4E0: 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    F4F0: 00 00 00 00 00 00 00 00 00 00 34 00 04 02 05 07  // ..........4.....
    F500: 0C 00 0E 00 00 00 00 00 00 00 01 07 0C 00 0E 00  // ................
    F510: 02 02 00 00 00 00 04 07 0C 00 0E 00 00 03 00 00  // ................
    F520: 00 00 02 07 0C 00 0E 00 00 01 00 00 00 00 14 00  // ................
    F530: 02 02 00 00 00 00 00 00 00 00 00 00 10 00 00 00  // ................
    F540: 00 00 20 00 02 01 14 00 1A 00 00 00 00 00 08 00  // .. .............
    F550: 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    F560: 00 00 F4 00 03 04 01 0B 00 00 D0 07 4E 0C 00 00  // ............N...
    F570: 4E 0C 10 27 00 00 FF 00 06 00 FF 00 00 01 04 00  // N..'............
    F580: 00 00 60 CC 05 00 70 C6 00 00 84 E4 00 00 70 C6  // ..`...p.......p.
    F590: 00 00 B0 CC 00 00 EC 77 00 00 0E D4 00 00 A4 00  // .......w........
    F5A0: 00 00 E8 DF 05 00 20 30 05 00 00 00 00 00 00 00  // ...... 0........
    F5B0: 00 00 02 00 00 00 00 00 F0 00 70 11 01 00 D0 84  // ..........p.....
    F5C0: 00 00 00 00 00 00 33 33 81 01 7D 1A 09 96 30 14  // ......33..}...0.
    F5D0: C9 02 90 01 90 01 24 04 18 00 00 00 00 00 00 00  // ......$.........
    F5E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    F5F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    F600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    F610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    F620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    F630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    F640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    F650: 00 00 00 00 00 00 FF FF FF FF FF FF FF FF FF FF  // ................
    F660: FF FF FF FF FF FF FF FF 00 00 00 00 00 00 00 00  // ................
    F670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    F680: 00 00 00 00                                      // ....


