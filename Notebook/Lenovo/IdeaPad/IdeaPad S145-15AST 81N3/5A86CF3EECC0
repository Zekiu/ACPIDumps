
Intel ACPI Component Architecture
ACPI Binary Table Extraction Utility version 20220331
Copyright (c) 2000 - 2022 Intel Corporation


 Signature  Length    Version Oem       Oem         Oem         Compiler Compiler
                              Id        TableId     RevisionId  Name     Revision
 _________  __________  ____  ________  __________  __________  _______  __________

 01)  SSDT  0x000006B2  0x01  "LENOVO"  "AGESA   "  0x00000001  "AMD "   0x00000001
 02)  MCFG  0x0000003C  0x01  "LENOVO"  "CB-01   "  0x00000001  "PTEC"   0x00000002
 03)  APIC  0x00000090  0x02  "LENOVO"  "CB-01   "  0x00000000  "PTEC"   0x00000002
 04)  CRAT  0x000002E8  0x01  "LENOVO"  "CB-01   "  0x00000001  "PTEC"   0x00000002
 05)  SSDT  0x00000643  0x01  "LENOVO"  "Tpm2Tabl"  0x00009999  "INTL"   0x20120711
 06)  TPM2  0x00000034  0x03  "LENOVO"  "CB-01   "  0x00000000  "PTEC"   0x00000002
 07)  VFCT  0x0000FC84  0x01  "LENOVO"  "CB-01   "  0x00000001  "PTEC"   0x00000002
 08)  BATB  0x0000004A  0x02  "LENOVO"  "CB-01   "  0x00000000  "PTEC"   0x00000002
 09)  IVRS  0x000000B0  0x02  "LENOVO"  "CB-01   "  0x00000001  "PTEC"   0x00000002
 10)  DSDT  0x00008ABB  0x01  "LENOVO"  "AMD     "  0x00001000  "INTL"   0x20120711
 11)  SBST  0x00000030  0x01  "LENOVO"  "CB-01   "  0x00000001  "PTEC"   0x00000002
 12)  WSMT  0x00000028  0x01  "LENOVO"  "CB-01   "  0x00000000  "PTEC"   0x00000002
 13)  SSDT  0x00001689  0x01  "LENOVO"  "CPMDFIGP"  0x00000001  "INTL"   0x20120711
 14)  UEFI  0x00000042  0x01  "LENOVO"  "CB-01   "  0x00000002  "PTEC"   0x00000002
 15)  SSDT  0x000003E2  0x02  "LENOVO"  "Tpm2Tabl"  0x00001000  "INTL"   0x20120711
 16)  FACP  0x0000010C  0x05  "LENOVO"  "CB-01   "  0x00000003  "PTEC"   0x00000002
 17)  FPDT  0x00000034  0x01  "LENOVO"  "CB-01   "  0x00000002  "PTEC"   0x00000002
 18)  SSDT  0x00004B62  0x02  "LENOVO"  "AGESA   "  0x00000002  "MSFT"   0x04000000
 19)  MSDM  0x00000055  0x03  "LENOVO"  "CB-01   "  0x00000000  "PTEC"   0x00000002
 20)  HPET  0x00000038  0x01  "LENOVO"  "CB-01   "  0x00000001  "PTEC"   0x00000002
 21)  SSDT  0x00001769  0x01  "LENOVO"  "CPMCMN  "  0x00000001  "INTL"   0x20120711
 22)  UEFI  0x00000102  0x01  "LENOVO"  "CB-01   "  0x00000001  "PTEC"   0x00000002
 23)  FACS  0x00000040  0x01
 24)  BGRT  0x00000038  0x01  "LENOVO"  "CB-01   "  0x00000002  "PTEC"   0x00000002

Found 24 ACPI tables in acpidump

APIC
----
[000h 0000   4]                    Signature : "APIC"    [Multiple APIC Description Table (MADT)]
[004h 0004   4]                 Table Length : 00000090
[008h 0008   1]                     Revision : 02
[009h 0009   1]                     Checksum : 68
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "CB-01   "
[018h 0024   4]                 Oem Revision : 00000000
[01Ch 0028   4]              Asl Compiler ID : "PTEC"
[020h 0032   4]        Asl Compiler Revision : 00000002

[024h 0036   4]           Local Apic Address : FEE00000
[028h 0040   4]        Flags (decoded below) : 00000001
                         PC-AT Compatibility : 1

[02Ch 0044   1]                Subtable Type : 00 [Processor Local APIC]
[02Dh 0045   1]                       Length : 08
[02Eh 0046   1]                 Processor ID : 00
[02Fh 0047   1]                Local Apic ID : 10
[030h 0048   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[034h 0052   1]                Subtable Type : 00 [Processor Local APIC]
[035h 0053   1]                       Length : 08
[036h 0054   1]                 Processor ID : 01
[037h 0055   1]                Local Apic ID : 11
[038h 0056   4]        Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[03Ch 0060   1]                Subtable Type : 00 [Processor Local APIC]
[03Dh 0061   1]                       Length : 08
[03Eh 0062   1]                 Processor ID : 02
[03Fh 0063   1]                Local Apic ID : 02
[040h 0064   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[044h 0068   1]                Subtable Type : 00 [Processor Local APIC]
[045h 0069   1]                       Length : 08
[046h 0070   1]                 Processor ID : 03
[047h 0071   1]                Local Apic ID : 03
[048h 0072   4]        Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[04Ch 0076   1]                Subtable Type : 01 [I/O APIC]
[04Dh 0077   1]                       Length : 0C
[04Eh 0078   1]                  I/O Apic ID : 04
[04Fh 0079   1]                     Reserved : 00
[050h 0080   4]                      Address : FEC00000
[054h 0084   4]                    Interrupt : 00000000

[058h 0088   1]                Subtable Type : 01 [I/O APIC]
[059h 0089   1]                       Length : 0C
[05Ah 0090   1]                  I/O Apic ID : 05
[05Bh 0091   1]                     Reserved : 00
[05Ch 0092   4]                      Address : FEC01000
[060h 0096   4]                    Interrupt : 00000018

[064h 0100   1]                Subtable Type : 02 [Interrupt Source Override]
[065h 0101   1]                       Length : 0A
[066h 0102   1]                          Bus : 00
[067h 0103   1]                       Source : 00
[068h 0104   4]                    Interrupt : 00000002
[06Ch 0108   2]        Flags (decoded below) : 0000
                                    Polarity : 0
                                Trigger Mode : 0

[06Eh 0110   1]                Subtable Type : 02 [Interrupt Source Override]
[06Fh 0111   1]                       Length : 0A
[070h 0112   1]                          Bus : 00
[071h 0113   1]                       Source : 09
[072h 0114   4]                    Interrupt : 00000009
[076h 0118   2]        Flags (decoded below) : 000F
                                    Polarity : 3
                                Trigger Mode : 3

[078h 0120   1]                Subtable Type : 04 [Local APIC NMI]
[079h 0121   1]                       Length : 06
[07Ah 0122   1]                 Processor ID : 00
[07Bh 0123   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[07Dh 0125   1]         Interrupt Input LINT : 01

[07Eh 0126   1]                Subtable Type : 04 [Local APIC NMI]
[07Fh 0127   1]                       Length : 06
[080h 0128   1]                 Processor ID : 01
[081h 0129   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[083h 0131   1]         Interrupt Input LINT : 01

[084h 0132   1]                Subtable Type : 04 [Local APIC NMI]
[085h 0133   1]                       Length : 06
[086h 0134   1]                 Processor ID : 02
[087h 0135   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[089h 0137   1]         Interrupt Input LINT : 01

[08Ah 0138   1]                Subtable Type : 04 [Local APIC NMI]
[08Bh 0139   1]                       Length : 06
[08Ch 0140   1]                 Processor ID : 03
[08Dh 0141   2]        Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[08Fh 0143   1]         Interrupt Input LINT : 01

Raw Table Data: Length 144 (0x90)

    0000: 41 50 49 43 90 00 00 00 02 68 4C 45 4E 4F 56 4F  // APIC.....hLENOVO
    0010: 43 42 2D 30 31 20 20 20 00 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 00 00 E0 FE 01 00 00 00 00 08 00 10  // ................
    0030: 01 00 00 00 00 08 01 11 01 00 00 00 00 08 02 02  // ................
    0040: 00 00 00 00 00 08 03 03 00 00 00 00 01 0C 04 00  // ................
    0050: 00 00 C0 FE 00 00 00 00 01 0C 05 00 00 10 C0 FE  // ................
    0060: 18 00 00 00 02 0A 00 00 02 00 00 00 00 00 02 0A  // ................
    0070: 00 09 09 00 00 00 0F 00 04 06 00 05 00 01 04 06  // ................
    0080: 01 05 00 01 04 06 02 05 00 01 04 06 03 05 00 01  // ................


BATB
----
[000h 0000   4]                    Signature : "BATB"    
[004h 0004   4]                 Table Length : 0000004A
[008h 0008   1]                     Revision : 02
[009h 0009   1]                     Checksum : 10
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "CB-01   "
[018h 0024   4]                 Oem Revision : 00000000
[01Ch 0028   4]              Asl Compiler ID : "PTEC"
[020h 0032   4]        Asl Compiler Revision : 00000002


**** Unknown ACPI table signature [BATB]


Raw Table Data: Length 74 (0x4A)

    0000: 42 41 54 42 4A 00 00 00 02 10 4C 45 4E 4F 56 4F  // BATBJ.....LENOVO
    0010: 43 42 2D 30 31 20 20 20 00 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 E8 63 95 D2 E1 CF 41 4D 8E 54 DA 43  // .....c....AM.T.C
    0030: 22 FE DE 5C 36 00 00 A0 C1 BD 00 00 00 00 00 00  // "..\6...........
    0040: BC BD 00 00 00 00 00 00 01 00                    // ..........


BGRT
----
[000h 0000   4]                    Signature : "BGRT"    [Boot Graphics Resource Table]
[004h 0004   4]                 Table Length : 00000038
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 83
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "CB-01   "
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "PTEC"
[020h 0032   4]        Asl Compiler Revision : 00000002

[024h 0036   2]                      Version : 0001
[026h 0038   1]       Status (decoded below) : 01
                                   Displayed : 1
                          Orientation Offset : 0
[027h 0039   1]                   Image Type : 00
[028h 0040   8]                Image Address : 00000000B107C000
[030h 0048   4]                Image OffsetX : 00000199
[034h 0052   4]                Image OffsetY : 0000008B

Raw Table Data: Length 56 (0x38)

    0000: 42 47 52 54 38 00 00 00 01 83 4C 45 4E 4F 56 4F  // BGRT8.....LENOVO
    0010: 43 42 2D 30 31 20 20 20 02 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 01 00 01 00 00 C0 07 B1 00 00 00 00  // ................
    0030: 99 01 00 00 8B 00 00 00                          // ........


CRAT
----
[000h 0000   4]                    Signature : "CRAT"    
[004h 0004   4]                 Table Length : 000002E8
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 63
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "CB-01   "
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "PTEC"
[020h 0032   4]        Asl Compiler Revision : 00000002


**** Unknown ACPI table signature [CRAT]


Raw Table Data: Length 744 (0x2E8)

    0000: 43 52 41 54 E8 02 00 00 01 63 4C 45 4E 4F 56 4F  // CRAT.....cLENOVO
    0010: 43 42 2D 30 31 20 20 20 01 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 0C 00 00 00 01 00 00 00 00 00 00 00  // ................
    0030: 00 28 00 00 05 00 00 00 00 00 00 00 10 00 00 00  // .(..............
    0040: 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0050: 00 00 00 00 00 00 00 00 00 28 00 00 19 00 00 00  // .........(......
    0060: 00 00 00 00 00 00 00 80 00 00 28 00 28 00 00 00  // ..........(.(...
    0070: 00 00 40 00 40 01 00 00 01 0A 04 20 00 00 00 00  // ..@.@...... ....
    0080: 01 28 00 00 01 00 00 00 00 00 00 00 00 00 00 00  // .(..............
    0090: 00 00 00 00 00 00 00 00 00 00 00 00 40 00 00 00  // ............@...
    00A0: 00 00 00 00 00 00 00 00 02 40 00 00 0B 00 00 00  // .........@......
    00B0: 10 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00  // ................
    00C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    00D0: 00 00 00 00 20 00 00 00 01 01 40 00 08 00 01 00  // .... .....@.....
    00E0: 00 00 00 00 00 00 00 00 02 40 00 00 0D 00 00 00  // .........@......
    00F0: 10 00 00 00 00 00 03 00 00 00 00 00 00 00 00 00  // ................
    0100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0110: 00 00 00 00 60 00 00 00 01 01 40 00 03 00 01 00  // ....`.....@.....
    0120: 00 00 00 00 00 00 00 00 02 40 00 00 09 00 00 00  // .........@......
    0130: 10 00 00 00 00 00 03 00 00 00 00 00 00 00 00 00  // ................
    0140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0150: 00 00 00 00 00 04 00 00 02 01 40 00 10 00 00 00  // ..........@.....
    0160: 00 00 00 00 00 00 00 00 02 40 00 00 0B 00 00 00  // .........@......
    0170: 11 00 00 00 00 00 02 00 00 00 00 00 00 00 00 00  // ................
    0180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0190: 00 00 00 00 20 00 00 00 01 01 40 00 08 00 01 00  // .... .....@.....
    01A0: 00 00 00 00 00 00 00 00 03 40 00 00 0B 00 00 00  // .........@......
    01B0: 10 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00  // ................
    01C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    01D0: 00 00 00 00 01 00 00 00 FF 40 00 00 FF 40 00 00  // .........@...@..
    01E0: FF 40 00 00 00 00 00 00 03 40 00 00 0D 00 00 00  // .@.......@......
    01F0: 10 00 00 00 00 00 03 00 00 00 00 00 00 00 00 00  // ................
    0200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0210: 00 00 00 00 01 00 00 00 00 00 FF 18 00 00 FF 30  // ...............0
    0220: 00 00 FF 18 00 00 00 00 03 40 00 00 AB 02 00 00  // .........@......
    0230: 10 00 00 00 00 00 03 00 00 00 00 00 00 00 00 00  // ................
    0240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0250: 00 00 00 00 02 00 00 00 08 04 00 00 08 04 00 00  // ................
    0260: 08 04 00 00 00 00 00 00 03 40 00 00 AD 02 00 00  // .........@......
    0270: 10 00 00 00 00 00 03 00 00 00 00 00 00 00 00 00  // ................
    0280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0290: 00 00 00 00 02 00 00 00 00 00 08 04 00 00 04 02  // ................
    02A0: 00 00 08 04 00 00 00 00 03 40 00 00 0B 00 00 00  // .........@......
    02B0: 11 00 00 00 00 00 02 00 00 00 00 00 00 00 00 00  // ................
    02C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    02D0: 00 00 00 00 01 00 00 00 FF 40 00 00 FF 40 00 00  // .........@...@..
    02E0: FF 40 00 00 00 00 00 00                          // .@......


DSDT
----
DefinitionBlock ("", "DSDT", 1, "LENOVO", "AMD", 0x00001000)
{
    /*
     * iASL Warning: There were 7 external control methods found during
     * disassembly, but only 0 were resolved (7 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.APTS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.AWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.VGA_.AFN4, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.VGA_.AFN7, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.TPM_.PTS_, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (AFN7, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (ALIB, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M029, UnknownObj)

    Scope (_PR)
    {
        Processor (C000, 0x00, 0x00000810, 0x06){}
        Processor (C001, 0x01, 0x00000810, 0x06){}
        Processor (C002, 0x02, 0x00000810, 0x06){}
        Processor (C003, 0x03, 0x00000810, 0x06){}
    }

    Name (_S0, Package (0x04)  // _S0_: S0 System State
    {
        0x00, 
        0x00, 
        0x00, 
        0x00
    })
    Name (_S3, Package (0x04)  // _S3_: S3 System State
    {
        0x03, 
        0x03, 
        0x00, 
        0x00
    })
    Name (_S4, Package (0x04)  // _S4_: S4 System State
    {
        0x04, 
        0x04, 
        0x00, 
        0x00
    })
    Name (_S5, Package (0x04)  // _S5_: S5 System State
    {
        0x05, 
        0x05, 
        0x00, 
        0x00
    })
    Name (TZFG, 0x00)
    OperationRegion (DBG0, SystemIO, 0x80, 0x01)
    Field (DBG0, ByteAcc, NoLock, Preserve)
    {
        IO80,   8
    }

    OperationRegion (DEB2, SystemIO, 0x80, 0x02)
    Field (DEB2, WordAcc, NoLock, Preserve)
    {
        P80H,   16
    }

    OperationRegion (PMIO, SystemIO, 0x0CD6, 0x02)
    Field (PMIO, ByteAcc, NoLock, Preserve)
    {
        PIDX,   8, 
        PDAT,   8
    }

    OperationRegion (P01, SystemIO, 0x0801, 0x01)
    Field (P01, ByteAcc, NoLock, Preserve)
    {
        PST1,   8
    }

    OperationRegion (XMOS, SystemIO, 0x72, 0x02)
    Field (XMOS, ByteAcc, Lock, Preserve)
    {
        XIDX,   8, 
        XDAT,   8
    }

    IndexField (XIDX, XDAT, ByteAcc, Lock, Preserve)
    {
        Offset (0x74), 
        WKSR,   8, 
        Offset (0xD0), 
        WLNS,   1, 
        BTNS,   1
    }

    OperationRegion (TPMF, SystemIO, 0x0CD4, 0x02)
    Field (TPMF, ByteAcc, NoLock, Preserve)
    {
        IDX1,   8, 
        DAT1,   8
    }

    IndexField (IDX1, DAT1, ByteAcc, NoLock, Preserve)
    {
        Offset (0x61), 
        TPM1,   8
    }

    Name (LINX, 0x00)
    Name (OSSP, 0x00)
    Name (OSTB, Ones)
    Name (TPOS, Zero)
    Method (OSTP, 0, NotSerialized)
    {
        If ((OSTB == Ones))
        {
            If (CondRefOf (\_OSI, Local0))
            {
                OSTB = 0x00
                TPOS = 0x00
                If (_OSI ("Windows 2001"))
                {
                    OSTB = 0x08
                    TPOS = 0x08
                }

                If (_OSI ("Windows 2001.1"))
                {
                    OSTB = 0x20
                    TPOS = 0x20
                }

                If (_OSI ("Windows 2001 SP1"))
                {
                    OSTB = 0x10
                    TPOS = 0x10
                }

                If (_OSI ("Windows 2001 SP2"))
                {
                    OSTB = 0x11
                    TPOS = 0x11
                }

                If (_OSI ("Windows 2001 SP3"))
                {
                    OSTB = 0x12
                    TPOS = 0x12
                }

                If (_OSI ("Windows 2006"))
                {
                    OSTB = 0x40
                    TPOS = 0x40
                }

                If (_OSI ("Windows 2006 SP1"))
                {
                    OSSP = 0x01
                    OSTB = 0x40
                    TPOS = 0x40
                }

                If (_OSI ("Windows 2009"))
                {
                    OSSP = 0x01
                    OSTB = 0x50
                    TPOS = 0x50
                }

                If (_OSI ("Windows 2012"))
                {
                    OSSP = 0x01
                    OSTB = 0x60
                    TPOS = 0x60
                }

                If (_OSI ("Windows 2013"))
                {
                    OSSP = 0x01
                    OSTB = 0x70
                    TPOS = 0x70
                }

                If (_OSI ("Windows 2015"))
                {
                    OSSP = 0x01
                    OSTB = 0x90
                    TPOS = 0x90
                }

                If (_OSI ("Linux"))
                {
                    LINX = 0x01
                    OSTB = 0x80
                    TPOS = 0x80
                }
            }
            ElseIf (CondRefOf (\_OS, Local0))
            {
                If (SEQL (_OS, "Microsoft Windows"))
                {
                    OSTB = 0x01
                    TPOS = 0x01
                }
                ElseIf (SEQL (_OS, "Microsoft WindowsME: Millennium Edition"))
                {
                    OSTB = 0x02
                    TPOS = 0x02
                }
                ElseIf (SEQL (_OS, "Microsoft Windows NT"))
                {
                    OSTB = 0x04
                    TPOS = 0x04
                }
                Else
                {
                    OSTB = 0x00
                    TPOS = 0x00
                }
            }
            Else
            {
                OSTB = 0x00
                TPOS = 0x00
            }

            If ((TPOS == 0x80)){}
        }

        Return (OSTB) /* \OSTB */
    }

    Method (SEQL, 2, Serialized)
    {
        Local0 = SizeOf (Arg0)
        Local1 = SizeOf (Arg1)
        If ((Local0 != Local1))
        {
            Return (Zero)
        }

        Name (BUF0, Buffer (Local0){})
        BUF0 = Arg0
        Name (BUF1, Buffer (Local0){})
        BUF1 = Arg1
        Local2 = Zero
        While ((Local2 < Local0))
        {
            Local3 = DerefOf (BUF0 [Local2])
            Local4 = DerefOf (BUF1 [Local2])
            If ((Local3 != Local4))
            {
                Return (Zero)
            }

            Local2++
        }

        Return (One)
    }

    Method (_PTS, 1, NotSerialized)  // _PTS: Prepare To Sleep
    {
        If ((TPM1 != 0x00))
        {
            \_SB.TPM.PTS (Arg0)
        }

        If ((Arg0 == 0x05))
        {
            P80H = 0xE5
            \_SB.PCI0.SMB.BLNK = 0x00
        }

        If ((Arg0 == 0x04))
        {
            P80H = 0xE4
            \_SB.PCI0.SMB.BLNK = 0x00
            FPTS ()
        }

        If ((Arg0 == 0x03))
        {
            P80H = 0xE3
            \_SB.PCI0.SMB.BLNK = 0x01
            FPTS ()
            \_SB.PCI0.SMB.RSTU = Zero
        }

        \_SB.PCI0.SMB.CLPS = 0x01
        \_SB.PCI0.SMB.SLPS = 0x01
        \_SB.PCI0.SMB.PEWS = \_SB.PCI0.SMB.PEWS
        \_SB.APTS (Arg0)
    }

    Method (_WAK, 1, NotSerialized)  // _WAK: Wake
    {
        \_SB.PCI0.SMB.BLNK = 0x03
        FWAK ()
        If ((Arg0 == 0x03))
        {
            P80H = 0xA3
            \_SB.PCI0.SMB.RSTU = One
        }

        \_SB.PCI0.SMB.PEWS = \_SB.PCI0.SMB.PEWS
        \_SB.PCI0.SMB.PWDE = 0x01
        \_SB.PCI0.SMB.PEWD = Zero
        \_SB.AWAK (Arg0)
        If ((Arg0 == 0x03))
        {
            If (GPIC)
            {
                \_SB.PCI0.LPC0.DSPI ()
            }

            If (((WKSR == 0x06) || (WKSR == 0x07))){}
            Else
            {
                Notify (\_SB.PWRB, 0x02) // Device Wake
            }
        }

        If ((Arg0 == 0x04))
        {
            P80H = 0xA4
            \_SB.PCI0.LPC0.EC0._REG (0x03, 0x01)
            If (GPIC)
            {
                \_SB.PCI0.LPC0.DSPI ()
            }

            Notify (\_SB.PWRB, 0x02) // Device Wake
        }

        Notify (\_SB.PCI0, 0x00) // Bus Check
        Return (Zero)
    }

    Scope (_SI)
    {
        Method (_SST, 1, NotSerialized)  // _SST: System Status
        {
            If ((Arg0 == 0x01))
            {
                Debug = "===== SST Working ====="
            }

            If ((Arg0 == 0x02))
            {
                Debug = "===== SST Waking ====="
            }

            If ((Arg0 == 0x03))
            {
                Debug = "===== SST Sleeping ====="
            }

            If ((Arg0 == 0x04))
            {
                Debug = "===== SST Sleeping S4 ====="
            }
        }
    }

    Name (GPIC, 0x00)
    Method (_PIC, 1, NotSerialized)  // _PIC: Interrupt Model
    {
        GPIC = Arg0
        If (Arg0)
        {
            \_SB.PCI0.LPC0.DSPI ()
            \_SB.PCI0.B0FN ()
        }
    }

    Scope (_SB)
    {
        Device (PWRB)
        {
            Name (_HID, EisaId ("PNP0C0C") /* Power Button Device */)  // _HID: Hardware ID
        }

        Device (PCI0)
        {
            Name (_ADR, 0x00)  // _ADR: Address
            Name (_UID, 0x01)  // _UID: Unique ID
            Name (_BBN, 0x00)  // _BBN: BIOS Bus Number
            Name (AMHP, 0x00)
            Name (VGPU, 0x00010000)
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (SUPP, 0x00)
            Name (CTRL, 0x00)
            Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
            {
                CreateDWordField (Arg3, 0x00, CDW1)
                CreateDWordField (Arg3, 0x04, CDW2)
                CreateDWordField (Arg3, 0x08, CDW3)
                If ((Arg0 == ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */))
                {
                    SUPP = CDW2 /* \_SB_.PCI0._OSC.CDW2 */
                    CTRL = CDW3 /* \_SB_.PCI0._OSC.CDW3 */
                    If (((SUPP & 0x16) != 0x16))
                    {
                        CTRL &= 0x1E
                    }

                    CTRL &= 0x1D
                    If (~(CDW1 & 0x01))
                    {
                        If ((CTRL & 0x01)){}
                        If ((CTRL & 0x04)){}
                        If ((CTRL & 0x10)){}
                    }

                    If ((Arg1 != One))
                    {
                        CDW1 |= 0x08
                    }

                    If ((CDW3 != CTRL))
                    {
                        CDW1 |= 0x10
                    }

                    CTRL &= 0x1E
                    CDW3 = CTRL /* \_SB_.PCI0.CTRL */
                    Return (Arg3)
                }
                Else
                {
                    CDW1 |= 0x04
                    Return (Arg3)
                }
            }

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                OSTP ()
                FINI ()
            }

            OperationRegion (BAR0, PCI_Config, 0xF8, 0x08)
            Field (BAR0, DWordAcc, NoLock, Preserve)
            {
                BINX,   32, 
                BDAT,   32
            }

            Mutex (MUTE, 0x00)
            Method (B0FN, 0, NotSerialized)
            {
                Acquire (MUTE, 0xFFFF)
                BINX = Zero
                Local0 = BDAT /* \_SB_.PCI0.BDAT */
                Local0 &= 0xFFFFFFEF
                BDAT = Local0
                Release (MUTE)
            }

            OperationRegion (NBMS, PCI_Config, 0x60, 0x08)
            Field (NBMS, DWordAcc, NoLock, Preserve)
            {
                MIDX,   32, 
                MIDR,   32
            }

            OperationRegion (NBXP, PCI_Config, 0xE0, 0x08)
            Field (NBXP, DWordAcc, NoLock, Preserve)
            {
                NBXI,   32, 
                NBXD,   32
            }

            Mutex (NBMM, 0x00)
            Mutex (NBXM, 0x00)
            Method (NBMR, 1, NotSerialized)
            {
                Acquire (NBMM, 0xFFFF)
                Local0 = (Arg0 & 0x7F)
                MIDX = Local0
                Local0 = MIDR /* \_SB_.PCI0.MIDR */
                MIDX = 0x7F
                Release (NBMM)
                Return (Local0)
            }

            Method (NBMW, 2, NotSerialized)
            {
                Acquire (NBMM, 0xFFFF)
                Local0 = (Arg0 & 0x7F)
                Local0 |= 0x80
                MIDX = Local0
                MIDR = Arg1
                MIDX = Local0 &= 0x7F
                Release (NBMM)
            }

            Method (NBXR, 1, NotSerialized)
            {
                Acquire (NBXM, 0xFFFF)
                NBXI = Arg0
                Local0 = NBXD /* \_SB_.PCI0.NBXD */
                NBXI = 0x00
                Release (NBXM)
                Return (Local0)
            }

            Method (NBXW, 2, NotSerialized)
            {
                Acquire (NBXM, 0xFFFF)
                NBXI = Arg0
                NBXD = Arg1
                NBXI = 0x00
                Release (NBXM)
            }

            Method (GFXM, 0, NotSerialized)
            {
                Local0 = NBMR (0x08)
                Local0 >>= 0x08
                Local0 &= 0x0F
                Return (Local0)
            }

            Method (GPPM, 0, NotSerialized)
            {
                Local0 = NBMR (0x67)
                Local0 &= 0x0F
                Return (Local0)
            }

            Method (GPPX, 0, NotSerialized)
            {
                Local0 = NBMR (0x2D)
                Local0 >>= 0x07
                Local0 &= 0x0F
                Return (Local0)
            }

            Method (XPTR, 2, NotSerialized)
            {
                If ((Arg0 < 0x02))
                {
                    Return (0x00)
                }

                If (((Arg0 > 0x0A) || (Arg0 == 0x08)))
                {
                    Return (0x00)
                }
                Else
                {
                    Local0 = GPPM ()
                    Local1 = GPPX ()
                    If ((Arg0 == 0x0A))
                    {
                        If (((Local0 == 0x03) && (Local1 == 0x03)))
                        {
                            Local0 = 0x20
                            Local2 = NBMR (0x2D)
                            If (Arg1)
                            {
                                Local2 &= ~Local0
                            }
                            Else
                            {
                                Local2 |= Local0
                            }

                            NBMW (0x2D, Local2)
                            Return (Ones)
                        }
                        Else
                        {
                            Return (0x00)
                        }
                    }

                    If ((Arg0 == 0x09))
                    {
                        If (((Local0 >= 0x02) && (Local1 >= 0x02)))
                        {
                            Local0 = 0x10
                            Local2 = NBMR (0x2D)
                            If (Arg1)
                            {
                                Local2 &= ~Local0
                            }
                            Else
                            {
                                Local2 |= Local0
                            }

                            NBMW (0x2D, Local2)
                            Return (Ones)
                        }
                        Else
                        {
                            Return (0x00)
                        }
                    }

                    Local0 = 0x01
                    If ((Arg0 < 0x04))
                    {
                        Local1 = (Arg0 + 0x02)
                    }
                    Else
                    {
                        Local1 = (Arg0 + 0x11)
                    }

                    Local0 <<= Local1
                    Local2 = NBMR (0x08)
                    If (Arg1)
                    {
                        Local2 &= ~Local0
                    }
                    Else
                    {
                        Local2 |= Local0
                    }

                    NBMW (0x08, Local2)
                    Return (Ones)
                }
            }

            OperationRegion (K8ST, SystemMemory, 0xBDCB1F98, 0x00000048)
            Field (K8ST, AnyAcc, NoLock, Preserve)
            {
                C0_0,   16, 
                C2_0,   16, 
                C4_0,   16, 
                C6_0,   16, 
                C8_0,   16, 
                CA_0,   16, 
                CC_0,   16, 
                CE_0,   16, 
                D0_0,   16, 
                D2_0,   16, 
                D4_0,   16, 
                D6_0,   16, 
                D8_0,   16, 
                DA_0,   16, 
                DC_0,   16, 
                DE_0,   16, 
                E0_0,   16, 
                E2_0,   16, 
                E4_0,   16, 
                E6_0,   16, 
                E8_0,   16, 
                EA_0,   16, 
                EC_0,   16, 
                EE_0,   16, 
                F0_0,   16, 
                F2_0,   16, 
                F4_0,   16, 
                F6_0,   16, 
                F8_0,   16, 
                FA_0,   16, 
                FC_0,   16, 
                FE_0,   16, 
                TOML,   32, 
                TOMH,   32
            }

            Name (RSRC, ResourceTemplate ()
            {
                WordBusNumber (ResourceProducer, MinFixed, MaxFixed, SubDecode,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x00FF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0100,             // Length
                    0x00,, )
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000A0000,         // Range Minimum
                    0x000BFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00020000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C0000,         // Range Minimum
                    0x000C1FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, _Y00, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C2000,         // Range Minimum
                    0x000C3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, _Y01, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C4000,         // Range Minimum
                    0x000C5FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, _Y02, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C6000,         // Range Minimum
                    0x000C7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, _Y03, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C8000,         // Range Minimum
                    0x000C9FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, _Y04, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000CA000,         // Range Minimum
                    0x000CBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, _Y05, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000CC000,         // Range Minimum
                    0x000CDFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, _Y06, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000CE000,         // Range Minimum
                    0x000CFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, _Y07, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D0000,         // Range Minimum
                    0x000D1FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, _Y08, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D2000,         // Range Minimum
                    0x000D3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, _Y09, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D4000,         // Range Minimum
                    0x000D5FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, _Y0A, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D6000,         // Range Minimum
                    0x000D7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, _Y0B, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D8000,         // Range Minimum
                    0x000D9FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, _Y0C, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000DA000,         // Range Minimum
                    0x000DBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, _Y0D, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000DC000,         // Range Minimum
                    0x000DDFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, _Y0E, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000DE000,         // Range Minimum
                    0x000DFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, _Y0F, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E0000,         // Range Minimum
                    0x000E1FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, _Y10, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E2000,         // Range Minimum
                    0x000E3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, _Y11, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E4000,         // Range Minimum
                    0x000E5FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, _Y12, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E6000,         // Range Minimum
                    0x000E7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, _Y13, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E8000,         // Range Minimum
                    0x000E9FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, _Y14, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000EA000,         // Range Minimum
                    0x000EBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, _Y15, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000EC000,         // Range Minimum
                    0x000EDFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, _Y16, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000EE000,         // Range Minimum
                    0x000EFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, _Y17, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x00000000,         // Range Minimum
                    0x00000000,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00000000,         // Length
                    0x00,, _Y18, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0xFC000000,         // Range Minimum
                    0xFDFFFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x02000000,         // Length
                    0x00,, _Y19, AddressRangeMemory, TypeStatic)
                IO (Decode16,
                    0x0CF8,             // Range Minimum
                    0x0CF8,             // Range Maximum
                    0x01,               // Alignment
                    0x08,               // Length
                    )
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x0CF7,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0CF8,             // Length
                    0x00,, , TypeStatic, DenseTranslation)
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x0D00,             // Range Minimum
                    0xFFFF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0xF300,             // Length
                    0x00,, , TypeStatic, DenseTranslation)
            })
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                CreateBitField (RSRC, \_SB.PCI0._Y00._RW, C0RW)  // _RW_: Read-Write Status
                CreateDWordField (RSRC, \_SB.PCI0._Y00._LEN, C0LN)  // _LEN: Length
                C0RW = One
                C0LN = 0x2000
                If ((C0_0 & 0x1818))
                {
                    C0LN = 0x00
                }

                CreateBitField (RSRC, \_SB.PCI0._Y01._RW, C2RW)  // _RW_: Read-Write Status
                CreateDWordField (RSRC, \_SB.PCI0._Y01._LEN, C2LN)  // _LEN: Length
                C2RW = One
                C2LN = 0x2000
                If ((C2_0 & 0x1818))
                {
                    C2LN = 0x00
                }

                CreateBitField (RSRC, \_SB.PCI0._Y02._RW, C4RW)  // _RW_: Read-Write Status
                CreateDWordField (RSRC, \_SB.PCI0._Y02._LEN, C4LN)  // _LEN: Length
                C4RW = One
                C4LN = 0x2000
                If ((C4_0 & 0x1818))
                {
                    C4LN = 0x00
                }

                CreateBitField (RSRC, \_SB.PCI0._Y03._RW, C6RW)  // _RW_: Read-Write Status
                CreateDWordField (RSRC, \_SB.PCI0._Y03._LEN, C6LN)  // _LEN: Length
                C6RW = One
                C6LN = 0x2000
                If ((C6_0 & 0x1818))
                {
                    C6LN = 0x00
                }

                CreateBitField (RSRC, \_SB.PCI0._Y04._RW, C8RW)  // _RW_: Read-Write Status
                CreateDWordField (RSRC, \_SB.PCI0._Y04._LEN, C8LN)  // _LEN: Length
                C8RW = One
                C8LN = 0x2000
                If ((C8_0 & 0x1818))
                {
                    C8LN = 0x00
                }

                CreateBitField (RSRC, \_SB.PCI0._Y05._RW, CARW)  // _RW_: Read-Write Status
                CreateDWordField (RSRC, \_SB.PCI0._Y05._LEN, CALN)  // _LEN: Length
                CARW = One
                CALN = 0x2000
                If ((CA_0 & 0x1818))
                {
                    CALN = 0x00
                }

                CreateBitField (RSRC, \_SB.PCI0._Y06._RW, CCRW)  // _RW_: Read-Write Status
                CreateDWordField (RSRC, \_SB.PCI0._Y06._LEN, CCLN)  // _LEN: Length
                CCRW = One
                CCLN = 0x2000
                If ((CC_0 & 0x1818))
                {
                    CCLN = 0x00
                }

                CreateBitField (RSRC, \_SB.PCI0._Y07._RW, CERW)  // _RW_: Read-Write Status
                CreateDWordField (RSRC, \_SB.PCI0._Y07._LEN, CELN)  // _LEN: Length
                CERW = One
                CELN = 0x2000
                If ((CE_0 & 0x1818))
                {
                    CELN = 0x00
                }

                CreateBitField (RSRC, \_SB.PCI0._Y08._RW, D0RW)  // _RW_: Read-Write Status
                CreateDWordField (RSRC, \_SB.PCI0._Y08._LEN, D0LN)  // _LEN: Length
                D0RW = One
                D0LN = 0x2000
                If ((D0_0 & 0x1818))
                {
                    D0LN = 0x00
                }

                CreateBitField (RSRC, \_SB.PCI0._Y09._RW, D2RW)  // _RW_: Read-Write Status
                CreateDWordField (RSRC, \_SB.PCI0._Y09._LEN, D2LN)  // _LEN: Length
                D2RW = One
                D2LN = 0x2000
                If ((D2_0 & 0x1818))
                {
                    D2LN = 0x00
                }

                CreateBitField (RSRC, \_SB.PCI0._Y0A._RW, D4RW)  // _RW_: Read-Write Status
                CreateDWordField (RSRC, \_SB.PCI0._Y0A._LEN, D4LN)  // _LEN: Length
                D4RW = One
                D4LN = 0x2000
                If ((D4_0 & 0x1818))
                {
                    D4LN = 0x00
                }

                CreateBitField (RSRC, \_SB.PCI0._Y0B._RW, D6RW)  // _RW_: Read-Write Status
                CreateDWordField (RSRC, \_SB.PCI0._Y0B._LEN, D6LN)  // _LEN: Length
                D6RW = One
                D6LN = 0x2000
                If ((D6_0 & 0x1818))
                {
                    D6LN = 0x00
                }

                CreateBitField (RSRC, \_SB.PCI0._Y0C._RW, D8RW)  // _RW_: Read-Write Status
                CreateDWordField (RSRC, \_SB.PCI0._Y0C._LEN, D8LN)  // _LEN: Length
                D8RW = One
                D8LN = 0x2000
                If ((D8_0 & 0x1818))
                {
                    D8LN = 0x00
                }

                CreateBitField (RSRC, \_SB.PCI0._Y0D._RW, DARW)  // _RW_: Read-Write Status
                CreateDWordField (RSRC, \_SB.PCI0._Y0D._LEN, DALN)  // _LEN: Length
                DARW = One
                DALN = 0x2000
                If ((DA_0 & 0x1818))
                {
                    DALN = 0x00
                }

                CreateBitField (RSRC, \_SB.PCI0._Y0E._RW, DCRW)  // _RW_: Read-Write Status
                CreateDWordField (RSRC, \_SB.PCI0._Y0E._LEN, DCLN)  // _LEN: Length
                DCRW = One
                DCLN = 0x2000
                If ((DC_0 & 0x1818))
                {
                    DCLN = 0x00
                }

                CreateBitField (RSRC, \_SB.PCI0._Y0F._RW, DERW)  // _RW_: Read-Write Status
                CreateDWordField (RSRC, \_SB.PCI0._Y0F._LEN, DELN)  // _LEN: Length
                DERW = One
                DELN = 0x2000
                If ((DE_0 & 0x1818))
                {
                    DELN = 0x00
                }

                CreateBitField (RSRC, \_SB.PCI0._Y10._RW, E0RW)  // _RW_: Read-Write Status
                CreateDWordField (RSRC, \_SB.PCI0._Y10._LEN, E0LN)  // _LEN: Length
                E0RW = One
                E0LN = 0x2000
                If ((E0_0 & 0x1818))
                {
                    E0LN = 0x00
                }

                CreateBitField (RSRC, \_SB.PCI0._Y11._RW, E2RW)  // _RW_: Read-Write Status
                CreateDWordField (RSRC, \_SB.PCI0._Y11._LEN, E2LN)  // _LEN: Length
                E2RW = One
                E2LN = 0x2000
                If ((E2_0 & 0x1818))
                {
                    E2LN = 0x00
                }

                CreateBitField (RSRC, \_SB.PCI0._Y12._RW, E4RW)  // _RW_: Read-Write Status
                CreateDWordField (RSRC, \_SB.PCI0._Y12._LEN, E4LN)  // _LEN: Length
                E4RW = One
                E4LN = 0x2000
                If ((E4_0 & 0x1818))
                {
                    E4LN = 0x00
                }

                CreateBitField (RSRC, \_SB.PCI0._Y13._RW, E6RW)  // _RW_: Read-Write Status
                CreateDWordField (RSRC, \_SB.PCI0._Y13._LEN, E6LN)  // _LEN: Length
                E6RW = One
                E6LN = 0x2000
                If ((E6_0 & 0x1818))
                {
                    E6LN = 0x00
                }

                CreateBitField (RSRC, \_SB.PCI0._Y14._RW, E8RW)  // _RW_: Read-Write Status
                CreateDWordField (RSRC, \_SB.PCI0._Y14._LEN, E8LN)  // _LEN: Length
                E8RW = One
                E8LN = 0x2000
                If ((E8_0 & 0x1818))
                {
                    E8LN = 0x00
                }

                CreateBitField (RSRC, \_SB.PCI0._Y15._RW, EARW)  // _RW_: Read-Write Status
                CreateDWordField (RSRC, \_SB.PCI0._Y15._LEN, EALN)  // _LEN: Length
                EARW = One
                EALN = 0x2000
                If ((EA_0 & 0x1818))
                {
                    EALN = 0x00
                }

                CreateBitField (RSRC, \_SB.PCI0._Y16._RW, ECRW)  // _RW_: Read-Write Status
                CreateDWordField (RSRC, \_SB.PCI0._Y16._LEN, ECLN)  // _LEN: Length
                ECRW = One
                ECLN = 0x2000
                If ((EC_0 & 0x1818))
                {
                    ECLN = 0x00
                }

                CreateBitField (RSRC, \_SB.PCI0._Y17._RW, EERW)  // _RW_: Read-Write Status
                CreateDWordField (RSRC, \_SB.PCI0._Y17._LEN, EELN)  // _LEN: Length
                EERW = One
                EELN = 0x2000
                If ((EE_0 & 0x1818))
                {
                    EELN = 0x00
                }

                CreateDWordField (RSRC, \_SB.PCI0._Y18._MIN, BT1S)  // _MIN: Minimum Base Address
                CreateDWordField (RSRC, \_SB.PCI0._Y18._MAX, BT1M)  // _MAX: Maximum Base Address
                CreateDWordField (RSRC, \_SB.PCI0._Y18._LEN, BT1L)  // _LEN: Length
                CreateDWordField (RSRC, \_SB.PCI0._Y19._MIN, BT2S)  // _MIN: Minimum Base Address
                CreateDWordField (RSRC, \_SB.PCI0._Y19._MAX, BT2M)  // _MAX: Maximum Base Address
                CreateDWordField (RSRC, \_SB.PCI0._Y19._LEN, BT2L)  // _LEN: Length
                Local0 = 0xF8000000
                BT1S = TOML /* \_SB_.PCI0.TOML */
                BT1M = (Local0 - 0x01)
                BT1L = (Local0 - TOML) /* \_SB_.PCI0.TOML */
                Return (RSRC) /* \_SB_.PCI0.RSRC */
            }

            Device (MEMR)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (MEM1, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x0F50,             // Range Minimum
                        0x0F50,             // Range Maximum
                        0x01,               // Alignment
                        0x02,               // Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00000000,         // Address Length
                        _Y1A)
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00000000,         // Address Length
                        _Y1B)
                    Memory32Fixed (ReadWrite,
                        0xF8000000,         // Address Base
                        0x04000000,         // Address Length
                        )
                })
                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y1A._BAS, MB01)  // _BAS: Base Address
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y1A._LEN, ML01)  // _LEN: Length
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y1B._BAS, MB02)  // _BAS: Base Address
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y1B._LEN, ML02)  // _LEN: Length
                    If (GPIC)
                    {
                        MB01 = 0xFEC00000
                        MB02 = 0xFEE00000
                        ML01 = 0x2000
                        ML02 = 0x1000
                    }

                    Return (MEM1) /* \_SB_.PCI0.MEMR.MEM1 */
                }
            }

            Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
            {
                If (GPIC)
                {
                    Return (Package (0x1B)
                    {
                        Package (0x04)
                        {
                            0x0001FFFF, 
                            0x00, 
                            0x00, 
                            0x1E
                        }, 

                        Package (0x04)
                        {
                            0x0001FFFF, 
                            0x01, 
                            0x00, 
                            0x1F
                        }, 

                        Package (0x04)
                        {
                            0x0001FFFF, 
                            0x02, 
                            0x00, 
                            0x1C
                        }, 

                        Package (0x04)
                        {
                            0x0001FFFF, 
                            0x03, 
                            0x00, 
                            0x1D
                        }, 

                        Package (0x04)
                        {
                            0x0002FFFF, 
                            0x00, 
                            0x00, 
                            0x2F
                        }, 

                        Package (0x04)
                        {
                            0x0002FFFF, 
                            0x01, 
                            0x00, 
                            0x30
                        }, 

                        Package (0x04)
                        {
                            0x0002FFFF, 
                            0x02, 
                            0x00, 
                            0x31
                        }, 

                        Package (0x04)
                        {
                            0x0002FFFF, 
                            0x03, 
                            0x00, 
                            0x32
                        }, 

                        Package (0x04)
                        {
                            0x0003FFFF, 
                            0x00, 
                            0x00, 
                            0x27
                        }, 

                        Package (0x04)
                        {
                            0x0003FFFF, 
                            0x01, 
                            0x00, 
                            0x28
                        }, 

                        Package (0x04)
                        {
                            0x0003FFFF, 
                            0x02, 
                            0x00, 
                            0x29
                        }, 

                        Package (0x04)
                        {
                            0x0003FFFF, 
                            0x03, 
                            0x00, 
                            0x2A
                        }, 

                        Package (0x04)
                        {
                            0x0008FFFF, 
                            0x00, 
                            0x00, 
                            0x26
                        }, 

                        Package (0x04)
                        {
                            0x0008FFFF, 
                            0x01, 
                            0x00, 
                            0x27
                        }, 

                        Package (0x04)
                        {
                            0x0008FFFF, 
                            0x02, 
                            0x00, 
                            0x24
                        }, 

                        Package (0x04)
                        {
                            0x0008FFFF, 
                            0x03, 
                            0x00, 
                            0x25
                        }, 

                        Package (0x04)
                        {
                            0x0009FFFF, 
                            0x00, 
                            0x00, 
                            0x2E
                        }, 

                        Package (0x04)
                        {
                            0x0009FFFF, 
                            0x01, 
                            0x00, 
                            0x2F
                        }, 

                        Package (0x04)
                        {
                            0x0009FFFF, 
                            0x02, 
                            0x00, 
                            0x2C
                        }, 

                        Package (0x04)
                        {
                            0x0009FFFF, 
                            0x03, 
                            0x00, 
                            0x2D
                        }, 

                        Package (0x04)
                        {
                            0x0010FFFF, 
                            0x00, 
                            0x00, 
                            0x12
                        }, 

                        Package (0x04)
                        {
                            0x0011FFFF, 
                            0x00, 
                            0x00, 
                            0x13
                        }, 

                        Package (0x04)
                        {
                            0x0012FFFF, 
                            0x00, 
                            0x00, 
                            0x12
                        }, 

                        Package (0x04)
                        {
                            0x0014FFFF, 
                            0x00, 
                            0x00, 
                            0x10
                        }, 

                        Package (0x04)
                        {
                            0x0014FFFF, 
                            0x01, 
                            0x00, 
                            0x11
                        }, 

                        Package (0x04)
                        {
                            0x0014FFFF, 
                            0x02, 
                            0x00, 
                            0x12
                        }, 

                        Package (0x04)
                        {
                            0x0014FFFF, 
                            0x03, 
                            0x00, 
                            0x13
                        }
                    })
                }
                Else
                {
                    Return (Package (0x1B)
                    {
                        Package (0x04)
                        {
                            0x0001FFFF, 
                            0x00, 
                            ^LPC0.LNKG, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0001FFFF, 
                            0x01, 
                            ^LPC0.LNKH, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0001FFFF, 
                            0x02, 
                            ^LPC0.LNKE, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0001FFFF, 
                            0x03, 
                            ^LPC0.LNKF, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0002FFFF, 
                            0x00, 
                            ^LPC0.LNKH, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0002FFFF, 
                            0x01, 
                            ^LPC0.LNKA, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0002FFFF, 
                            0x02, 
                            ^LPC0.LNKB, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0002FFFF, 
                            0x03, 
                            ^LPC0.LNKC, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0003FFFF, 
                            0x00, 
                            ^LPC0.LNKH, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0003FFFF, 
                            0x01, 
                            ^LPC0.LNKA, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0003FFFF, 
                            0x02, 
                            ^LPC0.LNKB, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0003FFFF, 
                            0x03, 
                            ^LPC0.LNKC, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0008FFFF, 
                            0x00, 
                            ^LPC0.LNKG, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0008FFFF, 
                            0x01, 
                            ^LPC0.LNKH, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0008FFFF, 
                            0x02, 
                            ^LPC0.LNKE, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0008FFFF, 
                            0x03, 
                            ^LPC0.LNKF, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0009FFFF, 
                            0x00, 
                            ^LPC0.LNKG, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0009FFFF, 
                            0x01, 
                            ^LPC0.LNKH, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0009FFFF, 
                            0x02, 
                            ^LPC0.LNKE, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0009FFFF, 
                            0x03, 
                            ^LPC0.LNKF, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0010FFFF, 
                            0x00, 
                            ^LPC0.LNKC, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0011FFFF, 
                            0x00, 
                            ^LPC0.LNKD, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0012FFFF, 
                            0x00, 
                            ^LPC0.LNKC, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0014FFFF, 
                            0x00, 
                            ^LPC0.LNKA, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0014FFFF, 
                            0x01, 
                            ^LPC0.LNKB, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0014FFFF, 
                            0x02, 
                            ^LPC0.LNKC, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0014FFFF, 
                            0x03, 
                            ^LPC0.LNKD, 
                            0x00
                        }
                    })
                }
            }

            OperationRegion (BAR1, PCI_Config, 0x14, 0x04)
            Field (BAR1, ByteAcc, NoLock, Preserve)
            {
                NBBA,   32
            }

            Method (XCMP, 2, NotSerialized)
            {
                If ((0x10 != SizeOf (Arg0)))
                {
                    Return (0x00)
                }

                If ((0x10 != SizeOf (Arg1)))
                {
                    Return (0x00)
                }

                Local0 = 0x00
                While ((Local0 < 0x10))
                {
                    If ((DerefOf (Arg0 [Local0]) != DerefOf (Arg1 [Local0]
                        )))
                    {
                        Return (0x00)
                    }

                    Local0++
                }

                Return (0x01)
            }

            Device (GPP0)
            {
                Name (_ADR, 0x00020001)  // _ADR: Address
                Name (_PRW, Package (0x02)  // _PRW: Power Resources for Wake
                {
                    0x08, 
                    0x04
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (GPIC)
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                0x00, 
                                0x18
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                0x00, 
                                0x19
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                0x00, 
                                0x1A
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                0x00, 
                                0x1B
                            }
                        })
                    }
                    Else
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                ^^LPC0.LNKA, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                ^^LPC0.LNKB, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                ^^LPC0.LNKC, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                ^^LPC0.LNKD, 
                                0x00
                            }
                        })
                    }
                }

                Device (VGA)
                {
                    Name (_ADR, 0x00)  // _ADR: Address
                    Name (DOSA, 0x00)
                    Method (_DOS, 1, NotSerialized)  // _DOS: Disable Output Switching
                    {
                        DOSA = Arg0
                    }

                    Method (_DOD, 0, NotSerialized)  // _DOD: Display Output Devices
                    {
                        Return (Package (0x05)
                        {
                            0x00010100, 
                            0x00010110, 
                            0x0200, 
                            0x00010210, 
                            0x00010220
                        })
                    }

                    Device (LCD)
                    {
                        Method (_ADR, 0, NotSerialized)  // _ADR: Address
                        {
                            Return (0x0110)
                        }

                        Name (BRLV, Buffer (0x11)
                        {
                            /* 0000 */  0x52, 0x22, 0x02, 0x08, 0x0E, 0x16, 0x1C, 0x22,  // R"....."
                            /* 0008 */  0x2A, 0x30, 0x36, 0x3E, 0x44, 0x4B, 0x52, 0x58,  // *06>DKRX
                            /* 0010 */  0x64                                             // d
                        })
                        Method (_BCL, 0, NotSerialized)  // _BCL: Brightness Control Levels
                        {
                            Return (BRLV) /* \_SB_.PCI0.GPP0.VGA_.LCD_.BRLV */
                        }

                        Method (_BCM, 1, NotSerialized)  // _BCM: Brightness Control Method
                        {
                            If ((^^^^VGA.AF7E == 0x80000001))
                            {
                                Divide ((Arg0 * 0xFF), 0x64, Local1, Local0)
                                ^^^^VGA.AFN7 (Local0)
                            }
                        }
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (0x00)
                    }
                }

                Device (HDAU)
                {
                    Name (_ADR, 0x01)  // _ADR: Address
                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (0x00)
                    }
                }
            }

            Device (GPP1)
            {
                Name (_ADR, 0x00020002)  // _ADR: Address
                Name (_PRW, Package (0x02)  // _PRW: Power Resources for Wake
                {
                    0x08, 
                    0x04
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (GPIC)
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                0x00, 
                                0x20
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                0x00, 
                                0x21
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                0x00, 
                                0x22
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                0x00, 
                                0x23
                            }
                        })
                    }
                    Else
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                ^^LPC0.LNKA, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                ^^LPC0.LNKB, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                ^^LPC0.LNKC, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                ^^LPC0.LNKD, 
                                0x00
                            }
                        })
                    }
                }
            }

            Device (GPP2)
            {
                Name (_ADR, 0x00020003)  // _ADR: Address
                Name (_PRW, Package (0x02)  // _PRW: Power Resources for Wake
                {
                    0x08, 
                    0x04
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (GPIC)
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                0x00, 
                                0x28
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                0x00, 
                                0x29
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                0x00, 
                                0x2A
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                0x00, 
                                0x2B
                            }
                        })
                    }
                    Else
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                ^^LPC0.LNKA, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                ^^LPC0.LNKB, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                ^^LPC0.LNKC, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                ^^LPC0.LNKD, 
                                0x00
                            }
                        })
                    }
                }

                Device (PXSX)
                {
                    Name (_ADR, 0x00)  // _ADR: Address
                    OperationRegion (RPXX, PCI_Config, 0x00, 0x10)
                    Field (RPXX, AnyAcc, NoLock, Preserve)
                    {
                        VDID,   32
                    }

                    OperationRegion (FLDR, PCI_Config, 0x44, 0x06)
                    Field (FLDR, ByteAcc, NoLock, Preserve)
                    {
                        DCAP,   32, 
                        DCTR,   16
                    }

                    Method (WIST, 0, Serialized)
                    {
                        If (CondRefOf (VDID))
                        {
                            Switch (ToInteger (VDID))
                            {
                                Case (0x095A8086)
                                {
                                    Return (0x01)
                                }
                                Case (0x095B8086)
                                {
                                    Return (0x01)
                                }
                                Case (0x31658086)
                                {
                                    Return (0x01)
                                }
                                Case (0x31668086)
                                {
                                    Return (0x01)
                                }
                                Case (0x08B18086)
                                {
                                    Return (0x01)
                                }
                                Case (0x08B28086)
                                {
                                    Return (0x01)
                                }
                                Case (0x08B38086)
                                {
                                    Return (0x01)
                                }
                                Case (0x08B48086)
                                {
                                    Return (0x01)
                                }
                                Case (0x24F38086)
                                {
                                    Return (0x01)
                                }
                                Case (0x24F48086)
                                {
                                    Return (0x01)
                                }
                                Case (0x24F58086)
                                {
                                    Return (0x01)
                                }
                                Case (0x24F68086)
                                {
                                    Return (0x01)
                                }
                                Case (0x24FD8086)
                                {
                                    Return (0x01)
                                }
                                Case (0x24FB8086)
                                {
                                    Return (0x01)
                                }
                                Case (0x25268086)
                                {
                                    Return (0x01)
                                }
                                Case (0xC82110EC)
                                {
                                    Return (0x01)
                                }
                                Case (0x0042168C)
                                {
                                    Return (0x01)
                                }
                                Default
                                {
                                    Return (0x00)
                                }

                            }
                        }
                        Else
                        {
                            Return (0x00)
                        }
                    }

                    PowerResource (WRST, 0x05, 0x0000)
                    {
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            Return (0x01)
                        }

                        Method (_ON, 0, NotSerialized)  // _ON_: Power On
                        {
                        }

                        Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
                        {
                        }

                        Method (_RST, 0, NotSerialized)  // _RST: Device Reset
                        {
                            If ((DCAP & 0x10000000))
                            {
                                Local0 = DCTR /* \_SB_.PCI0.GPP2.PXSX.DCTR */
                                Local0 |= 0x8000
                                DCTR = Local0
                            }
                        }
                    }

                    Method (_PRR, 0, NotSerialized)  // _PRR: Power Resource for Reset
                    {
                        Return (Package (0x01)
                        {
                            WRST
                        })
                    }
                }
            }

            Device (GPP3)
            {
                Name (_ADR, 0x00020004)  // _ADR: Address
                Name (_PRW, Package (0x02)  // _PRW: Power Resources for Wake
                {
                    0x08, 
                    0x04
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (GPIC)
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                0x00, 
                                0x30
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                0x00, 
                                0x31
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                0x00, 
                                0x32
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                0x00, 
                                0x33
                            }
                        })
                    }
                    Else
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                ^^LPC0.LNKA, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                ^^LPC0.LNKB, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                ^^LPC0.LNKC, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                ^^LPC0.LNKD, 
                                0x00
                            }
                        })
                    }
                }
            }

            Device (GPP4)
            {
                Name (_ADR, 0x00020005)  // _ADR: Address
                Name (_PRW, Package (0x02)  // _PRW: Power Resources for Wake
                {
                    0x08, 
                    0x04
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (GPIC)
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                0x00, 
                                0x1B
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                0x00, 
                                0x18
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                0x00, 
                                0x19
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                0x00, 
                                0x1A
                            }
                        })
                    }
                    Else
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                ^^LPC0.LNKD, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                ^^LPC0.LNKA, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                ^^LPC0.LNKB, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                ^^LPC0.LNKC, 
                                0x00
                            }
                        })
                    }
                }
            }

            Device (GFX0)
            {
                Name (_ADR, 0x00030001)  // _ADR: Address
                Name (_PRW, Package (0x02)  // _PRW: Power Resources for Wake
                {
                    0x08, 
                    0x04
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (GPIC)
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                0x00, 
                                0x23
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                0x00, 
                                0x20
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                0x00, 
                                0x21
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                0x00, 
                                0x22
                            }
                        })
                    }
                    Else
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                ^^LPC0.LNKD, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                ^^LPC0.LNKA, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                ^^LPC0.LNKB, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                ^^LPC0.LNKC, 
                                0x00
                            }
                        })
                    }
                }

                Device (VGA)
                {
                    Name (_ADR, 0x00)  // _ADR: Address
                    Name (DOSA, 0x00)
                    Method (_DOS, 1, NotSerialized)  // _DOS: Disable Output Switching
                    {
                        DOSA = Arg0
                    }

                    Method (_DOD, 0, NotSerialized)  // _DOD: Display Output Devices
                    {
                        Return (Package (0x05)
                        {
                            0x00010100, 
                            0x00010110, 
                            0x0200, 
                            0x00010210, 
                            0x00010220
                        })
                    }

                    Device (LCD)
                    {
                        Method (_ADR, 0, NotSerialized)  // _ADR: Address
                        {
                            Return (0x0110)
                        }

                        Name (BRLV, Buffer (0x11)
                        {
                            /* 0000 */  0x52, 0x22, 0x02, 0x08, 0x0E, 0x16, 0x1C, 0x22,  // R"....."
                            /* 0008 */  0x2A, 0x30, 0x36, 0x3E, 0x44, 0x4B, 0x52, 0x58,  // *06>DKRX
                            /* 0010 */  0x64                                             // d
                        })
                        Method (_BCL, 0, NotSerialized)  // _BCL: Brightness Control Levels
                        {
                            Return (BRLV) /* \_SB_.PCI0.GFX0.VGA_.LCD_.BRLV */
                        }

                        Method (_BCM, 1, NotSerialized)  // _BCM: Brightness Control Method
                        {
                            If ((^^^^VGA.AF7E == 0x80000001))
                            {
                                Divide ((Arg0 * 0xFF), 0x64, Local1, Local0)
                                ^^^^VGA.AFN7 (Local0)
                            }
                        }
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (0x00)
                    }
                }

                Device (HDAU)
                {
                    Name (_ADR, 0x01)  // _ADR: Address
                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (0x00)
                    }
                }
            }

            Device (GFX1)
            {
                Name (_ADR, 0x00030002)  // _ADR: Address
                Name (_PRW, Package (0x02)  // _PRW: Power Resources for Wake
                {
                    0x08, 
                    0x04
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (GPIC)
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                0x00, 
                                0x2B
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                0x00, 
                                0x28
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                0x00, 
                                0x29
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                0x00, 
                                0x2A
                            }
                        })
                    }
                    Else
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                ^^LPC0.LNKD, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                ^^LPC0.LNKA, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                ^^LPC0.LNKB, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                ^^LPC0.LNKC, 
                                0x00
                            }
                        })
                    }
                }
            }

            Device (GFX2)
            {
                Name (_ADR, 0x00030003)  // _ADR: Address
                Name (_PRW, Package (0x02)  // _PRW: Power Resources for Wake
                {
                    0x08, 
                    0x04
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (GPIC)
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                0x00, 
                                0x33
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                0x00, 
                                0x30
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                0x00, 
                                0x31
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                0x00, 
                                0x32
                            }
                        })
                    }
                    Else
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                ^^LPC0.LNKD, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                ^^LPC0.LNKA, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                ^^LPC0.LNKB, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                ^^LPC0.LNKC, 
                                0x00
                            }
                        })
                    }
                }
            }

            Device (GFX3)
            {
                Name (_ADR, 0x00030004)  // _ADR: Address
                Name (_PRW, Package (0x02)  // _PRW: Power Resources for Wake
                {
                    0x08, 
                    0x04
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (GPIC)
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                0x00, 
                                0x1A
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                0x00, 
                                0x1B
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                0x00, 
                                0x18
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                0x00, 
                                0x19
                            }
                        })
                    }
                    Else
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                ^^LPC0.LNKC, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                ^^LPC0.LNKD, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                ^^LPC0.LNKA, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                ^^LPC0.LNKB, 
                                0x00
                            }
                        })
                    }
                }
            }

            Device (GFX4)
            {
                Name (_ADR, 0x00030005)  // _ADR: Address
                Name (_PRW, Package (0x02)  // _PRW: Power Resources for Wake
                {
                    0x08, 
                    0x04
                })
                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (GPIC)
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                0x00, 
                                0x22
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                0x00, 
                                0x23
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                0x00, 
                                0x20
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                0x00, 
                                0x21
                            }
                        })
                    }
                    Else
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                ^^LPC0.LNKC, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                ^^LPC0.LNKD, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                ^^LPC0.LNKA, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                ^^LPC0.LNKB, 
                                0x00
                            }
                        })
                    }
                }
            }

            Name (XUPC, Package (0x04)
            {
                0xFF, 
                0xFF, 
                0x00, 
                0x00
            })
            Name (XPLD, Buffer (0x10)
            {
                /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x30, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // 0.......
            })
            Device (XHC0)
            {
                Name (_ADR, 0x00100000)  // _ADR: Address
                Name (_PRW, Package (0x02)  // _PRW: Power Resources for Wake
                {
                    0x19, 
                    0x03
                })
                Device (HUBN)
                {
                    Name (_ADR, 0x00)  // _ADR: Address
                    Device (PRT1)
                    {
                        Name (_ADR, 0x01)  // _ADR: Address
                        Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                        {
                            0xFF, 
                            0x03, 
                            0x00, 
                            0x00
                        })
                        Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                        {
                            ToPLD (
                                PLD_Revision           = 0x2,
                                PLD_IgnoreColor        = 0x1,
                                PLD_Red                = 0x0,
                                PLD_Green              = 0x0,
                                PLD_Blue               = 0x0,
                                PLD_Width              = 0x0,
                                PLD_Height             = 0x0,
                                PLD_UserVisible        = 0x1,
                                PLD_Dock               = 0x0,
                                PLD_Lid                = 0x0,
                                PLD_Panel              = "UNKNOWN",
                                PLD_VerticalPosition   = "UPPER",
                                PLD_HorizontalPosition = "LEFT",
                                PLD_Shape              = "UNKNOWN",
                                PLD_GroupOrientation   = 0x0,
                                PLD_GroupToken         = 0x0,
                                PLD_GroupPosition      = 0x5,
                                PLD_Bay                = 0x0,
                                PLD_Ejectable          = 0x0,
                                PLD_EjectRequired      = 0x0,
                                PLD_CabinetNumber      = 0x0,
                                PLD_CardCageNumber     = 0x0,
                                PLD_Reference          = 0x0,
                                PLD_Rotation           = 0x0,
                                PLD_Order              = 0x0)

                        })
                    }

                    Device (PRT2)
                    {
                        Name (_ADR, 0x02)  // _ADR: Address
                        Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                        {
                            0xFF, 
                            0x03, 
                            0x00, 
                            0x00
                        })
                        Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                        {
                            ToPLD (
                                PLD_Revision           = 0x2,
                                PLD_IgnoreColor        = 0x1,
                                PLD_Red                = 0x0,
                                PLD_Green              = 0x0,
                                PLD_Blue               = 0x0,
                                PLD_Width              = 0x0,
                                PLD_Height             = 0x0,
                                PLD_UserVisible        = 0x1,
                                PLD_Dock               = 0x0,
                                PLD_Lid                = 0x0,
                                PLD_Panel              = "UNKNOWN",
                                PLD_VerticalPosition   = "UPPER",
                                PLD_HorizontalPosition = "LEFT",
                                PLD_Shape              = "UNKNOWN",
                                PLD_GroupOrientation   = 0x0,
                                PLD_GroupToken         = 0x0,
                                PLD_GroupPosition      = 0x6,
                                PLD_Bay                = 0x0,
                                PLD_Ejectable          = 0x0,
                                PLD_EjectRequired      = 0x0,
                                PLD_CabinetNumber      = 0x0,
                                PLD_CardCageNumber     = 0x0,
                                PLD_Reference          = 0x0,
                                PLD_Rotation           = 0x0,
                                PLD_Order              = 0x0)

                        })
                    }

                    Device (PRT3)
                    {
                        Name (_ADR, 0x03)  // _ADR: Address
                        Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                        {
                            0x00, 
                            0x00, 
                            0x00, 
                            0x00
                        })
                    }

                    Device (PRT4)
                    {
                        Name (_ADR, 0x04)  // _ADR: Address
                        Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                        {
                            0x00, 
                            0x00, 
                            0x00, 
                            0x00
                        })
                    }

                    Device (PRT5)
                    {
                        Name (_ADR, 0x05)  // _ADR: Address
                        Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                        {
                            0xFF, 
                            0x00, 
                            0x00, 
                            0x00
                        })
                        Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                        {
                            ToPLD (
                                PLD_Revision           = 0x2,
                                PLD_IgnoreColor        = 0x1,
                                PLD_Red                = 0x0,
                                PLD_Green              = 0x0,
                                PLD_Blue               = 0x0,
                                PLD_Width              = 0x0,
                                PLD_Height             = 0x0,
                                PLD_UserVisible        = 0x1,
                                PLD_Dock               = 0x0,
                                PLD_Lid                = 0x0,
                                PLD_Panel              = "UNKNOWN",
                                PLD_VerticalPosition   = "UPPER",
                                PLD_HorizontalPosition = "LEFT",
                                PLD_Shape              = "UNKNOWN",
                                PLD_GroupOrientation   = 0x0,
                                PLD_GroupToken         = 0x0,
                                PLD_GroupPosition      = 0x5,
                                PLD_Bay                = 0x0,
                                PLD_Ejectable          = 0x0,
                                PLD_EjectRequired      = 0x0,
                                PLD_CabinetNumber      = 0x0,
                                PLD_CardCageNumber     = 0x0,
                                PLD_Reference          = 0x0,
                                PLD_Rotation           = 0x0,
                                PLD_Order              = 0x0)

                        })
                    }

                    Device (PRT6)
                    {
                        Name (_ADR, 0x06)  // _ADR: Address
                        Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                        {
                            0xFF, 
                            0x00, 
                            0x00, 
                            0x00
                        })
                        Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                        {
                            ToPLD (
                                PLD_Revision           = 0x2,
                                PLD_IgnoreColor        = 0x1,
                                PLD_Red                = 0x0,
                                PLD_Green              = 0x0,
                                PLD_Blue               = 0x0,
                                PLD_Width              = 0x0,
                                PLD_Height             = 0x0,
                                PLD_UserVisible        = 0x1,
                                PLD_Dock               = 0x0,
                                PLD_Lid                = 0x0,
                                PLD_Panel              = "UNKNOWN",
                                PLD_VerticalPosition   = "UPPER",
                                PLD_HorizontalPosition = "LEFT",
                                PLD_Shape              = "UNKNOWN",
                                PLD_GroupOrientation   = 0x0,
                                PLD_GroupToken         = 0x0,
                                PLD_GroupPosition      = 0x6,
                                PLD_Bay                = 0x0,
                                PLD_Ejectable          = 0x0,
                                PLD_EjectRequired      = 0x0,
                                PLD_CabinetNumber      = 0x0,
                                PLD_CardCageNumber     = 0x0,
                                PLD_Reference          = 0x0,
                                PLD_Rotation           = 0x0,
                                PLD_Order              = 0x0)

                        })
                    }

                    Device (PRT7)
                    {
                        Name (_ADR, 0x07)  // _ADR: Address
                        Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                        {
                            0x00, 
                            0x00, 
                            0x00, 
                            0x00
                        })
                    }

                    Device (PRT8)
                    {
                        Name (_ADR, 0x08)  // _ADR: Address
                        Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                        {
                            0x00, 
                            0x00, 
                            0x00, 
                            0x00
                        })
                    }
                }
            }

            Device (EHC1)
            {
                Name (_ADR, 0x00120000)  // _ADR: Address
                Name (_PRW, Package (0x02)  // _PRW: Power Resources for Wake
                {
                    0x18, 
                    0x03
                })
                Device (HUBN)
                {
                    Name (_ADR, 0x00)  // _ADR: Address
                    Device (GHUB)
                    {
                        Name (_ADR, 0x01)  // _ADR: Address
                        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                        {
                            Return (XUPC) /* \_SB_.PCI0.XUPC */
                        }

                        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                        {
                            Return (XPLD) /* \_SB_.PCI0.XPLD */
                        }

                        Device (PRT1)
                        {
                            Name (_ADR, 0x01)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0xFF, 
                                0x00, 
                                0x00
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x0,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x0,
                                    PLD_Panel              = "UNKNOWN",
                                    PLD_VerticalPosition   = "UPPER",
                                    PLD_HorizontalPosition = "LEFT",
                                    PLD_Shape              = "UNKNOWN",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0x1,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x0,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0)

                            })
                        }

                        Device (PRT2)
                        {
                            Name (_ADR, 0x02)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0xFF, 
                                0x00, 
                                0x00
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x0,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x0,
                                    PLD_Panel              = "RIGHT",
                                    PLD_VerticalPosition   = "CENTER",
                                    PLD_HorizontalPosition = "RIGHT",
                                    PLD_Shape              = "UNKNOWN",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0x2,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x0,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0)

                            })
                            Name (_S3D, 0x03)  // _S3D: S3 Device State
                            Name (_S4D, 0x03)  // _S4D: S4 Device State
                        }

                        Device (PRT3)
                        {
                            Name (_ADR, 0x03)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0xFF, 
                                0x00, 
                                0x00
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x0,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x1,
                                    PLD_Panel              = "FRONT",
                                    PLD_VerticalPosition   = "UPPER",
                                    PLD_HorizontalPosition = "CENTER",
                                    PLD_Shape              = "ROUND",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0x3,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x0,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0,
                                    PLD_VerticalOffset     = 0xFFFF,
                                    PLD_HorizontalOffset   = 0xFFFF)

                            })
                            Device (CAMA)
                            {
                                Name (_ADR, 0x03)  // _ADR: Address
                                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                                {
                                    0xFF, 
                                    0xFF, 
                                    0x00, 
                                    0x00
                                })
                                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                                {
                                    ToPLD (
                                        PLD_Revision           = 0x2,
                                        PLD_IgnoreColor        = 0x1,
                                        PLD_Red                = 0x0,
                                        PLD_Green              = 0x0,
                                        PLD_Blue               = 0x0,
                                        PLD_Width              = 0x0,
                                        PLD_Height             = 0x0,
                                        PLD_UserVisible        = 0x0,
                                        PLD_Dock               = 0x0,
                                        PLD_Lid                = 0x1,
                                        PLD_Panel              = "FRONT",
                                        PLD_VerticalPosition   = "UPPER",
                                        PLD_HorizontalPosition = "CENTER",
                                        PLD_Shape              = "ROUND",
                                        PLD_GroupOrientation   = 0x0,
                                        PLD_GroupToken         = 0x0,
                                        PLD_GroupPosition      = 0x3,
                                        PLD_Bay                = 0x0,
                                        PLD_Ejectable          = 0x0,
                                        PLD_EjectRequired      = 0x0,
                                        PLD_CabinetNumber      = 0x0,
                                        PLD_CardCageNumber     = 0x0,
                                        PLD_Reference          = 0x0,
                                        PLD_Rotation           = 0x0,
                                        PLD_Order              = 0x0,
                                        PLD_VerticalOffset     = 0xFFFF,
                                        PLD_HorizontalOffset   = 0xFFFF)

                                })
                            }
                        }

                        Device (PRT4)
                        {
                            Name (_ADR, 0x04)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0x00, 
                                0x00, 
                                0x00
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x1,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x0,
                                    PLD_Panel              = "UNKNOWN",
                                    PLD_VerticalPosition   = "UPPER",
                                    PLD_HorizontalPosition = "LEFT",
                                    PLD_Shape              = "UNKNOWN",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0x4,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x0,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0)

                            })
                        }
                    }
                }
            }

            Device (SBAZ)
            {
                Name (_ADR, 0x00140002)  // _ADR: Address
                Name (_PRW, Package (0x02)  // _PRW: Power Resources for Wake
                {
                    0x19, 
                    0x04
                })
            }

            Device (SATA)
            {
                Name (_ADR, 0x00110000)  // _ADR: Address
                Name (B5EN, 0x00)
                Name (BA_5, 0x00)
                Name (SBAR, 0xF0D6C000)
                Name (SHDE, 0x80000000)
                OperationRegion (SATX, PCI_Config, 0x00, 0x44)
                Field (SATX, AnyAcc, NoLock, Preserve)
                {
                    VIDI,   32, 
                    Offset (0x0A), 
                    STCL,   16, 
                    Offset (0x24), 
                    BA05,   32, 
                    Offset (0x40), 
                    WREN,   1, 
                    Offset (0x42), 
                    DISP,   6
                }

                Field (SATX, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x42), 
                    DIS0,   1, 
                    DIS1,   1, 
                    DIS2,   1, 
                    DIS3,   1, 
                    DIS4,   1, 
                    DIS5,   1
                }

                Method (GBAA, 0, Serialized)
                {
                    BA_5 = BA05 /* \_SB_.PCI0.SATA.BA05 */
                    If (((BA_5 == 0xFFFFFFFF) || (STCL != 0x0101)))
                    {
                        B5EN = 0x00
                        Return (SBAR) /* \_SB_.PCI0.SATA.SBAR */
                    }
                    Else
                    {
                        B5EN = 0x01
                        Return (BA_5) /* \_SB_.PCI0.SATA.BA_5 */
                    }
                }

                OperationRegion (BAR5, SystemMemory, GBAA (), 0x1000)
                Field (BAR5, AnyAcc, NoLock, Preserve)
                {
                    NPOT,   5, 
                    Offset (0x0C), 
                    PI,     6, 
                    Offset (0x120), 
                        ,   7, 
                    BSY0,   1, 
                    Offset (0x128), 
                    DET0,   4, 
                    Offset (0x129), 
                    IPM0,   4, 
                    Offset (0x1A0), 
                        ,   7, 
                    BSY1,   1, 
                    Offset (0x1A8), 
                    DET1,   4, 
                    Offset (0x1A9), 
                    IPM1,   4, 
                    Offset (0x220), 
                        ,   7, 
                    BSY2,   1, 
                    Offset (0x228), 
                    DET2,   4, 
                    Offset (0x229), 
                    IPM2,   4, 
                    Offset (0x2A0), 
                        ,   7, 
                    BSY3,   1, 
                    Offset (0x2A8), 
                    DET3,   4, 
                    Offset (0x2A9), 
                    IPM3,   4, 
                    Offset (0x320), 
                        ,   7, 
                    BSY4,   1, 
                    Offset (0x328), 
                    DET4,   4, 
                    Offset (0x329), 
                    IPM4,   4, 
                    Offset (0x3A0), 
                        ,   7, 
                    BSY5,   1, 
                    Offset (0x3A8), 
                    DET5,   4, 
                    Offset (0x3A9), 
                    IPM5,   4
                }

                Field (BAR5, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x0C), 
                    PI0,    1, 
                    PI1,    1, 
                    PI2,    1, 
                    PI3,    1, 
                    PI4,    1, 
                    PI5,    1
                }

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    GBAA ()
                }

                Device (PRID)
                {
                    Name (_ADR, 0x00)  // _ADR: Address
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If ((STCL == 0x0101))
                        {
                            Return (0x0F)
                        }
                        Else
                        {
                            Return (0x00)
                        }
                    }

                    Name (SPTM, Buffer (0x14)
                    {
                        /* 0000 */  0x78, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00,  // x.......
                        /* 0008 */  0x78, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00,  // x.......
                        /* 0010 */  0x1F, 0x00, 0x00, 0x00                           // ....
                    })
                    Method (_GTM, 0, NotSerialized)  // _GTM: Get Timing Mode
                    {
                        Return (SPTM) /* \_SB_.PCI0.SATA.PRID.SPTM */
                    }

                    Method (_STM, 3, NotSerialized)  // _STM: Set Timing Mode
                    {
                        SPTM = Arg0
                    }

                    Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                    {
                        GBAA ()
                        If ((((TPOS >= 0x40) || (TPOS == 0x04)) && B5EN))
                        {
                            If (IPM0)
                            {
                                Local0 = 0x32
                                While (((BSY0 == 0x01) && Local0))
                                {
                                    Sleep (0xFA)
                                    Local0--
                                }
                            }

                            If (IPM2)
                            {
                                Local0 = 0x32
                                While (((BSY2 == 0x01) && Local0))
                                {
                                    Sleep (0xFA)
                                    Local0--
                                }
                            }
                        }
                    }

                    Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                    {
                    }

                    Device (P_D0)
                    {
                        Name (_ADR, 0x00)  // _ADR: Address
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            GBAA ()
                            If ((B5EN == 0x00))
                            {
                                Return (0x00)
                            }

                            If ((DET0 == 0x03))
                            {
                                Return (0x0F)
                            }
                            Else
                            {
                                Return (0x00)
                            }
                        }

                        Name (S12P, 0x00)
                        Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                        {
                            GBAA ()
                            If ((((TPOS < 0x40) && (TPOS != 0x04)) && B5EN))
                            {
                                Local0 = 0x32
                                While (((BSY0 == 0x01) && Local0))
                                {
                                    Sleep (0xFA)
                                    Local0--
                                }
                            }
                        }

                        Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                        {
                        }

                        Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
                        {
                            Local0 = Buffer (0x07)
                                {
                                     0x03, 0x46, 0x00, 0x00, 0x00, 0xA0, 0xEF         // .F.....
                                }
                            Return (Local0)
                        }
                    }

                    Device (P_D1)
                    {
                        Name (_ADR, 0x01)  // _ADR: Address
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            GBAA ()
                            If ((B5EN == 0x00))
                            {
                                Return (0x00)
                            }

                            If ((DET2 == 0x03))
                            {
                                Return (0x0F)
                            }
                            Else
                            {
                                Return (0x00)
                            }
                        }

                        Name (S12P, 0x00)
                        Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                        {
                            GBAA ()
                            If ((((TPOS < 0x40) && (TPOS != 0x04)) && B5EN))
                            {
                                Local0 = 0x32
                                While (((BSY2 == 0x01) && Local0))
                                {
                                    Sleep (0xFA)
                                    Local0--
                                }
                            }
                        }

                        Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                        {
                        }

                        Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
                        {
                            Local0 = Buffer (0x07)
                                {
                                     0x03, 0x46, 0x00, 0x00, 0x00, 0xA0, 0xEF         // .F.....
                                }
                            Return (Local0)
                        }
                    }
                }

                Device (SECD)
                {
                    Name (_ADR, 0x02)  // _ADR: Address
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If ((STCL == 0x0101))
                        {
                            Return (0x0F)
                        }
                        Else
                        {
                            Return (0x00)
                        }
                    }

                    Name (SPTM, Buffer (0x14)
                    {
                        /* 0000 */  0x78, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00,  // x.......
                        /* 0008 */  0x78, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00,  // x.......
                        /* 0010 */  0x1F, 0x00, 0x00, 0x00                           // ....
                    })
                    Method (_GTM, 0, NotSerialized)  // _GTM: Get Timing Mode
                    {
                        Return (SPTM) /* \_SB_.PCI0.SATA.SECD.SPTM */
                    }

                    Method (_STM, 3, NotSerialized)  // _STM: Set Timing Mode
                    {
                        SPTM = Arg0
                    }

                    Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                    {
                        GBAA ()
                        If ((((TPOS >= 0x40) || (TPOS == 0x04)) && B5EN))
                        {
                            If (IPM1)
                            {
                                Local0 = 0x32
                                While (((BSY1 == 0x01) && Local0))
                                {
                                    Sleep (0xFA)
                                    Local0--
                                }
                            }

                            If (IPM3)
                            {
                                Local0 = 0x32
                                While (((BSY3 == 0x01) && Local0))
                                {
                                    Sleep (0xFA)
                                    Local0--
                                }
                            }
                        }
                    }

                    Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                    {
                    }

                    Device (S_D0)
                    {
                        Name (_ADR, 0x00)  // _ADR: Address
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            GBAA ()
                            If ((B5EN == 0x00))
                            {
                                Return (0x00)
                            }

                            If ((DET1 == 0x03))
                            {
                                Return (0x0F)
                            }
                            Else
                            {
                                Return (0x00)
                            }
                        }

                        Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                        {
                            GBAA ()
                            If ((((TPOS < 0x40) && (TPOS != 0x04)) && B5EN))
                            {
                                Local0 = 0x32
                                While (((BSY1 == 0x01) && Local0))
                                {
                                    Sleep (0xFA)
                                    Local0--
                                }
                            }
                        }

                        Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                        {
                        }

                        Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
                        {
                            Local0 = Buffer (0x07)
                                {
                                     0x03, 0x46, 0x00, 0x00, 0x00, 0xA0, 0xEF         // .F.....
                                }
                            Return (Local0)
                        }
                    }

                    Device (S_D1)
                    {
                        Name (_ADR, 0x01)  // _ADR: Address
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            GBAA ()
                            If ((B5EN == 0x00))
                            {
                                Return (0x00)
                            }

                            If ((DET3 == 0x03))
                            {
                                Return (0x0F)
                            }
                            Else
                            {
                                Return (0x00)
                            }
                        }

                        Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                        {
                            GBAA ()
                            If ((((TPOS < 0x40) && (TPOS != 0x04)) && B5EN))
                            {
                                Local0 = 0x32
                                While (((BSY3 == 0x01) && Local0))
                                {
                                    Sleep (0xFA)
                                    Local0--
                                }
                            }
                        }

                        Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                        {
                        }

                        Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
                        {
                            Local0 = Buffer (0x07)
                                {
                                     0x03, 0x46, 0x00, 0x00, 0x00, 0xA0, 0xEF         // .F.....
                                }
                            Return (Local0)
                        }
                    }
                }

                Method (ENP, 2, NotSerialized)
                {
                    If ((Arg0 == 0x00))
                    {
                        DIS0 = ~Arg1
                    }
                    ElseIf ((Arg0 == 0x01))
                    {
                        DIS1 = ~Arg1
                    }
                    ElseIf ((Arg0 == 0x02))
                    {
                        DIS2 = ~Arg1
                    }
                    ElseIf ((Arg0 == 0x03))
                    {
                        DIS3 = ~Arg1
                    }
                    ElseIf ((Arg0 == 0x04))
                    {
                        DIS4 = ~Arg1
                    }
                    ElseIf ((Arg0 == 0x05))
                    {
                        DIS5 = ~Arg1
                    }

                    WREN = 0x01
                    If ((Arg0 == 0x00))
                    {
                        PI0 = Arg1
                    }
                    ElseIf ((Arg0 == 0x01))
                    {
                        PI1 = Arg1
                    }
                    ElseIf ((Arg0 == 0x02))
                    {
                        PI2 = Arg1
                    }
                    ElseIf ((Arg0 == 0x03))
                    {
                        PI3 = Arg1
                    }
                    ElseIf ((Arg0 == 0x04))
                    {
                        PI4 = Arg1
                    }
                    ElseIf ((Arg0 == 0x05))
                    {
                        PI5 = Arg1
                    }

                    If ((DISP == 0x3F))
                    {
                        PI0 = 0x01
                    }
                    ElseIf ((DIS0 && ((DISP & 0x3E) ^ 0x3E)))
                    {
                        PI0 = 0x00
                    }

                    Local0 = PI /* \_SB_.PCI0.SATA.PI__ */
                    Local1 = 0x00
                    While (Local0)
                    {
                        If ((Local0 & 0x01))
                        {
                            Local1++
                        }

                        Local0 >>= 0x01
                    }

                    NPOT = Local1--
                    WREN = 0x00
                }

                Device (PRT2)
                {
                    Method (_ADR, 0, NotSerialized)  // _ADR: Address
                    {
                        If ((TPOS >= 0x60))
                        {
                            Return (0x0002FFFF)
                        }
                        Else
                        {
                            Return (0x02)
                        }
                    }

                    Device (ESAT)
                    {
                        Name (_ADR, 0x00)  // _ADR: Address
                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                        {
                            Return (0x01)
                        }
                    }
                }

                Device (PRT3)
                {
                    Method (_ADR, 0, NotSerialized)  // _ADR: Address
                    {
                        If ((TPOS >= 0x60))
                        {
                            Return (0x0003FFFF)
                        }
                        Else
                        {
                            Return (0x03)
                        }
                    }

                    Device (ESAT)
                    {
                        Name (_ADR, 0x00)  // _ADR: Address
                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                        {
                            Return (0x01)
                        }
                    }
                }

                Device (PRT4)
                {
                    Method (_ADR, 0, NotSerialized)  // _ADR: Address
                    {
                        If ((TPOS >= 0x60))
                        {
                            Return (0x0004FFFF)
                        }
                        Else
                        {
                            Return (0x04)
                        }
                    }

                    Device (ESAT)
                    {
                        Name (_ADR, 0x00)  // _ADR: Address
                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                        {
                            Return (0x01)
                        }
                    }
                }

                Device (PRT5)
                {
                    Method (_ADR, 0, NotSerialized)  // _ADR: Address
                    {
                        If ((TPOS >= 0x60))
                        {
                            Return (0x0005FFFF)
                        }
                        Else
                        {
                            Return (0x05)
                        }
                    }

                    Device (ESAT)
                    {
                        Name (_ADR, 0x00)  // _ADR: Address
                        Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                        {
                            Return (0x01)
                        }
                    }
                }
            }

            Device (SMB)
            {
                Name (_ADR, 0x00140000)  // _ADR: Address
                OperationRegion (SBRV, PCI_Config, 0x08, 0x0100)
                Field (SBRV, AnyAcc, NoLock, Preserve)
                {
                    RVID,   8, 
                    Offset (0x5A), 
                    I1F,    1, 
                    I12F,   1, 
                    Offset (0x7A), 
                        ,   2, 
                    G31O,   1, 
                    Offset (0xD9), 
                        ,   6, 
                    ACIR,   1
                }

                OperationRegion (PMIO, SystemIO, 0x0CD6, 0x02)
                Field (PMIO, ByteAcc, NoLock, Preserve)
                {
                    INPM,   8, 
                    DAPM,   8
                }

                IndexField (INPM, DAPM, ByteAcc, NoLock, Preserve)
                {
                    HPAD,   32, 
                    Offset (0x60), 
                    P1EB,   16
                }

                OperationRegion (ERMG, SystemMemory, 0xFED81500, 0x03FF)
                Field (ERMG, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x1A), 
                    GE10,   1, 
                    Offset (0x1C), 
                    Offset (0x1E), 
                    GE11,   1, 
                    Offset (0x40), 
                    Offset (0x42), 
                    GE12,   1, 
                    Offset (0x46), 
                    GS17,   1, 
                        ,   5, 
                    GV17,   1, 
                    GE17,   1, 
                    Offset (0x108), 
                    Offset (0x10A), 
                    P33I,   1, 
                    Offset (0x10C), 
                    Offset (0x10E), 
                    P37I,   1, 
                    Offset (0x118), 
                    Offset (0x11A), 
                    P3BI,   1, 
                    Offset (0x11C), 
                    Offset (0x11E), 
                    P40I,   1
                }

                OperationRegion (ERMM, SystemMemory, 0xFED80000, 0x1000)
                Field (ERMM, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x200), 
                        ,   1, 
                    E01S,   1, 
                        ,   3, 
                    E05S,   1, 
                        ,   9, 
                    E15S,   1, 
                    E16S,   1, 
                        ,   5, 
                    E22S,   1, 
                    Offset (0x204), 
                        ,   1, 
                    E01E,   1, 
                        ,   3, 
                    E05E,   1, 
                        ,   9, 
                    E15E,   1, 
                    E16E,   1, 
                        ,   5, 
                    E22E,   1, 
                    Offset (0x208), 
                        ,   1, 
                    E01C,   1, 
                        ,   3, 
                    E05C,   1, 
                        ,   4, 
                    E10C,   1, 
                        ,   4, 
                    E15C,   1, 
                    E16C,   1, 
                        ,   4, 
                    E21C,   1, 
                    E22C,   1, 
                        ,   3, 
                    E26C,   1, 
                    Offset (0x20C), 
                        ,   1, 
                    E01L,   1, 
                        ,   3, 
                    E05L,   1, 
                        ,   9, 
                    E15L,   1, 
                    E16L,   1, 
                        ,   5, 
                    E22L,   1, 
                    Offset (0x288), 
                        ,   1, 
                    CLPS,   1, 
                    Offset (0x299), 
                        ,   7, 
                    G15A,   1, 
                    Offset (0x2AC), 
                        ,   6, 
                    SRBT,   2, 
                    Offset (0x2B0), 
                        ,   2, 
                    SLPS,   2, 
                    Offset (0x2B2), 
                        ,   4, 
                    SPBT,   2, 
                    Offset (0x362), 
                        ,   6, 
                    MT3A,   1, 
                    Offset (0x377), 
                    EPNM,   1, 
                    DPPF,   1, 
                    Offset (0x3BB), 
                        ,   6, 
                    PWDE,   1, 
                    Offset (0x3BE), 
                        ,   5, 
                    ALLS,   1, 
                    Offset (0x3C8), 
                        ,   2, 
                    TFTE,   1, 
                    Offset (0x3DF), 
                    BLNK,   2, 
                    Offset (0x3F0), 
                    PHYD,   1, 
                        ,   1, 
                    RSTU,   1, 
                    US5R,   1, 
                    Offset (0x400), 
                    F0CT,   8, 
                    F0MS,   8, 
                    F0FQ,   8, 
                    F0LD,   8, 
                    F0MD,   8, 
                    F0MP,   8, 
                    LT0L,   8, 
                    LT0H,   8, 
                    MT0L,   8, 
                    MT0H,   8, 
                    HT0L,   8, 
                    HT0H,   8, 
                    LRG0,   8, 
                    LHC0,   8, 
                    Offset (0x410), 
                    F1CT,   8, 
                    F1MS,   8, 
                    F1FQ,   8, 
                    F1LD,   8, 
                    F1MD,   8, 
                    F1MP,   8, 
                    LT1L,   8, 
                    LT1H,   8, 
                    MT1L,   8, 
                    MT1H,   8, 
                    HT1L,   8, 
                    HT1H,   8, 
                    LRG1,   8, 
                    LHC1,   8, 
                    Offset (0x420), 
                    F2CT,   8, 
                    F2MS,   8, 
                    F2FQ,   8, 
                    F2LD,   8, 
                    F2MD,   8, 
                    F2MP,   8, 
                    LT2L,   8, 
                    LT2H,   8, 
                    MT2L,   8, 
                    MT2H,   8, 
                    HT2L,   8, 
                    HT2H,   8, 
                    LRG2,   8, 
                    LHC2,   8, 
                    Offset (0x430), 
                    F3CT,   8, 
                    F3MS,   8, 
                    F3FQ,   8, 
                    F3LD,   8, 
                    F3MD,   8, 
                    F3MP,   8, 
                    LT3L,   8, 
                    LT3H,   8, 
                    MT3L,   8, 
                    MT3H,   8, 
                    HT3L,   8, 
                    HT3H,   8, 
                    LRG3,   8, 
                    LHC3,   8, 
                    Offset (0x700), 
                    SEC,    8, 
                    Offset (0x702), 
                    MIN,    8, 
                    Offset (0xD01), 
                    MX01,   8, 
                    Offset (0xD07), 
                    MX07,   8, 
                    Offset (0xD0E), 
                    MX14,   8, 
                    MX15,   8, 
                    MX16,   8, 
                    Offset (0xD15), 
                    MX21,   8, 
                    MX22,   8, 
                    MX23,   8, 
                    Offset (0xD1B), 
                    MX27,   8, 
                    MX28,   8, 
                    Offset (0xD20), 
                    MX32,   8, 
                    MX33,   8, 
                    MX34,   8, 
                    Offset (0xD29), 
                    MX41,   8, 
                    Offset (0xD2C), 
                    MX44,   8, 
                    Offset (0xD33), 
                    MX51,   8, 
                    Offset (0xD35), 
                    MX53,   8, 
                    Offset (0xD39), 
                    MX57,   8, 
                    MX58,   8, 
                    MX59,   8, 
                    Offset (0xD42), 
                    MX66,   8, 
                    Offset (0xD66), 
                    M102,   8, 
                    Offset (0xD6C), 
                    M108,   8, 
                    Offset (0xDAA), 
                    M170,   8, 
                    Offset (0xDAF), 
                    M175,   8, 
                    M176,   8, 
                    Offset (0xDB4), 
                    M180,   8, 
                    M181,   8, 
                    M182,   8, 
                    Offset (0xDC5), 
                    M197,   8, 
                    Offset (0xDC7), 
                    M199,   8, 
                    M200,   8, 
                    Offset (0xE00), 
                    MS00,   8, 
                    MS01,   8, 
                    MS02,   8, 
                    MS03,   8, 
                    MS04,   8, 
                    Offset (0xE40), 
                    MS40,   8, 
                    Offset (0xE81), 
                        ,   2, 
                    ECES,   1
                }

                OperationRegion (P1E0, SystemIO, P1EB, 0x04)
                Field (P1E0, ByteAcc, NoLock, Preserve)
                {
                        ,   14, 
                    PEWS,   1, 
                    WSTA,   1, 
                        ,   14, 
                    PEWD,   1
                }

                Method (TRMD, 0, NotSerialized)
                {
                    TFTE = Zero
                }

                Method (HTCD, 0, NotSerialized)
                {
                }

                OperationRegion (ABIO, SystemIO, 0x0CD8, 0x08)
                Field (ABIO, DWordAcc, NoLock, Preserve)
                {
                    INAB,   32, 
                    DAAB,   32
                }

                Method (RDAB, 1, NotSerialized)
                {
                    INAB = Arg0
                    Return (DAAB) /* \_SB_.PCI0.SMB_.DAAB */
                }

                Method (WTAB, 2, NotSerialized)
                {
                    INAB = Arg0
                    DAAB = Arg1
                }

                Method (RWAB, 3, NotSerialized)
                {
                    Local0 = (RDAB (Arg0) & Arg1)
                    Local1 = (Local0 | Arg2)
                    WTAB (Arg0, Local1)
                }

                Method (CABR, 3, NotSerialized)
                {
                    Local0 = (Arg0 << 0x05)
                    Local1 = (Local0 + Arg1)
                    Local2 = (Local1 << 0x18)
                    Local3 = (Local2 + Arg2)
                    Return (Local3)
                }
            }

            Device (LPC0)
            {
                Name (_ADR, 0x00140003)  // _ADR: Address
                OperationRegion (PIRQ, SystemIO, 0x0C00, 0x02)
                Field (PIRQ, ByteAcc, NoLock, Preserve)
                {
                    PIID,   8, 
                    PIDA,   8
                }

                IndexField (PIID, PIDA, ByteAcc, NoLock, Preserve)
                {
                    PIRA,   8, 
                    PIRB,   8, 
                    PIRC,   8, 
                    PIRD,   8, 
                    PIRE,   8, 
                    PIRF,   8, 
                    PIRG,   8, 
                    PIRH,   8, 
                    Offset (0x0C), 
                    SIRA,   8, 
                    SIRB,   8, 
                    SIRC,   8, 
                    SIRD,   8, 
                    PIRS,   8, 
                    Offset (0x13), 
                    HDAD,   8, 
                    Offset (0x17), 
                    SDCL,   8, 
                    Offset (0x1A), 
                    SDIO,   8, 
                    Offset (0x30), 
                    USB1,   8, 
                    Offset (0x34), 
                    USB3,   8, 
                    Offset (0x41), 
                    SATA,   8, 
                    Offset (0x62), 
                    GIOC,   8, 
                    Offset (0x70), 
                    I2C0,   8, 
                    I2C1,   8, 
                    I2C2,   8, 
                    I2C3,   8, 
                    URT0,   8, 
                    URT1,   8
                }

                Name (IPRS, ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {3,4,5,7,10,11,12,14,15}
                })
                Name (UPRS, ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Exclusive, )
                        {3,4,5,7}
                })
                OperationRegion (KBDD, SystemIO, 0x64, 0x01)
                Field (KBDD, ByteAcc, NoLock, Preserve)
                {
                    PD64,   8
                }

                Method (DSPI, 0, NotSerialized)
                {
                    INTA (0x1F)
                    INTB (0x1F)
                    INTC (0x1F)
                    INTD (0x1F)
                    Local1 = PD64 /* \_SB_.PCI0.LPC0.PD64 */
                    PIRE = 0x1F
                    PIRF = 0x1F
                    PIRG = 0x1F
                    PIRH = 0x1F
                }

                Method (INTA, 1, NotSerialized)
                {
                    PIRA = Arg0
                    If (GPIC)
                    {
                        HDAD = Arg0
                        SDCL = Arg0
                    }
                }

                Method (INTB, 1, NotSerialized)
                {
                    PIRB = Arg0
                }

                Method (INTC, 1, NotSerialized)
                {
                    PIRC = Arg0
                    If (GPIC)
                    {
                        USB1 = Arg0
                        USB3 = Arg0
                    }
                }

                Method (INTD, 1, NotSerialized)
                {
                    PIRD = Arg0
                    If (GPIC)
                    {
                        SATA = Arg0
                    }
                }

                Device (LNKA)
                {
                    Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                    Name (_UID, 0x01)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If (PIRA)
                        {
                            Return (0x0B)
                        }
                        Else
                        {
                            Return (0x09)
                        }
                    }

                    Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
                    {
                        Return (IPRS) /* \_SB_.PCI0.LPC0.IPRS */
                    }

                    Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                    {
                        INTA (0x1F)
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Local0 = IPRS /* \_SB_.PCI0.LPC0.IPRS */
                        CreateWordField (Local0, 0x01, IRQ0)
                        IRQ0 = (0x01 << PIRA) /* \_SB_.PCI0.LPC0.PIRA */
                        Return (Local0)
                    }

                    Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
                    {
                        CreateWordField (Arg0, 0x01, IRQ0)
                        FindSetRightBit (IRQ0, Local0)
                        Local0--
                        INTA (Local0)
                    }
                }

                Device (LNKB)
                {
                    Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                    Name (_UID, 0x02)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If (PIRB)
                        {
                            Return (0x0B)
                        }
                        Else
                        {
                            Return (0x09)
                        }
                    }

                    Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
                    {
                        Return (IPRS) /* \_SB_.PCI0.LPC0.IPRS */
                    }

                    Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                    {
                        INTB (0x1F)
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Local0 = IPRS /* \_SB_.PCI0.LPC0.IPRS */
                        CreateWordField (Local0, 0x01, IRQ0)
                        IRQ0 = (0x01 << PIRB) /* \_SB_.PCI0.LPC0.PIRB */
                        Return (Local0)
                    }

                    Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
                    {
                        CreateWordField (Arg0, 0x01, IRQ0)
                        FindSetRightBit (IRQ0, Local0)
                        Local0--
                        INTB (Local0)
                    }
                }

                Device (LNKC)
                {
                    Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                    Name (_UID, 0x03)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If (PIRC)
                        {
                            Return (0x0B)
                        }
                        Else
                        {
                            Return (0x09)
                        }
                    }

                    Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
                    {
                        Return (IPRS) /* \_SB_.PCI0.LPC0.IPRS */
                    }

                    Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                    {
                        INTC (0x1F)
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Local0 = IPRS /* \_SB_.PCI0.LPC0.IPRS */
                        CreateWordField (Local0, 0x01, IRQ0)
                        IRQ0 = (0x01 << PIRC) /* \_SB_.PCI0.LPC0.PIRC */
                        Return (Local0)
                    }

                    Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
                    {
                        CreateWordField (Arg0, 0x01, IRQ0)
                        FindSetRightBit (IRQ0, Local0)
                        Local0--
                        INTC (Local0)
                    }
                }

                Device (LNKD)
                {
                    Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                    Name (_UID, 0x04)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If (PIRD)
                        {
                            Return (0x0B)
                        }
                        Else
                        {
                            Return (0x09)
                        }
                    }

                    Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
                    {
                        Return (IPRS) /* \_SB_.PCI0.LPC0.IPRS */
                    }

                    Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                    {
                        INTD (0x1F)
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Local0 = IPRS /* \_SB_.PCI0.LPC0.IPRS */
                        CreateWordField (Local0, 0x01, IRQ0)
                        IRQ0 = (0x01 << PIRD) /* \_SB_.PCI0.LPC0.PIRD */
                        Return (Local0)
                    }

                    Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
                    {
                        CreateWordField (Arg0, 0x01, IRQ0)
                        FindSetRightBit (IRQ0, Local0)
                        Local0--
                        INTD (Local0)
                    }
                }

                Device (LNKE)
                {
                    Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                    Name (_UID, 0x05)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If (PIRE)
                        {
                            Return (0x0B)
                        }
                        Else
                        {
                            Return (0x09)
                        }
                    }

                    Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
                    {
                        Return (IPRS) /* \_SB_.PCI0.LPC0.IPRS */
                    }

                    Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                    {
                        PIRE = 0x1F
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Local0 = IPRS /* \_SB_.PCI0.LPC0.IPRS */
                        CreateWordField (Local0, 0x01, IRQ0)
                        IRQ0 = (0x01 << PIRE) /* \_SB_.PCI0.LPC0.PIRE */
                        Return (Local0)
                    }

                    Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
                    {
                        CreateWordField (Arg0, 0x01, IRQ0)
                        FindSetRightBit (IRQ0, Local0)
                        Local0--
                        PIRE = Local0
                    }
                }

                Device (LNKF)
                {
                    Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                    Name (_UID, 0x06)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If (PIRF)
                        {
                            Return (0x0B)
                        }
                        Else
                        {
                            Return (0x09)
                        }
                    }

                    Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
                    {
                        Return (IPRS) /* \_SB_.PCI0.LPC0.IPRS */
                    }

                    Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                    {
                        PIRF = 0x1F
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Local0 = IPRS /* \_SB_.PCI0.LPC0.IPRS */
                        CreateWordField (Local0, 0x01, IRQ0)
                        IRQ0 = (0x01 << PIRF) /* \_SB_.PCI0.LPC0.PIRF */
                        Return (Local0)
                    }

                    Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
                    {
                        CreateWordField (Arg0, 0x01, IRQ0)
                        FindSetRightBit (IRQ0, Local0)
                        Local0--
                        PIRF = Local0
                    }
                }

                Device (LNKG)
                {
                    Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                    Name (_UID, 0x07)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If (PIRG)
                        {
                            Return (0x0B)
                        }
                        Else
                        {
                            Return (0x09)
                        }
                    }

                    Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
                    {
                        Return (IPRS) /* \_SB_.PCI0.LPC0.IPRS */
                    }

                    Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                    {
                        PIRG = 0x1F
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Local0 = IPRS /* \_SB_.PCI0.LPC0.IPRS */
                        CreateWordField (Local0, 0x01, IRQ0)
                        IRQ0 = (0x01 << PIRG) /* \_SB_.PCI0.LPC0.PIRG */
                        Return (Local0)
                    }

                    Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
                    {
                        CreateWordField (Arg0, 0x01, IRQ0)
                        FindSetRightBit (IRQ0, Local0)
                        Local0--
                        PIRG = Local0
                    }
                }

                Device (LNKH)
                {
                    Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                    Name (_UID, 0x08)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If (PIRH)
                        {
                            Return (0x0B)
                        }
                        Else
                        {
                            Return (0x09)
                        }
                    }

                    Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
                    {
                        Return (IPRS) /* \_SB_.PCI0.LPC0.IPRS */
                    }

                    Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                    {
                        PIRH = 0x1F
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Local0 = IPRS /* \_SB_.PCI0.LPC0.IPRS */
                        CreateWordField (Local0, 0x01, IRQ0)
                        IRQ0 = (0x01 << PIRH) /* \_SB_.PCI0.LPC0.PIRH */
                        Return (Local0)
                    }

                    Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
                    {
                        CreateWordField (Arg0, 0x01, IRQ0)
                        FindSetRightBit (IRQ0, Local0)
                        Local0--
                        PIRH = Local0
                    }
                }

                OperationRegion (LPCR, PCI_Config, 0x04, 0x42)
                Field (LPCR, ByteAcc, NoLock, Preserve)
                {
                    PCMD,   2, 
                    Offset (0x40), 
                    CMA0,   1, 
                    CMA1,   1, 
                    CMA2,   1, 
                    CMA3,   1, 
                    CMA4,   1, 
                    CMA5,   1, 
                    CMA6,   1, 
                    CMA7,   1, 
                    CMB0,   1, 
                    CMB1,   1, 
                    CMB2,   1, 
                    CMB3,   1, 
                    CMB4,   1, 
                    CMB5,   1, 
                    CMB6,   1, 
                    CMB7,   1
                }

                Device (DMAC)
                {
                    Name (_HID, EisaId ("PNP0200") /* PC-class DMA Controller */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x01,               // Alignment
                            0x20,               // Length
                            )
                        IO (Decode16,
                            0x0081,             // Range Minimum
                            0x0081,             // Range Maximum
                            0x01,               // Alignment
                            0x0F,               // Length
                            )
                        IO (Decode16,
                            0x00C0,             // Range Minimum
                            0x00C0,             // Range Maximum
                            0x01,               // Alignment
                            0x1F,               // Length
                            )
                        IO (Decode16,
                            0x040B,             // Range Minimum
                            0x040B,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x04D6,             // Range Minimum
                            0x04D6,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        DMA (Compatibility, NotBusMaster, Transfer8_16, )
                            {4}
                    })
                }

                Device (MATH)
                {
                    Name (_HID, EisaId ("PNP0C04") /* x87-compatible Floating Point Processing Unit */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x00F0,             // Range Minimum
                            0x00F0,             // Range Maximum
                            0x01,               // Alignment
                            0x0F,               // Length
                            )
                        IRQ (Edge, ActiveHigh, Exclusive, )
                            {13}
                    })
                }

                Device (PIC)
                {
                    Name (_HID, EisaId ("PNP0000") /* 8259-compatible Programmable Interrupt Controller */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0020,             // Range Minimum
                            0x0020,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00A0,             // Range Minimum
                            0x00A0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IRQ (Edge, ActiveHigh, Exclusive, )
                            {2}
                    })
                }

                Device (RTC)
                {
                    Name (_HID, EisaId ("PNP0B00") /* AT Real-Time Clock */)  // _HID: Hardware ID
                    Name (BUF0, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0070,             // Range Minimum
                            0x0070,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                    })
                    Name (BUF1, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0070,             // Range Minimum
                            0x0070,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IRQNoFlags ()
                            {8}
                    })
                    Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                    {
                        If (((^^^SMB.HPAD & 0x40) == 0x40))
                        {
                            Return (BUF0) /* \_SB_.PCI0.LPC0.RTC_.BUF0 */
                        }

                        Return (BUF1) /* \_SB_.PCI0.LPC0.RTC_.BUF1 */
                    }
                }

                Device (SPKR)
                {
                    Name (_HID, EisaId ("PNP0800") /* Microsoft Sound System Compatible Device */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0061,             // Range Minimum
                            0x0061,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                    })
                }

                Device (TIME)
                {
                    Name (_HID, EisaId ("PNP0100") /* PC-class System Timer */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0040,             // Range Minimum
                            0x0040,             // Range Maximum
                            0x01,               // Alignment
                            0x04,               // Length
                            )
                        IRQ (Edge, ActiveHigh, Exclusive, )
                            {0}
                    })
                }

                Device (KBC0)
                {
                    Name (_HID, "PTL0001")  // _HID: Hardware ID
                    Name (_CID, EisaId ("PNP0303") /* IBM Enhanced Keyboard (101/102-key, PS/2 Mouse) */)  // _CID: Compatible ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0060,             // Range Minimum
                            0x0060,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0064,             // Range Minimum
                            0x0064,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IRQ (Edge, ActiveHigh, Exclusive, )
                            {1}
                    })
                    Method (_PSW, 1, NotSerialized)  // _PSW: Power State Wake
                    {
                    }
                }

                Device (MSE0)
                {
                    Name (_HID, "PTL0003")  // _HID: Hardware ID
                    Name (_CID, EisaId ("PNP0F13") /* PS/2 Mouse */)  // _CID: Compatible ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IRQ (Edge, ActiveHigh, Exclusive, )
                            {12}
                    })
                    Method (_PSW, 1, NotSerialized)  // _PSW: Power State Wake
                    {
                    }

                    Name (MSP0, 0x00)
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (MSP0) /* \_SB_.PCI0.LPC0.MSE0.MSP0 */
                    }
                }

                Device (SYSR)
                {
                    Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0022,             // Range Minimum
                            0x0022,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x002E,             // Range Minimum
                            0x002E,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0072,             // Range Minimum
                            0x0072,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0080,             // Range Minimum
                            0x0080,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0092,             // Range Minimum
                            0x0092,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x00B0,             // Range Minimum
                            0x00B0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00B2,             // Range Minimum
                            0x00B2,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x00B8,             // Range Minimum
                            0x00B8,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x00BC,             // Range Minimum
                            0x00BC,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x00F0,             // Range Minimum
                            0x00F0,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x04D0,             // Range Minimum
                            0x04D0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0530,             // Range Minimum
                            0x0530,             // Range Maximum
                            0x01,               // Alignment
                            0x08,               // Length
                            )
                        IO (Decode16,
                            0x0800,             // Range Minimum
                            0x0800,             // Range Maximum
                            0x01,               // Alignment
                            0x28,               // Length
                            )
                        IO (Decode16,
                            0x0830,             // Range Minimum
                            0x0830,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0840,             // Range Minimum
                            0x0840,             // Range Maximum
                            0x01,               // Alignment
                            0x08,               // Length
                            )
                        IO (Decode16,
                            0x0B00,             // Range Minimum
                            0x0B00,             // Range Maximum
                            0x01,               // Alignment
                            0x20,               // Length
                            )
                        IO (Decode16,
                            0x0B20,             // Range Minimum
                            0x0B20,             // Range Maximum
                            0x01,               // Alignment
                            0x20,               // Length
                            )
                        IO (Decode16,
                            0x0C00,             // Range Minimum
                            0x0C00,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0C14,             // Range Minimum
                            0x0C14,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0C50,             // Range Minimum
                            0x0C50,             // Range Maximum
                            0x01,               // Alignment
                            0x03,               // Length
                            )
                        IO (Decode16,
                            0x0CD0,             // Range Minimum
                            0x0CD0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0CD2,             // Range Minimum
                            0x0CD2,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0CD4,             // Range Minimum
                            0x0CD4,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0CD6,             // Range Minimum
                            0x0CD6,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0CD8,             // Range Minimum
                            0x0CD8,             // Range Maximum
                            0x01,               // Alignment
                            0x08,               // Length
                            )
                        IO (Decode16,
                            0x0CF9,             // Range Minimum
                            0x0CF9,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                            0x0000,             // Granularity
                            0x8100,             // Range Minimum
                            0x81FF,             // Range Maximum
                            0x0000,             // Translation Offset
                            0x0100,             // Length
                            ,, , TypeStatic, DenseTranslation)
                        WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                            0x0000,             // Granularity
                            0x8200,             // Range Minimum
                            0x82FF,             // Range Maximum
                            0x0000,             // Translation Offset
                            0x0100,             // Length
                            ,, , TypeStatic, DenseTranslation)
                    })
                }

                OperationRegion (LPCS, PCI_Config, 0xA0, 0x04)
                Field (LPCS, DWordAcc, NoLock, Preserve)
                {
                    SPBA,   32
                }

                Device (MEM)
                {
                    Name (_HID, EisaId ("PNP0C01") /* System Board */)  // _HID: Hardware ID
                    Name (MSRC, ResourceTemplate ()
                    {
                        Memory32Fixed (ReadOnly,
                            0x000E0000,         // Address Base
                            0x00020000,         // Address Length
                            )
                        Memory32Fixed (ReadOnly,
                            0xFF800000,         // Address Base
                            0x00800000,         // Address Length
                            )
                        Memory32Fixed (ReadWrite,
                            0x00000000,         // Address Base
                            0x00000000,         // Address Length
                            _Y1C)
                        Memory32Fixed (ReadWrite,
                            0xFEC10000,         // Address Base
                            0x00000020,         // Address Length
                            _Y1D)
                        Memory32Fixed (ReadOnly,
                            0xFED00000,         // Address Base
                            0x00000400,         // Address Length
                            )
                        Memory32Fixed (ReadWrite,
                            0xFED61000,         // Address Base
                            0x00000400,         // Address Length
                            )
                        Memory32Fixed (ReadWrite,
                            0xFED80000,         // Address Base
                            0x00001000,         // Address Length
                            )
                    })
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        CreateDWordField (MSRC, \_SB.PCI0.LPC0.MEM._Y1C._BAS, BARX)  // _BAS: Base Address
                        CreateDWordField (MSRC, \_SB.PCI0.LPC0.MEM._Y1C._LEN, GALN)  // _LEN: Length
                        CreateDWordField (MSRC, \_SB.PCI0.LPC0.MEM._Y1D._BAS, MB01)  // _BAS: Base Address
                        CreateDWordField (MSRC, \_SB.PCI0.LPC0.MEM._Y1D._LEN, ML01)  // _LEN: Length
                        Local0 = SPBA /* \_SB_.PCI0.LPC0.SPBA */
                        MB01 = (Local0 & 0xFFFFFFE0)
                        Local0 = NBBA /* \_SB_.PCI0.NBBA */
                        If (Local0)
                        {
                            GALN = 0x1000
                            BARX = (Local0 & 0xFFFFFFF0)
                        }

                        Return (MSRC) /* \_SB_.PCI0.LPC0.MEM_.MSRC */
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }
                }

                Device (EC0)
                {
                    Name (_HID, EisaId ("PNP0C09") /* Embedded Controller Device */)  // _HID: Hardware ID
                    Name (_UID, 0x01)  // _UID: Unique ID
                    Name (ECAV, Zero)
                    Mutex (LFCM, 0x00)
                    Name (_GPE, 0x03)  // _GPE: General Purpose Events
                    Name (XX11, Buffer (0x07){})
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Name (BFFR, ResourceTemplate ()
                        {
                            IO (Decode16,
                                0x0062,             // Range Minimum
                                0x0062,             // Range Maximum
                                0x00,               // Alignment
                                0x01,               // Length
                                )
                            IO (Decode16,
                                0x0066,             // Range Minimum
                                0x0066,             // Range Maximum
                                0x00,               // Alignment
                                0x01,               // Length
                                )
                        })
                        Return (BFFR) /* \_SB_.PCI0.LPC0.EC0_._CRS.BFFR */
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    OperationRegion (SMIO, SystemIO, 0xB0, 0x02)
                    Field (SMIO, ByteAcc, NoLock, Preserve)
                    {
                        SMIC,   8, 
                        SMID,   8
                    }

                    OperationRegion (ERAM, EmbeddedControl, 0x00, 0xFF)
                    Field (ERAM, ByteAcc, Lock, Preserve)
                    {
                        VCMD,   8, 
                        VDAT,   8, 
                        VSTS,   8, 
                        Offset (0x06), 
                        FANS,   8, 
                        BUSG,   1, 
                        BLEG,   1, 
                        BATF,   1, 
                        BNSM,   1, 
                        BTST,   1, 
                        BBAD,   1, 
                        AUTO,   1, 
                        FCHG,   1, 
                        ABTL,   8, 
                        DBTL,   8, 
                        EDCC,   1, 
                        ALSC,   1, 
                        CDMB,   1, 
                        CCSB,   1, 
                        BTSM,   1, 
                        BTCM,   1, 
                        LBTM,   1, 
                        CSBM,   1, 
                        SGST,   1, 
                        HDMI,   1, 
                        HYBD,   1, 
                        SWST,   1, 
                        EVNT,   1, 
                        DCRF,   1, 
                        COLR,   1, 
                        SGCN,   1, 
                        ODPO,   1, 
                        EODD,   1, 
                        ODPK,   1, 
                        CMEX,   1, 
                        CMON,   1, 
                        SODD,   1, 
                        ODFB,   1, 
                        EODS,   1, 
                        RTMP,   8, 
                        VTMP,   8, 
                        AFCC,   8, 
                        PINF,   3, 
                        SUPR,   1, 
                        GTMP,   1, 
                        QUIT,   1, 
                        LS35,   1, 
                        Offset (0x11), 
                        RMBT,   1, 
                        RSBT,   1, 
                        VTYP,   2, 
                        Offset (0x12), 
                        FUSL,   8, 
                        FUSH,   8, 
                        FWBT,   64, 
                        Offset (0x1D), 
                        QUIE,   8, 
                        GPTE,   8, 
                        Offset (0x43), 
                        ECTP,   8, 
                        Offset (0x4A), 
                        ESMC,   1, 
                        Offset (0x4B), 
                        EMOD,   8, 
                        BFUD,   16, 
                        Offset (0x5D), 
                        EXSI,   8, 
                        EXSB,   8, 
                        EXND,   8, 
                        SMPR,   8, 
                        SMST,   8, 
                        SMAD,   8, 
                        SMCM,   8, 
                        SMDA,   256, 
                        BCNT,   8, 
                        SMAA,   8, 
                        SAD0,   8, 
                        SAD1,   8, 
                        Offset (0x8A), 
                        KBLO,   1, 
                        UCHE,   1, 
                        KLCH,   1, 
                            ,   1, 
                        KLFS,   1, 
                        KLOR,   1, 
                        UCHR,   1, 
                        UCER,   1, 
                        TPDV,   3, 
                        Offset (0x8C), 
                        QCHO,   1, 
                        BKLT,   1, 
                        Offset (0x8F), 
                        BMN0,   72, 
                        BDN0,   64, 
                        IBTL,   1, 
                        IBCL,   1, 
                        ISS0,   1, 
                        IRTC,   1, 
                        ISUP,   1, 
                        ISC2,   1, 
                        IWAK,   1, 
                        Offset (0xA1), 
                            ,   1, 
                        VOUT,   1, 
                        TPAD,   1, 
                        HKDB,   1, 
                        Offset (0xA2), 
                        Offset (0xA3), 
                        OSTY,   3, 
                            ,   1, 
                        ADPI,   2, 
                            ,   1, 
                        ADPT,   1, 
                        PMEW,   1, 
                        MODW,   1, 
                        LANW,   1, 
                        RTCW,   1, 
                        WLAW,   1, 
                        USBW,   1, 
                        KEYW,   1, 
                        TPWK,   1, 
                        CHCR,   1, 
                        ADPP,   1, 
                        LERN,   1, 
                        ACMD,   1, 
                        BOVP,   1, 
                        LEAK,   1, 
                        AIRP,   1, 
                        ACOF,   1, 
                        S3EN,   1, 
                        S3RS,   1, 
                        S4EN,   1, 
                        S4RS,   1, 
                        S5EN,   1, 
                        S5RS,   1, 
                        Offset (0xA7), 
                        OSTT,   8, 
                        OSST,   8, 
                        THRT,   8, 
                        TCOT,   8, 
                        MODL,   1, 
                            ,   2, 
                        INII,   1, 
                        FAN1,   1, 
                        FAN2,   1, 
                        FAOK,   1, 
                        SKIN,   1, 
                        SDTE,   8, 
                        SPDN,   4, 
                        FNUM,   4, 
                        TLVL,   4, 
                            ,   2, 
                        THSW,   1, 
                        TPIN,   1, 
                        TSTH,   1, 
                        TSCP,   1, 
                            ,   2, 
                        PLVL,   4, 
                        CPUT,   8, 
                        CPTL,   8, 
                        Offset (0xB7), 
                            ,   1, 
                        PWDB,   1, 
                        DIGT,   1, 
                        CDLK,   1, 
                        Offset (0xB8), 
                            ,   1, 
                        LSTE,   1, 
                        PMEE,   1, 
                        PWBE,   1, 
                        RNGE,   1, 
                        BTWE,   1, 
                        Offset (0xB9), 
                        LCBV,   8, 
                        AOAC,   1, 
                        S35F,   1, 
                        IFFS,   1, 
                        INS0,   1, 
                        ISBL,   1, 
                        ISOV,   1, 
                            ,   1, 
                        ISRT,   1, 
                        WLAN,   1, 
                        BLUE,   1, 
                        WEXT,   1, 
                        BEXT,   1, 
                        KILL,   1, 
                        WLOK,   1, 
                        EN3G,   1, 
                        EX3G,   1, 
                        KPID,   8, 
                        CTYP,   3, 
                        CORE,   3, 
                        GATY,   2, 
                        BA1P,   1, 
                        BA2P,   1, 
                            ,   2, 
                        B1CH,   1, 
                        B2CH,   1, 
                        Offset (0xBF), 
                        PBY1,   1, 
                        PBY2,   1, 
                            ,   2, 
                        SMB1,   1, 
                        SMB2,   1, 
                        Offset (0xC0), 
                        B1TY,   1, 
                        B1MD,   1, 
                        B1LW,   1, 
                            ,   1, 
                        B1MF,   3, 
                        Offset (0xC1), 
                        B1ST,   8, 
                        B1RC,   16, 
                        B1SN,   16, 
                        B1FV,   16, 
                        B1DV,   16, 
                        B1DC,   16, 
                        B1FC,   16, 
                        B1GS,   8, 
                        B1CT,   8, 
                        B1CR,   16, 
                        B1AC,   16, 
                        B1PC,   8, 
                        B1VL,   8, 
                        B1TM,   8, 
                        B1AT,   8, 
                        B1CC,   16, 
                        B1TC,   8, 
                        B1CI,   8, 
                        B1CU,   8, 
                        B1CA,   8, 
                        B1SM,   16, 
                        B1VC,   8, 
                        B1FA,   8, 
                        B1VA,   8, 
                        B1C1,   16, 
                        B1C2,   16, 
                        B1C3,   16, 
                        B1C4,   16, 
                        Offset (0xF0), 
                        B1EX,   1, 
                        B1FL,   1, 
                        B1EP,   1, 
                        B1FI,   1, 
                            ,   2, 
                        B1RE,   1, 
                        Offset (0xF1), 
                        B1LL,   1, 
                        B1CE,   1, 
                        B1SE,   1, 
                        B1S5,   1, 
                        B1SR,   1, 
                        B1SC,   1, 
                        Offset (0xF2), 
                        B1TO,   1, 
                        B1BC,   1, 
                        B1CF,   1, 
                        B1CS,   1, 
                        B1SG,   1, 
                        B1SU,   1, 
                        B1OV,   1, 
                        B1OT,   1, 
                        B1TT,   1, 
                        B1SA,   1, 
                        B1SS,   1, 
                            ,   1, 
                        B1SF,   1, 
                        B1WN,   1, 
                        Offset (0xF4), 
                        B1DA,   16, 
                        Offset (0xF8), 
                        B1CN,   8, 
                        Offset (0xFB)
                    }

                    OperationRegion (ECMS, SystemIO, 0x72, 0x02)
                    Field (ECMS, ByteAcc, Lock, Preserve)
                    {
                        INDX,   8, 
                        DATA,   8
                    }

                    Method (RECM, 1, Serialized)
                    {
                        INDX = Arg0
                        Return (DATA) /* \_SB_.PCI0.LPC0.EC0_.DATA */
                    }

                    Method (WECM, 2, Serialized)
                    {
                        INDX = Arg0
                        DATA = Arg1
                    }

                    OperationRegion (CMDE, SystemIO, 0x68, 0x05)
                    Field (CMDE, ByteAcc, Lock, Preserve)
                    {
                        EC68,   8, 
                        Offset (0x02), 
                        Offset (0x03), 
                        Offset (0x04), 
                        EC6C,   8
                    }

                    Method (WIBE, 0, Serialized)
                    {
                        Local0 = 0x00010000
                        While (Local0)
                        {
                            Local1 = EC6C /* \_SB_.PCI0.LPC0.EC0_.EC6C */
                            If (((Local1 & 0x02) == 0x00))
                            {
                                Return (0x00)
                            }

                            Stall (0x0A)
                            Local0--
                        }

                        Return (0x01)
                    }

                    Method (WOBF, 0, Serialized)
                    {
                        Local0 = 0x00010000
                        While (Local0)
                        {
                            Local1 = EC6C /* \_SB_.PCI0.LPC0.EC0_.EC6C */
                            If (((Local1 & 0x01) == 0x01))
                            {
                                Return (0x00)
                            }

                            Stall (0x0A)
                            Local0--
                        }

                        Return (0x01)
                    }

                    Method (WOBE, 0, Serialized)
                    {
                        Local0 = 0x00010000
                        While (Local0)
                        {
                            Local1 = EC6C /* \_SB_.PCI0.LPC0.EC0_.EC6C */
                            If (((Local1 & 0x01) == 0x01))
                            {
                                Local2 = EC68 /* \_SB_.PCI0.LPC0.EC0_.EC68 */
                            }
                            Else
                            {
                                Return (0x00)
                            }

                            Stall (0x0A)
                            Local0--
                        }

                        Return (0x01)
                    }

                    Method (LCMD, 2, Serialized)
                    {
                        Name (LBUF, Buffer (0x1E)
                        {
                             0x00                                             // .
                        })
                        If ((WIBE () == 0x01))
                        {
                            Return (0x01)
                        }

                        If ((WOBE () == 0x01))
                        {
                            Return (0x01)
                        }

                        EC6C = Arg0
                        If ((WIBE () == 0x01))
                        {
                            Return (0x01)
                        }

                        If (((Arg1 != 0x00) && (Arg1 != 0xFF)))
                        {
                            EC68 = Arg1
                            If ((WIBE () == 0x01))
                            {
                                Return (0x01)
                            }
                        }

                        If ((WOBF () == 0x01))
                        {
                            Return (0x01)
                        }

                        Local0 = EC68 /* \_SB_.PCI0.LPC0.EC0_.EC68 */
                        Local1 = 0x00
                        While (Local0)
                        {
                            If ((WOBF () == 0x01))
                            {
                                Return (0x01)
                            }

                            LBUF [Local1] = EC68 /* \_SB_.PCI0.LPC0.EC0_.EC68 */
                            Local1++
                            Local0--
                        }

                        Return (LBUF) /* \_SB_.PCI0.LPC0.EC0_.LCMD.LBUF */
                    }

                    Method (LRAM, 2, Serialized)
                    {
                        If ((WIBE () == 0x01))
                        {
                            Return (0x01)
                        }

                        If ((WOBE () == 0x01))
                        {
                            Return (0x01)
                        }

                        EC6C = 0x7E
                        If ((WIBE () == 0x01))
                        {
                            Return (0x01)
                        }

                        EC68 = Arg0
                        If ((WIBE () == 0x01))
                        {
                            Return (0x01)
                        }

                        EC68 = Arg1
                        If ((WIBE () == 0x01))
                        {
                            Return (0x01)
                        }

                        If ((WOBF () == 0x01))
                        {
                            Return (0x01)
                        }

                        Return (EC68) /* \_SB_.PCI0.LPC0.EC0_.EC68 */
                    }

                    Device (BAT0)
                    {
                        Name (_HID, EisaId ("PNP0C0A") /* Control Method Battery */)  // _HID: Hardware ID
                        Name (_UID, 0x01)  // _UID: Unique ID
                        Name (_PCL, Package (0x01)  // _PCL: Power Consumer List
                        {
                            _SB
                        })
                        Name (PBIF, Package (0x0D)
                        {
                            0x00, 
                            0xFFFFFFFF, 
                            0xFFFFFFFF, 
                            0x01, 
                            0xFFFFFFFF, 
                            0x00, 
                            0x00, 
                            0x64, 
                            0x00, 
                            "LCFC", 
                            "BAT20101001", 
                            "LiP", 
                            "LENOVO"
                        })
                        Name (PBST, Package (0x04)
                        {
                            0x01, 
                            0x0A90, 
                            0x1000, 
                            0x2A30
                        })
                        Name (ECON, 0x01)
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            If ((ECON == 0x01))
                            {
                                If (ECAV)
                                {
                                    If ((Acquire (LFCM, 0xA000) == 0x00))
                                    {
                                        Local0 = BA1P /* \_SB_.PCI0.LPC0.EC0_.BA1P */
                                        Release (LFCM)
                                    }
                                }

                                If ((Local0 & 0x01))
                                {
                                    Return (0x1F)
                                }
                                Else
                                {
                                    Return (0x0F)
                                }
                            }
                            Else
                            {
                                Return (0x00)
                            }
                        }

                        Method (_BIF, 0, NotSerialized)  // _BIF: Battery Information
                        {
                            If ((ECAV == 0x01))
                            {
                                If ((Acquire (LFCM, 0xA000) == 0x00))
                                {
                                    Local0 = B1DC /* \_SB_.PCI0.LPC0.EC0_.B1DC */
                                    Local0 *= 0x0A
                                    PBIF [0x01] = Local0
                                    Local0 = B1FC /* \_SB_.PCI0.LPC0.EC0_.B1FC */
                                    Local0 *= 0x0A
                                    PBIF [0x02] = Local0
                                    PBIF [0x04] = B1DV /* \_SB_.PCI0.LPC0.EC0_.B1DV */
                                    If (B1FC)
                                    {
                                        PBIF [0x05] = ((B1FC * 0x0A) / 0x0A)
                                        PBIF [0x06] = ((B1FC * 0x0A) / 0x19)
                                        PBIF [0x07] = ((B1DC * 0x0A) / 0x64)
                                    }

                                    PBIF [0x09] = ""
                                    PBIF [0x0A] = ""
                                    PBIF [0x0B] = ""
                                    PBIF [0x0C] = ""
                                    Name (BDNT, Buffer (0x09)
                                    {
                                         0x00                                             // .
                                    })
                                    BDNT = BDN0 /* \_SB_.PCI0.LPC0.EC0_.BDN0 */
                                    PBIF [0x09] = ToString (BDNT, Ones)
                                    Local0 = B1SN /* \_SB_.PCI0.LPC0.EC0_.B1SN */
                                    Name (SERN, Buffer (0x06)
                                    {
                                        "     "
                                    })
                                    Local2 = 0x04
                                    While (Local0)
                                    {
                                        Divide (Local0, 0x0A, Local1, Local0)
                                        SERN [Local2] = (Local1 + 0x30)
                                        Local2--
                                    }

                                    PBIF [0x0A] = SERN /* \_SB_.PCI0.LPC0.EC0_.BAT0._BIF.SERN */
                                    Name (DCH0, Buffer (0x0A)
                                    {
                                         0x00                                             // .
                                    })
                                    Name (DCH1, "LION")
                                    Name (DCH2, "LiP")
                                    If ((B1TY == 0x01))
                                    {
                                        DCH0 = DCH1 /* \_SB_.PCI0.LPC0.EC0_.BAT0._BIF.DCH1 */
                                        PBIF [0x0B] = ToString (DCH0, Ones)
                                    }
                                    Else
                                    {
                                        DCH0 = DCH2 /* \_SB_.PCI0.LPC0.EC0_.BAT0._BIF.DCH2 */
                                        PBIF [0x0B] = ToString (DCH0, Ones)
                                    }

                                    Name (BMNT, Buffer (0x0A)
                                    {
                                         0x00                                             // .
                                    })
                                    BMNT = BMN0 /* \_SB_.PCI0.LPC0.EC0_.BMN0 */
                                    PBIF [0x0C] = ToString (BMNT, Ones)
                                    Release (LFCM)
                                }
                            }

                            Return (PBIF) /* \_SB_.PCI0.LPC0.EC0_.BAT0.PBIF */
                        }

                        Name (OBST, 0x00)
                        Name (OBAC, 0x00)
                        Name (OBPR, 0x00)
                        Name (OBRC, 0x00)
                        Name (OBPV, 0x00)
                        Method (_BST, 0, Serialized)  // _BST: Battery Status
                        {
                            If ((ECAV == 0x01))
                            {
                                If ((Acquire (LFCM, 0xA000) == 0x00))
                                {
                                    Sleep (0x10)
                                    Local0 = LRAM (0x04, 0xC1)
                                    Local1 = DerefOf (PBST [0x00])
                                    Switch ((Local0 & 0x07))
                                    {
                                        Case (0x00)
                                        {
                                            OBST = (Local1 & 0xF8)
                                        }
                                        Case (0x01)
                                        {
                                            OBST = (0x01 | (Local1 & 0xF8))
                                        }
                                        Case (0x02)
                                        {
                                            OBST = (0x02 | (Local1 & 0xF8))
                                        }
                                        Case (0x04)
                                        {
                                            OBST = (0x04 | (Local1 & 0xF8))
                                        }

                                    }

                                    Sleep (0x10)
                                    OBAC = LRAM (0x04, 0xD2)
                                    Local3 = LRAM (0x04, 0xD3)
                                    OBAC |= (Local3 << 0x08) /* \_SB_.PCI0.LPC0.EC0_.BAT0.OBAC */
                                    If ((OBST & 0x01))
                                    {
                                        If ((OBAC != Zero))
                                        {
                                            OBAC = (~OBAC & 0x7FFF)
                                        }
                                    }

                                    Sleep (0x10)
                                    Local3 = 0x32
                                    Local4 = LRAM (0x04, 0xC2)
                                    Local5 = LRAM (0x04, 0xC3)
                                    OBRC = ((Local5 << 0x08) | Local4)
                                    If ((OBRC == 0x00))
                                    {
                                        While (Local3)
                                        {
                                            Local4 = LRAM (0x04, 0xC2)
                                            Local5 = LRAM (0x04, 0xC3)
                                            OBRC = ((Local5 << 0x08) | Local4)
                                            If ((OBRC == 0x00))
                                            {
                                                Local4 = LRAM (0x04, 0xC2)
                                                Local5 = LRAM (0x04, 0xC3)
                                                OBRC = ((Local5 << 0x08) | Local4)
                                                Sleep (0x64)
                                            }
                                            Else
                                            {
                                                Break
                                            }

                                            Local3--
                                        }
                                    }

                                    Sleep (0x10)
                                    OBPV = LRAM (0x04, 0xC6)
                                    Local3 = LRAM (0x04, 0xC7)
                                    OBPV |= (Local3 << 0x08) /* \_SB_.PCI0.LPC0.EC0_.BAT0.OBPV */
                                    OBRC *= 0x0A
                                    OBPR = ((OBAC * OBPV) / 0x03E8)
                                    PBST [0x00] = OBST /* \_SB_.PCI0.LPC0.EC0_.BAT0.OBST */
                                    PBST [0x01] = OBPR /* \_SB_.PCI0.LPC0.EC0_.BAT0.OBPR */
                                    PBST [0x02] = OBRC /* \_SB_.PCI0.LPC0.EC0_.BAT0.OBRC */
                                    PBST [0x03] = OBPV /* \_SB_.PCI0.LPC0.EC0_.BAT0.OBPV */
                                    Release (LFCM)
                                }
                            }

                            Return (PBST) /* \_SB_.PCI0.LPC0.EC0_.BAT0.PBST */
                        }
                    }

                    Scope (\_SB.PCI0.LPC0.EC0)
                    {
                        Device (VPC0)
                        {
                            Name (_HID, "VPC2004")  // _HID: Hardware ID
                            Name (_UID, 0x00)  // _UID: Unique ID
                            Name (_VPC, 0xFC0DF018)
                            Name (VPCD, 0x00)
                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Method (_CFG, 0, NotSerialized)
                            {
                                Return (_VPC) /* \_SB_.PCI0.LPC0.EC0_.VPC0._VPC */
                            }

                            Method (VPCR, 1, Serialized)
                            {
                                If (ECAV)
                                {
                                    If ((Acquire (LFCM, 0xA000) == 0x00))
                                    {
                                        If ((Arg0 == 0x01))
                                        {
                                            VPCD = VCMD /* \_SB_.PCI0.LPC0.EC0_.VCMD */
                                        }
                                        Else
                                        {
                                            VPCD = VDAT /* \_SB_.PCI0.LPC0.EC0_.VDAT */
                                        }

                                        Release (LFCM)
                                    }
                                }

                                Return (VPCD) /* \_SB_.PCI0.LPC0.EC0_.VPC0.VPCD */
                            }

                            Method (VPCW, 2, Serialized)
                            {
                                If (ECAV)
                                {
                                    If ((Acquire (LFCM, 0xA000) == 0x00))
                                    {
                                        If ((Arg0 == 0x01))
                                        {
                                            VCMD = Arg1
                                        }
                                        Else
                                        {
                                            VDAT = Arg1
                                        }

                                        Release (LFCM)
                                    }
                                }

                                Return (0x00)
                            }

                            Method (SVCR, 1, Serialized)
                            {
                            }

                            Method (HALS, 0, NotSerialized)
                            {
                                Local0 = Zero
                                If (ECAV)
                                {
                                    If ((Acquire (LFCM, 0xA000) == 0x00))
                                    {
                                        Local0 |= 0x0200
                                        If (HKDB)
                                        {
                                            Local0 |= 0x0400
                                        }

                                        Local0 |= 0x0800
                                        Release (LFCM)
                                        If ((QUIE == 0x01))
                                        {
                                            Local0 |= 0x2000
                                        }
                                    }
                                }

                                Return (Local0)
                            }

                            Method (SALS, 1, Serialized)
                            {
                                Local0 = ToInteger (Arg0)
                                If (ECAV)
                                {
                                    If ((Acquire (LFCM, 0xA000) == 0x00))
                                    {
                                        If ((Local0 == 0x08))
                                        {
                                            KBLO = 0x01
                                            Release (LFCM)
                                            Return (0x00)
                                        }

                                        If ((Local0 == 0x09))
                                        {
                                            KBLO = 0x00
                                            Release (LFCM)
                                            Return (0x00)
                                        }

                                        If ((Local0 == 0x0A))
                                        {
                                            UCHE = 0x01
                                            SMBB = 0x32
                                            SMBA = 0xCA
                                            Release (LFCM)
                                            Return (0x00)
                                        }

                                        If ((Local0 == 0x0B))
                                        {
                                            UCHE = 0x00
                                            SMBB = 0x33
                                            SMBA = 0xCA
                                            Release (LFCM)
                                            Return (0x00)
                                        }

                                        If ((Local0 == 0x0E))
                                        {
                                            HKDB = 0x01
                                            SMBB = 0x31
                                            SMBA = 0xCA
                                            Release (LFCM)
                                            Return (0x00)
                                        }

                                        If ((Local0 == 0x0F))
                                        {
                                            HKDB = 0x00
                                            SMBB = 0x30
                                            SMBA = 0xCA
                                            Release (LFCM)
                                            Return (0x00)
                                        }

                                        Release (LFCM)
                                    }
                                }

                                Return (Zero)
                            }

                            Method (GBMD, 0, NotSerialized)
                            {
                                Local0 = 0x10000000
                                If (ECAV)
                                {
                                    If ((Acquire (LFCM, 0xA000) == 0x00))
                                    {
                                        If ((One == CDMB))
                                        {
                                            Local0 |= One
                                        }

                                        If ((One == BBAD))
                                        {
                                            Local0 |= 0x08
                                        }

                                        If ((One == BTSM))
                                        {
                                            Local0 |= 0x20
                                        }

                                        If ((One == BLEG))
                                        {
                                            Local0 |= 0x80
                                        }

                                        If ((One == BATF))
                                        {
                                            Local0 |= 0x0100
                                        }

                                        If ((Zero == BTSM))
                                        {
                                            Local0 |= 0x0200
                                        }

                                        If ((0x00 == ADPI))
                                        {
                                            Local0 &= 0xFFFE7FFF
                                        }

                                        If ((0x01 == ADPI))
                                        {
                                            Local0 |= 0x8000
                                        }

                                        If ((0x02 == ADPI))
                                        {
                                            Local0 |= 0x00010000
                                        }

                                        Local0 |= 0x00040000
                                        If ((One == ESMC))
                                        {
                                            Local0 |= 0x00400000
                                        }

                                        Release (LFCM)
                                    }
                                }

                                Return (Local0)
                            }

                            Name (VBST, 0x00)
                            Name (VBAC, 0x00)
                            Name (VBPR, 0x00)
                            Name (VBRC, 0x00)
                            Name (VBPV, 0x00)
                            Name (VBFC, 0x00)
                            Name (VBCT, 0x00)
                            Method (SMTF, 1, NotSerialized)
                            {
                                If (ECAV)
                                {
                                    If ((Acquire (LFCM, 0xA000) == 0x00))
                                    {
                                        If ((Arg0 == 0x00))
                                        {
                                            If ((B1FV == Zero))
                                            {
                                                Release (LFCM)
                                                Return (0xFFFF)
                                            }

                                            If ((B1AC == Zero))
                                            {
                                                Release (LFCM)
                                                Return (0xFFFF)
                                            }

                                            Local0 = B1FC /* \_SB_.PCI0.LPC0.EC0_.B1FC */
                                            Local0 *= 0x0A
                                            VBFC = Local0
                                            Local1 = B1RC /* \_SB_.PCI0.LPC0.EC0_.B1RC */
                                            Local1 *= 0x0A
                                            VBRC = Local1
                                            If ((VBFC > VBRC))
                                            {
                                                VBPV = B1FV /* \_SB_.PCI0.LPC0.EC0_.B1FV */
                                                VBAC = B1AC /* \_SB_.PCI0.LPC0.EC0_.B1AC */
                                                Local0 -= Local1
                                                Local1 = (VBAC * VBPV)
                                                Local3 = (Local0 * 0x03E8)
                                                Local3 = (Local3 * 0x3C)
                                                VBCT = (Local3 / Local1)
                                                Release (LFCM)
                                                Return (VBCT) /* \_SB_.PCI0.LPC0.EC0_.VPC0.VBCT */
                                            }
                                            Else
                                            {
                                                Release (LFCM)
                                                Return (0xFFFF)
                                            }
                                        }

                                        If ((Arg0 == 0x01))
                                        {
                                            Release (LFCM)
                                            Return (0xFFFF)
                                        }

                                        Release (LFCM)
                                    }
                                }

                                Return (0xFFFF)
                            }

                            Name (QBST, 0x00)
                            Name (QBAC, 0x00)
                            Name (QBPR, 0x00)
                            Name (QBRC, 0x00)
                            Name (QBPV, 0x00)
                            Name (QBFC, 0x00)
                            Name (QBCT, 0x00)
                            Method (SMTE, 1, NotSerialized)
                            {
                                If (ECAV)
                                {
                                    If ((Acquire (LFCM, 0xA000) == 0x00))
                                    {
                                        If ((Arg0 == 0x00))
                                        {
                                            If ((B1FV == Zero))
                                            {
                                                Release (LFCM)
                                                Return (0xFFFF)
                                            }

                                            If ((B1AC == Zero))
                                            {
                                                Release (LFCM)
                                                Return (0xFFFF)
                                            }

                                            Local0 = B1RC /* \_SB_.PCI0.LPC0.EC0_.B1RC */
                                            Local0 *= 0x0A
                                            QBRC = Local0
                                            Local1 = B1FC /* \_SB_.PCI0.LPC0.EC0_.B1FC */
                                            Local1 *= 0x0A
                                            QBFC = Local1
                                            If ((QBFC > QBRC))
                                            {
                                                QBPV = B1FV /* \_SB_.PCI0.LPC0.EC0_.B1FV */
                                                If (((B1AC & 0x8000) == Zero))
                                                {
                                                    QBAC = B1AC /* \_SB_.PCI0.LPC0.EC0_.B1AC */
                                                }
                                                Else
                                                {
                                                    QBAC = (0xFFFF - B1AC)
                                                }

                                                Local1 = (QBAC * QBPV)
                                                Local3 = (Local0 * 0x03E8)
                                                Local3 = (Local3 * 0x3C)
                                                QBCT = (Local3 / Local1)
                                                Release (LFCM)
                                                Return (QBCT) /* \_SB_.PCI0.LPC0.EC0_.VPC0.QBCT */
                                            }
                                            Else
                                            {
                                                Release (LFCM)
                                                Return (0xFFFF)
                                            }
                                        }

                                        If ((Arg0 == 0x01))
                                        {
                                            Release (LFCM)
                                            Return (0xFFFF)
                                        }

                                        Release (LFCM)
                                    }
                                }

                                Return (0xFFFF)
                            }

                            Method (SBMC, 1, NotSerialized)
                            {
                                If (ECAV)
                                {
                                    If ((Acquire (LFCM, 0xA000) == 0x00))
                                    {
                                        If ((Arg0 == Zero))
                                        {
                                            CDMB = 0x00
                                            EDCC = One
                                            Release (LFCM)
                                            Return (Zero)
                                        }

                                        If ((Arg0 == One))
                                        {
                                            CDMB = One
                                            Release (LFCM)
                                            Return (Zero)
                                        }

                                        If ((Arg0 == 0x03))
                                        {
                                            BTSM = One
                                            Release (LFCM)
                                            Return (Zero)
                                        }

                                        If ((Arg0 == 0x05))
                                        {
                                            BTSM = 0x00
                                            Release (LFCM)
                                            Return (Zero)
                                        }

                                        If ((Arg0 == 0x09))
                                        {
                                            ESMC = One
                                            Release (LFCM)
                                            Return (Zero)
                                        }

                                        If ((Arg0 == 0x10))
                                        {
                                            ESMC = Zero
                                            Release (LFCM)
                                            Return (Zero)
                                        }

                                        Release (LFCM)
                                    }
                                }

                                Return (Zero)
                            }

                            Method (MHCF, 1, NotSerialized)
                            {
                                P80H = 0x78
                                Local0 = Arg0
                                If (ECAV)
                                {
                                    If ((Acquire (LFCM, 0xA000) == 0x00))
                                    {
                                        Local0 &= 0x20
                                        Local0 >>= 0x05
                                        RMBT = Local0
                                        Sleep (0x14)
                                        Release (LFCM)
                                    }
                                }

                                Return (Local0)
                            }

                            Method (MHPF, 1, NotSerialized)
                            {
                                If (ECAV)
                                {
                                    If ((Acquire (LFCM, 0xA000) == 0x00))
                                    {
                                        Name (BFWB, Buffer (0x25){})
                                        CreateByteField (BFWB, Zero, FB0)
                                        CreateByteField (BFWB, One, FB1)
                                        CreateByteField (BFWB, 0x02, FB2)
                                        CreateByteField (BFWB, 0x03, FB3)
                                        CreateField (BFWB, 0x20, 0x0100, FB4)
                                        CreateByteField (BFWB, 0x24, FB5)
                                        If ((SizeOf (Arg0) <= 0x25))
                                        {
                                            If ((SMPR != Zero))
                                            {
                                                FB1 = SMST /* \_SB_.PCI0.LPC0.EC0_.SMST */
                                            }
                                            Else
                                            {
                                                BFWB = Arg0
                                                SMAD = FB2 /* \_SB_.PCI0.LPC0.EC0_.VPC0.MHPF.FB2_ */
                                                SMCM = FB3 /* \_SB_.PCI0.LPC0.EC0_.VPC0.MHPF.FB3_ */
                                                BCNT = FB5 /* \_SB_.PCI0.LPC0.EC0_.VPC0.MHPF.FB5_ */
                                                Local0 = FB0 /* \_SB_.PCI0.LPC0.EC0_.VPC0.MHPF.FB0_ */
                                                If (((Local0 & One) == Zero))
                                                {
                                                    SMDA = FB4 /* \_SB_.PCI0.LPC0.EC0_.VPC0.MHPF.FB4_ */
                                                }

                                                SMST = 0x00
                                                SMPR = FB0 /* \_SB_.PCI0.LPC0.EC0_.VPC0.MHPF.FB0_ */
                                                Local1 = 0x03E8
                                                While (Local1)
                                                {
                                                    Sleep (One)
                                                    Local1--
                                                    If (((SMST && 0x80) || (SMPR == 0x00)))
                                                    {
                                                        Break
                                                    }
                                                }

                                                Local0 = FB0 /* \_SB_.PCI0.LPC0.EC0_.VPC0.MHPF.FB0_ */
                                                If (((Local0 & One) != Zero))
                                                {
                                                    FB4 = SMDA /* \_SB_.PCI0.LPC0.EC0_.SMDA */
                                                }

                                                FB1 = SMST /* \_SB_.PCI0.LPC0.EC0_.SMST */
                                                If (((Local1 == 0x00) || !(SMST && 0x80)))
                                                {
                                                    SMPR = 0x00
                                                    FB1 = 0x92
                                                }
                                            }

                                            Release (LFCM)
                                            Return (BFWB) /* \_SB_.PCI0.LPC0.EC0_.VPC0.MHPF.BFWB */
                                        }

                                        Release (LFCM)
                                    }
                                }
                            }

                            Method (MHIF, 1, NotSerialized)
                            {
                                If (ECAV)
                                {
                                    If ((Acquire (LFCM, 0xA000) == 0x00))
                                    {
                                        P80H = 0x50
                                        If ((Arg0 == 0x00))
                                        {
                                            Name (RETB, Buffer (0x0A){})
                                            Name (BUF1, Buffer (0x08){})
                                            BUF1 = FWBT /* \_SB_.PCI0.LPC0.EC0_.FWBT */
                                            CreateByteField (BUF1, 0x00, FW0)
                                            CreateByteField (BUF1, 0x01, FW1)
                                            CreateByteField (BUF1, 0x02, FW2)
                                            CreateByteField (BUF1, 0x03, FW3)
                                            CreateByteField (BUF1, 0x04, FW4)
                                            CreateByteField (BUF1, 0x05, FW5)
                                            CreateByteField (BUF1, 0x06, FW6)
                                            CreateByteField (BUF1, 0x07, FW7)
                                            RETB [Zero] = FUSL /* \_SB_.PCI0.LPC0.EC0_.FUSL */
                                            RETB [One] = FUSH /* \_SB_.PCI0.LPC0.EC0_.FUSH */
                                            RETB [0x02] = FW0 /* \_SB_.PCI0.LPC0.EC0_.VPC0.MHIF.FW0_ */
                                            RETB [0x03] = FW1 /* \_SB_.PCI0.LPC0.EC0_.VPC0.MHIF.FW1_ */
                                            RETB [0x04] = FW2 /* \_SB_.PCI0.LPC0.EC0_.VPC0.MHIF.FW2_ */
                                            RETB [0x05] = FW3 /* \_SB_.PCI0.LPC0.EC0_.VPC0.MHIF.FW3_ */
                                            RETB [0x06] = FW4 /* \_SB_.PCI0.LPC0.EC0_.VPC0.MHIF.FW4_ */
                                            RETB [0x07] = FW5 /* \_SB_.PCI0.LPC0.EC0_.VPC0.MHIF.FW5_ */
                                            RETB [0x08] = FW6 /* \_SB_.PCI0.LPC0.EC0_.VPC0.MHIF.FW6_ */
                                            RETB [0x09] = FW7 /* \_SB_.PCI0.LPC0.EC0_.VPC0.MHIF.FW7_ */
                                            Release (LFCM)
                                            Return (RETB) /* \_SB_.PCI0.LPC0.EC0_.VPC0.MHIF.RETB */
                                        }

                                        Release (LFCM)
                                    }
                                }
                            }

                            Method (GSBI, 1, NotSerialized)
                            {
                                Name (BIFB, Buffer (0x53)
                                {
                                    /* 0000 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // ........
                                    /* 0008 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // ........
                                    /* 0010 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // ........
                                    /* 0018 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // ........
                                    /* 0020 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // ........
                                    /* 0028 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // ........
                                    /* 0030 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // ........
                                    /* 0038 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // ........
                                    /* 0040 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // ........
                                    /* 0048 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  // ........
                                    /* 0050 */  0xFF, 0xFF, 0xFF                                 // ...
                                })
                                CreateWordField (BIFB, 0x00, DCAP)
                                CreateWordField (BIFB, 0x02, FCAP)
                                CreateWordField (BIFB, 0x04, RCAP)
                                CreateWordField (BIFB, 0x06, ATTE)
                                CreateWordField (BIFB, 0x08, ATTF)
                                CreateWordField (BIFB, 0x0A, BTVT)
                                CreateWordField (BIFB, 0x0C, BTCT)
                                CreateWordField (BIFB, 0x0E, BTMP)
                                CreateWordField (BIFB, 0x10, MDAT)
                                CreateWordField (BIFB, 0x12, FUDT)
                                CreateWordField (BIFB, 0x14, DVLT)
                                CreateField (BIFB, 0xB0, 0x50, DCHE)
                                CreateField (BIFB, 0x0100, 0x40, DNAM)
                                CreateField (BIFB, 0x0140, 0x60, MNAM)
                                CreateField (BIFB, 0x01A0, 0xB8, BRNB)
                                CreateQWordField (BIFB, 0x4B, BFW0)
                                If (((Arg0 == 0x00) || (Arg0 == 0x01)))
                                {
                                    If (ECAV)
                                    {
                                        If ((Acquire (LFCM, 0xA000) == 0x00))
                                        {
                                            Local0 = B1DC /* \_SB_.PCI0.LPC0.EC0_.B1DC */
                                            Local0 *= 0x0A
                                            DCAP = Local0
                                            Local0 = B1FC /* \_SB_.PCI0.LPC0.EC0_.B1FC */
                                            Local0 *= 0x0A
                                            FCAP = Local0
                                            Local0 = B1RC /* \_SB_.PCI0.LPC0.EC0_.B1RC */
                                            Local0 *= 0x0A
                                            RCAP = Local0
                                            ATTE = SMTE (0x00)
                                            ATTF = SMTF (0x00)
                                            BTVT = B1FV /* \_SB_.PCI0.LPC0.EC0_.B1FV */
                                            BTCT = B1AC /* \_SB_.PCI0.LPC0.EC0_.B1AC */
                                            Local0 = B1AT /* \_SB_.PCI0.LPC0.EC0_.B1AT */
                                            Local0 += 0x0111
                                            Local0 *= 0x0A
                                            BTMP = Local0
                                            MDAT = B1DA /* \_SB_.PCI0.LPC0.EC0_.B1DA */
                                            If ((BFUD != 0x00))
                                            {
                                                FUDT = BFUD /* \_SB_.PCI0.LPC0.EC0_.BFUD */
                                            }

                                            DVLT = B1DV /* \_SB_.PCI0.LPC0.EC0_.B1DV */
                                            Name (DCH0, Buffer (0x0A)
                                            {
                                                 0x00                                             // .
                                            })
                                            Name (DCH1, "LION")
                                            Name (DCH2, "LiP")
                                            If ((B1TY == 0x01))
                                            {
                                                DCH0 = DCH1 /* \_SB_.PCI0.LPC0.EC0_.VPC0.GSBI.DCH1 */
                                                DCHE = DCH0 /* \_SB_.PCI0.LPC0.EC0_.VPC0.GSBI.DCH0 */
                                            }
                                            Else
                                            {
                                                DCH0 = DCH2 /* \_SB_.PCI0.LPC0.EC0_.VPC0.GSBI.DCH2 */
                                                DCHE = DCH0 /* \_SB_.PCI0.LPC0.EC0_.VPC0.GSBI.DCH0 */
                                            }

                                            Name (BDNT, Buffer (0x08)
                                            {
                                                 0x00                                             // .
                                            })
                                            BDNT = BDN0 /* \_SB_.PCI0.LPC0.EC0_.BDN0 */
                                            DNAM = BDNT /* \_SB_.PCI0.LPC0.EC0_.VPC0.GSBI.BDNT */
                                            Name (BMNT, Buffer (0x0C)
                                            {
                                                 0x00                                             // .
                                            })
                                            BMNT = BMN0 /* \_SB_.PCI0.LPC0.EC0_.BMN0 */
                                            MNAM = BMNT /* \_SB_.PCI0.LPC0.EC0_.VPC0.GSBI.BMNT */
                                            Name (BRN0, Buffer (0x17)
                                            {
                                                 0x00                                             // .
                                            })
                                            Local1 = 0x17
                                            Local2 = 0x2E
                                            While (Local1)
                                            {
                                                BRN0 [(0x17 - Local1)] = LRAM (0x02, Local2)
                                                Local2++
                                                Local1--
                                            }

                                            BRNB = BRN0 /* \_SB_.PCI0.LPC0.EC0_.VPC0.GSBI.BRN0 */
                                            BFW0 = FWBT /* \_SB_.PCI0.LPC0.EC0_.FWBT */
                                            Release (LFCM)
                                        }
                                    }

                                    Return (BIFB) /* \_SB_.PCI0.LPC0.EC0_.VPC0.GSBI.BIFB */
                                }

                                If ((Arg0 == 0x02))
                                {
                                    Return (BIFB) /* \_SB_.PCI0.LPC0.EC0_.VPC0.GSBI.BIFB */
                                }

                                Return (Zero)
                            }

                            Method (HODD, 0, NotSerialized)
                            {
                            }

                            Method (SODD, 1, Serialized)
                            {
                            }

                            Method (GBID, 0, Serialized)
                            {
                                Name (GBUF, Package (0x04)
                                {
                                    Buffer (0x02)
                                    {
                                         0x00, 0x00                                       // ..
                                    }, 

                                    Buffer (0x02)
                                    {
                                         0x00, 0x00                                       // ..
                                    }, 

                                    Buffer (0x08)
                                    {
                                         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }, 

                                    Buffer (0x08)
                                    {
                                         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    }
                                })
                                If (ECAV)
                                {
                                    If ((Acquire (LFCM, 0xA000) == 0x00))
                                    {
                                        DerefOf (GBUF [Zero]) [Zero] = B1CT /* \_SB_.PCI0.LPC0.EC0_.B1CT */
                                        DerefOf (GBUF [0x01]) [Zero] = 0x00
                                        Name (BUF1, Buffer (0x08){})
                                        BUF1 = FWBT /* \_SB_.PCI0.LPC0.EC0_.FWBT */
                                        CreateByteField (BUF1, 0x00, FW0)
                                        CreateByteField (BUF1, 0x01, FW1)
                                        CreateByteField (BUF1, 0x02, FW2)
                                        CreateByteField (BUF1, 0x03, FW3)
                                        CreateByteField (BUF1, 0x04, FW4)
                                        CreateByteField (BUF1, 0x05, FW5)
                                        CreateByteField (BUF1, 0x06, FW6)
                                        CreateByteField (BUF1, 0x07, FW7)
                                        DerefOf (GBUF [0x02]) [Zero] = FW0 /* \_SB_.PCI0.LPC0.EC0_.VPC0.GBID.FW0_ */
                                        DerefOf (GBUF [0x02]) [0x01] = FW1 /* \_SB_.PCI0.LPC0.EC0_.VPC0.GBID.FW1_ */
                                        DerefOf (GBUF [0x02]) [0x02] = FW2 /* \_SB_.PCI0.LPC0.EC0_.VPC0.GBID.FW2_ */
                                        DerefOf (GBUF [0x02]) [0x03] = FW3 /* \_SB_.PCI0.LPC0.EC0_.VPC0.GBID.FW3_ */
                                        DerefOf (GBUF [0x02]) [0x04] = FW4 /* \_SB_.PCI0.LPC0.EC0_.VPC0.GBID.FW4_ */
                                        DerefOf (GBUF [0x02]) [0x05] = FW5 /* \_SB_.PCI0.LPC0.EC0_.VPC0.GBID.FW5_ */
                                        DerefOf (GBUF [0x02]) [0x06] = FW6 /* \_SB_.PCI0.LPC0.EC0_.VPC0.GBID.FW6_ */
                                        DerefOf (GBUF [0x02]) [0x07] = FW7 /* \_SB_.PCI0.LPC0.EC0_.VPC0.GBID.FW7_ */
                                        DerefOf (GBUF [0x03]) [Zero] = 0x00
                                        Release (LFCM)
                                    }
                                }

                                Return (GBUF) /* \_SB_.PCI0.LPC0.EC0_.VPC0.GBID.GBUF */
                            }

                            Name (APDT, 0x00)
                            Method (APPC, 1, Serialized)
                            {
                                APDT = Arg0
                                Return (0x00)
                            }

                            Method (DBSL, 0, NotSerialized)
                            {
                                Return (Package (0x10)
                                {
                                    0xC9, 
                                    0xAE, 
                                    0x95, 
                                    0x7E, 
                                    0x69, 
                                    0x56, 
                                    0x45, 
                                    0x36, 
                                    0x29, 
                                    0x1E, 
                                    0x15, 
                                    0x0E, 
                                    0x09, 
                                    0x06, 
                                    0x05, 
                                    0x00
                                })
                            }

                            Method (SBSL, 1, Serialized)
                            {
                                If (ECAV)
                                {
                                    If ((Acquire (LFCM, 0xA000) == 0x00))
                                    {
                                        Local0 = Arg0
                                        If ((Local0 == One))
                                        {
                                            LCBV = 0x0E
                                        }

                                        If ((Local0 == 0x02))
                                        {
                                            LCBV = 0x07
                                        }

                                        Release (LFCM)
                                    }
                                }

                                Return (0x00)
                            }

                            Method (STHT, 1, Serialized)
                            {
                                Return (0x00)
                            }
                        }
                    }

                    Scope (\)
                    {
                        OperationRegion (LFCN, SystemMemory, 0xBDC60B18, 0x00E7)
                        Field (LFCN, AnyAcc, Lock, Preserve)
                        {
                            PS2V,   8, 
                            KBID,   8, 
                            MCSZ,   8, 
                            EDID,   1024, 
                            ICTP,   8, 
                            LFCO,   792
                        }

                        OperationRegion (SMIO, SystemIO, 0xB0, 0x02)
                        Field (SMIO, ByteAcc, NoLock, Preserve)
                        {
                            SMBA,   8, 
                            SMBB,   8
                        }
                    }

                    Method (_REG, 2, NotSerialized)  // _REG: Region Availability
                    {
                        If ((Arg0 == 0x03))
                        {
                            ECAV = Arg1
                        }

                        If (((Arg0 == 0x03) && (Arg1 == 0x01)))
                        {
                            If ((TPOS == 0x80))
                            {
                                Local0 = 0x01
                            }

                            If ((TPOS == 0x40))
                            {
                                Local0 = 0x02
                            }

                            If ((TPOS == 0x50))
                            {
                                Local0 = 0x03
                            }

                            If ((TPOS == 0x60))
                            {
                                Local0 = 0x04
                            }

                            If ((TPOS == 0x70))
                            {
                                Local0 = 0x05
                            }

                            If ((TPOS == 0x90))
                            {
                                Local0 = 0x06
                            }

                            If ((Acquire (LFCM, 0xA000) == 0x00))
                            {
                                OSTY = Local0
                                Release (LFCM)
                            }
                        }
                    }

                    Method (CMFC, 0, Serialized)
                    {
                        Return (EDID) /* \EDID */
                    }

                    Method (_Q11, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        P80H = 0x11
                        If ((^^^VGA.BRIL == 0x0C))
                        {
                            BKLT = 0x01
                        }

                        Notify (^^^VGA.LCD, 0x87) // Device-Specific
                        Notify (VPC0, 0x80) // Status Change
                    }

                    Method (_Q12, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        P80H = 0x12
                        If ((BKLT == 0x01))
                        {
                            BKLT = 0x00
                        }

                        Notify (^^^VGA.LCD, 0x86) // Device-Specific
                        Notify (VPC0, 0x80) // Status Change
                    }

                    Method (_Q13, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        CreateWordField (XX11, 0x00, SSZE)
                        CreateByteField (XX11, 0x02, SMUF)
                        CreateDWordField (XX11, 0x03, SMUD)
                        SSZE = 0x07
                        SMUF = 0x02
                        If ((QUIE == 0x02))
                        {
                            SMUD = 0x41
                        }
                        Else
                        {
                            SMUD = 0x55
                        }

                        ALIB (0x0C, XX11)
                        P80H = 0x13
                    }

                    Method (_Q15, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        P80H = 0x15
                        Notify (MSE0, 0x0E) // Heterogeneous Memory Attributes Update
                        Notify (LID, 0x80) // Status Change
                    }

                    Method (_Q16, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        P80H = 0x16
                        Notify (MSE0, 0x0D) // System Resource Affinity Update
                        Notify (LID, 0x80) // Status Change
                    }

                    Method (_Q25, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        P80H = 0x25
                        Notify (ADP0, 0x80) // Status Change
                        Notify (BAT0, 0x80) // Status Change
                        Notify (BAT0, 0x81) // Information Change
                    }

                    Method (_Q37, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        Sleep (0x012C)
                        P80H = 0x37
                        Notify (ADP0, 0x80) // Status Change
                        Notify (BAT0, 0x80) // Status Change
                    }

                    Method (_Q38, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        Sleep (0x012C)
                        P80H = 0x38
                        Notify (ADP0, 0x80) // Status Change
                        Notify (BAT0, 0x80) // Status Change
                    }

                    Method (_Q32, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        P80H = 0x32
                        Notify (PWRB, 0x80) // Status Change
                    }

                    Method (_Q3E, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        P80H = 0x3E
                        Notify (^^^^I2CA.TPNL, 0x3E) // Reserved
                    }

                    Method (_Q3F, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        P80H = 0x3F
                        Notify (^^^^I2CA.TPNL, 0x3F) // Reserved
                    }

                    Method (_Q44, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        P80H = 0x44
                        Notify (VPC0, 0x80) // Status Change
                    }

                    Method (_Q66, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        SMIC = 0xCD
                    }

                    Method (_Q67, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        SMIC = 0xCC
                    }
                }

                Scope (\_SB)
                {
                    Device (ADP0)
                    {
                        Name (_HID, "ACPI0003" /* Power Source Device */)  // _HID: Hardware ID
                        Name (_PCL, Package (0x01)  // _PCL: Power Consumer List
                        {
                            _SB
                        })
                        Name (XX00, Buffer (0x03){})
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            Return (0x0F)
                        }

                        Method (_PSR, 0, NotSerialized)  // _PSR: Power Source
                        {
                            If (^^PCI0.LPC0.EC0.ECAV)
                            {
                                If ((Acquire (^^PCI0.LPC0.EC0.LFCM, 0xA000) == 0x00))
                                {
                                    Local0 = 0x01
                                    Local0 = ^^PCI0.LPC0.EC0.ADPT /* \_SB_.PCI0.LPC0.EC0_.ADPT */
                                    CreateWordField (XX00, 0x00, SSZE)
                                    CreateByteField (XX00, 0x02, ACST)
                                    SSZE = 0x03
                                    If (Local0)
                                    {
                                        P80H = 0xAC
                                        ^^PCI0.VGA.AFN4 (0x01)
                                        ACST = 0x00
                                    }
                                    Else
                                    {
                                        P80H = 0xDC
                                        ^^PCI0.VGA.AFN4 (0x02)
                                        ACST = 0x01
                                    }

                                    ALIB (0x01, XX00)
                                    Local0 = ^^PCI0.LPC0.EC0.ADPT /* \_SB_.PCI0.LPC0.EC0_.ADPT */
                                    Release (^^PCI0.LPC0.EC0.LFCM)
                                    Return (Local0)
                                }
                            }
                        }
                    }

                    Device (LID)
                    {
                        Name (_HID, EisaId ("PNP0C0D") /* Lid Device */)  // _HID: Hardware ID
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            Return (0x0F)
                        }

                        Method (_LID, 0, NotSerialized)  // _LID: Lid Status
                        {
                            Return (^^PCI0.LPC0.EC0.LSTE) /* \_SB_.PCI0.LPC0.EC0_.LSTE */
                        }
                    }

                    Device (WMI4)
                    {
                        Name (_HID, EisaId ("PNP0C14") /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
                        Name (_UID, 0x04)  // _UID: Unique ID
                        Mutex (MWMI, 0x00)
                        Name (_WDG, Buffer (0x28)
                        {
                            /* 0000 */  0x76, 0x37, 0xA0, 0xC3, 0xAC, 0x51, 0xAA, 0x49,  // v7...Q.I
                            /* 0008 */  0xAD, 0x0F, 0xF2, 0xF7, 0xD6, 0x2C, 0x3F, 0x3C,  // .....,?<
                            /* 0010 */  0x41, 0x44, 0x03, 0x05, 0x21, 0x12, 0x90, 0x05,  // AD..!...
                            /* 0018 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,  // f.......
                            /* 0020 */  0xC9, 0x06, 0x29, 0x10, 0x42, 0x44, 0x01, 0x00   // ..).BD..
                        })
                        Name (ITEM, Package (0x03)
                        {
                            Package (0x03)
                            {
                                0x00, 
                                0x00, 
                                "BAT0 BatMaker"
                            }, 

                            Package (0x03)
                            {
                                0x00, 
                                0x01, 
                                "BAT0 HwId "
                            }, 

                            Package (0x03)
                            {
                                0x00, 
                                0x02, 
                                "BAT0 MfgDate "
                            }
                        })
                        Method (WQAD, 1, NotSerialized)
                        {
                            If (^^PCI0.LPC0.EC0.ECAV)
                            {
                                If ((Acquire (^^PCI0.LPC0.EC0.LFCM, 0xA000) == 0x00))
                                {
                                    Local0 = PSAG (Arg0)
                                    Local1 = DerefOf (ITEM [Local0])
                                    Local2 = DerefOf (Local1 [0x00])
                                    Local3 = DerefOf (Local1 [0x01])
                                    Local4 = DerefOf (Local1 [0x02])
                                    Local5 = BATD (Local2, Local3)
                                    Concatenate (Local4, ",", Local6)
                                    Concatenate (Local6, Local5, Local7)
                                    Release (^^PCI0.LPC0.EC0.LFCM)
                                }
                            }

                            Return (Local7)
                        }

                        Method (PSAG, 1, NotSerialized)
                        {
                            Return (Arg0)
                        }

                        Method (BATD, 2, NotSerialized)
                        {
                            Name (STRB, Buffer (0x0A)
                            {
                                 0x00                                             // .
                            })
                            Name (BUFR, Buffer (0x08){})
                            BUFR = ^^PCI0.LPC0.EC0.FWBT /* \_SB_.PCI0.LPC0.EC0_.FWBT */
                            CreateWordField (BUFR, 0x00, MID0)
                            CreateWordField (BUFR, 0x02, HID0)
                            CreateWordField (BUFR, 0x04, FIR0)
                            CreateWordField (BUFR, 0x06, DAT0)
                            If ((Arg0 == 0x00))
                            {
                                If ((Arg1 == 0x00))
                                {
                                    STRB = ToHexString (MID0)
                                }

                                If ((Arg1 == 0x01))
                                {
                                    STRB = ToHexString (HID0)
                                }

                                If ((Arg1 == 0x02))
                                {
                                    Local0 = ^^PCI0.LPC0.EC0.B1DA /* \_SB_.PCI0.LPC0.EC0_.B1DA */
                                    Name (DATB, Buffer (0x09)
                                    {
                                        "00000000"
                                    })
                                    Local3 = 0x07
                                    Local1 = (Local0 & 0x1F)
                                    While (Local1)
                                    {
                                        Divide (Local1, 0x0A, Local2, Local1)
                                        DATB [Local3] = (Local2 + 0x30)
                                        Local3--
                                    }

                                    Local3 = 0x05
                                    Local1 = ((Local0 & 0x01E0) >> 0x05)
                                    While (Local1)
                                    {
                                        Divide (Local1, 0x0A, Local2, Local1)
                                        DATB [Local3] = (Local2 + 0x30)
                                        Local3--
                                    }

                                    Local3 = 0x03
                                    Local1 = (((Local0 & 0xFE00) >> 0x09) + 0x07BC)
                                    While (Local1)
                                    {
                                        Divide (Local1, 0x0A, Local2, Local1)
                                        DATB [Local3] = (Local2 + 0x30)
                                        Local3--
                                    }

                                    STRB = DATB /* \_SB_.WMI4.BATD.DATB */
                                }
                            }

                            Return (ToString (STRB, Ones))
                        }

                        Name (WQBD, Buffer (0x0275)
                        {
                            /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
                            /* 0008 */  0x65, 0x02, 0x00, 0x00, 0xF8, 0x05, 0x00, 0x00,  // e.......
                            /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
                            /* 0018 */  0x18, 0xD1, 0x82, 0x00, 0x01, 0x06, 0x18, 0x42,  // .......B
                            /* 0020 */  0x10, 0x05, 0x10, 0x8A, 0x0D, 0x21, 0x02, 0x0B,  // .....!..
                            /* 0028 */  0x83, 0x50, 0x50, 0x18, 0x14, 0xA0, 0x45, 0x41,  // .PP...EA
                            /* 0030 */  0xC8, 0x05, 0x14, 0x95, 0x02, 0x21, 0xC3, 0x02,  // .....!..
                            /* 0038 */  0x14, 0x0B, 0x70, 0x2E, 0x40, 0xBA, 0x00, 0xE5,  // ..p.@...
                            /* 0040 */  0x28, 0x72, 0x0C, 0x22, 0x02, 0xF7, 0xEF, 0x0F,  // (r."....
                            /* 0048 */  0x31, 0xD0, 0x18, 0xA8, 0x50, 0x08, 0x89, 0x00,  // 1...P...
                            /* 0050 */  0xA6, 0x42, 0xE0, 0x08, 0x41, 0xBF, 0x02, 0x10,  // .B..A...
                            /* 0058 */  0x3A, 0x14, 0x20, 0x53, 0x80, 0x41, 0x01, 0x4E,  // :. S.A.N
                            /* 0060 */  0x11, 0x44, 0x10, 0xA5, 0x65, 0x01, 0xBA, 0x05,  // .D..e...
                            /* 0068 */  0xF8, 0x16, 0xA0, 0x1D, 0x42, 0x68, 0x91, 0x9A,  // ....Bh..
                            /* 0070 */  0x9F, 0x04, 0x81, 0x6A, 0x5B, 0x80, 0x45, 0x01,  // ...j[.E.
                            /* 0078 */  0xB2, 0x41, 0x08, 0xA0, 0xC7, 0xC1, 0x44, 0x0E,  // .A....D.
                            /* 0080 */  0x02, 0x25, 0x66, 0x10, 0x28, 0x9D, 0x73, 0x90,  // .%f.(.s.
                            /* 0088 */  0x4D, 0x60, 0xE1, 0x9F, 0x4C, 0x94, 0xF3, 0x88,  // M`..L...
                            /* 0090 */  0x92, 0xE0, 0xA8, 0x0E, 0x22, 0x42, 0xF0, 0x72,  // ...."B.r
                            /* 0098 */  0x05, 0x48, 0x9E, 0x80, 0x34, 0x4F, 0x4C, 0xD6,  // .H..4OL.
                            /* 00A0 */  0x07, 0xA1, 0x21, 0xB0, 0x11, 0xF0, 0x88, 0x12,  // ..!.....
                            /* 00A8 */  0x40, 0x58, 0xA0, 0x75, 0x2A, 0x14, 0x0C, 0xCA,  // @X.u*...
                            /* 00B0 */  0x03, 0x88, 0xE4, 0x8C, 0x15, 0x05, 0x6C, 0xAF,  // ......l.
                            /* 00B8 */  0x13, 0x91, 0xC9, 0x81, 0x52, 0x49, 0x70, 0xA8,  // ....RIp.
                            /* 00C0 */  0x61, 0x5A, 0xE2, 0xEC, 0x34, 0xB2, 0x13, 0x39,  // aZ..4..9
                            /* 00C8 */  0xB6, 0xA6, 0x87, 0x2C, 0x48, 0x26, 0x6D, 0x28,  // ...,H&m(
                            /* 00D0 */  0xA8, 0xB1, 0x7B, 0x5A, 0x27, 0xE5, 0x99, 0x46,  // ..{Z'..F
                            /* 00D8 */  0x3C, 0x28, 0xC3, 0x24, 0xF0, 0x28, 0x18, 0x1A,  // <(.$.(..
                            /* 00E0 */  0x27, 0x28, 0x0B, 0x42, 0x0E, 0x06, 0x8A, 0x02,  // '(.B....
                            /* 00E8 */  0x3C, 0x09, 0xCF, 0xB1, 0x78, 0x01, 0xC2, 0x67,  // <...x..g
                            /* 00F0 */  0x4C, 0xA6, 0x1D, 0x23, 0x81, 0xCF, 0x04, 0x1E,  // L..#....
                            /* 00F8 */  0xE6, 0x31, 0x63, 0x47, 0x14, 0x2E, 0xE0, 0xF9,  // .1cG....
                            /* 0100 */  0x1C, 0x43, 0xE4, 0xB8, 0x87, 0x1A, 0xE3, 0x28,  // .C.....(
                            /* 0108 */  0x22, 0x3F, 0x08, 0x60, 0x05, 0x1D, 0x04, 0x90,  // "?.`....
                            /* 0110 */  0x38, 0xFF, 0xFF, 0xE3, 0x89, 0x76, 0xDA, 0xC1,  // 8....v..
                            /* 0118 */  0x42, 0xC7, 0x39, 0xBF, 0xD0, 0x18, 0xD1, 0xE3,  // B.9.....
                            /* 0120 */  0x40, 0xC9, 0x80, 0x90, 0x47, 0x01, 0x56, 0x61,  // @...G.Va
                            /* 0128 */  0x35, 0x91, 0x04, 0xBE, 0x07, 0x74, 0x76, 0x12,  // 5....tv.
                            /* 0130 */  0xD0, 0xA5, 0x21, 0x46, 0x6F, 0x08, 0xD2, 0x26,  // ..!Fo..&
                            /* 0138 */  0xC0, 0x96, 0x00, 0x6B, 0x02, 0x8C, 0xDD, 0x06,  // ...k....
                            /* 0140 */  0x08, 0xCA, 0xD1, 0x36, 0x87, 0x22, 0x84, 0x28,  // ...6.".(
                            /* 0148 */  0x21, 0xE2, 0x86, 0xAC, 0x11, 0x45, 0x10, 0x95,  // !....E..
                            /* 0150 */  0x41, 0x08, 0x35, 0x50, 0xD8, 0x28, 0xF1, 0x8D,  // A.5P.(..
                            /* 0158 */  0x13, 0x22, 0x48, 0x02, 0x8F, 0x1C, 0x77, 0x04,  // ."H...w.
                            /* 0160 */  0xF0, 0xD8, 0x0E, 0xE8, 0x04, 0x4F, 0xE9, 0x71,  // .....O.q
                            /* 0168 */  0xC1, 0x04, 0x9E, 0xF7, 0xC1, 0x1D, 0xEA, 0x21,  // .......!
                            /* 0170 */  0x1C, 0x70, 0xD4, 0x18, 0xC7, 0xF1, 0x4C, 0x40,  // .p....L@
                            /* 0178 */  0x16, 0x2E, 0x0D, 0x20, 0x8A, 0x04, 0x8F, 0x3A,  // ... ...:
                            /* 0180 */  0x32, 0xF8, 0x70, 0xE0, 0x41, 0x7A, 0x9E, 0x9E,  // 2.p.Az..
                            /* 0188 */  0x40, 0x90, 0x43, 0x38, 0x82, 0xC7, 0x86, 0xA7,  // @.C8....
                            /* 0190 */  0x02, 0x8F, 0x81, 0x5D, 0x17, 0x7C, 0x0E, 0xF0,  // ...].|..
                            /* 0198 */  0x31, 0x01, 0xEF, 0x1A, 0x50, 0xA3, 0x7E, 0x3A,  // 1...P.~:
                            /* 01A0 */  0x60, 0x93, 0x0E, 0x87, 0x19, 0xAE, 0x87, 0x1D,  // `.......
                            /* 01A8 */  0xEE, 0x04, 0x1E, 0x0E, 0x1E, 0x33, 0xF8, 0x91,  // .....3..
                            /* 01B0 */  0xC3, 0x83, 0xC3, 0xCD, 0xF0, 0x64, 0x8E, 0xAC,  // .....d..
                            /* 01B8 */  0x54, 0x01, 0x66, 0x4F, 0x08, 0x3A, 0x4D, 0xF8,  // T.fO.:M.
                            /* 01C0 */  0xCC, 0xC1, 0x6E, 0x00, 0xE7, 0xD3, 0x33, 0x24,  // ..n...3$
                            /* 01C8 */  0x91, 0x3F, 0x08, 0xD4, 0xC8, 0x0C, 0xED, 0x69,  // .?.....i
                            /* 01D0 */  0xBF, 0x7A, 0x18, 0xF2, 0xA1, 0xE0, 0xB0, 0x98,  // .z......
                            /* 01D8 */  0xD8, 0xB3, 0x07, 0x1D, 0x0F, 0xF8, 0xAF, 0x24,  // .......$
                            /* 01E0 */  0x0F, 0x1B, 0x9E, 0xBE, 0xE7, 0x6B, 0x82, 0x91,  // .....k..
                            /* 01E8 */  0x07, 0x8E, 0x1E, 0x88, 0xA1, 0x9F, 0x38, 0x0E,  // ......8.
                            /* 01F0 */  0xE3, 0x34, 0x7C, 0x09, 0xF1, 0x39, 0xE0, 0xFF,  // .4|..9..
                            /* 01F8 */  0x1F, 0x24, 0xC6, 0x31, 0x79, 0x70, 0x3C, 0xD8,  // .$.1yp<.
                            /* 0200 */  0xC8, 0xE9, 0x51, 0xC5, 0x47, 0x0A, 0x7E, 0xBE,  // ..Q.G.~.
                            /* 0208 */  0xF0, 0x91, 0x82, 0x5D, 0x10, 0x9E, 0x1C, 0x0C,  // ...]....
                            /* 0210 */  0x71, 0x38, 0x67, 0xE5, 0x13, 0x85, 0x0F, 0x2A,  // q8g....*
                            /* 0218 */  0xB8, 0x13, 0x05, 0x5C, 0x85, 0xE8, 0xE4, 0x36,  // ...\...6
                            /* 0220 */  0x61, 0xB4, 0x67, 0x81, 0xC7, 0x09, 0x98, 0x07,  // a.g.....
                            /* 0228 */  0x01, 0xF0, 0x8D, 0xDF, 0x07, 0x19, 0xB0, 0x4D,  // .......M
                            /* 0230 */  0x09, 0x3B, 0x24, 0x78, 0x47, 0x19, 0xE0, 0x71,  // .;$xG..q
                            /* 0238 */  0x32, 0xC1, 0x1D, 0x27, 0x3C, 0x04, 0x3E, 0x80,  // 2..'<.>.
                            /* 0240 */  0x87, 0x90, 0x93, 0xB4, 0xD2, 0xA9, 0x21, 0xCF,  // ......!.
                            /* 0248 */  0x3C, 0x60, 0x1B, 0x06, 0x57, 0x68, 0xD3, 0xA7,  // <`..Wh..
                            /* 0250 */  0x46, 0xA3, 0x56, 0x0D, 0xCA, 0xD4, 0x28, 0xD3,  // F.V...(.
                            /* 0258 */  0xA0, 0x56, 0x9F, 0x4A, 0x8D, 0x19, 0xFB, 0xE1,  // .V.J....
                            /* 0260 */  0x58, 0xDC, 0xBB, 0x40, 0x07, 0x03, 0x0B, 0x7B,  // X..@...{
                            /* 0268 */  0x21, 0xE8, 0x88, 0xE0, 0x58, 0x20, 0x34, 0x08,  // !...X 4.
                            /* 0270 */  0x9D, 0x40, 0xFC, 0xFF, 0x07                     // .@...
                        })
                    }
                }

                Device (HPET)
                {
                    Name (_HID, EisaId ("PNP0103") /* HPET System Timer */)  // _HID: Hardware ID
                    Name (CRS, ResourceTemplate ()
                    {
                        IRQNoFlags ()
                            {0}
                        IRQNoFlags ()
                            {8}
                        Memory32Fixed (ReadOnly,
                            0xFED00000,         // Address Base
                            0x00000400,         // Address Length
                            )
                    })
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If (((^^^SMB.HPAD & 0x40) == 0x40))
                        {
                            If ((OSTB >= 0x12))
                            {
                                Return (0x0F)
                            }

                            ^^^SMB.HPAD = (^^^SMB.HPAD & 0xFFFFFFBF)
                            Return (One)
                        }

                        Return (One)
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Return (CRS) /* \_SB_.PCI0.LPC0.HPET.CRS_ */
                    }
                }
            }

            Device (VGA)
            {
                Name (_ADR, 0x00010000)  // _ADR: Address
                Name (PXEN, 0x80000000)
                Name (PXID, 0x00020000)
                Name (PXMX, 0x80000000)
                Name (LCDT, 0x80000000)
                Name (DSCT, 0x80000000)
                Name (PXFX, 0x80000000)
                Name (PXDY, 0x80000000)
                Name (AF7E, 0x80000001)
                OperationRegion (GPUM, PCI_Config, 0x24, 0x04)
                Field (GPUM, DWordAcc, NoLock, Preserve)
                {
                    GPUB,   32
                }

                Method (GSBA, 0, NotSerialized)
                {
                    Local0 = GPUB /* \_SB_.PCI0.VGA_.GPUB */
                    Local0 &= 0xFFFFFF00
                    Local0 += 0x172C
                    Return (Local0)
                }

                OperationRegion (SCRA, SystemMemory, GSBA (), 0x04)
                Field (SCRA, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x01), 
                    BRIL,   8
                }

                Name (BLVL, Buffer (0x10)
                {
                    /* 0000 */  0x00, 0x20, 0x30, 0x40, 0x50, 0x58, 0x60, 0x70,  // . 0@PX`p
                    /* 0008 */  0x80, 0x90, 0xA0, 0xB0, 0xC0, 0xD0, 0xE0, 0xFF   // ........
                })
                Name (DOSP, 0x00)
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Return (0x0F)
                }

                Method (_DOS, 1, NotSerialized)  // _DOS: Disable Output Switching
                {
                    DOSP = Arg0
                }

                Method (_DOD, 0, NotSerialized)  // _DOD: Display Output Devices
                {
                    Return (Package (0x05)
                    {
                        0x00010100, 
                        0x00010110, 
                        0x0200, 
                        0x00010210, 
                        0x00010220
                    })
                }

                Device (LCD)
                {
                    Method (_ADR, 0, NotSerialized)  // _ADR: Address
                    {
                        Return (0x0110)
                    }

                    Method (_BCL, 0, NotSerialized)  // _BCL: Brightness Control Levels
                    {
                        If ((AF7E == 0x80000001))
                        {
                            Return (Package (0x11)
                            {
                                0x52, 
                                0x22, 
                                0x02, 
                                0x08, 
                                0x0E, 
                                0x16, 
                                0x1C, 
                                0x22, 
                                0x2A, 
                                0x30, 
                                0x36, 
                                0x3E, 
                                0x44, 
                                0x4B, 
                                0x52, 
                                0x58, 
                                0x64
                            })
                        }
                        Else
                        {
                            Return (Package (0x35)
                            {
                                0x5A, 
                                0x3C, 
                                0x00, 
                                0x02, 
                                0x04, 
                                0x06, 
                                0x08, 
                                0x0A, 
                                0x0C, 
                                0x0E, 
                                0x10, 
                                0x12, 
                                0x14, 
                                0x16, 
                                0x18, 
                                0x1A, 
                                0x1C, 
                                0x1E, 
                                0x20, 
                                0x22, 
                                0x24, 
                                0x26, 
                                0x28, 
                                0x2A, 
                                0x2C, 
                                0x2E, 
                                0x30, 
                                0x32, 
                                0x34, 
                                0x36, 
                                0x38, 
                                0x3A, 
                                0x3C, 
                                0x3E, 
                                0x40, 
                                0x42, 
                                0x44, 
                                0x46, 
                                0x48, 
                                0x4A, 
                                0x4C, 
                                0x4E, 
                                0x50, 
                                0x52, 
                                0x54, 
                                0x56, 
                                0x58, 
                                0x5A, 
                                0x5C, 
                                0x5E, 
                                0x60, 
                                0x62, 
                                0x64
                            })
                        }
                    }

                    Method (_BCM, 1, NotSerialized)  // _BCM: Brightness Control Method
                    {
                        If ((AF7E == 0x80000001))
                        {
                            Divide (((Arg0 * 0x03) + 0x13), 0x14, Local1, Local0)
                            Local3 = DerefOf (BLVL [Local0])
                            AFN7 (Local3)
                        }
                    }
                }
            }
        }

        Method (SDRT, 0, NotSerialized)
        {
        }
    }

    Scope (\)
    {
        Name (HPDT, Package (0x09)
        {
            "LEGACYHP", 
            0x80000000, 
            0x80000000, 
            "NATIVEHP", 
            0x80000000, 
            0x80000000, 
            "THERMALX", 
            0x80000000, 
            0x80000000
        })
        Name (DDB0, 0x00)
        Name (DDB1, 0x00)
        Name (DDB2, 0x00)
    }

    Scope (_GPE)
    {
        Method (_L1C, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
        }

        Method (_L08, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Notify (\_SB.PCI0.GPP0, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP1, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP2, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP3, 0x02) // Device Wake
            Notify (\_SB.PCI0.GFX0, 0x02) // Device Wake
        }

        Method (_L18, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Notify (\_SB.PCI0.EHC1, 0x02) // Device Wake
        }

        Method (_L19, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Notify (\_SB.PCI0.XHC0, 0x02) // Device Wake
        }

        Method (_L0A, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            P80H = 0xD000
             = 0x0A = ~M029 /* External reference */
            \_SB.PCI0.SMB.E10C
            If ((\_SB.PCI0.SMB.E10C == Zero))
            {
                P80H = 0xD001
            }
            Else
            {
                P80H = 0xD002
            }
        }
    }

    Scope (_SB.PCI0.SMB)
    {
        Mutex (SBX0, 0x00)
        OperationRegion (SMB0, SystemIO, 0x0B00, 0x10)
        Field (SMB0, ByteAcc, NoLock, Preserve)
        {
            HST0,   8, 
            SLV0,   8, 
            CNT0,   8, 
            CMD0,   8, 
            ADD0,   8, 
            DT00,   8, 
            DT10,   8, 
            BLK0,   8
        }

        Method (WBD0, 1, NotSerialized)
        {
            Local0 = Arg0
            Local2 = 0x00
            Local3 = HST0 /* \_SB_.PCI0.SMB_.HST0 */
            Local1 = (Local3 & 0x80)
            While ((Local1 != 0x80))
            {
                If ((Local0 < 0x0A))
                {
                    Local2 = 0x18
                    Local1 = 0x00
                }
                Else
                {
                    Sleep (0x0A)
                    Local0 -= 0x0A
                    Local3 = HST0 /* \_SB_.PCI0.SMB_.HST0 */
                    Local1 = (Local3 & 0x80)
                }
            }

            If ((Local2 != 0x18))
            {
                Local1 = (HST0 & 0x1C)
                If (Local1)
                {
                    Local2 = 0x07
                }
            }

            Return (Local2)
        }

        Method (WTC0, 1, NotSerialized)
        {
            Local0 = Arg0
            Local2 = 0x07
            Local1 = 0x01
            While ((Local1 == 0x01))
            {
                Local3 = (HST0 & 0x1D)
                If ((Local3 != 0x00))
                {
                    If ((Local3 == 0x01))
                    {
                        If ((Local0 < 0x0A))
                        {
                            Local2 = 0x18
                            Local1 = 0x00
                        }
                        Else
                        {
                            Sleep (0x0A)
                            Local0 -= 0x0A
                        }
                    }
                    Else
                    {
                        Local2 = 0x07
                        Local1 = 0x00
                    }
                }
                Else
                {
                    Local2 = 0x00
                    Local1 = 0x00
                }
            }

            HST0 = (HST0 | 0x1F)
            Return (Local2)
        }

        Method (SBR0, 3, NotSerialized)
        {
            Local0 = Package (0x22)
                {
                    0x07, 
                    0x00, 
                    0x00
                }
            Local4 = (Arg0 & 0x5F)
            If ((Local4 != 0x03))
            {
                If ((Local4 != 0x05))
                {
                    If ((Local4 != 0x07))
                    {
                        If ((Local4 != 0x09))
                        {
                            If ((Local4 != 0x0B))
                            {
                                Local0 [0x00] = 0x19
                                Return (Local0)
                            }
                        }
                    }
                }
            }

            If ((Acquire (SBX0, 0xFFFF) == 0x00))
            {
                ADD0 = ((Arg1 << 0x01) | 0x01)
                CMD0 = Arg2
                HST0 = (HST0 | 0x1F)
                Local1 = (Arg0 & 0xA0)
                CNT0 = ((CNT0 & 0x5F) | Local1)
                If ((Local4 == 0x03))
                {
                    CNT0 = ((CNT0 & 0xA0) | 0x40)
                }

                If ((Local4 == 0x05))
                {
                    CNT0 = ((CNT0 & 0xA0) | 0x44)
                }

                If ((Local4 == 0x07))
                {
                    CNT0 = ((CNT0 & 0xA0) | 0x48)
                }

                If ((Local4 == 0x09))
                {
                    CNT0 = ((CNT0 & 0xA0) | 0x4C)
                }

                If ((Local4 == 0x0B))
                {
                    HST0 = (HST0 | 0x80)
                    DT00 = 0x00
                    CNT0 = ((CNT0 & 0xA0) | 0x54)
                }

                Local1 = WTC0 (0x03E8)
                Local0 [0x00] = Local1
                If ((Local1 == 0x00))
                {
                    If ((Local4 == 0x05))
                    {
                        Local0 [0x01] = 0x01
                        Local0 [0x02] = DT00 /* \_SB_.PCI0.SMB_.DT00 */
                    }

                    If ((Local4 == 0x07))
                    {
                        Local0 [0x01] = 0x01
                        Local0 [0x02] = DT00 /* \_SB_.PCI0.SMB_.DT00 */
                    }

                    If ((Local4 == 0x09))
                    {
                        Local0 [0x01] = 0x02
                        Local2 = DT10 /* \_SB_.PCI0.SMB_.DT10 */
                        Local2 <<= 0x08
                        Local2 += DT00 /* \_SB_.PCI0.SMB_.DT00 */
                        Local0 [0x02] = Local2
                    }

                    If ((Local4 == 0x0B))
                    {
                        Local1 = WBD0 (0x01F4)
                        If ((Local1 != 0x00))
                        {
                            Local0 [0x00] = Local1
                        }
                        Else
                        {
                            Local0 [0x01] = DT00 /* \_SB_.PCI0.SMB_.DT00 */
                            Local1 = DT00 /* \_SB_.PCI0.SMB_.DT00 */
                            Local2 = CNT0 /* \_SB_.PCI0.SMB_.CNT0 */
                            Local2 = 0x00
                            While ((Local2 < Local1))
                            {
                                Local3 = (0x02 + Local2)
                                Local0 [Local3] = BLK0 /* \_SB_.PCI0.SMB_.BLK0 */
                                Local2 += 0x01
                            }

                            HST0 = (HST0 | 0x80)
                        }
                    }
                }

                CNT0 = (CNT0 & 0x5F)
                Release (SBX0)
            }

            Return (Local0)
        }

        Method (SBW0, 5, NotSerialized)
        {
            Local0 = Package (0x01)
                {
                    0x07
                }
            Local4 = (Arg0 & 0x5F)
            If ((Local4 != 0x02))
            {
                If ((Local4 != 0x04))
                {
                    If ((Local4 != 0x06))
                    {
                        If ((Local4 != 0x08))
                        {
                            If ((Local4 != 0x0A))
                            {
                                Local0 [0x00] = 0x19
                                Return (Local0)
                            }
                        }
                    }
                }
            }

            If ((Acquire (SBX0, 0xFFFF) == 0x00))
            {
                ADD0 = (Arg1 << 0x01)
                CMD0 = Arg2
                HST0 = (HST0 | 0x1F)
                Local1 = (Arg0 & 0xA0)
                CNT0 = ((CNT0 & 0x5F) | Local1)
                If ((Local4 == 0x02))
                {
                    CNT0 = ((CNT0 & 0xA0) | 0x40)
                }

                If ((Local4 == 0x04))
                {
                    CNT0 = ((CNT0 & 0xA0) | 0x44)
                }

                If ((Local4 == 0x06))
                {
                    DT00 = Arg4
                    CNT0 = ((CNT0 & 0xA0) | 0x48)
                }

                If ((Local4 == 0x08))
                {
                    DT00 = (Arg4 & 0xFF)
                    DT10 = (Arg4 >> 0x08)
                    CNT0 = ((CNT0 & 0xA0) | 0x4C)
                }

                If ((Local4 == 0x0A))
                {
                    HST0 = (HST0 | 0x80)
                    Local1 = CNT0 /* \_SB_.PCI0.SMB_.CNT0 */
                    DT00 = Arg3
                    Local2 = 0x00
                    While ((Local2 < Arg3))
                    {
                        BLK0 = Arg4 [Local2]
                        Local2 += 0x01
                    }

                    CNT0 = ((CNT0 & 0xA0) | 0x54)
                }

                Local0 [0x00] = WTC0 (0x03E8)
                CNT0 = (CNT0 & 0x5F)
                Release (SBX0)
            }

            Return (Local0)
        }
    }

    OperationRegion (SMIC, SystemMemory, 0xFED80000, 0x00080000)
    Field (SMIC, ByteAcc, NoLock, Preserve)
    {
        Offset (0x296), 
        STMR,   15, 
        TMRE,   1, 
            ,   29, 
        TMRS,   1, 
        Offset (0x36A), 
        SMIB,   8, 
        Offset (0x3DA), 
            ,   4, 
        RFCS,   2, 
        Offset (0x3DC), 
            ,   30, 
        SM30,   1, 
        Offset (0x3EE), 
        U3PS,   2, 
        Offset (0xE28), 
            ,   29, 
        SARP,   1, 
        U2RP,   1, 
        U3RP,   1, 
        Offset (0x1518), 
            ,   22, 
        G06D,   1, 
        G06E,   1, 
        Offset (0x152C), 
            ,   22, 
        G0BD,   1, 
        G0BE,   1, 
        Offset (0x1564), 
        Offset (0x1566), 
        G19S,   1, 
            ,   5, 
        G19D,   1, 
        G19E,   1, 
        Offset (0x1C00), 
        XH0E,   1, 
            ,   6, 
        U3PY,   1, 
            ,   7, 
        UD3P,   1, 
        U3PR,   1, 
            ,   11, 
        FWLM,   1, 
        FPLS,   1, 
        FPLC,   1, 
        Offset (0x1C04), 
        UA04,   16, 
            ,   15, 
        ROAM,   1, 
        UA08,   32, 
        Offset (0x1E4A), 
        I0TD,   2, 
            ,   1, 
        I0PD,   1, 
        Offset (0x1E4B), 
        I0DS,   3, 
        Offset (0x1E4C), 
        I1TD,   2, 
            ,   1, 
        I1PD,   1, 
        Offset (0x1E4D), 
        I1DS,   3, 
        Offset (0x1E4E), 
        I2TD,   2, 
            ,   1, 
        I2PD,   1, 
        Offset (0x1E4F), 
        I2DS,   3, 
        Offset (0x1E50), 
        I3TD,   2, 
            ,   1, 
        I3PD,   1, 
        Offset (0x1E51), 
        I3DS,   3, 
        Offset (0x1E56), 
        U0TD,   2, 
            ,   1, 
        U0PD,   1, 
        Offset (0x1E57), 
        U0DS,   3, 
        Offset (0x1E58), 
        U1TD,   2, 
            ,   1, 
        U1PD,   1, 
        Offset (0x1E59), 
        U1DS,   3, 
        Offset (0x1E5E), 
        SATD,   2, 
            ,   1, 
        SAPD,   1, 
        Offset (0x1E5F), 
        SADS,   3, 
        Offset (0x1E64), 
        U2TD,   2, 
            ,   1, 
        U2PD,   1, 
        Offset (0x1E65), 
        U2DS,   3, 
        Offset (0x1E6E), 
        U3TD,   2, 
            ,   1, 
        U3PD,   1, 
        Offset (0x1E6F), 
        U3DS,   3, 
        Offset (0x1E70), 
        SDTD,   2, 
            ,   1, 
        SDPD,   1, 
            ,   2, 
        SDRT,   1, 
        SDSC,   1, 
        SDDS,   3, 
        Offset (0x1E80), 
            ,   15, 
        RQ15,   1, 
            ,   2, 
        RQ18,   1, 
            ,   4, 
        RQ23,   1, 
        RQ24,   1, 
            ,   5, 
        RQTY,   1, 
        Offset (0x1E84), 
            ,   15, 
        SASR,   1, 
            ,   2, 
        U2SR,   1, 
            ,   4, 
        U3SR,   1, 
        SDSR,   1, 
        Offset (0x1E88), 
        SRSA,   32, 
        SRSD,   32, 
        Offset (0x1E94), 
        SRDY,   1, 
        Offset (0x1EA0), 
        PG1A,   1, 
        PG2,    1, 
            ,   1, 
        U3PG,   1, 
        Offset (0x1EA3), 
        PGA3,   8, 
        Offset (0x40010), 
            ,   1, 
        CCGE,   1, 
        Offset (0x40030), 
            ,   1, 
        HCGE,   1
    }

    Mutex (FDAS, 0x00)
    Method (FDDC, 2, Serialized)
    {
        Acquire (FDAS, 0xFFFF)
        If (PCEF)
        {
            Local0 = 0xD0
            If ((Arg1 == 0x03))
            {
                Local0 += 0x03
            }

            Local0 <<= 0x08
            Local0 += Arg0
            P80H = Local0
        }

        If ((Arg1 == 0x00))
        {
            Switch (ToInteger (Arg0))
            {
                Case (Package (0x03)
                    {
                        0x05, 
                        0x0F, 
                        0x18
                    }

)
                {
                    PG1A = One
                }
                Case (Package (0x06)
                    {
                        0x06, 
                        0x07, 
                        0x08, 
                        0x0B, 
                        0x0C, 
                        0x12
                    }

)
                {
                    PG2 = One
                }
                Case (Package (0x0A)
                    {
                        0x05, 
                        0x0F, 
                        0x18, 
                        0x06, 
                        0x07, 
                        0x08, 
                        0x0B, 
                        0x0C, 
                        0x12, 
                        0x17
                    }

)
                {
                    SRDY = Zero
                }

            }

            Switch (ToInteger (Arg0))
            {
                Case (0x05)
                {
                    I0TD = 0x00
                    I0PD = One
                    Local0 = I0DS /* \I0DS */
                    While ((Local0 != 0x07))
                    {
                        Local0 = I0DS /* \I0DS */
                    }
                }
                Case (0x06)
                {
                    I1TD = 0x00
                    I1PD = One
                    Local0 = I1DS /* \I1DS */
                    While ((Local0 != 0x07))
                    {
                        Local0 = I1DS /* \I1DS */
                    }
                }
                Case (0x07)
                {
                    I2TD = 0x00
                    I2PD = One
                    Local0 = I2DS /* \I2DS */
                    While ((Local0 != 0x07))
                    {
                        Local0 = I2DS /* \I2DS */
                    }
                }
                Case (0x08)
                {
                    I3TD = 0x00
                    I3PD = One
                    Local0 = I3DS /* \I3DS */
                    While ((Local0 != 0x07))
                    {
                        Local0 = I3DS /* \I3DS */
                    }
                }
                Case (0x0B)
                {
                    U0TD = 0x00
                    U0PD = One
                    Local0 = U0DS /* \U0DS */
                    While ((Local0 != 0x07))
                    {
                        Local0 = U0DS /* \U0DS */
                    }
                }
                Case (0x0C)
                {
                    U1TD = 0x00
                    U1PD = One
                    Local0 = U1DS /* \U1DS */
                    While ((Local0 != 0x07))
                    {
                        Local0 = U1DS /* \U1DS */
                    }
                }
                Case (0x0F)
                {
                    STD0 ()
                }
                Case (0x12)
                {
                    U2D0 ()
                }
                Case (0x17)
                {
                    U3D0 ()
                }
                Case (0x18)
                {
                    SDD0 ()
                }

            }
        }
        Else
        {
            Switch (ToInteger (Arg0))
            {
                Case (0x05)
                {
                    I0PD = Zero
                    Local0 = I0DS /* \I0DS */
                    While ((Local0 != 0x00))
                    {
                        Local0 = I0DS /* \I0DS */
                    }

                    I0TD = 0x03
                }
                Case (0x06)
                {
                    I1PD = Zero
                    Local0 = I1DS /* \I1DS */
                    While ((Local0 != 0x00))
                    {
                        Local0 = I1DS /* \I1DS */
                    }

                    I1TD = 0x03
                }
                Case (0x07)
                {
                    I2PD = Zero
                    Local0 = I2DS /* \I2DS */
                    While ((Local0 != 0x00))
                    {
                        Local0 = I2DS /* \I2DS */
                    }

                    I2TD = 0x03
                }
                Case (0x08)
                {
                    I3PD = Zero
                    Local0 = I3DS /* \I3DS */
                    While ((Local0 != 0x00))
                    {
                        Local0 = I3DS /* \I3DS */
                    }

                    I3TD = 0x03
                }
                Case (0x0B)
                {
                    U0PD = Zero
                    Local0 = U0DS /* \U0DS */
                    While ((Local0 != 0x00))
                    {
                        Local0 = U0DS /* \U0DS */
                    }

                    U0TD = 0x03
                }
                Case (0x0C)
                {
                    U1PD = Zero
                    Local0 = U1DS /* \U1DS */
                    While ((Local0 != 0x00))
                    {
                        Local0 = U1DS /* \U1DS */
                    }

                    U1TD = 0x03
                }
                Case (0x0F)
                {
                    STD3 ()
                }
                Case (0x12)
                {
                    U2D3 ()
                }
                Case (0x17)
                {
                    U3D3 ()
                }
                Case (0x18)
                {
                    SDD3 ()
                }

            }

            If ((I0TD == 0x03))
            {
                If ((SATD == 0x03))
                {
                    If ((SDTD == 0x03))
                    {
                        PG1A = Zero
                    }
                }
            }

            If ((I1TD == 0x03))
            {
                If ((I2TD == 0x03))
                {
                    If ((I3TD == 0x03))
                    {
                        If ((U0TD == 0x03))
                        {
                            If ((U1TD == 0x03))
                            {
                                If ((U2TD == 0x03))
                                {
                                    PG2 = Zero
                                }
                            }
                        }
                    }
                }
            }

            If ((PG1A == 0x00))
            {
                If ((PG2 == 0x00))
                {
                    If ((U3PG == 0x00))
                    {
                        If ((S03D == 0x01))
                        {
                            SRDY = One
                        }
                    }
                }
            }
        }

        Release (FDAS)
    }

    Method (FPTS, 0, Serialized)
    {
        If ((U_PS != 0x03))
        {
            IO80 = 0x8C
            BreakPoint
        }

        If ((E_PS != 0x03))
        {
            IO80 = 0x8D
            BreakPoint
        }

        If ((XHCD == Zero))
        {
            If ((XHCE == One))
            {
                If ((U3TD != 0x03))
                {
                    FDDC (0x17, 0x03)
                }
            }
        }

        If ((EHCD == Zero))
        {
            If ((U2TD != 0x03))
            {
                FDDC (0x12, 0x03)
            }
        }

        If ((ST_D == One))
        {
            If ((SATD != 0x00))
            {
                FDDC (0x0F, 0x00)
            }
        }
    }

    Method (FWAK, 0, Serialized)
    {
        If ((XHCD == Zero))
        {
            If ((XHCE == One))
            {
                If ((U3TD == 0x03))
                {
                    FDDC (0x17, 0x00)
                }
            }
        }

        If ((EHCD == Zero))
        {
            If ((U2TD == 0x03))
            {
                FDDC (0x12, 0x00)
            }
        }

        If ((UT0E == Zero))
        {
            If ((U0TD != 0x03))
            {
                FDDC (0x0B, 0x03)
            }
        }

        If ((UT1E == Zero))
        {
            If ((U1TD != 0x03))
            {
                FDDC (0x0C, 0x03)
            }
        }

        If ((IC0E == Zero))
        {
            If ((I0TD != 0x03))
            {
                FDDC (0x05, 0x03)
            }
        }

        If ((IC1E == Zero))
        {
            If ((I1TD != 0x03))
            {
                FDDC (0x06, 0x03)
            }
        }

        If ((IC2E == Zero))
        {
            If ((I2TD != 0x03))
            {
                FDDC (0x07, 0x03)
            }
        }

        If ((IC3E == Zero))
        {
            If ((I3TD != 0x03))
            {
                FDDC (0x08, 0x03)
            }
        }
    }

    Method (PWGC, 2, Serialized)
    {
        Local0 = (PGA3 & 0xDF)
        If (Arg1)
        {
            Local0 |= Arg0
        }
        Else
        {
            Local1 = ~Arg0
            Local0 &= Local1
        }

        PGA3 = Local0
        If ((Arg0 == 0x20))
        {
            Local0 = PGA3 /* \PGA3 */
            Local0 &= Arg0
            While (!Local0)
            {
                Local0 = PGA3 /* \PGA3 */
                Local0 &= Arg0
            }
        }
    }

    Method (SDD3, 0, Serialized)
    {
        SDSP ()
        SDSC = Zero
        RQTY = Zero
        RQ24 = One
        Local0 = SDSR /* \SDSR */
        While (Local0)
        {
            Local0 = SDSR /* \SDSR */
        }

        SDPD = Zero
        Local0 = SDDS /* \SDDS */
        While ((Local0 != Zero))
        {
            Local0 = SDDS /* \SDDS */
        }

        SDTD = 0x03
        If ((ESPI == Zero))
        {
            LDQ0 = One
        }
    }

    Method (SDD0, 0, Serialized)
    {
        SDPD = One
        Local0 = SDDS /* \SDDS */
        While ((Local0 != 0x07))
        {
            Local0 = SDDS /* \SDDS */
        }

        SRAD (0x18, 0xC8)
        SDTD = 0x00
        RQTY = One
        RQ24 = One
        Local0 = SDSR /* \SDSR */
        While (!Local0)
        {
            Local0 = SDSR /* \SDSR */
        }

        SD2C = SDID /* \SDID */
        SDRP ()
        LDQ0 = SNHG /* \SNHG */
        FC18 = SF18 /* \SF18 */
        If ((SDB3 == 0x01))
        {
            Sleep (0xF0)
        }

        If ((SDB3 == 0x02))
        {
            Sleep (0x1E)
        }
    }

    Method (STD3, 0, Serialized)
    {
        ST_S ()
        Local0 = (SDS0 << 0x02)
        Local0 += 0xFED81500
        Local1 = (SDS1 << 0x02)
        Local1 += 0xFED81500
        OperationRegion (SDSA, SystemMemory, Local0, 0x04)
        Field (SDSA, ByteAcc, NoLock, Preserve)
        {
                ,   22, 
            GP0D,   1, 
            GP0E,   1
        }

        OperationRegion (SDSB, SystemMemory, Local1, 0x04)
        Field (SDSB, ByteAcc, NoLock, Preserve)
        {
                ,   22, 
            GP1D,   1, 
            GP1E,   1
        }

        RQTY = Zero
        RQ15 = One
        Local0 = SASR /* \SASR */
        While (Local0)
        {
            Local0 = SASR /* \SASR */
        }

        PWGC (0x10, 0x01)
        SM30 = One
        If (SDS0)
        {
            GP0E = One
            GP0D = Zero
        }

        SAPD = Zero
        Local0 = SADS /* \SADS */
        While ((Local0 != Zero))
        {
            Local0 = SADS /* \SADS */
        }

        SATD = 0x03
        SARP = One
    }

    Method (STD0, 0, Serialized)
    {
        Local0 = (SDS0 << 0x02)
        Local0 += 0xFED81500
        Local1 = (SDS1 << 0x02)
        Local1 += 0xFED81500
        OperationRegion (SDSA, SystemMemory, Local0, 0x04)
        Field (SDSA, ByteAcc, NoLock, Preserve)
        {
                ,   22, 
            GP0D,   1, 
            GP0E,   1
        }

        OperationRegion (SDSB, SystemMemory, Local1, 0x04)
        Field (SDSB, ByteAcc, NoLock, Preserve)
        {
                ,   22, 
            GP1D,   1, 
            GP1E,   1
        }

        SARP = Zero
        SATD = 0x00
        SAPD = One
        Local0 = SADS /* \SADS */
        While ((Local0 != 0x07))
        {
            Local0 = SADS /* \SADS */
        }

        Stall (0x78)
        PWGC (0x10, 0x00)
        SM30 = Zero
        DSDN = Zero
        ST_R ()
        If ((RFCS == 0x01))
        {
            ST84 = Zero
            Stall (0x78)
            ST84 = One
        }

        If (SDS0)
        {
            GP0E = One
            GP0D = One
        }

        RQTY = One
        RQ15 = One
        Local0 = SASR /* \SASR */
        While (!Local0)
        {
            Local0 = SASR /* \SASR */
        }

        ST44 = 0x01
        If (CZFG)
        {
            DDIC = 0x01
            Stall (0x64)
            DDIC = 0x00
        }
    }

    Method (SU2P, 0, Serialized)
    {
        PWGC (0x40, 0x00)
        U2RP = One
    }

    Method (U2D3, 0, Serialized)
    {
        If ((E_PS == 0x03))
        {
            RQTY = Zero
            RQ18 = One
            Local0 = U2SR /* \U2SR */
            While (Local0)
            {
                Local0 = U2SR /* \U2SR */
            }

            U2PD = Zero
            Local0 = U2DS /* \U2DS */
            While ((Local0 != Zero))
            {
                Local0 = U2DS /* \U2DS */
            }

            U2TD = 0x03
            If ((U3TD == 0x03))
            {
                SU2P ()
            }
        }
    }

    Method (U2D0, 0, Serialized)
    {
        PWGC (0x40, 0x01)
        U2RP = Zero
        U2TD = 0x00
        U2TD = Zero
        U2PD = One
        Local0 = U2DS /* \U2DS */
        While ((Local0 != 0x07))
        {
            Local0 = U2DS /* \U2DS */
        }

        RQTY = One
        RQ18 = One
        Local0 = U2SR /* \U2SR */
        While (!Local0)
        {
            Local0 = U2SR /* \U2SR */
        }

        EH2C = EHID /* \EHID */
        EHBA = EH10 /* \EH10 */
        EHME = One
        ESIM = SSIM /* \SSIM */
        EH54 = ES54 /* \ES54 */
        EH64 = ES64 /* \ES64 */
    }

    Method (LXFW, 3, Serialized)
    {
        FWLM = One
        ROAM = Arg0
        UA04 = Arg1
        UA08 = Arg2
        FPLS = One
        Local0 = FPLC /* \FPLC */
        While (!Local0)
        {
            Local0 = FPLC /* \FPLC */
        }

        FPLS = Zero
    }

    Method (X1_S, 0, Serialized)
    {
        RQTY = Zero
        RQ23 = One
        Local0 = U3SR /* \U3SR */
        While (Local0)
        {
            Local0 = U3SR /* \U3SR */
        }
    }

    Method (X1_R, 0, Serialized)
    {
        RQTY = One
        RQ23 = One
        Local0 = U3SR /* \U3SR */
        While (!Local0)
        {
            Local0 = U3SR /* \U3SR */
        }
    }

    Method (U33H, 0, Serialized)
    {
        PWGC (0x20, 0x01)
        UD3P = One
        U3PD = Zero
        Local0 = U3DS /* \U3DS */
        While ((Local0 != Zero))
        {
            Local0 = U3DS /* \U3DS */
        }

        U3TD = 0x03
        U3RP = One
        If ((U2TD == 0x03))
        {
            SU2P ()
        }

        U3PG = Zero
        U3PS = One
    }

    Method (U3D3, 0, Serialized)
    {
        If ((U_PS == 0x03))
        {
            X0_S ()
            SMIW = 0x67
        }
    }

    Method (U30H, 0, Serialized)
    {
        U3PS = Zero
        U3PG = One
        U2RP = Zero
        U3RP = Zero
        PWGC (0x40, 0x01)
        U3TD = Zero
        U3PD = One
        Local0 = U3DS /* \U3DS */
        While ((Local0 != 0x07))
        {
            Local0 = U3DS /* \U3DS */
        }

        Local0 = U3PY /* \U3PY */
        While ((Local0 != 0x01))
        {
            Local0 = U3PY /* \U3PY */
        }

        U3PR = Zero
    }

    Method (U3D0, 0, Serialized)
    {
        SMIW = 0x66
        Local0 = AUSS /* \AUSS */
        If ((Local0 != 0x01))
        {
            AUSS = One
        }

        Local0 = AUSS /* \AUSS */
        While ((Local0 != 0x01))
        {
            Local0 = AUSS /* \AUSS */
        }

        LXFW (0x01, FW00, FW01)
        LXFW (0x00, FW02, FW03)
        X0_R ()
        U3PR = One
        UD3P = Zero
        U3TD = 0x01
    }

    OperationRegion (SSMI, SystemIO, SMIB, 0x02)
    Field (SSMI, AnyAcc, NoLock, Preserve)
    {
        SMIW,   16
    }

    OperationRegion (ECMC, SystemIO, 0x72, 0x02)
    Field (ECMC, AnyAcc, NoLock, Preserve)
    {
        ECMI,   8, 
        ECMD,   8
    }

    IndexField (ECMI, ECMD, ByteAcc, NoLock, Preserve)
    {
        Offset (0x08), 
        FRTB,   32
    }

    OperationRegion (FRTP, SystemMemory, FRTB, 0x0100)
    Field (FRTP, AnyAcc, NoLock, Preserve)
    {
        PEBA,   32, 
            ,   5, 
        IC0E,   1, 
        IC1E,   1, 
        IC2E,   1, 
        IC3E,   1, 
            ,   2, 
        UT0E,   1, 
        UT1E,   1, 
            ,   2, 
        ST_E,   1, 
            ,   2, 
        EHCE,   1, 
            ,   4, 
        XHCE,   1, 
        SD_E,   1, 
            ,   2, 
        ESPI,   1, 
        Offset (0x08), 
        PCEF,   1, 
            ,   4, 
        IC0D,   1, 
        IC1D,   1, 
        IC2D,   1, 
        IC3D,   1, 
            ,   2, 
        UT0D,   1, 
        UT1D,   1, 
            ,   2, 
        ST_D,   1, 
            ,   2, 
        EHCD,   1, 
            ,   4, 
        XHCD,   1, 
        SD_D,   1, 
            ,   6, 
        S03D,   1, 
        FW00,   16, 
        FW01,   32, 
        FW02,   16, 
        FW03,   32, 
        SDS0,   8, 
        SDS1,   8, 
        CZFG,   1, 
        Offset (0x20), 
        SD10,   32, 
        EH10,   32, 
        XH10,   32, 
        STBA,   32
    }

    Method (FINI, 0, NotSerialized)
    {
        XHCE = XH0E /* \XH0E */
        If ((SDBA != 0xFFFFFFFF))
        {
            SD10 = SDBA /* \SDBA */
        }

        If ((EHBA != 0xFFFFFFFF))
        {
            EH10 = EHBA /* \EHBA */
        }

        SDID = SD2C /* \SD2C */
        EHID = EH2C /* \EH2C */
        XHID = XH2C /* \XH2C */
        STID = ST2C /* \ST2C */
        SNHG = LDQ0 /* \LDQ0 */
        SF18 = FC18 /* \FC18 */
        SSIM = ESIM /* \ESIM */
        ES54 = EH54 /* \EH54 */
        ES64 = EH64 /* \EH64 */
        If ((TPOS >= 0x60)){}
        Else
        {
            S03D = Zero
            XHCD = Zero
            EHCD = Zero
            ST_D = Zero
            SD_D = Zero
        }

        If ((TPOS == 0x80))
        {
            S03D = Zero
            XHCD = Zero
            EHCD = Zero
            ST_D = Zero
            SD_D = Zero
        }

        If ((UT0E == Zero))
        {
            If ((U0TD != 0x03))
            {
                FDDC (0x0B, 0x03)
            }
        }

        If ((UT1E == Zero))
        {
            If ((U1TD != 0x03))
            {
                FDDC (0x0C, 0x03)
            }
        }

        If ((IC0E == Zero))
        {
            If ((I0TD != 0x03))
            {
                FDDC (0x05, 0x03)
            }
        }

        If ((IC1E == Zero))
        {
            If ((I1TD != 0x03))
            {
                FDDC (0x06, 0x03)
            }
        }

        If ((IC2E == Zero))
        {
            If ((I2TD != 0x03))
            {
                FDDC (0x07, 0x03)
            }
        }

        If ((IC3E == Zero))
        {
            If ((I3TD != 0x03))
            {
                FDDC (0x08, 0x03)
            }
        }
    }

    OperationRegion (FCFG, SystemMemory, PEBA, 0x01000000)
    Field (FCFG, DWordAcc, NoLock, Preserve)
    {
        Offset (0x80010), 
        XHBA,   32, 
        Offset (0x8002C), 
        XH2C,   32, 
        Offset (0x80048), 
        IDEX,   32, 
        DATA,   32, 
        Offset (0x80054), 
        U_PS,   2, 
        Offset (0x88010), 
        ST10,   32, 
        ST14,   32, 
        ST18,   32, 
        ST1C,   32, 
        ST20,   32, 
        ST24,   32, 
        Offset (0x8802C), 
        ST2C,   32, 
        Offset (0x88040), 
        ST40,   1, 
        Offset (0x88044), 
        ST44,   1, 
        Offset (0x8804C), 
            ,   2, 
        DDIC,   1, 
        Offset (0x88064), 
        S_PS,   2, 
        Offset (0x88084), 
            ,   1, 
        ST84,   1, 
            ,   28, 
        DSDN,   1, 
        Offset (0x8808C), 
        ST8C,   8, 
        Offset (0x90004), 
            ,   1, 
        EHME,   1, 
        Offset (0x90010), 
        EHBA,   32, 
        Offset (0x9002C), 
        EH2C,   32, 
        Offset (0x90054), 
        EH54,   8, 
        Offset (0x90064), 
        EH64,   8, 
        Offset (0x900C4), 
        E_PS,   2, 
        Offset (0xA3078), 
            ,   2, 
        LDQ0,   1, 
        Offset (0xA30CB), 
            ,   7, 
        AUSS,   1, 
        Offset (0xA7004), 
            ,   1, 
        SDME,   1, 
        Offset (0xA7010), 
        SDBA,   32, 
        Offset (0xA702C), 
        SD2C,   32, 
        Offset (0xA7094), 
        D_PS,   2, 
        Offset (0xA7095), 
        SDPE,   1, 
            ,   6, 
        PMES,   1, 
        Offset (0xA70B3), 
        SDB3,   8, 
        Offset (0xA70B5), 
        SETE,   1, 
        Offset (0xA70D0), 
            ,   17, 
        FC18,   1
    }

    OperationRegion (EHMC, SystemMemory, EH10, 0x0100)
    Field (EHMC, DWordAcc, NoLock, Preserve)
    {
        Offset (0xB0), 
            ,   5, 
        ESIM,   1
    }

    OperationRegion (SDMC, SystemMemory, SD10, 0x0100)
    Field (SDMC, AnyAcc, NoLock, Preserve)
    {
        Offset (0x24), 
            ,   6, 
        CDTC,   2, 
        Offset (0x27), 
        IRWE,   1, 
        ISWE,   1, 
        RMWE,   1
    }

    Method (SDFE, 0, Serialized)
    {
        CDTC = 0x02
        CDTC = 0x03
        CDTC = 0x00
        SETE = One
        PMES = One
        SETE = Zero
    }

    Method (SDRE, 0, Serialized)
    {
        CDTC = 0x03
        CDTC = 0x02
        CDTC = 0x00
        SETE = One
        PMES = One
        SETE = Zero
    }

    Method (SDSP, 0, Serialized)
    {
        SDME = One
        B600 = SDPE /* \SDPE */
        B601 = IRWE /* \IRWE */
        B602 = ISWE /* \ISWE */
        B603 = RMWE /* \RMWE */
        SDME = Zero
    }

    Method (SDRP, 0, Serialized)
    {
        If (SDFG)
        {
            If (G19S)
            {
                SDFE ()
            }
            Else
            {
                SDRE ()
            }

            SDFG = Zero
        }
    }

    Method (SRAD, 2, Serialized)
    {
        Local0 = (Arg0 << 0x01)
        Local0 += 0xFED81E40
        OperationRegion (ADCR, SystemMemory, Local0, 0x02)
        Field (ADCR, ByteAcc, NoLock, Preserve)
        {
            ADTD,   2, 
            ADPS,   1, 
            ADPD,   1, 
            ADSO,   1, 
            ADSC,   1, 
            ADSR,   1, 
            ADIS,   1, 
            ADDS,   3
        }

        ADIS = One
        ADSR = Zero
        Stall (Arg1)
        ADSR = One
        ADIS = Zero
        Stall (Arg1)
    }

    Name (SVBF, Buffer (0x1000)
    {
         0x00                                             // .
    })
    CreateDWordField (SVBF, 0x00, S000)
    CreateDWordField (SVBF, 0x04, S004)
    CreateDWordField (SVBF, 0x08, S008)
    CreateDWordField (SVBF, 0x0C, S00C)
    CreateDWordField (SVBF, 0x18, S018)
    CreateDWordField (SVBF, 0x1C, S01C)
    CreateDWordField (SVBF, 0x20, S020)
    CreateDWordField (SVBF, 0x30, S030)
    CreateDWordField (SVBF, 0x0118, S118)
    CreateDWordField (SVBF, 0x0158, S158)
    CreateDWordField (SVBF, 0x0198, S198)
    CreateDWordField (SVBF, 0x01D8, S1D8)
    CreateDWordField (SVBF, 0x0300, S300)
    CreateDWordField (SVBF, 0x0304, S304)
    CreateDWordField (SVBF, 0x0308, S308)
    CreateDWordField (SVBF, 0x030C, S30C)
    CreateDWordField (SVBF, 0x0310, S310)
    CreateDWordField (SVBF, 0x0428, S428)
    CreateDWordField (SVBF, 0x0438, S438)
    CreateDWordField (SVBF, 0x043C, S43C)
    CreateDWordField (SVBF, 0x0458, S458)
    CreateDWordField (SVBF, 0x0468, S468)
    CreateDWordField (SVBF, 0x046C, S46C)
    CreateDWordField (SVBF, 0x0470, S470)
    CreateDWordField (SVBF, 0x0480, S480)
    CreateDWordField (SVBF, 0x0484, S484)
    CreateDWordField (SVBF, 0x0488, S488)
    CreateDWordField (SVBF, 0x048C, S48C)
    CreateByteField (SVBF, 0x0600, B600)
    CreateByteField (SVBF, 0x0601, B601)
    CreateByteField (SVBF, 0x0602, B602)
    CreateByteField (SVBF, 0x0603, B603)
    CreateByteField (SVBF, 0x0700, SDFG)
    CreateByteField (SVBF, 0x0701, SNHG)
    CreateByteField (SVBF, 0x0702, SF18)
    CreateDWordField (SVBF, 0x0704, SDID)
    CreateDWordField (SVBF, 0x0730, EHID)
    CreateDWordField (SVBF, 0x0734, XHID)
    CreateDWordField (SVBF, 0x0738, STID)
    CreateByteField (SVBF, 0x0740, ES54)
    CreateByteField (SVBF, 0x0741, ES64)
    CreateDWordField (SVBF, 0x07B0, SSIM)
    CreateDWordField (SVBF, 0x0810, S810)
    CreateDWordField (SVBF, 0x0814, S814)
    CreateDWordField (SVBF, 0x0818, S818)
    CreateDWordField (SVBF, 0x081C, S81C)
    CreateDWordField (SVBF, 0x0820, S820)
    CreateDWordField (SVBF, 0x0824, S824)
    CreateDWordField (SVBF, 0x082C, S82C)
    CreateByteField (SVBF, 0x088C, S88C)
    Method (ST_S, 0, NotSerialized)
    {
        S810 = ST10 /* \ST10 */
        S814 = ST14 /* \ST14 */
        S818 = ST18 /* \ST18 */
        S81C = ST1C /* \ST1C */
        S820 = ST20 /* \ST20 */
        S824 = ST24 /* \ST24 */
        S88C = ST8C /* \ST8C */
    }

    Method (ST_R, 0, NotSerialized)
    {
        ST10 = S810 /* \S810 */
        ST14 = S814 /* \S814 */
        ST18 = S818 /* \S818 */
        ST1C = S81C /* \S81C */
        ST20 = S820 /* \S820 */
        ST24 = S824 /* \S824 */
        ST40 = One
        ST2C = STID /* \STID */
        ST40 = Zero
        ST8C = S88C /* \S88C */
    }

    Method (X0_S, 0, NotSerialized)
    {
        XHID = XH2C /* \XH2C */
        IDEX = 0x00
        S000 = DATA /* \DATA */
        IDEX = 0x04
        S004 = DATA /* \DATA */
        IDEX = 0x08
        S008 = DATA /* \DATA */
        IDEX = 0x0C
        S00C = DATA /* \DATA */
        IDEX = 0x18
        S018 = DATA /* \DATA */
        IDEX = 0x1C
        S01C = DATA /* \DATA */
        IDEX = 0x20
        S020 = DATA /* \DATA */
        IDEX = 0x30
        S030 = DATA /* \DATA */
        IDEX = 0x0118
        S118 = DATA /* \DATA */
        IDEX = 0x0158
        S158 = DATA /* \DATA */
        IDEX = 0x0198
        S198 = DATA /* \DATA */
        IDEX = 0x01D8
        S1D8 = DATA /* \DATA */
        IDEX = 0x0300
        S300 = DATA /* \DATA */
        IDEX = 0x0304
        S304 = DATA /* \DATA */
        IDEX = 0x0308
        S308 = DATA /* \DATA */
        IDEX = 0x030C
        S30C = DATA /* \DATA */
        IDEX = 0x0310
        S310 = DATA /* \DATA */
        IDEX = 0x40000028
        S428 = DATA /* \DATA */
        IDEX = 0x40000038
        S438 = DATA /* \DATA */
        IDEX = 0x4000003C
        S43C = DATA /* \DATA */
        IDEX = 0x40000058
        S458 = DATA /* \DATA */
        IDEX = 0x40000068
        S468 = DATA /* \DATA */
        IDEX = 0x4000006C
        S46C = DATA /* \DATA */
        IDEX = 0x40000070
        S470 = DATA /* \DATA */
        IDEX = 0x40000080
        S480 = DATA /* \DATA */
        IDEX = 0x40000084
        S484 = DATA /* \DATA */
        IDEX = 0x40000088
        S488 = DATA /* \DATA */
        IDEX = 0x4000008C
        S48C = DATA /* \DATA */
    }

    Method (X0_R, 0, NotSerialized)
    {
        XH2C = XHID /* \XHID */
        IDEX = 0x00
        DATA = S000 /* \S000 */
        IDEX = 0x04
        DATA = S004 /* \S004 */
        IDEX = 0x08
        DATA = S008 /* \S008 */
        IDEX = 0x0C
        DATA = S00C /* \S00C */
        IDEX = 0x18
        DATA = S018 /* \S018 */
        IDEX = 0x1C
        DATA = S01C /* \S01C */
        IDEX = 0x20
        DATA = S020 /* \S020 */
        IDEX = 0x30
        DATA = S030 /* \S030 */
        IDEX = 0x0118
        DATA = S118 /* \S118 */
        IDEX = 0x0158
        DATA = S158 /* \S158 */
        IDEX = 0x0198
        DATA = S198 /* \S198 */
        IDEX = 0x01D8
        DATA = S1D8 /* \S1D8 */
        IDEX = 0x0300
        DATA = S300 /* \S300 */
        IDEX = 0x0304
        DATA = S304 /* \S304 */
        IDEX = 0x0308
        DATA = S308 /* \S308 */
        IDEX = 0x030C
        DATA = S30C /* \S30C */
        IDEX = 0x0310
        DATA = S310 /* \S310 */
        IDEX = 0x40000028
        DATA = S428 /* \S428 */
        IDEX = 0x40000038
        DATA = S438 /* \S438 */
        IDEX = 0x4000003C
        DATA = S43C /* \S43C */
        IDEX = 0x40000058
        DATA = S458 /* \S458 */
        IDEX = 0x40000068
        DATA = S468 /* \S468 */
        IDEX = 0x4000006C
        DATA = S46C /* \S46C */
        IDEX = 0x40000070
        DATA = S470 /* \S470 */
        IDEX = 0x40000080
        DATA = S480 /* \S480 */
        IDEX = 0x40000084
        DATA = S484 /* \S484 */
        IDEX = 0x40000088
        DATA = S488 /* \S488 */
        IDEX = 0x4000008C
        DATA = S48C /* \S48C */
    }

    Scope (_SB)
    {
        Name (XHD0, 0x00)
        Name (XHD3, 0x00)
        PowerResource (P0U3, 0x00, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (XHD0) /* \_SB_.XHD0 */
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                XHD0 = 0x01
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                XHD0 = 0x00
            }
        }

        PowerResource (P3U3, 0x00, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (XHD3) /* \_SB_.XHD3 */
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                XHD3 = 0x01
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                XHD3 = 0x00
            }
        }

        Name (EHD0, 0x00)
        Name (EHD3, 0x00)
        PowerResource (P0U2, 0x00, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (EHD0) /* \_SB_.EHD0 */
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                EHD0 = 0x01
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                EHD0 = 0x00
            }
        }

        PowerResource (P3U2, 0x00, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (EHD3) /* \_SB_.EHD3 */
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                EHD3 = 0x01
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                EHD3 = 0x00
            }
        }

        Name (D0SD, 0x00)
        Name (D3SD, 0x00)
        PowerResource (P0SD, 0x00, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (D0SD) /* \_SB_.D0SD */
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                D0SD = 0x01
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                D0SD = 0x00
            }
        }

        PowerResource (P3SD, 0x00, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (D3SD) /* \_SB_.D3SD */
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                D3SD = 0x01
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                D3SD = 0x00
            }
        }

        Name (D0ST, 0x01)
        Name (D3ST, 0x01)
        PowerResource (P0ST, 0x00, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (D0ST) /* \_SB_.D0ST */
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                D0ST = 0x01
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                D0ST = 0x00
            }
        }

        PowerResource (P3ST, 0x00, 0x0000)
        {
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (D3ST) /* \_SB_.D3ST */
            }

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                D3ST = 0x01
            }

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                D3ST = 0x00
            }
        }
    }

    Scope (_SB.PCI0.XHC0)
    {
        Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
        {
            P0U3
        })
        Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
        {
            P3U3
        })
        Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
        {
            If ((XHCD == One))
            {
                Return (0x04)
            }
            Else
            {
                Return (0x00)
            }
        }

        Method (_S3W, 0, NotSerialized)  // _S3W: S3 Device Wake State
        {
            Return (0x04)
        }

        Method (_S4W, 0, NotSerialized)  // _S4W: S4 Device Wake State
        {
            Return (0x04)
        }

        Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
        {
            If ((XHCD == One))
            {
                If ((U3TD == 0x03))
                {
                    FDDC (0x17, 0x00)
                }
            }
        }

        Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
        {
            If ((XHCD == One))
            {
                If ((U3TD != 0x03))
                {
                    If ((U_PS == 0x03))
                    {
                        FDDC (0x17, 0x03)
                    }
                }
            }
        }
    }

    Scope (_SB.PCI0.EHC1)
    {
        Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
        {
            P0U2
        })
        Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
        {
            P3U2
        })
        Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
        {
            If ((EHCD == One))
            {
                Return (0x04)
            }
            Else
            {
                Return (0x00)
            }
        }

        Method (_S3W, 0, NotSerialized)  // _S3W: S3 Device Wake State
        {
            Return (0x04)
        }

        Method (_S4W, 0, NotSerialized)  // _S4W: S4 Device Wake State
        {
            Return (0x04)
        }

        Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
        {
            If ((EHCD == One))
            {
                If ((U2TD != 0x00))
                {
                    FDDC (0x12, 0x00)
                }
            }
        }

        Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
        {
            If ((EHCD == One))
            {
                If ((E_PS == 0x03))
                {
                    If ((U2TD != 0x03))
                    {
                        FDDC (0x12, 0x03)
                    }
                }
            }
        }

        Method (RHRS, 0, NotSerialized)
        {
            Name (RBUF, ResourceTemplate ()
            {
                GpioInt (Level, ActiveHigh, ExclusiveAndWake, PullNone, 0x0000,
                    "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x0036
                    }
            })
            Return (RBUF) /* \_SB_.PCI0.EHC1.RHRS.RBUF */
        }
    }

    Scope (_SB.PCI0.SATA)
    {
        Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
        {
            P0ST
        })
        Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
        {
            P3ST
        })
        Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
        {
            If ((ST_D == One))
            {
                Return (0x04)
            }
            Else
            {
                Return (0x00)
            }
        }

        Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
        {
            If ((ST_D == One))
            {
                If ((SATD != 0x00))
                {
                    FDDC (0x0F, 0x00)
                }
            }
        }

        Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
        {
            If ((ST_D == One))
            {
                If ((SATD != 0x03))
                {
                    If ((S_PS == 0x03))
                    {
                        FDDC (0x0F, 0x03)
                    }
                }
            }
        }
    }

    Scope (_SB)
    {
        Device (GPIO)
        {
            Name (_HID, "AMD0030")  // _HID: Hardware ID
            Name (_CID, "AMD0030")  // _CID: Compatible ID
            Name (_UID, 0x00)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
                    {
                        0x00000007,
                    }
                    Memory32Fixed (ReadWrite,
                        0xFED81500,         // Address Base
                        0x00000300,         // Address Length
                        )
                })
                Return (RBUF) /* \_SB_.GPIO._CRS.RBUF */
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }
        }

        Device (I2CA)
        {
            Name (_HID, "AMD0010")  // _HID: Hardware ID
            Name (_UID, 0x00)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {3}
                Memory32Fixed (ReadWrite,
                    0xFEDC2000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((IC0E == One))
                {
                    Return (0x0F)
                }

                Return (0x00)
            }

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {
                Return (0x00)
            }

            Method (CDSM, 5, Serialized)
            {
                If ((Arg0 == ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                {
                    If ((Arg2 == Zero))
                    {
                        If ((Arg1 == One))
                        {
                            Return (Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }
                    }

                    If ((Arg2 == One))
                    {
                        If ((ICTP == 0x01))
                        {
                            Return (0x20)
                        }

                        If ((ICTP == 0x02))
                        {
                            Return (0x01)
                        }

                        If ((ICTP == 0x03))
                        {
                            Return (0x20)
                        }

                        Return (0x01)
                    }
                }

                Return (Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }
    }

    Scope (_SB.I2CA)
    {
        Device (TPNL)
        {
            Name (HID2, 0x00)
            Name (SPED, 0x00)
            Name (BADR, 0x00)
            Name (_HID, "ELAN060C")  // _HID: Hardware ID
            Name (_CID, "PNP0C50" /* HID Protocol Device (I2C bus) */)  // _CID: Compatible ID
            Name (EBUF, ResourceTemplate ()
            {
                I2cSerialBusV2 (0x0015, ControllerInitiated, 0x00061A80,
                    AddressingMode7Bit, "\\_SB.I2CA",
                    0x00, ResourceConsumer, , Exclusive,
                    )
                GpioInt (Level, ActiveLow, Exclusive, PullUp, 0x0000,
                    "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x0007
                    }
            })
            Name (SBUF, ResourceTemplate ()
            {
                I2cSerialBusV2 (0x002C, ControllerInitiated, 0x00061A80,
                    AddressingMode7Bit, "\\_SB.I2CA",
                    0x00, ResourceConsumer, , Exclusive,
                    )
                GpioInt (Level, ActiveLow, Exclusive, PullUp, 0x0000,
                    "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x0007
                    }
            })
            Name (ABUF, ResourceTemplate ()
            {
                I2cSerialBusV2 (0x002C, ControllerInitiated, 0x00061A80,
                    AddressingMode7Bit, "\\_SB.I2CA",
                    0x00, ResourceConsumer, , Exclusive,
                    )
                GpioInt (Level, ActiveLow, Exclusive, PullUp, 0x0000,
                    "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x0007
                    }
            })
            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                If ((ICTP == 0x02))
                {
                    _HID = "ELAN062B"
                    BADR = 0x15
                    HID2 = 0x01
                }

                If ((ICTP == 0x01))
                {
                    _HID = "SYNA2B56"
                    BADR = 0x2C
                    HID2 = 0x20
                }

                If ((ICTP == 0x03))
                {
                    _HID = "AUI1666"
                    BADR = 0x2C
                    HID2 = 0x20
                }

                SPED = 0x00061A80
                Return (Zero)
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                Return (CDSM (Arg0, Arg1, Arg2, Arg3, HID2))
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((ICTP == 0x00))
                {
                    Return (0x00)
                }

                Return (0x0F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                If ((ICTP == 0x02))
                {
                    Return (EBUF) /* \_SB_.I2CA.TPNL.EBUF */
                }

                If ((ICTP == 0x01))
                {
                    Return (SBUF) /* \_SB_.I2CA.TPNL.SBUF */
                }

                If ((ICTP == 0x03))
                {
                    Return (ABUF) /* \_SB_.I2CA.TPNL.ABUF */
                }
            }

            Method (TPRD, 0, Serialized)
            {
                Return (^^^PCI0.LPC0.EC0.ECTP) /* \_SB_.PCI0.LPC0.EC0_.ECTP */
            }

            Method (TPWR, 1, Serialized)
            {
                ^^^PCI0.LPC0.EC0.ECTP = Arg0
            }
        }
    }
}



FACP
----
[000h 0000   4]                    Signature : "FACP"    [Fixed ACPI Description Table (FADT)]
[004h 0004   4]                 Table Length : 0000010C
[008h 0008   1]                     Revision : 05
[009h 0009   1]                     Checksum : A3
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "CB-01   "
[018h 0024   4]                 Oem Revision : 00000003
[01Ch 0028   4]              Asl Compiler ID : "PTEC"
[020h 0032   4]        Asl Compiler Revision : 00000002

[024h 0036   4]                 FACS Address : BDC92000
[028h 0040   4]                 DSDT Address : BDDF4000
[02Ch 0044   1]                        Model : 01
[02Dh 0045   1]                   PM Profile : 02 [Mobile]
[02Eh 0046   2]                SCI Interrupt : 0009
[030h 0048   4]             SMI Command Port : 000000B0
[034h 0052   1]            ACPI Enable Value : A0
[035h 0053   1]           ACPI Disable Value : A1
[036h 0054   1]               S4BIOS Command : 00
[037h 0055   1]              P-State Control : 00
[038h 0056   4]     PM1A Event Block Address : 00000800
[03Ch 0060   4]     PM1B Event Block Address : 00000000
[040h 0064   4]   PM1A Control Block Address : 00000804
[044h 0068   4]   PM1B Control Block Address : 00000000
[048h 0072   4]    PM2 Control Block Address : 00000000
[04Ch 0076   4]       PM Timer Block Address : 00000808
[050h 0080   4]           GPE0 Block Address : 00000820
[054h 0084   4]           GPE1 Block Address : 00000000
[058h 0088   1]       PM1 Event Block Length : 04
[059h 0089   1]     PM1 Control Block Length : 02
[05Ah 0090   1]     PM2 Control Block Length : 00
[05Bh 0091   1]        PM Timer Block Length : 04
[05Ch 0092   1]            GPE0 Block Length : 08
[05Dh 0093   1]            GPE1 Block Length : 00
[05Eh 0094   1]             GPE1 Base Offset : 00
[05Fh 0095   1]                 _CST Support : 00
[060h 0096   2]                   C2 Latency : 0065
[062h 0098   2]                   C3 Latency : 03E9
[064h 0100   2]               CPU Cache Size : 0000
[066h 0102   2]           Cache Flush Stride : 0000
[068h 0104   1]            Duty Cycle Offset : 01
[069h 0105   1]             Duty Cycle Width : 00
[06Ah 0106   1]          RTC Day Alarm Index : 0D
[06Bh 0107   1]        RTC Month Alarm Index : 00
[06Ch 0108   1]            RTC Century Index : 00
[06Dh 0109   2]   Boot Flags (decoded below) : 0013
               Legacy Devices Supported (V2) : 1
            8042 Present on ports 60/64 (V2) : 1
                        VGA Not Present (V4) : 0
                      MSI Not Supported (V4) : 0
                PCIe ASPM Not Supported (V4) : 1
                   CMOS RTC Not Present (V5) : 0
[06Fh 0111   1]                     Reserved : 00
[070h 0112   4]        Flags (decoded below) : 0000C5AD
      WBINVD instruction is operational (V1) : 1
              WBINVD flushes all caches (V1) : 0
                    All CPUs support C1 (V1) : 1
                  C2 works on MP system (V1) : 1
            Control Method Power Button (V1) : 0
            Control Method Sleep Button (V1) : 1
        RTC wake not in fixed reg space (V1) : 0
            RTC can wake system from S4 (V1) : 1
                        32-bit PM Timer (V1) : 1
                      Docking Supported (V1) : 0
               Reset Register Supported (V2) : 1
                            Sealed Case (V3) : 0
                    Headless - No Video (V3) : 0
        Use native instr after SLP_TYPx (V3) : 0
              PCIEXP_WAK Bits Supported (V4) : 1
                     Use Platform Timer (V4) : 1
               RTC_STS valid on S4 wake (V4) : 0
                Remote Power-on capable (V4) : 0
                 Use APIC Cluster Model (V4) : 0
     Use APIC Physical Destination Mode (V4) : 0
                       Hardware Reduced (V5) : 0
                      Low Power S0 Idle (V5) : 0

[074h 0116  12]               Reset Register : [Generic Address Structure]
[074h 0116   1]                     Space ID : 01 [SystemIO]
[075h 0117   1]                    Bit Width : 08
[076h 0118   1]                   Bit Offset : 00
[077h 0119   1]         Encoded Access Width : 01 [Byte Access:8]
[078h 0120   8]                      Address : 0000000000000CF9

[080h 0128   1]         Value to cause reset : 06
[081h 0129   2]    ARM Flags (decoded below) : 0000
                              PSCI Compliant : 0
                       Must use HVC for PSCI : 0

[083h 0131   1]          FADT Minor Revision : 00
[084h 0132   8]                 FACS Address : 0000000000000000
[08Ch 0140   8]                 DSDT Address : 00000000BDDF4000
[094h 0148  12]             PM1A Event Block : [Generic Address Structure]
[094h 0148   1]                     Space ID : 01 [SystemIO]
[095h 0149   1]                    Bit Width : 20
[096h 0150   1]                   Bit Offset : 00
[097h 0151   1]         Encoded Access Width : 02 [Word Access:16]
[098h 0152   8]                      Address : 0000000000000800

[0A0h 0160  12]             PM1B Event Block : [Generic Address Structure]
[0A0h 0160   1]                     Space ID : 01 [SystemIO]
[0A1h 0161   1]                    Bit Width : 00
[0A2h 0162   1]                   Bit Offset : 00
[0A3h 0163   1]         Encoded Access Width : 02 [Word Access:16]
[0A4h 0164   8]                      Address : 0000000000000000

[0ACh 0172  12]           PM1A Control Block : [Generic Address Structure]
[0ACh 0172   1]                     Space ID : 01 [SystemIO]
[0ADh 0173   1]                    Bit Width : 10
[0AEh 0174   1]                   Bit Offset : 00
[0AFh 0175   1]         Encoded Access Width : 02 [Word Access:16]
[0B0h 0176   8]                      Address : 0000000000000804

[0B8h 0184  12]           PM1B Control Block : [Generic Address Structure]
[0B8h 0184   1]                     Space ID : 01 [SystemIO]
[0B9h 0185   1]                    Bit Width : 00
[0BAh 0186   1]                   Bit Offset : 00
[0BBh 0187   1]         Encoded Access Width : 02 [Word Access:16]
[0BCh 0188   8]                      Address : 0000000000000000

[0C4h 0196  12]            PM2 Control Block : [Generic Address Structure]
[0C4h 0196   1]                     Space ID : 01 [SystemIO]
[0C5h 0197   1]                    Bit Width : 00
[0C6h 0198   1]                   Bit Offset : 00
[0C7h 0199   1]         Encoded Access Width : 01 [Byte Access:8]
[0C8h 0200   8]                      Address : 0000000000000000

[0D0h 0208  12]               PM Timer Block : [Generic Address Structure]
[0D0h 0208   1]                     Space ID : 01 [SystemIO]
[0D1h 0209   1]                    Bit Width : 20
[0D2h 0210   1]                   Bit Offset : 00
[0D3h 0211   1]         Encoded Access Width : 03 [DWord Access:32]
[0D4h 0212   8]                      Address : 0000000000000808

[0DCh 0220  12]                   GPE0 Block : [Generic Address Structure]
[0DCh 0220   1]                     Space ID : 01 [SystemIO]
[0DDh 0221   1]                    Bit Width : 40
[0DEh 0222   1]                   Bit Offset : 00
[0DFh 0223   1]         Encoded Access Width : 03 [DWord Access:32]
[0E0h 0224   8]                      Address : 0000000000000820

[0E8h 0232  12]                   GPE1 Block : [Generic Address Structure]
[0E8h 0232   1]                     Space ID : 01 [SystemIO]
[0E9h 0233   1]                    Bit Width : 00
[0EAh 0234   1]                   Bit Offset : 00
[0EBh 0235   1]         Encoded Access Width : 03 [DWord Access:32]
[0ECh 0236   8]                      Address : 0000000000000000


[0F4h 0244  12]       Sleep Control Register : [Generic Address Structure]
[0F4h 0244   1]                     Space ID : 01 [SystemIO]
[0F5h 0245   1]                    Bit Width : 08
[0F6h 0246   1]                   Bit Offset : 00
[0F7h 0247   1]         Encoded Access Width : 00 [Undefined/Legacy]
[0F8h 0248   8]                      Address : 0000000000000000

[100h 0256  12]        Sleep Status Register : [Generic Address Structure]
[100h 0256   1]                     Space ID : 01 [SystemIO]
[101h 0257   1]                    Bit Width : 08
[102h 0258   1]                   Bit Offset : 00
[103h 0259   1]         Encoded Access Width : 00 [Undefined/Legacy]
[104h 0260   8]                      Address : 0000000000000000

/**** ACPI table terminates in the middle of a data structure! (dump table) */

Raw Table Data: Length 268 (0x10C)

    0000: 46 41 43 50 0C 01 00 00 05 A3 4C 45 4E 4F 56 4F  // FACP......LENOVO
    0010: 43 42 2D 30 31 20 20 20 03 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 00 20 C9 BD 00 40 DF BD 01 02 09 00  // ..... ...@......
    0030: B0 00 00 00 A0 A1 00 00 00 08 00 00 00 00 00 00  // ................
    0040: 04 08 00 00 00 00 00 00 00 00 00 00 08 08 00 00  // ................
    0050: 20 08 00 00 00 00 00 00 04 02 00 04 08 00 00 00  //  ...............
    0060: 65 00 E9 03 00 00 00 00 01 00 0D 00 00 13 00 00  // e...............
    0070: AD C5 00 00 01 08 00 01 F9 0C 00 00 00 00 00 00  // ................
    0080: 06 00 00 00 00 00 00 00 00 00 00 00 00 40 DF BD  // .............@..
    0090: 00 00 00 00 01 20 00 02 00 08 00 00 00 00 00 00  // ..... ..........
    00A0: 01 00 00 02 00 00 00 00 00 00 00 00 01 10 00 02  // ................
    00B0: 04 08 00 00 00 00 00 00 01 00 00 02 00 00 00 00  // ................
    00C0: 00 00 00 00 01 00 00 01 00 00 00 00 00 00 00 00  // ................
    00D0: 01 20 00 03 08 08 00 00 00 00 00 00 01 40 00 03  // . ...........@..
    00E0: 20 08 00 00 00 00 00 00 01 00 00 03 00 00 00 00  //  ...............
    00F0: 00 00 00 00 01 08 00 00 00 00 00 00 00 00 00 00  // ................
    0100: 01 08 00 00 00 00 00 00 00 00 00 00              // ............


FACS
----
[000h 0000   4]                    Signature : "FACS"
[004h 0004   4]                       Length : 00000040
[008h 0008   4]           Hardware Signature : 0000214C
[00Ch 0012   4]    32 Firmware Waking Vector : 00000000
[010h 0016   4]                  Global Lock : 00000000
[014h 0020   4]        Flags (decoded below) : 00000000
                      S4BIOS Support Present : 0
                  64-bit Wake Supported (V2) : 0
[018h 0024   8]    64 Firmware Waking Vector : 0000000000000000
[020h 0032   1]                      Version : 01
[021h 0033   3]                     Reserved : 000000
[024h 0036   4]    OspmFlags (decoded below) : 00000000
               64-bit Wake Env Required (V2) : 0

Raw Table Data: Length 64 (0x40)

    0000: 46 41 43 53 40 00 00 00 4C 21 00 00 00 00 00 00  // FACS@...L!......
    0010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0020: 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................


FPDT
----
[000h 0000   4]                    Signature : "FPDT"    [Firmware Performance Data Table]
[004h 0004   4]                 Table Length : 00000034
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 9C
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "CB-01   "
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "PTEC"
[020h 0032   4]        Asl Compiler Revision : 00000002


[024h 0036   2]                Subtable Type : 0000
[026h 0038   1]                       Length : 10
[027h 0039   1]                     Revision : 01
[028h 0040   4]                     Reserved : 00000000
[02Ch 0044   8]     FPDT Boot Record Address : 00000000BDBD0000

Raw Table Data: Length 52 (0x34)

    0000: 46 50 44 54 34 00 00 00 01 9C 4C 45 4E 4F 56 4F  // FPDT4.....LENOVO
    0010: 43 42 2D 30 31 20 20 20 02 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 00 00 10 01 00 00 00 00 00 00 BD BD  // ................
    0030: 00 00 00 00                                      // ....


HPET
----
[000h 0000   4]                    Signature : "HPET"    [High Precision Event Timer Table]
[004h 0004   4]                 Table Length : 00000038
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 0D
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "CB-01   "
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "PTEC"
[020h 0032   4]        Asl Compiler Revision : 00000002

[024h 0036   4]            Hardware Block ID : 43538210

[028h 0040  12]         Timer Block Register : [Generic Address Structure]
[028h 0040   1]                     Space ID : 00 [SystemMemory]
[029h 0041   1]                    Bit Width : 08
[02Ah 0042   1]                   Bit Offset : 00
[02Bh 0043   1]         Encoded Access Width : 00 [Undefined/Legacy]
[02Ch 0044   8]                      Address : 00000000FED00000

[034h 0052   1]              Sequence Number : 02
[035h 0053   2]          Minimum Clock Ticks : 0014
[037h 0055   1]        Flags (decoded below) : 00
                             4K Page Protect : 0
                            64K Page Protect : 0

Raw Table Data: Length 56 (0x38)

    0000: 48 50 45 54 38 00 00 00 01 0D 4C 45 4E 4F 56 4F  // HPET8.....LENOVO
    0010: 43 42 2D 30 31 20 20 20 01 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 10 82 53 43 00 08 00 00 00 00 D0 FE  // ......SC........
    0030: 00 00 00 00 02 14 00 00                          // ........


IVRS
----
[000h 0000   4]                    Signature : "IVRS"    [I/O Virtualization Reporting Structure]
[004h 0004   4]                 Table Length : 000000B0
[008h 0008   1]                     Revision : 02
[009h 0009   1]                     Checksum : EB
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "CB-01   "
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "PTEC"
[020h 0032   4]        Asl Compiler Revision : 00000002

[024h 0036   4]          Virtualization Info : 00203041
[028h 0040   8]                     Reserved : 0000000000000000

[030h 0048   1]                Subtable Type : 10 [Hardware Definition Block (IVHD)]
[031h 0049   1]        Flags (decoded below) : B8
                                     HtTunEn : 0
                                      PassPW : 0
                                   ResPassPW : 0
                                Isoc Control : 1
                               Iotlb Support : 1
                                    Coherent : 1
                            Prefetch Support : 0
                                 PPR Support : 1
[032h 0050   2]                       Length : 0038
[034h 0052   2]                     DeviceId : 0002
[036h 0054   2]            Capability Offset : 0040
[038h 0056   8]                 Base Address : 00000000FEB80000
[040h 0064   2]            PCI Segment Group : 0000
[042h 0066   2]          Virtualization Info : 0000
[044h 0068   4]            Feature Reporting : 80048F6E

[048h 0072   1]                Subtable Type : 03 [Device Entry: Start of Range]
[049h 0073   2]                    Device ID : 0008
[04Bh 0075   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[04Ch 0076   1]                Subtable Type : 04 [Device Entry: End of Range]
[04Dh 0077   2]                    Device ID : FFFE
[04Fh 0079   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[050h 0080   1]                Subtable Type : 43 [Device Entry: Alias Start of Range]
[051h 0081   2]                    Device ID : FF00
[053h 0083   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[054h 0084   1]                     Reserved : 00
[055h 0085   2]        Source Used Device ID : 00A4
[057h 0087   1]                     Reserved : 00

[058h 0088   1]                Subtable Type : 04 [Device Entry: End of Range]
[059h 0089   2]                    Device ID : FFFF
[05Bh 0091   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[05Ch 0092   1]                Subtable Type : 00 [Unknown/Reserved Device Entry Type]
[05Dh 0093   2]                    Device ID : 0000
[05Fh 0095   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[060h 0096   1]                Subtable Type : 48 [Device Entry: Special Device]
[061h 0097   2]                    Device ID : 0000
[063h 0099   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[064h 0100   1]                       Handle : 00
[065h 0101   2]        Source Used Device ID : 00A0
[067h 0103   1]                      Variety : 02

[068h 0104   1]                Subtable Type : 11 [Hardware Definition Block (IVHD)]
[069h 0105   1]        Flags (decoded below) : B8
                                     HtTunEn : 0
                                      PassPW : 0
                                   ResPassPW : 0
                                Isoc Control : 1
                               Iotlb Support : 1
                                    Coherent : 1
                            Prefetch Support : 0
                                 PPR Support : 1
[06Ah 0106   2]                       Length : 0048
[06Ch 0108   2]                     DeviceId : 0002
[06Eh 0110   2]            Capability Offset : 0040
[070h 0112   8]                 Base Address : 00000000FEB80000
[078h 0120   2]            PCI Segment Group : 0000
[07Ah 0122   2]          Virtualization Info : 0000
[07Ch 0124   4]                   Attributes : 00040200
[080h 0128   8]                    EFR Image : 000077EF22294ADA
[088h 0136   8]                     Reserved : 0000000000000000

[090h 0144   1]                Subtable Type : 03 [Device Entry: Start of Range]
[091h 0145   2]                    Device ID : 0008
[093h 0147   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[094h 0148   1]                Subtable Type : 04 [Device Entry: End of Range]
[095h 0149   2]                    Device ID : FFFE
[097h 0151   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[098h 0152   1]                Subtable Type : 43 [Device Entry: Alias Start of Range]
[099h 0153   2]                    Device ID : FF00
[09Bh 0155   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[09Ch 0156   1]                     Reserved : 00
[09Dh 0157   2]        Source Used Device ID : 00A4
[09Fh 0159   1]                     Reserved : 00

[0A0h 0160   1]                Subtable Type : 04 [Device Entry: End of Range]
[0A1h 0161   2]                    Device ID : FFFF
[0A3h 0163   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0A4h 0164   1]                Subtable Type : 00 [Unknown/Reserved Device Entry Type]
[0A5h 0165   2]                    Device ID : 0000
[0A7h 0167   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0A8h 0168   1]                Subtable Type : 48 [Device Entry: Special Device]
[0A9h 0169   2]                    Device ID : 0000
[0ABh 0171   1] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[0ACh 0172   1]                       Handle : 00
[0ADh 0173   2]        Source Used Device ID : 00A0
[0AFh 0175   1]                      Variety : 02

Raw Table Data: Length 176 (0xB0)

    0000: 49 56 52 53 B0 00 00 00 02 EB 4C 45 4E 4F 56 4F  // IVRS......LENOVO
    0010: 43 42 2D 30 31 20 20 20 01 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 41 30 20 00 00 00 00 00 00 00 00 00  // ....A0 .........
    0030: 10 B8 38 00 02 00 40 00 00 00 B8 FE 00 00 00 00  // ..8...@.........
    0040: 00 00 00 00 6E 8F 04 80 03 08 00 00 04 FE FF 00  // ....n...........
    0050: 43 00 FF 00 00 A4 00 00 04 FF FF 00 00 00 00 00  // C...............
    0060: 48 00 00 00 00 A0 00 02 11 B8 48 00 02 00 40 00  // H.........H...@.
    0070: 00 00 B8 FE 00 00 00 00 00 00 00 00 00 02 04 00  // ................
    0080: DA 4A 29 22 EF 77 00 00 00 00 00 00 00 00 00 00  // .J)".w..........
    0090: 03 08 00 00 04 FE FF 00 43 00 FF 00 00 A4 00 00  // ........C.......
    00A0: 04 FF FF 00 00 00 00 00 48 00 00 00 00 A0 00 02  // ........H.......


MCFG
----
[000h 0000   4]                    Signature : "MCFG"    [Memory Mapped Configuration Table]
[004h 0004   4]                 Table Length : 0000003C
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : FA
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "CB-01   "
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "PTEC"
[020h 0032   4]        Asl Compiler Revision : 00000002

[024h 0036   8]                     Reserved : 0000000000000000

[02Ch 0044   8]                 Base Address : 00000000F8000000
[034h 0052   2]         Segment Group Number : 0000
[036h 0054   1]             Start Bus Number : 00
[037h 0055   1]               End Bus Number : 3F
[038h 0056   4]                     Reserved : 00000000

Raw Table Data: Length 60 (0x3C)

    0000: 4D 43 46 47 3C 00 00 00 01 FA 4C 45 4E 4F 56 4F  // MCFG<.....LENOVO
    0010: 43 42 2D 30 31 20 20 20 01 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 F8  // ................
    0030: 00 00 00 00 00 00 00 3F 00 00 00 00              // .......?....


MSDM
----
[000h 0000   4]                    Signature : "MSDM"    [Microsoft Data Management Table]
[004h 0004   4]                 Table Length : 00000055
[008h 0008   1]                     Revision : 03
[009h 0009   1]                     Checksum : 66
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "CB-01   "
[018h 0024   4]                 Oem Revision : 00000000
[01Ch 0028   4]              Asl Compiler ID : "PTEC"
[020h 0032   4]        Asl Compiler Revision : 00000002

[024h 0036  49] Software Licensing Structure : 4D 53 44 4D 55 00 00 00 03 66 4C 45 4E 4F 56 4F /* MSDMU....fLENOVO */\
/* 034h 0052  16 */                            43 42 2D 30 31 20 20 20 00 00 00 00 50 54 45 43 /* CB-01   ....PTEC */\
/* 044h 0068  16 */                            02 00 00 00 01 00 00 00 00 00 00 00 01 00 00 00 /* ................ */\
/* 054h 0084   1 */                            00                                              /* . */\

Raw Table Data: Length 85 (0x55)

    0000: 4D 53 44 4D 55 00 00 00 03 66 4C 45 4E 4F 56 4F  // MSDMU....fLENOVO
    0010: 43 42 2D 30 31 20 20 20 00 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 01 00 00 00 00 00 00 00 01 00 00 00  // ................
    0030: 00 00 00 00 1D 00 00 00 59 52 38 32 43 2D 43 4E  // ........YR82C-CN
    0040: 46 57 33 2D 52 33 37 58 46 2D 59 34 37 4D 51 2D  // FW3-R37XF-Y47MQ-
    0050: 38 4B 38 56 44                                   // 8K8VD


SBST
----
[000h 0000   4]                    Signature : "SBST"    [Smart Battery Specification Table]
[004h 0004   4]                 Table Length : 00000030
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 1E
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "CB-01   "
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "PTEC"
[020h 0032   4]        Asl Compiler Revision : 00000002

[024h 0036   4]                Warning Level : 00000000
[028h 0040   4]                    Low Level : 00000000
[02Ch 0044   4]               Critical Level : 00000000

Raw Table Data: Length 48 (0x30)

    0000: 53 42 53 54 30 00 00 00 01 1E 4C 45 4E 4F 56 4F  // SBST0.....LENOVO
    0010: 43 42 2D 30 31 20 20 20 01 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................


SSDT1
-----
DefinitionBlock ("", "SSDT", 1, "LENOVO", "AGESA   ", 0x00000001)
{
    External (_PR_.C000, DeviceObj)
    External (_PR_.C001, DeviceObj)

    Scope (\_PR.C000)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x06)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000A28, 
                0x000024F4, 
                0x00000004, 
                0x00000004, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000960, 
                0x00001CD4, 
                0x00000004, 
                0x00000004, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000898, 
                0x000016A3, 
                0x00000004, 
                0x00000004, 
                0x00000002, 
                0x00000002
            }, 

            Package (0x06)
            {
                0x0000076C, 
                0x00001194, 
                0x00000004, 
                0x00000004, 
                0x00000003, 
                0x00000003
            }, 

            Package (0x06)
            {
                0x00000640, 
                0x00000C91, 
                0x00000004, 
                0x00000004, 
                0x00000004, 
                0x00000004
            }, 

            Package (0x06)
            {
                0x00000514, 
                0x00000A26, 
                0x00000004, 
                0x00000004, 
                0x00000005, 
                0x00000005
            }
        })
        Name (XPSS, Package (0x06)
        {
            Package (0x08)
            {
                0x00000A28, 
                0x000024F4, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000960, 
                0x00001CD4, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000898, 
                0x000016A3, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x0000076C, 
                0x00001194, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000640, 
                0x00000C91, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000514, 
                0x00000A26, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000000, 
                0x000000FC, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C000.PPCV */
        }

        Name (_CST, Package (0x02)  // _CST: C-States
        {
            0x01, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000814, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C001)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x06)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x00000A28, 
                0x000024F4, 
                0x00000004, 
                0x00000004, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000960, 
                0x00001CD4, 
                0x00000004, 
                0x00000004, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000898, 
                0x000016A3, 
                0x00000004, 
                0x00000004, 
                0x00000002, 
                0x00000002
            }, 

            Package (0x06)
            {
                0x0000076C, 
                0x00001194, 
                0x00000004, 
                0x00000004, 
                0x00000003, 
                0x00000003
            }, 

            Package (0x06)
            {
                0x00000640, 
                0x00000C91, 
                0x00000004, 
                0x00000004, 
                0x00000004, 
                0x00000004
            }, 

            Package (0x06)
            {
                0x00000514, 
                0x00000A26, 
                0x00000004, 
                0x00000004, 
                0x00000005, 
                0x00000005
            }
        })
        Name (XPSS, Package (0x06)
        {
            Package (0x08)
            {
                0x00000A28, 
                0x000024F4, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000960, 
                0x00001CD4, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000898, 
                0x000016A3, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x0000076C, 
                0x00001194, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000640, 
                0x00000C91, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000514, 
                0x00000A26, 
                0x00000004, 
                0x00000004, 
                Buffer (0x08)
                {
                     0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000000, 
                0x000000FC, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C001.PPCV */
        }

        Name (_CST, Package (0x02)  // _CST: C-States
        {
            0x01, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000814, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }
}



SSDT2
-----
DefinitionBlock ("", "SSDT", 1, "LENOVO", "Tpm2Tabl", 0x00009999)
{
    External (_SB_.TPM_.FRET, IntObj)
    External (_SB_.TPM_.IOB2, UnknownObj)
    External (_SB_.TPM_.LPPR, IntObj)
    External (_SB_.TPM_.MCIN, IntObj)
    External (_SB_.TPM_.MCIP, UnknownObj)
    External (_SB_.TPM_.MORD, UnknownObj)
    External (_SB_.TPM_.MRET, IntObj)
    External (_SB_.TPM_.PPIN, IntObj)
    External (_SB_.TPM_.PPIP, UnknownObj)
    External (_SB_.TPM_.PPRM, UnknownObj)
    External (_SB_.TPM_.PPRP, IntObj)
    External (_SB_.TPM_.PPRQ, IntObj)

    Scope (\_SB)
    {
        Device (TPM2)
        {
            Name (_HID, "MSFT0101" /* TPM 2.0 Security Device */)  // _HID: Hardware ID
            Name (_CID, "MSFT0101" /* TPM 2.0 Security Device */)  // _CID: Compatible ID
            Name (_STR, Unicode ("TPM 2.0 Device"))  // _STR: Description String
            Name (PFPF, 0x00000001)
            OperationRegion (DBG1, SystemIO, 0x80, 0x02)
            Field (DBG1, WordAcc, NoLock, Preserve)
            {
                P80L,   16
            }

            OperationRegion (PFCA, SystemMemory, 0xF0900010, 0xF0)
            Field (PFCA, DWordAcc, NoLock, Preserve)
            {
                HRTB,   32, 
                ERRR,   32, 
                CLFG,   32, 
                STA1,   32, 
                AccessAs (QWordAcc, 0x00), 
                PFIN,   64, 
                AccessAs (DWordAcc, 0x00), 
                CMSZ,   32, 
                AccessAs (QWordAcc, 0x00), 
                CMDB,   64, 
                AccessAs (DWordAcc, 0x00), 
                RPSZ,   32, 
                AccessAs (QWordAcc, 0x00), 
                RESP,   64
            }

            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                Memory32Fixed (ReadWrite,
                    0xBDD7D000,         // Address Base
                    0x00004000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xBDD81000,         // Address Base
                    0x00004000,         // Address Length
                    )
            })
            Method (PTS, 1, Serialized)
            {
                If (((Arg0 < 0x06) && (Arg0 > 0x03)))
                {
                    If (!(\_SB.TPM.MORD & 0x10))
                    {
                        \_SB.TPM.MCIP = 0x02
                        \_SB.TPM.IOB2 = \_SB.TPM.MCIN /* External reference */
                    }
                }

                Return (0x00)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((PFPF == 0x01))
                {
                    Return (0x0F)
                }

                Return (0x00)
            }

            Method (HINF, 3, Serialized)
            {
                Switch (ToInteger (Arg1))
                {
                    Case (0x00)
                    {
                        P80L = 0x10
                        Return (Buffer (0x01)
                        {
                             0x03                                             // .
                        })
                    }
                    Case (0x01)
                    {
                        P80L = 0x11
                        Name (TPMV, Package (0x02)
                        {
                            0x01, 
                            Package (0x02)
                            {
                                0x01, 
                                0x20
                            }
                        })
                        If ((_STA () == 0x00))
                        {
                            Return (Package (0x01)
                            {
                                0x00
                            })
                        }

                        Return (TPMV) /* \_SB_.TPM2.HINF.TPMV */
                    }
                    Default
                    {
                        BreakPoint
                    }

                }

                Return (Buffer (0x01)
                {
                     0x00                                             // .
                })
            }

            Name (TPM2, Package (0x02)
            {
                Zero, 
                Zero
            })
            Name (TPM3, Package (0x03)
            {
                Zero, 
                Zero, 
                Zero
            })
            Method (TPPI, 3, Serialized)
            {
                Switch (ToInteger (Arg1))
                {
                    Case (0x00)
                    {
                        P80L = 0x20
                        Return (Buffer (0x02)
                        {
                             0xFF, 0x01                                       // ..
                        })
                    }
                    Case (0x01)
                    {
                        P80L = 0x21
                        Return ("1.3")
                    }
                    Case (0x02)
                    {
                        P80L = 0x22
                        \_SB.TPM.PPRQ = DerefOf (Arg2 [0x00])
                        \_SB.TPM.PPIP = 0x02
                        \_SB.TPM.IOB2 = \_SB.TPM.PPIN /* External reference */
                        Return (\_SB.TPM.FRET) /* External reference */
                    }
                    Case (0x03)
                    {
                        P80L = 0x23
                        TPM2 [0x01] = \_SB.TPM.PPRQ /* External reference */
                        Return (TPM2) /* \_SB_.TPM2.TPM2 */
                    }
                    Case (0x04)
                    {
                        P80L = 0x24
                        Return (0x02)
                    }
                    Case (0x05)
                    {
                        P80L = 0x25
                        \_SB.TPM.PPIP = 0x05
                        \_SB.TPM.IOB2 = \_SB.TPM.PPIN /* External reference */
                        TPM3 [0x01] = \_SB.TPM.LPPR /* External reference */
                        TPM3 [0x02] = \_SB.TPM.PPRP /* External reference */
                        Return (TPM3) /* \_SB_.TPM2.TPM3 */
                    }
                    Case (0x06)
                    {
                        P80L = 0x26
                        Return (0x03)
                    }
                    Case (0x07)
                    {
                        P80L = 0x27
                        \_SB.TPM.PPIP = 0x07
                        \_SB.TPM.PPRQ = DerefOf (Arg2 [0x00])
                        \_SB.TPM.PPRM = 0x00
                        If ((\_SB.TPM.PPRQ == 0x17))
                        {
                            \_SB.TPM.PPRM = DerefOf (Arg2 [0x01])
                        }

                        \_SB.TPM.IOB2 = \_SB.TPM.PPIN /* External reference */
                        Return (\_SB.TPM.FRET) /* External reference */
                    }
                    Case (0x08)
                    {
                        P80L = 0x28
                        \_SB.TPM.PPIP = 0x08
                        \_SB.TPM.PPRQ = DerefOf (Arg2 [0x00])
                        \_SB.TPM.IOB2 = \_SB.TPM.PPIN /* External reference */
                        Return (\_SB.TPM.FRET) /* External reference */
                    }
                    Default
                    {
                        BreakPoint
                    }

                }

                Return (0x01)
            }

            Method (TMCI, 3, Serialized)
            {
                Switch (ToInteger (Arg1))
                {
                    Case (0x00)
                    {
                        P80L = 0x30
                        Return (Buffer (0x01)
                        {
                             0x03                                             // .
                        })
                    }
                    Case (0x01)
                    {
                        P80L = 0x31
                        \_SB.TPM.MORD = DerefOf (Arg2 [0x00])
                        \_SB.TPM.MCIP = 0x01
                        \_SB.TPM.IOB2 = \_SB.TPM.MCIN /* External reference */
                        Return (\_SB.TPM.MRET) /* External reference */
                    }
                    Default
                    {
                        BreakPoint
                    }

                }

                Return (0x01)
            }

            Method (TPMS, 3, Serialized)
            {
                Switch (ToInteger (Arg1))
                {
                    Case (0x00)
                    {
                        Return (Buffer (0x01)
                        {
                             0x03                                             // .
                        })
                    }
                    Case (0x01)
                    {
                        P80L = 0x42
                        Return (0x00)
                    }
                    Default
                    {
                        BreakPoint
                    }

                }

                Return (0x01)
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("cf8e16a5-c1e8-4e25-b712-4f54a96702c8") /* Unknown UUID */))
                {
                    P80L = 0x50
                    Return (HINF (Arg1, Arg2, Arg3))
                }

                If ((Arg0 == ToUUID ("3dddfaa6-361b-4eb4-a424-8d10089d1653") /* Physical Presence Interface */))
                {
                    P80L = 0x51
                    Return (TPPI (Arg1, Arg2, Arg3))
                }

                If ((Arg0 == ToUUID ("376054ed-cc13-4675-901c-4756d7f2d45d") /* Unknown UUID */))
                {
                    P80L = 0x52
                    Return (TMCI (Arg1, Arg2, Arg3))
                }

                If ((Arg0 == ToUUID ("6bbf6cab-5463-4714-b7cd-f0203c0368d4") /* Unknown UUID */))
                {
                    P80L = 0x53
                    Return (TPMS (Arg1, Arg2, Arg3))
                }

                Return (Buffer (0x01)
                {
                     0x00                                             // .
                })
            }
        }
    }
}



SSDT3
-----
DefinitionBlock ("", "SSDT", 1, "LENOVO", "CPMDFIGP", 0x00000001)
{
    /*
     * iASL Warning: There were 30 external control methods found during
     * disassembly, but only 0 were resolved (30 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.ALIB, IntObj)
    External (_SB_.LID_._LID, IntObj)
    External (_SB_.PCI0.GPP0.VGA_.AFN0, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN1, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN2, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN3, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN4, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN5, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN6, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN7, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN8, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.GPP0.VGA_.AFNC, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.LPC0.EC0_.GATY, UnknownObj)
    External (_SB_.PCI0.VGA_, DeviceObj)
    External (M000, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (M012, MethodObj)    // Warning: Unknown method, guessing 5 arguments
    External (M013, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M019, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M020, MethodObj)    // Warning: Unknown method, guessing 5 arguments
    External (M021, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M023, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M024, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M025, UnknownObj)
    External (M026, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M043, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M049, IntObj)
    External (M084, UnknownObj)
    External (M087, UnknownObj)
    External (M090, IntObj)
    External (M091, IntObj)
    External (M093, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M094, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M095, MethodObj)    // Warning: Unknown method, guessing 4 arguments
    External (M098, IntObj)
    External (M099, IntObj)
    External (M100, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M101, IntObj)
    External (M102, IntObj)
    External (M103, IntObj)
    External (M104, IntObj)
    External (M105, IntObj)
    External (M106, IntObj)
    External (M111, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M112, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M113, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (M131, IntObj)
    External (M133, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (M232, MethodObj)    // Warning: Unknown method, guessing 3 arguments
    External (M233, IntObj)
    External (M235, MethodObj)    // Warning: Unknown method, guessing 2 arguments

    Scope (\_SB.PCI0.VGA)
    {
        Name (ATIB, Buffer (0x0100){})
        Method (ATIF, 2, Serialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (AF00 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (AF01 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (AF02 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (AF03 (DerefOf (Arg1 [0x02]), DerefOf (Arg1 [0x04])))
            }

            If ((Arg0 == 0x04))
            {
                Return (AF04 ())
            }

            If ((Arg0 == 0x0F))
            {
                Return (AF15 ())
            }

            If ((Arg0 == 0x10))
            {
                Return (AF16 (DerefOf (Arg1 [0x02])))
            }
            Else
            {
                CreateWordField (ATIB, 0x00, M157)
                CreateWordField (ATIB, 0x02, M158)
                CreateDWordField (ATIB, 0x04, M159)
                CreateDWordField (ATIB, 0x08, M160)
                M157 = 0x00
                M158 = 0x00
                M159 = 0x00
                M160 = 0x00
                Return (ATIB) /* \_SB_.PCI0.VGA_.ATIB */
            }
        }

        Method (AF00, 0, NotSerialized)
        {
            CreateWordField (ATIB, 0x00, M157)
            CreateWordField (ATIB, 0x02, M158)
            CreateDWordField (ATIB, 0x04, M159)
            CreateDWordField (ATIB, 0x08, M160)
            M157 = 0x0C
            M158 = 0x01
            M159 = M101 /* External reference */
            If (!CondRefOf (\_SB.LID._LID, Local1))
            {
                M102 &= 0xFFFFFFF7
            }

            M160 = M102 /* External reference */
            Return (ATIB) /* \_SB_.PCI0.VGA_.ATIB */
        }

        Method (AF01, 0, NotSerialized)
        {
            CreateWordField (ATIB, 0x00, M157)
            CreateDWordField (ATIB, 0x02, M161)
            CreateDWordField (ATIB, 0x06, M162)
            CreateByteField (ATIB, 0x0A, M163)
            Local0 = (M103 & 0xFF000000)
            Local1 = (M103 & 0x03)
            If ((Local1 == 0x02))
            {
                M157 = 0x0B
                M161 = 0x03
                M162 = Local1
                M163 = Local0
            }
            Else
            {
                M157 = 0x0A
                M161 = 0x03
                M162 = M103 /* External reference */
            }

            Return (ATIB) /* \_SB_.PCI0.VGA_.ATIB */
        }

        Name (M164, Buffer (0x04)
        {
             0x00, 0x00, 0x00, 0x00                           // ....
        })
        Name (M210, 0x00)
        Name (M211, 0x00)
        Name (M212, 0x00)
        Name (M213, 0x00)
        Name (M214, 0x00)
        Name (M215, 0x00)
        Name (M303, 0x00)
        Name (M304, 0x00)
        Name (SSDM, 0x0A)
        Name (SCDY, 0x00)
        Method (AF02, 0, NotSerialized)
        {
            CreateBitField (M164, 0x00, M165)
            CreateBitField (M164, 0x01, M166)
            CreateBitField (M164, 0x02, M167)
            CreateBitField (M164, 0x03, M168)
            CreateBitField (M164, 0x04, M169)
            CreateBitField (M164, 0x05, M170)
            CreateBitField (M164, 0x06, M171)
            CreateBitField (M164, 0x07, M172)
            CreateBitField (M164, 0x08, M173)
            CreateBitField (M164, 0x0C, M300)
            CreateWordField (ATIB, 0x00, M157)
            CreateDWordField (ATIB, 0x02, M174)
            CreateByteField (ATIB, 0x06, M175)
            CreateByteField (ATIB, 0x07, M176)
            CreateByteField (ATIB, 0x08, M177)
            CreateByteField (ATIB, 0x09, M178)
            CreateByteField (ATIB, 0x0A, M179)
            CreateByteField (ATIB, 0x0B, M180)
            CreateByteField (ATIB, 0x0C, M181)
            CreateByteField (ATIB, 0x0D, M301)
            CreateDWordField (ATIB, 0x0E, M302)
            M157 = 0x0D
            M174 = M164 /* \_SB_.PCI0.VGA_.M164 */
            If (M165)
            {
                M165 = Zero
            }

            If (M166)
            {
                M175 = M210 /* \_SB_.PCI0.VGA_.M210 */
                M210 = Zero
                M166 = Zero
            }

            If (M167)
            {
                M176 = M211 /* \_SB_.PCI0.VGA_.M211 */
                M177 = M212 /* \_SB_.PCI0.VGA_.M212 */
                M211 = Zero
                M212 = Zero
                M167 = Zero
            }

            If (M168)
            {
                M178 = M213 /* \_SB_.PCI0.VGA_.M213 */
                M179 = M214 /* \_SB_.PCI0.VGA_.M214 */
                M213 = Zero
                M214 = Zero
                M168 = Zero
            }

            If (M169)
            {
                M180 = M215 /* \_SB_.PCI0.VGA_.M215 */
                M169 = Zero
            }

            If (M171)
            {
                M171 = Zero
            }

            If (M172)
            {
                M172 = Zero
            }

            If (M173)
            {
                M173 = Zero
            }

            If (M300)
            {
                M301 = M303 /* \_SB_.PCI0.VGA_.M303 */
                M302 = M304 /* \_SB_.PCI0.VGA_.M304 */
                M303 = Zero
                M304 = Zero
                M300 = Zero
            }

            Return (ATIB) /* \_SB_.PCI0.VGA_.ATIB */
        }

        Method (AF03, 2, NotSerialized)
        {
            CreateWordField (ATIB, 0x00, M157)
            CreateWordField (ATIB, 0x02, M182)
            CreateWordField (ATIB, 0x04, M183)
            M182 = Arg0
            M183 = Arg1
            Name (M184, 0x06)
            Name (M185, 0x06)
            Name (M186, Buffer (0x14)
            {
                 0x00                                             // .
            })
            Name (M187, 0x00)
            M133 (0xBF, M187) = M049 /* External reference */
            Local1 = 0x00
            While ((Local1 < M187))
            {
                M133 ((0xC0 + Local1), Local2) = M049 /* External reference */
                M186 [Local1] = Local2
                Local1++
            }

            Local1 = M182 /* \_SB_.PCI0.VGA_.AF03.M182 */
            Local1 &= 0x8B
            Local2 = M183 /* \_SB_.PCI0.VGA_.AF03.M183 */
            If (CondRefOf (\_SB.LID._LID, Local4))
            {
                Local0 = \_SB.LID._LID /* External reference */
                Local2 &= 0xFFFFFFFE
                Local2 |= Local0
            }

            Local0 = Zero
            While ((Local0 < M187))
            {
                Local3 = DerefOf (M186 [Local0])
                If ((Local3 == Local1))
                {
                    M185 = Local0
                    Local0 = M187 /* \_SB_.PCI0.VGA_.AF03.M187 */
                }
                Else
                {
                    Local0++
                }
            }

            Local0 = M185 /* \_SB_.PCI0.VGA_.AF03.M185 */
            While ((Local0 < M187))
            {
                Local0++
                If ((Local0 == M187))
                {
                    Local0 = 0x00
                }

                Local3 = DerefOf (M186 [Local0])
                If (((Local3 & Local2) == Local3))
                {
                    M184 = Local0
                    Local0 = M187 /* \_SB_.PCI0.VGA_.AF03.M187 */
                }
            }

            If ((M184 == M187))
            {
                M182 = Zero
            }
            Else
            {
                Local0 = M184 /* \_SB_.PCI0.VGA_.AF03.M184 */
                Local3 = DerefOf (M186 [Local0])
                M182 &= 0xFFFFFFF4
                M182 |= Local3
            }

            M157 = 0x04
            Return (ATIB) /* \_SB_.PCI0.VGA_.ATIB */
        }

        Method (AF04, 0, NotSerialized)
        {
            CreateWordField (ATIB, 0x00, M157)
            CreateByteField (ATIB, 0x02, M188)
            M157 = 0x03
            Local1 = 0x00
            If (CondRefOf (\_SB.LID._LID, Local4))
            {
                Local0 = \_SB.LID._LID /* External reference */
                Local1 = (Local0 ^ 0x01)
            }

            M188 = Local1
            Return (ATIB) /* \_SB_.PCI0.VGA_.ATIB */
        }

        Method (AF15, 0, NotSerialized)
        {
            ATIB = M104 /* External reference */
            Return (ATIB) /* \_SB_.PCI0.VGA_.ATIB */
        }

        Method (AF16, 1, NotSerialized)
        {
            If (Local0)
                {
                    Local1 = 0x00
                    While ((Local1 < Local0))
                    {
                        M133 ((0xD4 + Local1), Local2) = M049 /* External reference */
                        ATIB [Local1] = Local2
                        Local1++
                    }
                } = M013 (M133 (0xD4, 0x00), 0x10, Local0)
            Else
            {
                0x00 = M043 (0x00, Arg0)
                Local3
                If ((ObjectType (Local3) == 0x03))
                {
                    ATIB = Local3
                }
                Else
                {
                    ATIB [0x00] = 0x05
                    ATIB [0x01] = 0x00
                    ATIB [0x02] = 0x00
                    ATIB [0x03] = 0x00
                    ATIB [0x04] = 0x02
                }
            }

            Return (ATIB) /* \_SB_.PCI0.VGA_.ATIB */
        }

        Method (AFN0, 0, Serialized)
        {
            If ((M101 & 0x01))
            {
                CreateBitField (M164, 0x00, M165)
                M165 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN1, 1, Serialized)
        {
            If ((M101 & 0x02))
            {
                Local0 = Arg0
                M210 = Local0
                CreateBitField (M164, 0x01, M166)
                M166 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN2, 2, Serialized)
        {
            If ((M101 & 0x04))
            {
                Local0 = Arg0
                M212 = Local0
                Local0 = Arg1
                M211 = Local0 &= 0x03
                CreateBitField (M164, 0x02, M167)
                M167 = One
            }
        }

        Method (AFN3, 2, Serialized)
        {
            If ((M101 & 0x08))
            {
                Local0 = Arg0
                M214 = Local0
                Local0 = Arg1
                M213 = Local0 &= 0x03
                CreateBitField (M164, 0x03, M168)
                M168 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN4, 1, Serialized)
        {
            If ((M101 & 0x10))
            {
                Local0 = Arg0
                Local1 = M215 /* \_SB_.PCI0.VGA_.M215 */
                M215 = Local0
                If ((Local0 == Local1)){}
                Else
                {
                    CreateBitField (M164, 0x04, M169)
                    M169 = One
                    Notify (VGA, 0x81) // Information Change
                }
            }
        }

        Method (AFN5, 0, Serialized)
        {
            If ((M101 & 0x20))
            {
                CreateBitField (M164, 0x05, M170)
                M170 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN6, 0, Serialized)
        {
            If ((M101 & 0x40))
            {
                CreateBitField (M164, 0x06, M171)
                M171 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN7, 1, Serialized)
        {
            If ((M101 & 0x80))
            {
                CreateBitField (M164, 0x07, M172)
                M172 = One
                CreateByteField (ATIB, 0x0C, M181)
                M181 = Arg0
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN8, 0, Serialized)
        {
            If ((M101 & 0x0100))
            {
                CreateBitField (M164, 0x08, M173)
                M173 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFNC, 2, Serialized)
        {
            If ((M101 & 0x1000))
            {
                OperationRegion (VARM, SystemIO, 0x80, 0x02)
                Field (VARM, WordAcc, NoLock, Preserve)
                {
                    VARR,   16
                }

                Local0 = (Arg0 & 0x03)
                M303 = Local0
                VARR = Local0
                Sleep (0x01F4)
                Local0 = (Arg1 & 0xFFFFFFFF)
                M304 = Local0
                VARR = ((Local0 >> 0x10) & 0xFFFF)
                Sleep (0x01F4)
                VARR = (Local0 & 0xFFFF)
                Sleep (0x01F4)
                CreateBitField (M164, 0x0C, M300)
                M300 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Name (M189, Buffer (0x0100){})
        Name (M190, 0xFFFFFFFF)
        Name (M191, 0xFFFFFFFF)
        Method (ATPX, 2, Serialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (PX00 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (PX01 ())
            }

            If ((Arg0 == 0x02))
            {
                PX02 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.VGA_.M189 */
            }

            If ((Arg0 == 0x03))
            {
                PX03 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.VGA_.M189 */
            }

            If ((Arg0 == 0x04))
            {
                PX04 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.VGA_.M189 */
            }

            If ((Arg0 == 0x08))
            {
                Return (PX08 ())
            }

            If ((Arg0 == 0x09))
            {
                Return (PX09 ())
            }

            If ((Arg0 == 0x0B))
            {
                PX11 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.VGA_.M189 */
            }

            CreateWordField (M189, 0x00, M157)
            CreateWordField (M189, 0x02, M158)
            CreateDWordField (M189, 0x04, M160)
            M157 = 0x00
            M158 = 0x00
            M160 = 0x00
            Return (M189) /* \_SB_.PCI0.VGA_.M189 */
        }

        Method (PX00, 0, NotSerialized)
        {
            CreateWordField (M189, 0x00, M157)
            CreateWordField (M189, 0x02, M158)
            CreateDWordField (M189, 0x04, M160)
            M157 = 0x08
            M158 = 0x01
            M160 = M098 /* External reference */
            If (M098)
            {
                Local5 = 0x7FFFFFFF
                Local5 |= 0x80000000
                Store (M019 (M095 (M094 (M093 (0x2C, Local0), Store (M019 (M095 (M094 (
                    Local1 = (M093 (0x01, Zero) + 0x2C), If ((Local0 != Local5))
                                                {
                                                    M190 = Local0
                                                }, If ((Local1 != Local5))
                                                {
                                                    M191 = Local1
                                                }), Return (M189) /* \_SB_.PCI0.VGA_.M189 */)))))
            }
        }

        Method (PX01, 0, NotSerialized)
        {
            CreateWordField (M189, 0x00, M157)
            CreateDWordField (M189, 0x02, M161)
            CreateDWordField (M189, 0x06, M162)
            M157 = 0x0A
            M161 = 0x0003FC80
            M162 = M099 /* External reference */
            Return (M189) /* \_SB_.PCI0.VGA_.M189 */
        }

        Method (PX02, 1, NotSerialized)
        {
            CreateWordField (M189, 0x00, M157)
            CreateByteField (M189, 0x02, M192)
            M157 = 0x03
            M192 = (Arg0 & 0x01)
            Local7 = Buffer (0x05){}
            CreateWordField (Local7, 0x00, M197)
            CreateField (Local7, 0x10, 0x03, M200)
            CreateField (Local7, 0x13, 0x05, M199)
            CreateByteField (Local7, 0x03, M198)
            CreateByteField (Local7, 0x04, M201)
            M197 = 0x05
            M198 = 0x00
            M199 = M091 /* External reference */
            M200 = M090 /* External reference */
            Name (HPOK, 0x00)
            M133 (0x11, Local0) = M049 /* External reference */
            Local0 = M113 ()
            Local6
            M023 (0x00, M091, M090)
            If ((M192 && Local6))
            {
                M000 (0x86)
                M112 (Local0, 0x00)
                M111 (Local0, 0x01)
                Sleep (0x64)
                M112 (Local0, 0x02)
                M112 (Local0, 0x01)
                M000 (0x87)
                HPOK = 0x00
                Sleep (0x64)
                M201 = 0x01
                0x06 = \_SB.ALIB /* External reference */
                Local7
                Local6
                Local2 = 0x00
                While ((Local2 < 0x0F))
                {
                    M023 (0x00, M091, M090)
                    Local4 = 0x01
                    Local5 = 0xC8
                    While ((Local4 && Local5))
                    {
                        0xA5 = M021 (0x00, M091, M090)
                        Local0
                        Local0 &= 0x7F
                        If (((Local0 >= 0x10) && (Local0 != 0x7F)))
                        {
                            Local4 = 0x00
                        }
                        Else
                        {
                            Sleep (0x05)
                            Local5--
                        }
                    }

                    If (!Local4)
                    {
                        M090 = M024 (0x00, M091)
                        Local5
                        If (Local5)
                        {
                            M026 (0x00, M091, M090)
                            Sleep (0x05)
                            Local2++
                        }
                        Else
                        {
                            Local0 = 0x00
                            If ((M025 == 0x00))
                            {
                                M091
                                M090
                                Ones
                                Local0 = 0x01
                            }

                            If (Local0)
                            {
                                M111 (M049, M133 (0x17, 0x01))
                                M111 (M049, M133 (0x18, 0x01))
                                HPOK = 0x01
                                Local2 = 0x10
                            }
                            Else
                            {
                                HPOK = 0x00
                                Local2 = 0x10
                            }
                        }
                    }
                    Else
                    {
                        Local2 = 0x10
                    }
                }

                If (!HPOK)
                {
                    M000 (0x88)
                    Store (M019 (M095 (M094 (M093 (0x00, Local1), Sleep (0x0A), Local4 = 0x01), 
                        Local5 = 0x05, While ((Local4 && Local5))
                                {
                                    0xA5 = M021 (0x00, M091, M090)
                                    Local0
                                    Local0 &= 0x7F
                                    If (((Local0 <= 0x04) || (Local0 == 0x1F)))
                                    {
                                        Local4 = 0x00
                                    }
                                    Else
                                    {
                                        M000 (0x89) = M019 (M095 (M094 (M093 (0x00, Local0), Sleep (0x05), 
                                            Local5--), M201 = 0x00, \_SB.ALIB, 0x06), Local7, \_SB.PCI0.LPC0.EC0.GATY = 0x01)
                                    }
                                }, Else
                                {
                                    M000 (0x8A)
                                    \_SB.PCI0.LPC0.EC0.GATY = 0x00
                                    M201 = 0x00
                                    \_SB.ALIB
                                    0x06
                                    Local7
                                    M000 (0x8B)
                                    M111 (M049, M133 (0x17, 0x00))
                                    M111 (M049, M133 (0x18, 0x00))
                                    M112 (Local0, 0x00)
                                    Sleep (0x0A)
                                    M111 (Local0, 0x00)
                                    M023 (0x00, M091, M090)
                                    Store (M019 (M095 (M094 (M093 (0x00, Local1), Sleep (0x0A), Local4 = 0x01), 
                                        Local5 = 0x05, While ((Local4 && Local5))
                                                {
                                                    0xA5 = M021 (0x00, M091, M090)
                                                    Local0
                                                    Local0 &= 0x7F
                                                    If (((Local0 <= 0x04) || (Local0 == 0x1F)))
                                                    {
                                                        Local4 = 0x00
                                                    }
                                                    Else
                                                    {
                                                        Store (M019 (M095 (M094 (M093 (0x00, Local1), Sleep (0x05), Local5--), 
                                                            HPOK = 0x02, M000 (0x8C), If (HPOK)
                                                                    {
                                                                        Local5 = 0x7FFFFFFF
                                                                        Local5 |= 0x80000000
                                                                        Store (M019 (M095 (M094 (M093 (0x00, Local0), If (((HPOK == 0x01) && 
                                                                            (Local0 != Local5)))
                                                                                        {
                                                                                            M020 (M095 (M094 (M093 (0x4C, M190), Sleep (0x0A), If ((M191 != 
                                                                                                Local5))
                                                                                                        {
                                                                                                            M020 (M095 (M094 (M191 = (M093 (0x01, Zero) + 0x4C), Sleep (0x0A))))
                                                                                                        })))
                                                                                        })))
                                                                    }))
                                                    }
                                                }))
                                }))
                }
            }
        }

        Method (PX03, 1, NotSerialized)
        {
            CreateWordField (M189, 0x00, M157)
            CreateWordField (M189, 0x02, M195)
            M157 = 0x04
            M195 = (Arg0 & 0x01)
            If (M195)
            {
                M111 (M049, M133 (0x17, 0x01))
            }
            Else
            {
                M111 (M049, M133 (0x17, 0x00))
            }
        }

        Method (PX04, 1, NotSerialized)
        {
            CreateWordField (M189, 0x00, M157)
            CreateWordField (M189, 0x02, M196)
            M157 = 0x04
            M196 = (Arg0 & 0x01)
            If (M196)
            {
                M111 (M049, M133 (0x18, 0x01))
            }
            Else
            {
                M111 (M049, M133 (0x18, 0x00))
            }
        }

        Method (PX08, 0, NotSerialized)
        {
            CreateWordField (M189, 0x00, M193)
            CreateWordField (M189, 0x02, M157)
            M133 (0x19, Local0) = M049 /* External reference */
            M193 = Local0
            M157 = 0x05
            Local0 *= M157 /* \_SB_.PCI0.VGA_.PX08.M157 */
            Local1 = 0x00
            While ((Local1 < Local0))
            {
                M133 ((0x1A + Local1), Local2) = M049 /* External reference */
                M189 [(0x04 + Local1)] = Local2
                Local1++
            }

            Return (M189) /* \_SB_.PCI0.VGA_.M189 */
        }

        Method (PX09, 0, NotSerialized)
        {
            CreateWordField (M189, 0x00, M193)
            CreateWordField (M189, 0x02, M157)
            M133 (0x7E, Local0) = M049 /* External reference */
            M193 = Local0
            M157 = 0x03
            Local0 *= M157 /* \_SB_.PCI0.VGA_.PX09.M157 */
            Local1 = 0x00
            While ((Local1 < Local0))
            {
                M133 ((0x7F + Local1), Local2) = M049 /* External reference */
                M189 [(0x04 + Local1)] = Local2
                Local1++
            }

            Return (M189) /* \_SB_.PCI0.VGA_.M189 */
        }

        Method (PX11, 1, NotSerialized)
        {
            CreateWordField (M189, 0x00, M157)
            CreateByteField (M189, 0x02, M162)
            M157 = 0x03
            M162 = (Arg0 & 0x01)
            Local2 = M162 /* \_SB_.PCI0.VGA_.PX11.M162 */
            Local0 = M131 /* External reference */
            If (Local0)
            {
                M131 = M049 /* External reference */
                0x10
                Local0
                M131 = M049 /* External reference */
                0x11
                Local1
                Local1 = (M084 + ((Local0 * 0x0100) + Local1))
                M012 (Local1, 0x0A, 0x00, 0x08, Local2)
            }
        }

        Name (M207, Buffer (0xFF){})
        Name (M208, Buffer (0x03){})
        Name (M204, 0x01)
        Method (ATCS, 2, Serialized)
        {
            If ((Arg0 == 0x00))
            {
                ATC0 ()
            }

            If ((Arg0 == 0x01))
            {
                ATC1 ()
            }

            If ((Arg0 == 0x02))
            {
                ATC2 (Arg1)
            }

            If ((Arg0 == 0x03))
            {
                ATC3 ()
            }

            If ((Arg0 == 0x04))
            {
                ATC4 (Arg1)
            }

            If ((Arg0 == 0x06))
            {
                ATC6 (Arg1)
            }

            If ((Arg0 == 0x07))
            {
                ATC7 (Arg1)
            }

            Return (M207) /* \_SB_.PCI0.VGA_.M207 */
        }

        Method (ATC0, 0, NotSerialized)
        {
            CreateWordField (M207, 0x00, M157)
            CreateWordField (M207, 0x02, M158)
            CreateDWordField (M207, 0x04, M160)
            M157 = 0x08
            M158 = 0x01
            M160 = 0x6F
            0x00 = \_SB.ALIB /* External reference */
            M207
            M207
        }

        Method (ATC1, 0, Serialized)
        {
            CreateWordField (M207, 0x00, M157)
            CreateDWordField (M207, 0x02, M161)
            CreateDWordField (M207, 0x06, M162)
            CreateField (M207, 0x30, 0x01, M203)
            M157 = 0x0A
            M161 = 0x01
            If ((Local0 & 0x80))
                {
                    M204 = (Local0 & 0x01)
                } = M100 (M162, M133 (0x15, Local0) = 
                        M049 /* External reference */)
            ElseIf ((Local0 & 0x7F))
            {
                Local0 = M113 ()
                M204
            }

            M203 = M204 /* \_SB_.PCI0.VGA_.M204 */
        }

        Method (ATC2, 1, Serialized)
        {
            CreateWordField (M207, 0x00, M157)
            CreateByteField (M207, 0x02, M205)
            M157 = 0x03
            M205 = 0x01
            0x02 = \_SB.ALIB /* External reference */
            Arg0
            M207
        }

        Method (ATC3, 0, Serialized)
        {
            CreateWordField (M207, 0x00, M157)
            CreateByteField (M207, 0x02, M205)
            CreateWordField (M208, 0x00, M197)
            CreateByteField (M208, 0x02, M206)
            M157 = 0x03
            M205 = 0x01
            M197 = 0x03
            M206 = 0x01
            0x03 = \_SB.ALIB /* External reference */
            M208
            M207
        }

        Method (ATC4, 1, Serialized)
        {
            CreateWordField (M207, 0x00, M157)
            CreateByteField (M207, 0x02, M209)
            M157 = 0x03
            M209 = 0x01
            0x04 = \_SB.ALIB /* External reference */
            Arg0
            M207
        }

        Method (ATC6, 1, Serialized)
        {
            CreateWordField (M207, 0x00, M157)
            CreateDWordField (M207, 0x02, M234)
            M157 = 0x06
            M234 = M233 /* External reference */
        }

        Method (ATC7, 1, Serialized)
        {
            M232 (M235 (0x00, 0x01))
        }

        Name (M202, Buffer (0xFF00)
        {
             0x00                                             // .
        })
        Method (XTRM, 2, Serialized)
        {
            Local0 = (Arg0 + Arg1)
            Local4 = M105 /* External reference */
            If ((Local4 > 0xFF00))
            {
                Local4 = 0xFF00
            }

            If ((Local0 <= Local4))
            {
                Local1 = (Arg1 * 0x08)
                Local2 = (Arg0 * 0x08)
                M202 = M106 /* External reference */
                CreateField (M202, Local2, Local1, TEMP)
                Name (RETB, Buffer (Arg1){})
                RETB = TEMP /* \_SB_.PCI0.VGA_.XTRM.TEMP */
                Return (RETB) /* \_SB_.PCI0.VGA_.XTRM.RETB */
            }
            ElseIf ((Arg0 < Local4))
            {
                Local3 = (M105 - Arg0)
                Local1 = (Local3 * 0x08)
                Local2 = (Arg0 * 0x08)
                M202 = M106 /* External reference */
                CreateField (M202, Local2, Local1, TEM)
                Name (RETC, Buffer (Local3){})
                RETC = TEM /* \_SB_.PCI0.VGA_.XTRM.TEM_ */
                Return (RETC) /* \_SB_.PCI0.VGA_.XTRM.RETC */
            }
            Else
            {
                Name (RETD, Buffer (0x01){})
                Return (RETD) /* \_SB_.PCI0.VGA_.XTRM.RETD */
            }
        }
    }

    Method (AFN0, 0, Serialized)
    {
        If ((M087 == 0x00))
        {
            \_SB.PCI0.VGA.AFN0 ()
        }

        If ((M087 == 0x01))
        {
            \_SB.PCI0.GPP0.VGA.AFN0 ()
        }
    }

    Method (AFN1, 1, Serialized)
    {
        If ((M087 == 0x00))
        {
            \_SB.PCI0.VGA.AFN1 (Arg0)
        }

        If ((M087 == 0x01))
        {
            \_SB.PCI0.GPP0.VGA.AFN1 (Arg0)
        }
    }

    Method (AFN2, 2, Serialized)
    {
        If ((M087 == 0x00))
        {
            \_SB.PCI0.VGA.AFN2 (Arg0, Arg1)
        }

        If ((M087 == 0x01))
        {
            \_SB.PCI0.GPP0.VGA.AFN2 (Arg0, Arg1)
        }
    }

    Method (AFN3, 2, Serialized)
    {
        If ((M087 == 0x00))
        {
            \_SB.PCI0.VGA.AFN3 (Arg0, Arg1)
        }

        If ((M087 == 0x01))
        {
            \_SB.PCI0.GPP0.VGA.AFN3 (Arg0, Arg1)
        }
    }

    Method (AFN4, 1, Serialized)
    {
        If ((M087 == 0x00))
        {
            \_SB.PCI0.VGA.AFN4 (Arg0)
        }

        If ((M087 == 0x01))
        {
            \_SB.PCI0.GPP0.VGA.AFN4 (Arg0)
        }
    }

    Method (AFN5, 0, Serialized)
    {
        If ((M087 == 0x00))
        {
            \_SB.PCI0.VGA.AFN5 ()
        }

        If ((M087 == 0x01))
        {
            \_SB.PCI0.GPP0.VGA.AFN5 ()
        }
    }

    Method (AFN6, 0, Serialized)
    {
        If ((M087 == 0x00))
        {
            \_SB.PCI0.VGA.AFN6 ()
        }

        If ((M087 == 0x01))
        {
            \_SB.PCI0.GPP0.VGA.AFN6 ()
        }
    }

    Method (AFN7, 1, Serialized)
    {
        If ((M087 == 0x00))
        {
            \_SB.PCI0.VGA.AFN7 (Arg0)
        }

        If ((M087 == 0x01))
        {
            \_SB.PCI0.GPP0.VGA.AFN7 (Arg0)
        }
    }

    Method (AFN8, 0, Serialized)
    {
        If ((M087 == 0x00))
        {
            \_SB.PCI0.VGA.AFN8 ()
        }

        If ((M087 == 0x01))
        {
            \_SB.PCI0.GPP0.VGA.AFN8 ()
        }
    }

    Method (AFNC, 2, Serialized)
    {
        If ((M087 == 0x00))
        {
            \_SB.PCI0.VGA.AFNC (Arg0, Arg1)
        }

        If ((M087 == 0x01))
        {
            \_SB.PCI0.GPP0.VGA.AFNC (Arg0, Arg1)
        }
    }
}



SSDT4
-----
DefinitionBlock ("", "SSDT", 2, "LENOVO", "Tpm2Tabl", 0x00001000)
{
    Scope (\_SB)
    {
        Device (TPM)
        {
            Name (_HID, "MSFT0101" /* TPM 2.0 Security Device */)  // _HID: Hardware ID
            Name (_STR, Unicode ("TPM 2.0 Device"))  // _STR: Description String
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                Memory32Fixed (ReadOnly,
                    0xFED40000,         // Address Base
                    0x00005000,         // Address Length
                    )
            })
            OperationRegion (SMIP, SystemIO, 0xB0, 0x01)
            Field (SMIP, ByteAcc, NoLock, Preserve)
            {
                IOB2,   8
            }

            OperationRegion (TPMR, SystemMemory, 0xFED40000, 0x5000)
            Field (TPMR, AnyAcc, NoLock, Preserve)
            {
                ACC0,   8
            }

            OperationRegion (TNVS, SystemMemory, 0xBDC97000, 0x26)
            Field (TNVS, AnyAcc, NoLock, Preserve)
            {
                PPIN,   8, 
                PPIP,   32, 
                PPRP,   32, 
                PPRQ,   32, 
                PPRM,   32, 
                LPPR,   32, 
                FRET,   32, 
                MCIN,   8, 
                MCIP,   32, 
                MORD,   32, 
                MRET,   32
            }

            Method (PTS, 1, Serialized)
            {
                If (((Arg0 < 0x06) && (Arg0 > 0x03)))
                {
                    If (!(MORD & 0x10))
                    {
                        MCIP = 0x02
                        IOB2 = MCIN /* \_SB_.TPM_.MCIN */
                    }
                }

                Return (0x00)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((ACC0 == 0xFF))
                {
                    Return (0x00)
                }

                Return (0x0F)
            }

            Method (HINF, 3, Serialized)
            {
                Switch (ToInteger (Arg1))
                {
                    Case (0x00)
                    {
                        Return (Buffer (0x01)
                        {
                             0x03                                             // .
                        })
                    }
                    Case (0x01)
                    {
                        Name (TPMV, Package (0x02)
                        {
                            0x01, 
                            Package (0x02)
                            {
                                0x02, 
                                0x00
                            }
                        })
                        If ((_STA () == 0x00))
                        {
                            Return (Package (0x01)
                            {
                                0x00
                            })
                        }

                        Return (TPMV) /* \_SB_.TPM_.HINF.TPMV */
                    }
                    Default
                    {
                        BreakPoint
                    }

                }

                Return (Buffer (0x01)
                {
                     0x00                                             // .
                })
            }

            Name (TPM2, Package (0x02)
            {
                Zero, 
                Zero
            })
            Name (TPM3, Package (0x03)
            {
                Zero, 
                Zero, 
                Zero
            })
            Method (TPPI, 3, Serialized)
            {
                Switch (ToInteger (Arg1))
                {
                    Case (0x00)
                    {
                        Return (Buffer (0x02)
                        {
                             0xFF, 0x01                                       // ..
                        })
                    }
                    Case (0x01)
                    {
                        Return ("1.3")
                    }
                    Case (0x02)
                    {
                        PPRQ = DerefOf (Arg2 [0x00])
                        PPIP = 0x02
                        IOB2 = PPIN /* \_SB_.TPM_.PPIN */
                        Return (FRET) /* \_SB_.TPM_.FRET */
                    }
                    Case (0x03)
                    {
                        TPM2 [0x01] = PPRQ /* \_SB_.TPM_.PPRQ */
                        Return (TPM2) /* \_SB_.TPM_.TPM2 */
                    }
                    Case (0x04)
                    {
                        Return (0x02)
                    }
                    Case (0x05)
                    {
                        PPIP = 0x05
                        IOB2 = PPIN /* \_SB_.TPM_.PPIN */
                        TPM3 [0x01] = LPPR /* \_SB_.TPM_.LPPR */
                        TPM3 [0x02] = PPRP /* \_SB_.TPM_.PPRP */
                        Return (TPM3) /* \_SB_.TPM_.TPM3 */
                    }
                    Case (0x06)
                    {
                        Return (0x03)
                    }
                    Case (0x07)
                    {
                        PPIP = 0x07
                        PPRQ = DerefOf (Arg2 [0x00])
                        PPRM = 0x00
                        If ((PPRQ == 0x17))
                        {
                            PPRM = DerefOf (Arg2 [0x01])
                        }

                        IOB2 = PPIN /* \_SB_.TPM_.PPIN */
                        Return (FRET) /* \_SB_.TPM_.FRET */
                    }
                    Case (0x08)
                    {
                        PPIP = 0x08
                        PPRQ = DerefOf (Arg2 [0x00])
                        IOB2 = PPIN /* \_SB_.TPM_.PPIN */
                        Return (FRET) /* \_SB_.TPM_.FRET */
                    }
                    Default
                    {
                        BreakPoint
                    }

                }

                Return (0x01)
            }

            Method (TMCI, 3, Serialized)
            {
                Switch (ToInteger (Arg1))
                {
                    Case (0x00)
                    {
                        Return (Buffer (0x01)
                        {
                             0x03                                             // .
                        })
                    }
                    Case (0x01)
                    {
                        MORD = DerefOf (Arg2 [0x00])
                        MCIP = 0x01
                        IOB2 = MCIN /* \_SB_.TPM_.MCIN */
                        Return (MRET) /* \_SB_.TPM_.MRET */
                    }
                    Default
                    {
                        BreakPoint
                    }

                }

                Return (0x01)
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("cf8e16a5-c1e8-4e25-b712-4f54a96702c8") /* Unknown UUID */))
                {
                    Return (HINF (Arg1, Arg2, Arg3))
                }

                If ((Arg0 == ToUUID ("3dddfaa6-361b-4eb4-a424-8d10089d1653") /* Physical Presence Interface */))
                {
                    Return (TPPI (Arg1, Arg2, Arg3))
                }

                If ((Arg0 == ToUUID ("376054ed-cc13-4675-901c-4756d7f2d45d") /* Unknown UUID */))
                {
                    Return (TMCI (Arg1, Arg2, Arg3))
                }

                Return (Buffer (0x01)
                {
                     0x00                                             // .
                })
            }
        }
    }
}



SSDT5
-----
DefinitionBlock ("", "SSDT", 2, "LENOVO", "AGESA   ", 0x00000002)
{
    /*
     * iASL Warning: There was 1 external control method found during
     * disassembly, but only 0 were resolved (1 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.ALIC, MethodObj)    // Warning: Unknown method, guessing 2 arguments

    Scope (\_SB)
    {
        Name (AGRB, 0xF8000000)
        Name (ADBG, Buffer (0x0100){})
        Name (ADAT, Buffer (0x0200)
        {
            /* 0000 */  0x01, 0x7A, 0x7A, 0x7A, 0x00, 0x02, 0x00, 0x00,  // .zzz....
            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0020 */  0x03, 0x03, 0x01, 0x03, 0x00, 0x00, 0x00, 0x04,  // ........
            /* 0028 */  0x07, 0x00, 0x03, 0x00, 0x01, 0x02, 0x01, 0x00,  // ........
            /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x01, 0x03,  // ........
            /* 0038 */  0x00, 0x00, 0x00, 0x02, 0x02, 0x04, 0x05, 0x01,  // ........
            /* 0040 */  0x00, 0x02, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0048 */  0x03, 0x03, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0050 */  0x01, 0x06, 0x07, 0x02, 0x00, 0x02, 0x02, 0x00,  // ........
            /* 0058 */  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,  // ........
            /* 0060 */  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0068 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0070 */  0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00,  // ........
            /* 0078 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0080 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0088 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0090 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0098 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0100 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0108 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0110 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0118 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0120 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0128 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0130 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0138 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0140 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0148 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0150 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0158 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0160 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0168 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0170 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0178 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0180 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0188 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0190 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0198 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
        })
        Method (ALIB, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                CreateWordField (Arg1, 0x00, A010)
                CreateWordField (Arg1, 0x02, A011)
                CreateDWordField (Arg1, 0x04, A012)
                Local0 = Buffer (0x0100){}
                CreateWordField (Local0, 0x00, A013)
                A013 = A010 /* \_SB_.ALIB.A010 */
                CreateWordField (Local0, 0x02, A014)
                A014 = A011 /* \_SB_.ALIB.A011 */
                CreateDWordField (Local0, 0x04, A015)
                A015 = A012 /* \_SB_.ALIB.A012 */
                A015 &= ~0x0F
                If ((DerefOf (\_SB.ADAT [0x00]) > 0x00))
                {
                    Local1 = 0x0F
                }
                Else
                {
                    Local1 = 0x01
                }

                A015 |= Local1
                Return (Local0)
            }

            If ((Arg0 == 0x01))
            {
                Local0 = DerefOf (Arg1 [0x02])
                Return (A016 (Local0))
            }

            If ((Arg0 == 0x02))
            {
                Return (A017 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Local0 = DerefOf (Arg1 [0x02])
                Return (A018 (Local0))
            }

            If ((Arg0 == 0x06))
            {
                Local0 = DerefOf (Arg1 [0x04])
                Local1 = DerefOf (Arg1 [0x02])
                Return (A021 (Local0, Local1))
            }

            If ((Arg0 == 0x0A))
            {
                Local0 = DerefOf (Arg1 [0x02])
                Return (A022 (Local0))
            }

            If ((Arg0 == 0x0B))
            {
                Local0 = DerefOf (Arg1 [0x02])
                Local1 = DerefOf (Arg1 [0x03])
                Local2 = DerefOf (Arg1 [0x04])
                Local2 |= (DerefOf (Arg1 [0x05]) << 0x08)
                Local2 |= (DerefOf (Arg1 [0x06]) << 0x10)
                Local2 |= (DerefOf (Arg1 [0x07]) << 0x18)
                Local3 = DerefOf (Arg1 [0x08])
                Local3 |= (DerefOf (Arg1 [0x09]) << 0x08)
                Local3 |= (DerefOf (Arg1 [0x0A]) << 0x10)
                Local3 |= (DerefOf (Arg1 [0x0B]) << 0x18)
                Local4 = DerefOf (Arg1 [0x0C])
                Local4 |= (DerefOf (Arg1 [0x0D]) << 0x08)
                Local4 |= (DerefOf (Arg1 [0x0E]) << 0x10)
                Local4 |= (DerefOf (Arg1 [0x0F]) << 0x18)
                Return (A023 (Local0, Local1, Local2, Local3, Local4))
            }

            If ((Arg0 == 0x0C))
            {
                A024 (Arg1)
            }

            Return (0x00)
        }

        Method (A021, 2, NotSerialized)
        {
            Local0 = 0x00
            While ((Local0 < 0x05))
            {
                Local1 = A085 (Local0, Arg1)
                If ((Local1 == 0x01))
                {
                    Local1 = A086 (Local0, Arg0)
                    Break
                }

                Local0++
            }

            Local7 = Buffer (0x0A){}
            CreateWordField (Local7, 0x00, A013)
            CreateByteField (Local7, 0x02, A025)
            CreateByteField (Local7, 0x03, A087)
            A013 = 0x04
            A025 = 0x00
            A087 = Local1
            Return (Local7)
        }

        Method (A085, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A077 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A077 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A077 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A077 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A077 (Arg1))
            }
        }

        Method (A086, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A078 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A078 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A078 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A078 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A078 (Arg1))
            }
        }

        Name (AD00, 0x00)
        Name (DK00, 0x00)
        Method (A016, 1, NotSerialized)
        {
            If ((AD00 == Arg0))
            {
                Return (0x00)
            }

            AD00 = Arg0
            A007 ()
        }

        Method (A022, 1, NotSerialized)
        {
            DK00 = Arg0
        }

        Method (A023, 5, NotSerialized)
        {
        }

        Name (AP01, 0x00)
        Name (AP02, 0x00)
        Name (AP03, 0x00)
        Name (AP05, 0x00)
        Name (AP0B, 0xFF)
        Name (AP10, 0x00)
        Method (A017, 1, NotSerialized)
        {
            Local7 = Buffer (0x0100){}
            CreateWordField (Local7, 0x00, A013)
            A013 = 0x03
            CreateByteField (Local7, 0x02, A025)
            A025 = 0x01
            If ((DerefOf (\_SB.ADAT [0x00]) == 0x01))
            {
                A025 = 0x02
                Return (Local7)
            }

            If ((DerefOf (\_SB.ADAT [0x00]) == 0x00))
            {
                A025 = 0x01
                Return (Local7)
            }

            A026 (Arg0)
            If ((AP05 != 0x01))
            {
                Return (Local7)
            }

            A027 ()
            A025 = 0x02
            Return (Local7)
        }

        Method (A008, 0, NotSerialized)
        {
            If ((DerefOf (\_SB.ADAT [0x00]) <= 0x01))
            {
                Return (0x00)
            }

            If ((AP05 != 0x01))
            {
                Return (0x00)
            }

            A027 ()
        }

        Method (A003, 1, NotSerialized)
        {
            If ((Arg0 == 0x03))
            {
                AP01 = 0x00
            }
        }

        Method (A006, 1, NotSerialized)
        {
            AP10 = 0x01
        }

        Method (A018, 1, NotSerialized)
        {
            AP05 = Arg0
            If ((DerefOf (\_SB.ADAT [0x00]) <= 0x01))
            {
                Return (0x00)
            }

            Local1 = AP0B /* \_SB_.AP0B */
            If ((AP05 == 0x00))
            {
                Local0 = 0x00
                While ((Local0 < 0x05))
                {
                    A028 (Local0)
                    Local0++
                }

                AP0B = 0x00
            }

            A027 ()
            AP0B = Local1
            Local7 = Buffer (0x0100){}
            Local7 [0x00] = 0x03
            Local7 [0x01] = 0x00
            Local7 [0x02] = 0x00
            Return (Local7)
        }

        Method (A029, 0, NotSerialized)
        {
            If ((AP0B != 0xFF))
            {
                Return (AP0B) /* \_SB_.AP0B */
            }

            Return (AD00) /* \_SB_.AD00 */
        }

        Method (A026, 1, NotSerialized)
        {
            CreateWordField (Arg0, 0x02, AP06)
            CreateWordField (Arg0, 0x04, AP07)
            CreateWordField (Arg0, 0x06, AP08)
            CreateByteField (Arg0, 0x08, AP09)
            CreateByteField (Arg0, 0x09, AP0A)
            Local0 = 0x00
            While ((Local0 < 0x05))
            {
                If ((A030 (Local0, AP06) == 0x01))
                {
                    If (((AP07 & AP08) == 0x01))
                    {
                        Local1 = A031 (Local0)
                        A032 (Local0, Local1)
                    }
                    Else
                    {
                        A032 (Local0, AP0A)
                    }

                    Break
                }

                Local0++
            }
        }

        Method (A033, 0, NotSerialized)
        {
            AP02 = 0x01
            Local0 = 0x00
            While ((Local0 < 0x05))
            {
                Local1 = A034 (Local0)
                If ((Local1 > AP02))
                {
                    AP02 = Local1
                }

                Local0++
            }
        }

        Method (A035, 0, NotSerialized)
        {
            AP03 = 0x00
            Local0 = 0x00
            While ((Local0 < 0x05))
            {
                Local1 = A036 (Local0)
                If ((Local1 > AP03))
                {
                    AP03 = Local1
                }

                Local0++
            }
        }

        Method (A027, 0, NotSerialized)
        {
            A035 ()
            A033 ()
            If ((AP02 != AP01))
            {
                A009 (AP02, AP01)
            }

            If ((AP02 > AP01))
            {
                \_SB.A037 (AP02)
                AP01 = AP02 /* \_SB_.AP02 */
            }

            Local0 = 0x00
            While ((Local0 < 0x05))
            {
                Local1 = A034 (Local0)
                Local2 = A038 (Local0)
                If ((Local1 != Local2))
                {
                    A039 (Local0, Local1)
                }
                ElseIf ((AP10 == 0x01))
                {
                    A039 (Local0, Local1)
                }

                Local0++
            }

            If ((AP02 < AP01))
            {
                \_SB.A037 (AP02)
                AP01 = AP02 /* \_SB_.AP02 */
            }
            ElseIf ((AP10 == 0x01))
            {
                \_SB.A037 (AP02)
                AP01 = AP02 /* \_SB_.AP02 */
            }

            AP10 = 0x00
        }

        Method (A039, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A040 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A040 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A040 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A040 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A040 (Arg1))
            }
        }

        Method (A038, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A041 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A041 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A041 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A041 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A041 ())
            }
        }

        Method (A034, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A042 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A042 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A042 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A042 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A042 ())
            }
        }

        Method (A036, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A043 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A043 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A043 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A043 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A043 ())
            }
        }

        Method (A031, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A044 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A044 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A044 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A044 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A044 ())
            }
        }

        Method (A032, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A045 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A045 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A045 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A045 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A045 (Arg1))
            }
        }

        Method (A030, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A046 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A046 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A046 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A046 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A046 (Arg1))
            }
        }

        Method (A028, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A047 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A047 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A047 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A047 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A047 ())
            }
        }

        OperationRegion (A106, SystemMemory, (AGRB + 0x000C4000), 0x1000)
        Field (A106, ByteAcc, NoLock, Preserve)
        {
            Offset (0x124), 
                ,   22, 
            A107,   1, 
            A108,   4
        }

        OperationRegion (A109, SystemMemory, (AGRB + 0x000C5000), 0x1000)
        Field (A109, ByteAcc, NoLock, Preserve)
        {
            Offset (0x170), 
                ,   14, 
            A110,   1
        }

        OperationRegion (A092, SystemMemory, AGRB, 0x1000)
        Field (A092, ByteAcc, NoLock, Preserve)
        {
            Offset (0x60), 
            A093,   32, 
            Offset (0xB8), 
            A094,   32, 
            Offset (0xC8), 
            A095,   32
        }

        BankField (A092, A094, 0x13000000, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            A096,   32
        }

        BankField (A092, A094, 0x13000010, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            A097,   32
        }

        BankField (A092, A094, 0x13000020, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            A098,   32
        }

        BankField (A092, A094, 0x13000024, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            A099,   32
        }

        BankField (A092, A094, 0x13000028, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            A100,   32
        }

        BankField (A092, A094, 0x1300002C, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            A101,   32
        }

        BankField (A092, A094, 0x13000030, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            A102,   32
        }

        BankField (A092, A094, 0x13000034, DWordAcc, NoLock, Preserve)
        {
            Offset (0xBC), 
            A103,   32
        }

        OperationRegion (A104, SystemMemory, (AGRB + 0x8000), 0x1000)
        Field (A104, DWordAcc, NoLock, Preserve)
        {
            A105,   32
        }

        OperationRegion (A111, SystemMemory, AGRB, 0x1000)
        Field (A111, ByteAcc, NoLock, Preserve)
        {
            Offset (0xE0), 
            A112,   32
        }

        BankField (A111, A112, 0x01110004, DWordAcc, NoLock, Preserve)
        {
            Offset (0xE4), 
                ,   12, 
            A113,   1
        }

        BankField (A111, A112, 0x01318070, DWordAcc, NoLock, Preserve)
        {
            Offset (0xE4), 
            A114,   1
        }

        BankField (A111, A112, 0x01410129, DWordAcc, NoLock, Preserve)
        {
            Offset (0xE4), 
            A115,   16
        }

        Method (A037, 1, NotSerialized)
        {
            If ((Arg0 == 0x01))
            {
                Local0 = DerefOf (\_SB.ADAT [0x01])
            }

            If ((Arg0 == 0x02))
            {
                Local0 = DerefOf (\_SB.ADAT [0x02])
            }

            If ((Arg0 == 0x03))
            {
                Local0 = DerefOf (\_SB.ADAT [0x03])
            }

            If ((Local0 > 0xF7))
            {
                Local0 = 0xF7
            }

            Local2 = (0x0271 * ((Local1 = (0xF7 - Local0)) + 0x01))
            Divide (Local2 *= 0x04, 0x64, Local3, Local4)
            Local7 = Buffer (0x18){}
            CreateDWordField (Local7, 0x00, A116)
            CreateDWordField (Local7, 0x04, A117)
            CreateDWordField (Local7, 0x08, A118)
            CreateDWordField (Local7, 0x0C, A119)
            CreateDWordField (Local7, 0x10, A120)
            CreateDWordField (Local7, 0x14, A121)
            A116 = Local4
            A122 (0x3A, Local7)
        }

        Method (A123, 3, NotSerialized)
        {
        }

        Method (A081, 3, NotSerialized)
        {
            If (((Arg1 >= 0x08) && (Arg2 >= 0x08)))
            {
                If ((Arg0 == 0x01))
                {
                    A114 = 0x01
                }
                Else
                {
                    If ((Arg1 > Arg2))
                    {
                        Local1 = (Arg1 - Arg2)
                        Local2 = (Arg2 - 0x08)
                    }
                    Else
                    {
                        Local1 = (Arg2 - Arg1)
                        Local2 = (Arg1 - 0x08)
                    }

                    Local1++
                    Local1 = (0x01 << Local1)
                    Local1--
                    Local1 <<= Local2
                    Local0 = (A115 & ~Local1)
                    If ((Local0 == 0x00))
                    {
                        A113 = 0x00
                    }
                    Else
                    {
                        A113 = 0x01
                    }
                }
            }
        }

        Method (A083, 3, NotSerialized)
        {
            If (((Arg1 >= 0x08) && (Arg2 >= 0x08)))
            {
                If ((Arg0 == 0x01))
                {
                    A113 = 0x01
                }
                ElseIf (((A115 & 0xFF) == 0x00))
                {
                    A114 = 0x00
                }
            }
        }

        Method (A122, 2, Serialized)
        {
            CreateDWordField (Arg1, 0x00, A124)
            CreateDWordField (Arg1, 0x04, A125)
            CreateDWordField (Arg1, 0x08, A126)
            CreateDWordField (Arg1, 0x0C, A127)
            CreateDWordField (Arg1, 0x10, A128)
            CreateDWordField (Arg1, 0x14, A129)
            A097 = 0x00
            While ((A097 != 0x00))
            {
                A097 = 0x00
            }

            A098 = A124 /* \_SB_.A122.A124 */
            A099 = A125 /* \_SB_.A122.A125 */
            A100 = A126 /* \_SB_.A122.A126 */
            A101 = A127 /* \_SB_.A122.A127 */
            A102 = A128 /* \_SB_.A122.A128 */
            A103 = A129 /* \_SB_.A122.A129 */
            A096 = Arg0
            While ((A097 == 0x00)){}
        }

        Method (A050, 1, NotSerialized)
        {
        }

        Method (A005, 1, NotSerialized)
        {
            Local0 = A110 /* \_SB_.A110 */
            If ((Arg0 == 0x00))
            {
                A110 = 0x01
            }
            Else
            {
                A110 = 0x00
            }

            Return (Local0)
        }

        Method (A004, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Local7 = Buffer (0x18){}
                CreateDWordField (Local7, 0x00, A116)
                CreateDWordField (Local7, 0x04, A117)
                CreateDWordField (Local7, 0x08, A118)
                CreateDWordField (Local7, 0x0C, A119)
                CreateDWordField (Local7, 0x10, A120)
                CreateDWordField (Local7, 0x14, A121)
                A116 = 0x0801
                A122 (0x60, Local7)
            }
        }

        Method (A024, 1, Serialized)
        {
            CreateWordField (Arg0, 0x00, A130)
            Local7 = Buffer (0x18){}
            CreateDWordField (Local7, 0x00, A116)
            CreateDWordField (Local7, 0x04, A117)
            CreateDWordField (Local7, 0x08, A118)
            CreateDWordField (Local7, 0x0C, A119)
            CreateDWordField (Local7, 0x10, A120)
            CreateDWordField (Local7, 0x14, A121)
            Local0 = 0x02
            While ((Local0 < A130))
            {
                Local1 = DerefOf (Arg0 [Local0])
                Local0++
                Local2 = DerefOf (Arg0 [Local0])
                Local0++
                Local2 |= (DerefOf (Arg0 [Local0]) << 0x08)
                Local0++
                Local2 |= (DerefOf (Arg0 [Local0]) << 0x10)
                Local0++
                Local2 |= (DerefOf (Arg0 [Local0]) << 0x18)
                Local0++
                A116 = 0x00
                A117 = 0x00
                A118 = 0x00
                A119 = 0x00
                A120 = 0x00
                A121 = 0x00
                If ((Local1 == 0x00))
                {
                    A116 = Local2
                    A122 (0x69, Local7)
                }

                If ((Local1 == 0x01))
                {
                    A118 = Local2
                    A122 (0x6C, Local7)
                }

                If ((Local1 == 0x02))
                {
                    A116 = Local2
                    A122 (0x6C, Local7)
                }

                If ((Local1 == 0x03))
                {
                    A116 = Local2
                    A122 (0x7C, Local7)
                }

                If ((Local1 == 0x04))
                {
                    Local3 = DerefOf (Arg0 [Local0])
                    Local0++
                    Local3 |= (DerefOf (Arg0 [Local0]) << 0x08)
                    Local0++
                    Local3 |= (DerefOf (Arg0 [Local0]) << 0x10)
                    Local0++
                    Local3 |= (DerefOf (Arg0 [Local0]) << 0x18)
                    Local0++
                    A116 = Local2
                    A117 = Local3
                    A122 (0x6A, Local7)
                }
            }
        }

        OperationRegion (PMIO, SystemIO, 0x0CD6, 0x02)
        Field (PMIO, ByteAcc, NoLock, Preserve)
        {
            A088,   8, 
            A089,   8
        }

        IndexField (A088, A089, ByteAcc, NoLock, Preserve)
        {
            Offset (0xE0), 
            A090,   32
        }

        OperationRegion (ACFG, SystemIO, A090, 0x08)
        Field (ACFG, DWordAcc, NoLock, Preserve)
        {
            A091,   32
        }

        BankField (ACFG, A091, 0x80000068, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            A058,   2
        }

        Name (ABSM, 0x00)
        Method (A055, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                ABSM = A058 /* \_SB_.A058 */
                A058 = 0x00
            }
            Else
            {
                A058 = ABSM /* \_SB_.ABSM */
            }
        }

        Device (AWR0)
        {
            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
            Name (_UID, 0x90)  // _UID: Unique ID
            Name (WRBS, 0x0150)
            Name (CORE, 0x0140)
            Device (ABR0)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x80)  // _UID: Unique ID
                Name (AB12, 0x20)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A071, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A071, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A062,   8, 
                    A063,   8, 
                    Offset (0x68), 
                    A058,   2, 
                        ,   2, 
                    A053,   1, 
                    A059,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A060,   1, 
                    Offset (0x88), 
                    A070,   4, 
                        ,   1, 
                    A067,   1, 
                    Offset (0xE0), 
                    A072,   32
                }

                BankField (A071, A072, 0xA1, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                        ,   12, 
                    A054,   1
                }

                BankField (A071, A072, 0xA2, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                        ,   13, 
                    A069,   1
                }

                BankField (A071, A072, 0xA4, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A065,   1, 
                    A066,   1, 
                        ,   11, 
                    A061,   2, 
                        ,   14, 
                    A068,   1
                }

                BankField (A071, A072, 0xA5, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A052,   6
                }

                OperationRegion (A073, SystemMemory, AGRB, 0x1000)
                Field (A073, ByteAcc, NoLock, Preserve)
                {
                    Offset (0xE0), 
                    A074,   32
                }

                BankField (A073, A074, ((^WRBS << 0x10) | (0x0800 + (0x0100 * DerefOf (
                    \_SB.ADAT [(AB12 + 0x0B)])))), DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A075,   1
                }

                BankField (A073, A074, ((^CORE << 0x10) | 0x0129), DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A076,   16
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A048, 0, NotSerialized)
                {
                    Local0 = A029 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR0.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR0.AB0E */
                    }
                }

                Method (A043, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A049, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR0.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A042, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR0.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR0.AB0E */
                    }

                    Local0 = A049 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR0.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A048 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A041, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR0.AB02 */
                }

                Method (A044, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR0.AB00 */
                }

                Method (A040, 1, NotSerialized)
                {
                    AB02 = Arg0
                    If ((AB03 == 0x01))
                    {
                        \_SB.A050 (0x01)
                    }

                    A051 (Arg0)
                    If (((A052 >= 0x10) && (A053 == 0x00)))
                    {
                        If ((AB10 != 0x00))
                        {
                            A054 = 0x00
                        }
                        Else
                        {
                            A054 = 0x01
                        }

                        If ((AB03 == 0x01))
                        {
                            \_SB.A055 (0x00)
                        }
                        Else
                        {
                            A056 (0x00)
                        }

                        Name (A057, 0x00)
                        A057 = A058 /* \_SB_.AWR0.ABR0.A058 */
                        A058 = 0x00
                        Local0 = 0x01
                        While (Local0)
                        {
                            A059 = 0x01
                            While ((A059 == 0x01))
                            {
                                Sleep (0x01)
                            }

                            While ((A060 == 0x01))
                            {
                                Sleep (0x01)
                            }

                            If ((Arg0 == 0x01))
                            {
                                If ((A061 == 0x00))
                                {
                                    Break
                                }
                            }
                            Else
                            {
                                Break
                            }
                        }

                        A058 = A057 /* \_SB_.AWR0.ABR0.A040.A057 */
                        If ((AB03 == 0x01))
                        {
                            \_SB.A055 (0x01)
                        }
                        Else
                        {
                            A056 (0x01)
                        }
                    }

                    If ((AB03 == 0x01))
                    {
                        \_SB.A050 (0x00)
                    }
                }

                Method (A045, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A046, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A062) && (Local0 <= A063)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A064, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A047, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A051, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02))
                    {
                        A065 = 0x01
                        A066 = 0x00
                    }

                    If ((Arg0 >= 0x03))
                    {
                        A065 = 0x01
                        A066 = 0x01
                    }

                    If ((Arg0 == 0x01))
                    {
                        A067 = 0x01
                        A065 = 0x00
                        A066 = 0x00
                        A068 = 0x00
                        If ((AB04 == 0x01))
                        {
                            A069 = 0x01
                        }
                    }
                    Else
                    {
                        A067 = 0x00
                        A068 = 0x01
                        A069 = 0x00
                    }

                    A070 = Arg0
                }

                Method (A084, 2, NotSerialized)
                {
                    If ((A079 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A079 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A079 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A056, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A079 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A079 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A084 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A079 (Local0, (Local1 + 0x10))
                                A080 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A080 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A080, 3, Serialized)
                {
                    Local0 = (AGRB + (A062 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A079, 2, Serialized)
                {
                    Local0 = (AGRB + (A062 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR0.A079.ADRR */
                }

                Method (A077, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A064 (Arg0))
                }

                Method (A078, 1, NotSerialized)
                {
                    Name (A057, 0x00)
                    A057 = A058 /* \_SB_.AWR0.ABR0.A058 */
                    If ((Arg0 == 0x01))
                    {
                        A053 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A056 (0x00)
                        Local0 = A079 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A080 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A079 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A080 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        A053 = 0x01
                        Local0 = 0x05
                    }

                    A058 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            If ((AB0E > 0x01))
                            {
                                AB05 = AB0E /* \_SB_.AWR0.ABR0.AB0E */
                                A027 ()
                            }

                            \_SB.A081 (0x01, AB06, AB07)
                            A082 (0x01)
                            \_SB.A083 (0x01, AB06, AB07)
                            A075 = 0x00
                            Local0 = 0x03
                        }

                        If ((Local0 == 0x03))
                        {
                            Local1 = 0x00
                            Local2 = 0x00
                            While ((Local1 < 0x3C))
                            {
                                If ((A052 > 0x04))
                                {
                                    Local2 = 0x01
                                    Break
                                }

                                Sleep (0x01)
                                Local1++
                            }

                            If ((Local2 == 0x01))
                            {
                                Local0 = 0x04
                            }
                            Else
                            {
                                Local0 = 0x05
                            }
                        }

                        If ((Local0 == 0x04))
                        {
                            Local1 = 0x00
                            Local2 = 0x00
                            While ((Local1 < 0x50))
                            {
                                If (((A052 >= 0x10) && (A052 <= 0x13)))
                                {
                                    Local2 = 0x01
                                    Break
                                }

                                Sleep (0x01)
                                Local1++
                            }

                            If ((Local2 == 0x01))
                            {
                                Local0 = 0x07
                            }
                            ElseIf ((AB04 == 0x01))
                            {
                                Local0 = 0x05
                            }
                            Else
                            {
                                Local0 = 0x06
                            }
                        }

                        If ((Local0 == 0x06))
                        {
                            AB04 = 0x01
                            AB05 = 0x01
                            A051 (0x01)
                            If (CondRefOf (\_SB.ALIC, Local6))
                            {
                                Local1 = ((AB0C << 0x03) | AB0D) /* \_SB_.AWR0.ABR0.AB0D */
                                \_SB.ALIC (Local1, 0x00)
                                Sleep (0x02)
                                \_SB.ALIC (Local1, 0x01)
                                Local0 = 0x03
                                Continue
                            }

                            Local0 = 0x05
                        }

                        If ((Local0 == 0x05))
                        {
                            A079 (0x00, 0x00)
                            A075 = 0x01
                            \_SB.A081 (0x00, AB06, AB07)
                            A082 (0x00)
                            \_SB.A083 (0x00, AB06, AB07)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x07))
                        {
                            Local2 = 0x01
                            Local0 = 0x08
                        }
                    }

                    If ((AB04 == 0x00))
                    {
                        AB05 = 0x00
                    }

                    If (((AB0E > 0x01) || (AP05 == 0x01)))
                    {
                        If ((DerefOf (\_SB.ADAT [0x00]) > 0x01))
                        {
                            If ((Arg0 != 0x00))
                            {
                                A027 ()
                            }
                        }
                    }

                    A058 = A057 /* \_SB_.AWR0.ABR0.A078.A057 */
                    If ((A057 != 0x00))
                    {
                        A056 (0x01)
                    }

                    Return (Local2)
                }

                Method (A082, 1, NotSerialized)
                {
                    If ((AB06 > AB07))
                    {
                        Local0 = (AB06 - AB07) /* \_SB_.AWR0.ABR0.AB07 */
                    }
                    Else
                    {
                        Local0 = (AB07 - AB06) /* \_SB_.AWR0.ABR0.AB06 */
                    }

                    Local0++
                    Local0 = (0x01 << Local0)
                    Local0--
                    Local0 <<= AB08 /* \_SB_.AWR0.ABR0.AB08 */
                    If ((Arg0 == 0x01))
                    {
                        A076 |= Local0
                    }
                    Else
                    {
                        Local1 = (A076 & ~Local0)
                        If ((Local1 == 0x00))
                        {
                            A076 &= ~Local0
                        }
                    }
                }
            }

            Device (ABR1)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x81)  // _UID: Unique ID
                Name (AB12, 0x34)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A071, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A071, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A062,   8, 
                    A063,   8, 
                    Offset (0x68), 
                    A058,   2, 
                        ,   2, 
                    A053,   1, 
                    A059,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A060,   1, 
                    Offset (0x88), 
                    A070,   4, 
                        ,   1, 
                    A067,   1, 
                    Offset (0xE0), 
                    A072,   32
                }

                BankField (A071, A072, 0xA1, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                        ,   12, 
                    A054,   1
                }

                BankField (A071, A072, 0xA2, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                        ,   13, 
                    A069,   1
                }

                BankField (A071, A072, 0xA4, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A065,   1, 
                    A066,   1, 
                        ,   11, 
                    A061,   2, 
                        ,   14, 
                    A068,   1
                }

                BankField (A071, A072, 0xA5, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A052,   6
                }

                OperationRegion (A073, SystemMemory, AGRB, 0x1000)
                Field (A073, ByteAcc, NoLock, Preserve)
                {
                    Offset (0xE0), 
                    A074,   32
                }

                BankField (A073, A074, ((^WRBS << 0x10) | (0x0800 + (0x0100 * DerefOf (
                    \_SB.ADAT [(AB12 + 0x0B)])))), DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A075,   1
                }

                BankField (A073, A074, ((^CORE << 0x10) | 0x0129), DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A076,   16
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A048, 0, NotSerialized)
                {
                    Local0 = A029 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR1.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR1.AB0E */
                    }
                }

                Method (A043, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A049, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR1.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A042, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR1.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR1.AB0E */
                    }

                    Local0 = A049 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR1.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A048 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A041, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR1.AB02 */
                }

                Method (A044, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR1.AB00 */
                }

                Method (A040, 1, NotSerialized)
                {
                    AB02 = Arg0
                    If ((AB03 == 0x01))
                    {
                        \_SB.A050 (0x01)
                    }

                    A051 (Arg0)
                    If (((A052 >= 0x10) && (A053 == 0x00)))
                    {
                        If ((AB10 != 0x00))
                        {
                            A054 = 0x00
                        }
                        Else
                        {
                            A054 = 0x01
                        }

                        If ((AB03 == 0x01))
                        {
                            \_SB.A055 (0x00)
                        }
                        Else
                        {
                            A056 (0x00)
                        }

                        Name (A057, 0x00)
                        A057 = A058 /* \_SB_.AWR0.ABR1.A058 */
                        A058 = 0x00
                        Local0 = 0x01
                        While (Local0)
                        {
                            A059 = 0x01
                            While ((A059 == 0x01))
                            {
                                Sleep (0x01)
                            }

                            While ((A060 == 0x01))
                            {
                                Sleep (0x01)
                            }

                            If ((Arg0 == 0x01))
                            {
                                If ((A061 == 0x00))
                                {
                                    Break
                                }
                            }
                            Else
                            {
                                Break
                            }
                        }

                        A058 = A057 /* \_SB_.AWR0.ABR1.A040.A057 */
                        If ((AB03 == 0x01))
                        {
                            \_SB.A055 (0x01)
                        }
                        Else
                        {
                            A056 (0x01)
                        }
                    }

                    If ((AB03 == 0x01))
                    {
                        \_SB.A050 (0x00)
                    }
                }

                Method (A045, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A046, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A062) && (Local0 <= A063)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A064, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A047, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A051, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02))
                    {
                        A065 = 0x01
                        A066 = 0x00
                    }

                    If ((Arg0 >= 0x03))
                    {
                        A065 = 0x01
                        A066 = 0x01
                    }

                    If ((Arg0 == 0x01))
                    {
                        A067 = 0x01
                        A065 = 0x00
                        A066 = 0x00
                        A068 = 0x00
                        If ((AB04 == 0x01))
                        {
                            A069 = 0x01
                        }
                    }
                    Else
                    {
                        A067 = 0x00
                        A068 = 0x01
                        A069 = 0x00
                    }

                    A070 = Arg0
                }

                Method (A084, 2, NotSerialized)
                {
                    If ((A079 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A079 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A079 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A056, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A079 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A079 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A084 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A079 (Local0, (Local1 + 0x10))
                                A080 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A080 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A080, 3, Serialized)
                {
                    Local0 = (AGRB + (A062 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A079, 2, Serialized)
                {
                    Local0 = (AGRB + (A062 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR1.A079.ADRR */
                }

                Method (A077, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A064 (Arg0))
                }

                Method (A078, 1, NotSerialized)
                {
                    Name (A057, 0x00)
                    A057 = A058 /* \_SB_.AWR0.ABR1.A058 */
                    If ((Arg0 == 0x01))
                    {
                        A053 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A056 (0x00)
                        Local0 = A079 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A080 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A079 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A080 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        A053 = 0x01
                        Local0 = 0x05
                    }

                    A058 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            If ((AB0E > 0x01))
                            {
                                AB05 = AB0E /* \_SB_.AWR0.ABR1.AB0E */
                                A027 ()
                            }

                            \_SB.A081 (0x01, AB06, AB07)
                            A082 (0x01)
                            \_SB.A083 (0x01, AB06, AB07)
                            A075 = 0x00
                            Local0 = 0x03
                        }

                        If ((Local0 == 0x03))
                        {
                            Local1 = 0x00
                            Local2 = 0x00
                            While ((Local1 < 0x3C))
                            {
                                If ((A052 > 0x04))
                                {
                                    Local2 = 0x01
                                    Break
                                }

                                Sleep (0x01)
                                Local1++
                            }

                            If ((Local2 == 0x01))
                            {
                                Local0 = 0x04
                            }
                            Else
                            {
                                Local0 = 0x05
                            }
                        }

                        If ((Local0 == 0x04))
                        {
                            Local1 = 0x00
                            Local2 = 0x00
                            While ((Local1 < 0x50))
                            {
                                If (((A052 >= 0x10) && (A052 <= 0x13)))
                                {
                                    Local2 = 0x01
                                    Break
                                }

                                Sleep (0x01)
                                Local1++
                            }

                            If ((Local2 == 0x01))
                            {
                                Local0 = 0x07
                            }
                            ElseIf ((AB04 == 0x01))
                            {
                                Local0 = 0x05
                            }
                            Else
                            {
                                Local0 = 0x06
                            }
                        }

                        If ((Local0 == 0x06))
                        {
                            AB04 = 0x01
                            AB05 = 0x01
                            A051 (0x01)
                            If (CondRefOf (\_SB.ALIC, Local6))
                            {
                                Local1 = ((AB0C << 0x03) | AB0D) /* \_SB_.AWR0.ABR1.AB0D */
                                \_SB.ALIC (Local1, 0x00)
                                Sleep (0x02)
                                \_SB.ALIC (Local1, 0x01)
                                Local0 = 0x03
                                Continue
                            }

                            Local0 = 0x05
                        }

                        If ((Local0 == 0x05))
                        {
                            A079 (0x00, 0x00)
                            A075 = 0x01
                            \_SB.A081 (0x00, AB06, AB07)
                            A082 (0x00)
                            \_SB.A083 (0x00, AB06, AB07)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x07))
                        {
                            Local2 = 0x01
                            Local0 = 0x08
                        }
                    }

                    If ((AB04 == 0x00))
                    {
                        AB05 = 0x00
                    }

                    If (((AB0E > 0x01) || (AP05 == 0x01)))
                    {
                        If ((DerefOf (\_SB.ADAT [0x00]) > 0x01))
                        {
                            If ((Arg0 != 0x00))
                            {
                                A027 ()
                            }
                        }
                    }

                    A058 = A057 /* \_SB_.AWR0.ABR1.A078.A057 */
                    If ((A057 != 0x00))
                    {
                        A056 (0x01)
                    }

                    Return (Local2)
                }

                Method (A082, 1, NotSerialized)
                {
                    If ((AB06 > AB07))
                    {
                        Local0 = (AB06 - AB07) /* \_SB_.AWR0.ABR1.AB07 */
                    }
                    Else
                    {
                        Local0 = (AB07 - AB06) /* \_SB_.AWR0.ABR1.AB06 */
                    }

                    Local0++
                    Local0 = (0x01 << Local0)
                    Local0--
                    Local0 <<= AB08 /* \_SB_.AWR0.ABR1.AB08 */
                    If ((Arg0 == 0x01))
                    {
                        A076 |= Local0
                    }
                    Else
                    {
                        Local1 = (A076 & ~Local0)
                        If ((Local1 == 0x00))
                        {
                            A076 &= ~Local0
                        }
                    }
                }
            }

            Device (ABR2)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x82)  // _UID: Unique ID
                Name (AB12, 0x48)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A071, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A071, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A062,   8, 
                    A063,   8, 
                    Offset (0x68), 
                    A058,   2, 
                        ,   2, 
                    A053,   1, 
                    A059,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A060,   1, 
                    Offset (0x88), 
                    A070,   4, 
                        ,   1, 
                    A067,   1, 
                    Offset (0xE0), 
                    A072,   32
                }

                BankField (A071, A072, 0xA1, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                        ,   12, 
                    A054,   1
                }

                BankField (A071, A072, 0xA2, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                        ,   13, 
                    A069,   1
                }

                BankField (A071, A072, 0xA4, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A065,   1, 
                    A066,   1, 
                        ,   11, 
                    A061,   2, 
                        ,   14, 
                    A068,   1
                }

                BankField (A071, A072, 0xA5, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A052,   6
                }

                OperationRegion (A073, SystemMemory, AGRB, 0x1000)
                Field (A073, ByteAcc, NoLock, Preserve)
                {
                    Offset (0xE0), 
                    A074,   32
                }

                BankField (A073, A074, ((^WRBS << 0x10) | (0x0800 + (0x0100 * DerefOf (
                    \_SB.ADAT [(AB12 + 0x0B)])))), DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A075,   1
                }

                BankField (A073, A074, ((^CORE << 0x10) | 0x0129), DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A076,   16
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A048, 0, NotSerialized)
                {
                    Local0 = A029 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR2.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR2.AB0E */
                    }
                }

                Method (A043, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A049, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR2.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A042, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR2.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR2.AB0E */
                    }

                    Local0 = A049 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR2.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A048 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A041, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR2.AB02 */
                }

                Method (A044, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR2.AB00 */
                }

                Method (A040, 1, NotSerialized)
                {
                    AB02 = Arg0
                    If ((AB03 == 0x01))
                    {
                        \_SB.A050 (0x01)
                    }

                    A051 (Arg0)
                    If (((A052 >= 0x10) && (A053 == 0x00)))
                    {
                        If ((AB10 != 0x00))
                        {
                            A054 = 0x00
                        }
                        Else
                        {
                            A054 = 0x01
                        }

                        If ((AB03 == 0x01))
                        {
                            \_SB.A055 (0x00)
                        }
                        Else
                        {
                            A056 (0x00)
                        }

                        Name (A057, 0x00)
                        A057 = A058 /* \_SB_.AWR0.ABR2.A058 */
                        A058 = 0x00
                        Local0 = 0x01
                        While (Local0)
                        {
                            A059 = 0x01
                            While ((A059 == 0x01))
                            {
                                Sleep (0x01)
                            }

                            While ((A060 == 0x01))
                            {
                                Sleep (0x01)
                            }

                            If ((Arg0 == 0x01))
                            {
                                If ((A061 == 0x00))
                                {
                                    Break
                                }
                            }
                            Else
                            {
                                Break
                            }
                        }

                        A058 = A057 /* \_SB_.AWR0.ABR2.A040.A057 */
                        If ((AB03 == 0x01))
                        {
                            \_SB.A055 (0x01)
                        }
                        Else
                        {
                            A056 (0x01)
                        }
                    }

                    If ((AB03 == 0x01))
                    {
                        \_SB.A050 (0x00)
                    }
                }

                Method (A045, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A046, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A062) && (Local0 <= A063)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A064, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A047, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A051, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02))
                    {
                        A065 = 0x01
                        A066 = 0x00
                    }

                    If ((Arg0 >= 0x03))
                    {
                        A065 = 0x01
                        A066 = 0x01
                    }

                    If ((Arg0 == 0x01))
                    {
                        A067 = 0x01
                        A065 = 0x00
                        A066 = 0x00
                        A068 = 0x00
                        If ((AB04 == 0x01))
                        {
                            A069 = 0x01
                        }
                    }
                    Else
                    {
                        A067 = 0x00
                        A068 = 0x01
                        A069 = 0x00
                    }

                    A070 = Arg0
                }

                Method (A084, 2, NotSerialized)
                {
                    If ((A079 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A079 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A079 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A056, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A079 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A079 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A084 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A079 (Local0, (Local1 + 0x10))
                                A080 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A080 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A080, 3, Serialized)
                {
                    Local0 = (AGRB + (A062 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A079, 2, Serialized)
                {
                    Local0 = (AGRB + (A062 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR2.A079.ADRR */
                }

                Method (A077, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A064 (Arg0))
                }

                Method (A078, 1, NotSerialized)
                {
                    Name (A057, 0x00)
                    A057 = A058 /* \_SB_.AWR0.ABR2.A058 */
                    If ((Arg0 == 0x01))
                    {
                        A053 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A056 (0x00)
                        Local0 = A079 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A080 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A079 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A080 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        A053 = 0x01
                        Local0 = 0x05
                    }

                    A058 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            If ((AB0E > 0x01))
                            {
                                AB05 = AB0E /* \_SB_.AWR0.ABR2.AB0E */
                                A027 ()
                            }

                            \_SB.A081 (0x01, AB06, AB07)
                            A082 (0x01)
                            \_SB.A083 (0x01, AB06, AB07)
                            A075 = 0x00
                            Local0 = 0x03
                        }

                        If ((Local0 == 0x03))
                        {
                            Local1 = 0x00
                            Local2 = 0x00
                            While ((Local1 < 0x3C))
                            {
                                If ((A052 > 0x04))
                                {
                                    Local2 = 0x01
                                    Break
                                }

                                Sleep (0x01)
                                Local1++
                            }

                            If ((Local2 == 0x01))
                            {
                                Local0 = 0x04
                            }
                            Else
                            {
                                Local0 = 0x05
                            }
                        }

                        If ((Local0 == 0x04))
                        {
                            Local1 = 0x00
                            Local2 = 0x00
                            While ((Local1 < 0x50))
                            {
                                If (((A052 >= 0x10) && (A052 <= 0x13)))
                                {
                                    Local2 = 0x01
                                    Break
                                }

                                Sleep (0x01)
                                Local1++
                            }

                            If ((Local2 == 0x01))
                            {
                                Local0 = 0x07
                            }
                            ElseIf ((AB04 == 0x01))
                            {
                                Local0 = 0x05
                            }
                            Else
                            {
                                Local0 = 0x06
                            }
                        }

                        If ((Local0 == 0x06))
                        {
                            AB04 = 0x01
                            AB05 = 0x01
                            A051 (0x01)
                            If (CondRefOf (\_SB.ALIC, Local6))
                            {
                                Local1 = ((AB0C << 0x03) | AB0D) /* \_SB_.AWR0.ABR2.AB0D */
                                \_SB.ALIC (Local1, 0x00)
                                Sleep (0x02)
                                \_SB.ALIC (Local1, 0x01)
                                Local0 = 0x03
                                Continue
                            }

                            Local0 = 0x05
                        }

                        If ((Local0 == 0x05))
                        {
                            A079 (0x00, 0x00)
                            A075 = 0x01
                            \_SB.A081 (0x00, AB06, AB07)
                            A082 (0x00)
                            \_SB.A083 (0x00, AB06, AB07)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x07))
                        {
                            Local2 = 0x01
                            Local0 = 0x08
                        }
                    }

                    If ((AB04 == 0x00))
                    {
                        AB05 = 0x00
                    }

                    If (((AB0E > 0x01) || (AP05 == 0x01)))
                    {
                        If ((DerefOf (\_SB.ADAT [0x00]) > 0x01))
                        {
                            If ((Arg0 != 0x00))
                            {
                                A027 ()
                            }
                        }
                    }

                    A058 = A057 /* \_SB_.AWR0.ABR2.A078.A057 */
                    If ((A057 != 0x00))
                    {
                        A056 (0x01)
                    }

                    Return (Local2)
                }

                Method (A082, 1, NotSerialized)
                {
                    If ((AB06 > AB07))
                    {
                        Local0 = (AB06 - AB07) /* \_SB_.AWR0.ABR2.AB07 */
                    }
                    Else
                    {
                        Local0 = (AB07 - AB06) /* \_SB_.AWR0.ABR2.AB06 */
                    }

                    Local0++
                    Local0 = (0x01 << Local0)
                    Local0--
                    Local0 <<= AB08 /* \_SB_.AWR0.ABR2.AB08 */
                    If ((Arg0 == 0x01))
                    {
                        A076 |= Local0
                    }
                    Else
                    {
                        Local1 = (A076 & ~Local0)
                        If ((Local1 == 0x00))
                        {
                            A076 &= ~Local0
                        }
                    }
                }
            }

            Device (ABR3)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x83)  // _UID: Unique ID
                Name (AB12, 0x5C)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A071, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A071, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A062,   8, 
                    A063,   8, 
                    Offset (0x68), 
                    A058,   2, 
                        ,   2, 
                    A053,   1, 
                    A059,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A060,   1, 
                    Offset (0x88), 
                    A070,   4, 
                        ,   1, 
                    A067,   1, 
                    Offset (0xE0), 
                    A072,   32
                }

                BankField (A071, A072, 0xA1, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                        ,   12, 
                    A054,   1
                }

                BankField (A071, A072, 0xA2, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                        ,   13, 
                    A069,   1
                }

                BankField (A071, A072, 0xA4, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A065,   1, 
                    A066,   1, 
                        ,   11, 
                    A061,   2, 
                        ,   14, 
                    A068,   1
                }

                BankField (A071, A072, 0xA5, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A052,   6
                }

                OperationRegion (A073, SystemMemory, AGRB, 0x1000)
                Field (A073, ByteAcc, NoLock, Preserve)
                {
                    Offset (0xE0), 
                    A074,   32
                }

                BankField (A073, A074, ((^WRBS << 0x10) | (0x0800 + (0x0100 * DerefOf (
                    \_SB.ADAT [(AB12 + 0x0B)])))), DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A075,   1
                }

                BankField (A073, A074, ((^CORE << 0x10) | 0x0129), DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A076,   16
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A048, 0, NotSerialized)
                {
                    Local0 = A029 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR3.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR3.AB0E */
                    }
                }

                Method (A043, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A049, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR3.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A042, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR3.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR3.AB0E */
                    }

                    Local0 = A049 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR3.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A048 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A041, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR3.AB02 */
                }

                Method (A044, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR3.AB00 */
                }

                Method (A040, 1, NotSerialized)
                {
                    AB02 = Arg0
                    If ((AB03 == 0x01))
                    {
                        \_SB.A050 (0x01)
                    }

                    A051 (Arg0)
                    If (((A052 >= 0x10) && (A053 == 0x00)))
                    {
                        If ((AB10 != 0x00))
                        {
                            A054 = 0x00
                        }
                        Else
                        {
                            A054 = 0x01
                        }

                        If ((AB03 == 0x01))
                        {
                            \_SB.A055 (0x00)
                        }
                        Else
                        {
                            A056 (0x00)
                        }

                        Name (A057, 0x00)
                        A057 = A058 /* \_SB_.AWR0.ABR3.A058 */
                        A058 = 0x00
                        Local0 = 0x01
                        While (Local0)
                        {
                            A059 = 0x01
                            While ((A059 == 0x01))
                            {
                                Sleep (0x01)
                            }

                            While ((A060 == 0x01))
                            {
                                Sleep (0x01)
                            }

                            If ((Arg0 == 0x01))
                            {
                                If ((A061 == 0x00))
                                {
                                    Break
                                }
                            }
                            Else
                            {
                                Break
                            }
                        }

                        A058 = A057 /* \_SB_.AWR0.ABR3.A040.A057 */
                        If ((AB03 == 0x01))
                        {
                            \_SB.A055 (0x01)
                        }
                        Else
                        {
                            A056 (0x01)
                        }
                    }

                    If ((AB03 == 0x01))
                    {
                        \_SB.A050 (0x00)
                    }
                }

                Method (A045, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A046, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A062) && (Local0 <= A063)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A064, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A047, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A051, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02))
                    {
                        A065 = 0x01
                        A066 = 0x00
                    }

                    If ((Arg0 >= 0x03))
                    {
                        A065 = 0x01
                        A066 = 0x01
                    }

                    If ((Arg0 == 0x01))
                    {
                        A067 = 0x01
                        A065 = 0x00
                        A066 = 0x00
                        A068 = 0x00
                        If ((AB04 == 0x01))
                        {
                            A069 = 0x01
                        }
                    }
                    Else
                    {
                        A067 = 0x00
                        A068 = 0x01
                        A069 = 0x00
                    }

                    A070 = Arg0
                }

                Method (A084, 2, NotSerialized)
                {
                    If ((A079 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A079 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A079 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A056, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A079 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A079 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A084 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A079 (Local0, (Local1 + 0x10))
                                A080 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A080 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A080, 3, Serialized)
                {
                    Local0 = (AGRB + (A062 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A079, 2, Serialized)
                {
                    Local0 = (AGRB + (A062 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR3.A079.ADRR */
                }

                Method (A077, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A064 (Arg0))
                }

                Method (A078, 1, NotSerialized)
                {
                    Name (A057, 0x00)
                    A057 = A058 /* \_SB_.AWR0.ABR3.A058 */
                    If ((Arg0 == 0x01))
                    {
                        A053 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A056 (0x00)
                        Local0 = A079 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A080 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A079 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A080 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        A053 = 0x01
                        Local0 = 0x05
                    }

                    A058 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            If ((AB0E > 0x01))
                            {
                                AB05 = AB0E /* \_SB_.AWR0.ABR3.AB0E */
                                A027 ()
                            }

                            \_SB.A081 (0x01, AB06, AB07)
                            A082 (0x01)
                            \_SB.A083 (0x01, AB06, AB07)
                            A075 = 0x00
                            Local0 = 0x03
                        }

                        If ((Local0 == 0x03))
                        {
                            Local1 = 0x00
                            Local2 = 0x00
                            While ((Local1 < 0x3C))
                            {
                                If ((A052 > 0x04))
                                {
                                    Local2 = 0x01
                                    Break
                                }

                                Sleep (0x01)
                                Local1++
                            }

                            If ((Local2 == 0x01))
                            {
                                Local0 = 0x04
                            }
                            Else
                            {
                                Local0 = 0x05
                            }
                        }

                        If ((Local0 == 0x04))
                        {
                            Local1 = 0x00
                            Local2 = 0x00
                            While ((Local1 < 0x50))
                            {
                                If (((A052 >= 0x10) && (A052 <= 0x13)))
                                {
                                    Local2 = 0x01
                                    Break
                                }

                                Sleep (0x01)
                                Local1++
                            }

                            If ((Local2 == 0x01))
                            {
                                Local0 = 0x07
                            }
                            ElseIf ((AB04 == 0x01))
                            {
                                Local0 = 0x05
                            }
                            Else
                            {
                                Local0 = 0x06
                            }
                        }

                        If ((Local0 == 0x06))
                        {
                            AB04 = 0x01
                            AB05 = 0x01
                            A051 (0x01)
                            If (CondRefOf (\_SB.ALIC, Local6))
                            {
                                Local1 = ((AB0C << 0x03) | AB0D) /* \_SB_.AWR0.ABR3.AB0D */
                                \_SB.ALIC (Local1, 0x00)
                                Sleep (0x02)
                                \_SB.ALIC (Local1, 0x01)
                                Local0 = 0x03
                                Continue
                            }

                            Local0 = 0x05
                        }

                        If ((Local0 == 0x05))
                        {
                            A079 (0x00, 0x00)
                            A075 = 0x01
                            \_SB.A081 (0x00, AB06, AB07)
                            A082 (0x00)
                            \_SB.A083 (0x00, AB06, AB07)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x07))
                        {
                            Local2 = 0x01
                            Local0 = 0x08
                        }
                    }

                    If ((AB04 == 0x00))
                    {
                        AB05 = 0x00
                    }

                    If (((AB0E > 0x01) || (AP05 == 0x01)))
                    {
                        If ((DerefOf (\_SB.ADAT [0x00]) > 0x01))
                        {
                            If ((Arg0 != 0x00))
                            {
                                A027 ()
                            }
                        }
                    }

                    A058 = A057 /* \_SB_.AWR0.ABR3.A078.A057 */
                    If ((A057 != 0x00))
                    {
                        A056 (0x01)
                    }

                    Return (Local2)
                }

                Method (A082, 1, NotSerialized)
                {
                    If ((AB06 > AB07))
                    {
                        Local0 = (AB06 - AB07) /* \_SB_.AWR0.ABR3.AB07 */
                    }
                    Else
                    {
                        Local0 = (AB07 - AB06) /* \_SB_.AWR0.ABR3.AB06 */
                    }

                    Local0++
                    Local0 = (0x01 << Local0)
                    Local0--
                    Local0 <<= AB08 /* \_SB_.AWR0.ABR3.AB08 */
                    If ((Arg0 == 0x01))
                    {
                        A076 |= Local0
                    }
                    Else
                    {
                        Local1 = (A076 & ~Local0)
                        If ((Local1 == 0x00))
                        {
                            A076 &= ~Local0
                        }
                    }
                }
            }

            Device (ABR4)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x84)  // _UID: Unique ID
                Name (AB12, 0x70)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A071, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A071, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A062,   8, 
                    A063,   8, 
                    Offset (0x68), 
                    A058,   2, 
                        ,   2, 
                    A053,   1, 
                    A059,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A060,   1, 
                    Offset (0x88), 
                    A070,   4, 
                        ,   1, 
                    A067,   1, 
                    Offset (0xE0), 
                    A072,   32
                }

                BankField (A071, A072, 0xA1, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                        ,   12, 
                    A054,   1
                }

                BankField (A071, A072, 0xA2, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                        ,   13, 
                    A069,   1
                }

                BankField (A071, A072, 0xA4, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A065,   1, 
                    A066,   1, 
                        ,   11, 
                    A061,   2, 
                        ,   14, 
                    A068,   1
                }

                BankField (A071, A072, 0xA5, DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A052,   6
                }

                OperationRegion (A073, SystemMemory, AGRB, 0x1000)
                Field (A073, ByteAcc, NoLock, Preserve)
                {
                    Offset (0xE0), 
                    A074,   32
                }

                BankField (A073, A074, ((^WRBS << 0x10) | (0x0800 + (0x0100 * DerefOf (
                    \_SB.ADAT [(AB12 + 0x0B)])))), DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A075,   1
                }

                BankField (A073, A074, ((^CORE << 0x10) | 0x0129), DWordAcc, NoLock, Preserve)
                {
                    Offset (0xE4), 
                    A076,   16
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A048, 0, NotSerialized)
                {
                    Local0 = A029 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR4.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR4.AB0E */
                    }
                }

                Method (A043, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A049, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR4.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A042, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR4.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR4.AB0E */
                    }

                    Local0 = A049 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR4.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A048 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A041, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR4.AB02 */
                }

                Method (A044, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR4.AB00 */
                }

                Method (A040, 1, NotSerialized)
                {
                    AB02 = Arg0
                    If ((AB03 == 0x01))
                    {
                        \_SB.A050 (0x01)
                    }

                    A051 (Arg0)
                    If (((A052 >= 0x10) && (A053 == 0x00)))
                    {
                        If ((AB10 != 0x00))
                        {
                            A054 = 0x00
                        }
                        Else
                        {
                            A054 = 0x01
                        }

                        If ((AB03 == 0x01))
                        {
                            \_SB.A055 (0x00)
                        }
                        Else
                        {
                            A056 (0x00)
                        }

                        Name (A057, 0x00)
                        A057 = A058 /* \_SB_.AWR0.ABR4.A058 */
                        A058 = 0x00
                        Local0 = 0x01
                        While (Local0)
                        {
                            A059 = 0x01
                            While ((A059 == 0x01))
                            {
                                Sleep (0x01)
                            }

                            While ((A060 == 0x01))
                            {
                                Sleep (0x01)
                            }

                            If ((Arg0 == 0x01))
                            {
                                If ((A061 == 0x00))
                                {
                                    Break
                                }
                            }
                            Else
                            {
                                Break
                            }
                        }

                        A058 = A057 /* \_SB_.AWR0.ABR4.A040.A057 */
                        If ((AB03 == 0x01))
                        {
                            \_SB.A055 (0x01)
                        }
                        Else
                        {
                            A056 (0x01)
                        }
                    }

                    If ((AB03 == 0x01))
                    {
                        \_SB.A050 (0x00)
                    }
                }

                Method (A045, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A046, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A062) && (Local0 <= A063)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A064, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A047, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A051, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02))
                    {
                        A065 = 0x01
                        A066 = 0x00
                    }

                    If ((Arg0 >= 0x03))
                    {
                        A065 = 0x01
                        A066 = 0x01
                    }

                    If ((Arg0 == 0x01))
                    {
                        A067 = 0x01
                        A065 = 0x00
                        A066 = 0x00
                        A068 = 0x00
                        If ((AB04 == 0x01))
                        {
                            A069 = 0x01
                        }
                    }
                    Else
                    {
                        A067 = 0x00
                        A068 = 0x01
                        A069 = 0x00
                    }

                    A070 = Arg0
                }

                Method (A084, 2, NotSerialized)
                {
                    If ((A079 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A079 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A079 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A056, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A079 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A079 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A084 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A079 (Local0, (Local1 + 0x10))
                                A080 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A080 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A080, 3, Serialized)
                {
                    Local0 = (AGRB + (A062 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A079, 2, Serialized)
                {
                    Local0 = (AGRB + (A062 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR4.A079.ADRR */
                }

                Method (A077, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A064 (Arg0))
                }

                Method (A078, 1, NotSerialized)
                {
                    Name (A057, 0x00)
                    A057 = A058 /* \_SB_.AWR0.ABR4.A058 */
                    If ((Arg0 == 0x01))
                    {
                        A053 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A056 (0x00)
                        Local0 = A079 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A080 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A079 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A080 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        A053 = 0x01
                        Local0 = 0x05
                    }

                    A058 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            If ((AB0E > 0x01))
                            {
                                AB05 = AB0E /* \_SB_.AWR0.ABR4.AB0E */
                                A027 ()
                            }

                            \_SB.A081 (0x01, AB06, AB07)
                            A082 (0x01)
                            \_SB.A083 (0x01, AB06, AB07)
                            A075 = 0x00
                            Local0 = 0x03
                        }

                        If ((Local0 == 0x03))
                        {
                            Local1 = 0x00
                            Local2 = 0x00
                            While ((Local1 < 0x3C))
                            {
                                If ((A052 > 0x04))
                                {
                                    Local2 = 0x01
                                    Break
                                }

                                Sleep (0x01)
                                Local1++
                            }

                            If ((Local2 == 0x01))
                            {
                                Local0 = 0x04
                            }
                            Else
                            {
                                Local0 = 0x05
                            }
                        }

                        If ((Local0 == 0x04))
                        {
                            Local1 = 0x00
                            Local2 = 0x00
                            While ((Local1 < 0x50))
                            {
                                If (((A052 >= 0x10) && (A052 <= 0x13)))
                                {
                                    Local2 = 0x01
                                    Break
                                }

                                Sleep (0x01)
                                Local1++
                            }

                            If ((Local2 == 0x01))
                            {
                                Local0 = 0x07
                            }
                            ElseIf ((AB04 == 0x01))
                            {
                                Local0 = 0x05
                            }
                            Else
                            {
                                Local0 = 0x06
                            }
                        }

                        If ((Local0 == 0x06))
                        {
                            AB04 = 0x01
                            AB05 = 0x01
                            A051 (0x01)
                            If (CondRefOf (\_SB.ALIC, Local6))
                            {
                                Local1 = ((AB0C << 0x03) | AB0D) /* \_SB_.AWR0.ABR4.AB0D */
                                \_SB.ALIC (Local1, 0x00)
                                Sleep (0x02)
                                \_SB.ALIC (Local1, 0x01)
                                Local0 = 0x03
                                Continue
                            }

                            Local0 = 0x05
                        }

                        If ((Local0 == 0x05))
                        {
                            A079 (0x00, 0x00)
                            A075 = 0x01
                            \_SB.A081 (0x00, AB06, AB07)
                            A082 (0x00)
                            \_SB.A083 (0x00, AB06, AB07)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x07))
                        {
                            Local2 = 0x01
                            Local0 = 0x08
                        }
                    }

                    If ((AB04 == 0x00))
                    {
                        AB05 = 0x00
                    }

                    If (((AB0E > 0x01) || (AP05 == 0x01)))
                    {
                        If ((DerefOf (\_SB.ADAT [0x00]) > 0x01))
                        {
                            If ((Arg0 != 0x00))
                            {
                                A027 ()
                            }
                        }
                    }

                    A058 = A057 /* \_SB_.AWR0.ABR4.A078.A057 */
                    If ((A057 != 0x00))
                    {
                        A056 (0x01)
                    }

                    Return (Local2)
                }

                Method (A082, 1, NotSerialized)
                {
                    If ((AB06 > AB07))
                    {
                        Local0 = (AB06 - AB07) /* \_SB_.AWR0.ABR4.AB07 */
                    }
                    Else
                    {
                        Local0 = (AB07 - AB06) /* \_SB_.AWR0.ABR4.AB06 */
                    }

                    Local0++
                    Local0 = (0x01 << Local0)
                    Local0--
                    Local0 <<= AB08 /* \_SB_.AWR0.ABR4.AB08 */
                    If ((Arg0 == 0x01))
                    {
                        A076 |= Local0
                    }
                    Else
                    {
                        Local1 = (A076 & ~Local0)
                        If ((Local1 == 0x00))
                        {
                            A076 &= ~Local0
                        }
                    }
                }
            }
        }

        Name (A001, 0x01)
        Name (A002, 0x00)
        Method (APTS, 1, NotSerialized)
        {
            If ((Arg0 == 0x03))
            {
                A003 (Arg0)
                A004 (0x00)
                A002 = A005 (0x00)
            }
        }

        Method (AWAK, 1, NotSerialized)
        {
            If ((Arg0 == 0x03))
            {
                A006 (Arg0)
                If ((A002 == 0x00))
                {
                    A005 (0x01)
                }
            }
        }

        Method (A007, 0, NotSerialized)
        {
            A008 ()
        }

        Method (A009, 2, NotSerialized)
        {
        }
    }
}



SSDT6
-----
DefinitionBlock ("", "SSDT", 1, "LENOVO", "CPMCMN", 0x00000001)
{
    /*
     * iASL Warning: There were 4 external control methods found during
     * disassembly, but only 0 were resolved (4 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * To specify the tables needed to resolve external control method
     * references, the -e option can be used to specify the filenames.
     * Example iASL invocations:
     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
     *     iasl -e ssdt*.aml -d dsdt.aml
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_SB_.ALIB, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (_SB_.PCI0.SATA.TPTS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.SATA.TWAK, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (M038, IntObj)
    External (M039, MethodObj)    // Warning: Unknown method, guessing 2 arguments
    External (MOEM, IntObj)

    OperationRegion (CPNV, SystemMemory, 0xBDCBA018, 0x0001009E)
    Field (CPNV, AnyAcc, Lock, Preserve)
    {
        M082,   32, 
        M083,   32, 
        M084,   32, 
        M085,   8, 
        M221,   8, 
        M086,   16, 
        M229,   8, 
        M231,   16, 
        M235,   8, 
        M233,   32, 
            ,   1, 
            ,   2, 
            ,   1, 
            ,   1, 
            ,   1, 
            ,   1, 
        Offset (0x19), 
        M087,   1, 
            ,   1, 
        Offset (0x1C), 
        M088,   16, 
        M089,   16, 
        M090,   3, 
        M091,   5, 
        M092,   8, 
        M093,   3, 
        M094,   5, 
        M095,   8, 
        M096,   8, 
        M097,   8, 
        M098,   32, 
        M099,   32, 
        M100,   32, 
        M101,   32, 
        M102,   32, 
        M103,   32, 
        M104,   224, 
        M105,   32, 
        M106,   522240, 
        Offset (0x1005E), 
        M107,   64, 
        M128,   32, 
        M108,   32, 
        M109,   32, 
        M110,   32, 
        M122,   32, 
        M131,   32, 
        M132,   32, 
        M133,   32, 
        M134,   32, 
        M135,   32, 
        M136,   32, 
        M220,   32, 
        M226,   32
    }

    Method (M000, 1, Serialized)
    {
        Local0 = (Arg0 + 0x0C00)
        OperationRegion (VARM, SystemIO, 0x80, 0x02)
        Field (VARM, WordAcc, NoLock, Preserve)
        {
            VARR,   16
        }

        VARR = Local0
    }

    Method (M019, 4, Serialized)
    {
        Return (M017 (Arg0, Arg1, Arg2, Arg3, 0x00, 0x20))
    }

    Method (M020, 5, Serialized)
    {
        M018 (Arg0, Arg1, Arg2, Arg3, 0x00, 0x20, Arg4)
    }

    Method (M021, 4, Serialized)
    {
        Local0 = (M083 + (Arg0 << 0x14))
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        Local0 += 0xE0
        OperationRegion (VARM, SystemMemory, Local0, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        Local0 = VAR2 /* \M021.VAR2 */
        Return (Local0)
    }

    Method (M022, 5, Serialized)
    {
        Local0 = (M083 + (Arg0 << 0x14))
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        Local0 += 0xE0
        OperationRegion (VARM, SystemMemory, Local0, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        VAR2 = Arg4
    }

    Method (M023, 3, Serialized)
    {
        M018 (Arg0, Arg1, Arg2, 0x70, 0x03, 0x01, 0x00)
        M018 (Arg0, Arg1, Arg2, 0x70, 0x13, 0x01, 0x01)
    }

    Method (M024, 3, Serialized)
    {
        Local0 = M019 (Arg0, Arg1, Arg2, 0x0128)
        If ((Local0 & 0x00020000))
        {
            Return (Ones)
        }
        Else
        {
            Return (Zero)
        }
    }

    Method (M026, 3, Serialized)
    {
        Local0 = M021 (Arg0, Arg1, Arg2, 0xA2)
        Local0 &= 0xFFFFFFF8
        Local1 = (Local0 >> 0x04)
        Local1 &= 0x07
        Local0 |= Local1
        Local0 |= 0x0100
        M022 (Arg0, Arg1, Arg2, 0xA2, Local0)
    }

    Method (M025, 3, Serialized)
    {
        Local0 = M019 (Arg0, Arg1, Arg2, 0x68)
        Local0 &= 0xFFFFFFDF
        M020 (Arg0, Arg1, Arg2, 0x68, Local0)
        Local0 |= 0x20
        M020 (Arg0, Arg1, Arg2, 0x68, Local0)
        Local1 = 0x64
        Local2 = 0x01
        While ((Local1 && Local2))
        {
            Sleep (0x01)
            Local3 = M019 (Arg0, Arg1, Arg2, 0x68)
            If ((Local3 & 0x08000000))
            {
                Local1--
            }
            Else
            {
                Local2 = 0x00
            }
        }

        Local0 &= 0xFFFFFFDF
        M020 (Arg0, Arg1, Arg2, 0x68, Local0)
        If (!Local2)
        {
            Return (Ones)
        }
        Else
        {
            Return (Zero)
        }
    }

    Method (M009, 1, Serialized)
    {
        Local0 = (Arg0 >> 0x08)
        Local1 = (Arg0 & 0xFF)
        Local2 = 0x00
        If ((Local0 == 0x00))
        {
            If ((M085 >= 0x02))
            {
                Local2 = M011 ((M084 + 0x1502), (Local1 * 0x04), 0x00, 
                    0x01)
            }
            Else
            {
                Local2 = M011 ((M084 + 0x0100), Local1, 0x07, 0x01)
            }
        }
        ElseIf ((Local0 == 0x01))
        {
            Local1 = M038 /* External reference */
            Local2
        }
        ElseIf ((Local0 == 0x02))
        {
            (Local1 + 0x08) = M038 /* External reference */
            Local2
        }

        Return (Local2)
    }

    Method (M010, 2, Serialized)
    {
        Local0 = (Arg0 >> 0x08)
        Local1 = (Arg0 & 0xFF)
        If ((Local0 == 0x00))
        {
            If ((M085 >= 0x02))
            {
                M012 ((M084 + 0x1502), (Local1 * 0x04), 0x06, 0x02, (
                    0x02 | Arg1))
            }
            Else
            {
                M012 ((M084 + 0x0100), Local1, 0x06, 0x01, Arg1)
                M012 ((M084 + 0x0100), Local1, 0x05, 0x01, 0x00)
            }
        }
        ElseIf ((Local0 == 0x01))
        {
            M039 (Local1, Arg1)
        }
        ElseIf ((Local0 == 0x02))
        {
            M039 ((Local1 + 0x08), Arg1)
        }
    }

    Name (M037, Buffer (0x17)
    {
        /* 0000 */  0x7E, 0x81, 0x03, 0x16, 0x04, 0x15, 0x0E, 0x05,  // ~.......
        /* 0008 */  0x02, 0x20, 0x06, 0x07, 0x10, 0x11, 0x12, 0x18,  // . ......
        /* 0010 */  0x17, 0x19, 0x0B, 0x01, 0x0F, 0x0D, 0x09         // .......
    })
    Name (M227, Buffer (0x18)
    {
        /* 0000 */  0x41, 0x42, 0x03, 0x16, 0x04, 0x15, 0x0E, 0x05,  // AB......
        /* 0008 */  0x02, 0x44, 0x06, 0x07, 0x10, 0x11, 0x12, 0x18,  // .D......
        /* 0010 */  0x17, 0x45, 0x0B, 0x01, 0x0F, 0x0D, 0x09, 0x08   // .E......
    })
    Method (M029, 1, Serialized)
    {
        Switch (M085)
        {
            Case (0x02)
            {
                Return (M011 ((M084 + 0x1502), (DerefOf (M037 [Arg0]) * 
                    0x04), 0x00, 0x01))
            }
            Case (Package (0x05)
                {
                    0x03, 
                    0x04, 
                    0x05, 
                    0x06, 
                    0x07
                }

)
            {
                Return (M011 ((M084 + 0x1502), (DerefOf (M227 [Arg0]) * 
                    0x04), 0x00, 0x01))
            }
            Default
            {
                Return (M011 ((M084 + 0x0160), Arg0, 0x07, 0x01))
            }

        }
    }

    Method (M031, 1, Serialized)
    {
        Local0 = M011 ((M084 + 0x0240), Arg0, 0x00, 0x05)
        Return (M011 ((M084 + 0x0208), (Local0 / 0x08), (Local0 & 
            0x07), 0x01))
    }

    Method (M032, 2, Serialized)
    {
        Local0 = M011 ((M084 + 0x0240), Arg0, 0x00, 0x05)
        M012 ((M084 + 0x0208), (Local0 / 0x08), (Local0 & 0x07
            ), 0x01, Arg1)
    }

    Method (M013, 4, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, 0x04)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VARR,   32
        }

        Local1 = VARR /* \M013.VARR */
        Local5 = 0x7FFFFFFF
        Local5 |= 0x80000000
        Local2 = ((Local1 >> Arg2) & (Local5 >> (0x20 - Arg3)
            ))
        Return (Local2)
    }

    Method (M014, 5, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, 0x04)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VARR,   32
        }

        Local1 = VARR /* \M014.VARR */
        Local5 = 0x7FFFFFFF
        Local5 |= 0x80000000
        Local2 = (Arg2 + Arg3)
        Local2 = (0x20 - Local2)
        Local2 = (((Local5 << Local2) & Local5) >> Local2)
        Local2 = ((Local2 >> Arg2) << Arg2)
        Local3 = (Arg4 << Arg2)
        Local4 = ((Local1 & (Local5 ^ Local2)) | Local3)
        VARR = Local4
    }

    Method (M011, 4, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, 0x01)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            VARR,   8
        }

        Local1 = VARR /* \M011.VARR */
        Local2 = ((Local1 >> Arg2) & (0xFF >> (0x08 - Arg3)
            ))
        Return (Local2)
    }

    Method (M012, 5, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, 0x01)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            VARR,   8
        }

        Local1 = VARR /* \M012.VARR */
        Local2 = (Arg2 + Arg3)
        Local2 = (0x08 - Local2)
        Local2 = (((0xFF << Local2) & 0xFF) >> Local2)
        Local2 = ((Local2 >> Arg2) << Arg2)
        Local3 = (Arg4 << Arg2)
        Local4 = ((Local1 & (0xFF ^ Local2)) | Local3)
        VARR = Local4
    }

    Method (M017, 6, Serialized)
    {
        Local0 = M083 /* \M083 */
        Local0 += (Arg0 << 0x14)
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        Return (M013 (Local0, Arg3, Arg4, Arg5))
    }

    Method (M018, 7, Serialized)
    {
        Local0 = M083 /* \M083 */
        Local0 += (Arg0 << 0x14)
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        If ((M013 (Local0, 0x00, 0x00, 0x20) != 0xFFFFFFFF))
        {
            M014 (Local0, Arg3, Arg4, Arg5, Arg6)
        }
    }

    Method (M033, 3, Serialized)
    {
        Local0 = 0x00
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, 0x00, 0x08)
        While ((Local1 != 0x00))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, 0x00, 0x08)
            If (((Local2 == 0x00) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                Local0 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x0C), 0x0A, 0x02)
                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x01), 0x00, 0x08)
        }

        Return (Local0)
    }

    Method (M027, 3, Serialized)
    {
        Local0 = 0x00
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, 0x00, 0x08)
        While ((Local1 != 0x00))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, 0x00, 0x08)
            If (((Local2 == 0x00) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                Local0 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x10), 0x00, 0x02)
                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x01), 0x00, 0x08)
        }

        Return (Local0)
    }

    Method (M028, 4, Serialized)
    {
        Local0 = 0x00
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, 0x00, 0x08)
        While (((Local1 != 0x00) && (Local1 < 0xFF)))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, 0x00, 0x08)
            If (((Local2 == 0x00) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                M018 (Arg0, Arg1, Arg2, (Local1 + 0x10), 0x00, 0x02, Arg3)
                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x01), 0x00, 0x08)
        }
    }

    Method (M034, 1, Serialized)
    {
        Return (M011 ((M084 + 0x0700), Arg0, 0x00, 0x08))
    }

    Method (M015, 1, Serialized)
    {
        Return (M011 ((M084 + 0x0400), Arg0, 0x00, 0x08))
    }

    Method (M016, 2, Serialized)
    {
        M012 ((M084 + 0x0400), Arg0, 0x00, 0x08, Arg1)
    }

    Method (M035, 1, Serialized)
    {
        Return (M011 (M084, Arg0, 0x00, 0x08))
    }

    Method (M036, 2, Serialized)
    {
        M012 (M084, Arg0, 0x00, 0x08, Arg1)
    }

    Method (M001, 2, Serialized)
    {
        Local0 = 0x00
        If ((Arg0 == 0x15))
        {
            Local0 = 0x01
        }

        Return (Local0)
    }

    Method (M003, 3, Serialized)
    {
        Local0 = (Arg0 << 0x05)
        Local1 = (Local0 + Arg1)
        Local2 = (Local1 << 0x18)
        Local3 = (Local2 + Arg2)
        Return (Local3)
    }

    Method (M004, 1, Serialized)
    {
        OperationRegion (VARM, SystemIO, 0x0CD8, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg0, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        Local0 = VAR2 /* \M004.VAR2 */
        Return (Local0)
    }

    Method (M005, 2, Serialized)
    {
        Local0 = Arg0
        OperationRegion (VARM, SystemIO, 0x0CD8, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg0, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        VAR2 = Arg1
    }

    Method (M006, 3, Serialized)
    {
        Local0 = (M004 (Arg0) & Arg1)
        Local1 = (Local0 | Arg2)
        M005 (Arg0, Local1)
    }

    Method (M002, 2, Serialized)
    {
        If ((Arg0 == 0x00))
        {
            If ((Arg1 == 0x00))
            {
                M006 (M003 (0x06, 0x00, 0xC0), 0xFFFFEFFF, 0x00)
                M006 (M003 (0x01, 0x00, 0x65), 0xFFFFFEFE, 0x00)
            }

            If ((Arg1 == 0x01))
            {
                M006 (M003 (0x06, 0x00, 0xC0), 0xFFFFDFFF, 0x00)
                M006 (M003 (0x01, 0x00, 0x65), 0xFFFFFDFD, 0x00)
            }

            If ((Arg1 == 0x02))
            {
                M006 (M003 (0x06, 0x00, 0xC0), 0xFFFFBFFF, 0x00)
                M006 (M003 (0x01, 0x00, 0x65), 0xFFFFFBFB, 0x00)
            }

            If ((Arg1 == 0x03))
            {
                M006 (M003 (0x06, 0x00, 0xC0), 0xFFFF7FFF, 0x00)
                M006 (M003 (0x01, 0x00, 0x65), 0xFFFFF7F7, 0x00)
            }

            Sleep (0x01)
        }

        If ((Arg0 == 0x01))
        {
            If ((Arg1 == 0x00))
            {
                M006 (M003 (0x06, 0x00, 0xC0), 0xFFFFEFFF, 0x1000)
                M006 (M003 (0x01, 0x00, 0x65), 0xFFFFFEFE, 0x0101)
            }

            If ((Arg1 == 0x01))
            {
                M006 (M003 (0x06, 0x00, 0xC0), 0xFFFFDFFF, 0x2000)
                M006 (M003 (0x01, 0x00, 0x65), 0xFFFFFDFD, 0x0202)
            }

            If ((Arg1 == 0x02))
            {
                M006 (M003 (0x06, 0x00, 0xC0), 0xFFFFBFFF, 0x4000)
                M006 (M003 (0x01, 0x00, 0x65), 0xFFFFFBFB, 0x0404)
            }

            If ((Arg1 == 0x03))
            {
                M006 (M003 (0x06, 0x00, 0xC0), 0xFFFF7FFF, 0x8000)
                M006 (M003 (0x01, 0x00, 0x65), 0xFFFFF7F7, 0x0808)
            }

            Sleep (0x01)
        }

        If ((Arg0 == 0x00))
        {
            M008 (Arg1)
            Local0 = M004 (M003 (0x03, Arg1, 0xA5))
            Local0 &= 0xFF
            Local1 = 0x01F4
            While (((Local1 > 0x00) && (Local0 != 0x10)))
            {
                Local0 = M004 (M003 (0x03, Arg1, 0xA5))
                Local0 &= 0xFF
                Local1--
                Sleep (0x01)
            }

            If ((Local0 != 0x10))
            {
                M007 (Arg1)
            }
        }
    }

    Method (M008, 1, Serialized)
    {
        Local0 = M019 (0x00, 0x15, Arg0, 0x88)
        Local1 = ((Local0 & 0xFFFFFFF0) | 0x02)
        M020 (0x00, 0x15, Arg0, 0x88, Local1)
        M006 (M003 (0x03, Arg0, 0xA4), 0xFFFFFFFE, 0x01)
        M006 (M003 (0x03, Arg0, 0xA2), 0xFFFFDFFF, 0x2000)
        M006 (M003 (0x03, Arg0, 0xC0), 0xFFFF7FFF, 0x8000)
        M006 (M003 (0x03, Arg0, 0xA4), 0xDFFFFFFF, 0x20000000)
        Sleep (0x01)
    }

    Method (M007, 1, Serialized)
    {
        Local0 = M019 (0x00, 0x15, Arg0, 0x88)
        Local1 = ((Local0 & 0xFFFFFFF0) | 0x01)
        M020 (0x00, 0x15, Arg0, 0x88, Local1)
        M006 (M003 (0x03, Arg0, 0xA4), 0xFFFFFFFE, 0x00)
        M006 (M003 (0x03, Arg0, 0xA2), 0xFFFFDFFF, 0x2000)
        Sleep (0x01)
    }

    Method (M111, 2, Serialized)
    {
        If ((Arg0 != 0x00))
        {
            Local0 = M110 /* \M110 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = 0x00
                Local2 = M013 ((Local0 + Local1), 0x00, 0x00, 0x08)
                While (((Local2 != 0xFF) && (Local2 != 0x00)))
                {
                    Local3 = M013 ((Local0 + Local1), 0x01, 0x00, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        Local4 = M013 ((Local0 + Local1), 0x02, 0x00, 0x08)
                        If ((Local4 == 0x00))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                            M010 (Local5, Local6)
                        }

                        If ((Local4 == 0x01))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                            While ((M009 (Local5) != Local6)){}
                        }

                        If ((Local4 == 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, 0x00, 0x20)
                            Sleep (((Local5 + 0x03E7) / 0x03E8))
                        }
                    }

                    Local1 += 0x08
                    Local2 = M013 ((Local0 + Local1), 0x00, 0x00, 0x08)
                }
            }
        }
    }

    Method (M228, 1, Serialized)
    {
        If ((Arg0 > 0x03))
        {
            Local0 = M110 /* \M110 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = 0x00
                Local2 = M013 ((Local0 + Local1), 0x00, 0x00, 0x08)
                While (((Local2 != 0xFF) && (Local2 != 0x00)))
                {
                    Local3 = M013 ((Local0 + Local1), 0x07, 0x00, 0x08)
                    If ((Local3 == Arg0))
                    {
                        Local4 = M013 ((Local0 + Local1), 0x02, 0x00, 0x08)
                        If ((Local4 == 0x00))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                            M010 (Local5, Local6)
                        }

                        If ((Local4 == 0x01))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                            While ((M009 (Local5) != Local6)){}
                        }

                        If ((Local4 == 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, 0x00, 0x20)
                            Sleep (((Local5 + 0x03E7) / 0x03E8))
                        }
                    }

                    Local1 += 0x08
                    Local2 = M013 ((Local0 + Local1), 0x00, 0x00, 0x08)
                }
            }
        }
    }

    Method (M219, 2, Serialized)
    {
        If ((Arg0 != 0x00))
        {
            Local0 = M221 /* \M221 */
            If ((Local0 & 0x02))
            {
                Local0 = M220 /* \M220 */
                If (Local0)
                {
                    Local0 += 0x10
                    Local1 = 0x00
                    Local2 = 0x01
                    While ((Local2 != 0xFF))
                    {
                        Local2 = M013 ((Local0 + Local1), 0x00, 0x00, 0x08)
                        Local3 = M013 ((Local0 + Local1), 0x01, 0x00, 0x08)
                        Local4 = M013 ((Local0 + Local1), 0x04, 0x00, 0x08)
                        Local5 = M013 ((Local0 + Local1), 0x07, 0x00, 0x08)
                        If ((Local4 == Arg0))
                        {
                            If (((Local2 < 0x0A) && (Local5 & 0x80)))
                            {
                                If ((Arg1 == 0x00))
                                {
                                    If ((M085 == 0x04))
                                    {
                                        M012 ((M084 + 0x0E00), 0x00, (Local2 * 0x02), 0x02, 0x00)
                                    }
                                    Else
                                    {
                                        M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                            0x01) * 0x04), 0x04, 0x00)
                                    }
                                }
                                ElseIf ((Local5 & 0x04))
                                {
                                    If ((Arg1 == 0x01))
                                    {
                                        If ((M085 == 0x04))
                                        {
                                            M012 ((M084 + 0x0E00), 0x00, (Local2 * 0x02), 0x02, 0x03)
                                        }
                                        Else
                                        {
                                            M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                                0x01) * 0x04), 0x04, 0x0F)
                                        }
                                    }

                                    If ((Arg1 == 0x02))
                                    {
                                        Local6 = M019 (0x00, M013 ((Local0 + Local1), 0x05, 0x00, 0x08), 
                                            M013 ((Local0 + Local1), 0x06, 0x00, 0x08), 0x68)
                                        If (((Local6 & 0x0100) && (Local6 != 0xFFFFFFFF)))
                                        {
                                            If ((M085 == 0x04))
                                            {
                                                M012 ((M084 + 0x0E00), 0x00, (Local2 * 0x02), 0x02, 0x01)
                                            }
                                            Else
                                            {
                                                M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                                    0x01) * 0x04), 0x04, Local3)
                                            }
                                        }
                                    }
                                }
                                ElseIf ((M085 == 0x04))
                                {
                                    M012 ((M084 + 0x0E00), 0x00, (Local2 * 0x02), 0x02, 0x01)
                                }
                                Else
                                {
                                    M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                        0x01) * 0x04), 0x04, Local3)
                                }

                                Local2 = 0xFF
                            }
                        }

                        Local1 += 0x0C
                    }
                }
            }
        }
    }

    Method (M112, 2, Serialized)
    {
        If ((Arg0 != 0x00))
        {
            Local0 = M109 /* \M109 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = 0x00
                Local2 = 0x01
                While (((Local2 != 0xFF) && (Local2 != 0x00)))
                {
                    Local2 = M013 ((Local0 + Local1), 0x00, 0x00, 0x08)
                    Local3 = M013 ((Local0 + Local1), 0x01, 0x00, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        If ((Local3 < 0x02))
                        {
                            Local4 = M013 ((Local0 + Local1), 0x02, 0x00, 0x08)
                            If ((Local4 == 0x00))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, 0x00, 0x10)
                                Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                                M010 (Local5, Local6)
                            }
                        }

                        If ((Local3 == 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, 0x00, 0x20)
                            Sleep (((Local5 + 0x03E7) / 0x03E8))
                        }
                    }

                    Local1 += 0x08
                }
            }
        }
    }

    Method (M113, 1, Serialized)
    {
        If ((Arg0 != 0x00))
        {
            Local0 = M108 /* \M108 */
            Local7 = 0x01
            If (Local0)
            {
                Local0 += 0x10
                Local1 = 0x00
                Local2 = 0x01
                While (((Local2 != 0xFF) && (Local2 != 0x00)))
                {
                    Local2 = M013 ((Local0 + Local1), 0x00, 0x00, 0x08)
                    If ((Local2 == Arg0))
                    {
                        Local2 = 0xFF
                        Local3 = M013 ((Local0 + Local1), 0x01, 0x00, 0x08)
                        If ((Local3 == 0x00))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, 0x00, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                        }

                        If ((Local3 == 0x01))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, 0x00, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, 0x00, 0x08)
                            Local7 &= (M009 (Local5) == Local6)
                        }

                        If ((Local3 == 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, 0x00, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, 0x00, 0x08)
                            Local7 &= (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x08, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x0A, 0x00, 0x08)
                            Local7 &= (M009 (Local5) == Local6)
                        }

                        If ((Local3 == 0x03))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, 0x00, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, 0x00, 0x08)
                            Local7 |= (M009 (Local5) == Local6)
                        }

                        If ((Local3 == 0x04))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, 0x00, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, 0x00, 0x08)
                            Local7 |= (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x08, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x0A, 0x00, 0x08)
                            Local7 |= (M009 (Local5) == Local6)
                        }
                    }
                    Else
                    {
                        Local1 += 0x0B
                    }
                }
            }
        }
        Else
        {
            Local7 = 0x00
        }

        If (Local7)
        {
            Local7 = 0x01
        }

        Return (Local7)
    }

    Method (M114, 3, Serialized)
    {
        Local7 = 0x00
        If (!M001 (Arg0, Arg1))
        {
            Name (M115, Buffer (0x05){})
            CreateWordField (M115, 0x00, M116)
            CreateField (M115, 0x10, 0x03, M117)
            CreateField (M115, 0x13, 0x05, M118)
            CreateByteField (M115, 0x03, M119)
            CreateByteField (M115, 0x04, M120)
            M116 = 0x05
            M119 = 0x00
            M118 = Arg0
            M117 = Arg1
            If ((Arg2 == 0x00))
            {
                M120 = 0x00
                \_SB.ALIB (0x06, M115)
            }
            Else
            {
                M120 = 0x01
                \_SB.ALIB (0x06, M115)
                Local0 = M017 (0x00, Arg0, Arg1, 0x19, 0x00, 0x08)
                If (((Local0 != 0x00) && (Local0 != 0xFF)))
                {
                    Local1 = M019 (Local0, 0x00, 0x00, 0x00)
                    Local2 = 0x7FFFFFFF
                    Local2 |= 0x80000000
                    If (((Local1 != 0x00) && (Local1 != Local2)))
                    {
                        Local7 = 0x01
                    }
                }
            }
        }
        ElseIf ((Arg2 == 0x00))
        {
            M002 (0x01, Arg1)
        }
        Else
        {
            M002 (0x00, Arg1)
            Local0 = M017 (0x00, Arg0, Arg1, 0x19, 0x00, 0x08)
            If (((Local0 != 0x00) && (Local0 != 0xFF)))
            {
                Local1 = M019 (Local0, 0x00, 0x00, 0x00)
                Local2 = 0x7FFFFFFF
                Local2 |= 0x80000000
                If (((Local1 != 0x00) && (Local1 != Local2)))
                {
                    Local7 = 0x01
                }
            }
        }

        Return (Local7)
    }

    Name (M046, Zero)
    Name (M047, Ones)
    Method (M045, 0, Serialized)
    {
        Local0 = 0x00
        If ((M047 == Ones))
        {
            M047 = 0x00
            M046 = 0x00
            If (CondRefOf (\_OSI))
            {
                If (\_OSI ("Windows 2012"))
                {
                    M046 = 0x01
                }

                If (\_OSI ("Windows 2013"))
                {
                    M046 = 0x01
                }

                If (\_OSI ("Windows 2014"))
                {
                    M046 = 0x01
                }

                If (\_OSI ("Windows 2015"))
                {
                    M046 = 0x01
                }

                If (\_OSI ("Linux"))
                {
                    M046 = 0x02
                }
            }
        }

        If ((M046 == 0x01))
        {
            Local0 = 0x01
        }

        Return (Local0)
    }

    Method (M044, 0, Serialized)
    {
        M045 ()
        Local0 = 0x00
        If ((M046 == 0x02))
        {
            Local0 = 0x01
        }

        Return (Local0)
    }

    Method (M049, 2, Serialized)
    {
        Local0 = 0x00
        If ((Arg0 != 0x00))
        {
            Local0 = M011 (Arg0, Arg1, 0x00, 0x08)
        }

        Return (Local0)
    }

    Mutex (M230, 0x00)
    Method (M232, 3, Serialized)
    {
        Local0 = Arg0
        Local1 = Arg1
        Local2 = Arg2
        Acquire (M230, 0xFFFF)
        Local0 = Arg0
        OperationRegion (VARM, SystemIO, M231, 0x02)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            VAR1,   8, 
            VAR2,   8
        }

        VAR2 = Local1
        VAR1 = Local0
        Sleep (Local2)
        Release (M230)
    }

    Method (M043, 3, Serialized)
    {
        If (CondRefOf (MOEM))
        {
            Return (MOEM) /* External reference */
            Arg0
            Arg1
            Arg2
        }
        Else
        {
            Return (0x00)
        }
    }

    Method (MLIB, 2, Serialized)
    {
        Switch (Arg0)
        {
            Case (0x00)
            {
                Local0 = DerefOf (Arg1 [0x02])
                Switch (Local0)
                {
                    Case (0x03)
                    {
                        M228 (0x04)
                        M228 (0x05)
                    }
                    Case (0x04)
                    {
                        M228 (0x04)
                        M228 (0x06)
                    }
                    Case (0x03)
                    {
                        M228 (0x04)
                        M228 (0x07)
                    }

                }
            }

        }
    }

    Method (MPTS, 1, NotSerialized)
    {
        Local0 = M049 (M128, 0x67)
        If (((Local0 & 0x03) == 0x03))
        {
            \_SB.PCI0.SATA.TPTS (Arg0)
        }
    }

    Method (MWAK, 1, NotSerialized)
    {
        Local0 = M049 (M128, 0x67)
        If (((Local0 & 0x03) == 0x03))
        {
            \_SB.PCI0.SATA.TWAK (Arg0)
        }
    }
}



TPM2
----
[000h 0000   4]                    Signature : "TPM2"    [Trusted Platform Module hardware interface Table]
[004h 0004   4]                 Table Length : 00000034
[008h 0008   1]                     Revision : 03
[009h 0009   1]                     Checksum : A0
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "CB-01   "
[018h 0024   4]                 Oem Revision : 00000000
[01Ch 0028   4]              Asl Compiler ID : "PTEC"
[020h 0032   4]        Asl Compiler Revision : 00000002

[024h 0036   4]                     Reserved : 00000000
[028h 0040   8]              Control Address : 00000000F0900010
[030h 0048   4]                 Start Method : 00000002
/**** ACPI table terminates in the middle of a data structure! (dump table) */

Raw Table Data: Length 52 (0x34)

    0000: 54 50 4D 32 34 00 00 00 03 A0 4C 45 4E 4F 56 4F  // TPM24.....LENOVO
    0010: 43 42 2D 30 31 20 20 20 00 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 00 00 00 00 10 00 90 F0 00 00 00 00  // ................
    0030: 02 00 00 00                                      // ....


UEFI1
-----
[000h 0000   4]                    Signature : "UEFI"    [UEFI Boot Optimization Table]
[004h 0004   4]                 Table Length : 00000042
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : AE
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "CB-01   "
[018h 0024   4]                 Oem Revision : 00000002
[01Ch 0028   4]              Asl Compiler ID : "PTEC"
[020h 0032   4]        Asl Compiler Revision : 00000002

[024h 0036  16]              UUID Identifier : C68ED8E2-9DC6-4CBD-9D94-DB65ACC5C332
[034h 0052   2]                  Data Offset : 0036

Raw Table Data: Length 66 (0x42)

    0000: 55 45 46 49 42 00 00 00 01 AE 4C 45 4E 4F 56 4F  // UEFIB.....LENOVO
    0010: 43 42 2D 30 31 20 20 20 02 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 E2 D8 8E C6 C6 9D BD 4C 9D 94 DB 65  // ...........L...e
    0030: AC C5 C3 32 36 00 03 00 00 00 00 60 C9 BD 00 00  // ...26......`....
    0040: 00 00                                            // ..


UEFI2
-----
[000h 0000   4]                    Signature : "UEFI"    [UEFI Boot Optimization Table]
[004h 0004   4]                 Table Length : 00000102
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : ED
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "CB-01   "
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "PTEC"
[020h 0032   4]        Asl Compiler Revision : 00000002

[024h 0036  16]              UUID Identifier : 0D9FB197-CEFC-4E91-ACB1-2535D9E5A844
[034h 0052   2]                  Data Offset : 0036

Raw Table Data: Length 258 (0x102)

    0000: 55 45 46 49 02 01 00 00 01 ED 4C 45 4E 4F 56 4F  // UEFI......LENOVO
    0010: 43 42 2D 30 31 20 20 20 01 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 97 B1 9F 0D FC CE 91 4E AC B1 25 35  // ...........N..%5
    0030: D9 E5 A8 44 36 00 0A 00 00 00 10 00 00 00 D1 00  // ...D6...........
    0040: 00 00 11 00 00 00 8E 00 00 00 81 00 00 00 82 00  // ................
    0050: 00 00 12 00 00 00 13 00 00 00 14 00 00 00 E9 00  // ................
    0060: 00 00 03 25 05 FF F9 1A EB 4A 83 C4 C2 D4 CE B1  // ...%.....J......
    0070: 0C A3 16 29 EA 81 A0 F9 15 41 83 85 1A 86 4E 2F  // ...).....A....N/
    0080: 30 9C E5 C3 71 51 DD C7 15 44 AF FB AA EC D7 65  // 0...qQ...D.....e
    0090: FE 15 B7 2B 10 7A 91 1E E9 46 BB BA B7 1F 75 BA  // ...+.z...F....u.
    00A0: 5E 57 3D BE 20 33 92 49 CD 4F B8 6C 60 E5 E9 15  // ^W=. 3.I.O.l`...
    00B0: 69 1E 01 61 38 67 4A 86 3A 47 B4 29 9A F3 2F 3C  // i..a8gJ.:G.)../<
    00C0: CC 06 65 00 9B 59 30 86 71 4B B4 9C 0B 12 AF 56  // ..e..Y0.qK.....V
    00D0: 07 80 CF 73 D7 68 B2 FB DD 47 AC D1 21 8E F9 19  // ...s.h...G..!...
    00E0: A5 2C AA 9B DF 6C 34 F9 C2 43 A8 5F 28 63 86 A9  // .,...l4..C._(c..
    00F0: 76 C4 58 DC AF D8 22 6E F8 42 99 66 36 FF 78 8C  // v.X..."n.B.f6.x.
    0100: 9C AF                                            // ..


VFCT
----
[000h 0000   4]                    Signature : "VFCT"    
[004h 0004   4]                 Table Length : 0000FC84
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 75
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "CB-01   "
[018h 0024   4]                 Oem Revision : 00000001
[01Ch 0028   4]              Asl Compiler ID : "PTEC"
[020h 0032   4]        Asl Compiler Revision : 00000002


**** Unknown ACPI table signature [VFCT]


Raw Table Data: Length 64644 (0xFC84)

    0000: 56 46 43 54 84 FC 00 00 01 75 4C 45 4E 4F 56 4F  // VFCT.....uLENOVO
    0010: 43 42 2D 30 31 20 20 20 01 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 32 9B A3 5D BD C6 CF 49 95 A6 E8 E4  // ....2..]...I....
    0030: 2E CD 79 A7 4C 00 00 00 00 00 00 00 00 00 00 00  // ..y.L...........
    0040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0050: 01 00 00 00 00 00 00 00 02 10 E4 98 00 00 00 00  // ................
    0060: 01 00 00 00 00 FC 00 00 55 AA 7E E9 1D 02 00 00  // ........U.~.....
    0070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0080: C0 01 00 00 00 00 49 42 4D E2 C8 9F 00 00 00 00  // ......IBM.......
    0090: 00 00 00 00 00 00 00 04 20 37 36 31 32 39 35 35  // ........ 7612955
    00A0: 32 30 00 00 00 00 00 00 15 02 00 00 00 00 00 00  // 20..............
    00B0: 9A 01 00 00 00 00 00 00 30 39 2F 31 33 2F 31 36  // ........09/13/16
    00C0: 2C 30 36 3A 30 34 3A 34 35 00 00 00 E9 36 03 00  // ,06:04:45....6..
    00D0: E9 45 03 00 00 00 80 00 00 00 00 00 00 00 00 00  // .E..............
    00E0: 00 00 00 00 00 00 00 00 31 31 33 2D 43 39 31 34  // ........113-C914
    00F0: 30 30 2D 30 30 37 00 53 54 4F 4E 45 59 00 50 43  // 00-007.STONEY.PC
    0100: 49 5F 45 58 50 52 45 53 53 00 44 44 52 34 00 0D  // I_EXPRESS.DDR4..
    0110: 0A 53 74 6F 6E 65 79 20 47 65 6E 65 72 69 63 20  // .Stoney Generic 
    0120: 56 42 49 4F 53 20 20 20 20 20 20 20 20 20 20 20  // VBIOS           
    0130: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20  //                 
    0140: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20  //                 
    0150: 20 20 20 20 20 20 20 20 20 20 20 20 20 0D 0A 00  //              ...
    0160: 0D 0A 20 0D 0A 00 28 43 29 20 31 39 38 38 2D 32  // .. ...(C) 1988-2
    0170: 30 31 30 2C 20 41 64 76 61 6E 63 65 64 20 4D 69  // 010, Advanced Mi
    0180: 63 72 6F 20 44 65 76 69 63 65 73 2C 20 49 6E 63  // cro Devices, Inc
    0190: 2E 00 41 54 4F 4D 42 49 4F 53 42 4B 2D 41 4D 44  // ..ATOMBIOSBK-AMD
    01A0: 20 56 45 52 30 31 35 2E 30 34 39 2E 30 30 30 2E  //  VER015.049.000.
    01B0: 30 31 36 2E 30 30 37 31 36 31 00 53 74 6F 6E 65  // 016.007161.Stone
    01C0: 79 47 65 6E 65 72 69 00 31 33 31 33 36 34 33 30  // yGeneri.13136430
    01D0: 00 33 35 38 37 36 30 20 20 00 20 20 20 20 20 20  // .358760  .      
    01E0: 20 20 00 41 4D 44 5F 53 74 6F 6E 65 79 5F 47 65  //   .AMD_Stoney_Ge
    01F0: 6E 65 72 69 63 5C 63 6F 6E 66 69 67 2E 68 00 00  // neric\config.h..
    0200: 00 90 24 00 01 01 41 54 4F 4D 00 C0 41 03 53 01  // ..$...ATOM..A.S.
    0210: E5 01 A7 00 74 03 00 00 00 00 02 10 02 10 C0 01  // ....t...........
    0220: 90 A4 36 A5 A0 00 00 00 50 43 49 52 02 10 E4 98  // ..6.....PCIR....
    0230: 00 00 18 00 00 00 00 03 7E 00 31 0F 00 80 00 00  // ........~.1.....
    0240: 41 4D 44 20 41 54 4F 4D 42 49 4F 53 00 DE 81 4B  // AMD ATOMBIOS...K
    0250: E1 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0270: 00 00 00 00 00 00 00 00 00 00 00 00 00 56 1E 0E  // .............V..
    0280: 1F E8 D6 32 81 4D 50 00 20 1F 5E 1E 06 66 50 66  // ...2.MP. .^..fPf
    0290: 51 66 52 66 53 66 55 66 56 66 57 0E 1F A3 AE 01  // QfRfSfUfVfW.....
    02A0: 8C 0E A2 01 B2 20 E8 E4 39 0B C0 75 14 A2 02 00  // ..... ..9..u....
    02B0: 66 5F 66 5E 66 5D 66 5B 66 5A 66 59 66 58 07 1F  // f_f^f]f[fZfYfX..
    02C0: CB E8 E9 3A E8 C5 38 32 D2 89 16 B0 01 A1 AE 01  // ...:..82........
    02D0: 66 C1 C0 10 A1 A2 01 E8 F5 04 E8 24 05 E8 D0 04  // f..........$....
    02E0: E8 96 06 E8 69 03 E8 71 32 F7 45 50 00 20 75 13  // ....i..q2.EP. u.
    02F0: E8 15 30 0B C0 74 0C E8 49 00 E8 85 64 E8 C5 04  // ..0..t..I...d...
    0300: E8 E4 64 E8 B9 00 B4 80 E8 B6 38 8A C7 66 C1 E0  // ..d.......8..f..
    0310: 10 8A E3 B0 14 66 50 BB 08 10 E8 2F 3A A8 01 66  // .....fP..../:..f
    0320: 58 74 02 B0 20 66 A3 C8 9F E8 52 04 E8 DC 04 E8  // Xt.. f....R.....
    0330: 9E 3A 66 5F 66 5E 66 5D 66 5B 66 5A 66 59 66 58  // .:f_f^f]f[fZfYfX
    0340: 07 1F CB 2E 8B 1E A2 01 83 3E 53 03 00 75 04 89  // .........>S..u..
    0350: 1E 51 03 1E 2E 8E 1E 49 03 9C FA 66 C7 06 08 01  // .Q.....I...f....
    0360: 65 F0 00 F0 C7 06 40 00 74 03 89 1E 42 00 C7 06  // e.....@.t...B...
    0370: B4 01 74 03 89 1E B6 01 C7 06 7C 00 B8 6C 89 1E  // ..t.......|..l..
    0380: 7E 00 C7 06 0C 01 CB 70 89 1E 0E 01 C7 06 A8 04  // ~......p........
    0390: E0 66 89 1E AA 04 2E 8E 1E 51 03 8B C3 A3 E2 66  // .f.......Q.....f
    03A0: A3 F2 66 A3 04 67 9D 1F C3 50 4D 49 44 74 03 AE  // ..f..g...PMIDt..
    03B0: 53 00 00 00 A0 00 B0 00 B8 00 C0 00 00 00 00 BB  // S...............
    03C0: 00 10 E8 87 39 66 C1 E8 10 A3 C6 01 BB 0B 10 E8  // ....9f..........
    03D0: 7A 39 8D 3E 9A 01 66 89 45 18 C3 00 E8 CE 39 E8  // z9.>..f.E.....9.
    03E0: 58 02 75 1B 2E 3A 26 BC 01 75 05 E8 47 00 EB 11  // X.u..:&..u..G...
    03F0: 80 FC 4F 75 05 E8 14 4F EB 07 E8 7F 56 EB 02 B4  // ..Ou...O....V...
    0400: 01 E8 CC 39 CF E8 A5 39 E8 2F 02 75 05 E8 25 00  // ...9...9./.u..%.
    0410: EB 02 B4 01 E8 B9 39 CB E8 92 39 E8 1C 02 75 0F  // ......9...9...u.
    0420: 80 FC 4F 75 05 E8 E4 4E EB 07 E8 4F 56 EB 02 B4  // ..Ou...N...OV...
    0430: 01 E8 9C 39 CB 1E 06 66 50 66 51 66 52 66 53 66  // ...9...fPfQfRfSf
    0440: 55 66 56 66 57 0E 1F 3C 04 75 23 BB 0B 10 E8 FB  // UfVfW..<.u#.....
    0450: 38 8D 36 A5 00 8A 3C 80 EF 30 B3 02 8B EC 89 5E  // 8.6...<..0.....^
    0460: 0C 89 46 04 66 C1 E8 10 89 46 00 E9 AA 01 3C 05  // ..F.f....F....<.
    0470: 75 18 E8 53 03 E8 14 37 8B EC 89 56 10 89 46 00  // u..S...7...V..F.
    0480: 66 C1 E8 10 89 46 04 E9 8E 01 3C 06 75 39 E8 45  // f....F....<.u9.E
    0490: 03 66 D1 E0 8B EC 89 46 14 BB 02 10 E8 AD 38 88  // .f.....F......8.
    04A0: 46 18 E8 35 03 66 0B C0 0F 84 64 01 66 89 46 0C  // F..5.f....d.f.F.
    04B0: BB 06 10 E8 96 38 33 C0 66 89 46 00 2E 8B 16 C6  // .....83.f.F.....
    04C0: 01 89 56 10 E9 51 01 3C 0B 75 24 0A DB 75 11 B9  // ..V..Q.<.u$..u..
    04D0: 80 00 BB 02 00 8B EC 89 5E 0C 89 4E 14 E9 38 01  // ........^..N..8.
    04E0: 8A C7 E8 4B 01 E8 E7 11 0F 84 24 01 E9 29 01 3C  // ...K......$..).<
    04F0: 17 75 27 E8 D1 07 74 06 E8 43 10 E8 3D 1C E8 0A  // .u'...t..C..=...
    0500: 09 E8 BE 11 33 C9 50 24 03 0A C8 58 66 C1 E8 10  // ....3.P$...Xf...
    0510: 0A E8 8B EC 89 4E 14 E9 FE 00 3C 18 75 6D 0A FF  // .....N....<.um..
    0520: 75 18 E8 D1 06 8B EC 89 46 0C 66 C1 E8 10 89 46  // u.......F.f....F
    0530: 14 E8 24 0A 89 4E 10 E9 DE 00 80 FF 0F 74 0E 23  // ..$..N.......t.#
    0540: C9 0F 84 CB 00 E8 26 07 E8 7C 07 75 2D BB 00 1C  // ......&..|.u-...
    0550: E8 20 38 66 0B C0 0F 84 B6 00 E8 AE 08 0B C9 0F  // . 8f............
    0560: 84 AD 00 BE 00 1C E8 B8 02 0F 84 A3 00 BE 00 1C  // ................
    0570: B0 40 E8 51 03 E8 7E 06 EB 09 E8 AA 07 E8 1F 1C  // .@.Q..~.........
    0580: E8 96 07 8B EC 89 46 0C E9 8D 00 3C 19 75 09 E8  // ......F....<.u..
    0590: 5E 07 E8 11 1C E9 80 00 3C 82 75 2C 80 FB 01 75  // ^.......<.u,...u
    05A0: 0D 8B EC BE FF 05 89 76 00 8C 4E 10 EB 6A 80 FB  // .......v..N..j..
    05B0: 05 75 15 0A FF 75 0A E8 B5 04 8B EC 89 46 14 EB  // .u...u.......F..
    05C0: 57 E8 71 04 74 42 EB 50 3C 8E 75 12 80 FF 01 74  // W.q.tB.P<.u....t
    05D0: 08 80 FF 02 75 32 80 C1 02 E8 F9 04 EB 3A 3C 8F  // ....u2.......:<.
    05E0: 75 26 80 FF 05 75 05 E8 81 07 EB 2C 80 FF 07 75  // u&...u.....,...u
    05F0: 0A E8 85 07 8B EC 88 5E 0C EB 1D 80 FF 85 75 08  // .......^......u.
    0600: E8 68 07 E8 8B 1B EB 10 8B EC C6 46 19 02 EB 0F  // .h.........F....
    0610: 8B EC C6 46 19 01 EB 07 32 E4 8B EC 88 66 19 66  // ...F....2....f.f
    0620: 5F 66 5E 66 5D 66 5B 66 5A 66 59 66 58 07 1F C3  // _f^f]f[fZfYfX...
    0630: 51 8A C8 B8 01 00 D3 E0 59 C3 50 32 C0 53 BB 15  // Q.......Y.P2.S..
    0640: 10 E8 08 37 5B 3C FF 74 04 24 03 0A C0 58 C3 E8  // ...7[<.t.$...X..
    0650: 89 08 F7 C1 02 00 74 0E 06 0E 07 8D 3E FF 05 B8  // ......t.....>...
    0660: 02 00 E8 26 07 07 C3 00 00 00 00 07 00 08 08 08  // ...&............
    0670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0680: 00 00 00 00 00 00 00 80 FB 01 75 04 E8 16 00 C3  // ..........u.....
    0690: 80 FB 02 75 04 E8 5F 00 C3 80 FB 1B 75 04 E8 61  // ...u.._.....u..a
    06A0: 00 C3 0C 01 C3 56 51 8A C1 BE E9 06 E8 8E 00 8A  // .....VQ.........
    06B0: F8 B8 08 4E B3 01 B1 01 E8 0C 06 75 02 32 C9 CD  // ...N.......u.2..
    06C0: 15 59 3D 00 4E 75 2C 33 C0 33 D2 F6 C3 01 74 02  // .Y=.Nu,3.3....t.
    06D0: 0C 02 F6 C3 02 74 02 0C 01 F6 C3 40 74 03 80 CA  // .....t.....@t...
    06E0: 01 81 E3 88 00 0B C3 8B D9 23 D8 74 06 8B C8 24  // .........#.t...$
    06F0: 00 5E C3 0C 01 5E C3 B8 08 4E B3 02 CD 15 3D 00  // .^...^...N....=.
    0700: 4E C3 06 57 56 57 66 33 DB 8B DF 66 33 C9 0E 59  // N..WVWf3...f3..Y
    0710: 66 C1 E1 04 66 03 CB BB 1B 00 B8 08 4E CD 15 5E  // f...f.......N..^
    0720: 3D 00 4E 75 14 B9 20 00 66 26 8B 05 66 89 04 83  // =.Nu.. .f&..f...
    0730: C6 04 83 C7 04 E2 F1 33 C0 5E 5F 07 C3 51 B9 08  // .......3.^_..Q..
    0740: 00 D0 E8 73 03 2E 0A 2C 46 FE C9 75 F4 8A C5 59  // ...s...,F..u...Y
    0750: C3 02 01 04 08 20 10 40 80 00 50 51 B0 B6 E6 43  // ..... .@..PQ...C
    0760: B0 33 E6 42 B0 05 E6 42 E4 61 8A E0 0C 03 E6 61  // .3.B...B.a.....a
    0770: 8A C4 B9 C8 00 E8 CC 2F E6 61 59 58 C3 00 1E 56  // ......./.aYX...V
    0780: 0E 1F 80 3E 02 00 80 76 05 C6 06 02 00 80 8A 0E  // ...>...v........
    0790: 02 00 C1 E1 09 FC C6 06 21 00 00 33 F6 32 E4 AC  // ........!..3.2..
    07A0: 02 E0 E2 FB F6 D4 FE C4 88 26 21 00 5E 1F C3 00  // .........&!.^...
    07B0: E8 2D 2E 75 03 E8 62 30 E8 BD 2E E8 3A 2E E8 59  // .-.u..b0....:..Y
    07C0: 2B E8 7A 0D C3 B0 01 C3 BB 01 00 E8 B6 29 C3 BB  // +.z..........)..
    07D0: 01 00 E8 B9 29 C3 E8 F9 2F C3 53 BB 04 00 E8 B7  // ....).../.S.....
    07E0: 29 24 06 3C 04 75 10 BB 05 00 E8 AB 29 66 0B C0  // )$.<.u......)f..
    07F0: 74 05 66 33 C0 EB 08 BB 04 00 E8 9B 29 33 C0 5B  // t.f3........)3.[
    0800: C3 E8 A6 2F BB 0A 00 E8 84 29 C3 BB 0A 00 E8 73  // .../.....).....s
    0810: 29 66 8B C8 E8 93 2F BB 0A 00 66 2B C1 E8 6E 29  // )f..../...f+..n)
    0820: C3 E8 29 00 0B C9 74 22 E8 7F 07 E8 99 18 66 51  // ..)...t"......fQ
    0830: 66 8B C8 BB 07 00 E8 4B 29 66 25 00 FE 00 00 66  // f......K)f%....f
    0840: 0B C1 E8 49 29 66 59 0C 01 C3 32 C0 C3 E8 0C 04  // ...I)fY...2.....
    0850: 0B C9 75 46 E8 01 07 E8 1F 19 75 12 8B D1 8B CB  // ..uF......u.....
    0860: E8 A5 2A 23 C2 74 07 E8 A7 2A 33 D2 EB 29 33 D2  // ..*#.t...*3..)3.
    0870: E8 E5 06 57 E8 1A 2D 8B 45 30 5F 0B C0 74 09 23  // ...W..-.E0_..t.#
    0880: C8 74 05 E8 01 07 EB 0F E8 CD 06 E8 F9 06 EB 07  // .t..............
    0890: 33 D2 E8 73 2A 8B C8 E8 D4 03 0B D1 E8 B9 06 23  // 3..s*..........#
    08A0: CA 66 C1 E6 10 33 F6 E8 3B 0C 74 15 E8 72 0D 85  // .f...3..;.t..r..
    08B0: C1 74 F4 51 E8 DB 13 59 75 ED E8 64 0D 33 C8 EB  // .t.Q...Yu..d.3..
    08C0: E6 66 C1 EE 10 C3 A8 10 75 5A E8 0C 18 66 C1 E6  // .f......uZ...f..
    08D0: 10 33 F6 E8 0F 0C 74 24 E8 DF 0B 74 0B E8 86 0D  // .3....t$...t....
    08E0: 24 03 3C 03 75 ED EB 0A E8 7B 0D A8 01 74 E4 E8  // $.<.u....{...t..
    08F0: 01 08 E8 62 19 B5 00 E8 73 0D EB D7 E8 84 01 32  // ...b....s......2
    0900: C9 33 F6 E8 23 0C E8 CB 18 E8 A5 2D FE C1 38 C1  // .3..#......-..8.
    0910: 72 F1 66 C1 EE 10 E8 B9 17 A8 20 75 57 A8 40 75  // r.f....... uW.@u
    0920: 03 E8 04 1F E8 A0 17 0A C0 75 19 32 C9 33 F6 E8  // .........u.2.3..
    0930: F7 0B 0B F6 74 05 B5 01 E8 A2 1F E8 73 2D FE C1  // ....t.......s-..
    0940: 38 C1 72 EB 33 F6 E8 91 0B 74 26 E8 F8 0C E8 B5  // 8.r.3....t&.....
    0950: 27 75 14 E8 23 04 0A DB 74 0D E8 96 07 E8 F7 18  // 'u..#...t.......
    0960: B5 00 E8 08 0D EB DF E8 CF 18 B5 01 E8 FE 0C EB  // ................
    0970: D5 E8 1C 01 C3 E8 90 29 C3 E8 BF 17 33 C9 33 D2  // .......)....3.3.
    0980: E8 EB 02 66 33 D2 66 33 C0 E8 19 0D E8 5D 00 B1  // ...f3.f3.....]..
    0990: FF E8 A1 00 33 F6 E8 4C 0B 74 10 E8 A8 0C E8 61  // ....3..L.t.....a
    09A0: 27 74 03 E8 29 19 E8 56 19 EB EB E8 C0 17 74 02  // 't..)..V......t.
    09B0: B3 01 E8 8A 02 32 C9 E8 36 03 E8 2C 2C E8 48 29  // .....2..6..,,.H)
    09C0: 0B C0 C3 E8 78 0B E8 72 17 66 33 C0 66 BA 00 F0  // ....x..r.f3.f...
    09D0: 00 F0 E8 30 02 51 B1 01 E8 06 03 59 33 F6 E8 04  // ...0.Q.....Y3...
    09E0: 0B 74 05 E8 E9 18 EB F6 E8 4D 1E C3 B8 02 00 E8  // .t.......M......
    09F0: D5 0A 74 40 B1 07 E8 EE 24 E8 07 0D A8 04 75 12  // ..t@....$.....u.
    0A00: E8 C8 30 83 3D 00 75 0A E8 FD 28 83 E0 FD E8 00  // ..0.=.u...(.....
    0A10: 29 C3 66 BA FF FF FB FF 66 B8 00 00 04 00 E8 84  // ).f.....f.......
    0A20: 0C E8 05 0F E8 0B 30 8A C8 BB 04 00 E8 55 27 8A  // ......0......U'.
    0A30: E1 E8 5A 27 C3 E8 6A 27 74 34 38 E1 76 04 8A CC  // ..Z'..j't48.v...
    0A40: EB 06 38 C1 73 02 8A C8 BB 02 00 E8 36 27 8A E1  // ..8.s.......6'..
    0A50: E8 3B 27 BB 02 00 E8 2B 27 66 C1 E8 18 A8 20 75  // .;'....+'f.... u
    0A60: 08 B1 04 E8 81 24 0C 01 C3 E8 41 17 0C 01 C3 51  // .....$....A....Q
    0A70: E8 2F 27 74 0C 8A CC BB 02 00 E8 07 27 8A C4 8A  // ./'t........'...
    0A80: E1 59 C3 33 F6 E8 52 0A 74 05 E8 29 17 EB F6 C3  // .Y.3..R.t..)....
    0A90: 33 F6 E8 45 0A 74 05 E8 2B 17 EB F6 C3 E8 1D 2D  // 3..E.t..+......-
    0AA0: 75 1B 80 F9 01 75 17 33 F6 E8 2E 0A 74 0C 51 E8  // u....u.3....t.Q.
    0AB0: 87 17 B5 01 E8 B6 0B 59 EB EF E8 D3 FF C3 E8 C2  // .......Y........
    0AC0: FF 33 F6 E8 14 0A 74 0C 51 E8 03 18 B5 00 E8 9C  // .3....t.Q.......
    0AD0: 0B 59 EB EF C3 B8 02 00 E8 EC 09 74 03 E8 07 24  // .Y.........t...$
    0AE0: C3 E8 D1 1D 8B C8 66 C1 E8 10 8B D0 C3 8A C3 24  // ......f........$
    0AF0: 80 E8 E5 15 32 C9 B5 10 E8 73 1D E8 B3 2B FE C1  // ....2....s...+..
    0B00: 38 C1 72 F2 C3 E8 5E 15 3B C1 7C 3A 8B C1 E8 9E  // 8.r...^.;.|:....
    0B10: 15 E8 99 1F 8B C8 51 E8 CE 15 E8 92 15 59 E8 8C  // ......Q......Y..
    0B20: 1F 3B C8 72 02 8B C1 8D 5C 04 E8 C9 31 32 C9 B5  // .;.r....\...12..
    0B30: 0F E8 3A 1D E8 7A 2B FE C1 38 C1 72 F2 8D 5C 04  // ..:..z+..8.r..\.
    0B40: E8 30 32 0B C0 C3 33 C0 C3 52 E8 9C 00 8A C2 8B  // .02...3..R......
    0B50: D1 66 C1 E2 10 8A D0 32 C0 B9 00 02 E8 2D 1F 66  // .f.....2.....-.f
    0B60: C1 EA 10 8B CA 5A E8 80 00 E8 07 32 66 C1 E8 02  // .....Z.....2f...
    0B70: 0A F6 75 04 66 C1 E8 02 67 26 88 07 66 C1 E8 0A  // ..u.f...g&..f...
    0B80: 67 26 88 47 01 66 C1 E8 0A 67 26 88 47 02 66 83  // g&.G.f...g&.G.f.
    0B90: C7 04 83 C3 04 E2 D2 C3 51 E8 4D 00 53 67 26 8A  // ........Q.M.Sg&.
    0BA0: 47 02 66 C1 E0 0A 67 26 8A 47 01 66 C1 E0 0A 67  // G.f...g&.G.f...g
    0BB0: 26 8A 07 66 C1 E0 02 0A F6 75 04 66 C1 E0 02 E8  // &..f.....u.f....
    0BC0: 1C 31 66 83 C7 04 83 C3 04 E2 D2 5B 59 8A C2 8B  // .1f........[Y...
    0BD0: D1 66 C1 E2 10 8A D0 B9 00 03 53 E8 AE 1E 5B E8  // .f........S...[.
    0BE0: CF 2A FE C1 38 C1 72 F2 C3 BB 00 18 33 C0 8A C2  // .*..8.r.....3...
    0BF0: C1 E0 02 03 D8 C3 53 BB 03 00 E8 87 25 66 25 FF  // ......S.....%f%.
    0C00: 0F FF 0F 5B C3 53 66 50 66 51 66 8B C8 BB 03 00  // ...[.SfPfQf.....
    0C10: E8 71 25 66 23 C2 66 0B C1 E8 72 25 66 59 66 58  // .q%f#.f...r%fYfX
    0C20: 5B C3 53 66 50 BB 06 00 E8 59 25 8A DC 66 58 8A  // [.SfP....Y%..fX.
    0C30: C3 80 E3 20 D0 EB 24 10 C0 E8 04 0A C3 5B C3 B8  // ... ..$......[..
    0C40: 2C 06 F6 C3 01 75 03 B8 0C 06 E8 45 00 B8 2D 06  // ,....u.....E..-.
    0C50: F6 C3 10 75 03 B8 0D 06 E8 37 00 C3 BB 05 00 E8  // ...u.....7......
    0C60: 22 25 25 FF 0F 8B C8 66 C1 E0 10 8B D0 C3 E8 97  // "%%....f........
    0C70: 26 23 C8 81 E2 15 01 23 D1 66 C1 E2 10 8B D1 BB  // &#.....#.f......
    0C80: 05 00 E8 FF 24 66 25 00 F0 EA FE 66 0B C2 E8 FD  // ....$f%....f....
    0C90: 24 C3 66 50 53 51 66 52 66 33 D2 33 DB 8A DC 8A  // $.fPSQfRf3.3....
    0CA0: E8 8A C8 80 E1 1F 66 BA 01 00 00 00 66 D3 E2 E8  // ......f.....f...
    0CB0: D2 24 66 0B C2 F6 C5 20 75 03 66 33 C2 E8 CE 24  // .$f.... u.f3...$
    0CC0: 66 5A 59 5B 66 58 C3 66 50 53 BB 06 00 E8 B4 24  // fZY[fX.fPS.....$
    0CD0: A8 10 75 09 BB F0 16 E8 99 30 3D 5A A5 5B 66 58  // ..u......0=Z.[fX
    0CE0: C3 B8 04 06 80 F1 01 C0 E1 05 0A C1 E8 A3 FF C3  // ................
    0CF0: 53 66 50 BB F8 16 E8 7A 30 8A C1 E8 E0 2F 66 58  // SfP....z0..../fX
    0D00: 5B C3 53 BB F8 16 E8 6A 30 83 E0 01 5B C3 66 50  // [.S....j0...[.fP
    0D10: E8 E3 FE A9 EA 0E 66 58 C3 BB 06 00 E8 65 24 66  // ......fX.....e$f
    0D20: C1 E8 10 25 FF 0F C3 BB 06 00 E8 57 24 66 25 FF  // ...%.......W$f%.
    0D30: FF 00 F0 66 C1 E2 10 66 0B C2 E8 51 24 C3 53 66  // ...f...f...Q$.Sf
    0D40: 50 BB 07 00 E8 3D 24 F6 C4 01 66 58 B0 06 74 02  // P....=$...fX..t.
    0D50: B0 08 5B C3 53 BB 07 00 E8 29 24 80 E4 FE 80 FD  // ..[.S....)$.....
    0D60: 06 74 03 80 CC 01 E8 25 24 5B C3 53 B8 06 06 C0  // .t.....%$[.S....
    0D70: E3 05 0A C3 E8 1B FF 5B C3 66 50 BB 06 00 E8 03  // .......[.fP.....
    0D80: 24 24 40 C0 E8 06 8A D8 66 58 C3 57 66 50 66 33  // $$@.....fX.WfPf3
    0D90: C0 B9 08 00 FC F3 66 AB 66 58 5F E8 BA 01 0B C0  // ......f.fX_.....
    0DA0: 75 09 E8 56 07 74 3C 85 C1 74 F7 E8 19 07 8D 9C  // u..V.t<..t......
    0DB0: 6A 01 E8 BE 2F 26 89 05 8D 9C 6E 01 E8 B4 2F 26  // j.../&....n.../&
    0DC0: 89 45 02 8D 9C B5 02 E8 A9 2F 02 C0 04 04 26 88  // .E......./....&.
    0DD0: 45 06 26 88 45 07 26 88 45 08 B0 07 26 88 45 04  // E.&.E.&.E...&.E.
    0DE0: 0A C0 C3 32 C0 C3 B3 81 E8 1E 2D 75 04 83 C8 01  // ...2......-u....
    0DF0: C3 33 C0 C3 66 50 53 51 52 56 57 E8 C9 FE 74 03  // .3..fPSQRVW...t.
    0E00: E8 3B 07 5F 5E 5A 59 5B 66 58 C3 33 C9 E8 AD 29  // .;._^ZY[fX.3...)
    0E10: 0F 85 B5 00 66 BA FC FC 0C FF 66 33 C0 E8 85 08  // ....f.....f3....
    0E20: 33 F6 E8 C0 06 0F 84 83 00 E8 F5 07 A9 C8 0E 74  // 3..............t
    0E30: 5B E8 CF 08 A8 04 74 38 B8 11 00 E8 24 07 74 2B  // [.....t8....$.t+
    0E40: 8D 5C 28 E8 E5 09 3C 02 74 21 3C 01 74 11 56 8B  // .\(...<.t!<.t.V.
    0E50: F7 E8 F6 14 E8 CA 07 E8 81 00 5E 85 C1 74 0C E8  // ..........^..t..
    0E60: 68 00 56 8B F7 E8 BD 00 5E EB B7 E8 B7 00 EB B2  // h.V.....^.......
    0E70: A8 08 75 F7 A8 10 75 F3 B8 11 00 E8 E4 06 74 A2  // ..u...u.......t.
    0E80: E8 47 00 56 8B F7 E8 C1 14 5E EB 96 A9 11 00 74  // .G.V.....^.....t
    0E90: 91 B8 C8 0E E8 CB 06 75 89 E8 67 08 A8 02 74 06  // .......u..g...t.
    0EA0: E8 82 00 E9 7C FF E8 A1 14 E9 76 FF E8 2C 00 75  // ....|.....v..,.u
    0EB0: 03 E8 A4 00 33 F6 E8 2C 06 74 0E E8 63 07 85 C1  // ....3..,.t..c...
    0EC0: 74 F4 51 E8 78 09 59 EB ED C3 8D 5D 28 66 C1 E3  // t.Q.x.Y....](f..
    0ED0: 10 8D 5C 28 B9 49 00 E8 2E 28 C3 66 50 53 52 56  // ..\(.I...(.fPSRV
    0EE0: 33 C9 33 D2 8D 36 B4 0E E8 D7 07 A8 03 74 03 83  // 3.3..6.......t..
    0EF0: CA 01 66 C1 E8 10 8A 0C 80 F9 FF 74 15 66 A9 01  // ..f........t.f..
    0F00: 00 00 00 74 07 BB 01 00 D3 E3 0B D3 66 D1 E8 46  // ...t........f..F
    0F10: EB E4 8B CA 0B C9 5E 5A 5B 66 58 C3 03 07 01 05  // ......^Z[fX.....
    0F20: 06 09 0A 0B FF 66 50 53 51 E8 F5 06 0F BC D8 81  // .....fPSQ.......
    0F30: C3 E4 0E 8A 0F 66 B8 01 00 00 00 66 D3 E0 66 BA  // .....f.....f..f.
    0F40: FF FF FF FF E8 5E 07 59 5B 66 58 C3 01 12 0B 10  // .....^.Y[fX.....
    0F50: 09 13 14 11 0C 15 16 17 50 53 52 E8 7D FF 75 13  // ........PSR.}.u.
    0F60: B9 08 00 E8 A2 23 23 C8 75 19 33 C0 E8 8C 05 8B  // .....##.u.3.....
    0F70: C8 EB 10 83 F9 02 74 0B E8 FE FD 80 FB 01 75 03  // ......t.......u.
    0F80: 83 E1 FD 5A 5B 58 C3 57 52 50 E8 F8 25 8B D1 8B  // ...Z[X.WRP..%...
    0F90: 05 83 F8 FF 74 0B 83 C7 02 23 D0 74 F0 8B CA EB  // ....t....#.t....
    0FA0: 05 E8 64 23 8B C8 58 5A 5F C3 56 83 EC 04 8B EC  // ..d#..XZ_.V.....
    0FB0: 66 33 C0 66 89 46 00 66 BA 00 F0 00 F0 E8 45 FC  // f3.f.F.f......E.
    0FC0: 66 C1 E6 10 E8 34 05 0B C0 74 1E 85 C1 74 F5 55  // f....4...t...t.U
    0FD0: E8 56 00 5D 74 04 33 C8 EB EA E8 B9 06 66 3B 56  // .V.]t.3......f;V
    0FE0: 00 76 E1 66 89 56 00 EB DB E8 0A FC 74 07 66 8B  // .v.f.V......t.f.
    0FF0: 46 00 E8 05 00 83 C4 04 5E C3 33 F6 66 50 E8 D9  // F.......^.3.fP..
    1000: 04 66 58 8D 9C D8 02 E8 D4 2C 66 8B D0 E8 E6 FB  // .fX......,f.....
    1010: E8 CC 1A 8D 9C 1C 03 E8 59 2D 38 D0 74 0A 8A C2  // ........Y-8.t...
    1020: E8 BB 2C B0 02 E8 5D 06 C3 50 51 E8 99 04 32 C0  // ..,...]..PQ...2.
    1030: E8 52 06 E8 0E 04 E8 BA 00 8D 9C 40 03 E8 33 2D  // .R.........@..3-
    1040: 38 E8 74 0A 8A C5 E8 95 2C B0 02 E8 37 06 E8 3B  // 8.t.....,...7..;
    1050: 01 75 7F E8 96 01 75 7A E8 B7 00 74 75 E8 02 01  // .u....uz...tu...
    1060: 74 70 8D 9C 4C 01 E8 0A 2D 8B C8 8B D3 8D 9C 00  // tp..L...-.......
    1070: 03 E8 FF 2C 3B C1 74 05 B0 02 E8 08 06 E8 B8 0B  // ...,;.t.........
    1080: 8D 9C 00 03 E8 35 1A 8D 9C D8 02 E8 50 2C 66 C1  // .....5......P,f.
    1090: CE 10 8B FE 66 C1 CE 10 E8 80 01 E8 CB 01 E8 89  // ....f...........
    10A0: 05 8A E9 8D 9C DC 02 32 C9 E8 76 2C E8 72 05 66  // .......2..v,.r.f
    10B0: 25 FF 0F 00 00 E8 EE 04 80 F9 01 75 04 66 C1 E0  // %..........u.f..
    10C0: 10 59 58 66 BA FF FF FF FF 66 33 D0 E8 36 FB 33  // .YXf.....f3..6.3
    10D0: D2 C3 E8 05 00 0C 01 59 58 C3 8D 9C 4C 03 E8 92  // .......YX...L...
    10E0: 2C 8A C4 E8 F8 2B 8D 9C D4 02 E8 86 2C 8A C4 E8  // ,....+......,...
    10F0: EC 2B C3 53 66 50 8D 9C 4C 03 E8 76 2C 8A E0 E8  // .+.SfP..L..v,...
    1100: DC 2B 8D 9C D4 02 E8 6A 2C 8A E0 E8 D0 2B 66 58  // .+.....j,....+fX
    1110: 5B C3 56 83 EC 06 8B EC E8 AB 04 89 56 00 E8 9C  // [.V.........V...
    1120: 1C 89 5E 02 E8 1F 05 89 56 04 33 F6 E8 AB 03 74  // ..^.....V.3....t
    1130: 27 E8 92 04 3B 56 00 74 1B E8 0A 05 E8 D4 1F 74  // '...;V.t.......t
    1140: 08 8B 56 04 E8 CC 1F 75 E3 E8 7A 04 E8 6E 1C 3B  // ..V....u..z..n.;
    1150: 5E 02 75 D8 33 DB EB 03 80 CB 01 83 C4 06 0A DB  // ^.u.3...........
    1160: 5E C3 E8 61 04 E8 1C 04 8A DD E8 A0 1C 8B C1 80  // ^..a............
    1170: FD FF 74 0A E8 2F 04 80 F9 00 74 02 8A C4 8A E8  // ..t../....t.....
    1180: 8D 9C 3C 03 32 C9 E8 99 2B 0B DB C3 83 EC 08 8B  // ..<.2...+.......
    1190: EC E8 32 04 E8 ED 03 E8 92 1B 56 8A 6E 00 E8 36  // ..2.......V.n..6
    11A0: 00 0B F6 5E 74 14 F6 46 01 01 75 0E 83 C5 02 FE  // ...^t..F..u.....
    11B0: C9 0A C9 75 E5 80 CB 01 EB 17 8D 9C 4C 03 E8 B2  // ...u........L...
    11C0: 2B 38 C5 74 0A 8A C5 E8 14 2B B0 02 E8 B6 04 32  // +8.t.....+.....2
    11D0: DB 83 C4 08 0A DB C3 51 33 F6 E8 FD 02 0B F6 74  // .......Q3......t
    11E0: 07 E8 46 04 38 E9 75 F2 0B F6 59 C3 33 C9 56 E8  // ..F.8.u...Y.3.V.
    11F0: 37 03 0B F6 5E 74 0C FE C1 E8 B5 24 38 C1 75 EE  // 7...^t.....$8.u.
    1200: 0C 01 C3 8D 9C D4 02 E8 69 2B 38 C8 74 0A 8A C1  // ........i+8.t...
    1210: E8 CB 2A B0 02 E8 6D 04 32 C0 C3 E8 0A 00 8D 9C  // ..*...m.2.......
    1220: D0 02 32 C9 E8 FB 2A C3 B5 00 8D 1D E8 44 2B 66  // ..2...*......D+f
    1230: 8B D0 8D 9C 02 03 E8 3A 2B 0B C0 74 2B 51 8B C8  // .......:+..t+Q..
    1240: 8D 9C 06 03 E8 2C 2B 66 C1 E0 10 8B C1 59 66 3B  // .....,+f.....Yf;
    1250: C2 75 04 B5 00 EB 11 B5 02 E8 EA 03 E8 A7 1E 75  // .u.............u
    1260: 07 E8 BE F9 75 02 B5 01 C3 E8 96 03 8D 9C 40 03  // ....u.........@.
    1270: B1 03 E8 AD 2A E8 39 07 8D 9C 40 03 B1 02 E8 A1  // ....*.9...@.....
    1280: 2A E8 00 03 80 FD 00 75 1D E8 94 00 66 81 FA F0  // *......u....f...
    1290: D2 00 00 75 06 66 BA 78 69 00 00 E8 B5 00 E8 EE  // ...u.f.xi.......
    12A0: 00 E8 D4 03 EB 38 E8 AA 03 E8 CC 03 66 52 E8 20  // .....8......fR. 
    12B0: 03 0B D2 74 07 E8 3F 1B 66 5A EB 22 E8 87 03 E8  // ...t..?.fZ."....
    12C0: 74 1E 66 5A 51 E8 BC 02 80 FD 02 59 75 10 B5 04  // t.fZQ......Yu...
    12D0: 66 81 FA 74 40 00 00 76 05 B5 08 66 D1 EA 8D 9C  // f..t@..v...f....
    12E0: 54 03 66 8B C2 E8 F6 29 8D 9C 40 03 E8 84 2A 8A  // T.f....)..@...*.
    12F0: E5 E8 EA 29 E8 1D 01 8D 9C 48 03 32 C9 E8 22 2A  // ...).....H.2.."*
    1300: E8 C3 02 E8 7E 02 E8 F1 1A 8D 9C 58 03 32 C9 E8  // ....~......X.2..
    1310: 10 2A E8 B1 02 E8 6C 02 8D 9C 60 03 E8 52 1A C3  // .*....l...`..R..
    1320: 53 8D 9C 29 01 E8 4B 2A 66 33 D2 0A C0 75 05 BA  // S..)..K*f3...u..
    1330: 48 3F 5B C3 8A D0 66 B8 8C 0A 00 00 F7 E2 66 8B  // H?[...f.......f.
    1340: F8 E8 82 02 B3 00 E8 62 19 66 3B D7 76 03 66 8B  // .......b.f;.v.f.
    1350: D7 5B C3 B7 01 53 8D 9C 42 03 E8 16 2A 8A C8 5B  // .[...S..B...*..[
    1360: 66 52 E8 83 00 E8 EB 02 66 3B D1 66 5A 76 09 D0  // fR......f;.fZv..
    1370: E7 E8 07 00 38 EF 72 DD 8A EF C3 53 8D 9C 2A 01  // ....8.r....S..*.
    1380: E8 F0 29 24 0F 8A E8 0A ED 75 02 B5 01 5B C3 51  // ..)$.....u...[.Q
    1390: 83 EC 08 8B EC 66 C7 46 00 48 3F 78 69 66 C7 46  // .....f.F.H?xif.F
    13A0: 04 F0 D2 00 00 E8 29 02 0B D2 74 03 E8 67 1A 8A  // ......)...t..g..
    13B0: FD 53 8D 9C 42 03 E8 BA 29 8A C8 5B E8 61 FF 66  // .S..B...)..[.a.f
    13C0: 33 C0 8B 46 00 66 3B C2 73 19 66 8B D0 E8 18 00  // 3..F.f;.s.f.....
    13D0: E8 80 02 66 3B D1 72 05 83 C5 02 EB D4 66 33 D2  // ...f;.r......f3.
    13E0: 8B 56 00 83 C4 08 59 C3 66 52 52 32 ED 83 C1 02  // .V....Y.fRR2....
    13F0: B8 06 00 F7 E1 66 33 C9 8B C8 5A 51 66 33 C0 8B  // .....f3...ZQf3..
    1400: C2 8A CF 66 F7 E1 66 C1 E0 03 59 66 F7 F1 66 8B  // ...f..f...Yf..f.
    1410: C8 66 5A C3 E8 BA 01 0B D2 74 0B E8 16 00 0A ED  // .fZ......t......
    1420: 75 11 E8 E9 18 C3 B5 00 E8 1B 02 E8 D4 1C 75 03  // u.............u.
    1430: E8 01 00 C3 B5 00 8D 9C 31 01 E8 36 29 A8 01 74  // ........1..6)..t
    1440: 02 B5 01 C3 53 E8 89 01 66 C1 E2 10 E8 77 01 8D  // ....S...f....w..
    1450: 9C B8 02 E8 1D 29 8A E8 E8 82 18 8A EB 5B C3 57  // .....).......[.W
    1460: 53 53 E8 DF FF E8 5E 01 5B E8 60 19 74 49 80 FD  // SS....^.[.`.tI..
    1470: 00 75 24 53 E8 A9 FE E8 37 05 8A CD E8 FC FE 8A  // .u$S....7.......
    1480: FD E8 64 FF 5B E8 EB 28 66 25 FF FF 00 00 66 3B  // ..d.[..(f%....f;
    1490: C8 73 21 32 DB EB 20 80 FD 02 75 18 53 E8 A6 01  // .s!2.. ...u.S...
    14A0: E8 70 1C 5B 74 0E 8D 1D E8 C8 28 3D 74 40 76 04  // .p.[t.....(=t@v.
    14B0: 32 DB EB 03 80 CB 01 5B 5F C3 53 E8 63 01 8B D8  // 2......[_.S.c...
    14C0: E8 33 F7 85 C3 5B C3 53 8B F0 E8 3B 1E 23 F0 74  // .3...[.S...;.#.t
    14D0: 07 8B C6 E8 DC 1C 8B F3 5B C3 E8 08 00 74 05 E8  // ........[....t..
    14E0: D8 FF 74 F6 C3 33 C0 0B F6 74 03 E8 33 01 33 F6  // ..t..3...t..3.3.
    14F0: E8 08 00 74 03 E8 CF FF 0B F6 C3 57 53 E8 85 20  // ...t.......WS.. 
    1500: 0B C0 74 09 8B 1D 83 C7 02 3B C3 75 F7 8B 1D 83  // ..t......;.u....
    1510: FB FF 74 0E 83 C7 02 E8 EE 1D 85 D8 74 EF 8B C3  // ..t.........t...
    1520: EB 02 33 C0 0B C0 5B 5F C3 51 33 F6 8A E9 E8 A9  // ..3...[_.Q3.....
    1530: FF 74 07 E8 70 00 38 E9 75 F4 0B F6 59 C3 33 C0  // .t..p.8.u...Y.3.
    1540: E8 B8 FF 74 13 E8 7F FF 8B DE B9 FB 00 E8 73 21  // ...t..........s!
    1550: 83 C6 08 E8 35 1D EB E8 BB F0 16 B8 5A A5 E8 95  // ....5.......Z...
    1560: 27 C3 56 51 E8 DF 00 8B CA 8B FE 33 F6 E8 75 FF  // '.VQ.......3..u.
    1570: 74 0B 3B FE 74 F7 E8 CD 00 3B D1 75 F0 8B FE 0B  // t.;.t....;.u....
    1580: FF 59 5E C3 53 66 50 8D 9C 40 03 E8 E5 27 8A E8  // .Y^.SfP..@...'..
    1590: 66 58 5B C3 8D 9C 69 03 E8 D8 27 C3 8D 9C 64 03  // fX[...i...'...d.
    15A0: E8 D0 27 0B C0 C3 53 66 50 8D 9C D4 02 E8 C3 27  // ..'...SfP......'
    15B0: 8A C8 66 58 5B C3 53 66 50 8D 9C D5 02 E8 B3 27  // ..fX[.SfP......'
    15C0: 8A C8 66 58 5B C3 53 8D 5C 14 E8 A6 27 8B D0 5B  // ..fX[.S.\...'..[
    15D0: C3 53 66 50 8D 5C 16 E8 99 27 8B D0 66 58 5B C3  // .SfP.\...'..fX[.
    15E0: 53 66 50 8D 9C 50 03 E8 89 27 66 8B D0 66 58 5B  // SfP..P...'f..fX[
    15F0: C3 53 66 50 8D 9C 54 03 E8 78 27 66 8B D0 66 58  // .SfP..T..x'f..fX
    1600: 5B C3 53 66 50 8D 5C 10 E8 68 27 8B C8 66 58 5B  // [.SfP.\..h'..fX[
    1610: C3 66 50 53 8D 9C 41 03 E8 58 27 5B 8A D8 66 58  // .fPS..A..X'[..fX
    1620: C3 53 8D 5C 08 E8 4B 27 5B C3 53 50 8D 9C 4C 03  // .S.\..K'[.SP..L.
    1630: E8 40 27 8A C8 58 5B C3 53 50 8D 9C 4D 03 E8 32  // .@'..X[.SP..M..2
    1640: 27 8A C8 58 5B C3 53 50 8D 5C 0C E8 25 27 8B D0  // '..X[.SP.\..%'..
    1650: 58 5B C3 53 66 50 8D 9C 00 03 E8 16 27 66 33 D2  // X[.SfP......'f3.
    1660: 8B D0 66 58 5B C3 8D 5C 04 E8 07 27 C3 51 8D 5C  // ..fX[..\...'.Q.\
    1670: 04 32 C9 E8 AC 26 59 C3 8D 9C 50 03 E8 F4 26 8B  // .2...&Y...P...&.
    1680: C2 E8 5A 26 C3 53 51 8A E8 E8 DA FF 24 FD 0A E8  // ..Z&.SQ.....$...
    1690: E8 DA FF 59 5B C3 66 50 8D 9C D8 02 E8 D4 26 66  // ...Y[.fP......&f
    16A0: 8B D0 66 58 C3 53 66 50 66 51 66 8B C8 BB 00 00  // ..fX.SfPfQf.....
    16B0: E8 D1 1A 66 23 C2 66 0B C1 E8 D2 1A 66 59 66 58  // ...f#.f.....fYfX
    16C0: 5B C3 BB 00 00 E8 BC 1A 66 25 03 03 FF 00 C3 57  // [.......f%.....W
    16D0: 0B C0 75 10 33 F6 E8 0C FE 74 26 E8 25 00 A8 04  // ..u.3....t&.%...
    16E0: 74 F4 EB 13 8B C8 E8 1F 1C 23 C1 74 14 E8 D7 FD  // t........#.t....
    16F0: E8 10 00 A8 04 74 0A 5F 8D 5C 28 E8 8B 05 0B F6  // .....t._.\(.....
    1700: C3 5F C3 E8 FC FE 0A C9 74 72 E8 39 FF E8 FF 19  // ._......tr.9....
    1710: 74 30 0A ED 74 10 8A CD B5 02 E8 71 1F B1 02 8D  // t0..t......q....
    1720: 9C 48 01 E8 FC 25 E8 92 02 A8 04 74 15 8D 5C 28  // .H...%.....t..\(
    1730: E8 A1 00 74 0D E8 0E FF E8 CB 19 74 3F 80 FD 02  // ...t.......t?...
    1740: 74 3A 8D 5C 28 E8 83 00 E8 13 0C 33 C9 50 8D 9C  // t:.\(......3.P..
    1750: 28 01 E8 1E 26 66 0B C0 74 03 B9 00 08 58 0A C0  // (...&f..t....X..
    1760: 75 13 8D 5C 28 E8 8A 00 75 0B 80 CD 02 E8 64 00  // u..\(...u.....d.
    1770: 74 03 80 CD 04 8D 9C 48 01 E8 A6 25 E8 C7 FE E8  // t......H...%....
    1780: 84 19 75 43 E8 C6 22 0B FF 74 3C 66 2E 81 3D 00  // ..uC.."..t<f..=.
    1790: FF FF FF 74 0F 06 0E 07 8D 5C 28 E8 EB 04 07 E8  // ...t.....\(.....
    17A0: DD 09 75 23 8D 5C 28 56 8B F7 B9 20 00 53 E8 70  // ..u#.\(V... .S.p
    17B0: 1F 5B 5E E8 1E 00 74 0F 33 C9 8D 9C 48 01 E8 79  // .[^...t.3...H..y
    17C0: 25 80 CD 06 E8 5B 25 E8 F1 01 C3 51 B9 49 00 E8  // %....[%....Q.I..
    17D0: F1 1E 59 C3 51 E8 1A 00 75 14 E8 AF 01 3C 01 75  // ..Y.Q...u....<.u
    17E0: 0D B9 20 00 E8 27 00 75 05 80 C9 01 EB 02 33 C9  // .. ..'.u......3.
    17F0: 59 C3 53 E8 7D 25 66 3D 00 FF FF FF 75 0E 83 C3  // Y.S.}%f=....u...
    1800: 04 E8 6F 25 66 3D FF FF FF 00 75 00 5B C3 50 52  // ..o%f=....u.[.PR
    1810: 32 D2 E8 5E 25 02 D0 02 D4 66 C1 E8 10 02 D0 02  // 2..^%....f......
    1820: D4 83 C3 04 E2 EC 0A D2 5A 58 C3 53 83 C3 14 E8  // ........ZX.S....
    1830: 41 25 A8 80 74 04 B0 02 EB 02 B0 01 5B C3 8D 9C  // A%..t.......[...
    1840: 4C 01 E8 1F 01 E8 73 01 B5 13 A8 08 75 0C E8 F5  // L.....s.....u...
    1850: FD 8A EA 80 FD 13 75 02 B5 03 8D 9C B8 02 66 33  // ......u.......f3
    1860: C0 8A C5 E8 78 24 E8 B8 FD A9 11 00 74 37 B5 01  // ....x$......t7..
    1870: E8 22 01 E8 45 01 A8 04 75 17 55 BD 00 00 B8 61  // ."..E...u.U....a
    1880: 40 E8 F0 02 B8 45 40 E8 EA 02 5D B5 02 E8 8A 00  // @....E@...].....
    1890: C3 E8 2F 01 B5 02 8D 5C 28 E8 DD 00 75 02 B5 01  // ../....\(...u...
    18A0: E8 77 00 EB 67 A9 C8 0E 74 3E E8 0E 01 A8 08 74  // .w..g...t>.....t
    18B0: 08 8D 5C 28 E8 B4 00 74 B5 B5 02 E8 D7 00 E8 FA  // ..\(...t........
    18C0: 00 A8 04 74 0B 8D 5C 28 E8 F8 00 E8 F8 02 EB 0A  // ...t..\(........
    18D0: 8D 9C 68 01 B8 3C 55 E8 7A 05 E8 D4 00 80 FD 00  // ..h..<U.z.......
    18E0: 75 37 B5 02 E8 C0 00 C3 A9 22 00 74 2C B5 04 E8  // u7.......".t,...
    18F0: A3 00 8D 9C 68 01 56 E8 D1 21 8B F7 E8 58 03 5E  // ....h.V..!...X.^
    1900: E8 79 21 E8 A1 00 8D 5C 28 E8 9F 21 8D 9C 68 01  // .y!....\(..!..h.
    1910: E8 4F 03 66 8B D1 E8 E9 07 C3 8D 9C B4 02 B1 02  // .O.f............
    1920: E8 FF 23 B5 02 E8 7F 00 C3 8D 9C 4C 01 E8 34 00  // ..#........L..4.
    1930: E8 88 00 A8 04 74 23 8D 5C 28 E8 86 00 E8 8B 21  // .....t#.\(.....!
    1940: 8D 9C 68 01 06 0E 07 B9 07 00 E8 E0 1D 07 E8 60  // ..h............`
    1950: 00 E8 F2 FC 8D 5C 28 E8 7C 21 8D 5C 28 E8 2B 21  // .....\(.|!.\(.+!
    1960: E8 DB FE C3 B9 61 00 E8 59 1D C3 53 81 C3 05 01  // .....a..Y..S....
    1970: E8 00 24 24 06 3C 02 5B C3 E8 10 00 3D 01 04 75  // ..$$.<.[....=..u
    1980: 0A 53 83 C3 18 E8 EB 23 5B A8 01 C3 53 83 C3 12  // .S.....#[...S...
    1990: E8 E0 23 5B C3 8D 9C B4 02 32 C9 E8 84 23 C3 8D  // ..#[.....2...#..
    19A0: 9C B4 02 E8 CD 23 C3 8D 9C B4 02 B1 01 E8 72 23  // .....#........r#
    19B0: C3 8D 9C B4 02 B1 01 E8 80 23 C3 8D 9C 48 01 E8  // .........#...H..
    19C0: B1 23 C3 55 57 51 B9 08 00 BD 00 00 BB 08 00 2B  // .#.UWQ.........+
    19D0: D9 D1 E3 8D 58 4E E8 9A 23 E8 98 01 E2 EE 8D 5C  // ....XN..#......\
    19E0: 4B E8 8F 23 B9 04 00 8B D0 BF E8 19 85 55 06 74  // K..#.........U.t
    19F0: 17 66 8B 05 8D 9A F4 01 E8 E3 22 8B 45 04 8D 9A  // .f........".E...
    1A00: F8 01 E8 F1 22 83 C5 08 83 C7 08 E2 DF 8D 7C 5E  // ....".........|^
    1A10: B9 04 00 33 ED 8B DF E8 59 23 0B C0 74 09 E8 12  // ...3....Y#..t...
    1A20: 01 E8 4C 00 83 C5 1C 83 C7 12 E2 E9 32 ED E8 76  // ..L.........2..v
    1A30: FF 8D 5C 28 E8 55 FF 3D 01 04 75 10 83 C3 14 E8  // ..\(.U.=..u.....
    1A40: 31 23 24 70 C0 E8 04 8A E8 E8 5B FF 59 5F 5D C3  // 1#$p......[.Y_].
    1A50: 20 03 58 02 3C 00 01 00 00 04 00 03 3C 00 00 08  //  .X.<.......<...
    1A60: 00 05 00 04 4B 00 00 01 80 02 E0 01 3C 00 20 00  // ....K.......<. .
    1A70: 51 8D 1D E8 FD 22 8D 9A 68 01 E8 79 22 8D 5D 02  // Q...."..h..y".].
    1A80: E8 F0 22 8D 9A 6A 01 E8 89 00 8D 5D 05 E8 E3 22  // .."..j.....]..."
    1A90: 8D 9A 6E 01 E8 7C 00 8D 5D 08 E8 D6 22 8B C8 8A  // ..n..|..]..."...
    1AA0: DC 66 C1 C8 10 8A D0 80 E2 0F 8A F0 C0 EE 04 8A  // .f..............
    1AB0: EC C0 E5 06 8A FC C0 E7 04 80 E7 03 80 E4 0F C0  // ................
    1AC0: E4 04 0A D4 80 E2 3F 80 E4 C0 C0 EC 02 0A F4 8B  // ......?.........
    1AD0: C3 8D 9A 74 01 E8 1E 22 8D 9A 72 01 8B C1 E8 15  // ...t..."..r.....
    1AE0: 22 8D 9A 76 01 33 C0 8A C6 E8 0A 22 8D 9A 78 01  // "..v.3....."..x.
    1AF0: 33 C0 8A C2 E8 FF 21 8D 5D 0C E8 76 22 8D 9A 7A  // 3.....!.]..v"..z
    1B00: 01 E8 0F 00 8D 5D 0F E8 69 22 8D 9A 7E 01 E8 E5  // .....]..i"..~...
    1B10: 21 59 C3 8B C8 8A D4 66 C1 C8 10 8A F0 80 E6 0F  // !Y.....f........
    1B20: 8A E8 C0 ED 04 8B C1 E8 CC 21 83 C3 02 8B C2 E8  // .........!......
    1B30: C4 21 C3 8D 5D 11 E8 3A 22 8A E0 BA 06 02 C0 E8  // .!..]..:".......
    1B40: 07 74 03 80 CA 80 8A C4 C0 E8 03 24 03 3C 02 75  // .t.........$.<.u
    1B50: 03 80 CA 40 3C 03 75 12 8A C4 D0 E8 A8 01 74 03  // ...@<.u.......t.
    1B60: 80 E2 FD A8 02 74 03 80 E2 FB 8B C2 8D 9A 80 01  // .....t..........
    1B70: E8 83 21 C3 3C 01 74 3D 8B D0 0F B6 C6 24 3F 04  // ..!.<.t=.....$?.
    1B80: 3C 8D 9A F8 01 E8 6E 21 0F B6 C2 83 C0 1F C1 E0  // <.....n!........
    1B90: 03 8D 9A F4 01 E8 5E 21 0F B6 DE C1 EB 06 C1 E3  // ......^!........
    1BA0: 02 2E F7 A7 50 1B 2E F7 B7 4E 1B 8D 9A F6 01 E8  // ....P....N......
    1BB0: 44 21 83 C5 08 C3 01 00 01 00 04 00 03 00 05 00  // D!..............
    1BC0: 04 00 10 00 09 00 57 8D 9C 68 01 8B FB 8B DF E8  // ......W..h......
    1BD0: 90 00 0B C9 74 44 8D 5D 18 E8 97 21 A8 80 74 0D  // ....tD.]...!..t.
    1BE0: 8B DF 56 8D 36 B4 1B E8 6D 00 5E EB 28 66 8B D1  // ..V.6...m.^.(f..
    1BF0: E8 0F 05 8D 9C A6 00 E8 79 21 3C 01 75 17 66 81  // ........y!<.u.f.
    1C00: F9 80 07 38 04 74 09 66 81 F9 00 05 D0 02 75 05  // ...8.t.f......u.
    1C10: B5 03 E8 80 FD 83 C7 1C EB B3 5F C3 8C 0A D0 02  // .........._.....
    1C20: 8A 00 E0 01 2D 00 10 00 3E 00 09 00 06 00 00 00  // ....-...>.......
    1C30: 00 00 00 00 06 00 00 00 50 53 51 B9 07 00 53 8B  // ........PSQ...S.
    1C40: DA E8 2F 21 83 F8 00 5B 74 09 66 C1 E3 10 8B DA  // ../!...[t.f.....
    1C50: E8 B5 1A 59 5B 58 C3 51 53 B9 07 00 E8 C2 1A 5B  // ...Y[X.QS......[
    1C60: 59 C3 66 50 53 83 C3 06 E8 08 21 5B 8B C8 66 C1  // Y.fPS.....![..f.
    1C70: E1 10 53 83 C3 02 E8 FA 20 8B C8 5B 66 58 C3 8D  // ..S..... ..[fX..
    1C80: 9C 48 01 32 C9 E8 9A 20 C3 57 B9 20 00 E8 9D 1A  // .H.2... .W. ....
    1C90: 5F C3 E8 0A FD 3C 01 75 71 8D 9C B6 02 E8 D3 20  // _....<.uq...... 
    1CA0: A8 02 0F 84 89 00 66 C1 CE 10 E8 1A 04 66 C1 CE  // ......f......f..
    1CB0: 10 0A C0 75 26 8D 9C 4C 01 66 B8 C4 09 00 00 E8  // ...u&..L.f......
    1CC0: 1C 20 8D 9C 4C 01 E8 96 F7 0F 85 88 00 8D 9C 4C  // . ..L..........L
    1CD0: 01 B8 3C 6A E8 7D 01 0C 01 EB 7A 8D 9C 68 01 B0  // ..<j.}....z..h..
    1CE0: 00 E8 36 01 75 07 B0 00 E8 DF 00 74 68 8D 9C 68  // ..6.u......th..h
    1CF0: 01 B0 01 E8 24 01 75 52 B0 01 E8 B0 00 75 56 B0  // ....$.uR.....uV.
    1D00: 00 E8 A9 00 EB 4F 0B F6 EB 4B 3C 04 74 21 3C 03  // .....O...K<.t!<.
    1D10: 74 1D 66 C1 CE 10 E8 AE 03 66 C1 CE 10 0A C0 74  // t.f......f.....t
    1D20: 07 B0 01 E8 A4 00 75 2D B0 00 E8 9D 00 75 26 8D  // ......u-.....u&.
    1D30: BC 68 01 8D 1D E8 3B 20 0B C0 74 19 8B DF B0 00  // .h....; ..t.....
    1D40: E8 D7 00 75 05 83 C7 1C EB E9 8B D3 8D 9C 4C 01  // ...u..........L.
    1D50: E8 E5 FE 0B F6 C3 57 53 51 E8 50 18 3B 55 02 75  // ......WSQ.P.;U.u
    1D60: 18 66 C1 CA 10 8B DA 66 C1 CA 10 3B 5D 06 75 09  // .f.....f...;].u.
    1D70: 0A C0 74 0E 3A 45 1B 74 09 83 C7 1C E2 DE 33 D2  // ..t.:E.t......3.
    1D80: EB 02 8B D7 0B D2 59 5B 5F C3 51 66 52 E8 1C 18  // ......Y[_.QfR...
    1D90: 3A 65 1A 75 09 0A C0 74 0E 3A 45 1B 74 09 83 C7  // :e.u...t.:E.t...
    1DA0: 1C E2 ED 33 FF EB 00 0B FF 66 5A 59 C3 51 E8 FB  // ...3.....fZY.Q..
    1DB0: 17 56 8D 9C 4C 01 8B F7 E8 9C FE 5E E8 5B 00 75  // .V..L......^.[.u
    1DC0: 07 83 C7 1C E2 EB 33 FF 59 C3 8D BC F4 01 8A C8  // ......3.Y.......
    1DD0: 8D 1D E8 9E 1F 0B C0 74 40 66 50 E8 C1 FB 3C 01  // .......t@fP...<.
    1DE0: 66 58 74 05 3D 40 06 73 2B 66 8B D0 8D 5D 04 E8  // fXt.=@.s+f...]..
    1DF0: 81 1F E8 61 FF 74 1D 8D 9C 4C 01 56 8B F2 E8 56  // ...a.t...L.V...V
    1E00: FE 5E 53 8D 9C 62 01 33 C0 E8 EA 1E 5B 8A C1 E8  // .^S..b.3....[...
    1E10: 08 00 75 05 83 C7 08 EB B7 C3 66 51 50 53 66 C1  // ..u.......fQPSf.
    1E20: CE 10 8B DE 66 C1 CE 10 E8 48 1F 5B 66 8B D0 E8  // ....f....H.[f...
    1E30: 30 FE 58 3C 01 75 0A 66 3B CA 75 13 E8 20 F6 75  // 0.X<.u.f;.u.. .u
    1E40: 10 3B CA 72 0A 66 3B CA 72 05 E8 12 F6 75 02 32  // .;.r.f;.r....u.2
    1E50: C0 66 59 C3 56 57 E8 31 FF 8B F7 E8 F9 FD 5F 5E  // .fY.VW.1......_^
    1E60: C3 66 50 53 66 51 52 57 56 51 8B DE B9 08 00 E8  // .fPSfQRWVQ......
    1E70: 51 18 59 8D 5C 08 8B C1 66 C1 E0 10 8A C2 E8 5D  // Q.Y.\...f......]
    1E80: 1E F6 C2 03 75 24 8B C1 24 7F BF 44 1F 80 3D FF  // ....u$..$..D..=.
    1E90: 0F 84 0F 01 3A 05 75 0D 66 8B 45 01 66 B9 00 05  // ....:.u.f.E.f...
    1EA0: 02 00 E9 96 00 83 C7 05 EB E3 F6 C2 01 74 25 8B  // .............t%.
    1EB0: C1 E8 70 01 0F 84 EB 00 33 C9 8A CC 8A D0 0A C0  // ..p.....3.......
    1EC0: 75 12 8D 5C 08 66 25 FF FF 00 00 66 C1 E0 08 E8  // u..\.f%....f....
    1ED0: 0C 1E EB B2 8A E1 8A CA 80 E1 0C C0 E9 02 80 E2  // ................
    1EE0: F0 C0 EA 04 8A EA 80 FC 70 72 2A 80 FC 75 73 25  // ........pr*..us%
    1EF0: 80 EC 70 8A C4 32 E4 50 E8 30 02 8B D8 58 38 D8  // ..p..2.P.0...X8.
    1F00: 72 05 33 C0 E9 9C 00 E8 28 02 E8 66 1E 0B C0 0F  // r.3.....(..f....
    1F10: 84 90 00 EB 1B 32 C0 E8 70 FE 0F 84 85 00 8D 5C  // .....2..p......\
    1F20: 16 8B 05 E8 D0 1D 8B 45 06 66 C1 E0 10 8B 45 02  // .......E.f....E.
    1F30: 50 E8 79 0B 66 C1 E1 10 8B C8 58 8D 1C E8 9E 1D  // P.y.f.....X.....
    1F40: 66 50 8D 5C 04 66 8B C1 E8 93 1D 66 58 66 C1 E8  // fP.\.f.....fXf..
    1F50: 10 66 81 E1 FF FF 00 00 66 F7 E1 66 50 8D 5C 06  // .f......f..fP.\.
    1F60: E8 10 1E 8B C8 66 58 66 D3 E0 66 C1 E8 10 40 8D  // .....fXf..f...@.
    1F70: 5C 14 E8 81 1D BF A4 1F 83 F9 01 74 11 BF AC 1F  // \..........t....
    1F80: 81 F9 01 01 74 08 BF B4 1F 83 F9 02 75 15 8D 5C  // ....t.......u..\
    1F90: 0C 66 8B 05 E8 47 1D 8D 5C 10 66 8B 45 04 E8 3D  // .f...G..\.f.E..=
    1FA0: 1D 0B DB 5E 5F 5A 66 59 5B 66 58 C3 00 40 01 90  // ...^_ZfY[fX..@..
    1FB0: 01 01 40 01 90 01 02 80 02 90 01 03 80 02 90 01  // ..@.............
    1FC0: 04 40 01 90 01 05 40 01 90 01 06 80 02 90 01 07  // .@....@.........
    1FD0: D0 02 5E 01 0D 40 01 90 01 0E 80 02 90 01 0F 80  // ..^..@..........
    1FE0: 02 5E 01 10 80 02 5E 01 11 80 02 E0 01 12 80 02  // .^....^.........
    1FF0: E0 01 13 80 02 90 01 23 20 04 90 01 32 20 04 B0  // .......# ...2 ..
    2000: 02 33 20 04 C0 02 62 80 02 E0 01 FF 05 0A 05 05  // .3 ...b.........
    2010: 05 00 00 00 05 0B 06 05 05 00 00 00 08 10 08 08  // ................
    2020: 08 00 00 00 56 E8 16 1A 80 E4 01 3B 04 74 09 83  // ....V......;.t..
    2030: C6 04 E2 F7 33 C0 EB 05 8B 44 02 0B C0 5E C3 57  // ....3....D...^.W
    2040: 53 50 E8 F9 19 83 E9 0A E8 E0 00 83 F8 05 76 03  // SP............v.
    2050: B8 05 00 D1 E0 03 C8 FB A5 83 C6 02 E2 FA B8 FF  // ................
    2060: FF AB 58 5B 5F C3 66 53 51 66 52 E8 41 00 E8 77  // ..X[_.fSQfR.A..w
    2070: 00 66 C1 E8 10 66 0F B7 D8 66 B8 00 00 00 03 66  // .f...f...f.....f
    2080: D3 E8 66 33 D2 66 F7 F3 E8 22 0A 66 5A 59 66 5B  // ..f3.f...".fZYf[
    2090: C3 53 66 50 BB 07 00 E8 EA 10 0A C0 66 58 5B C3  // .SfP........fX[.
    20A0: 53 66 50 BB 07 00 E8 DB 10 A8 01 66 58 5B C3 53  // SfP........fX[.S
    20B0: 66 50 8D 5C 06 E8 BB 1C 8A C8 66 58 5B C3 51 B9  // fP.\......fX[.Q.
    20C0: 08 00 E8 43 16 59 C3 53 8D 5C 08 E8 A5 1C 24 03  // ...C.Y.S.\....$.
    20D0: 5B C3 8D 5C 09 E8 9B 1C C3 51 53 B1 01 8A E8 8D  // [..\.....QS.....
    20E0: 5C 08 E8 3D 1C 5B 59 C3 53 8D 1C E8 85 1C 5B C3  // \..=.[Y.S.....[.
    20F0: 53 8D 5C 04 E8 7C 1C 5B C3 53 8D 5C 16 E8 73 1C  // S.\..|.[.S.\..s.
    2100: 5B C3 53 66 52 33 C0 E8 4C FC 66 5A 75 1B E8 34  // [.SfR3..L.fZu..4
    2110: 00 74 16 E8 15 00 40 83 F8 05 73 0D E8 BF 1B 48  // .t....@...s....H
    2120: E8 0F 00 66 8B C2 E8 B5 1B 5B C3 BB 00 1E E8 42  // ...f.....[.....B
    2130: 1C C3 BB 08 1E C1 E0 03 03 D8 C3 BB 00 1E B9 32  // ...............2
    2140: 00 E8 7F 15 C3 51 E8 E2 FF 0B C0 74 12 8B C8 BB  // .....Q.....t....
    2150: 08 1E E8 1E 1C 66 3B C2 74 07 83 C3 08 E2 F3 0B  // .....f;.t.......
    2160: DB 59 C3 B3 01 E8 A1 19 75 03 E8 1A E5 C3 B3 02  // .Y......u.......
    2170: E8 96 19 75 03 E8 0F E5 C3 B3 89 E8 09 E5 C3 B3  // ...u............
    2180: 1B E8 03 E5 C3 E8 0A EB 51 B9 0B 01 E8 FF 14 59  // ........Q......Y
    2190: C3 B8 22 06 E8 EE FF C3 B8 3F 06 E8 E7 FF C3 B8  // .."......?......
    21A0: 20 06 E8 E0 FF C3 B8 2E 06 E8 D9 FF C3 B8 3E 06  //  .............>.
    21B0: E8 D2 FF C3 C3 00 BB 20 DF E8 03 3E E8 E7 F3 B5  // ....... ...>....
    21C0: 01 E8 45 07 C3 BB 00 DF E8 F4 3D E8 D8 F3 B5 00  // ..E.......=.....
    21D0: E8 36 07 C3 80 F9 00 75 17 E8 BA F4 E8 83 19 0B  // .6.....u........
    21E0: C0 74 03 E8 5A 19 E8 CE 14 8A C8 B5 02 E8 0A 09  // .t..Z...........
    21F0: 0B F6 74 29 E8 AF F3 B5 01 E8 21 07 56 33 F6 B5  // ..t)......!.V3..
    2200: 00 E8 6A 06 5E B5 01 E8 20 F4 E8 ED 08 E8 B5 09  // ..j.^... .......
    2210: E8 93 F3 8D 9C 00 03 E8 0A 07 E8 53 07 66 C1 CE  // ...........S.f..
    2220: 10 B5 01 E8 48 06 E8 A9 FE A8 40 75 07 32 C0 B5  // ....H.....@u.2..
    2230: 01 E8 58 08 66 C1 CE 10 C3 E8 6A F3 B5 01 E8 A3  // ..X.f.....j.....
    2240: 06 B5 00 E8 D7 06 E8 3A 07 B1 0F E8 F3 0B B1 10  // .......:........
    2250: E8 EE 0B E8 26 00 C3 E8 75 00 E8 59 F3 B5 00 E8  // ....&...u..Y....
    2260: 82 06 B5 00 E8 B6 06 E8 CE F3 E8 4A 14 38 C1 74  // ...........J.8.t
    2270: 0A 80 F9 08 74 05 B5 03 E8 7F 08 C3 53 66 50 BB  // ....t.......SfP.
    2280: 02 00 E8 FF 0E 66 A9 00 00 01 00 66 58 5B 75 3E  // .....f.....fX[u>
    2290: E8 3E F3 0B D2 74 0C E8 CC F3 3C 01 74 05 B1 0F  // .>...t....<.t...
    22A0: E8 D8 0B B1 0C E8 75 00 B1 01 E8 3A 0C E8 D4 F2  // ......u....:....
    22B0: 80 FD 00 75 0D E8 FA 01 B1 0D E8 84 0B B1 03 E8  // ...u............
    22C0: 5B 00 E8 0C F3 0B D2 74 05 B1 01 E8 AD 0B C3 E8  // [......t........
    22D0: FF F2 0B D2 74 05 B1 00 E8 A0 0B B1 02 E8 3D 00  // ....t.........=.
    22E0: E8 83 F3 A8 01 74 0D E8 9A F2 80 FD 00 75 05 B0  // .....t.......u..
    22F0: 02 E8 26 04 B1 00 E8 EE 0B B1 0D E8 1F 00 C3 B1  // ..&.............
    2300: 07 E8 E3 0B E8 CA F2 0B D2 75 0C E8 38 F3 E8 F1  // .........u..8...
    2310: 0D 75 09 E8 E4 0C C3 B1 07 E8 5F 0B C3 E8 26 F3  // .u........_...&.
    2320: E8 DF 0D 75 24 51 E8 BE 0B 59 80 F9 0C 75 1A 33  // ...u$Q...Y...u.3
    2330: D2 56 83 C6 08 E8 08 0E 5E 0A C0 75 0C B9 0A 00  // .V......^..u....
    2340: E8 01 14 42 83 FA 1E 75 E8 C3 E8 84 F2 0B D2 74  // ...B...u.......t
    2350: 06 B1 12 E8 25 0B C3 E8 6C F2 E8 C4 0A C3 56 83  // ....%...l.....V.
    2360: C6 08 E8 7C 0D 5E E8 68 F2 0B D2 74 03 E8 AD 09  // ...|.^.h...t....
    2370: 80 FD 01 0F 84 D1 00 80 FD 02 0F 85 F2 00 B1 0C  // ................
    2380: E8 9A FF 56 83 C6 08 E8 B6 0D 5E 0A C0 0F 84 DF  // ...V......^.....
    2390: 00 E8 DF 00 0A DB 0F 85 D6 00 8D 9C 35 01 E8 D2  // ............5...
    23A0: 19 A8 01 74 03 E8 7F 03 E8 26 F2 0B D2 74 05 B1  // ...t.....&...t..
    23B0: 14 E8 C7 0A 66 33 C9 E8 48 F2 66 BA 50 01 40 50  // ....f3..H.f.P.@P
    23C0: 66 C1 C9 10 8A C1 66 C1 C9 10 E8 6D 0C 0F 85 9F  // f.....f....m....
    23D0: 00 66 BA 50 01 50 4F 52 E8 F6 F1 80 FA 22 5A 74  // .f.P.POR....."Zt
    23E0: 0D 8D 9C 2D 01 E8 8B 19 24 06 3C 02 75 02 B6 02  // ...-....$.<.u...
    23F0: 8D 5C 28 66 C1 C9 10 03 D9 66 C1 C9 10 E8 3A 0C  // .\(f.....f....:.
    2400: 75 6E 8A DF 32 FF 66 C1 C9 10 03 CB 66 C1 C9 10  // un..2.f.....f...
    2410: 66 BA 50 01 10 30 33 DB E8 1F 0C 75 53 66 C1 C9  // f.P..03....uSf..
    2420: 10 8B C1 66 C1 C9 10 0B C0 74 45 83 F8 10 75 0F  // ...f.....tE...u.
    2430: 8D 5C 28 E8 3D 19 66 0B C0 0F 85 7D FF EB 31 3D  // .\(.=.f....}..1=
    2440: 80 00 0F 82 74 FF EB 25 E8 B7 F1 8A E9 B1 A0 BA  // ....t..%........
    2450: 00 80 BF 32 00 8D 5C 28 E8 B4 0B 80 FF 01 74 0D  // ...2..\(......t.
    2460: B1 A2 8D 5C 28 E8 A7 0B 80 FF 01 75 03 B0 00 C3  // ...\(......u....
    2470: B0 01 C3 E8 2B 00 74 0C B0 01 E8 9D 02 75 21 E8  // ....+.t......u!.
    2480: 1F 00 75 1C 66 BA 0C 00 90 43 8D 9C 30 01 E8 A9  // ..u.f....C..0...
    2490: 0B 66 BA 20 00 90 41 8D 9C 34 01 E8 9C 0B 33 DB  // .f. ..A..4....3.
    24A0: C3 E8 5E F1 66 BA 00 00 90 47 8D 9C 28 01 E8 89  // ..^.f....G..(...
    24B0: 0B C3 E8 B1 F1 3C 01 75 0E E8 ED 02 80 FD 01 75  // .....<.u.......u
    24C0: 06 B5 02 E8 12 03 C3 8D 9C AC 03 B9 10 00 E8 F2  // ................
    24D0: 11 B0 01 E8 44 02 74 08 B5 04 E8 11 03 E9 19 01  // ....D.t.........
    24E0: B1 08 E8 5C 09 E8 66 02 B1 09 E8 54 09 E8 AC 01  // ...\..f....T....
    24F0: 8D 9C B8 03 66 33 C0 E8 E4 17 E8 47 01 B9 90 01  // ....f3.....G....
    2500: E8 36 12 B0 01 E8 F7 01 B5 02 E8 D5 02 E8 5B 01  // .6............[.
    2510: E8 E7 02 E8 C7 01 B5 03 E8 C7 02 33 C9 E8 E7 00  // ...........3....
    2520: F6 C5 01 75 2E B5 02 E8 B8 02 E8 07 01 F6 C5 04  // ...u............
    2530: 74 08 B5 01 E8 B7 02 E9 BF 00 8A FD 80 E7 03 E8  // t...............
    2540: CF 00 80 E3 03 38 FB 75 07 E8 33 01 0F 84 A9 00  // .....8.u..3.....
    2550: E8 54 01 FE C1 E8 B9 F0 38 D9 75 C1 8D 9C AC 03  // .T......8.u.....
    2560: E8 10 18 3C 03 74 05 E8 DA 00 EB A1 8D 9C B0 03  // ...<.t..........
    2570: 66 33 C0 E8 68 17 8D 9C 2A 01 E8 F6 17 A8 40 74  // f3..h...*.....@t
    2580: 0C B1 13 E8 BB 08 B0 03 E8 74 01 EB 0A B1 0A E8  // .........t......
    2590: AF 08 B0 02 E8 68 01 B5 04 E8 46 02 E8 CC 00 E8  // .....h....F.....
    25A0: 58 02 E8 38 01 B5 05 E8 38 02 33 C9 E8 58 00 80  // X..8....8.3..X..
    25B0: FD 07 75 05 E8 73 00 75 27 51 B5 04 E8 23 02 59  // ..u..s.u'Q...#.Y
    25C0: F6 C5 01 75 07 B5 03 E8 24 02 EB 2D E8 65 00 8A  // ...u....$..-.e..
    25D0: D5 E8 D3 00 E8 5D 00 38 EA 75 05 E8 A1 00 74 19  // .....].8.u....t.
    25E0: FE C1 E8 2C F0 38 D9 75 C3 8D 9C AC 03 E8 83 17  // ...,.8.u........
    25F0: 3C 04 75 05 E8 4D 00 EB A3 B0 00 E8 01 01 B1 0B  // <.u..M..........
    2600: E8 3E 08 E8 A3 01 C3 8D 9C C0 03 E8 0F 00 8A E8  // .>..............
    2610: C3 53 8D 9C C4 03 E8 04 00 5B 8A D8 C3 51 E8 52  // .S.......[...Q.R
    2620: 17 C0 E1 02 D3 E8 24 0F 59 C3 8D 9C C2 03 E8 42  // ......$.Y......B
    2630: 17 A8 01 C3 8D 9C B8 03 E8 FF 16 C3 8D 9C B8 03  // ................
    2640: E8 DF 16 C3 33 C9 33 D2 E8 E9 FF 38 D5 76 02 8A  // ....3.3....8.v..
    2650: D5 FE C1 E8 BB EF 38 D9 72 EE 33 C9 8A EA 8D 9C  // ......8.r.3.....
    2660: 5C 03 E8 BD 16 B1 0B E8 7D 08 C3 E8 94 EF 8D 9C  // \.......}.......
    2670: B8 03 E8 FE 16 66 BA 03 01 80 83 E8 BC 09 C3 51  // .....f.........Q
    2680: 53 8D 9C B0 03 E8 B2 16 FE C5 E8 95 16 80 FD 06  // S...............
    2690: 72 07 B5 02 E8 57 01 33 C9 5B 59 C3 66 33 C0 8D  // r....W.3.[Y.f3..
    26A0: 9C B0 03 E8 38 16 C3 32 ED E8 65 FF 80 E3 0C C0  // ....8..2..e.....
    26B0: EB 02 B7 03 2A FB C0 E3 03 8A EB 80 FB 18 72 03  // ....*.........r.
    26C0: 80 CD 20 E8 4B FF 80 E3 03 38 FB 72 02 8A DF 80  // .. .K....8.r....
    26D0: FB 03 75 03 80 CD 04 0A EB E8 60 FF C3 E8 22 EF  // ..u.......`...".
    26E0: 8D 9C C0 03 66 BA 02 02 90 45 E8 4D 09 C3 E8 11  // ....f....E.M....
    26F0: EF 66 BA 00 01 90 42 8D 9C B4 03 E8 3C 09 C3 E8  // .f....B.....<...
    2700: 00 EF 66 BA 02 01 80 50 E8 2F 09 C3 E8 E2 EE 8B  // ..f....P./......
    2710: C2 66 33 D2 B9 8C 0A F7 F1 C3 E8 E5 EE 66 BA 00  // .f3..........f..
    2720: 06 80 50 E8 14 09 C3 E8 D8 EE 66 BA 11 01 80 50  // ..P.......f....P
    2730: B0 04 E8 05 09 C3 E8 C9 EE 66 BA 00 06 90 40 8D  // .........f....@.
    2740: 9C C8 03 E8 F4 08 8D 9C C8 03 E8 26 16 C3 E8 BB  // ...........&....
    2750: FF E8 BD EE 8A E3 80 CC 80 50 E8 A5 EE 58 66 BA  // .........P...Xf.
    2760: 00 01 80 61 E8 D3 08 33 C9 E8 30 EE 0B C0 74 02  // ...a...3..0...t.
    2770: B5 10 8D 9C BC 03 E8 A9 15 8A C5 E8 84 EE 66 BA  // ..............f.
    2780: 07 01 80 50 E8 B3 08 E8 BC EE E8 79 09 75 19 8D  // ...P.......y.u..
    2790: 9C 48 03 E8 DD 15 0A C0 74 0E E8 65 EE 66 BA 0A  // .H......t..e.f..
    27A0: 01 80 50 B0 01 E8 92 08 C3 E8 42 FF E8 2E FF E8  // ..P.......B.....
    27B0: 84 FF 3C 01 75 1C E8 71 FE 74 17 33 C9 E8 47 FE  // ..<.u..q.t.3..G.
    27C0: 80 FD 07 75 0D FE C1 E8 47 EE 38 D9 75 EF B5 01  // ...u....G.8.u...
    27D0: EB 02 B5 00 E8 01 00 C3 8D 9C AC 03 B1 02 E8 41  // ...............A
    27E0: 15 C3 51 8D 9C AC 03 32 C9 E8 36 15 59 C3 51 8D  // ..Q....2..6.Y.Q.
    27F0: 9C AC 03 B1 01 E8 2A 15 59 C3 8D 9C 32 01 E8 72  // ......*.Y...2..r
    2800: 15 0A C0 75 15 B9 64 00 8D 9C AC 03 E8 64 15 3C  // ...u..d......d.<
    2810: 02 74 03 B9 90 01 E8 20 0F C3 32 E4 B1 04 33 D2  // .t..... ..2...3.
    2820: F6 E1 8B C8 E8 1D 0F C3 51 8D 5C 14 E8 44 15 66  // ........Q.\..D.f
    2830: C1 E0 10 E8 96 01 59 C3 33 C9 E8 74 0E 38 C1 73  // ......Y.3..t.8.s
    2840: 05 B5 00 E8 A5 00 B5 00 E8 99 00 FE C1 E8 64 0E  // ..............d.
    2850: 38 C1 72 E6 32 C9 8A E9 E8 5C 0E 38 C1 74 05 B5  // 8.r.2....\.8.t..
    2860: 03 E8 96 02 FE C1 E8 45 0E 38 C1 72 E9 C3 83 EC  // .......E.8.r....
    2870: 0C 8B EC 0B F6 74 29 E8 6E F8 66 C1 C8 10 80 FD  // .....t).n.f.....
    2880: 10 75 06 8D 5C 18 E8 EA 14 66 89 46 00 8D 5C 04  // .u..\....f.F..\.
    2890: E8 E0 14 66 89 46 04 8D 5C 08 E8 D6 14 88 46 0A  // ...f.F..\.....F.
    28A0: 89 4E 08 8C D0 66 C1 E0 10 8B C4 BB 2B 00 E8 0E  // .N...f......+...
    28B0: 0D 83 C4 0C C3 33 DB 83 EC 08 8B EC 89 5E 00 8C  // .....3.......^..
    28C0: D0 66 C1 E0 10 8B C4 BB 01 00 E8 F2 0C 8B EC 8B  // .f..............
    28D0: 4E 00 8B 56 02 66 8B 46 04 83 C4 08 C3 BB 25 00  // N..V.f.F......%.
    28E0: E8 0F 00 C3 BB 23 00 E8 08 00 C3 BB 0D 00 E8 01  // .....#..........
    28F0: 00 C3 83 EC 04 8B EC 89 4E 00 8C D0 66 C1 E0 10  // ........N...f...
    2900: 8B C4 E8 BA 0C 83 C4 04 C3 BB 22 00 E8 E3 FF 80  // ..........".....
    2910: FD 01 74 08 B5 01 BB 06 00 E8 D6 FF C3 BB 2C 00  // ..t...........,.
    2920: E8 CF FF C3 E8 4C 14 66 A9 00 00 FF FF 74 40 83  // .....L.f.....t@.
    2930: EC 18 8B EC 55 51 B9 04 00 83 C3 02 E8 34 14 66  // ....UQ.......4.f
    2940: 89 46 00 83 C5 04 83 C3 04 E2 F1 83 C3 04 E8 22  // .F............."
    2950: 14 66 C1 C8 10 66 89 46 00 59 5D 88 4E 14 8C D0  // .f...f.F.Y].N...
    2960: 66 C1 E0 10 8B C4 BB 31 00 E8 53 0C 83 C4 18 C3  // f......1..S.....
    2970: E8 33 EC 8D 9C D0 02 E8 F9 13 8A E8 BB 21 00 E8  // .3...........!..
    2980: 70 FF C3 8D 9C 3C 03 E8 E9 13 8A F8 E8 F5 EB 8A  // p....<..........
    2990: DD 53 8D 9C 42 03 E8 DA 13 8A E8 5B E8 07 EC E8  // .S..B......[....
    29A0: A4 EC E8 61 07 75 02 B3 01 83 EC 04 8B EC 88 4E  // ...a.u.........N
    29B0: 00 88 7E 01 88 5E 02 88 6E 03 8C D0 66 C1 E0 10  // ..~..^..n...f...
    29C0: 8B C4 BB 2A 00 E8 F7 0B 83 C4 04 C3 83 EC 10 8B  // ...*............
    29D0: EC 66 8B C8 66 33 C0 66 89 46 04 BB 00 17 E8 FD  // .f..f3.f.F......
    29E0: 12 66 B8 00 80 20 50 66 89 46 0C 66 33 C0 66 89  // .f... Pf.F.f3.f.
    29F0: 46 08 56 E8 A4 0B 66 8B 44 04 66 50 66 C1 E8 16  // F.V...f.D.fPf...
    2A00: 88 46 08 66 58 66 C1 E0 0A 66 05 00 17 00 00 66  // .F.fXf...f.....f
    2A10: 89 46 00 5E 8C D0 66 C1 E0 10 8B C4 BB 35 00 E8  // .F.^..f......5..
    2A20: 9D 0B 8B EC 66 B8 00 80 00 00 66 2B C8 66 89 46  // ....f.....f+.f.F
    2A30: 04 66 05 00 00 20 40 66 89 46 0C 66 33 C0 66 89  // .f... @f.F.f3.f.
    2A40: 46 08 66 89 46 00 8C D0 66 C1 E0 10 8B C4 BB 35  // F.f.F...f......5
    2A50: 00 E8 6B 0B 8B EC 66 8B 46 0C 66 25 FF FF 1F 00  // ..k...f.F.f%....
    2A60: 66 01 46 04 66 3B C8 76 1F 66 2B C8 66 8B 46 04  // f.F.f;.v.f+.f.F.
    2A70: 66 3D 00 FF 01 00 76 06 66 B8 00 FF 01 00 66 3B  // f=....v.f.....f;
    2A80: C8 73 AE 66 8B C1 EB A9 83 C4 10 C3 83 EC 08 8B  // .s.f............
    2A90: EC 89 4E 00 66 89 56 02 89 5E 06 8C D0 66 C1 E0  // ..N.f.V..^...f..
    2AA0: 10 8B C4 BB 2D 00 E8 16 0B 83 C4 08 C3 3D C0 7F  // ....-........=..
    2AB0: 76 04 B8 C0 7F C3 83 C0 3F 24 C0 C3 51 E8 B3 12  // v.......?$..Q...
    2AC0: 66 33 D2 B9 0A 00 F7 F1 8B C8 E8 A6 12 03 C1 66  // f3.............f
    2AD0: 25 FF FF 00 00 59 3D 10 27 73 03 B8 10 27 C3 83  // %....Y=.'s...'..
    2AE0: F8 02 75 13 66 81 FA 40 9C 00 00 77 0A E8 48 10  // ..u.f..@...w..H.
    2AF0: A8 10 74 03 B2 40 C3 32 D2 C3 66 33 FF 66 33 DB  // ..t..@.2..f3.f3.
    2B00: 66 33 C0 8A C1 66 BA 00 00 00 FF 80 FD 03 0F 84  // f3...f..........
    2B10: 87 00 80 FD 02 75 14 8D 9C 1C 03 E8 55 12 66 C1  // .....u......U.f.
    2B20: E0 18 8A C1 E8 6F EB 33 DB EB 6E E8 98 00 53 8D  // .....o.3..n...S.
    2B30: 9C E4 02 66 8B C7 E8 A5 11 5B E8 F3 00 66 8B C3  // ...f.....[...f..
    2B40: 66 53 8D 9C E8 02 E8 95 11 8D 9C EC 02 66 8B C7  // fS...........f..
    2B50: E8 8B 11 66 5B 51 53 33 D2 80 F9 08 73 08 E8 3A  // ...f[QS3....s..:
    2B60: 01 74 03 80 CE 10 8D 9C 02 03 E8 06 12 0B C0 75  // .t.............u
    2B70: 03 80 CE 03 E8 0D EA 8A D5 66 C1 E2 10 E8 46 EA  // .........f....F.
    2B80: 8A F2 8A D1 66 8B C2 E8 C9 EA 66 C1 E2 08 E8 15  // ....f.....f.....
    2B90: EA 8A D1 66 C1 CA 08 5B 59 83 EC 14 8B EC 66 89  // ...f...[Y.....f.
    2BA0: 46 08 66 89 5E 04 66 89 7E 0C 66 89 56 00 BB 0C  // F.f.^.f.~.f.V...
    2BB0: 00 8C D0 66 C1 E0 10 8B C4 E8 03 0A 8B EC 8A 5E  // ...f...........^
    2BC0: 0B 83 C4 14 C3 C3 83 EC 08 8B EC 51 E8 B5 E9 88  // ...........Q....
    2BD0: 6E 03 E8 0B EA 89 56 00 E8 EB E9 88 56 02 E8 F0  // n.....V.....V...
    2BE0: E9 88 56 05 80 FD 10 75 05 E8 D7 03 EB 26 33 D2  // ..V....u.....&3.
    2BF0: E8 A9 E9 74 03 80 CA 10 E8 16 EA 80 FB 04 76 03  // ...t..........v.
    2C00: 80 CA 40 8D 9C 58 03 E8 69 11 A8 02 74 03 80 CA  // ..@..X..i...t...
    2C10: 20 88 56 04 59 8C D0 66 C1 E0 10 8B C4 BB 11 00  //  .V.Y..f........
    2C20: E8 9C 09 8B EC 66 8B 7E 00 8B 5E 04 83 C4 08 C3  // .....f.~..^.....
    2C30: 66 50 66 51 52 8A CF 0A FF 75 0B E8 9A 0A 66 33  // fPfQR....u....f3
    2C40: D2 66 F7 F7 8A C8 8A EB 0A ED 75 03 E8 90 0A 51  // .f........u....Q
    2C50: 66 33 C0 8A C5 32 ED F7 E1 59 66 C1 E1 10 8A EF  // f3...2...Yf.....
    2C60: 66 F7 E7 66 BB E8 03 00 00 66 F7 E3 66 BB 30 00  // f..f.....f..f.0.
    2C70: 00 00 66 33 D2 66 F7 F3 66 33 D2 66 BB A0 86 01  // ..f3.f..f3.f....
    2C80: 00 66 F7 F3 66 8B D9 8B D8 66 B8 0A 00 00 00 66  // .f..f....f.....f
    2C90: F7 E2 66 8B F8 5A 66 59 66 58 C3 E8 F6 E8 A8 02  // ..f..ZfYfX......
    2CA0: C3 66 50 E8 EE E8 A8 01 66 58 C3 53 51 66 50 B9  // .fP.....fX.SQfP.
    2CB0: A0 8C 80 FB 00 75 1C B9 90 7E E8 90 08 83 E3 03  // .....u...~......
    2CC0: 80 FB 03 75 0E E8 BC 09 66 3D 50 C3 00 00 72 03  // ...u....f=P...r.
    2CD0: B9 F0 D2 66 33 D2 8B D1 66 58 59 5B C3 66 52 B3  // ...f3...fXY[.fR.
    2CE0: 10 80 FA 14 74 25 B3 0F 80 FA 15 74 1E B3 00 66  // ....t%.....t...f
    2CF0: F7 C2 00 00 FF FF 75 13 80 FD 13 74 0E 80 FD 14  // ......u....t....
    2D00: 74 09 B3 01 80 FD 0E 74 02 B3 02 66 5A C3 B5 11  // t......t...fZ...
    2D10: 80 FA 23 74 07 80 FA 22 74 02 B5 00 C3 B5 02 80  // ..#t..."t.......
    2D20: FA 23 74 07 80 FA 22 74 02 B3 01 C3 32 C9 B3 04  // .#t..."t....2...
    2D30: 80 FD 00 75 0F B3 02 E8 80 09 74 08 C7 46 00 0A  // ...u......t..F..
    2D40: 01 B1 01 C3 57 55 E8 7D 02 74 23 53 8B 5D 02 E8  // ....WU.}.t#S.]..
    2D50: 51 08 03 FB 5B 80 3D FF 74 14 84 5D 01 74 0A 8B  // Q...[.=.t..].t..
    2D60: 05 89 46 00 83 C5 02 FE C1 83 C7 02 EB E7 5D 5F  // ..F...........]_
    2D70: C3 57 56 8B F3 8D 5C 04 66 33 C0 E8 60 0F 80 FD  // .WV...\.f3..`...
    2D80: 00 75 04 B0 07 EB 07 80 FD 01 75 23 B0 06 E8 51  // .u........u#...Q
    2D90: 09 33 DB 0B FF 74 23 8D 5C 04 66 8B 45 04 E8 3D  // .3...t#.\.f.E..=
    2DA0: 0F 83 C3 04 66 8B 45 08 E8 33 0F 8B DE EB 0B 66  // ....f.E..3.....f
    2DB0: 33 C0 8D 5C 08 E8 26 0F 8B DE 5E 5F C3 8B DA B7  // 3..\..&...^_....
    2DC0: 22 80 FE 21 74 02 B7 21 C3 0C 01 C3 E8 A4 0F 66  // "..!t..!.......f
    2DD0: C1 E8 10 0B C0 74 1A 53 83 C3 06 E8 95 0F 5B 3D  // .....t.S......[=
    2DE0: E0 01 72 0D 53 83 C3 18 E8 88 0F 5B A9 10 00 74  // ..r.S......[...t
    2DF0: 03 32 C0 C3 0C 01 C3 B5 0C C3 32 ED BB 02 00 E8  // .2........2.....
    2E00: 82 03 66 C1 E8 18 A8 10 74 02 B5 02 C3 57 E8 B5  // ..f.....t....W..
    2E10: 01 8B 4D 06 5F C3 80 FA 22 75 05 C7 46 00 78 69  // ..M._..."u..F.xi
    2E20: C3 80 FA 15 75 1A 83 EC 0C 8B EC C6 46 02 00 8C  // ....u.......F...
    2E30: D0 66 C1 E0 10 8B C4 BB 15 00 E8 82 07 83 C4 0C  // .f..............
    2E40: C3 E8 99 01 80 FD FF 74 31 C0 E5 04 83 EC 08 8B  // .......t1.......
    2E50: EC 88 4E 03 88 6E 02 E8 53 00 80 F9 10 75 0A 8D  // ..N..n..S....u..
    2E60: 9C 48 03 E8 0D 0F 88 46 04 8C D0 66 C1 E0 10 8B  // .H.....F...f....
    2E70: C4 BB 04 00 E8 48 07 83 C4 08 C3 83 EC 10 8B EC  // .....H..........
    2E80: 88 4E 03 E8 4B E7 81 E2 00 07 FE CE C0 E6 04 88  // .N..K...........
    2E90: 76 02 E8 18 00 E8 BB E7 89 56 00 8C D0 66 C1 E0  // v........V...f..
    2EA0: 10 8B C4 BB 32 00 E8 16 07 83 C4 10 C3 32 ED E8  // ....2........2..
    2EB0: 3F E7 81 FA 48 3F 74 1A B5 01 81 FA 78 69 74 12  // ?...H?t.....xit.
    2EC0: B5 02 81 FA F0 D2 74 0A B5 03 81 FA 90 7E 74 02  // ......t......~t.
    2ED0: 32 ED 08 6E 02 8D 9C 40 03 E8 97 0E 66 89 46 04  // 2..n...@....f.F.
    2EE0: E8 FD E6 89 56 00 C3 80 F9 04 74 34 E8 D7 E6 80  // ....V.....t4....
    2EF0: FA 15 75 07 B5 01 BB 18 00 EB 0B 80 FA 14 75 20  // ..u...........u 
    2F00: E8 C0 00 BB 08 00 83 EC 08 8B EC 88 6E 02 88 4E  // ............n..N
    2F10: 03 8C D0 66 C1 E0 10 8B C4 E8 A3 06 83 C4 08 C3  // ...f............
    2F20: 83 EC 0C 8B EC 80 F9 04 75 0A 88 4E 03 32 C0 88  // ........u..N.2..
    2F30: 46 02 EB 7D 32 C0 80 EE 21 80 FA 1E 74 15 B0 02  // F..}2...!...t...
    2F40: 80 FA 20 74 0E B0 04 80 FA 21 74 07 B0 06 80 FA  // .. t.....!t.....
    2F50: 25 75 6C 02 C6 88 46 02 88 4E 03 E8 E8 E6 88 56  // %ul...F..N.....V
    2F60: 05 8D 9C 5C 03 E8 0B 0E 88 46 09 E8 94 E6 C0 E5  // ...\.....F......
    2F70: 04 8D 9C 58 03 E8 FB 0D 24 02 0A E8 E8 AB E6 80  // ...X....$.......
    2F80: F9 02 77 07 C0 E1 02 0A E9 EB 03 80 CD 0C 88 6E  // ..w............n
    2F90: 07 E8 4C E6 89 56 00 E8 77 E6 88 5E 04 E8 E4 E5  // ..L..V..w..^....
    2FA0: 88 6E 06 51 E8 36 00 8A CD B0 01 D2 E0 59 88 46  // .n.Q.6.......Y.F
    2FB0: 08 8C D0 66 C1 E0 10 8B C4 BB 4C 00 E8 00 06 83  // ...f......L.....
    2FC0: C4 0C C3 32 ED C3 E8 DA 05 03 7D 04 83 3D FF 74  // ...2......}..=.t
    2FD0: 0B 3B 15 74 05 83 C7 0A EB F2 0B FF C3 8D 9C 3C  // .;.t...........<
    2FE0: 03 E8 8F 0D 32 ED 3C 03 74 0C 3C 09 72 09 3C 0E  // ....2.<.t.<.r.<.
    2FF0: 77 05 2C 08 8A E8 C3 B5 FF C3 83 EC 08 8C D0 66  // w.,............f
    3000: C1 E0 10 8B C4 BB 4B 00 E8 B4 05 83 C4 08 C3 83  // ......K.........
    3010: EC 08 8B EC 89 7E 00 89 5E 02 89 56 04 89 4E 06  // .....~..^..V..N.
    3020: 8C D0 66 C1 E0 10 8B C4 BB 36 00 E8 91 05 8B EC  // ..f......6......
    3030: 8B 5E 02 8A 7E 01 83 C4 08 C3 56 33 F6 66 F7 C2  // .^..~.....V3.f..
    3040: 00 00 80 00 75 0A 50 33 C0 8A C6 8B F0 32 F6 58  // ....u.P3.....2.X
    3050: 53 BB 04 3E E8 87 0C 66 8B C2 BB 00 3E E8 7E 0C  // S..>...f....>.~.
    3060: 5B 66 F7 C2 00 00 10 00 75 02 33 DB 8B D3 66 C1  // [f......u.3...f.
    3070: E2 10 BA 00 3E 83 EC 08 8B EC 66 89 56 00 88 4E  // ....>.....f.V..N
    3080: 04 8A C5 FE C8 88 46 07 C6 46 05 00 C6 46 06 00  // ......F..F...F..
    3090: 8C D0 66 C1 E0 10 8B C4 BB 4E 00 E8 21 05 8B EC  // ..f......N..!...
    30A0: 8A 5E 05 8A 7E 06 83 C4 08 0A DB 74 32 51 B9 90  // .^..~......t2Q..
    30B0: 01 80 FB 20 74 05 80 FB 80 75 13 B9 0A 00 8B C6  // ... t....u......
    30C0: 0A C0 74 0A B9 90 01 3C 01 74 03 B9 E8 03 E8 68  // ..t....<.t.....h
    30D0: 06 59 8B C6 FE C4 8B F0 80 FC 06 76 98 0A DB 5E  // .Y.........v...^
    30E0: C3 8D 5C 04 E8 8C 0C 8B D0 B5 02 E8 14 00 74 11  // ..\...........t.
    30F0: B5 01 80 FA 13 75 0A E8 61 00 80 FA 13 75 02 B5  // .....u..a....u..
    3100: 02 C3 80 FA 14 C3 E8 F9 FF 74 03 80 FA 0E C3 80  // .........t......
    3110: FA 05 C3 80 FA 02 74 03 80 FA 04 C3 80 FA 01 74  // ......t........t
    3120: 03 80 FA 02 C3 80 FA 02 75 03 B2 01 C3 80 FA 04  // ........u.......
    3130: 75 03 B2 03 C3 C3 B5 08 E8 D8 FF 74 02 B5 04 C3  // u..........t....
    3140: 8D 5C 09 E8 2D 0C 8A C8 0A C9 75 03 32 C0 C3 B5  // .\..-.....u.2...
    3150: 02 E8 3A 05 8A C5 24 02 D0 E8 C3 8D 5C 08 E8 12  // ..:...$.....\...
    3160: 0C 8A D0 B6 01 83 EC 08 8B EC 89 56 02 8C D0 66  // ...........V...f
    3170: C1 E0 10 8B C4 BB 4F 00 E8 44 04 8B EC 8A 56 04  // ......O..D....V.
    3180: 83 C4 08 C3 53 81 C3 C9 05 E8 C0 0B 5B C3 53 81  // ....S.......[.S.
    3190: C3 C9 05 E8 11 0B 5B C3 53 81 C3 00 10 E8 AC 0B  // ......[.S.......
    31A0: 5B C3 57 E8 B4 03 8A 45 2D B4 FF F7 45 50 20 00  // [.W....E-...EP .
    31B0: 5F C3 50 56 0F BC D8 8D 36 59 31 E8 1B 06 5E 58  // _.PV....6Y1...^X
    31C0: C3 00 20 00 24 00 00 00 28 00 2C 00 30 00 34 00  // .. .$...(.,.0.4.
    31D0: 38 00 00 00 3C 00 40 00 44 53 56 51 8B F7 B3 00  // 8...<.@.DSVQ....
    31E0: E8 30 00 0B F6 74 16 49 0B C9 75 04 33 FF EB 0D  // .0...t.I..u.3...
    31F0: 8B DF 03 7D 02 3B F3 74 04 E2 F5 33 FF 0B FF 59  // ...}.;.t...3...Y
    3200: 5E 5B C3 0E 00 00 00 0A 00 06 00 08 00 0C 00 0E  // ^[..............
    3210: 00 10 00 56 8D 36 9B 31 E8 BE 05 E8 45 03 03 DE  // ...V.6.1....E...
    3220: 8B 3F 0B FF 74 0B 03 FE 33 C9 8A 0D 83 C7 04 0B  // .?..t...3.......
    3230: FF 5E C3 51 56 53 C1 EB 0C E8 D7 FF 5B 75 04 33  // .^.QVS......[u.3
    3240: FF EB 0B 3B 1D 74 07 83 C7 08 E2 F7 33 FF 0B FF  // ...;.t......3...
    3250: 5E 59 C3 57 E8 DC FF 75 04 33 DB 5F C3 E8 02 00  // ^Y.W...u.3._....
    3260: 5F C3 52 51 8B 5D 04 0B DB 74 1B 56 E8 F4 02 03  // _.RQ.]...t.V....
    3270: DE 5E 33 C9 8A 4F 01 80 3F FF 74 08 3A 07 74 06  // .^3..O..?.t.:.t.
    3280: 03 D9 EB F0 33 DB 0B DB 59 5A C3 50 8D 1C E8 4D  // ....3...YZ.P...M
    3290: 0A 8B D8 E8 72 00 23 C3 74 6C 33 FF E8 3A FF 0B  // ....r.#.tl3..:..
    32A0: FF 74 63 39 05 75 F5 66 33 C0 8B 45 08 8B 4D 02  // .tc9.u.f3..E..M.
    32B0: 83 F9 0A 74 18 8B 4D 0A 8B D1 81 E2 00 70 80 FE  // ...t..M......p..
    32C0: 20 75 0A 66 C1 C8 10 8B C1 66 C1 C8 10 8D 5C 0C  //  u.f.....f....\.
    32D0: E8 0B 0A 66 33 C0 8B 45 04 8D 5C 04 E8 FF 09 33  // ...f3..E..\....3
    32E0: C9 8B D8 50 B0 01 E8 6A FF 58 74 0F 8A 4F 02 8B  // ...P...j.Xt..O..
    32F0: D8 B0 02 E8 5D FF 74 03 8A 6F 02 8D 5C 08 66 33  // ....].t..o..\.f3
    3300: C0 8B C1 E8 D8 09 58 C3 56 E8 57 02 8B 44 04 5E  // ......X.V.W..D.^
    3310: C3 56 E8 4E 02 89 44 04 5E C3 E8 74 02 8B F7 03  // .V.N..D.^..t....
    3320: 74 56 BB 00 30 B9 23 00 E8 F6 03 E8 01 00 C3 33  // tV..0.#........3
    3330: FF 33 F6 33 C9 8B FE E8 9F FE 0F 84 AA 00 8B F7  // .3.3............
    3340: 8B 54 04 80 FA 15 74 04 0B 0C EB E9 8B DA E8 E2  // .T....t.........
    3350: FE E8 EB 00 0B C8 89 04 0B C0 75 10 89 44 04 89  // ..........u..D..
    3360: 05 83 7C 02 0A 74 36 89 44 0A EB 31 E8 19 01 89  // ..|..t6.D..1....
    3370: 44 04 89 05 83 7C 02 0A 74 06 E8 D3 00 89 44 0A  // D....|..t.....D.
    3380: F7 04 11 00 74 11 8B 44 04 E8 AC 00 75 09 33 C0  // ....t..D....u.3.
    3390: 89 05 E8 C7 00 EB 06 E8 C2 00 E8 6C 01 8B 5C 08  // ...........l..\.
    33A0: B8 00 11 66 C1 E0 10 8B 44 04 E8 79 00 E8 74 01  // ...f....D..y..t.
    33B0: 8B 5C 08 E8 43 00 E8 6D 00 74 12 8B D8 8B 44 08  // .\..C..m.t....D.
    33C0: 66 C1 E0 10 8B 44 04 E8 5A 01 E8 3C 01 8B 5C 04  // f....D..Z..<..\.
    33D0: 0B DB 0F 84 5F FF 8B 44 08 E8 4A 00 66 C1 E0 10  // ...._..D..J.f...
    33E0: 33 C0 E8 3F 01 E9 4D FF E8 78 01 89 4C 04 C3 57  // 3..?..M..x..L..W
    33F0: 53 B3 00 E8 1D FE 5B 5F C3 51 53 E8 CF 00 83 C3  // S.....[_.QS.....
    3400: 0C E8 6F 09 8B C8 5B B0 14 E8 47 FE 74 16 F6 C1  // ..o...[...G.t...
    3410: 01 74 04 83 67 02 FD 83 4F 02 04 F6 C1 0C 75 04  // .t..g...O.....u.
    3420: 83 67 02 FB 59 C3 53 83 7C 02 0A 74 09 8B 5C 0A  // .g..Y.S.|..t..\.
    3430: 0B DB 74 02 8B C3 5B C3 3C 01 74 02 3C 02 C3 53  // ..t...[.<.t.<..S
    3440: E8 8A 00 E8 2D 09 5B C3 E8 F4 FF 66 C1 E8 10 C3  // ....-.[....f....
    3450: 53 E8 79 00 83 C3 08 E8 19 09 5B C3 57 B0 04 E8  // S.y.......[.W...
    3460: 00 FE C6 47 02 01 8B 05 E8 CD FF 75 0D F7 04 11  // ...G.......u....
    3470: 00 74 07 C6 47 02 02 83 C3 08 8B 04 89 47 08 E8  // .t..G........G..
    3480: C6 FF 66 89 47 04 5F C3 53 57 52 E8 3F 00 83 C3  // ..f.G._.SWR.?...
    3490: 04 E8 DF 08 8B D0 E8 7A FC 75 14 8B 5C 08 8B D3  // .......z.u..\...
    34A0: E8 1A F9 E8 8D FD 75 07 8B D0 E8 78 FC 8B C2 5A  // ......u....x...Z
    34B0: 5F 5B C3 E8 D2 FF 66 C1 E8 10 B4 11 E8 25 00 C3  // _[....f......%..
    34C0: E8 C5 FF 66 C1 E8 18 B4 10 E8 18 00 C3 51 52 33  // ...f.........QR3
    34D0: C9 8A CE 80 E1 07 49 B8 10 00 F7 E1 BB 14 30 03  // ......I.......0.
    34E0: D8 5A 59 C3 57 53 51 3C FF 75 04 33 C0 EB 16 33  // .ZY.WSQ<.u.3...3
    34F0: C9 8A C8 8A C4 BB 03 71 E8 38 FD E8 64 FD 83 C3  // .......q.8..d...
    3500: 02 03 D9 8A 07 59 5B 5F C3 B0 01 E8 54 FD 74 13  // .....Y[_....T.t.
    3510: E8 A0 FF 88 47 02 B0 02 E8 47 FD 74 06 E8 A0 FF  // ....G....G.t....
    3520: 88 47 02 C3 E8 0C FD 74 23 56 8B 5D 02 E8 33 00  // .G.....t#V.]..3.
    3530: 03 DE 5E 0B C0 74 07 C6 47 03 01 89 47 04 66 C1  // ..^..t..G...G.f.
    3540: E8 10 0B C0 74 06 C6 07 01 89 47 01 C3 8B DA B0  // ....t.....G.....
    3550: 14 E8 FF FC 74 03 8B 5F 02 C3 BF BA 01 8B 3D 8B  // ....t.._......=.
    3560: 7D 0C C3 BE BA 01 8B 34 8B 74 30 C3 1E 0E 1F BF  // }......4.t0.....
    3570: BA 01 8B 3D 8B 7D 0E 83 C7 04 1F C3 BE BA 01 8B  // ...=.}..........
    3580: 34 8B 74 10 C3 BF BA 01 8B 3D 8B 7D 26 83 C7 04  // 4.t......=.}&...
    3590: C3 BF BA 01 8B 3D 8B 7D 40 C3 BE BA 01 8B 34 8B  // .....=.}@.....4.
    35A0: 74 1A C3 BF BA 01 8B 3D 8B 7D 3A C3 BF BA 01 8B  // t......=.}:.....
    35B0: 3D 8B 7D 0A 83 C7 04 B9 08 00 C3 E8 01 00 CB 83  // =.}.............
    35C0: EC 06 8B EC 89 46 00 66 33 C0 C6 46 04 00 89 46  // .....F.f3..F...F
    35D0: 02 06 52 8A D3 8B C5 E8 67 1A 5A 07 83 C4 06 C3  // ..R.....g.Z.....
    35E0: E8 77 FF F7 45 50 01 00 C3 E8 6E FF 83 4D 50 01  // .w..EP....n..MP.
    35F0: C3 E8 66 FF 88 45 58 C3 66 53 83 EC 28 8B EC 66  // ..f..EX.fS..(..f
    3600: 89 5E 00 66 89 4E 04 8C D0 66 C1 E0 10 8B C4 BB  // .^.f.N...f......
    3610: 00 00 E8 AA FF 83 C4 28 66 5B E8 40 00 83 EC 14  // .......(f[.@....
    3620: 8B EC C6 46 01 07 8C D0 66 C1 E0 10 8B C4 BB 0D  // ...F....f.......
    3630: 00 E8 8B FF 83 C4 14 33 C9 B5 00 E8 AD F2 B5 00  // .......3........
    3640: E8 A1 F2 FE C1 E8 69 00 38 C1 72 ED E8 93 01 BB  // ......i.8.r.....
    3650: 04 00 E8 2F FB 66 C1 E8 10 E8 95 FF C3 83 EC 0C  // .../.f..........
    3660: 8B EC 66 89 5E 00 8C D0 66 C1 E0 10 8B C4 BB 0A  // ..f.^...f.......
    3670: 00 E8 4B FF 83 C4 0C C3 E8 DF FE 66 8B 5D 08 66  // ..K........f.].f
    3680: 8B 4D 0C C3 57 E8 D2 FE 66 8B 45 28 5F C3 83 EC  // .M..W...f.E(_...
    3690: 04 8B EC 89 4E 00 8C D0 66 C1 E0 10 8B C4 BB 38  // ....N...f......8
    36A0: 00 E8 1B FF 8B EC 8A 6E 02 83 C4 04 C3 C3 B0 03  // .......n........
    36B0: C3 B0 02 C3 B0 03 C3 B0 08 C3 E8 9D FE 8B 45 56  // ..............EV
    36C0: 0B C0 C3 53 66 50 66 33 C0 E8 12 06 83 C3 04 E2  // ...SfPf3........
    36D0: F8 66 58 5B C3 32 C0 C3 66 B8 C0 D4 01 00 C3 B5  // .fX[.2..f.......
    36E0: 02 C3 53 BF BA 01 8B 3D 8B 7D 38 0B FF 74 15 8B  // ..S....=.}8..t..
    36F0: 1D 03 DF 83 C7 04 3A 45 08 74 09 83 C7 0C 3B FB  // ......:E.t....;.
    3700: 72 F4 33 FF 0B FF 5B C3 FC E8 67 06 66 C1 CB 10  // r.3...[...g.f...
    3710: E8 CB 05 66 C1 CB 10 66 81 C3 04 00 04 00 E2 E9  // ...f...f........
    3720: C3 FC 66 AD E8 B7 05 83 C3 04 E2 F6 C3 FC E8 42  // ..f............B
    3730: 06 66 AB 83 C3 04 E2 F6 C3 66 50 B8 64 00 E8 10  // .f.......fP.d...
    3740: 00 66 58 C3 66 50 B8 50 C3 D1 E1 E8 03 00 66 58  // .fX.fP.P......fX
    3750: C3 52 F7 E1 8B CA E8 33 04 66 53 8B D9 66 C1 E3  // .R.....3.fS..f..
    3760: 10 8B D8 66 B8 04 B1 03 00 B2 00 66 EF B2 04 66  // ...f.......f...f
    3770: 33 C0 66 EF 66 B8 08 B1 03 00 B2 00 66 EF B2 04  // 3.f.f.......f...
    3780: 66 ED 33 C9 66 03 D8 73 0A 66 ED 66 A9 00 00 00  // f.3.f..s.f.f....
    3790: 80 75 F6 66 ED 66 3B C3 73 0C 66 C1 E8 10 3B C1  // .u.f.f;.s.f...;.
    37A0: 72 04 8B C8 EB ED 66 5B 5A C3 BB 42 EC E8 9C 05  // r.....f[Z..B....
    37B0: 66 33 D2 66 BB 64 00 00 00 66 F7 F3 C3 66 50 53  // f3.f.d...f...fPS
    37C0: BB 07 00 E8 BE F9 25 00 02 35 00 02 0B C0 5B 66  // ......%..5....[f
    37D0: 58 C3 BB 0A 15 E8 74 05 C3 32 FF D1 E3 03 F3 8B  // X.....t..2......
    37E0: 1C C3 E8 ED FF 66 3D 00 08 00 00 76 06 BB 0C 15  // .....f=....v....
    37F0: E8 59 05 66 C1 E0 0A 66 83 E8 20 E8 9C FD 66 89  // .Y.f...f.. ...f.
    3800: 44 04 C7 44 08 20 00 C3 56 1E 0E 1F E8 8B FD 66  // D..D. ..V......f
    3810: 8B 44 04 66 C1 E0 0A 1F 5E C3 E8 C5 FF 06 E8 70  // .D.f....^......p
    3820: FD 0E 07 BB 00 7C E8 4A 05 66 3B 05 75 19 B9 80  // .....|.J.f;.u...
    3830: 00 FC E8 F8 FE BB 00 7E BF BA 01 8B 3D 8B 7D 22  // .......~....=.}"
    3840: B9 80 00 FC E8 E6 FE E8 10 FD 8B F7 E8 42 FD 66  // .............B.f
    3850: 8B 45 08 66 0B C0 74 04 66 89 44 14 66 8B 45 04  // .E.f..t.f.D.f.E.
    3860: 66 0B C0 74 04 66 89 44 08 66 8B 45 0C 66 89 44  // f..t.f.D.f.E.f.D
    3870: 0C 8B DF 81 C3 CE 00 B9 08 00 66 8B 47 02 66 0B  // ..........f.G.f.
    3880: C0 75 07 83 EB 06 E2 F2 EB 04 66 89 44 28 57 03  // .u........f.D(W.
    3890: 7D 56 8A 85 86 00 5F 88 44 3C B8 DF FF 21 44 50  // }V...._.D<...!DP
    38A0: 8B 45 40 0B C0 74 14 83 4C 50 20 80 BD 3F 01 00  // .E@..t..LP ..?..
    38B0: 74 09 50 8A 85 3F 01 88 44 2D 58 E8 BE FC 0B F6  // t.P..?..D-X.....
    38C0: 74 03 89 44 32 E8 B4 FC 0B F6 74 70 8B 45 58 0B  // t..D2.....tp.EX.
    38D0: C0 74 08 89 44 22 B0 02 08 44 30 8B 85 34 01 0B  // .t..D"...D0..4..
    38E0: C0 74 03 89 44 40 F6 85 36 01 08 74 24 80 64 28  // .t..D@..6..t$.d(
    38F0: FD F6 85 36 01 01 74 04 80 4C 28 02 80 64 28 8F  // ...6..t..L(..d(.
    3900: F6 85 36 01 04 75 06 80 4C 28 10 EB 04 80 4C 28  // ..6..u..L(....L(
    3910: 20 F6 45 34 01 75 05 C7 44 20 00 00 57 03 7D 56  //  .E4.u..D ..W.}V
    3920: 8A 85 87 00 88 44 42 5F B9 07 00 8D 9D 38 01 8A  // .....DB_.....8..
    3930: 07 0A C0 74 03 88 44 34 43 46 E2 F3 57 8B 9D 10  // ...t..D4CF..W...
    3940: 01 0B DB 74 1C B0 09 E8 98 FD 74 05 89 5D 04 EB  // ...t......t..]..
    3950: 10 B0 07 E8 8C FD 89 5D 04 B0 0B E8 84 FD 89 5D  // .......].......]
    3960: 04 5F 8D 9D 18 01 B0 05 E8 A3 00 8D 9D 1C 01 B0  // ._..............
    3970: 04 E8 9A 00 8D 9D 14 01 B0 06 E8 91 00 BB 04 71  // ...............q
    3980: B0 09 E8 CE F8 74 0C 57 03 7D 56 8A 85 85 00 88  // .....t.W.}V.....
    3990: 47 04 5F 80 7D 03 07 72 22 8A 45 5C 0A C0 74 1B  // G._.}..r".E\..t.
    39A0: B9 28 00 8D 36 A7 00 83 C6 02 8D 5D 5C 8A 07 0A  // .(..6......]\...
    39B0: C0 75 02 B0 20 88 04 43 46 E2 F2 80 7D 5A 04 75  // .u.. ..CF...}Z.u
    39C0: 0A 56 8D 36 A5 00 B0 34 88 04 5E 07 C3 8B DF 81  // .V.6...4..^.....
    39D0: C3 D4 00 B9 05 00 3A 47 04 74 08 83 C3 08 E2 F6  // ......:G.t......
    39E0: 33 C0 C3 66 33 C0 8A 47 06 66 33 D2 66 BB 71 02  // 3..f3..G.f3.f.q.
    39F0: 00 00 66 F7 E3 66 BA 78 5D 02 00 66 2B D0 66 8B  // ..f..f.x]..f+.f.
    3A00: C2 66 33 D2 66 BB 64 00 00 00 66 F7 F3 C3 57 E8  // .f3.f.d...f...W.
    3A10: D0 FC 74 13 8B 07 0B C0 74 0D 89 45 04 8B 47 02  // ..t.....t..E..G.
    3A20: 0B C0 74 03 89 45 06 5F C3 57 E8 2D FB 8B 45 52  // ..t..E._.W.-..ER
    3A30: 5F C3 56 E8 46 FB 8B 4C 22 8A 44 29 5E C3 BE BA  // _.V.F..L".D)^...
    3A40: 01 8B 34 8B 74 1E 83 C6 04 B9 1C 00 C3 E8 41 FB  // ..4.t.........A.
    3A50: F6 45 34 01 75 03 33 FF C3 56 53 33 FF E8 1C FB  // .E4.u.3..VS3....
    3A60: 8B 5C 20 0B DB 74 12 03 F3 80 3C 04 75 0B 80 7C  // .\ ..t....<.u..|
    3A70: 01 80 72 05 8B FE 83 C7 02 5B 5E C3 56 E8 FC FA  // ..r......[^.V...
    3A80: 8A 6C 28 80 E5 70 C0 ED 04 5E C3 56 E8 ED FA 53  // .l(..p...^.V...S
    3A90: 81 C3 09 01 E8 DC 02 8A E8 5B 53 81 C3 00 01 E8  // .........[S.....
    3AA0: D1 02 5B 8A C5 66 89 44 3C 5E C3 56 E8 CD FA 66  // ..[..f.D<^.V...f
    3AB0: 8B 44 3C 53 81 C3 00 01 E8 23 02 5B 53 81 C3 08  // .D<S.....#.[S...
    3AC0: 01 B1 01 8A E8 E8 5A 02 5B 5E C3 56 E8 AD FA 8B  // ......Z.[^.V....
    3AD0: FE 83 C7 04 5E C3 56 E8 A2 FA 8A 44 28 80 FD 00  // ....^.V....D(...
    3AE0: 74 0E 24 8F C0 E5 04 0A C5 80 FD 20 75 02 0C 02  // t.$........ u...
    3AF0: 24 FE 81 7C 04 34 21 76 02 0C 01 88 44 28 E8 01  // $..|.4!v....D(..
    3B00: F6 75 04 80 4C 30 01 5E C3 57 E8 84 FA 8A 45 34  // .u..L0.^.W....E4
    3B10: 5F 80 FB 02 75 07 A8 04 75 1B 0C 01 C3 80 FB 01  // _...u...u.......
    3B20: 75 07 A8 02 75 0F 0C 01 C3 80 FB 81 75 07 A8 08  // u...u.......u...
    3B30: 75 03 0C 01 C3 32 C0 C3 E8 56 FA 66 8B 45 38 C3  // u....2...V.f.E8.
    3B40: 83 EC 0C 8B EC 66 C1 C0 10 B8 01 00 66 89 46 00  // .....f......f.F.
    3B50: 8C D0 66 C1 E0 10 8B C4 BB 43 00 E8 61 FA 83 C4  // ..f......C..a...
    3B60: 0C C3 66 57 53 51 E8 28 FA 8B DF 81 C3 A4 00 B9  // ..fWSQ.(........
    3B70: 08 00 66 8B 47 02 66 3B C2 73 09 83 C3 06 E2 F2  // ..f.G.f;.s......
    3B80: 33 C0 EB 02 8B 07 59 5B 66 5F C3 00 66 50 8C C8  // 3.....Y[f_..fP..
    3B90: 3D 00 C0 75 10 BA C3 03 EC 8A F0 0A F6 74 06 B2  // =..u.........t..
    3BA0: 4C 66 ED EB 17 53 2E 8B 1E AE 01 B2 20 E8 DD 00  // Lf...S...... ...
    3BB0: A8 01 75 05 B2 14 E8 D4 00 8A F4 5B 32 D2 66 58  // ..u........[2.fX
    3BC0: C3 2E 8B 1E AE 01 C3 0B C9 75 1A 4B 74 16 43 3B  // .........u.Kt.C;
    3BD0: DA 77 09 8B C8 8B C2 2B D2 F7 F3 91 F7 F3 8B DA  // .w.....+........
    3BE0: 8B D1 2B C9 C3 3B CA 72 1A 75 10 3B D8 77 0C 2B  // ..+..;.r.u.;.w.+
    3BF0: C3 8B D8 2B C9 2B D2 B8 01 00 C3 2B C9 2B DB 93  // ...+.+.....+.+..
    3C00: 87 CA C3 55 56 2B F6 8B EE 03 DB 13 C9 72 11 45  // ...UV+.......r.E
    3C10: 3B CA 72 F5 77 04 3B D8 76 EF F8 13 F6 4D 78 20  // ;.r.w.;.v....Mx 
    3C20: D1 D9 D1 DB 2B C3 1B D1 F5 72 F0 03 F6 4D 78 0C  // ....+....r...Mx.
    3C30: D1 E9 D1 DB 03 C3 13 D1 73 F1 EB DF 03 C3 13 D1  // ........s.......
    3C40: 8B D8 8B CA 8B C6 33 D2 5E 5D C3 93 50 92 0B C0  // ......3.^]..P...
    3C50: 74 02 F7 E2 91 0B C0 74 04 F7 E3 03 C8 58 F7 E3  // t......t.....X..
    3C60: 03 D1 C3 52 66 50 B4 80 8A C7 66 C1 E0 10 8A E3  // ...RfP....f.....
    3C70: 8A C2 24 FC BA F8 0C 66 EF 66 58 5A C3 52 BA FC  // ..$....f.fXZ.R..
    3C80: 0C 66 ED 5A C3 52 BA FC 0C 66 EF 5A C3 E8 31 FF  // .f.Z.R...f.Z..1.
    3C90: 9C FA E8 CE FF E8 E5 FF 9D C3 E8 24 FF 9C FA E8  // ...........$....
    3CA0: C1 FF E8 E0 FF 9D C3 52 66 53 66 50 E8 06 00 66  // .......RfSfP...f
    3CB0: 58 66 5B 5A C3 66 C1 E3 10 66 C1 EB 0E E8 CC FE  // Xf[Z.f...f......
    3CC0: E8 4C 01 C3 66 50 66 C1 E3 10 66 C1 EB 10 E8 37  // .L..fPf...f....7
    3CD0: FB 66 03 D8 66 81 CB 00 00 00 80 66 58 C3 52 66  // .f..f......fX.Rf
    3CE0: 53 E8 04 00 66 5B 5A C3 66 50 E8 9F FE E8 D4 FF  // S...f[Z.fP......
    3CF0: E8 1C 01 66 58 C3 52 51 66 53 66 50 8A CB 80 E3  // ...fX.RQfSfP....
    3D00: FC 80 E1 03 C0 E1 03 E8 82 FE E8 B7 FF E8 E6 00  // ................
    3D10: 66 D3 C8 58 50 66 D3 C0 E8 F4 00 66 58 66 5B 59  // f..XPf.....fXf[Y
    3D20: 5A C3 66 50 51 C0 E1 03 E8 48 00 66 D3 C8 8A C5  // Z.fPQ....H.f....
    3D30: 66 D3 C0 E8 A8 FF 59 66 58 C3 66 50 51 C0 E1 03  // f.....YfX.fPQ...
    3D40: E8 30 00 66 D3 C8 59 8A E8 66 58 C3 E8 54 00 C3  // .0.f..Y..fX..T..
    3D50: E8 39 FE 66 C1 E3 10 66 C1 EB 0E E8 98 00 C3 52  // .9.f...f.......R
    3D60: 66 53 E8 04 00 66 5B 5A C3 E8 20 FE E8 55 FF E8  // fS...f[Z.. ..U..
    3D70: 84 00 C3 51 66 52 8A EB 8A CB 80 E1 03 C0 E1 03  // ...QfR..........
    3D80: 80 E3 FC E8 D9 FF 80 F9 00 74 14 66 8B D0 83 C3  // .........t.f....
    3D90: 04 E8 CB FF 83 EB 04 66 92 66 0F AD D0 8A DD 66  // .......f.f.....f
    3DA0: 5A 59 C3 52 66 53 E8 A7 FF 66 5B 5A C3 66 50 55  // ZY.RfS...f[Z.fPU
    3DB0: 52 66 50 8B EC 8B 56 0C 89 56 08 E8 CE FD 33 C0  // RfP...V..V....3.
    3DC0: B2 18 EF B2 00 66 ED 66 89 46 0A 66 58 5A 5D C3  // .....f.f.F.fXZ].
    3DD0: 66 50 55 52 8B EC E8 B3 FD B2 00 66 8B 46 0A 66  // fPUR.......f.F.f
    3DE0: EF 8B 56 08 89 56 0C 66 8B 46 04 66 89 46 08 5A  // ..V..V.f.F.f.F.Z
    3DF0: 5D 66 58 66 58 C3 66 81 FB FF 00 00 00 77 04 8A  // ]fXfX.f......w..
    3E00: D3 EB 09 66 8B C3 B2 00 66 EF B2 04 66 ED C3 66  // ...f....f...f..f
    3E10: 81 FB FF 00 00 00 77 04 8A D3 EB 0A 66 93 B2 00  // ......w.....f...
    3E20: 66 EF 66 93 B2 04 66 EF C3 C3 C3 C3 C3 C3 C3 C3  // f.f...f.........
    3E30: C3 C3 C3 55 8B EC 53 51 8B F0 26 8B 5C 14 26 8B  // ...U..SQ..&.\.&.
    3E40: 4C 16 E8 28 00 8D 66 FC 59 5B 5D C3 53 51 8B F0  // L..(..f.Y[].SQ..
    3E50: 26 8B 5C 24 33 C9 E8 14 00 59 5B C3 55 8B EC 53  // &.\$3....Y[.U..S
    3E60: 51 8B F0 26 8B 5C 08 26 8B 4C 0A EB D5 52 56 57  // Q..&.\.&.L...RVW
    3E70: C8 06 00 00 8B F0 89 4E FE 8C D0 8E C0 26 8B 7C  // .......N.....&.|
    3E80: 26 8A 45 01 32 E4 B9 20 00 2B C8 B8 FF FF 8B D0  // &.E.2.. .+......
    3E90: E3 06 D1 EA D1 D8 E2 FA 8A 4D 03 32 ED 8B FA E3  // .........M.2....
    3EA0: 06 D1 E0 D1 D7 E2 FA F7 D0 F7 D7 26 21 44 1C 26  // ...........&!D.&
    3EB0: 21 7C 1E 8C D0 8E C0 26 8B 7C 26 8A 4D 01 32 ED  // !|.....&.|&.M.2.
    3EC0: B8 20 00 2B C1 8B C8 66 C7 46 FA FF FF FF FF E3  // . .+...f.F......
    3ED0: 08 D1 6E FC D1 5E FA E2 F8 8A 4D 02 32 ED 8B C3  // ..n..^....M.2...
    3EE0: 8B 56 FE E3 06 D1 EA D1 D8 E2 FA 23 46 FA 23 56  // .V.........#F.#V
    3EF0: FC 8A 4D 03 32 ED E3 06 D1 E0 D1 D2 E2 FA 26 09  // ..M.2.........&.
    3F00: 44 1C 26 09 54 1E C9 5F 5E 5A C3 55 8B EC 53 51  // D.&.T.._^Z.U..SQ
    3F10: 52 57 50 8B D8 26 8B 7F 26 8A 45 01 32 E4 B9 20  // RWP..&..&.E.2.. 
    3F20: 00 2B C8 B8 FF FF 8B D0 E3 06 D1 EA D1 D8 E2 FA  // .+..............
    3F30: 8A 4D 02 88 4E F6 C6 46 F7 00 8B FA 8B 4E F6 E3  // .M..N..F.....N..
    3F40: 06 D1 E0 D1 D7 E2 FA 26 09 47 1C 26 09 7F 1E 8D  // .......&.G.&....
    3F50: 66 F8 5F 5A E9 F1 FE 53 51 52 57 8B D8 8C D0 8E  // f._Z...SQRW.....
    3F60: C0 26 8B 77 26 8A 4C 01 32 ED B8 20 00 2B C1 8B  // .&.w&.L.2.. .+..
    3F70: C8 BE FF FF 8B D6 E3 06 D1 EA D1 DE E2 FA 26 8B  // ..............&.
    3F80: 7F 26 8A 4D 02 32 ED 8B C6 E3 06 D1 E0 D1 D2 E2  // .&.M.2..........
    3F90: FA F7 D0 F7 D2 26 21 47 1C 26 21 57 1E 5F E9 CC  // .....&!G.&!W._..
    3FA0: 05 53 56 8B D8 8C D2 8E C2 26 8B 77 26 80 3C 00  // .SV......&.w&.<.
    3FB0: 74 73 80 3C 01 75 58 8A 44 01 32 E4 26 83 7F 1E  // ts.<.uX.D.2.&...
    3FC0: 00 75 4C 26 3B 47 1C 75 46 8A 04 6B F0 03 8A 84  // .uL&;G.uF..k....
    3FD0: 88 A2 26 01 47 26 8C D0 8E C0 26 8B 77 26 80 3C  // ..&.G&....&.w&.<
    3FE0: 09 74 17 8A 04 32 E4 6B F0 03 8B C3 FF 94 86 A2  // .t...2.k........
    3FF0: 26 8B 77 26 8A 04 32 E4 EB D1 8B 44 01 26 29 47  // &.w&..2....D.&)G
    4000: 26 26 FF 47 26 26 8B 47 1C 26 8B 77 1E EB 1A 26  // &&.G&&.G.&.w...&
    4010: 8B 77 26 8A 04 32 E4 6B F0 03 8A 84 88 A2 26 01  // .w&..2.k......&.
    4020: 47 26 E9 80 FF 33 C0 33 F6 8B D6 5E 5B C3 53 51  // G&...3.3...^[.SQ
    4030: 52 56 8B D8 8D 77 35 26 8B 54 02 26 89 57 14 26  // RV...w5&.T.&.W.&
    4040: C7 47 16 00 00 8B F0 26 8B 47 20 33 D2 26 01 47  // .G.....&.G 3.&.G
    4050: 14 26 11 54 16 8C D1 8E C1 26 F6 47 2F 06 0F 85  // .&.T.....&.G/...
    4060: 0A 05 26 80 7F 34 00 75 22 26 8B 77 16 26 0B 77  // ..&..4.u"&.w.&.w
    4070: 14 75 10 26 D1 67 08 26 D1 57 0A 26 D1 67 08 26  // .u.&.g.&.W.&.g.&
    4080: D1 57 0A 8B C3 E8 E4 11 E9 E1 04 26 8A 47 34 32  // .W.........&.G42
    4090: E4 05 80 00 99 26 89 47 1C 26 89 57 1E 8B C3 E8  // .....&.G.&.W....
    40A0: FF FE E9 C7 04 53 56 8B D8 8D 77 35 26 8A 44 02  // .....SV...w5&.D.
    40B0: 32 E4 C1 E0 02 26 8B 37 26 8B 34 03 F0 26 8B 47  // 2....&.7&.4..&.G
    40C0: 08 26 8B 5F 0A 26 89 04 26 89 5C 02 5E 5B C3 53  // .&._.&..&.\.^[.S
    40D0: 52 56 8B D8 8C D0 8D 77 35 8E C0 26 8A 54 02 80  // RV.....w5..&.T..
    40E0: FA 40 73 21 26 8B 77 02 32 F6 C1 E2 02 26 8B 74  // .@s!&.w.2....&.t
    40F0: 04 03 F2 26 8B 57 08 26 8B 47 0A 26 89 14 26 89  // ...&.W.&.G.&..&.
    4100: 44 02 E9 7F 00 80 FA 41 75 12 26 8B 47 08 26 8B  // D......Au.&.G.&.
    4110: 57 0A 26 89 47 10 26 89 57 12 EB 68 80 FA 40 75  // W.&.G.&.W..h..@u
    4120: 12 26 8B 47 08 26 8B 57 0A 26 89 47 0C 26 89 57  // .&.G.&.W.&.G.&.W
    4130: 0E EB 51 80 FA 42 75 0A 26 8B 47 08 26 89 47 22  // ..Q..Bu.&.G.&.G"
    4140: EB 42 80 FA 43 75 0A 26 8A 47 08 26 88 47 33 EB  // .B..Cu.&.G.&.G3.
    4150: 33 80 FA 46 75 12 26 8B 57 08 26 8B 47 0A 26 89  // 3..Fu.&.W.&.G.&.
    4160: 57 18 26 89 47 1A EB 1C 80 FA 47 75 0A 26 8B 47  // W.&.G.....Gu.&.G
    4170: 08 26 89 47 24 EB 0D 80 FA 48 75 08 26 8B 47 08  // .&.G$....Hu.&.G.
    4180: 26 89 47 20 5E 5A 5B C3 53 56 8B D8 8D 77 35 26  // &.G ^Z[.SV...w5&
    4190: 8A 44 02 32 E4 26 89 47 14 26 C7 47 16 00 00 5E  // .D.2.&.G.&.G...^
    41A0: 5B C3 53 56 8B D8 26 8B 77 02 26 8B 74 02 8A 04  // [.SV..&.w.&.t...
    41B0: 32 E4 26 89 47 14 26 C7 47 16 00 00 26 8B 5F 02  // 2.&.G.&.G...&._.
    41C0: 26 FF 47 02 5E 5B C3 53 56 8B D8 26 8B 77 02 26  // &.G.^[.SV..&.w.&
    41D0: 8B 74 02 8B 34 26 89 77 14 26 C7 47 16 00 00 26  // .t..4&.w.&.G...&
    41E0: 8B 5F 02 26 83 47 02 02 5E 5B C3 53 56 8B D8 26  // ._.&.G..^[.SV..&
    41F0: 8B 77 02 26 8B 74 02 8B 04 8B 74 02 26 89 47 14  // .w.&.t....t.&.G.
    4200: 26 89 77 16 26 8B 5F 02 26 83 47 02 04 5E 5B C3  // &.w.&._.&.G..^[.
    4210: 53 52 56 8B D8 E8 70 FF 8B F3 26 8B 47 18 26 8B  // SRV...p...&.G.&.
    4220: 57 1A D1 EA D1 D8 D1 EA D1 D8 26 01 47 14 26 11  // W.........&.G.&.
    4230: 54 16 8B C3 E8 96 10 E9 4A FF 53 8B D8 26 8B 5F  // T.......J.S..&._
    4240: 02 26 FF 47 02 5B C3 53 8B D8 26 8B 5F 02 26 83  // .&.G.[.S..&._.&.
    4250: 47 02 02 5B C3 53 56 8B D8 E8 6B FF 8B F3 26 8B  // G..[.SV...k...&.
    4260: 57 20 33 C0 26 01 57 14 26 11 44 16 8C D2 8E C2  // W 3.&.W.&.D.....
    4270: 26 8B 47 2E 32 C0 80 E4 06 3D 00 02 75 07 32 E4  // &.G.2....=..u.2.
    4280: 33 D2 5E 5B C3 26 8B 47 2E 32 C0 80 E4 06 3D 00  // 3.^[.&.G.2....=.
    4290: 04 74 EB 26 80 7F 34 00 75 08 8B C3 E8 9A 0F 5E  // .t.&..4.u......^
    42A0: 5B C3 26 8A 47 34 32 E4 26 89 47 1C 26 C7 47 1E  // [.&.G42.&.G.&.G.
    42B0: 00 00 8B C3 E8 EA FC 5E 5B C3 53 8B D8 E8 E2 FE  // .......^[.S.....
    42C0: 26 8B 47 14 C1 E0 02 26 8B 1F 26 8B 1F 03 D8 26  // &.G....&..&....&
    42D0: 8B 07 26 8B 57 02 5B C3 DE 42 D3 42 E9 42 38 43  // ..&.W.[..B.B.B8C
    42E0: EF 42 07 43 21 43 2C 43 32 43 53 51 56 8B D8 E8  // .B.C!C,C2CSQV...
    42F0: B0 FE 8C D2 8E C2 26 83 7F 16 00 75 22 26 83 7F  // ......&....u"&..
    4300: 14 40 73 1B 26 8B 77 02 26 8B 5F 14 C1 E3 02 26  // .@s.&.w.&._....&
    4310: 8B 44 04 03 D8 26 8B 07 26 8B 57 02 E9 7B 05 26  // .D...&..&.W..{.&
    4320: 8B 77 14 26 8B 47 16 83 C6 C0 83 D0 FF 75 71 83  // .w.&.G.......uq.
    4330: FE 08 77 6C 03 F6 2E FF A4 70 42 26 8B 47 10 26  // ..wl.....pB&.G.&
    4340: 8B 57 12 E9 54 05 26 8B 47 0C 26 8B 57 0E E9 49  // .W..T.&.G.&.W..I
    4350: 05 26 8B 47 22 EB 4B 26 8A 4F 33 32 ED BB 01 00  // .&.G".K&.O32....
    4360: 33 D2 E3 06 D1 E3 D1 D2 E2 FA 8B C3 E9 2B 05 26  // 3............+.&
    4370: 8A 4F 33 32 ED B8 01 00 33 D2 E3 06 D1 E0 D1 D2  // .O32....3.......
    4380: E2 FA F7 D0 F7 D2 E9 11 05 26 8B 47 18 26 8B 57  // .........&.G.&.W
    4390: 1A E9 06 05 26 8B 47 24 EB 08 26 8B 47 20 EB 02  // ....&.G$..&.G ..
    43A0: 33 C0 33 D2 E9 F3 04 53 56 8B D8 E8 F4 FD 8B F3  // 3.3....SV.......
    43B0: 26 8B 47 18 26 8B 57 1A D1 EA D1 D8 D1 EA D1 D8  // &.G.&.W.........
    43C0: 26 01 47 14 26 11 54 16 8B C3 E8 81 0E 5E 5B C3  // &.G.&.T......^[.
    43D0: 33 C0 33 D2 C3 53 56 8B D8 E8 EB FD 26 8B 77 14  // 3.3..SV.....&.w.
    43E0: 26 03 77 22 8B 04 8B 54 02 5E 5B C3 53 8B D8 26  // &.w"...T.^[.S..&
    43F0: C6 47 2B 04 E8 AB FD 26 8B 47 14 26 8B 57 16 5B  // .G+....&.G.&.W.[
    4400: C3 53 8B D8 26 C6 47 2B 01 E8 BB FD EB E9 53 8B  // .S..&.G+......S.
    4410: D8 26 C6 47 2B 00 E8 D2 FD EB DC 53 8B D8 83 C3  // .&.G+......S....
    4420: 35 26 8A 5F 01 C0 EB 03 80 E3 07 32 FF 03 DB FF  // 5&._.......2....
    4430: 97 16 A2 5B C3 53 52 56 8B D8 26 8A 47 2C 32 E4  // ...[.SRV..&.G,2.
    4440: 8B F0 03 F0 8B C3 FF 94 32 A2 26 89 47 08 26 89  // ........2.&.G.&.
    4450: 57 0A 26 8A 47 2D 32 E4 8B F0 03 F0 8B C3 FF 94  // W.&.G-2.........
    4460: 4A A2 26 89 47 04 26 89 57 06 E9 17 FD 53 51 56  // J.&.G.&.W....SQV
    4470: 8B D8 26 8A 4F 2B 32 ED 8B F1 8A 8C 7A A2 E3 0A  // ..&.O+2.....z...
    4480: 26 D1 6F 06 26 D1 5F 04 E2 F6 26 8A 4F 2B 32 ED  // &.o.&._...&.O+2.
    4490: 8B F1 C1 E6 02 8B 8C 5A A2 8B B4 5C A2 26 21 4F  // .......Z...\.&!O
    44A0: 04 26 21 77 06 26 8A 4F 2A 32 ED 8B F1 8A 8C 82  // .&!w.&.O*2......
    44B0: A2 E3 0A 26 D1 67 04 26 D1 57 06 E2 F6 26 8B 4F  // ...&.g.&.W...&.O
    44C0: 08 26 8B 77 0A 26 89 4F 14 26 89 77 16 E9 CA 03  // .&.w.&.O.&.w....
    44D0: 53 51 52 56 57 8B D8 8C D0 8E C0 26 8A 47 2B 32  // SQRVW......&.G+2
    44E0: E4 8B F0 C1 E6 02 26 8A 47 2A 8B F8 8A 8D 82 A2  // ......&.G*......
    44F0: 32 ED 8B 84 5A A2 8B 94 5C A2 E3 06 D1 E0 D1 D2  // 2...Z...\.......
    4500: E2 FA F7 D0 F7 D2 26 21 47 14 26 21 57 16 26 8A  // ......&!G.&!W.&.
    4510: 47 2A 32 E4 8B F0 8A 8C 82 A2 32 ED E3 0A 26 D1  // G*2.......2...&.
    4520: 6F 0A 26 D1 5F 08 E2 F6 26 8A 47 2B 8B F0 C1 E6  // o.&._...&.G+....
    4530: 02 8B 84 5A A2 8B 94 5C A2 26 21 47 08 26 21 57  // ...Z...\.&!G.&!W
    4540: 0A 26 8A 47 2A 32 E4 8B F0 8A 8C 82 A2 32 ED E3  // .&.G*2.......2..
    4550: 0A 26 D1 67 08 26 D1 57 0A E2 F6 26 8B 47 14 26  // .&.g.&.W...&.G.&
    4560: 8B 57 16 26 09 47 08 26 09 57 0A 5F 5E 5A 59 5B  // .W.&.G.&.W._^ZY[
    4570: C3 53 51 56 8B D8 26 8A 4F 2B 32 ED 8B F1 8A 8C  // .SQV..&.O+2.....
    4580: 7A A2 E3 0A 26 D1 6F 06 26 D1 5F 04 E2 F6 26 8A  // z...&.o.&._...&.
    4590: 4F 2B 32 ED 8B F1 C1 E6 02 8B 8C 5A A2 8B B4 5C  // O+2........Z...\
    45A0: A2 26 21 4F 04 26 21 77 06 26 8A 4F 2A 32 ED 8B  // .&!O.&!w.&.O*2..
    45B0: F1 8A 8C 82 A2 E3 0A 26 D1 6F 0A 26 D1 5F 08 E2  // .......&.o.&._..
    45C0: F6 26 8A 4F 2B 32 ED 8B F1 C1 E6 02 8B 8C 5A A2  // .&.O+2........Z.
    45D0: 8B B4 5C A2 26 21 4F 08 26 21 77 0A E9 BB 02 51  // ..\.&!O.&!w....Q
    45E0: 52 57 8B D8 8C D0 8E C0 26 80 7F 2B 00 74 1A 26  // RW......&..+.t.&
    45F0: 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 32 A2 26  // .G,2.........2.&
    4600: 89 47 08 26 89 57 0A EB 10 26 8A 47 2C 32 E4 8B  // .G.&.W...&.G,2..
    4610: F0 03 F0 8B C3 FF 94 3E A2 26 8A 47 2D 32 E4 8B  // .......>.&.G-2..
    4620: F0 03 F0 8B C3 FF 94 4A A2 26 89 47 04 26 89 57  // .......J.&.G.&.W
    4630: 06 8C D2 8E C2 26 80 7F 2B 00 74 4A 26 8A 47 2B  // .....&..+.tJ&.G+
    4640: 32 E4 8B F0 C1 E6 02 26 8A 47 2A 8B F8 8A 8D 82  // 2......&.G*.....
    4650: A2 32 ED 8B 84 5A A2 8B 94 5C A2 E3 06 D1 E0 D1  // .2...Z...\......
    4660: D2 E2 FA F7 D0 F7 D2 26 21 47 08 26 21 57 0A 8B  // .......&!G.&!W..
    4670: C3 E8 F9 FD 26 8B 47 04 26 8B 57 06 26 09 47 08  // ....&.G.&.W.&.G.
    4680: 26 09 57 0A EB 10 26 8B 57 04 26 8B 47 06 26 89  // &.W...&.W.&.G.&.
    4690: 57 08 26 89 47 0A 26 8A 47 2C 32 E4 8B F0 03 F0  // W.&.G.&.G,2.....
    46A0: 8B C3 FF 94 26 A2 5F 5A 59 C3 53 51 52 56 57 8B  // ....&._ZY.SQRVW.
    46B0: D8 26 8A 47 2A 32 E4 8B F0 8A 8C 82 A2 32 ED E3  // .&.G*2.......2..
    46C0: 0A 26 D1 67 04 26 D1 57 06 E2 F6 8C D0 8E C0 26  // .&.g.&.W.......&
    46D0: 8A 47 2B 32 E4 8B F0 C1 E6 02 26 8A 47 2A 8B F8  // .G+2......&.G*..
    46E0: 8A 8D 82 A2 32 ED 8B 84 5A A2 8B 94 5C A2 E3 06  // ....2...Z...\...
    46F0: D1 E0 D1 D2 E2 FA F7 D0 F7 D2 26 09 47 04 26 09  // ..........&.G.&.
    4700: 57 06 26 8B 47 04 26 8B 57 06 26 21 47 08 26 21  // W.&.G.&.W.&!G.&!
    4710: 57 0A E9 56 FE 55 8B EC 51 52 50 8B D8 26 8A 47  // W..V.U..QRP..&.G
    4720: 2C 32 E4 8B F0 03 F0 8B C3 FF 94 32 A2 26 89 47  // ,2.........2.&.G
    4730: 08 26 89 57 0A 26 8A 47 2B 88 46 FA 8B C3 E8 DA  // .&.W.&.G+.F.....
    4740: FC 26 89 47 04 26 89 57 06 26 8A 4F 2D 32 ED 8B  // .&.G.&.W.&.O-2..
    4750: F1 03 F1 8B C3 FF 94 4A A2 26 89 47 14 26 89 57  // .......J.&.G.&.W
    4760: 16 8B C3 E8 44 FF 8A 46 FA 32 E4 8B F0 8A 8C 7A  // ....D..F.2.....z
    4770: A2 E3 0A 26 D1 6F 16 26 D1 5F 14 E2 F6 26 8A 57  // ...&.o.&._...&.W
    4780: 2B 32 F6 8B F2 C1 E6 02 8B 84 5A A2 8B 94 5C A2  // +2........Z...\.
    4790: 26 21 47 14 26 21 57 16 26 8A 47 2A 32 E4 8B F0  // &!G.&!W.&.G*2...
    47A0: 8A 8C 82 A2 32 ED E3 0A 26 D1 67 14 26 D1 57 16  // ....2...&.g.&.W.
    47B0: E2 F6 26 8B 47 14 26 8B 57 16 26 09 47 08 26 09  // ..&.G.&.W.&.G.&.
    47C0: 57 0A 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94  // W.&.G,2.........
    47D0: 26 A2 8D 66 FC 5A 59 5D C3 51 8B D8 E8 56 FC 26  // &..f.ZY].Q...V.&
    47E0: 8A 4F 2B 32 ED 8B F1 8A 8C 7A A2 E3 0A 26 D1 6F  // .O+2.....z...&.o
    47F0: 06 26 D1 5F 04 E2 F6 8B C3 E8 AE FE 26 8A 4F 2C  // .&._........&.O,
    4800: 32 ED 8B F1 03 F1 8B C3 FF 94 26 A2 59 C3 8B D8  // 2.........&.Y...
    4810: E8 22 FC 8B C3 E8 55 FC 26 8B 47 04 26 8B 77 06  // ."....U.&.G.&.w.
    4820: 26 09 47 08 26 09 77 0A 26 8A 47 2C 32 E4 8B F0  // &.G.&.w.&.G,2...
    4830: 03 F0 8B C3 FF 94 26 A2 C3 53 56 8B D8 E8 F5 FB  // ......&..SV.....
    4840: 8B C3 E8 28 FC 26 8B 47 04 26 8B 77 06 26 31 47  // ...(.&.G.&.w.&1G
    4850: 08 26 31 77 0A 26 8A 47 2C 32 E4 8B F0 03 F0 8B  // .&1w.&.G,2......
    4860: C3 FF 94 26 A2 5E 5B C3 53 51 56 8B D8 E8 C5 FB  // ...&.^[.SQV.....
    4870: 8B C3 E8 F8 FB 26 8B 4F 04 E3 0A 26 D1 67 08 26  // .....&.O...&.g.&
    4880: D1 57 0A E2 F6 8B C3 E8 46 FC 26 8A 4F 2C 32 ED  // .W......F.&.O,2.
    4890: 8B F1 03 F1 8B C3 FF 94 26 A2 5E 59 5B C3 53 51  // ........&.^Y[.SQ
    48A0: 56 8B D8 E8 8F FB 8B C3 E8 C2 FB 26 8B 4F 04 E3  // V..........&.O..
    48B0: 0A 26 D1 6F 0A 26 D1 5F 08 E2 F6 EB C8 52 8B D8  // .&.o.&._.....R..
    48C0: E8 72 FB 8B C3 E8 A5 FB 8B F3 26 8B 47 04 26 8B  // .r........&.G.&.
    48D0: 57 06 26 01 47 08 26 11 54 0A 8B C3 E8 F1 FB 26  // W.&.G.&.T......&
    48E0: 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 26 A2 5A  // .G,2.........&.Z
    48F0: C3 52 8B D8 E8 3E FB 8B C3 E8 71 FB 8B F3 26 8B  // .R...>....q...&.
    4900: 47 04 26 8B 57 06 26 29 47 08 26 19 54 0A EB CA  // G.&.W.&)G.&.T...
    4910: 51 52 8B F0 E8 1E FB 8B C6 E8 55 FC 26 8B 44 08  // QR........U.&.D.
    4920: 26 8B 54 0A 26 8B 5C 04 26 8B 4C 06 E8 1C F3 26  // &.T.&.\.&.L....&
    4930: 89 44 0C 26 89 54 0E 5A 59 C3 51 52 57 8B F0 E8  // .D.&.T.ZY.QRW...
    4940: F3 FA 8B C6 E8 2A FC 26 8B 44 08 26 8B 54 0A 26  // .....*.&.D.&.T.&
    4950: 8B 5C 04 26 8B 4C 06 E8 6D F2 26 89 44 0C 26 89  // .\.&.L..m.&.D.&.
    4960: 54 0E 8C D7 8E C7 26 8B 44 08 26 8B 54 0A 26 8B  // T.....&.D.&.T.&.
    4970: 5C 04 26 8B 4C 06 E8 4E F2 26 89 5C 10 26 89 4C  // \.&.L..N.&.\.&.L
    4980: 12 E9 22 FD 51 52 8B D8 E8 AA FA 8B C3 E8 E1 FB  // ..".QR..........
    4990: 8C D1 8E C1 26 8B 47 08 26 8B 57 0A 26 3B 57 06  // ....&.G.&.W.&;W.
    49A0: 75 0E 26 3B 47 04 75 08 26 C6 47 30 01 5A 59 C3  // u.&;G.u.&.G0.ZY.
    49B0: 8B D0 26 8B 47 0A 26 3B 47 06 72 08 75 0A 26 3B  // ..&.G.&;G.r.u.&;
    49C0: 57 04 73 04 33 C0 EB 03 B8 02 00 26 88 47 30 5A  // W.s.3......&.G0Z
    49D0: 59 C3 51 52 57 8B D8 26 8A 47 2C 32 E4 8B F0 03  // Y.QRW..&.G,2....
    49E0: F0 8B C3 FF 94 32 A2 26 89 47 08 26 89 57 0A 8C  // .....2.&.G.&.W..
    49F0: D0 8E C0 26 8A 47 2B 32 E4 8B F0 C1 E6 02 8B F8  // ...&.G+2........
    4A00: 8A 8D 7A A2 32 ED 8B 84 5A A2 8B 94 5C A2 E3 06  // ..z.2...Z...\...
    4A10: D1 E0 D1 D2 E2 FA F7 D0 F7 D2 26 21 47 08 26 21  // ..........&!G.&!
    4A20: 57 0A E9 71 FC 55 8B EC 51 52 57 83 EC 06 8B D8  // W..q.U..QRW.....
    4A30: 26 8A 47 2B 32 E4 8B F0 C1 E6 02 8B F8 8A 8D 7A  // &.G+2..........z
    4A40: A2 32 ED 8B 84 5A A2 89 46 F4 8B 84 5C A2 89 46  // .2...Z..F...\..F
    4A50: F6 E3 08 D1 66 F4 D1 56 F6 E2 F8 8B 7E F4 8B 46  // ....f..V....~..F
    4A60: F6 89 46 F8 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3  // ..F.&.G,2.......
    4A70: FF 94 32 A2 26 89 47 08 26 89 57 0A 8B C3 E8 6B  // ..2.&.G.&.W....k
    4A80: F9 26 89 47 04 26 89 57 06 8B C7 F7 D0 8B 56 F6  // .&.G.&.W......V.
    4A90: F7 D2 26 23 47 08 26 23 57 0A 26 89 47 14 26 89  // ..&#G.&#W.&.G.&.
    4AA0: 57 16 26 21 7F 08 8B 46 F6 26 21 47 0A 8C D1 8D  // W.&!...F.&!G....
    4AB0: 77 35 8E C1 26 80 3C 19 73 12 26 8B 4F 04 E3 0A  // w5..&.<.s.&.O...
    4AC0: 26 D1 67 08 26 D1 57 0A E2 F6 EB 10 26 8B 4F 04  // &.g.&.W.....&.O.
    4AD0: E3 0A 26 D1 6F 0A 26 D1 5F 08 E2 F6 26 21 7F 08  // ..&.o.&._...&!..
    4AE0: 8B 46 F8 26 21 47 0A 26 8B 57 14 26 8B 47 16 26  // .F.&!G.&.W.&.G.&
    4AF0: 09 57 08 26 09 47 0A 26 8A 47 2C 32 E4 8B F0 03  // .W.&.G.&.G,2....
    4B00: F0 8B C3 FF 94 26 A2 8D 66 FA 5F E9 C7 FC 52 8B  // .....&..f._...R.
    4B10: D8 E8 21 F9 8B C3 E8 58 FA 26 8B 47 08 26 8B 57  // ..!....X.&.G.&.W
    4B20: 0A 26 85 57 06 75 06 26 85 47 04 74 05 B8 03 00  // .&.W.u.&.G.t....
    4B30: EB 03 B8 01 00 26 88 47 30 5A C3 53 51 52 56 8B  // .....&.G0Z.SQRV.
    4B40: D8 26 8A 4F 2D 32 ED 8B F1 03 F1 FF 94 4A A2 26  // .&.O-2.......J.&
    4B50: 89 47 04 26 89 57 06 26 8A 47 2B 32 E4 8B F0 8A  // .G.&.W.&.G+2....
    4B60: 8C 7A A2 E3 0A 26 D1 6F 06 26 D1 5F 04 E2 F6 26  // .z...&.o.&._...&
    4B70: 8A 47 2B 8B F0 C1 E6 02 8B 84 5A A2 8B 94 5C A2  // .G+.......Z...\.
    4B80: 26 21 47 04 26 21 57 06 E9 E1 F9 52 8B D8 E8 AA  // &!G.&!W....R....
    4B90: FF 26 8B 47 04 26 8B 57 06 26 89 47 18 26 89 57  // .&.G.&.W.&.G.&.W
    4BA0: 1A 5A C3 51 52 8B D8 E8 91 FF 8C D0 8E C0 26 8B  // .Z.QR.........&.
    4BB0: 77 02 26 8B 74 02 81 3C 5A 5A 74 5B 26 8B 77 02  // w.&.t..<ZZt[&.w.
    4BC0: 26 8B 74 02 80 3C 63 75 E1 26 8B 77 02 26 FF 44  // &.t..<cu.&.w.&.D
    4BD0: 02 8B C3 E8 45 F8 26 89 47 08 26 89 57 0A 8B C3  // ....E.&.G.&.W...
    4BE0: E8 1E F8 26 89 47 14 26 89 57 16 8C D1 8E C1 26  // ...&.G.&.W.....&
    4BF0: 8B 57 04 26 8B 47 06 26 3B 47 0A 75 AD 26 3B 57  // .W.&.G.&;G.u.&;W
    4C00: 08 75 A7 26 8B 77 02 26 8B 04 26 03 47 14 8B DE  // .u.&.w.&..&.G...
    4C10: 26 89 47 02 5A 59 C3 26 8B 5F 02 26 83 47 02 02  // &.G.ZY.&._.&.G..
    4C20: 5A 59 C3 52 57 8B D8 8C D0 8E C0 26 8B 77 02 26  // ZY.RW......&.w.&
    4C30: 8B 74 02 8A 54 01 84 D2 75 08 26 C7 47 22 00 00  // .t..T...u.&.G"..
    4C40: EB 2F 80 FA FF 75 14 26 8B 77 02 26 8B 3F 26 8B  // ./...u.&.w.&.?&.
    4C50: 34 26 2B 75 02 26 89 77 22 EB 16 26 8B 07 E8 C7  // 4&+u.&.w"..&....
    4C60: 03 8B F0 8A C2 32 E4 03 C0 03 F0 8B 04 26 89 47  // .....2.......&.G
    4C70: 22 26 8B 5F 02 26 83 47 02 02 5F 5A C3 8B D8 26  // "&._.&.G.._Z...&
    4C80: 80 67 2F F9 26 8B 77 02 26 8B 74 02 8A 44 01 26  // .g/.&.w.&.t..D.&
    4C90: 88 47 34 26 8B 5F 02 26 83 47 02 03 C3 8B D8 26  // .G4&._.&.G.....&
    4CA0: 8B 77 02 26 8B 74 02 8B 74 01 26 89 77 20 EB E3  // .w.&.t..t.&.w ..
    4CB0: 53 8B D8 26 8A 47 2C 32 E4 24 03 26 80 67 2F F9  // S..&.G,2.$.&.g/.
    4CC0: C1 E0 09 26 09 47 2E E9 73 F5 8B D8 26 8B 77 02  // ...&.G..s...&.w.
    4CD0: 26 8B 74 02 8A 44 01 32 E4 26 89 47 04 26 C7 47  // &.t..D.2.&.G.&.G
    4CE0: 06 00 00 8B C3 E8 24 05 26 8B 5F 02 26 83 47 02  // ......$.&._.&.G.
    4CF0: 02 C3 8B D8 26 8B 77 02 26 8B 74 02 8A 44 01 32  // ....&.w.&.t..D.2
    4D00: E4 26 89 47 04 26 C7 47 06 00 00 8B C3 E8 EC 04  // .&.G.&.G........
    4D10: EB D6 53 56 8B D8 26 8B 77 02 26 8B 74 02 8A 44  // ..SV..&.w.&.t..D
    4D20: 01 32 E4 26 89 47 04 26 C7 47 06 00 00 8B C3 E8  // .2.&.G.&.G......
    4D30: EA 04 E9 AA F4 53 56 8B D8 26 8B 77 02 26 8B 74  // .....SV..&.w.&.t
    4D40: 02 8A 44 01 32 E4 26 89 47 04 26 C7 47 06 00 00  // ..D.2.&.G.&.G...
    4D50: 8B C3 E8 D4 04 E9 87 F4 53 56 8B D8 26 8B 77 02  // ........SV..&.w.
    4D60: 8B DE 26 8B 5F 02 8B 5F 01 83 C3 03 26 01 5C 02  // ..&._.._....&.\.
    4D70: 5E 5B C3 51 52 8B D8 26 8B 77 02 26 83 44 02 02  // ^[.QR..&.w.&.D..
    4D80: 26 8B 07 E8 84 02 8B C8 26 8B 77 28 8A 44 01 32  // &.......&.w(.D.2
    4D90: E4 03 C0 8B F1 03 F0 83 3C 00 74 4F 26 8B 77 28  // ........<.tO&.w(
    4DA0: 8A 54 01 32 F6 8B C3 E8 94 02 26 88 47 31 26 8B  // .T.2......&.G1&.
    4DB0: 77 02 26 8B 34 8B 44 04 C1 E8 08 32 E4 24 7F C1  // w.&.4.D....2.$..
    4DC0: E8 02 32 E4 24 1F 26 80 67 2F 07 C1 E0 0B 26 09  // ..2.$.&.g/....&.
    4DD0: 47 2E 26 8B 37 26 8B 47 2E C1 E8 0B C1 E0 02 26  // G.&.7&.G.......&
    4DE0: 01 04 26 C6 47 32 01 26 89 4F 28 5A 59 C3 53 8B  // ..&.G2.&.O(ZY.S.
    4DF0: D8 26 C6 47 32 82 5B C3 57 8B D8 8C D6 8E C6 26  // .&.G2.[.W......&
    4E00: 80 7F 2C 05 74 0A 26 8A 47 2C 26 3A 47 30 75 1E  // ..,.t.&.G,&:G0u.
    4E10: 26 8B 77 02 26 8B 74 02 26 8B 7F 02 26 8B 3D 8B  // &.w.&.t.&...&.=.
    4E20: 74 01 03 F7 26 8B 5F 02 26 89 77 02 5F C3 26 8B  // t...&._.&.w._.&.
    4E30: 5F 02 26 83 47 02 03 5F C3 53 56 57 8B D8 8C D6  // _.&.G.._.SVW....
    4E40: 8E C6 26 80 7F 30 01 74 0A 26 8A 47 30 26 3A 47  // ..&..0.t.&.G0&:G
    4E50: 2C 75 20 26 8B 77 02 26 8B 74 02 26 8B 7F 02 26  // ,u &.w.&.t.&...&
    4E60: 8B 3D 8B 74 01 03 F7 26 8B 5F 02 26 89 77 02 5F  // .=.t...&._.&.w._
    4E70: 5E 5B C3 26 8B 5F 02 26 83 47 02 03 EB F1 53 56  // ^[.&._.&.G....SV
    4E80: 57 8B D8 8C D0 8E C0 26 80 7F 30 01 74 E5 EB C3  // W......&..0.t...
    4E90: 55 8B EC 53 51 52 57 50 8B D8 8C D1 8E C1 26 8B  // U..SQRWP......&.
    4EA0: 77 02 26 8B 74 02 8A 04 3C 80 0F 86 D0 00 26 8B  // w.&.t...<.....&.
    4EB0: 3F 26 8B 77 28 26 8B 55 02 8B 74 01 03 F2 89 76  // ?&.w(&.U..t....v
    4EC0: F6 26 C6 47 3D 00 26 8B 77 28 F6 44 02 80 74 16  // .&.G=.&.w(.D..t.
    4ED0: 8B 76 F6 8A 24 26 88 67 35 02 C0 0C 01 FF 46 F6  // .v..$&.g5.....F.
    4EE0: 26 FE 47 3D EB 04 80 46 F7 80 26 8B 77 02 26 83  // &.G=...F..&.w.&.
    4EF0: 44 02 03 3C 80 74 49 A8 80 74 17 26 8A 67 3D 8A  // D..<.tI..t.&.g=.
    4F00: D4 32 F6 FE C4 26 88 67 3D 8B F3 03 F2 8B 7E F6  // .2...&.g=.....~.
    4F10: EB 21 26 8B 77 02 26 8B 7C 02 8D 55 01 26 89 54  // .!&.w.&.|..U.&.T
    4F20: 02 26 8A 57 3D 8A CA 32 ED FE C2 26 88 57 3D 8B  // .&.W=..2...&.W=.
    4F30: F3 03 F1 8A 25 26 88 64 35 02 C0 FF 46 F6 EB B3  // ....%&.d5...F...
    4F40: 26 8A 47 35 8A D0 32 F6 8B F2 C1 E6 02 8A A4 A7  // &.G5..2.........
    4F50: A2 26 88 67 3D 8D 77 35 26 8A 64 01 80 E4 07 26  // .&.g=.w5&.d....&
    4F60: 88 67 2D 8D 77 35 26 8A 64 01 C0 EC 03 80 E4 07  // .g-.w5&.d.......
    4F70: 26 88 67 2B 8D 77 35 26 8A 64 01 E9 6B 00 26 C6  // &.g+.w5&.d..k.&.
    4F80: 47 3D 00 8C D7 8E C7 26 80 7F 3D 08 73 20 26 8B  // G=.....&..=.s &.
    4F90: 77 02 26 8A 57 3D 32 F6 26 8B 74 02 03 F2 8B FB  // w.&.W=2.&.t.....
    4FA0: 03 FA 8A 24 26 88 65 35 26 FE 47 3D EB D5 26 8B  // ...$&.e5&.G=..&.
    4FB0: 77 02 8A D0 32 F6 8B FA C1 E7 02 8A 95 A7 A2 26  // w...2..........&
    4FC0: 01 54 02 26 8B 77 28 8A 64 01 80 E4 07 26 88 67  // .T.&.w(.d....&.g
    4FD0: 2D 26 8B 77 28 8A 64 01 C0 EC 03 80 E4 07 26 88  // -&.w(.d.......&.
    4FE0: 67 2B 26 8B 77 28 8A 64 01 C0 EC 06 26 88 67 2A  // g+&.w(.d....&.g*
    4FF0: 8A D0 32 F6 8B F2 C1 E6 02 8A A4 A6 A2 26 88 67  // ..2..........&.g
    5000: 2C 8D 66 F8 5F 5A 59 5B 5D C3 53 56 8B D8 26 8B  // ,.f._ZY[].SV..&.
    5010: 77 02 8B C6 8B 74 48 03 F0 8B D8 8B 74 1E 8B C6  // w....tH.....t...
    5020: 03 C3 83 C0 04 5E 5B C3 53 56 8B D8 26 8B 77 02  // .....^[.SV..&.w.
    5030: 8B C6 8B 74 48 03 F0 8B D8 8B 74 20 EB E0 8A C2  // ...tH.....t ....
    5040: C3 16 07 55 8B EC 53 51 56 57 83 EC 40 8B F8 89  // ...U..SQVW..@...
    5050: 46 B8 E8 D3 FF 8B D8 89 46 E0 26 8B 45 02 8B 5F  // F.......F.&.E.._
    5060: 2E 03 D8 89 5E DE 83 46 DE 04 8B C7 E8 9B FF 89  // ....^..F........
    5070: 46 E0 32 F6 8D 46 B8 E8 C4 FF 8A D0 32 F6 03 D2  // F.2..F......2...
    5080: 8B 5E E0 03 DA 83 3F 00 0F 84 65 01 88 46 E9 80  // .^....?...e..F..
    5090: 66 E7 F9 C6 46 EC 00 C7 46 D8 00 00 66 C7 46 D0  // f...F...F...f.F.
    50A0: 00 00 00 00 C7 46 F6 00 00 C6 46 EA 01 EB 06 3C  // .....F....F....<
    50B0: 01 0F 85 8C 00 8A 56 E9 8A C2 32 E4 03 C0 8B 5E  // ......V...2....^
    50C0: E0 03 D8 83 3F 00 74 75 26 8B 45 02 8B 1F 03 D8  // ....?.tu&.E.....
    50D0: 8B 47 04 32 E4 8B C8 83 C1 09 32 ED 80 E1 FE 83  // .G.2......2.....
    50E0: F9 00 74 07 D1 E9 33 C0 50 E2 FD 8B C4 8B D8 89  // ..t...3.P.......
    50F0: 46 BA 85 C0 74 41 83 C0 08 26 89 47 04 8A C2 32  // F...tA...&.G...2
    5100: E4 03 C0 8B 5E E0 03 D8 26 8B 45 02 03 07 8B 5E  // ....^...&.E....^
    5110: BA 26 89 07 8B 5E BA 26 8B 07 83 C0 06 26 89 47  // .&...^.&.....&.G
    5120: 02 8B 5E BA 8B 76 F6 26 89 77 06 8B 5E BA 89 5E  // ..^..v.&.w..^..^
    5130: F6 C6 46 EA 00 EB 0A C6 46 EA 87 EB 04 C6 46 EA  // ..F.....F.....F.
    5140: 83 8A 46 EA 32 E4 83 F8 10 0F 8F 99 00 88 66 EA  // ..F.2.........f.
    5150: 8A 46 EA 32 E4 85 C0 0F 8F 83 00 8C D0 8B 5E BA  // .F.2..........^.
    5160: 8E C0 26 8B 5F 02 89 5E E0 8B 5E BA 26 8B 5F 02  // ..&._..^..^.&._.
    5170: 80 3F 5B 75 4A C6 46 EA 10 8B 5E BA 26 8B 5F 06  // .?[uJ.F...^.&._.
    5180: 89 5E F6 8B 5E BA 26 8B 1F 8B 47 04 32 E4 8B C8  // .^..^.&...G.2...
    5190: 83 C1 09 32 ED 80 E1 FE 03 E1 8B 5E F6 89 5E BA  // ...2.......^..^.
    51A0: 85 DB 74 AC 26 8B 1F 8B 47 04 C1 E8 08 32 E4 24  // ..t.&...G....2.$
    51B0: 7F C1 E8 02 C1 E0 02 8B 5E B8 26 29 07 EB 91 8D  // ........^.&)....
    51C0: 46 B8 E8 CB FC 8A D0 8D 46 B8 E8 2E 00 8A DA 32  // F.......F......2
    51D0: FF C1 E3 02 8D 46 B8 FF 97 A4 A2 E9 72 FF 83 7E  // .....F......r..~
    51E0: F6 00 0F 85 C9 FE 80 7E EA 10 74 05 8A 46 EA EB  // .......~..t..F..
    51F0: 02 32 C0 8D 66 F8 5F 5E E9 0B FE C3 53 51 8B D8  // .2..f._^....SQ..
    5200: 26 8A 4F 04 32 ED E8 30 E5 59 5B C3 53 51 8B D8  // &.O.2..0.Y[.SQ..
    5210: 26 8A 4F 04 32 ED E8 2B E5 59 5B C3 53 8B D8 26  // &.O.2..+.Y[.S..&
    5220: 8A 47 04 32 E4 E6 80 5B C3 53 51 8B D8 26 8A 4F  // .G.2...[.SQ..&.O
    5230: 04 32 ED E8 7E CF 59 5B C3 53 57 8B D8 26 8B 5F  // .2..~.Y[.SW..&._
    5240: 14 E8 0C EB 8B D0 66 C1 E8 10 92 5F 5B C3 53 57  // ......f...._[.SW
    5250: 8B D8 26 8B 47 14 26 8B 57 16 8B D8 87 D3 66 C1  // ..&.G.&.W.....f.
    5260: E3 10 8B DA C1 E3 02 E8 FF EA EB D8 53 52 57 8B  // ............SRW.
    5270: D8 26 8B 47 08 26 8B 57 0A 92 66 C1 E0 10 8B C2  // .&.G.&.W..f.....
    5280: 26 8B 5F 14 E8 2E EA 5F 5A 5B C3 53 52 8B D8 26  // &._...._Z[.SR..&
    5290: 8B 47 1C 26 8B 57 1E 92 66 C1 E0 10 8B C2 26 8B  // .G.&.W..f.....&.
    52A0: 5F 26 8B 5F 01 E8 0D EA 5A 5B C3 53 52 56 8B F0  // _&._....Z[.SRV..
    52B0: 26 8B 5C 26 8B 5F 01 E8 96 EA 8B D0 66 C1 E8 10  // &.\&._......f...
    52C0: 92 26 89 44 1C 26 89 54 1E 5E 5A 5B C3 53 51 52  // .&.D.&.T.^Z[.SQR
    52D0: 57 8B D8 26 8B 47 08 26 8B 57 0A 92 66 C1 E0 10  // W..&.G.&.W..f...
    52E0: 8B C2 8B C8 26 8B 47 14 26 8B 57 16 8B D8 87 D3  // ....&.G.&.W.....
    52F0: 66 C1 E3 10 8B DA C1 E3 02 8B C1 E8 EA E9 5F 5A  // f............._Z
    5300: 59 5B C3 8B D0 66 C1 E8 10 92 C3 00 1E 06 66 50  // Y[...f........fP
    5310: 66 51 66 52 66 53 66 55 66 56 66 57 0E 1F 0A C0  // fQfRfSfUfVfW....
    5320: 75 06 E8 37 01 E9 D8 00 3C 01 75 06 E8 67 01 E9  // u..7....<.u..g..
    5330: CE 00 3C 02 75 06 E8 9B 02 E9 C4 00 3C 03 75 0B  // ..<.u.......<.u.
    5340: E8 EB 03 8B EC 89 5E 0C E9 B5 00 3C 04 75 0B E8  // ......^....<.u..
    5350: FA 03 8B EC 89 5E 0C E9 A6 00 3C 05 75 0B E8 25  // .....^....<.u..%
    5360: 05 8B EC 89 56 10 E9 97 00 3C 06 75 11 E8 A2 04  // ....V....<.u....
    5370: 8B EC 89 5E 0C 89 4E 14 89 56 10 E9 82 00 3C 07  // ...^..N..V....<.
    5380: 75 10 E8 94 05 8B EC 88 7E 0D 89 4E 14 89 56 10  // u.......~..N..V.
    5390: EB 6E 3C 08 75 0A E8 D7 04 8B EC 88 7E 0D EB 60  // .n<.u.......~..`
    53A0: 3C 09 75 05 E8 D0 05 EB 57 3C 0A 75 10 E8 18 06  // <.u.....W<.u....
    53B0: 8B EC 89 4E 14 89 7E 00 8C 46 1C EB 43 3C 0B 75  // ...N..~..F..C<.u
    53C0: 0B E8 12 06 8B EC 66 89 4E 14 EB 34 3C 10 75 0A  // ......f.N..4<.u.
    53D0: E8 11 06 8B EC 89 5E 0C EB 26 3C 11 75 0D E8 3D  // ......^..&<.u..=
    53E0: 06 8B EC 89 5E 0C 89 4E 14 EB 15 3C 15 75 0F E8  // ....^..N...<.u..
    53F0: 68 06 8B EC 89 5E 0C EB 07 B8 4F 01 EB 02 32 C0  // h....^....O...2.
    5400: 8B EC 89 46 18 66 5F 66 5E 66 5D 66 5B 66 5A 66  // ...F.f_f^f]f[fZf
    5410: 59 66 58 07 1F C3 50 1E 2E 8E 1E 51 03 8C D8 A3  // YfX...P....Q....
    5420: E2 66 A3 F2 66 A3 04 67 2E 8E 1E 49 03 A3 AA 04  // .f..f..g...I....
    5430: 1F 58 CB 00 30 31 2E 30 30 00 56 45 53 41 00 03  // .X..01.00.VESA..
    5440: D8 01 00 00 01 00 00 00 00 00 00 00 00 03 31 0F  // ..............1.
    5450: FE 00 00 00 8F 00 00 00 CC 53 00 00 B9 3F 00 8B  // .........S...?..
    5460: DF 83 C7 04 FC 66 33 C0 F3 66 AB 8B FB BE D2 53  // .....f3..f.....S
    5470: B9 22 00 F3 A4 06 1F 8C 4F 08 8C 47 10 8C 4F 18  // ."......O..G..O.
    5480: 8C 4F 1C 8C 4F 20 83 C7 22 89 7F 0E 0E 1F E8 AE  // .O..O ..".......
    5490: CB B0 4F 32 E4 C3 56 51 57 B9 10 00 66 33 C0 F3  // ..O2..VQW...f3..
    54A0: 66 AB 5F 59 8C DB 06 1F C7 05 BB 00 C6 45 02 07  // f._Y.........E..
    54B0: C7 45 04 40 00 C7 45 06 40 00 C6 45 1B 04 C6 45  // .E.@..E.@..E...E
    54C0: 18 01 C6 45 1A 01 C6 45 1E 01 66 C7 45 3E 00 46  // ...E...E..f.E>.F
    54D0: C3 23 8E DB E8 03 B3 66 0B C0 0F 84 EE 00 06 1F  // .#.....f........
    54E0: 66 89 45 28 8C C8 66 C1 E0 10 B8 7B 58 66 89 45  // f.E(..f....{Xf.E
    54F0: 0C 81 F9 FF 81 0F 84 CF 00 80 E5 03 B2 01 53 8E  // ..............S.
    5500: DB BE 80 1C E8 5A C9 5B 06 1F 0F 84 BE 00 53 E8  // .....Z.[......S.
    5510: D6 CB 66 89 45 12 C7 45 16 08 10 8D 5C 0C E8 52  // ..f.E..E....\..R
    5520: E8 66 89 45 1F 66 89 45 36 8D 5C 10 E8 44 E8 66  // .f.E.f.E6.\..D.f
    5530: 89 45 23 66 89 45 3A 8D 5C 08 E8 36 E8 0A C0 75  // .E#f.E:.\..6...u
    5540: 04 5B E9 87 00 E8 A0 CB 66 C1 E8 10 3D 58 02 74  // .[......f...=X.t
    5550: 0D 3D 5E 01 74 08 77 0A C6 45 17 08 EB 04 C6 45  // .=^.t.w..E.....E
    5560: 17 0E E8 4A CB 80 F9 00 74 04 C6 45 1B 06 2E A1  // ...J....t..E....
    5570: 4B 03 89 45 08 8D 5C 04 E8 F8 E7 66 8B C8 66 C1  // K..E..\....f..f.
    5580: E9 10 D3 E0 89 45 10 89 45 32 B0 08 D2 E0 88 45  // .....E..E2.....E
    5590: 19 8D 5C 14 E8 DC E7 5B 3D 00 03 77 2F 53 8B D8  // ..\....[=..w/S..
    55A0: B8 00 03 33 D2 F7 F3 5B FE C8 88 45 1D 88 45 35  // ...3...[...E..E5
    55B0: 88 45 34 8E DB 57 53 BE 80 1C E8 90 B2 5B 5F 0B  // .E4..WS......[_.
    55C0: C9 75 05 06 1F 83 25 FE 32 E4 EB 02 B4 03 B0 4F  // .u....%.2......O
    55D0: 8E DB 5E C3 81 FB FF 81 0F 84 83 00 0A FF 75 04  // ..^...........u.
    55E0: 8B C3 EB 21 F6 C7 08 75 7C 8B CB B2 01 BE 20 1C  // ...!...u|..... .
    55F0: E8 6E C8 74 70 E8 CF CA 0A C0 75 0E 66 C1 E8 10  // .n.tp.....u.f...
    5600: 80 E7 80 0A C7 E8 AD 04 EB 55 E8 BA B6 74 05 E8  // .........U...t..
    5610: B1 B3 EB 19 E8 CF B7 A9 01 00 74 11 E8 BC B8 F7  // ..........t.....
    5620: C1 02 00 74 08 E8 51 B7 80 FB 01 75 03 E8 DB B7  // ...t..Q....u....
    5630: BE 20 1C E8 EB B1 74 2D E8 A5 00 E8 2C 00 66 BB  // . ....t-....,.f.
    5640: 20 1C 00 1C E8 77 CA BE 00 1C E8 7A CA 66 C1 E8  //  ....w.....z.f..
    5650: 10 8B D8 32 C0 F6 C7 80 74 02 B0 40 E8 67 B2 B0  // ...2....t..@.g..
    5660: 4F 32 E4 EB 04 B0 4F B4 03 C3 56 06 33 C0 8E C0  // O2....O...V.3...
    5670: BE 20 1C E8 72 CA 8B C8 66 C1 E8 10 8B D0 C1 E9  // . ..r...f.......
    5680: 03 26 89 0E 4A 04 C1 EA 04 FE CA 26 88 16 84 04  // .&..J......&....
    5690: 26 C6 06 51 04 00 26 C6 06 50 04 00 26 C6 06 49  // &..Q..&..P..&..I
    56A0: 04 62 26 C7 06 4C 04 00 A0 26 C6 06 85 04 10 26  // .b&..L...&.....&
    56B0: C7 06 0C 01 CB 70 8C C8 26 A3 0E 01 07 5E C3 01  // .....p..&....^..
    56C0: 0F 00 0A 00 00 00 00 00 40 05 0F FF 00 01 02 03  // ........@.......
    56D0: 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 01 00 0F 00  // ................
    56E0: FC BA C4 03 B8 00 01 EF B9 04 00 B4 01 BE 57 56  // ..............WV
    56F0: AC 86 E0 EF 8A E0 FE C4 E2 F6 B8 00 03 EF B9 09  // ................
    5700: 00 BA CE 03 32 E4 BE 5B 56 8A C4 EE AC 42 EE 4A  // ....2..[V....B.J
    5710: FE C4 E2 F5 BA DA 03 EC B9 14 00 BA C0 03 32 E4  // ..............2.
    5720: BE 64 56 8A C4 EE AC EE FE C4 E2 F7 C3 00 BE 00  // .dV.............
    5730: 1C E8 93 C9 66 C1 E8 10 8B D8 E8 63 C9 75 05 E8  // ....f......c.u..
    5740: 4F C9 75 04 B8 4F 00 C3 B8 4F 03 C3 83 E1 0F 0F  // O.u..O...O......
    5750: 84 BB 00 0A D2 75 0C B8 00 1C E8 1F 03 83 C3 11  // .....u..........
    5760: E9 A6 00 80 FA 01 75 33 8B FB BB C9 05 B9 08 00  // ......u3........
    5770: FC E8 D8 E5 66 AB 43 E2 F8 66 C1 E7 10 66 C1 EF  // ....f.C..f...f..
    5780: 10 B9 00 01 BA 00 01 0E 1F E8 BD B3 06 1F B8 01  // ................
    5790: 1C B9 07 00 8B DF E8 E3 02 EB 6E 80 FA 02 75 6E  // ..........n...un
    57A0: 8B F3 06 1F FC BB C9 05 B9 08 00 66 AD E8 F7 E4  // ...........f....
    57B0: 43 E2 F8 06 56 0E 1F BB D0 05 E8 8F E5 8A D0 80  // C...V...........
    57C0: E2 03 66 C1 E8 10 8B C8 BE 00 1C E8 93 C6 BB CE  // ..f.............
    57D0: 05 E8 78 E5 8B C8 66 C1 E8 10 8B D0 B0 18 B7 01  // ..x...f.........
    57E0: E8 52 AC 5B 07 53 81 C3 00 04 B8 02 1C B9 07 00  // .R.[.S..........
    57F0: E8 89 02 5E 8B FE 66 C1 E7 10 66 C1 EF 10 B9 00  // ...^..f...f.....
    5800: 01 BA 00 01 0E 1F E8 8F B3 B0 4F 32 E4 C3 32 C0  // ..........O2..2.
    5810: C3 00 E8 8B C8 74 53 BE 00 1C 80 FB 00 74 18 80  // .....tS......t..
    5820: FB 01 75 05 E8 C9 C8 EB 1D 80 FB 02 75 10 8B C1  // ..u.........u...
    5830: E8 7C C8 D3 E8 8B C8 E8 CB B2 74 2E EB 08 80 FB  // .|........t.....
    5840: 03 75 24 E8 20 C8 E8 66 C8 8B D8 D3 E3 50 33 C0  // .u$. ..f.....P3.
    5850: BA 00 03 3B DA 77 05 BA FF FF EB 04 F7 F3 8B D0  // ...;.w..........
    5860: 58 8B C8 B8 4F 00 C3 32 C0 C3 B0 4F B4 03 C3 00  // X...O..2...O....
    5870: 0A DB 75 07 8A EF E8 DB B4 EB 05 E8 C0 B4 8A F8  // ..u.............
    5880: B0 4F 32 E4 C3 00 E8 17 C8 74 2C BE 00 1C E8 36  // .O2......t,....6
    5890: C8 66 C1 E8 10 F6 C4 40 75 1D 0A FF 75 05 E8 1E  // .f.....@u...u...
    58A0: 00 EB 0F 80 FF 01 75 14 BB 13 00 E8 9E E4 D1 E8  // ......u.........
    58B0: 8B D0 B0 4F 32 E4 C3 B0 4F B4 03 C3 32 C0 C3 52  // ...O2...O...2..R
    58C0: 53 66 50 81 E2 FF 02 D1 E2 8B C2 40 66 C1 E0 10  // SfP........@f...
    58D0: 8B C2 BB 13 00 E8 CF E3 BB 12 00 E8 C9 E3 66 58  // ..............fX
    58E0: 5B 5A C3 9C 1E 06 66 50 66 51 66 52 66 53 66 55  // [Z....fPfQfRfSfU
    58F0: 66 56 66 57 0E 1F E8 B4 E4 E8 8A FF E8 D1 E4 8B  // fVfW............
    5900: EC 89 56 10 89 46 18 66 5F 66 5E 66 5D 66 5B 66  // ..V..F.f_f^f]f[f
    5910: 5A 66 59 66 58 07 1F 9D CB E8 84 C7 74 54 F6 C3  // ZfYfX.......tT..
    5920: 7F 75 38 53 BE 00 1C E8 C6 C7 F7 E2 66 C1 E2 10  // .u8S........f...
    5930: 8B D0 66 81 E1 FF FF 00 00 66 03 D1 E8 70 C7 80  // ..f......f...p..
    5940: E2 FC 66 D3 E2 66 81 E2 FF FF FF 02 8D 5C 18 66  // ..f..f.......\.f
    5950: 8B C2 E8 89 E3 5B E8 94 B1 EB 0F 80 FB 82 74 C3  // .....[........t.
    5960: 80 FB 01 75 0A E8 79 B1 32 FF B0 4F 32 E4 C3 32  // ...u..y.2..O2..2
    5970: C0 C3 B0 4F B4 03 C3 E8 26 C7 74 47 80 FF 20 74  // ...O....&.tG.. t
    5980: 08 66 C1 E7 10 66 C1 EF 10 81 F9 00 01 77 31 0A  // .f...f.......w1.
    5990: DB 74 05 80 FB 80 75 10 32 F6 E8 A1 B3 3C 06 74  // .t....u.2....<.t
    59A0: 02 B6 01 E8 F2 B1 EB 13 80 FB 01 75 13 32 F6 E8  // ...........u.2..
    59B0: 8C B3 3C 06 74 02 B6 01 E8 8E B1 B0 4F 32 E4 C3  // ..<.t.......O2..
    59C0: 32 C0 C3 B0 4F B4 03 C3 0E 07 BF C0 9F 2E 8B 0E  // 2...O...........
    59D0: BE 9F B8 4F 00 C3 0A DB 75 02 EB 03 32 C0 C3 B0  // ...O....u...2...
    59E0: 4F B4 03 C3 0A DB 75 06 B7 04 B3 10 EB 27 80 FB  // O.....u......'..
    59F0: 01 75 15 53 B1 01 0A FF 74 02 B1 00 E8 F1 B2 E8  // .u.S....t.......
    5A00: F2 B3 E8 98 B0 5B EB 0D 80 FB 02 75 0D E8 F2 B2  // .....[.....u....
    5A10: 8A F8 C0 E7 02 B0 4F 32 E4 C3 B8 4F 03 C3 80 FB  // ......O2...O....
    5A20: 01 75 09 33 C0 E8 63 B3 74 2B EB 24 80 FB 07 75  // .u.3..c.t+.$...u
    5A30: 24 0A FF 75 0E B0 82 E8 FB A9 0A C9 74 12 B9 03  // $..u........t...
    5A40: 03 EB 0D 0B C9 B1 00 74 02 B1 03 B0 82 E8 E5 A9  // .......t........
    5A50: B0 4F 32 E4 C3 B0 4F B4 03 C3 80 E3 01 0A DB 75  // .O2...O........u
    5A60: 05 BB 02 01 EB 0C 33 C0 53 E8 88 B3 E8 60 BC 5B  // ......3.S....`.[
    5A70: 74 05 B0 4F 32 E4 C3 B0 4F B4 03 C3 80 FC 1D 72  // t..O2...O......r
    5A80: 03 CD 42 C3 1E 06 66 50 66 51 66 52 66 53 66 55  // ..B...fPfQfRfSfU
    5A90: 66 56 66 57 0E 1F 50 0F B6 C4 D1 E0 8B F0 58 2E  // fVfW..P.......X.
    5AA0: FF 94 5E 5A 66 5F 66 5E 66 5D 66 5B 66 5A 66 59  // ..^Zf_f^f]f[fZfY
    5AB0: 66 58 07 1F C3 0E 1F 50 0F B6 C4 D1 E0 8B F0 58  // fX.....P.......X
    5AC0: 2E FF 94 5E 5A C3 98 5A EF 95 08 96 25 96 A6 5B  // ...^Z..Z....%..[
    5AD0: 28 8D 5A 8D CD 8D 50 8E DE 8F E2 8F EB 92 BC 93  // (.Z...P.........
    5AE0: 3F 94 A6 94 41 96 A3 96 4C 99 BF 5D CC 9D 4C 5A  // ?...A...L..]..LZ
    5AF0: 4C 5A 4C 5A 4C 5A 4C 5A 4C 5A 9C 9E 66 82 BA 83  // LZLZLZLZLZ..f...
    5B00: 2E 8E 1E 49 03 80 26 87 04 F3 50 8A E0 80 E4 7F  // ...I..&...P.....
    5B10: E8 DF 01 3B D3 75 02 58 C3 BA CC 03 EC B2 B4 B1  // ...;.u.X........
    5B20: 30 26 F6 47 09 01 74 0C B2 D4 B1 20 A8 01 75 49  // 0&.G..t.... ..uI
    5B30: B5 09 EB 06 A8 01 74 41 B5 0B 53 E8 EA 43 0A FF  // ......tA..S..C..
    5B40: 5B 75 0B 80 26 88 04 F0 08 2E 88 04 EB 2B 58 80  // [u..&........+X.
    5B50: 0E 87 04 08 80 26 10 04 CF 08 0E 10 04 89 16 63  // .....&.........c
    5B60: 04 C7 06 85 04 08 00 C6 06 84 04 18 C7 06 0C 01  // ................
    5B70: B8 68 8C 0E 0E 01 CD 42 C3 80 26 10 04 CF 08 0E  // .h.....B..&.....
    5B80: 10 04 58 53 50 0E 1F 33 C9 8A C8 B2 08 BE 40 1C  // ..XSP..3......@.
    5B90: E8 CE C2 E8 31 B1 74 05 E8 28 AE EB 19 E8 46 B2  // ....1.t..(....F.
    5BA0: A9 01 00 74 11 E8 33 B3 F7 C1 02 00 74 08 E8 C8  // ...t..3.....t...
    5BB0: B1 80 FB 01 75 03 E8 52 B2 BE 40 1C E8 62 AC 58  // ....u..R..@..b.X
    5BC0: 5B 0F 84 53 FF 2E 8E 1E 49 03 0E 07 E8 3F 2B 0E  // [..S....I....?+.
    5BD0: 1F 53 66 BB 40 1C 00 1C E8 E3 C4 BE 00 1C B0 20  // .Sf.@.......... 
    5BE0: E8 E3 AC 5B 2E 8E 1E 49 03 0E 07 E8 48 30 E8 24  // ...[...I....H0.$
    5BF0: 00 E8 54 3F E8 D1 01 E8 8E 01 E8 E2 40 0E 1F BE  // ..T?........@...
    5C00: 00 1C B0 10 E8 BF AC E8 23 30 E8 1B 30 C3 8B EC  // ........#0..0...
    5C10: C6 46 1B 00 C3 E8 2F 00 E8 0A 00 E8 BD 00 E8 52  // .F..../........R
    5C20: 00 E8 CF 0B C3 53 83 C3 0A 8B 16 63 04 B9 19 00  // .....S.....c....
    5C30: B8 11 30 EF 32 C0 26 8A 27 EF 43 FE C0 E2 F7 5B  // ..0.2.&.'.C....[
    5C40: 80 C2 06 32 C0 EE C3 53 BA C4 03 83 C3 05 B9 04  // ...2...S........
    5C50: 00 B0 01 26 8A 27 3C 01 75 03 80 CC 20 EF 43 FE  // ...&.'<.u... .C.
    5C60: C0 E2 F0 5B 26 8A 47 09 BA C2 03 EE B2 C4 B8 00  // ...[&.G.........
    5C70: 03 EF C3 8B F3 83 C6 23 BA DA 03 26 F6 47 09 01  // .......#...&.G..
    5C80: 75 02 B2 BA F6 06 89 04 08 74 1D 83 C6 10 EC B9  // u........t......
    5C90: 04 00 B4 10 B2 C0 80 FC 11 74 07 8A C4 EE 26 8A  // .........t....&.
    5CA0: 04 EE 46 FE C4 E2 EF C3 53 EC 8B DE B9 14 00 32  // ..F.....S......2
    5CB0: E4 B2 C0 8A C4 EE FE C4 26 8A 07 EE 43 E2 F4 8A  // ........&...C...
    5CC0: C4 EE 32 C0 EE 1E 06 E8 75 2F 0B ED 74 09 1F 1E  // ..2.....u/..t...
    5CD0: B9 10 00 F3 A4 46 A4 07 1F 5B C3 53 83 C3 37 B9  // .....F...[.S..7.
    5CE0: 09 00 32 C0 BA CE 03 26 8A 27 EF 43 FE C0 E2 F7  // ..2....&.'.C....
    5CF0: 5B C3 BB A0 5F 0E 07 8B D3 0A E4 7D 01 C3 E8 01  // [..._......}....
    5D00: 00 C3 33 F6 80 FC 03 7F 3C 4A F6 06 89 04 10 75  // ..3.....<J.....u
    5D10: 20 A0 88 04 24 0F 3C 02 7E 24 3C 08 74 20 3C 06  //  ...$.<.~$<.t <.
    5D20: 74 1C 3C 07 74 18 B0 40 F6 E4 03 D8 81 C3 C0 04  // t.<.t..@........
    5D30: C3 B0 40 D0 EC F6 E4 03 D8 81 C3 C0 05 C3 B0 40  // ..@............@
    5D40: F6 E4 03 D8 C3 80 FC 07 75 11 F6 06 89 04 10 75  // ........u......u
    5D50: 05 81 C3 C0 01 C3 81 C3 40 06 C3 BF FF 5C BE 20  // ........@....\. 
    5D60: 5D 33 C9 E8 4E 00 C3 04 00 01 05 40 01 06 80 01  // ]3..N......@....
    5D70: 0D 40 03 0E 80 03 0F 40 04 10 80 04 11 80 06 12  // .@.....@........
    5D80: C0 06 13 00 07 62 00 02 53 8A 1E 49 04 80 FB 07  // .....b..S..I....
    5D90: 7F 10 32 FF D1 E3 2E 8B 87 3C 5D A2 65 04 88 26  // ..2......<].e..&
    5DA0: 66 04 5B C3 2C 30 28 30 2D 30 29 30 2A 30 2E 30  // f.[.,0(0-0)0*0.0
    5DB0: 1E 3F 29 30 2E 38 25 75 07 2E 03 5D 01 33 F6 C3  // .?)0.8%u...].3..
    5DC0: 83 C7 03 3B FE 75 ED C3 1E 06 2E 8E 1E 49 03 F6  // ...;.u.......I..
    5DD0: 06 87 04 80 75 49 83 3E 4C 04 00 74 42 A0 49 04  // ....uI.>L..tB.I.
    5DE0: B9 00 20 2E 8B 3E 4F 03 26 F6 47 33 01 75 0E 26  // .. ..>O.&.G3.u.&
    5DF0: F6 47 09 01 75 1B 2E 8B 3E 4D 03 EB 14 3C 06 7E  // .G..u...>M...<.~
    5E00: 0B 2E 8B 3E 4B 03 26 8A 67 37 B5 40 66 33 C0 EB  // ...>K.&.g7.@f3..
    5E10: 06 66 B8 20 07 20 07 8E C7 66 33 FF F3 66 AB 80  // .f. . ...f3..f..
    5E20: 26 87 04 7F 07 1F C3 2E 8E 1E 49 03 80 FB 10 75  // &.........I....u
    5E30: 03 E9 9D 01 80 FB 20 75 03 E9 BE 01 80 FB 32 75  // ...... u......2u
    5E40: 1F BA CC 03 0A C0 75 09 EC 0C 02 B2 C2 EE E9 16  // ......u.........
    5E50: 01 FE C8 0F 85 16 01 EC 24 FD B2 C2 EE E9 07 01  // ........$.......
    5E60: 80 FB 35 75 4B 3C 80 75 08 80 0E 89 04 40 E9 F6  // ..5uK<.u.....@..
    5E70: 00 F6 06 89 04 40 0F 84 F3 00 0A C0 0F 84 ED 00  // .....@..........
    5E80: FE C8 75 06 E8 FB 08 E9 DD 00 F6 06 89 04 40 0F  // ..u...........@.
    5E90: 84 DA 00 FE C8 75 0C E8 7B 23 32 C0 BA C3 03 EE  // .....u..{#2.....
    5EA0: E9 C4 00 FE C8 0F 85 C4 00 E8 BD 23 B0 01 EB EC  // ...........#....
    5EB0: 80 FB 30 74 03 E9 96 00 50 E8 6C 40 8A EF BA CC  // ..0t....P.l@....
    5EC0: 03 EC 8A C8 58 0A C0 75 30 B7 08 F6 C1 01 75 12  // ....X..u0.....u.
    5ED0: 0A ED 75 0B A0 10 04 24 30 3C 30 75 10 B7 02 E9  // ..u....$0<0u....
    5EE0: 8B 00 A0 10 04 24 30 3C 30 75 02 B7 02 80 26 89  // .....$0<0u....&.
    5EF0: 04 6F 80 0E 89 04 80 EB 36 3C 01 75 41 80 26 89  // .o......6<.uA.&.
    5F00: 04 6F B7 09 F6 C1 01 75 15 B7 0B A0 10 04 24 30  // .o.....u......$0
    5F10: 3C 30 74 1B B7 09 0A ED 74 15 B7 05 EB 11 A0 10  // <0t.....t.......
    5F20: 04 24 30 3C 30 75 08 B7 0B 0A ED 74 02 B7 03 8A  // .$0<0u.....t....
    5F30: 1E 88 04 80 E3 F0 0A DF 88 1E 88 04 EB 29 3C 02  // .............)<.
    5F40: 75 2B 80 26 89 04 6F 80 0E 89 04 10 EB B4 80 FB  // u+.&..o.........
    5F50: 31 75 1B 0A C0 74 0B 3C 01 75 0C 80 0E 89 04 08  // 1u...t.<.u......
    5F60: EB 05 80 26 89 04 F7 8B EC C6 46 1A 12 C3 80 FB  // ...&......F.....
    5F70: 33 75 16 3C 00 74 0B 3C 01 75 EC 80 26 89 04 FD  // 3u.<.t.<.u..&...
    5F80: EB E5 80 0E 89 04 02 EB DE 80 FB 34 75 17 3C 00  // ...........4u.<.
    5F90: 75 07 80 26 87 04 FE EB CE 3C 01 75 07 80 0E 87  // u..&.....<.u....
    5FA0: 04 01 EB C3 C3 80 FB 36 75 26 BB 20 FF 3C 01 74  // .......6u&. .<.t
    5FB0: 09 BB 00 DF 3C 00 74 02 EB AD E8 02 00 EB A8 9C  // ....<.t.........
    5FC0: FA BA C4 03 B0 01 EE 42 EC 22 C7 0A C3 EE 9D C3  // .......B."......
    5FD0: C3 B3 03 B7 00 BA CC 03 EC A8 01 75 02 B7 01 A0  // ...........u....
    5FE0: 88 04 8A E0 B1 04 D2 EC 25 0F 0F 8B C8 8B EC 89  // ........%.......
    5FF0: 5E 0E 89 4E 16 C6 46 1A 12 C3 9C FA C7 06 14 00  // ^..N..F.........
    6000: 53 87 8C 0E 16 00 9D C3 28 18 08 00 08 09 03 00  // S.......(.......
    6010: 02 63 2D 27 28 90 2B A0 BF 1F 00 C7 06 07 00 00  // .c-'(.+.........
    6020: 00 00 9C 8E 8F 14 1F 96 B9 A3 FF 00 01 02 03 04  // ................
    6030: 05 06 07 10 11 12 13 14 15 16 17 08 00 0F 00 00  // ................
    6040: 00 00 00 00 10 0E 00 FF 28 18 08 00 08 09 03 00  // ........(.......
    6050: 02 63 2D 27 28 90 2B A0 BF 1F 00 C7 06 07 00 00  // .c-'(.+.........
    6060: 00 00 9C 8E 8F 14 1F 96 B9 A3 FF 00 01 02 03 04  // ................
    6070: 05 06 07 10 11 12 13 14 15 16 17 08 00 0F 00 00  // ................
    6080: 00 00 00 00 10 0E 00 FF 50 18 08 00 10 01 03 00  // ........P.......
    6090: 02 63 5F 4F 50 82 55 81 BF 1F 00 C7 06 07 00 00  // .c_OP.U.........
    60A0: 00 00 9C 8E 8F 28 1F 96 B9 A3 FF 00 01 02 03 04  // .....(..........
    60B0: 05 06 07 10 11 12 13 14 15 16 17 08 00 0F 00 00  // ................
    60C0: 00 00 00 00 10 0E 00 FF 50 18 08 00 10 01 03 00  // ........P.......
    60D0: 02 63 5F 4F 50 82 55 81 BF 1F 00 C7 06 07 00 00  // .c_OP.U.........
    60E0: 00 00 9C 8E 8F 28 1F 96 B9 A3 FF 00 01 02 03 04  // .....(..........
    60F0: 05 06 07 10 11 12 13 14 15 16 17 08 00 0F 00 00  // ................
    6100: 00 00 00 00 10 0E 00 FF 28 18 08 00 40 09 03 00  // ........(...@...
    6110: 02 63 2D 27 28 90 2B 80 BF 1F 00 C1 00 00 00 00  // .c-'(.+.........
    6120: 00 00 9C 8E 8F 14 00 96 B9 A2 FF 00 13 15 17 02  // ................
    6130: 04 06 07 10 11 12 13 14 15 16 17 01 00 03 00 00  // ................
    6140: 00 00 00 00 30 0F 00 FF 28 18 08 00 40 09 03 00  // ....0...(...@...
    6150: 02 63 2D 27 28 90 2B 80 BF 1F 00 C1 00 00 00 00  // .c-'(.+.........
    6160: 00 00 9C 8E 8F 14 00 96 B9 A2 FF 00 13 15 17 02  // ................
    6170: 04 06 07 10 11 12 13 14 15 16 17 01 00 03 00 00  // ................
    6180: 00 00 00 00 30 0F 00 FF 50 18 08 00 40 01 01 00  // ....0...P...@...
    6190: 06 63 5F 4F 50 82 54 80 BF 1F 00 C1 00 00 00 00  // .c_OP.T.........
    61A0: 00 00 9C 8E 8F 28 00 96 B9 C2 FF 00 17 17 17 17  // .....(..........
    61B0: 17 17 17 17 17 17 17 17 17 17 17 01 00 01 00 00  // ................
    61C0: 00 00 00 00 00 0D 00 FF 50 18 0E 00 10 00 03 00  // ........P.......
    61D0: 03 A6 5F 4F 50 82 55 81 BF 1F 00 4D 0B 0C 00 00  // .._OP.U....M....
    61E0: 00 00 83 85 5D 28 0D 63 BA A3 FF 00 08 08 08 08  // ....](.c........
    61F0: 08 08 08 10 18 18 18 18 18 18 18 0E 00 0F 08 00  // ................
    6200: 00 00 00 00 10 0A 00 FF 50 1D 10 00 A0 01 0F 00  // ........P.......
    6210: 0A E3 5F 4F 50 82 54 80 0B 3E 00 40 00 00 00 00  // .._OP.T..>.@....
    6220: 00 00 EA 8C DF 50 00 E7 04 E3 FF 00 01 02 03 04  // .....P..........
    6230: 05 06 07 08 09 0A 0B 0C 0D 0E 0F 01 00 0F 00 10  // ................
    6240: 00 00 00 00 40 05 0F FF 00 05 11 1C 08 0B 14 28  // ....@..........(
    6250: 0E 18 2D 32 20 24 38 3F 00 05 08 0B 0E 11 14 18  // ..-2 $8?........
    6260: 1C 20 24 28 2D 32 38 3F 07 0C 10 15 1A 18 16 15  // . $(-28?........
    6270: 13 1C 25 2F 38 33 2E 2A 25 27 29 2A 2C 23 19 10  // ..%/83.*%')*,#..
    6280: 23 25 27 2A 2C 2B 2A 29 29 2D 32 37 3B 39 37 34  // #%'*,+*))-27;974
    6290: 32 33 34 35 35 31 2C 27 2F 30 32 33 34 34 33 33  // 234551,'/0234433
    62A0: 32 35 38 3A 3D 3C 3A 39 38 38 39 39 3A 37 34 31  // 258:=<:98899:741
    62B0: 03 05 07 09 0B 0B 0A 09 08 0D 11 15 19 17 15 13  // ................
    62C0: 11 11 12 13 14 0F 0B 07 10 10 12 13 14 13 13 13  // ................
    62D0: 12 14 16 18 1A 19 18 17 16 17 17 17 18 15 14 11  // ................
    62E0: 15 15 16 17 17 17 17 17 16 18 19 1A 1B 1B 1A 19  // ................
    62F0: 19 19 19 19 1A 18 17 16 02 03 04 05 07 06 06 05  // ................
    6300: 05 07 0A 0C 0E 0D 0C 0B 09 0A 0A 0B 0B 09 06 04  // ................
    6310: 09 09 0A 0B 0B 0B 0B 0B 0A 0C 0D 0E 0F 0F 0E 0D  // ................
    6320: 0D 0D 0D 0D 0E 0C 0B 0A 0C 0C 0C 0D 0D 0D 0D 0D  // ................
    6330: 0C 0D 0E 0F 0F 0F 0F 0E 0E 0E 0E 0E 0E 0E 0D 0C  // ................
    6340: 00 00 00 00 00 00 00 00 28 18 08 00 20 09 0F 00  // ........(... ...
    6350: 06 63 2D 27 28 90 2B 80 BF 1F 00 C0 00 00 00 00  // .c-'(.+.........
    6360: 00 00 9C 8E 8F 14 00 96 B9 E3 FF 00 01 02 03 04  // ................
    6370: 05 06 07 10 11 12 13 14 15 16 17 01 00 0F 00 00  // ................
    6380: 00 00 00 00 00 05 0F FF 50 18 08 00 40 01 0F 00  // ........P...@...
    6390: 06 63 5F 4F 50 82 54 80 BF 1F 00 C0 00 00 00 00  // .c_OP.T.........
    63A0: 00 00 9C 8E 8F 28 00 96 B9 E3 FF 00 01 02 03 04  // .....(..........
    63B0: 05 06 07 10 11 12 13 14 15 16 17 01 00 0F 00 00  // ................
    63C0: 00 00 00 00 00 05 0F FF 00 05 11 1C 08 0B 25 28  // ..............%(
    63D0: 02 07 1B 20 0F 14 28 2C 0C 11 25 2A 14 1E 32 36  // ... ..(,..%*..26
    63E0: 0F 13 27 2C 1B 20 34 39 06 0B 1F 24 13 18 2C 30  // ..',. 49...$..,0
    63F0: 09 0D 21 26 15 1A 2E 33 13 17 2B 30 1F 24 38 3D  // ..!&...3..+0.$8=
    6400: 0E 18 2D 32 20 24 38 3F 00 05 11 1C 08 0B 14 18  // ..-2 $8?........
    6410: 00 05 11 1C 08 0B 14 18 0E 18 2D 32 20 24 38 3F  // ..........-2 $8?
    6420: 0E 18 2D 32 20 24 38 3F 00 05 11 1C 08 0B 14 18  // ..-2 $8?........
    6430: 00 05 11 1C 08 0B 14 18 0E 18 2D 32 20 24 38 3F  // ..........-2 $8?
    6440: 0E 18 2D 32 20 24 38 3F 50 18 0E 00 80 01 0F 00  // ..-2 $8?P.......
    6450: 06 A2 5F 4F 50 82 54 80 BF 1F 00 40 00 00 00 00  // .._OP.T....@....
    6460: 00 00 83 85 5D 28 0F 63 BA E3 FF 00 08 00 00 18  // ....](.c........
    6470: 18 00 00 00 08 00 00 00 18 00 00 0B 00 05 00 00  // ................
    6480: 00 00 00 00 00 05 05 FF 50 18 0E 00 80 01 0F 00  // ........P.......
    6490: 06 A3 5F 4F 50 82 54 80 BF 1F 00 40 00 00 00 00  // .._OP.T....@....
    64A0: 00 00 83 85 5D 28 0F 63 BA E3 FF 00 01 02 03 04  // ....](.c........
    64B0: 05 14 07 38 39 3A 3B 3C 3D 3E 3F 01 00 0F 00 00  // ...89:;<=>?.....
    64C0: 00 00 00 00 00 05 0F FF 28 18 0E 00 08 09 03 00  // ........(.......
    64D0: 02 A3 2D 27 28 90 2B A0 BF 1F 00 4D 0B 0C 00 00  // ..-'(.+....M....
    64E0: 00 00 83 85 5D 14 1F 63 BA A3 FF 00 01 02 03 04  // ....]..c........
    64F0: 05 14 07 38 39 3A 3B 3C 3D 3E 3F 08 00 0F 00 00  // ...89:;<=>?.....
    6500: 00 00 00 00 10 0E 00 FF 28 18 0E 00 08 09 03 00  // ........(.......
    6510: 02 A3 2D 27 28 90 2B A0 BF 1F 00 4D 0B 0C 00 00  // ..-'(.+....M....
    6520: 00 00 83 85 5D 14 1F 63 BA A3 FF 00 01 02 03 04  // ....]..c........
    6530: 05 14 07 38 39 3A 3B 3C 3D 3E 3F 08 00 0F 00 00  // ...89:;<=>?.....
    6540: 00 00 00 00 10 0E 00 FF 50 18 0E 00 10 01 03 00  // ........P.......
    6550: 02 A3 5F 4F 50 82 55 81 BF 1F 00 4D 0B 0C 00 00  // .._OP.U....M....
    6560: 00 00 83 85 5D 28 1F 63 BA A3 FF 00 01 02 03 04  // ....](.c........
    6570: 05 14 07 38 39 3A 3B 3C 3D 3E 3F 08 00 0F 00 00  // ...89:;<=>?.....
    6580: 00 00 00 00 10 0E 00 FF 50 18 0E 00 10 01 03 00  // ........P.......
    6590: 02 A3 5F 4F 50 82 55 81 BF 1F 00 4D 0B 0C 00 00  // .._OP.U....M....
    65A0: 00 00 83 85 5D 28 1F 63 BA A3 FF 00 01 02 03 04  // ....](.c........
    65B0: 05 14 07 38 39 3A 3B 3C 3D 3E 3F 08 00 0F 00 00  // ...89:;<=>?.....
    65C0: 00 00 00 00 10 0E 00 FF 28 18 10 00 08 08 03 00  // ........(.......
    65D0: 02 67 2D 27 28 90 2B A0 BF 1F 00 4F 0D 0E 00 00  // .g-'(.+....O....
    65E0: 00 00 9C 8E 8F 14 1F 96 B9 A3 FF 00 01 02 03 04  // ................
    65F0: 05 14 07 38 39 3A 3B 3C 3D 3E 3F 0C 00 0F 08 00  // ...89:;<=>?.....
    6600: 00 00 00 00 10 0E 00 FF 50 18 10 00 10 00 03 00  // ........P.......
    6610: 02 67 5F 4F 50 82 55 81 BF 1F 00 4F 0D 0E 00 00  // .g_OP.U....O....
    6620: 00 00 9C 8E 8F 28 1F 96 B9 A3 FF 00 01 02 03 04  // .....(..........
    6630: 05 14 07 38 39 3A 3B 3C 3D 3E 3F 0C 00 0F 08 00  // ...89:;<=>?.....
    6640: 00 00 00 00 10 0E 00 FF 50 18 10 00 10 00 03 00  // ........P.......
    6650: 02 66 5F 4F 50 82 55 81 BF 1F 00 4F 0D 0E 00 00  // .f_OP.U....O....
    6660: 00 00 9C 8E 8F 28 0F 96 B9 A3 FF 00 08 08 08 08  // .....(..........
    6670: 08 08 08 10 18 18 18 18 18 18 18 0E 00 0F 08 00  // ................
    6680: 00 00 00 00 10 0A 00 FF 50 1D 10 00 A0 01 0F 00  // ........P.......
    6690: 06 E3 5F 4F 50 82 54 80 0B 3E 00 40 00 00 00 00  // .._OP.T..>.@....
    66A0: 00 00 EA 8C DF 28 00 E7 04 C3 FF 00 3F 3F 3F 3F  // .....(......????
    66B0: 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 01 00 0F 00 00  // ???????????.....
    66C0: 00 00 00 00 00 05 01 FF 50 1D 10 00 A0 01 0F 00  // ........P.......
    66D0: 06 E3 5F 4F 50 82 54 80 0B 3E 00 40 00 00 00 00  // .._OP.T..>.@....
    66E0: 00 00 EA 8C DF 28 00 E7 04 E3 FF 00 01 02 03 04  // .....(..........
    66F0: 05 14 07 38 39 3A 3B 3C 3D 3E 3F 01 00 0F 00 00  // ...89:;<=>?.....
    6700: 00 00 00 00 00 05 0F FF 28 18 08 00 20 01 0F 00  // ........(... ...
    6710: 0E 63 5F 4F 50 82 54 80 BF 1F 00 41 00 00 00 00  // .c_OP.T....A....
    6720: 00 00 9C 8E 8F 28 40 96 B9 A3 FF 00 01 02 03 04  // .....(@.........
    6730: 05 06 07 08 09 0A 0B 0C 0D 0E 0F 41 00 0F 00 00  // ...........A....
    6740: 00 00 00 00 40 05 0F FF A0 5F 00 C0 00 00 00 00  // ....@...._......
    6750: 00 00 00 00 00 00 00 00 00 67 00 C0 00 00 00 00  // .........g......
    6760: 00 00 00 00 00 00 00 00 1A 00 9A 9F 00 C0 00 00  // ................
    6770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    6780: 00 00 1E E8 10 00 2E 8E 1E 49 03 E8 FA 37 E8 D1  // .........I...7..
    6790: 37 E8 80 1A 1F C3 2E 8E 1E 49 03 C7 06 87 04 60  // 7........I.....`
    67A0: F9 C6 06 8A 04 0B A0 89 04 0C 11 24 17 A2 89 04  // ...........$....
    67B0: B4 01 E8 36 1F A0 89 04 80 26 10 04 CF 80 0E 10  // ...6.....&......
    67C0: 04 20 C7 06 63 04 D4 03 0E 1F E8 19 A6 A9 01 00  // . ..c...........
    67D0: 74 11 E8 06 A7 F7 C1 02 00 74 08 E8 9B A5 80 FB  // t........t......
    67E0: 01 75 03 E8 25 A6 C3 1E 2E 8E 1E 49 03 0E 07 EB  // .u..%......I....
    67F0: 00 1F C3 F6 06 89 04 08 74 01 C3 53 BA C8 03 EC  // ........t..S....
    6800: B0 FF B2 C6 EE B2 C8 80 3E 63 04 B4 75 2F BE 6C  // ........>c..u/.l
    6810: 68 B9 40 00 33 DB 9C FA 8A C3 EE 8B FB C1 EF 03  // h.@.3...........
    6820: 83 E7 03 03 FE 2E 8A 05 42 EE 2E 8A 45 04 EE 2E  // ........B...E...
    6830: 8A 45 08 EE FE C3 4A E2 DF 9D E9 85 00 26 8A 47  // .E....J......&.G
    6840: 2B F6 06 89 04 06 74 31 B9 F8 00 BF E0 61 3C 08  // +.....t1.....a<.
    6850: 74 11 B9 40 00 BF 60 63 3C 38 74 07 3C 3F 74 03  // t..@..`c<8t.<?t.
    6860: BF A0 63 33 DB 9C FA 8A C3 EE 2E 8A 01 42 EE EE  // ..c3.........B..
    6870: EE FE C3 4A E2 F1 9D EB 49 3C 08 74 25 3C 38 74  // ...J....I<.t%<8t
    6880: 2E 3C 3F 74 2A B9 08 00 33 DB 51 E8 DE CC B9 08  // .<?t*...3.Q.....
    6890: 00 F7 C3 10 00 74 03 83 C7 18 E8 67 00 59 E2 EA  // .....t.....g.Y..
    68A0: EB 20 E8 C7 CC B9 00 01 33 DB E8 57 00 EB 13 B9  // . ......3..W....
    68B0: 40 00 33 DB 51 E8 28 00 8A C3 E8 70 30 FE C3 59  // @.3.Q.(....p0..Y
    68C0: E2 F2 5B C3 00 2A 00 2A 00 2A 00 2A 15 3F 15 3F  // ..[..*.*.*.*.?.?
    68D0: 15 3F 15 3F 00 2A 00 3F 00 2A 00 3F 00 2A 00 3F  // .?.?.*.?.*.?.*.?
    68E0: 8B FB C1 EF 02 83 E7 0F 2E 8A B5 5C 68 8B FB D1  // ...........\h...
    68F0: EF 83 E7 0F 2E 8A AD 5C 68 8B FB 83 E7 0F 2E 8A  // .......\h.......
    6900: 8D 5C 68 C3 9C 8A C3 FA EE 2E 8A 05 42 EE 47 2E  // .\h.........B.G.
    6910: 8A 05 EE 47 2E 8A 05 EE 47 FE C3 4A E2 E7 9D C3  // ...G....G..J....
    6920: 00 00 00 00 00 00 00 00 7E 81 A5 81 BD 99 81 7E  // ........~......~
    6930: 7C FE D6 BA C6 FE 7C 00 C6 EE FE FE 7C 38 10 00  // |.....|.....|8..
    6940: 10 38 7C FE 7C 38 10 00 10 38 10 EE EE 10 38 00  // .8|.|8...8....8.
    6950: 38 7C FE FE 6C 10 38 00 00 18 3C 7E 3C 18 00 00  // 8|..l.8...<~<...
    6960: FF E7 C3 81 C3 E7 FF FF 00 18 3C 66 66 3C 18 00  // ..........<ff<..
    6970: FF E7 C3 99 99 C3 E7 FF 1E 0E 1E 36 78 CC CC 78  // ...........6x..x
    6980: 7E C3 C3 7E 18 7E 18 18 1E 1A 1E 18 18 70 F0 60  // ~..~.~.......p.`
    6990: 3E 3E 36 36 F6 66 1E 0C DB 3C 66 E7 66 3C DB 00  // >>66.f...<f.f<..
    69A0: 80 C0 F0 F8 F0 C0 80 00 02 06 1E 3E 1E 06 02 00  // ...........>....
    69B0: 18 3C 7E 18 7E 3C 18 00 66 66 66 66 66 00 66 00  // .<~.~<..fffff.f.
    69C0: 7F DB 7B 3B 1B 1B 1B 00 3C 66 38 6C 6C 38 CC 78  // ..{;....<f8ll8.x
    69D0: 00 00 00 00 FE FE FE 00 18 3C 7E 18 7E 3C 18 7E  // .........<~.~<.~
    69E0: 18 3C 7E 18 18 18 18 00 18 18 18 18 7E 3C 18 00  // .<~.........~<..
    69F0: 00 18 1C FE 1C 18 00 00 00 30 70 FE 70 30 00 00  // .........0p.p0..
    6A00: 00 00 C0 C0 C0 FE 00 00 00 24 66 FF 66 24 00 00  // .........$f.f$..
    6A10: 00 10 38 7C 7C FE 00 00 00 FE 7C 7C 38 10 00 00  // ..8||.....||8...
    6A20: 00 00 00 00 00 00 00 00 18 3C 3C 18 18 00 18 00  // .........<<.....
    6A30: 6C 6C 6C 00 00 00 00 00 6C 6C FE 6C FE 6C 6C 00  // lll.....ll.l.ll.
    6A40: 18 7E C0 7C 06 FC 18 00 00 C6 0C 18 30 60 C6 00  // .~.|........0`..
    6A50: 38 6C 38 76 CC CC 76 00 18 18 30 00 00 00 00 00  // 8l8v..v...0.....
    6A60: 18 30 60 60 60 30 18 00 60 30 18 18 18 30 60 00  // .0```0..`0...0`.
    6A70: 00 EE 7C FE 7C EE 00 00 00 18 18 7E 18 18 00 00  // ..|.|......~....
    6A80: 00 00 00 00 18 18 30 00 00 00 00 FE 00 00 00 00  // ......0.........
    6A90: 00 00 00 00 00 38 38 00 06 0C 18 30 60 C0 80 00  // .....88....0`...
    6AA0: 7C C6 CE DE F6 E6 7C 00 18 78 18 18 18 18 7E 00  // |.....|..x....~.
    6AB0: 7C C6 0C 18 30 66 FE 00 7C C6 06 3C 06 C6 7C 00  // |...0f..|..<..|.
    6AC0: 0C 1C 3C 6C FE 0C 0C 00 FE C0 FC 06 06 C6 7C 00  // ..<l..........|.
    6AD0: 7C C6 C0 FC C6 C6 7C 00 FE C6 06 0C 18 18 18 00  // |.....|.........
    6AE0: 7C C6 C6 7C C6 C6 7C 00 7C C6 C6 7E 06 C6 7C 00  // |..|..|.|..~..|.
    6AF0: 00 1C 1C 00 00 1C 1C 00 00 18 18 00 00 18 18 30  // ...............0
    6B00: 0C 18 30 60 30 18 0C 00 00 00 FE 00 00 FE 00 00  // ..0`0...........
    6B10: 60 30 18 0C 18 30 60 00 7C C6 06 0C 18 00 18 00  // `0...0`.|.......
    6B20: 7C C6 C6 DE DC C0 7E 00 38 6C C6 C6 FE C6 C6 00  // |.....~.8l......
    6B30: FC 66 66 7C 66 66 FC 00 3C 66 C0 C0 C0 66 3C 00  // .ff|ff..<f...f<.
    6B40: F8 6C 66 66 66 6C F8 00 FE C2 C0 F8 C0 C2 FE 00  // .lfffl..........
    6B50: FE 62 60 7C 60 60 F0 00 7C C6 C0 C0 DE C6 7C 00  // .b`|``..|.....|.
    6B60: C6 C6 C6 FE C6 C6 C6 00 3C 18 18 18 18 18 3C 00  // ........<.....<.
    6B70: 3C 18 18 18 D8 D8 70 00 C6 CC D8 F0 D8 CC C6 00  // <.....p.........
    6B80: F0 60 60 60 60 62 FE 00 C6 EE FE D6 D6 C6 C6 00  // .````b..........
    6B90: C6 E6 E6 F6 DE CE C6 00 7C C6 C6 C6 C6 C6 7C 00  // ........|.....|.
    6BA0: FC 66 66 7C 60 60 F0 00 7C C6 C6 C6 C6 D6 7C 06  // .ff|``..|.....|.
    6BB0: FC C6 C6 FC D8 CC C6 00 7C C6 C0 7C 06 C6 7C 00  // ........|..|..|.
    6BC0: 7E 5A 18 18 18 18 3C 00 C6 C6 C6 C6 C6 C6 7C 00  // ~Z....<.......|.
    6BD0: C6 C6 C6 C6 6C 38 10 00 C6 C6 D6 D6 FE EE C6 00  // ....l8..........
    6BE0: C6 6C 38 38 38 6C C6 00 66 66 66 3C 18 18 3C 00  // .l888l..fff<..<.
    6BF0: FE 86 0C 18 30 62 FE 00 7C 60 60 60 60 60 7C 00  // ....0b..|`````|.
    6C00: C0 60 30 18 0C 06 02 00 7C 0C 0C 0C 0C 0C 7C 00  // .`0.....|.....|.
    6C10: 10 38 6C C6 00 00 00 00 00 00 00 00 00 00 00 FF  // .8l.............
    6C20: 30 30 18 00 00 00 00 00 00 00 78 0C 7C CC 7E 00  // 00........x.|.~.
    6C30: E0 60 7C 66 66 66 FC 00 00 00 7C C6 C0 C6 7C 00  // .`|fff....|...|.
    6C40: 1C 0C 7C CC CC CC 7E 00 00 00 7C C6 FE C0 7C 00  // ..|...~...|...|.
    6C50: 1C 36 30 FC 30 30 78 00 00 00 76 CE C6 7E 06 7C  // .60.00x...v..~.|
    6C60: E0 60 7C 66 66 66 E6 00 18 00 38 18 18 18 3C 00  // .`|fff....8...<.
    6C70: 0C 00 1C 0C 0C 0C CC 78 E0 60 66 6C 78 6C E6 00  // .......x.`flxl..
    6C80: 18 18 18 18 18 18 1C 00 00 00 6C FE D6 D6 C6 00  // ..........l.....
    6C90: 00 00 DC 66 66 66 66 00 00 00 7C C6 C6 C6 7C 00  // ...ffff...|...|.
    6CA0: 00 00 DC 66 66 7C 60 F0 00 00 76 CC CC 7C 0C 1E  // ...ff|`...v..|..
    6CB0: 00 00 DC 66 60 60 F0 00 00 00 7C C0 7C 06 7C 00  // ...f``....|.|.|.
    6CC0: 30 30 FC 30 30 36 1C 00 00 00 CC CC CC CC 76 00  // 00.006........v.
    6CD0: 00 00 C6 C6 6C 38 10 00 00 00 C6 C6 D6 FE 6C 00  // ....l8........l.
    6CE0: 00 00 C6 6C 38 6C C6 00 00 00 C6 C6 CE 76 06 7C  // ...l8l.......v.|
    6CF0: 00 00 FC 98 30 64 FC 00 0E 18 18 70 18 18 0E 00  // ....0d.....p....
    6D00: 18 18 18 00 18 18 18 00 70 18 18 0E 18 18 70 00  // ........p.....p.
    6D10: 76 DC 00 00 00 00 00 00 00 10 38 38 6C 6C FE 00  // v.........88ll..
    6D20: 3C 66 C0 66 3C 18 CC 78 00 C6 00 C6 C6 CE 76 00  // <f.f<..x......v.
    6D30: 0E 00 7C C6 FE C0 7C 00 7C C6 78 0C 7C CC 7E 00  // ..|...|.|.x.|.~.
    6D40: C6 00 78 0C 7C CC 7E 00 E0 00 78 0C 7C CC 7E 00  // ..x.|.~...x.|.~.
    6D50: 38 38 78 0C 7C CC 7E 00 00 00 7C C0 7C 18 6C 38  // 88x.|.~...|.|.l8
    6D60: 7C C6 7C C6 FE C0 7C 00 C6 00 7C C6 FE C0 7C 00  // |.|...|...|...|.
    6D70: E0 00 7C C6 FE C0 7C 00 66 00 38 18 18 18 3C 00  // ..|...|.f.8...<.
    6D80: 7C C6 38 18 18 18 3C 00 00 00 38 18 18 18 3C 00  // |.8...<...8...<.
    6D90: C6 38 6C C6 FE C6 C6 00 38 38 00 7C C6 FE C6 00  // .8l.....88.|....
    6DA0: 0E 00 FE C0 F8 C0 FE 00 00 00 6C 9A 7E D8 6E 00  // ..........l.~.n.
    6DB0: 7E D8 D8 FE D8 D8 DE 00 7C C6 00 7C C6 C6 7C 00  // ~.......|..|..|.
    6DC0: 00 C6 00 7C C6 C6 7C 00 00 E0 00 7C C6 C6 7C 00  // ...|..|....|..|.
    6DD0: 7C C6 00 C6 C6 CE 76 00 00 E0 00 C6 C6 CE 76 00  // |.....v.......v.
    6DE0: 18 00 3C 18 18 18 3C 00 C6 38 6C C6 C6 6C 38 00  // ..<...<..8l..l8.
    6DF0: C6 00 C6 C6 C6 C6 7C 00 00 18 7E D8 D8 7E 18 00  // ......|...~..~..
    6E00: 38 6C 60 F0 66 F6 6C 00 C3 66 3C 7E 18 3C 18 00  // 8l`.f.l..f<~.<..
    6E10: 3E 63 38 0E 63 3E 00 1C 00 3E 61 3C 86 7C 00 1C  // >c8.c>...>a<.|..
    6E20: 0E 00 78 0C 7C CC 7E 00 1C 00 38 18 18 18 3C 00  // ..x.|.~...8...<.
    6E30: 00 0E 00 7C C6 C6 7C 00 00 0E 00 CC CC DC 76 00  // ...|..|.......v.
    6E40: 00 FC 00 BC 66 66 E6 00 FE 00 C6 E6 F6 CE C6 00  // ....ff..........
    6E50: 3E 00 3E 60 67 63 3D 00 3E 00 76 CE C6 7E 06 7C  // >.>`gc=.>.v..~.|
    6E60: 18 00 18 30 60 66 3C 00 00 00 00 7C 60 60 00 00  // ...0`f<....|``..
    6E70: 00 00 00 7C 0C 0C 00 00 C0 CC D8 30 7C 36 0C 3E  // ...|.......0|6.>
    6E80: C0 CC D8 30 6C 3C 7E 0C 18 00 18 18 3C 3C 18 00  // ...0l<~.....<<..
    6E90: 00 36 6C D8 6C 36 00 00 00 D8 6C 36 6C D8 00 00  // .6l.l6....l6l...
    6EA0: 22 88 22 88 22 88 22 88 55 AA 55 AA 55 AA 55 AA  // ".".".".U.U.U.U.
    6EB0: DD 77 DD 77 DD 77 DD 77 18 18 18 18 18 18 18 18  // .w.w.w.w........
    6EC0: 18 18 18 18 F8 18 18 18 18 18 F8 18 F8 18 18 18  // ................
    6ED0: 36 36 36 36 F6 36 36 36 00 00 00 00 FE 36 36 36  // 6666.666.....666
    6EE0: 00 00 F8 18 F8 18 18 18 36 36 F6 06 F6 36 36 36  // ........66...666
    6EF0: 36 36 36 36 36 36 36 36 00 00 FE 06 F6 36 36 36  // 66666666.....666
    6F00: 36 36 F6 06 FE 00 00 00 36 36 36 36 FE 00 00 00  // 66......6666....
    6F10: 18 18 F8 18 F8 00 00 00 00 00 00 00 F8 18 18 18  // ................
    6F20: 18 18 18 18 1F 00 00 00 18 18 18 18 FF 00 00 00  // ................
    6F30: 00 00 00 00 FF 18 18 18 18 18 18 18 1F 18 18 18  // ................
    6F40: 00 00 00 00 FF 00 00 00 18 18 18 18 FF 18 18 18  // ................
    6F50: 18 18 1F 18 1F 18 18 18 36 36 36 36 37 36 36 36  // ........66667666
    6F60: 36 36 37 30 3F 00 00 00 00 00 3F 30 37 36 36 36  // 6670?.....?07666
    6F70: 36 36 F7 00 FF 00 00 00 00 00 FF 00 F7 36 36 36  // 66...........666
    6F80: 36 36 37 30 37 36 36 36 00 00 FF 00 FF 00 00 00  // 66707666........
    6F90: 36 36 F7 00 F7 36 36 36 18 18 FF 00 FF 00 00 00  // 66...666........
    6FA0: 36 36 36 36 FF 00 00 00 00 00 FF 00 FF 18 18 18  // 6666............
    6FB0: 00 00 00 00 FF 36 36 36 36 36 36 36 3F 00 00 00  // .....6666666?...
    6FC0: 18 18 1F 18 1F 00 00 00 00 00 1F 18 1F 18 18 18  // ................
    6FD0: 00 00 00 00 3F 36 36 36 36 36 36 36 FF 36 36 36  // ....?6666666.666
    6FE0: 18 18 FF 18 FF 18 18 18 18 18 18 18 F8 00 00 00  // ................
    6FF0: 00 00 00 00 1F 18 18 18 FF FF FF FF FF FF FF FF  // ................
    7000: 00 00 00 00 FF FF FF FF F0 F0 F0 F0 F0 F0 F0 F0  // ................
    7010: 0F 0F 0F 0F 0F 0F 0F 0F FF FF FF FF 00 00 00 00  // ................
    7020: 00 00 66 DC D8 DC 66 00 00 78 CC F8 CC C6 CC 00  // ..f...f..x......
    7030: 00 FE 62 60 60 60 E0 00 00 FE 6C 6C 6C 6C 6C 00  // ..b```....lllll.
    7040: FE C6 60 30 60 C6 FE 00 00 7E D8 CC CC D8 70 00  // ..`0`....~....p.
    7050: 00 66 66 66 66 7C C0 00 00 76 DC 18 18 18 38 00  // .ffff|...v....8.
    7060: FE 38 6C C6 6C 38 FE 00 38 6C C6 FE C6 6C 38 00  // .8l.l8..8l...l8.
    7070: 38 6C C6 C6 6C 6C EE 00 3E 60 38 66 C6 CC 78 00  // 8l..ll..>`8f..x.
    7080: 00 00 7E DB DB 7E 00 00 06 7C DE F6 E6 7C C0 00  // ..~..~...|...|..
    7090: 38 60 C0 F8 C0 60 38 00 7C C6 C6 C6 C6 C6 C6 00  // 8`...`8.|.......
    70A0: 00 FE 00 FE 00 FE 00 00 18 18 7E 18 18 00 7E 00  // ..........~...~.
    70B0: 30 18 0C 18 30 00 7E 00 0C 18 30 18 0C 00 7E 00  // 0...0.~...0...~.
    70C0: 0C 1E 18 18 18 18 18 18 18 18 18 18 18 78 30 00  // .............x0.
    70D0: 00 00 18 00 7E 00 18 00 00 76 DC 00 76 DC 00 00  // ....~....v..v...
    70E0: 7C C6 C6 7C 00 00 00 00 00 00 00 18 18 00 00 00  // |..|............
    70F0: 00 00 00 00 18 00 00 00 1F 18 18 18 F8 38 18 00  // .............8..
    7100: D8 6C 6C 6C 00 00 00 00 70 D8 30 F8 00 00 00 00  // .lll....p.0.....
    7110: 00 00 7C 7C 7C 7C 00 00 00 00 00 00 00 00 00 00  // ..||||..........
    7120: 1D 00 00 00 00 24 66 FF 66 24 00 00 00 00 00 00  // .....$f.f$......
    7130: 00 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    7140: 00 00 00 00 00 7E 81 A5 81 81 BD 99 81 81 7E 00  // .....~........~.
    7150: 00 00 00 00 00 7C FE FE D6 FE FE BA C6 FE 7C 00  // .....|........|.
    7160: 00 00 00 00 00 00 6C EE FE FE FE FE 7C 38 10 00  // ......l.....|8..
    7170: 00 00 00 00 00 00 10 38 7C FE 7C 38 10 00 00 00  // .......8|.|8....
    7180: 00 00 00 00 00 00 10 38 38 10 6C EE 6C 10 38 00  // .......88.l.l.8.
    7190: 00 00 00 00 00 10 38 7C 7C FE FE FE 6C 10 38 00  // ......8||...l.8.
    71A0: 00 00 00 00 00 00 00 00 18 3C 3C 3C 18 00 00 00  // .........<<<....
    71B0: 00 00 00 FF FF FF FF FF E7 C3 C3 C3 E7 FF FF FF  // ................
    71C0: FF FF FF 00 00 00 00 18 3C 66 66 66 3C 18 00 00  // ........<fff<...
    71D0: 00 00 00 FF FF FF FF E7 C3 99 99 99 C3 E7 FF FF  // ................
    71E0: FF FF FF 00 00 1E 0E 1E 36 78 CC CC CC CC 78 00  // ........6x....x.
    71F0: 00 00 00 00 00 3C 66 66 66 3C 18 7E 18 18 18 00  // .....<fff<.~....
    7200: 00 00 00 00 00 1E 1A 1E 18 18 18 18 78 F8 70 00  // ............x.p.
    7210: 00 00 00 00 00 3E 36 3E 36 36 76 F6 66 0E 1E 0C  // .....>6>66v.f...
    7220: 00 00 00 00 00 18 DB 7E 3C 66 66 3C 7E DB 18 00  // .......~<ff<~...
    7230: 00 00 00 00 00 00 80 E0 F0 FC FE FC F0 E0 80 00  // ................
    7240: 00 00 00 00 00 00 02 0E 3E 7E FE 7E 3E 0E 02 00  // ........>~.~>...
    7250: 00 00 00 00 00 18 3C 7E 18 18 18 18 7E 3C 18 00  // ......<~....~<..
    7260: 00 00 00 00 00 66 66 66 66 66 66 66 00 66 66 00  // .....fffffff.ff.
    7270: 00 00 00 00 00 7F DB DB DB DB 7B 1B 1B 1B 1B 00  // ..........{.....
    7280: 00 00 00 00 00 7C C6 C6 60 7C F6 DE 7C 0C C6 C6  // .....|..`|..|...
    7290: 7C 00 00 00 00 00 00 00 00 00 00 FE FE FE FE 00  // |...............
    72A0: 00 00 00 00 00 18 3C 7E 18 18 18 7E 3C 18 7E 00  // ......<~...~<.~.
    72B0: 00 00 00 00 00 18 3C 7E 18 18 18 18 18 18 18 00  // ......<~........
    72C0: 00 00 00 00 00 18 18 18 18 18 18 18 7E 3C 18 00  // ............~<..
    72D0: 00 00 00 00 00 00 00 00 0C 0E FF 0E 0C 00 00 00  // ................
    72E0: 00 00 00 00 00 00 00 00 30 70 FE 70 30 00 00 00  // ........0p.p0...
    72F0: 00 00 00 00 00 00 00 00 00 C0 C0 C0 FE 00 00 00  // ................
    7300: 00 00 00 00 00 00 00 00 24 66 FF 66 24 00 00 00  // ........$f.f$...
    7310: 00 00 00 00 00 00 10 38 38 38 7C 7C FE FE 00 00  // .......888||....
    7320: 00 00 00 00 00 00 FE FE 7C 7C 7C 38 38 10 00 00  // ........|||88...
    7330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    7340: 00 00 00 00 00 18 3C 3C 3C 3C 18 18 00 18 18 00  // ......<<<<......
    7350: 00 00 00 00 36 36 36 36 14 00 00 00 00 00 00 00  // ....6666........
    7360: 00 00 00 00 00 6C 6C 6C FE 6C 6C FE 6C 6C 6C 00  // .....lll.ll.lll.
    7370: 00 00 00 00 00 18 18 7C C6 C0 78 3C 06 C6 7C 18  // .......|..x<..|.
    7380: 18 00 00 00 00 00 00 00 62 66 0C 18 30 66 C6 00  // ........bf..0f..
    7390: 00 00 00 00 00 38 6C 38 30 76 7E CC CC CC 76 00  // .....8l80v~...v.
    73A0: 00 00 00 00 0C 0C 0C 18 00 00 00 00 00 00 00 00  // ................
    73B0: 00 00 00 00 00 0C 18 30 30 30 30 30 30 18 0C 00  // .......000000...
    73C0: 00 00 00 00 00 30 18 0C 0C 0C 0C 0C 0C 18 30 00  // .....0........0.
    73D0: 00 00 00 00 00 00 00 00 6C 38 FE 38 6C 00 00 00  // ........l8.8l...
    73E0: 00 00 00 00 00 00 00 00 18 18 7E 18 18 00 00 00  // ..........~.....
    73F0: 00 00 00 00 00 00 00 00 00 00 00 00 0C 0C 0C 18  // ................
    7400: 00 00 00 00 00 00 00 00 00 00 FE 00 00 00 00 00  // ................
    7410: 00 00 00 00 00 00 00 00 00 00 00 00 00 18 18 00  // ................
    7420: 00 00 00 00 00 00 00 02 06 0C 18 30 60 C0 80 00  // ...........0`...
    7430: 00 00 00 00 00 7C C6 C6 CE DE F6 E6 C6 C6 7C 00  // .....|........|.
    7440: 00 00 00 00 00 18 78 18 18 18 18 18 18 18 7E 00  // ......x.......~.
    7450: 00 00 00 00 00 7C C6 C6 06 0C 18 30 60 C6 FE 00  // .....|.....0`...
    7460: 00 00 00 00 00 7C C6 06 06 3C 06 06 06 C6 7C 00  // .....|...<....|.
    7470: 00 00 00 00 00 0C 1C 3C 6C CC CC FE 0C 0C 1E 00  // .......<l.......
    7480: 00 00 00 00 00 FE C0 C0 C0 FC 06 06 06 C6 7C 00  // ..............|.
    7490: 00 00 00 00 00 7C C6 C0 C0 FC C6 C6 C6 C6 7C 00  // .....|........|.
    74A0: 00 00 00 00 00 FE C6 06 0C 18 30 30 30 30 30 00  // ..........00000.
    74B0: 00 00 00 00 00 7C C6 C6 C6 7C C6 C6 C6 C6 7C 00  // .....|...|....|.
    74C0: 00 00 00 00 00 7C C6 C6 C6 C6 7E 06 06 C6 7C 00  // .....|....~...|.
    74D0: 00 00 00 00 00 00 00 00 0C 0C 00 00 0C 0C 00 00  // ................
    74E0: 00 00 00 00 00 00 00 00 0C 0C 00 00 0C 0C 0C 18  // ................
    74F0: 00 00 00 00 00 00 0C 18 30 60 C0 60 30 18 0C 00  // ........0`.`0...
    7500: 00 00 00 00 00 00 00 00 00 FE 00 FE 00 00 00 00  // ................
    7510: 00 00 00 00 00 00 60 30 18 0C 06 0C 18 30 60 00  // ......`0.....0`.
    7520: 00 00 00 00 00 7C C6 C6 0C 18 18 18 00 18 18 00  // .....|..........
    7530: 00 00 00 00 00 7C C6 C6 C6 DE DE DE DC C0 7E 00  // .....|........~.
    7540: 00 00 00 00 00 38 6C C6 C6 C6 FE C6 C6 C6 C6 00  // .....8l.........
    7550: 00 00 00 00 00 FC 66 66 66 7C 66 66 66 66 FC 00  // ......fff|ffff..
    7560: 00 00 00 00 00 3C 66 C2 C0 C0 C0 C0 C2 66 3C 00  // .....<f......f<.
    7570: 00 00 00 00 00 F8 6C 66 66 66 66 66 66 6C F8 00  // ......lffffffl..
    7580: 00 00 00 00 00 FE 66 60 64 7C 64 60 60 66 FE 00  // ......f`d|d``f..
    7590: 00 00 00 00 00 FE 66 60 64 7C 64 60 60 60 F0 00  // ......f`d|d```..
    75A0: 00 00 00 00 00 7C C6 C6 C0 C0 C0 CE C6 C6 7C 00  // .....|........|.
    75B0: 00 00 00 00 00 C6 C6 C6 C6 FE C6 C6 C6 C6 C6 00  // ................
    75C0: 00 00 00 00 00 3C 18 18 18 18 18 18 18 18 3C 00  // .....<........<.
    75D0: 00 00 00 00 00 3C 18 18 18 18 18 18 D8 D8 70 00  // .....<........p.
    75E0: 00 00 00 00 00 C6 C6 CC D8 F0 F0 D8 CC C6 C6 00  // ................
    75F0: 00 00 00 00 00 F0 60 60 60 60 60 60 62 66 FE 00  // ......``````bf..
    7600: 00 00 00 00 00 C6 C6 EE EE FE D6 D6 D6 C6 C6 00  // ................
    7610: 00 00 00 00 00 C6 C6 E6 E6 F6 DE CE CE C6 C6 00  // ................
    7620: 00 00 00 00 00 7C C6 C6 C6 C6 C6 C6 C6 C6 7C 00  // .....|........|.
    7630: 00 00 00 00 00 FC 66 66 66 66 7C 60 60 60 F0 00  // ......ffff|```..
    7640: 00 00 00 00 00 7C C6 C6 C6 C6 C6 C6 D6 D6 7C 06  // .....|........|.
    7650: 00 00 00 00 00 FC 66 66 66 7C 78 6C 66 66 E6 00  // ......fff|xlff..
    7660: 00 00 00 00 00 7C C6 C0 C0 70 1C 06 06 C6 7C 00  // .....|...p....|.
    7670: 00 00 00 00 00 7E 5A 18 18 18 18 18 18 18 3C 00  // .....~Z.......<.
    7680: 00 00 00 00 00 C6 C6 C6 C6 C6 C6 C6 C6 C6 7C 00  // ..............|.
    7690: 00 00 00 00 00 C6 C6 C6 C6 C6 C6 C6 6C 38 10 00  // ............l8..
    76A0: 00 00 00 00 00 C6 C6 C6 D6 D6 D6 FE EE C6 C6 00  // ................
    76B0: 00 00 00 00 00 C6 C6 C6 6C 38 38 6C C6 C6 C6 00  // ........l88l....
    76C0: 00 00 00 00 00 66 66 66 66 66 3C 18 18 18 3C 00  // .....fffff<...<.
    76D0: 00 00 00 00 00 FE C6 86 0C 18 30 60 C2 C6 FE 00  // ..........0`....
    76E0: 00 00 00 00 00 7C 60 60 60 60 60 60 60 60 7C 00  // .....|````````|.
    76F0: 00 00 00 00 00 00 00 80 C0 60 30 18 0C 06 02 00  // .........`0.....
    7700: 00 00 00 00 00 7C 0C 0C 0C 0C 0C 0C 0C 0C 7C 00  // .....|........|.
    7710: 00 00 00 00 10 38 6C C6 00 00 00 00 00 00 00 00  // .....8l.........
    7720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    7730: FF 00 00 00 18 18 18 0C 00 00 00 00 00 00 00 00  // ................
    7740: 00 00 00 00 00 00 00 00 78 0C 7C CC CC DC 76 00  // ........x.|...v.
    7750: 00 00 00 00 00 E0 60 60 7C 66 66 66 66 66 FC 00  // ......``|fffff..
    7760: 00 00 00 00 00 00 00 00 7C C6 C0 C0 C0 C6 7C 00  // ........|.....|.
    7770: 00 00 00 00 00 1C 0C 0C 7C CC CC CC CC CC 7E 00  // ........|.....~.
    7780: 00 00 00 00 00 00 00 00 7C C6 C6 FE C0 C6 7C 00  // ........|.....|.
    7790: 00 00 00 00 00 1C 36 30 30 FC 30 30 30 30 78 00  // ......600.0000x.
    77A0: 00 00 00 00 00 00 00 00 76 CE C6 C6 CE 76 06 C6  // ........v....v..
    77B0: 7C 00 00 00 00 E0 60 60 7C 66 66 66 66 66 E6 00  // |.....``|fffff..
    77C0: 00 00 00 00 00 18 18 00 38 18 18 18 18 18 3C 00  // ........8.....<.
    77D0: 00 00 00 00 00 0C 0C 00 1C 0C 0C 0C 0C 0C CC CC  // ................
    77E0: 78 00 00 00 00 E0 60 60 66 66 6C 78 6C 66 E6 00  // x.....``fflxlf..
    77F0: 00 00 00 00 00 18 18 18 18 18 18 18 18 18 1C 00  // ................
    7800: 00 00 00 00 00 00 00 00 6C FE D6 D6 C6 C6 C6 00  // ........l.......
    7810: 00 00 00 00 00 00 00 00 DC 66 66 66 66 66 66 00  // .........ffffff.
    7820: 00 00 00 00 00 00 00 00 7C C6 C6 C6 C6 C6 7C 00  // ........|.....|.
    7830: 00 00 00 00 00 00 00 00 DC 66 66 66 66 7C 60 60  // .........ffff|``
    7840: F0 00 00 00 00 00 00 00 76 CC CC CC CC 7C 0C 0C  // ........v....|..
    7850: 1E 00 00 00 00 00 00 00 DC 66 60 60 60 60 F0 00  // .........f````..
    7860: 00 00 00 00 00 00 00 00 7C C6 C0 7C 06 C6 7C 00  // ........|..|..|.
    7870: 00 00 00 00 00 30 30 30 FC 30 30 30 30 36 1C 00  // .....000.00006..
    7880: 00 00 00 00 00 00 00 00 CC CC CC CC CC CC 76 00  // ..............v.
    7890: 00 00 00 00 00 00 00 00 C6 C6 C6 C6 6C 38 10 00  // ............l8..
    78A0: 00 00 00 00 00 00 00 00 C6 C6 D6 D6 D6 FE 6C 00  // ..............l.
    78B0: 00 00 00 00 00 00 00 00 C6 C6 6C 38 6C C6 C6 00  // ..........l8l...
    78C0: 00 00 00 00 00 00 00 00 C6 C6 C6 C6 CE 76 06 C6  // .............v..
    78D0: 7C 00 00 00 00 00 00 00 FE 86 0C 18 30 62 FE 00  // |...........0b..
    78E0: 00 00 00 00 00 0E 18 18 18 70 18 18 18 18 0E 00  // .........p......
    78F0: 00 00 00 00 00 18 18 18 18 00 18 18 18 18 18 00  // ................
    7900: 00 00 00 00 00 70 18 18 18 0E 18 18 18 18 70 00  // .....p........p.
    7910: 00 00 00 00 00 76 DC 00 00 00 00 00 00 00 00 00  // .....v..........
    7920: 00 00 00 00 00 00 00 00 10 38 38 6C 6C FE 00 00  // .........88ll...
    7930: 00 00 00 00 00 3C 66 C0 C0 C0 C6 66 3C 18 0C CC  // .....<f....f<...
    7940: 38 00 00 00 00 C6 00 00 C6 C6 C6 C6 C6 CE 76 00  // 8.............v.
    7950: 00 00 00 00 0C 18 30 00 7C C6 C6 FE C0 C6 7C 00  // ......0.|.....|.
    7960: 00 00 00 00 30 78 CC 00 78 0C 7C CC CC DC 76 00  // ....0x..x.|...v.
    7970: 00 00 00 00 00 CC 00 00 78 0C 7C CC CC DC 76 00  // ........x.|...v.
    7980: 00 00 00 00 60 30 18 00 78 0C 7C CC CC DC 76 00  // ....`0..x.|...v.
    7990: 00 00 00 00 38 6C 38 00 78 0C 7C CC CC DC 76 00  // ....8l8.x.|...v.
    79A0: 00 00 00 00 00 00 00 7C C6 C0 C0 C6 7C 18 0C 6C  // .......|....|..l
    79B0: 38 00 00 00 30 78 CC 00 7C C6 C6 FE C0 C6 7C 00  // 8...0x..|.....|.
    79C0: 00 00 00 00 00 CC 00 00 7C C6 C6 FE C0 C6 7C 00  // ........|.....|.
    79D0: 00 00 00 00 30 18 0C 00 7C C6 C6 FE C0 C6 7C 00  // ....0...|.....|.
    79E0: 00 00 00 00 00 66 00 00 38 18 18 18 18 18 3C 00  // .....f..8.....<.
    79F0: 00 00 00 00 18 3C 66 00 38 18 18 18 18 18 3C 00  // .....<f.8.....<.
    7A00: 00 00 00 00 00 00 00 00 38 18 18 18 18 18 3C 00  // ........8.....<.
    7A10: 00 00 00 00 C6 00 38 6C C6 C6 C6 FE C6 C6 C6 00  // ......8l........
    7A20: 00 00 00 38 6C 38 00 38 6C C6 C6 FE C6 C6 C6 00  // ...8l8.8l.......
    7A30: 00 00 00 0C 18 30 00 FE 60 60 7C 60 60 60 FE 00  // .....0..``|```..
    7A40: 00 00 00 00 00 00 00 66 DB 1B 7F D8 D8 DF 76 00  // .......f......v.
    7A50: 00 00 00 00 00 7E D8 D8 D8 D8 FE D8 D8 D8 DE 00  // .....~..........
    7A60: 00 00 00 00 30 78 CC 00 7C C6 C6 C6 C6 C6 7C 00  // ....0x..|.....|.
    7A70: 00 00 00 00 00 C6 00 00 7C C6 C6 C6 C6 C6 7C 00  // ........|.....|.
    7A80: 00 00 00 00 30 18 0C 00 7C C6 C6 C6 C6 C6 7C 00  // ....0...|.....|.
    7A90: 00 00 00 00 30 78 CC 00 C6 C6 C6 C6 C6 CE 76 00  // ....0x........v.
    7AA0: 00 00 00 00 60 30 18 00 C6 C6 C6 C6 C6 CE 76 00  // ....`0........v.
    7AB0: 00 00 00 00 18 00 3C 18 18 18 18 18 18 18 3C 00  // ......<.......<.
    7AC0: 00 00 00 00 C6 00 7C C6 C6 C6 C6 C6 C6 C6 7C 00  // ......|.......|.
    7AD0: 00 00 00 00 C6 00 C6 C6 C6 C6 C6 C6 C6 C6 7C 00  // ..............|.
    7AE0: 00 00 00 00 00 18 18 7C C6 C0 C0 C6 7C 18 18 00  // .......|....|...
    7AF0: 00 00 00 00 38 6C 60 60 F0 60 60 60 66 F6 6C 00  // ....8l``.```f.l.
    7B00: 00 00 00 00 66 66 66 66 3C 18 7E 18 3C 18 18 00  // ....ffff<.~.<...
    7B10: 00 00 00 00 00 3E 63 63 30 1C 06 63 63 3E 00 1C  // .....>cc0..cc>..
    7B20: 00 00 00 00 00 00 00 00 3E 63 38 0E 63 3E 00 1C  // ........>c8.c>..
    7B30: 00 00 00 00 0C 18 30 00 78 0C 7C CC CC DC 76 00  // ......0.x.|...v.
    7B40: 00 00 00 00 0C 18 30 00 38 18 18 18 18 18 3C 00  // ......0.8.....<.
    7B50: 00 00 00 00 0C 18 30 00 7C C6 C6 C6 C6 C6 7C 00  // ......0.|.....|.
    7B60: 00 00 00 00 18 30 60 00 CC CC CC CC CC DC 76 00  // .....0`.......v.
    7B70: 00 00 00 00 00 76 DC 00 BC 66 66 66 66 66 E6 00  // .....v...fffff..
    7B80: 00 00 00 00 76 DC 00 C6 C6 E6 F6 DE CE C6 C6 00  // ....v...........
    7B90: 00 00 00 00 21 1E 00 1E 33 60 60 67 63 33 1D 00  // ....!...3``gc3..
    7BA0: 00 00 00 00 42 3C 00 3B 66 66 66 3E 06 66 3C 00  // ....B<.;fff>.f<.
    7BB0: 00 00 00 00 00 30 30 00 30 30 30 60 C6 C6 7C 00  // .....00.000`..|.
    7BC0: 00 00 00 00 00 00 00 00 00 00 7E 60 60 60 00 00  // ..........~```..
    7BD0: 00 00 00 00 00 00 00 00 00 00 7E 06 06 06 00 00  // ..........~.....
    7BE0: 00 00 00 00 60 60 62 66 6C 18 30 60 DC 36 0C 18  // ....``bfl.0`.6..
    7BF0: 3E 00 00 00 60 60 62 66 6C 18 36 6E DE 36 7E 06  // >...``bfl.6n.6~.
    7C00: 06 00 00 00 00 18 18 00 18 18 3C 3C 3C 3C 18 00  // ..........<<<<..
    7C10: 00 00 00 00 00 00 00 00 36 6C D8 6C 36 00 00 00  // ........6l.l6...
    7C20: 00 00 00 00 00 00 00 00 D8 6C 36 6C D8 00 00 00  // .........l6l....
    7C30: 00 00 00 11 44 11 44 11 44 11 44 11 44 11 44 11  // ....D.D.D.D.D.D.
    7C40: 44 11 44 AA 55 AA 55 AA 55 AA 55 AA 55 AA 55 AA  // D.D.U.U.U.U.U.U.
    7C50: 55 AA 55 DD 77 DD 77 DD 77 DD 77 DD 77 DD 77 DD  // U.U.w.w.w.w.w.w.
    7C60: 77 DD 77 18 18 18 18 18 18 18 18 18 18 18 18 18  // w.w.............
    7C70: 18 18 18 18 18 18 18 18 18 18 F8 18 18 18 18 18  // ................
    7C80: 18 18 18 18 18 18 18 18 F8 18 F8 18 18 18 18 18  // ................
    7C90: 18 18 18 36 36 36 36 36 36 36 F6 36 36 36 36 36  // ...6666666.66666
    7CA0: 36 36 36 00 00 00 00 00 00 00 FE 36 36 36 36 36  // 666........66666
    7CB0: 36 36 36 00 00 00 00 00 F8 18 F8 18 18 18 18 18  // 666.............
    7CC0: 18 18 18 36 36 36 36 36 F6 06 F6 36 36 36 36 36  // ...66666...66666
    7CD0: 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36  // 6666666666666666
    7CE0: 36 36 36 00 00 00 00 00 FE 06 F6 36 36 36 36 36  // 666........66666
    7CF0: 36 36 36 36 36 36 36 36 F6 06 FE 00 00 00 00 00  // 66666666........
    7D00: 00 00 00 36 36 36 36 36 36 36 FE 00 00 00 00 00  // ...6666666......
    7D10: 00 00 00 18 18 18 18 18 F8 18 F8 00 00 00 00 00  // ................
    7D20: 00 00 00 00 00 00 00 00 00 00 F8 18 18 18 18 18  // ................
    7D30: 18 18 18 18 18 18 18 18 18 18 1F 00 00 00 00 00  // ................
    7D40: 00 00 00 18 18 18 18 18 18 18 FF 00 00 00 00 00  // ................
    7D50: 00 00 00 00 00 00 00 00 00 00 FF 18 18 18 18 18  // ................
    7D60: 18 18 18 18 18 18 18 18 18 18 1F 18 18 18 18 18  // ................
    7D70: 18 18 18 00 00 00 00 00 00 00 FF 00 00 00 00 00  // ................
    7D80: 00 00 00 18 18 18 18 18 18 18 FF 18 18 18 18 18  // ................
    7D90: 18 18 18 18 18 18 18 18 1F 18 1F 18 18 18 18 18  // ................
    7DA0: 18 18 18 36 36 36 36 36 36 36 37 36 36 36 36 36  // ...6666666766666
    7DB0: 36 36 36 36 36 36 36 36 37 30 3F 00 00 00 00 00  // 6666666670?.....
    7DC0: 00 00 00 00 00 00 00 00 3F 30 37 36 36 36 36 36  // ........?0766666
    7DD0: 36 36 36 36 36 36 36 36 F7 00 FF 00 00 00 00 00  // 66666666........
    7DE0: 00 00 00 00 00 00 00 00 FF 00 F7 36 36 36 36 36  // ...........66666
    7DF0: 36 36 36 36 36 36 36 36 37 30 37 36 36 36 36 36  // 6666666670766666
    7E00: 36 36 36 00 00 00 00 00 FF 00 FF 00 00 00 00 00  // 666.............
    7E10: 00 00 00 36 36 36 36 36 F7 00 F7 36 36 36 36 36  // ...66666...66666
    7E20: 36 36 36 18 18 18 18 18 FF 00 FF 00 00 00 00 00  // 666.............
    7E30: 00 00 00 36 36 36 36 36 36 36 FF 00 00 00 00 00  // ...6666666......
    7E40: 00 00 00 00 00 00 00 00 FF 00 FF 18 18 18 18 18  // ................
    7E50: 18 18 18 00 00 00 00 00 00 00 FF 36 36 36 36 36  // ...........66666
    7E60: 36 36 36 36 36 36 36 36 36 36 3F 00 00 00 00 00  // 6666666666?.....
    7E70: 00 00 00 18 18 18 18 18 1F 18 1F 00 00 00 00 00  // ................
    7E80: 00 00 00 00 00 00 00 00 1F 18 1F 18 18 18 18 18  // ................
    7E90: 18 18 18 00 00 00 00 00 00 00 3F 36 36 36 36 36  // ..........?66666
    7EA0: 36 36 36 36 36 36 36 36 36 36 FF 36 36 36 36 36  // 6666666666.66666
    7EB0: 36 36 36 18 18 18 18 18 FF 18 FF 18 18 18 18 18  // 666.............
    7EC0: 18 18 18 18 18 18 18 18 18 18 F8 00 00 00 00 00  // ................
    7ED0: 00 00 00 00 00 00 00 00 00 00 1F 18 18 18 18 18  // ................
    7EE0: 18 18 18 FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    7EF0: FF FF FF 00 00 00 00 00 00 00 00 FF FF FF FF FF  // ................
    7F00: FF FF FF F0 F0 F0 F0 F0 F0 F0 F0 F0 F0 F0 F0 F0  // ................
    7F10: F0 F0 F0 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F  // ................
    7F20: 0F 0F 0F FF FF FF FF FF FF FF FF 00 00 00 00 00  // ................
    7F30: 00 00 00 00 00 00 00 76 DC D8 D8 D8 D8 DC 76 00  // .......v......v.
    7F40: 00 00 00 00 00 78 CC CC D8 FC C6 C6 C6 C6 CC 00  // .....x..........
    7F50: 00 00 00 00 00 FE 66 62 60 60 60 60 60 60 60 00  // ......fb```````.
    7F60: 00 00 00 00 00 00 00 00 FE 6C 6C 6C 6C 6C 6C 00  // .........llllll.
    7F70: 00 00 00 00 00 FE C6 62 30 18 18 30 62 C6 FE 00  // .......b0..0b...
    7F80: 00 00 00 00 00 00 00 00 7E D8 CC CC CC D8 70 00  // ........~.....p.
    7F90: 00 00 00 00 00 00 00 66 66 66 66 66 7C 60 C0 80  // .......fffff|`..
    7FA0: 00 00 00 00 00 00 00 00 76 DC 18 18 18 18 18 00  // ........v.......
    7FB0: 00 00 00 00 00 FE 38 38 6C C6 C6 6C 38 38 FE 00  // ......88l..l88..
    7FC0: 00 00 00 00 00 00 38 6C C6 C6 FE C6 C6 6C 38 00  // ......8l.....l8.
    7FD0: 00 00 00 00 00 38 6C C6 C6 C6 C6 6C 6C 6C EE 00  // .....8l....lll..
    7FE0: 00 00 00 00 00 3E 60 60 3C 66 C6 C6 C6 CC 78 00  // .....>``<f....x.
    7FF0: 00 00 00 00 00 00 00 00 7E DB DB DB 7E 00 00 00  // ........~...~...
    8000: 00 00 00 00 00 02 06 7C CE DE F6 F6 7C 60 C0 00  // .......|....|`..
    8010: 00 00 00 00 00 00 1C 30 60 60 7C 60 60 30 1C 00  // .......0``|``0..
    8020: 00 00 00 00 00 7C C6 C6 C6 C6 C6 C6 C6 C6 C6 00  // .....|..........
    8030: 00 00 00 00 00 00 00 FE 00 00 FE 00 00 FE 00 00  // ................
    8040: 00 00 00 00 00 00 00 18 18 7E 18 18 00 00 7E 00  // .........~....~.
    8050: 00 00 00 00 00 30 18 0C 06 0C 18 30 00 00 7E 00  // .....0.....0..~.
    8060: 00 00 00 00 00 0C 18 30 60 30 18 0C 00 00 7E 00  // .......0`0....~.
    8070: 00 00 00 00 00 00 00 0C 1E 1A 18 18 18 18 18 18  // ................
    8080: 18 18 18 18 18 18 18 18 18 18 18 18 18 58 78 30  // .............Xx0
    8090: 00 00 00 00 00 00 00 18 18 00 7E 00 18 18 00 00  // ..........~.....
    80A0: 00 00 00 00 00 00 00 00 00 76 DC 00 76 DC 00 00  // .........v..v...
    80B0: 00 00 00 00 00 78 CC CC 78 00 00 00 00 00 00 00  // .....x..x.......
    80C0: 00 00 00 00 00 00 00 00 00 00 18 18 00 00 00 00  // ................
    80D0: 00 00 00 00 00 00 00 00 00 00 00 18 00 00 00 00  // ................
    80E0: 00 00 00 00 00 1F 18 18 18 18 18 D8 D8 78 38 18  // .............x8.
    80F0: 00 00 00 00 00 D8 6C 6C 6C 6C 6C 00 00 00 00 00  // ......lllll.....
    8100: 00 00 00 00 00 70 D8 18 30 60 F8 00 00 00 00 00  // .....p..0`......
    8110: 00 00 00 00 00 00 00 00 7E 7E 7E 7E 7E 7E 00 00  // ........~~~~~~..
    8120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    8130: 00 00 00 1D 00 00 00 00 00 24 66 FF 66 24 00 00  // .........$f.f$..
    8140: 00 00 00 00 2F 00 00 00 01 03 06 0C 18 30 60 C0  // ..../........0`.
    8150: 80 00 00 00 00 30 00 00 7E C3 C3 C3 DB DB C3 C3  // .....0..~.......
    8160: C3 7E 00 00 00 00 4D 00 00 C3 C3 E7 FF FF DB DB  // .~....M.........
    8170: C3 C3 C3 00 00 00 00 54 00 00 FF 99 18 18 18 18  // .......T........
    8180: 18 18 18 3C 00 00 00 00 56 00 00 C3 C3 C3 C3 C3  // ...<....V.......
    8190: C3 C3 66 3C 18 00 00 00 00 57 00 00 C3 C3 C3 C3  // ..f<.....W......
    81A0: DB DB DB DB FF 66 00 00 00 00 58 00 00 C3 C3 C3  // .....f....X.....
    81B0: 66 3C 3C 66 C3 C3 C3 00 00 00 00 59 00 00 C3 C3  // f<<f.......Y....
    81C0: C3 C3 66 3C 18 18 18 3C 00 00 00 00 5C 00 00 00  // ..f<...<....\...
    81D0: 80 C0 60 30 18 0C 06 03 01 00 00 00 00 6D 00 00  // ..`0.........m..
    81E0: 00 00 00 66 FF DB DB DB C3 C3 00 00 00 00 76 00  // ...f..........v.
    81F0: 00 00 00 00 C3 C3 C3 C3 66 3C 18 00 00 00 00 77  // ........f<.....w
    8200: 00 00 00 00 00 C3 C3 DB DB DB FF 66 00 00 00 00  // ...........f....
    8210: 00 00 CB 70 C3 8B FA A0 10 04 24 30 AA B9 1E 00  // ...p......$0....
    8220: BE 49 04 F3 A4 B1 07 BE 84 04 F3 A4 B1 04 BE A8  // .I..............
    8230: 04 F3 A4 9C FA B1 04 BE 14 00 F3 A4 B1 04 BE 74  // ...............t
    8240: 00 F3 A4 B1 04 BE 7C 00 F3 A4 B1 04 BE 0C 01 F3  // ......|.........
    8250: A4 C4 3E 08 01 89 3E B4 01 8C 06 B6 01 C7 06 08  // ..>...>.........
    8260: 01 14 5A 8C 0E 0A 01 9D C3 8B F2 8C C2 8E DA 33  // ..Z............3
    8270: D2 8E C2 26 8A 26 10 04 80 E4 CF AC 0A C4 26 A2  // ...&.&........&.
    8280: 10 04 B9 1E 00 BF 49 04 F3 A4 B1 07 BF 84 04 F3  // ......I.........
    8290: A4 B1 04 BF A8 04 F3 A4 9C FA B1 04 BF 14 00 F3  // ................
    82A0: A4 B1 04 BF 74 00 F3 A4 B1 04 BF 7C 00 F3 A4 B1  // ....t......|....
    82B0: 04 BF 0C 01 F3 A4 06 1F B1 04 BE B4 01 BF 08 01  // ................
    82C0: F3 A4 C7 06 B4 01 14 5A 8C 0E B6 01 9D C3 0B DB  // .......Z........
    82D0: 74 03 E9 46 01 57 32 C0 B9 40 00 F3 AA 5F BB 8A  // t..F.W2..@..._..
    82E0: 9F 26 89 1D 26 8C 4D 02 2E 8E 1E 49 03 57 BE 49  // .&..&.M....I.W.I
    82F0: 04 B9 1E 00 83 C7 04 FC 8A 04 26 88 05 46 47 E2  // ..........&..FG.
    8300: F7 5F A0 84 04 FE C0 26 88 45 22 A1 85 04 26 89  // ._.....&.E"...&.
    8310: 45 23 57 E8 12 1C 5F 26 88 5D 25 26 88 7D 26 8A  // E#W..._&.]%&.}&.
    8320: 1E 49 04 E8 FC 05 74 05 80 FB 13 7F 1D 32 FF D1  // .I....t......2..
    8330: E3 2E 8A 87 62 9F 32 E4 0A C0 74 01 40 26 89 45  // ....b.2...t.@&.E
    8340: 27 2E 8A 87 63 9F 26 88 45 29 A1 85 04 8A 16 84  // '...c.&.E)......
    8350: 04 FE C2 F6 E2 B2 00 3D C8 00 7E 15 B2 01 3D 5E  // .......=..~...=^
    8360: 01 7E 0E B2 02 3D 90 01 7E 07 B2 03 3D E0 01 7E  // .~...=..~...=..~
    8370: 00 26 88 55 2A 8A 26 87 04 8A C4 24 01 C0 E0 04  // .&.U*.&....$....
    8380: 80 E4 02 D0 E4 0A E0 80 F4 10 A0 89 04 24 0A 0A  // .............$..
    8390: E0 E8 94 08 B2 C0 B0 30 EE 42 EC 24 08 C0 E0 02  // .......0.B.$....
    83A0: 0A C4 0C 01 26 88 45 2D B0 03 26 88 45 31 E8 77  // ....&.E-..&.E1.w
    83B0: 08 1E 06 32 D2 C4 1E A8 04 8C C1 8C CE 3B CE 74  // ...2.........;.t
    83C0: 34 26 C5 77 04 8C D9 0B F1 74 03 80 CA 10 26 C5  // 4&.w.....t....&.
    83D0: 77 0C 8C D9 0B F1 74 03 80 CA 08 26 C5 77 08 8C  // w.....t....&.w..
    83E0: D9 0B F1 74 03 80 CA 04 26 C5 77 10 8C D9 0B F1  // ...t....&.w.....
    83F0: 74 03 80 CA 01 07 1F 26 88 55 32 B0 03 BA C4 03  // t......&.U2.....
    8400: E8 E4 04 8A E0 C0 EC 02 8A D4 8A F2 D0 EE 81 E2  // ................
    8410: 04 04 25 03 03 0B C2 26 89 45 2B 8B EC C6 46 1A  // ..%....&.E+...F.
    8420: 1B C3 0A C0 74 0F FE C8 74 36 FE C8 74 56 8B EC  // ....t...t6..tV..
    8430: C6 46 1A 00 C3 B8 20 00 F6 C1 01 74 03 83 C0 60  // .F.... ....t...`
    8440: F6 C1 02 74 03 83 C0 3A F6 C1 04 74 03 05 03 03  // ...t...:...t....
    8450: 83 C0 3F C1 E8 06 8B EC 89 46 0E C6 46 1A 1C C3  // ..?......F..F...
    8460: 8B FB 83 C7 20 F6 C1 01 74 03 E8 85 00 F6 C1 02  // .... ...t.......
    8470: 74 03 E8 EF 00 F6 C1 04 74 03 E8 F8 01 8B EC C6  // t.......t.......
    8480: 46 1A 1C C3 F6 C1 01 74 06 E8 16 15 E8 25 01 F6  // F......t.....%..
    8490: C1 02 74 03 E8 85 01 F6 C1 04 74 03 E8 12 02 EB  // ..t.......t.....
    84A0: DC 8A C4 EE 42 EC AA FE C4 4A E2 F5 C3 E8 6B 04  // ....B....J....k.
    84B0: BD C0 03 B9 15 00 32 E4 EC 87 EA 8A C4 EE 42 EC  // ......2.......B.
    84C0: AA FE C4 4A 87 EA E2 F0 EC 87 EA B0 20 EE C3 26  // ...J........ ..&
    84D0: 8A 05 88 04 47 46 E2 F7 C3 26 8A 25 EF 47 FE C0  // ....GF...&.%.G..
    84E0: E2 F7 C3 B2 C0 8A C4 EE 26 8A 05 47 FE C4 EE E2  // ........&..G....
    84F0: F4 C3 9C FA 51 57 8B C7 2B C3 26 89 07 8B F7 E8  // ....QW..+.&.....
    8500: 0A 04 EC 26 88 44 01 26 89 54 41 B2 CE EC 26 88  // ...&.D.&.TA...&.
    8510: 44 02 B2 CC EC 26 88 44 09 B2 CA EC 26 88 44 04  // D....&.D....&.D.
    8520: B2 C4 EC 26 88 04 83 C7 05 B9 04 00 B4 01 E8 70  // ...&...........p
    8530: FF 26 8A 04 EE 8B FE 83 C7 0A 26 8B 54 41 32 E4  // .&........&.TA2.
    8540: B9 19 00 E8 5B FF 26 8A 44 01 EE E8 5F FF B2 CE  // ....[.&.D..._...
    8550: 32 E4 B9 09 00 E8 49 FF 26 8A 44 02 EE 5F 59 83  // 2.....I.&.D.._Y.
    8560: C7 60 9D C3 9C FA 8B C7 2B C3 26 89 47 02 51 57  // .`......+.&.G.QW
    8570: 2E 8E 1E 49 03 A0 10 04 24 30 AA BE 49 04 B9 1E  // ...I....$0..I...
    8580: 00 F3 A4 BE 84 04 B1 07 F3 A4 BE A8 04 B1 04 F3  // ................
    8590: A4 BE 14 00 B1 04 F3 A4 BE 74 00 B1 04 F3 A4 BE  // .........t......
    85A0: 7C 00 B1 04 F3 A4 BE 0C 01 B1 04 F3 A4 5F 59 83  // |............_Y.
    85B0: C7 3A 9D C3 9C FA 26 8B 3F 03 FB 8B F7 51 8B FE  // .:....&.?....Q..
    85C0: 83 C7 05 BA C4 03 B8 00 01 EF B0 01 B9 04 00 E8  // ................
    85D0: 07 FF 47 B2 C2 26 8A 44 09 EE B2 C4 B8 00 03 EF  // ..G..&.D........
    85E0: 26 8A 04 EE 26 8B 54 41 B8 11 00 EF B1 19 32 C0  // &...&.TA......2.
    85F0: E8 E6 FE 26 8A 44 01 EE 80 C2 06 26 8A 44 04 EE  // ...&.D.....&.D..
    8600: EC B1 15 32 E4 E8 DB FE B0 20 EE B1 09 32 C0 B2  // ...2..... ...2..
    8610: CE E8 C5 FE 26 8A 44 02 EE 59 9D C3 9C FA 26 8B  // ....&.D..Y....&.
    8620: 7F 02 03 FB 06 51 2E 8E 1E 49 03 26 8A 05 80 26  // .....Q...I.&...&
    8630: 10 04 CF 08 06 10 04 47 BE 49 04 B9 1E 00 E8 8E  // .......G.I......
    8640: FE BE 84 04 B1 07 E8 86 FE BE A8 04 B1 04 E8 7E  // ...............~
    8650: FE BE 14 00 B1 04 E8 76 FE BE 74 00 B1 04 E8 6E  // .......v..t....n
    8660: FE BE 7C 00 B1 04 E8 66 FE BE 0C 01 B1 04 E8 5E  // ..|....f.......^
    8670: FE 59 07 9D C3 9C FA 8B C7 2B C3 26 89 47 04 E8  // .Y.......+.&.G..
    8680: A6 05 B2 C0 B0 34 EE 42 EC 26 88 05 BA C8 03 EC  // .....4.B.&......
    8690: 26 88 45 01 50 4A 4A EC 26 88 45 02 83 C7 03 B9  // &.E.PJJ.&.E.....
    86A0: 00 03 42 32 C0 EE 42 42 EC AA E2 FC 58 4A EE 9D  // ..B2..BB....XJ..
    86B0: C3 9C FA 26 8B 77 04 03 F3 E8 6C 05 B2 C0 B0 34  // ...&.w....l....4
    86C0: EE 26 8A 04 EE BA C6 03 26 8A 44 02 EE 56 42 42  // .&......&.D..VBB
    86D0: 83 C6 03 32 C0 EE 42 B9 00 03 26 8A 04 EE 46 E2  // ...2..B...&...F.
    86E0: F9 5E FE CA 26 8A 44 01 EE 9D C3 BA CC 03 EC 24  // .^..&.D........$
    86F0: FE 0A C4 B2 C2 EE C3 E8 A8 12 B2 C0 86 C4 EE EB  // ................
    8700: 00 EB 00 86 C4 EE EB 00 EB 00 B0 20 EE C3 50 8A  // ........... ..P.
    8710: E0 80 E4 80 80 26 87 04 7F 08 26 87 04 24 7F 8A  // .....&....&..$..
    8720: E0 3C 07 7E 1E 26 F6 47 33 01 75 17 3C 23 74 13  // .<.~.&.G3.u.<#t.
    8730: 3C 32 74 0F 3C 33 74 0B B4 03 26 F6 47 09 01 75  // <2t.<3t...&.G..u
    8740: 02 B4 07 88 26 49 04 BA B4 03 80 0E 87 04 02 26  // ....&I.........&
    8750: F6 47 09 01 74 07 B2 D4 80 26 87 04 FD 89 16 63  // .G..t....&.....c
    8760: 04 C7 06 4E 04 00 00 C6 06 62 04 00 B9 08 00 BF  // ...N.....b......
    8770: 50 04 FC 06 1E 07 33 C0 F3 AB 07 26 8A 07 32 E4  // P.....3....&..2.
    8780: A3 4A 04 26 8A 47 01 A2 84 04 26 8A 47 02 A3 85  // .J.&.G....&.G...
    8790: 04 26 8B 47 03 A3 4C 04 26 8B 47 14 86 C4 A3 60  // .&.G..L.&.G....`
    87A0: 04 58 C3 52 32 E4 33 D2 B0 0D CD 17 F6 C4 29 75  // .X.R2.3.......)u
    87B0: 08 32 E4 33 D2 B0 0A CD 17 5A C3 06 1E 60 2E 8E  // .2.3.....Z...`..
    87C0: 1E 49 03 2E 83 0E 53 03 00 75 6E 80 3E 00 05 01  // .I....S..un.>...
    87D0: 74 67 C6 06 00 05 01 8A 1E 62 04 32 FF D1 E3 8B  // tg.......b.2....
    87E0: FB 8B 85 50 04 8A 3E 62 04 50 32 F6 8A 0E 84 04  // ...P..>b.P2.....
    87F0: 32 ED 41 51 8B 0E 4A 04 32 D2 E8 A6 FF F6 C4 29  // 2.AQ..J.2......)
    8800: 75 3D 51 52 89 95 50 04 B4 08 E8 6F D2 0A C0 75  // u=QR..P....o...u
    8810: 02 B0 20 33 D2 32 E4 CD 17 F6 C4 29 75 1F 5A FE  // .. 3.2.....)u.Z.
    8820: C2 59 E2 DE FE C6 59 E2 CA E8 77 FF 32 C0 A2 00  // .Y....Y...w.2...
    8830: 05 58 89 85 50 04 E8 AF 03 61 1F 07 CF 5A 59 59  // .X..P....a...ZYY
    8840: B0 FF EB EA 52 2A F5 38 C6 7D 02 32 C0 2E 8E 06  // ....R*.8.}.2....
    8850: 4B 03 5A C3 A0 85 04 F6 E3 8A F7 8B D8 8B CA BA  // K.Z.............
    8860: C4 03 B8 02 0F EF B4 02 E8 6D 00 8B D1 32 ED 8A  // .........m...2..
    8870: E6 8A C6 F3 AA 03 FD 8A CA 4B 75 F7 32 E4 E8 57  // .........Ku.2..W
    8880: 00 C3 53 8A 1E 62 04 0B C0 75 04 0A DB 74 03 E8  // ..S..b...u...t..
    8890: 35 03 5B 8B F8 2B D1 81 C2 01 01 8A C3 32 E4 C3  // 5.[..+.......2..
    88A0: 8A C6 32 F6 2B EA 0A DB 74 2A 2A C3 F6 26 85 04  // ..2.+...t**..&..
    88B0: 8B C8 52 B4 01 E8 20 00 B2 C4 B8 02 0F EF 5A 1E  // ..R... .......Z.
    88C0: 06 1F 8B C1 8B CA F3 A4 03 F5 03 FD 48 75 F5 1F  // ............Hu..
    88D0: E8 81 FF C3 8A D8 EB F8 BA CE 03 B0 05 EE 42 EC  // ..............B.
    88E0: 24 FC 0A C4 EE 4A C3 9C FA EE 42 EB 00 EC 4A 9D  // $....J....B...J.
    88F0: C3 1E 2E 8E 1E 49 03 8B 16 63 04 80 C2 06 1F C3  // .....I...c......
    8900: 1E 2E 8E 1E 49 03 8B 16 63 04 1F C3 50 BA CC 03  // ....I...c...P...
    8910: EC B2 D4 A8 01 75 02 B2 B4 58 C3 E8 EE FF 80 C2  // .....u...X......
    8920: 06 C3 1E 2E 8E 1E 49 03 80 3E 49 04 03 74 13 80  // ......I..>I..t..
    8930: 3E 49 04 02 74 0C 80 3E 49 04 01 74 05 80 3E 49  // >I..t..>I..t..>I
    8940: 04 00 1F C3 50 2E 8E 06 4D 03 A0 10 04 24 30 3C  // ....P...M....$0<
    8950: 30 74 05 2E 8E 06 4F 03 58 0B C0 74 03 E8 E1 01  // 0t....O.X..t....
    8960: 03 06 4E 04 81 C2 01 01 2B D1 32 ED 8B 2E 4A 04  // ..N.....+.2...J.
    8970: 8B F8 8B F0 8B C5 F6 E3 D1 E0 D1 E5 0A DB 75 02  // ..............u.
    8980: 8A DE 38 F3 7E 02 8A DE C3 FC 8A D8 8B C1 E8 B3  // ..8.~...........
    8990: FF 03 F0 3A 16 4A 04 74 06 06 1F E8 1B 00 C3 06  // ...:.J.t........
    89A0: 1F E8 40 00 C3 FC 8A D8 8A C1 8A E6 E8 95 FF F7  // ..@.............
    89B0: DD 2B F0 06 1F E8 01 00 C3 53 8A CE 2A CB 32 ED  // .+.......S..*.2.
    89C0: 32 F6 2B EA 2B EA E3 0E 8A E1 8B CA F3 A5 03 F5  // 2.+.+...........
    89D0: 03 FD FE CC 75 F4 58 B0 20 8A CA F3 AB 03 FD FE  // ....u.X. .......
    89E0: CB 75 F6 C3 53 8A C6 2A C3 74 06 F6 E2 8B C8 F3  // .u..S..*.t......
    89F0: A5 58 8B C8 F6 E2 91 B0 20 F3 AB C3 8B D8 E8 2E  // .X...... .......
    8A00: 00 2E 8E 1E 4F 03 8A C3 22 DF D3 E3 A8 80 74 03  // ....O...".....t.
    8A10: 30 1C C3 F6 D7 8A 34 22 F7 0A DE 88 1C C3 8A FC  // 0.....4"........
    8A20: E8 0C 00 2E 8E 1E 4F 03 8A 04 D2 E8 22 C7 C3 B0  // ......O....."...
    8A30: 28 F6 E2 F6 C2 01 74 03 05 D8 1F 8B F1 C1 EE 02  // (.....t.........
    8A40: 80 FF 05 7F 0C 03 F0 F6 D1 80 E1 03 D0 E1 B7 03  // ................
    8A50: C3 D1 EE 03 F0 F6 D1 80 E1 07 B7 01 C3 FC 8A D8  // ................
    8A60: 2E 8E 06 4F 03 8B C1 E8 86 00 75 02 8A DE 03 F0  // ...O......u.....
    8A70: E8 24 00 C3 FC 8A D8 2E 8E 06 4F 03 8A C1 8A E6  // .$........O.....
    8A80: E8 6D 00 75 02 8A DE F7 DD 81 C6 F0 00 81 C7 F0  // .m.u............
    8A90: 00 2B F0 E8 01 00 C3 8A CE 2A CB E3 2C 51 8A CA  // .+.......*..,Q..
    8AA0: 56 57 D1 E9 F3 A5 13 C9 F3 A4 8A CA 2B F1 2B F9  // VW..........+.+.
    8AB0: 81 C6 00 20 81 C7 00 20 D1 E9 F3 A5 13 C9 F3 A4  // ... ... ........
    8AC0: 5F 5E 03 F5 03 FD 59 E2 D4 8A C7 8A E7 8A CA 57  // _^....Y........W
    8AD0: D1 E9 F3 AB 13 C9 F3 AA 8A CA 2B F9 81 C7 00 20  // ..........+.... 
    8AE0: D1 E9 F3 AB 13 C9 F3 AA 5F 03 FD FE CB 75 DE C3  // ........_....u..
    8AF0: E8 B0 00 81 C2 01 01 2B D1 38 F3 76 02 32 DB 51  // .......+.8.v.2.Q
    8B00: B1 02 D2 E6 D2 E3 59 32 ED BD 50 00 80 3E 49 04  // ......Y2..P..>I.
    8B10: 06 74 04 D0 E2 D1 E0 06 1F 8B F8 8B F0 B0 50 F6  // .t............P.
    8B20: E3 0A DB C3 52 53 8A DF 32 FF D1 E3 8B 87 50 04  // ....RS..2.....P.
    8B30: E8 0E 00 50 D1 EB A1 4C 04 F7 E3 5B 03 C3 5B 5A  // ...P...L...[..[Z
    8B40: C3 52 8B D0 A0 4A 04 F6 E4 32 F6 03 C2 D1 E0 5A  // .R...J...2.....Z
    8B50: C3 8B E8 83 E5 0F 2E 8A A6 01 8B 8B E8 C1 ED 04  // ................
    8B60: 83 E5 0F 2E 8A 86 01 8B C3 00 03 0C 0F 30 33 3C  // .............03<
    8B70: 3F C0 C3 CC CF F0 F3 FC FF 26 8B 04 86 E0 BA 00  // ?........&......
    8B80: 80 F6 C4 C0 74 02 0A D6 D0 EE C1 E0 02 75 F2 88  // ....t........u..
    8B90: 56 00 45 C3 8B 16 63 04 8A C5 86 E0 EF 8A E1 FE  // V.E...c.........
    8BA0: C0 EF C3 52 8B D0 8A C4 F6 26 4A 04 C1 E0 02 32  // ...R.....&J....2
    8BB0: F6 03 C2 5A C3 53 8A DF 32 FF D1 E3 8B 87 50 04  // ...Z.S..2.....P.
    8BC0: D1 EB E8 02 00 5B C3 52 8B D0 32 F6 52 8A C4 F6  // .....[.R..2.R...
    8BD0: 26 85 04 F7 26 4A 04 5A 03 C2 0A DB 74 08 03 06  // &...&J.Z....t...
    8BE0: 4C 04 FE CB 75 F8 5A C3 52 8B D0 A0 4A 04 F6 E4  // L...u.Z.R...J...
    8BF0: 32 F6 03 C2 D1 E0 03 06 4E 04 D1 F8 8B C8 B4 0E  // 2.......N.......
    8C00: E8 91 FF 5A C3 8B C2 F7 26 4A 04 8B F9 C1 EF 03  // ...Z....&J......
    8C10: 03 F8 0A FF 74 0A 8A C7 32 E4 F7 26 4C 04 03 F8  // ....t...2..&L...
    8C20: 80 E1 07 B4 80 D2 EC C3 E8 F0 FC EC C3 E8 F8 FF  // ................
    8C30: B2 C0 B0 20 EE C3 E8 EF FF B2 C0 32 C0 EE C3 C4  // ... .......2....
    8C40: 3E A8 04 26 C4 7D 04 8C C5 0B EF C3 53 B0 0E E8  // >..&.}......S...
    8C50: 95 FC 8A E0 B0 0F E8 8E FC 8B D8 B8 0E AA EF B8  // ................
    8C60: 0F 55 EF B0 0E E8 7F FC 3C AA 74 0D B0 0F E8 76  // .U......<.t....v
    8C70: FC 3C 55 74 04 32 C0 5B C3 B0 0E 8A E7 EF FE C0  // .<Ut.2.[........
    8C80: 8A E3 EF B0 01 0A C0 5B C3 8A EE 8A 36 85 04 06  // .......[....6...
    8C90: 1F 0A DB 74 25 8A C5 2A C3 F6 E6 8B C8 52 32 F6  // ...t%..*.....R2.
    8CA0: C1 E2 02 8B C2 D1 E2 2B D5 51 8B C8 F3 A5 2B FA  // .......+.Q....+.
    8CB0: 2B F2 59 E2 F4 5A E8 05 00 C3 8A DD EB F8 8A C6  // +.Y..Z..........
    8CC0: F6 E3 8B C8 8A C7 8A E0 32 F6 C1 E2 02 8B DA D1  // ........2.......
    8CD0: E2 8B F1 2B D5 8B CB F3 AB 2B FA 4E 75 F7 C3 2E  // ...+.....+.Nu...
    8CE0: 8E 1E 49 03 89 0E 60 04 8A C5 24 60 A8 20 74 06  // ..I...`...$`. t.
    8CF0: B9 00 1E E9 94 00 F6 06 87 04 01 0F 85 8B 00 80  // ................
    8D00: 3E 49 04 07 74 06 E8 19 FC 74 01 C3 F6 06 87 04  // >I..t....t......
    8D10: 08 74 03 CD 42 C3 8A 36 85 04 8A D6 FE CA 38 CD  // .t..B..6......8.
    8D20: 7E 1F 0A C9 74 64 8A E9 8A CE FE C9 EB 5C 38 D1  // ~...td.......\8.
    8D30: 74 58 8A CE 80 FD 03 7C 04 8A E9 D0 ED FE C9 EB  // tX.....|........
    8D40: 49 80 F9 03 7E 44 8A E1 2A E5 0A E4 75 0A 38 CA  // I...~D..*...u.8.
    8D50: 74 38 FE CA 38 CA 74 32 8A C5 0A C1 38 F0 7E 0A  // t8..8.t2....8.~.
    8D60: 80 FC 02 7E 12 80 FD 02 7F C8 80 FC 03 7D BF 8A  // ...~.........}..
    8D70: D6 FE CA 38 D1 74 13 8A CE FE C9 FE C9 8A E9 2A  // ...8.t.........*
    8D80: EC 80 FE 08 7F 04 FE C1 FE C5 B4 0A E8 05 FE C3  // ................
    8D90: 2E 8E 1E 49 03 A2 62 04 32 E4 8B F0 F7 26 4C 04  // ...I..b.2....&L.
    8DA0: A3 4E 04 8B C8 E8 7A FB 74 07 80 3E 49 04 07 77  // .N....z.t..>I..w
    8DB0: 02 D1 F9 B4 0C E8 DC FD D1 E6 8B 84 50 04 E8 27  // ............P..'
    8DC0: FE C3 2E 8E 1E 49 03 8A 26 49 04 E8 C3 92 74 07  // .....I..&I....t.
    8DD0: C7 06 50 04 00 00 C3 E8 48 FB 74 0B 80 FC 07 74  // ..P.....H.t....t
    8DE0: 06 77 08 E8 77 FC C3 E8 9F FB C3 80 FC 13 7C 03  // .w..w.........|.
    8DF0: 74 1F C3 E8 4E FA 8A D8 8B C1 E8 85 FA 8B 2E 4A  // t...N..........J
    8E00: 04 52 F6 26 85 04 F7 E5 8B F7 03 F0 5A E8 90 FA  // .R.&........Z...
    8E10: C3 E8 30 FA 8A D8 8B C1 E8 67 FA C1 E7 03 52 8B  // ..0......g....R.
    8E20: 2E 4A 04 C1 E5 03 F7 26 85 04 F7 E5 8B F7 03 F0  // .J.....&........
    8E30: 5A E8 55 FE C3 2E 8E 1E 49 03 8A 26 49 04 E8 E1  // Z.U.....I..&I...
    8E40: FA 74 0C 80 FC 07 74 07 77 40 80 FC 03 7F 04 E8  // .t....t.w@......
    8E50: 53 FB C3 E8 1E FC C3 E8 EA F9 8A D8 8A C1 8A E6  // S...............
    8E60: FE C4 E8 1D FA 2B 3E 4A 04 C1 E7 03 52 F7 26 85  // .....+>J....R.&.
    8E70: 04 F7 26 4A 04 C1 E0 03 8B F7 2B F0 5A 8B 2E 4A  // ..&J......+.Z..J
    8E80: 04 C1 E5 03 F7 DD E8 00 FE C3 80 FC 13 7C 03 74  // .............|.t
    8E90: C6 C3 E8 AF F9 8A D8 8A C1 8A E6 FE C4 E8 E2 F9  // ................
    8EA0: 52 8B 2E 4A 04 F7 26 85 04 F7 E5 2B FD 8B F7 2B  // R..J..&....+...+
    8EB0: F0 5A F7 DD E8 E9 F9 C3 2E 8E 1E 49 03 2E 8E 06  // .Z.........I....
    8EC0: 4F 03 E8 5D FA 74 11 80 3E 49 04 07 7C 18 2E 8E  // O..].t..>I..|...
    8ED0: 06 4D 03 74 03 E9 B1 00 E8 49 FC 8B D8 26 8B 07  // .M.t.....I...&..
    8EE0: 8B EC 89 46 1A C3 A1 50 04 E8 B7 FC 8B F0 BB 08  // ...F...P........
    8EF0: 00 2B E3 8B EC 80 3E 49 04 06 75 1F B9 04 00 26  // .+....>I..u....&
    8F00: 8A 04 88 46 00 45 26 8A 84 00 20 88 46 00 45 83  // ...F.E&... .F.E.
    8F10: C6 50 E2 EB B8 00 02 B2 80 EB 17 D1 E6 B9 04 00  // .P..............
    8F20: E8 56 FC 81 C6 00 20 E8 4F FC 81 EE B0 1F E2 F0  // .V.... .O.......
    8F30: EB E2 2B EB C4 3E 0C 01 32 F6 80 FB 0E 75 09 26  // ..+..>..2....u.&
    8F40: 83 7D FE 10 75 02 B6 80 16 1F 8B F5 8B CB F6 C6  // .}..u...........
    8F50: 80 74 01 47 56 57 F3 A6 5F 5E 74 23 FE C0 03 FB  // .t.GVW.._^t#....
    8F60: F6 C6 80 74 01 47 FE CA 75 E2 FE CC 74 0F 2E 8E  // ...t.G..u...t...
    8F70: 1E 49 03 C4 3E 7C 00 B0 80 B2 80 EB CB 32 C0 8B  // .I..>|.......2..
    8F80: E5 03 E3 8B EC 89 46 1A C3 80 3E 49 04 13 7C 05  // ......F...>I..|.
    8F90: 75 02 EB 5A C3 2E 8E 06 4B 03 E8 18 FC 8B F0 8B  // u..Z....K.......
    8FA0: 1E 85 04 2B E3 8B EC B8 05 08 B9 05 00 BA CE 03  // ...+............
    8FB0: 80 3E 49 04 0F 72 1A F6 06 87 04 60 75 13 B4 0A  // .>I..r.....`u...
    8FC0: F7 C6 01 00 75 02 B4 05 B0 07 EF B8 05 18 B9 05  // ....u...........
    8FD0: 01 EF 51 8B CB 26 8A 04 F6 D0 88 46 00 45 03 36  // ..Q..&.....F.E.6
    8FE0: 4A 04 E2 F1 58 EF B8 00 01 32 D2 E9 44 FF 2E 8E  // J...X....2..D...
    8FF0: 06 4B 03 A1 50 04 8B D0 32 F6 52 8A C4 32 E4 F7  // .K..P...2.R..2..
    9000: 26 4A 04 F7 26 85 04 5A 03 C2 8B F0 8B 1E 85 04  // &J..&..Z........
    9010: 2B E3 8B EC 53 8B 3E 4A 04 4F C1 E7 03 C1 E6 03  // +...S.>J.O......
    9020: B9 08 00 32 E4 26 8A 04 D0 E4 0A C0 74 03 80 CC  // ...2.&......t...
    9030: 01 46 E2 F1 88 66 00 45 03 F7 4B 75 E3 5B B8 00  // .F...f.E..Ku.[..
    9040: 01 32 D2 E9 EC FE 33 ED EB 03 BD 01 00 2E 8E 1E  // .2....3.........
    9050: 49 03 2E 8E 06 4F 03 8A 26 49 04 E8 C4 F8 74 0F  // I....O..&I....t.
    9060: 2E 8E 06 4D 03 80 FC 07 74 05 7C 3D E9 0B 02 8A  // ...M....t.|=....
    9070: E3 8B F0 8A DF 32 FF D1 E3 8B 87 50 04 8B D0 A0  // .....2.....P....
    9080: 4A 04 F6 E4 32 F6 03 C2 8B F8 D1 E7 0A DB 74 0B  // J...2.........t.
    9090: D0 EB A1 4C 04 03 F8 FE CB 75 FA 8B C6 0B ED 75  // ...L.....u.....u
    90A0: 03 F3 AB C3 AA 47 E2 FC C3 50 2E 8E 06 4F 03 A1  // .....G...P...O..
    90B0: 50 04 E8 EE FA 8B F8 A0 50 04 8A 26 4A 04 8B E8  // P.......P..&J...
    90C0: 58 A8 80 74 08 24 7F C5 36 7C 00 EB 04 C5 36 0C  // X..t.$..6|....6.
    90D0: 01 8A FC 32 E4 C1 E0 03 03 F0 80 FF 06 74 69 D1  // ...2.........ti.
    90E0: E7 8A F3 B0 55 80 E3 03 F6 E3 8A D8 8A F8 8B C5  // ....U...........
    90F0: 50 B2 04 F6 C6 80 75 27 AC E8 55 FA 23 C3 AB AC  // P.....u'..U.#...
    9100: E8 4E FA 23 C3 26 89 85 FE 1F 83 C7 4E FE CA 75  // .N.#.&......N..u
    9110: E7 83 EE 08 81 EF 3E 01 58 E8 72 00 E2 D2 C3 AC  // ......>.X.r.....
    9120: E8 2E FA 23 C3 26 31 05 AC E8 25 FA 23 C3 26 31  // ...#.&1...%.#.&1
    9130: 85 00 20 83 C7 50 FE CA 75 E5 83 EE 08 81 EF 3E  // .. ..P..u......>
    9140: 01 58 E8 49 00 E2 A9 C3 8B C5 50 B2 04 F6 C3 80  // .X.I......P.....
    9150: 74 1F AC 26 30 05 AC 26 30 85 00 20 83 C7 50 FE  // t..&0..&0.. ..P.
    9160: CA 7F EF 83 EE 08 81 EF 3F 01 58 E8 20 00 E2 DA  // ........?.X. ...
    9170: C3 AC AA AC 26 88 85 FF 1F 83 C7 4F FE CA 7F F1  // ....&......O....
    9180: 83 EE 08 81 EF 3F 01 58 E8 03 00 E2 BD C3 FE C0  // .....?.X........
    9190: 38 E0 72 06 32 C0 81 C7 F0 00 C3 8A 16 85 04 F6  // 8.r.2...........
    91A0: E2 8B F0 32 F6 8B EA 66 0F B6 06 51 04 F6 E2 66  // ...2...f...Q...f
    91B0: 0F B7 16 4A 04 83 FA 64 75 03 BA 68 00 83 FA 5A  // ...J...du..h...Z
    91C0: 75 03 BA 60 00 81 FA AF 00 75 03 BA B0 00 52 F7  // u..`.....u....R.
    91D0: E2 66 0F B7 F8 66 0F B6 06 50 04 66 03 F8 66 C1  // .f...f...P.f..f.
    91E0: CF 10 03 FA 66 C1 C7 03 81 CF 00 FF 66 C1 C7 10  // ....f.......f...
    91F0: 5A 8A E2 4A C1 E2 03 A0 50 04 50 C5 06 0C 01 03  // Z..J....P.P.....
    9200: F0 2E 8E 06 4B 03 58 57 51 50 9C FC 8B CD E8 3B  // ....K.XWQP.....;
    9210: 00 B5 08 AC 8A E0 8A C7 D0 E4 73 02 8A C3 26 88  // ..........s...&.
    9220: 05 66 47 FE CD 75 EF 66 03 FA E2 E2 9D 58 59 5F  // .fG..u.f.....XY_
    9230: 83 C7 08 FE C0 38 E0 72 0E 51 32 C0 8B CD 49 03  // .....8.r.Q2...I.
    9240: FA 83 C7 08 E2 F9 59 2B F5 E2 BC C3 06 52 33 C0  // ......Y+.....R3.
    9250: 8E C0 66 C1 C7 10 8B C7 66 C1 C7 10 E8 32 8E 74  // ..f.....f....2.t
    9260: 16 38 E0 74 12 0F B6 D0 E8 54 C6 8A E0 66 C1 C7  // .8.t.....T...f..
    9270: 10 8B F8 66 C1 C7 10 5A 07 C3 80 FC 13 7C 0B 0F  // ...f...Z.....|..
    9280: 84 18 FF 80 FC 62 0F 84 11 FF E8 01 00 C3 80 FC  // .....b..........
    9290: 11 75 06 80 E3 80 80 CB 0F 50 53 8A DF 32 FF D1  // .u.......PS..2..
    92A0: E3 8B 97 50 04 5B 2E 8E 06 4B 03 E8 07 F9 8B F8  // ...P.[...K......
    92B0: 8B 2E 85 04 58 32 F6 52 8B 36 4A 04 56 8A 26 85  // ....X2.R.6J.V.&.
    92C0: 04 C5 36 0C 01 80 FC 0E 75 09 83 7C FE 10 75 03  // ..6.....u..|..u.
    92D0: B4 10 46 F6 E4 03 F0 B6 03 F6 C3 80 75 6D B2 C4  // ..F.........um..
    92E0: B8 02 0F EF 5A 58 50 52 4A 8A E0 57 51 51 57 8B  // ....ZXPRJ..WQQW.
    92F0: CD 32 C0 AA 03 FA E2 FB 5F 47 FE C4 38 D4 76 0A  // .2......_G..8.v.
    9300: 32 E4 8B CD 49 03 FA 47 E2 FB 59 E2 E0 59 5F BA  // 2...I..G..Y..Y_.
    9310: C4 03 B0 02 8A E3 EF 5B 4B 5A 51 57 8B CD AC 26  // .......[KZQW...&
    9320: 8A 25 AA 03 FB E2 F7 5F 47 2B F5 42 3B D3 76 0A  // .%....._G+.B;.v.
    9330: 33 D2 8B CD 49 03 FB 47 E2 FB 59 E2 DD BA CE 03  // 3...I..G..Y.....
    9340: B8 03 00 EF B2 C4 B8 02 0F EF C3 B2 CE B8 03 18  // ................
    9350: EF EB BC 2E 8E 1E 49 03 80 3E 63 04 B4 74 0B BA  // ......I..>c..t..
    9360: CC 03 EC A8 01 75 04 CD 42 C3 C3 E8 D1 F8 0A FF  // .....u..B.......
    9370: 75 1C 8A E3 80 E4 1F 80 26 66 04 E0 08 26 66 04  // u.......&f...&f.
    9380: E8 2D 00 8A 1E 66 04 80 E3 20 B1 05 D2 EB E8 91  // .-...f... ......
    9390: F5 74 19 A0 66 04 24 DF 80 E3 01 74 02 0C 20 A2  // .t..f.$....t.. .
    93A0: 66 04 24 10 0C 02 0A D8 E8 53 00 C3 E8 7E F8 C3  // f.$......S...~..
    93B0: 53 50 80 E3 0F 8A FB D0 E3 81 E3 10 07 0A DF E8  // SP..............
    93C0: 60 F5 74 0E B4 00 8A C3 E8 2C F3 0B ED 74 03 26  // `.t......,...t.&
    93D0: 88 1D 8A C3 E8 0B 00 0B ED 74 04 26 88 5D 10 58  // .........t.&.].X
    93E0: 5B C3 8A E0 1E 2E 8E 1E 49 03 80 3E 49 04 33 1F  // [.......I..>I.3.
    93F0: 7F 08 8A C4 B4 11 E8 FE F2 C3 E8 30 F8 C3 9C FA  // ...........0....
    9400: E8 9F 05 B2 C0 B9 03 00 B4 01 8A C4 EE 8A C3 EE  // ................
    9410: 0B ED 74 04 47 26 88 1D FE C4 80 C3 02 E2 EB B0  // ..t.G&..........
    9420: 20 EE 9D C3 2E 8E 1E 49 03 8A 26 49 04 E8 F2 F4  //  ......I..&I....
    9430: 74 0A 80 FC 07 77 06 74 03 E8 C0 F5 C3 80 FC 13  // t....w.t........
    9440: 7C 03 74 4C C3 8A D8 E8 BB F7 BA CE 03 B0 08 EF  // |.tL............
    9450: 2E 8E 1E 4B 03 F6 C3 80 75 1C B2 C4 B8 02 FF EF  // ...K....u.......
    9460: 8A 25 C6 05 00 8A E3 EF 8A 25 B4 FF 88 25 EF B2  // .%.......%...%..
    9470: CE B8 08 FF EF C3 B8 03 18 EF B2 C4 B0 02 8A E3  // ................
    9480: EF 8A 25 B4 FF 88 25 EF B2 CE B8 03 00 EF EB E1  // ..%...%.........
    9490: 50 2E 8E 06 4B 03 A1 4A 04 C1 E0 03 F7 E2 03 C1  // P...K..J........
    94A0: 8B F8 58 26 88 05 C3 2E 8E 1E 49 03 8A 26 49 04  // ..X&......I..&I.
    94B0: E8 6F F4 74 0F 80 FC 07 77 0B 74 08 E8 5F F5 8B  // .o.t....w.t.._..
    94C0: EC 89 46 1A C3 80 FC 13 7C 03 74 29 C3 E8 35 F7  // ..F.....|.t)..5.
    94D0: 8A CC 2E 8E 1E 4B 03 BA CE 03 32 FF B8 04 03 EF  // .....K....2.....
    94E0: D0 E7 8A 1D 22 D9 74 03 80 CF 01 FE CC 7D F0 8B  // ....".t......}..
    94F0: EC 88 7E 1A C3 A1 4A 04 C1 E0 03 F7 E2 03 C1 8B  // ..~...J.........
    9500: F8 2E 8E 1E 4B 03 8A 05 8B EC 88 46 1A C3 2E 8E  // ....K......F....
    9510: 1E 49 03 8A 3E 62 04 8A CF D0 E1 32 ED BE 50 04  // .I..>b.....2..P.
    9520: 03 F1 8B 14 8A 0E 49 04 3C 0D 76 4A 2E 8E 06 4F  // ......I.<.vJ...O
    9530: 03 E8 EE F3 75 33 8A 1E 4A 04 8A F8 8A C6 F6 E3  // ....u3..J.......
    9540: 8A CA 03 C8 D1 E1 03 0E 4E 04 8B F9 8A C7 AA D1  // ........N.......
    9550: E9 41 FE C2 38 DA 73 59 89 14 8B 16 63 04 B0 0E  // .A..8.sY....c...
    9560: 8A E5 EF 8A E1 FE C0 EF C3 2E 8E 06 4D 03 80 F9  // ............M...
    9570: 07 74 C3 E9 83 00 75 04 32 D2 EB 0F 3C 0A 75 1D  // .t....u.2...<.u.
    9580: 3A 36 84 04 75 03 E9 93 00 FE C6 89 14 E8 92 F3  // :6..u...........
    9590: 75 05 80 F9 07 7F 05 8B C2 E8 4C F6 C3 3C 07 75  // u.........L..<.u
    95A0: 04 E8 B6 71 C3 3C 08 75 83 0A D2 74 DE FE CA EB  // ...q.<.u...t....
    95B0: DA 32 FF 32 D2 2B CB 3A 36 84 04 74 06 FE C6 03  // .2.2.+.:6..t....
    95C0: CB EB 95 89 14 8B 16 63 04 B0 0E 8A E5 EF 8A E1  // .......c........
    95D0: FE C0 EF 2B FB 2B FB 26 8A 65 02 50 8B 3E 4E 04  // ...+.+.&.e.P.>N.
    95E0: 8B F3 D1 E6 03 F7 A0 84 04 F6 E3 8B C8 06 1F F3  // ................
    95F0: A5 8B CB 58 B0 20 F3 AB C3 B9 01 00 B4 0A E8 7B  // ...X. .........{
    9600: C4 FE C2 3A 16 4A 04 74 03 89 14 C3 32 FF 32 D2  // ...:.J.t....2.2.
    9610: 89 14 3A 36 84 04 74 2E FE C6 EB ED 89 14 2E 8E  // ..:6..t.........
    9620: 06 4F 03 E8 FC F2 74 0E 2E 8E 06 4D 03 80 F9 07  // .O....t....M....
    9630: 74 04 32 FF EB 10 8B C2 E8 AD F5 8B F9 D1 E7 4F  // t.2............O
    9640: 8B 1E 4A 04 EB 91 33 C9 8A 36 84 04 8A 16 4A 04  // ..J...3..6....J.
    9650: FE CA B0 01 E9 70 F7 2E 8E 1E 49 03 F6 06 87 04  // .....p....I.....
    9660: 08 74 03 CD 42 C3 E8 76 F6 8B EC C6 46 1B 00 C3  // .t..B..v....F...
    9670: 2E 8E 1E 49 03 8A DF 32 FF D1 E3 89 97 50 04 D0  // ...I...2.....P..
    9680: EB 38 1E 62 04 75 05 8B C2 E8 5C F5 C3 2E 8E 1E  // .8.b.u....\.....
    9690: 49 03 8A DF 32 FF D1 E3 8B 97 50 04 8B 0E 60 04  // I...2.....P...`.
    96A0: 8B EC 89 4E 16 89 56 12 C3 2E 8E 1E 49 03 A0 87  // ...N..V.....I...
    96B0: 04 24 80 0A 06 49 04 8A 26 4A 04 F6 06 87 04 08  // .$...I..&J......
    96C0: 75 2D E8 5D F2 74 07 80 3E 49 04 07 7F 21 51 8A  // u-.].t..>I...!Q.
    96D0: CC 8A 2E 84 04 BE 9A 96 81 FE A3 96 74 10 2E 3B  // ............t..;
    96E0: 0C 74 05 83 C6 03 EB F0 24 80 2E 0A 44 02 59 8A  // .t......$...D.Y.
    96F0: 3E 62 04 8B EC 89 46 1A 89 5E 0E 89 4E 16 89 56  // >b....F..^..N..V
    9700: 12 C3 84 18 23 84 2B 33 84 2A 32 2E 8E 1E 49 03  // ....#.+3.*2...I.
    9710: 3C 04 7F 1B 50 52 BA CC 03 EC A8 01 5A 58 74 08  // <...PR......ZXt.
    9720: 80 3E 63 04 D4 74 08 C3 80 3E 63 04 B4 75 F8 3C  // .>c..t...>c..u.<
    9730: 1C 73 F4 32 E4 8B E8 D1 E5 2E FF A6 D6 96 0E 97  // .s.2............
    9740: 2E 97 40 97 75 97 BF 96 BF 96 BF 96 9A 97 B2 97  // ..@.u...........
    9750: B6 97 BF 96 BF 96 BF 96 BF 96 BF 96 BF 96 E4 97  // ................
    9760: BF 96 E8 97 03 98 BF 96 42 98 BF 96 50 98 6B 98  // ........B...P.k.
    9770: 72 98 7E 98 A2 98 80 3E 49 04 13 74 15 E8 BF F4  // r.~....>I..t....
    9780: 8B C3 86 E0 E8 70 EF 0B ED 74 07 8A C7 32 FF 26  // .....p...t...2.&
    9790: 88 01 E8 93 F4 C3 E8 A6 F4 8A C7 E8 44 FC 0B ED  // ............D...
    97A0: 74 F0 26 88 7D 11 EB EA 80 3E 49 04 13 74 E3 06  // t.&.}....>I..t..
    97B0: E8 8C F4 1F 0B ED 74 07 8B F2 B9 11 00 F3 A4 8B  // ......t.........
    97C0: F2 E8 DE 01 32 E4 B9 10 00 B2 C0 9C FA 8A C4 EE  // ....2...........
    97D0: AC EE 9D FE C4 E2 F4 AC E8 07 FC EB B5 80 FB 01  // ................
    97E0: 77 B0 E8 43 F4 B2 C0 B0 30 E8 FB F0 24 F7 80 26  // w..C....0...$..&
    97F0: 65 04 DF 80 FB 00 74 07 0C 08 80 0E 65 04 20 EE  // e.....t.....e. .
    9800: EB 90 E8 9D 01 8A C3 B2 C0 E8 DB F0 8B C8 EE B0  // ................
    9810: 20 EE 8B EC 88 4E 0F E9 78 FF B3 11 EB E4 8B FA  //  ....N..x.......
    9820: E8 05 F4 B9 10 00 32 E4 B2 C0 8A C4 9C FA EE 42  // ......2........B
    9830: EC 26 88 05 FE C4 4A EE 9D 47 E2 EE 9C FA B0 11  // .&....J..G......
    9840: EE 42 EC 9D 26 88 05 E8 E3 F3 EB 5A E8 CE 00 C3  // .B..&......Z....
    9850: 8B FA 51 8B C3 26 8A 35 26 8A 6D 01 26 8A 4D 02  // ..Q..&.5&.m.&.M.
    9860: E8 CA 00 83 C7 03 43 59 E2 E8 C3 0A DB 75 1A E8  // ......CY.....u..
    9870: B6 F3 B2 C0 B0 30 E8 6E F0 24 7F F6 C7 01 74 02  // .....0.n.$....t.
    9880: 0C 80 B4 30 E8 70 EE EB 1D FE CB 75 1C E8 98 F3  // ...0.p.....u....
    9890: B2 C0 B0 30 E8 50 F0 EE A8 80 75 03 C0 E7 02 B4  // ...0.P....u.....
    98A0: 34 8A C7 E8 51 EE E8 7F F3 C3 8A C3 E8 D1 00 8B  // 4...Q...........
    98B0: EC 89 4E 16 88 76 13 C3 8B FA 51 8B C3 E8 C3 00  // ..N..v....Q.....
    98C0: 26 88 35 26 88 6D 01 26 88 4D 02 83 C7 03 43 59  // &.5&.m.&.M....CY
    98D0: E2 E8 C3 BA C6 03 8A C3 EE C3 BA C6 03 EC 32 E4  // ..............2.
    98E0: 8B EC 89 46 0E C3 E8 3F F3 B2 C0 B0 34 E8 F7 EF  // ...F...?....4...
    98F0: 8A F8 EE B0 30 E8 EF EF B3 01 A8 80 75 05 B3 00  // ....0.......u...
    9900: C0 EF 02 8B EC 89 5E 0E EB 9C 51 8B C3 E8 73 00  // ......^...Q...s.
    9910: E8 2A 00 8A C3 E8 52 00 43 59 E2 EE C3 F6 06 89  // .*....R.CY......
    9920: 04 02 74 03 E8 16 00 8A C3 E8 39 00 C3 F6 06 89  // ..t.......9.....
    9930: 04 02 74 03 E8 06 00 8A C3 E8 2E 00 C3 50 B0 1E  // ..t..........P..
    9940: F6 E6 50 B0 3B F6 E5 50 B0 0B F6 E1 59 03 C1 59  // ..P.;..P....Y..Y
    9950: 03 C1 B1 64 F6 F1 80 FC 32 7C 02 FE C0 8A F0 8A  // ...d....2|......
    9960: E8 8A C8 58 C3 52 E8 39 00 5A 53 8B DA BA C8 03  // ...X.R.9.ZS.....
    9970: 9C FA EE 42 8A C7 EE 8A C5 EE 8A C1 EE 9D 5B C3  // ...B..........[.
    9980: E8 1F 00 53 9C FA BA C7 03 EE 42 42 EC 8A F8 EB  // ...S......BB....
    9990: 00 EB 00 EC 8A E8 EB 00 EB 00 EC 8A C8 8A F7 9D  // ................
    99A0: 5B C3 50 51 E8 81 F2 B9 FF 7F EC A8 08 75 02 E2  // [.PQ.........u..
    99B0: F9 59 58 C3 2E 8E 1E 49 03 8B F8 24 0F 81 E7 F0  // .YX....I...$....
    99C0: 00 C1 EF 03 83 FF 06 7F 18 2E FF A5 66 99 6E 99  // ............f.n.
    99D0: 83 99 21 9A 7D 9A 3C 03 74 08 3C 04 7F 03 E8 CF  // ..!.}.<.t.<.....
    99E0: 01 C3 BA C4 03 B0 03 8A E3 EF C3 3C 04 77 F2 50  // ...........<.w.P
    99F0: 53 50 52 8B 16 63 04 B0 07 E8 EB EE 8A E0 D0 EC  // SPR..c..........
    9A00: 80 E4 01 A8 40 74 03 80 CC 02 B0 12 E8 D8 EE 40  // ....@t.........@
    9A10: A3 85 04 B0 09 E8 CF EE A8 80 74 04 D1 2E 85 04  // ..........t.....
    9A20: A1 85 04 8B D0 3D F4 01 73 1B BA E0 01 3D C2 01  // .....=..s....=..
    9A30: 73 13 BA 90 01 3D 7C 01 73 0B BA 5E 01 3D 4A 01  // s....=|.s..^.=J.
    9A40: 73 03 BA C8 00 89 16 85 04 5A 58 C6 06 84 04 FF  // s........ZX.....
    9A50: E8 5D 01 5B 58 8A DF 32 FF 0A C0 74 0E B3 0E 3C  // .].[X..2...t...<
    9A60: 01 74 08 B3 08 3C 02 74 02 B3 10 8A CB 8A E9 81  // .t...<.t........
    9A70: E9 01 02 80 F9 08 7E 04 81 E9 01 01 87 1E 85 04  // ......~.........
    9A80: 53 E8 5B F2 5B E8 8D 02 C3 0A C0 74 11 FE C8 74  // S.[.[......t...t
    9A90: 1A FE C8 74 38 FE C8 74 3C FE C8 74 40 C3 89 2E  // ...t8..t<..t@...
    9AA0: 7C 00 8C 06 7E 00 C3 8C C8 8E C0 FE CA 0A DB 74  // |...~..........t
    9AB0: 07 32 FF 2E 8A 97 61 9A 89 0E 85 04 88 16 84 04  // .2....a.........
    9AC0: 89 2E 0C 01 8C 06 0E 01 C3 00 0D 18 2A E8 42 03  // ............*.B.
    9AD0: B9 0E 00 EB D6 BD B8 68 B9 08 00 EB CA BD CB 70  // .......h.......p
    9AE0: B9 10 00 EB C2 0A C0 75 BD 8B 0E 85 04 8A 16 84  // .......u........
    9AF0: 04 80 FF 07 77 35 80 FF 01 77 10 0A FF 75 06 C4  // ....w5...w...u..
    9B00: 2E 7C 00 EB 26 C4 2E 0C 01 EB 20 80 FF 02 75 0B  // .|..&..... ...u.
    9B10: 8C CD 8E C5 2E 8B 2E AA 81 EB 10 0E 07 8A DF 32  // ...............2
    9B20: FF 80 EB 02 D1 E3 2E 8B AF D4 9A 8B C5 8B EC 89  // ................
    9B30: 4E 16 89 56 12 89 46 0A 8C 46 1E C3 CB 70 B8 68  // N..V..F..F...p.h
    9B40: B8 6C B8 70 CB 70 CB 80 53 06 8A 26 49 04 E8 A1  // .l.p.p..S..&I...
    9B50: C1 26 8A 47 02 26 8A 67 33 F6 C4 01 74 22 BD CB  // .&.G.&.g3...t"..
    9B60: 70 3C 10 7D 0E E8 AA 02 8C 06 0E 01 3C 0E 7D 07  // p<.}........<.}.
    9B70: BD B8 68 8C 0E 0E 01 89 2E 0C 01 E8 18 01 EB 2D  // ..h............-
    9B80: B4 84 3C 10 7D 13 B4 81 3C 0E 74 0D 7F 15 B4 02  // ..<.}...<.t.....
    9B90: 3C 08 74 05 80 CC 80 EB 0A 26 F6 47 05 01 74 03  // <.t......&.G..t.
    9BA0: 80 E4 7F 86 C4 32 DB E8 06 00 E8 02 02 07 5B C3  // .....2........[.
    9BB0: 8B F8 8B F2 BA CE 03 EC B8 05 00 EF B8 06 04 EF  // ................
    9BC0: B2 C4 EC B8 02 04 EF B8 04 07 EF 8B D6 8B C7 50  // ...............P
    9BD0: 24 7F 0A C0 74 22 0E 07 33 D2 B9 00 01 3C 04 75  // $...t"..3....<.u
    9BE0: 07 B7 10 BD CB 70 EB 10 FE C8 75 07 B7 0E E8 21  // .....p....u....!
    9BF0: 02 EB 05 B7 08 BD B8 68 E8 35 00 58 A8 80 74 08  // .......h.5.X..t.
    9C00: E8 0B 71 75 03 E8 76 01 BA C4 03 B8 02 03 EF B8  // ..qu..v.........
    9C10: 04 02 EF B2 CC EC A8 01 B8 06 0E 75 02 B4 0A B2  // ...........u....
    9C20: CE 50 EC 58 EF B0 04 EE 32 C0 EE B8 05 10 EF C3  // .P.X....2.......
    9C30: FC 0B C9 75 01 C3 80 FF 0E 75 0A 26 83 7E FE 10  // ...u.....u.&.~..
    9C40: 75 03 80 CD 80 1E 06 1F 2E 8E 06 4B 03 8B FA C1  // u..........K....
    9C50: E7 05 B0 40 53 80 E3 03 F6 E3 5B F6 C3 04 74 02  // ...@S.....[...t.
    9C60: 04 20 86 E0 8B D0 03 FA 8B F5 E3 28 32 C0 86 FB  // . .........(2...
    9C70: 32 FF 51 F6 C5 80 74 01 46 8B CB F3 A4 83 FB 20  // 2.Q...t.F...... 
    9C80: 74 07 B9 20 00 2B CB F3 AA 59 F6 C5 80 74 01 46  // t.. .+...Y...t.F
    9C90: FE C9 75 DE 1F C3 8A 26 49 04 50 06 57 C4 3E A8  // ..u....&I.P.W.>.
    9CA0: 04 26 C4 7D 0C 8C C5 0B EF 74 30 8B EF 83 C7 07  // .&.}.....t0.....
    9CB0: 26 8A 05 3C FF 74 24 38 E0 74 03 47 EB F2 8B FD  // &..<.t$8.t.G....
    9CC0: 26 8A 05 FE C8 A2 84 04 26 8B 45 01 A3 85 04 26  // &.......&.E....&
    9CD0: C4 7D 03 89 3E 0C 01 8C 06 0E 01 5F 07 58 C3 26  // .}..>......_.X.&
    9CE0: F6 47 33 01 74 01 C3 C4 1E A8 04 26 C4 5F 08 8C  // .G3.t......&._..
    9CF0: C0 0B C3 74 1F BF 0B 00 26 8A 01 3C FF 74 15 47  // ...t....&..<.t.G
    9D00: 38 06 49 04 75 F2 26 8A 07 32 E4 87 06 85 04 8B  // 8.I.u.&..2......
    9D10: D8 E8 01 00 C3 8B 16 63 04 8A 26 85 04 FE CC 80  // .......c..&.....
    9D20: E4 1F 9C FA 80 FA D4 74 0B B0 14 EE 42 EC 24 E0  // .......t....B.$.
    9D30: 0A C4 EE 4A B0 09 EE 42 EC 24 E0 0A C4 EE 9D 8A  // ...J...B.$......
    9D40: C8 8B C3 8A 16 85 04 F6 F2 80 3E 84 04 FF 75 07  // ..........>...u.
    9D50: A2 84 04 FE 0E 84 04 F6 E2 F6 C1 80 74 02 D1 E0  // ............t...
    9D60: 48 8A E0 B0 12 8B 16 63 04 EF A0 4A 04 8A 26 84  // H......c...J..&.
    9D70: 04 FE C4 F6 E4 D1 E0 05 00 01 A3 4C 04 C3 1E 32  // ...........L...2
    9D80: FF 8A DC BE CB 80 80 FB 10 74 0A BE B8 70 80 FB  // .........t...p..
    9D90: 0E 74 02 1F C3 0E 1F 8B 3C 0B FF 74 10 81 E7 FF  // .t......<..t....
    9DA0: 00 46 C1 E7 05 03 FA 8B CB F3 A4 EB EA 1F C3 8A  // .F..............
    9DB0: 26 49 04 50 06 57 C4 3E A8 04 26 C4 7D 08 8C C5  // &I.P.W.>..&.}...
    9DC0: 0B EF 74 4A 8B EF 83 C7 0B 26 8A 05 3C FF 74 3E  // ..tJ.....&..<.t>
    9DD0: 38 E0 74 03 47 EB F2 8B FD 26 8A 3D 26 8A 5D 01  // 8.t.G....&.=&.].
    9DE0: 26 8B 4D 02 26 8B 55 04 26 8A 45 0A 3C FF 74 02  // &.M.&.U.&.E.<.t.
    9DF0: FE C8 50 A0 84 04 FE C0 F6 26 85 04 A3 85 04 58  // ..P......&.....X
    9E00: A2 84 04 26 C4 7D 06 8B EF 32 C0 E8 A2 FD 5F 07  // ...&.}...2...._.
    9E10: 58 C3 50 53 51 52 2E A1 53 03 0B C0 74 09 2E 8B  // X.PSQR..S...t...
    9E20: 2E AA 81 0E 07 EB 08 B8 30 11 B7 02 E8 4D BC 5A  // ........0....M.Z
    9E30: 59 5B 58 C3 3C 04 7C 01 C3 E3 FD 53 2E 8E 1E 49  // Y[X.<.|....S...I
    9E40: 03 86 FB 32 FF D1 E3 8B FB 81 C7 50 04 8B 35 5B  // ...2.......P..5[
    9E50: 89 15 56 8B F0 51 53 26 8A 46 00 45 3C 0D 7F 1F  // ..V..QS&.F.E<...
    9E60: 75 04 32 D2 EB 40 3C 0A 74 32 3C 07 75 05 E8 E9  // u.2..@<.t2<.u...
    9E70: 68 EB 62 3C 08 75 08 0A D2 74 5A FE CA EB 27 F7  // h.b<.u...tZ...'.
    9E80: C6 02 00 74 05 26 8A 5E 00 45 B9 01 00 B4 09 E8  // ...t.&.^.E......
    9E90: EA BB FE C2 3A 16 4A 04 72 0C 32 D2 89 15 3A 36  // ....:.J.r.2...:6
    9EA0: 84 04 73 06 FE C6 89 15 EB 2B 50 E8 74 EA 75 08  // ..s......+P.t.u.
    9EB0: B8 00 08 E8 C6 BB EB 09 80 3E 49 04 07 74 F1 32  // .........>I..t.2
    9EC0: E4 86 3E 62 04 53 8A FC 55 E8 25 00 5D 5B 86 3E  // ..>b.S..U.%.][.>
    9ED0: 62 04 58 8B 15 5B 59 E2 15 5A F7 C6 01 00 75 02  // b.X..[Y..Z....u.
    9EE0: 89 15 8B 05 3A 3E 62 04 75 03 E8 FB EC C3 E9 64  // ....:>b.u......d
    9EF0: FF 33 C9 8A 36 84 04 8A 16 4A 04 FE CA B8 01 06  // .3..6....J......
    9F00: E8 79 BB C3 2E 8E 1E 49 03 0A C0 75 0D E8 18 00  // .y.....I...u....
    9F10: 8B EC 89 5E 0E C6 46 1A 1A C3 3C 01 75 09 E8 41  // ...^..F...<.u..A
    9F20: 00 8B EC C6 46 1A 1A C3 A0 8A 04 BF 9A 9F 2E 3A  // ....F..........:
    9F30: 05 72 04 BB FF FF C3 32 E4 D1 E0 03 F8 2E 8B 5D  // .r.....2.......]
    9F40: 04 0A DB 74 05 0A FF 75 04 C3 86 FB C3 A0 10 04  // ...t...u........
    9F50: 24 30 3C 30 74 06 F6 C3 01 75 EF C3 F6 C3 01 74  // $0<0t....u.....t
    9F60: E9 C3 BF 9A 9F 2E 8A 0D 32 C0 83 C7 04 2E 3B 1D  // ........2.....;.
    9F70: 74 12 86 FB 2E 3B 1D 74 0B 83 C7 02 FE C0 38 C8  // t....;.t......8.
    9F80: 7E EB B0 FF A2 8A 04 C3 BB 08 00 F6 06 89 04 02  // ~...............
    9F90: 74 0E BB 07 00 BA CC 03 EC A8 01 74 18 BB 08 00  // t..........t....
    9FA0: BA B4 03 E8 A6 EC 74 21 B7 01 E8 53 E9 80 FA D4  // ......t!...S....
    9FB0: 74 17 86 FB C3 BA D4 03 E8 91 EC 74 0C B7 02 E8  // t..........t....
    9FC0: 3E E9 80 FA B4 74 02 86 FB C3 0F 08 0F 08 0F 08  // >....t..........
    9FD0: 0F 08 03 01 03 01 01 01 00 08 01 01 01 01 01 01  // ................
    9FE0: 01 01 0F 01 0F 08 0F 04 00 02 0F 02 01 01 0F 01  // ................
    9FF0: FF 01 FF E0 0F 00 00 00 00 07 02 08 FF 0E 00 00  // ................
    A000: 3F 00 10 01 08 00 00 00 00 01 00 02 02 01 00 04  // ?...............
    A010: 04 01 00 05 02 05 00 06 01 06 05 06 00 08 01 08  // ................
    A020: 00 07 02 07 06 07 55 02 34 00 90 00 D2 00 00 00  // ......U.4.......
    A030: 00 00 00 00 5F 57 C3 90 50 66 52 E8 F4 FF FF FF  // ...._W..PfR.....
    A040: 81 EF 10 00 00 00 2E 8B 07 66 BA F8 0C EF 66 BA  // .........f....f.
    A050: FC 0C ED 32 C0 66 8B F8 66 5A 58 C3 66 B8 4F 03  // ...2.f..fZX.f.O.
    A060: 66 52 66 56 53 57 50 0A FF 75 44 E8 C8 FF FF FF  // fRfVSWP..uD.....
    A070: 66 33 F6 66 BB D0 05 E8 00 01 00 00 C1 E8 10 F6  // f3.f............
    A080: C4 40 75 2B 66 81 E2 FF 02 66 D1 E2 66 8B C2 66  // .@u+f....f..f..f
    A090: 40 C1 E0 10 66 8B C2 66 BB 13 00 E8 E8 00 00 00  // @...f..f........
    A0A0: 66 BB 12 00 E8 DF 00 00 00 66 58 32 E4 66 50 58  // f........fX2.fPX
    A0B0: 5F 5B 66 5E 66 5A C3 90 66 B8 4F 03 52 51 53 57  // _[f^fZ..f.O.RQSW
    A0C0: 66 56 50 8A FB 80 E3 7F 0A DB 75 26 E8 67 FF FF  // fVP.......u&.g..
    A0D0: FF C1 E2 10 66 8B D1 C1 E2 02 66 BE 00 00 E8 C7  // ....f.....f.....
    A0E0: 00 00 00 66 BE 00 02 E8 BE 00 00 00 66 58 32 E4  // ...f........fX2.
    A0F0: 66 50 58 66 5E 5F 5B 59 5A C3 66 B8 4F 03 66 51  // fPXf^_[YZ.f.O.fQ
    A100: 57 56 53 52 50 8A FB 80 E3 7F 0A DB 75 39 8A DA  // WVSRP.......u9..
    A110: 57 5A E8 21 FF FF FF 66 33 F6 66 53 66 BB D0 05  // WZ.!...f3.fSf...
    A120: E8 57 00 00 00 80 E4 01 66 5B 80 E7 FE 0A FC 66  // .W......f[.....f
    A130: BE 00 00 E8 DE 00 00 00 66 BE 00 02 E8 D5 00 00  // ........f.......
    A140: 00 66 58 32 E4 66 50 58 5A 5B 5E 5F 66 59 C3 90  // .fX2.fPXZ[^_fY..
    A150: 53 50 51 F6 C7 80 74 20 66 BB 9C 1B E8 1B 00 00  // SPQ...t f.......
    A160: 00 A8 01 74 13 66 B9 FF FF 66 BB A3 1B E8 0A 00  // ...t.f...f......
    A170: 00 00 A8 01 75 02 E2 F1 59 58 5B C3 66 52 E8 11  // ....u...YX[.fR..
    A180: 00 00 00 ED 66 5A C3 90 66 52 E8 05 00 00 00 EF  // ....fZ..fR......
    A190: 66 5A C3 90 66 8B D7 50 33 C0 66 8B C3 66 03 C6  // fZ..f..P3.f..f..
    A1A0: C1 E0 02 EF 66 83 C2 04 58 C3 52 E8 A0 FF FF FF  // ....f...X.R.....
    A1B0: 81 E2 FF FF FF 02 66 BB 04 1A E8 BD FF FF FF 25  // ......f........%
    A1C0: 00 00 00 FD 03 C2 66 25 00 F0 E8 B9 FF FF FF 66  // ......f%.......f
    A1D0: BB 05 1A E8 B0 FF FF FF 66 81 E2 FF 0F 66 BB 01  // ........f....f..
    A1E0: 1A E8 96 FF FF FF 24 03 8A C8 66 D3 EA 66 BB 06  // ......$...f..f..
    A1F0: 1A E8 86 FF FF FF 66 03 C2 66 BB 0D 1A E8 86 FF  // ......f..f......
    A200: FF FF 66 8B C2 24 FC C1 E0 10 66 BB 5C 1B E8 75  // ..f..$....f.\..u
    A210: FF FF FF 5A C3 90 52 66 53 66 51 E8 30 FF FF FF  // ...Z..RfSfQ.0...
    A220: 33 C0 8A C3 66 53 66 BB 79 1A E8 59 FF FF FF 66  // 3...fSf.y..Y...f
    A230: 5B 66 49 66 81 E1 FF 00 66 41 32 C0 66 53 66 BB  // [fIf....fA2.fSf.
    A240: 78 1A E8 41 FF FF FF 66 5B 26 8A 42 02 C1 E0 0A  // x..A...f[&.B....
    A250: 26 8A 42 01 C1 E0 0A 26 8A 02 C1 E0 02 F6 C7 01  // &.B....&........
    A260: 75 03 C1 E0 02 66 53 66 BB 7C 1A E8 18 FF FF FF  // u....fSf.|......
    A270: 66 5B 83 C2 04 E2 D2 66 59 66 5B 5A C3 00 A6 43  // f[.....fYf[Z...C
    A280: 99 43 99 43 99 43 84 43 84 43 84 43 84 43 C6 3F  // .C.C.C.C.C.C.C.?
    A290: 3D 40 67 40 A8 41 A7 41 A7 41 ED 41 52 42 82 42  // =@g@.A.A.A.ARB.B
    A2A0: 3F 43 68 43 68 43 DF 41 D2 41 D2 41 D2 41 D2 41  // ?ChChC.A.A.A.A.A
    A2B0: D2 41 ED 41 52 42 82 42 3F 43 6D 43 B3 43 68 43  // .A.ARB.B?CmC.ChC
    A2C0: 68 43 FF FF FF FF FF FF 00 00 FF FF 00 00 FF FF  // hC..............
    A2D0: 00 00 FF 00 00 00 FF 00 00 00 FF 00 00 00 FF 00  // ................
    A2E0: 00 00 00 00 08 10 00 08 10 18 00 08 10 18 CA 3D  // ...............=
    A2F0: 01 CA 3D 02 43 52 03 23 52 03 EF 3E 03 A3 3E 03  // ..=.CR.#R..>..>.
    A300: CB 3D 04 E4 3D 04 F4 3D 04 CA 3D 03 00 00 00 00  // .=..=..=..=.....
    A310: 77 45 00 02 77 45 01 02 77 45 02 02 77 45 03 02  // wE..wE..wE..wE..
    A320: 77 45 04 02 77 45 05 02 71 47 00 02 71 47 01 02  // wE..wE..qG..qG..
    A330: 71 47 02 02 71 47 03 02 71 47 04 02 71 47 05 02  // qG..qG..qG..qG..
    A340: A6 47 00 02 A6 47 01 02 A6 47 02 02 A6 47 03 02  // .G...G...G...G..
    A350: A6 47 04 02 A6 47 05 02 BD 49 00 02 BD 49 01 02  // .G...G...I...I..
    A360: BD 49 02 02 BD 49 03 02 BD 49 04 02 BD 49 05 02  // .I...I...I...I..
    A370: BD 49 00 02 BD 49 01 02 BD 49 02 02 BD 49 03 02  // .I...I...I...I..
    A380: BD 49 04 02 BD 49 05 02 A8 48 00 02 A8 48 01 02  // .I...I...H...H..
    A390: A8 48 02 02 A8 48 03 02 A8 48 04 02 A8 48 05 02  // .H...H...H...H..
    A3A0: D2 48 00 02 D2 48 01 02 D2 48 02 02 D2 48 03 02  // .H...H...H...H..
    A3B0: D2 48 04 02 D2 48 05 02 55 48 00 02 55 48 01 02  // .H...H..UH..UH..
    A3C0: 55 48 02 02 55 48 03 02 55 48 04 02 55 48 05 02  // UH..UH..UH..UH..
    A3D0: 89 48 00 02 89 48 01 02 89 48 02 02 89 48 03 02  // .H...H...H...H..
    A3E0: 89 48 04 02 89 48 05 02 15 4C 00 00 48 4C 01 00  // .H...H...L..HL..
    A3F0: 48 4C 02 00 35 4C 00 00 23 4B 00 02 1C 49 00 02  // HL..5L..#K...I..
    A400: 1C 49 01 02 1C 49 02 02 1C 49 03 02 1C 49 04 02  // .I...I...I...I..
    A410: 1C 49 05 02 3B 4B 00 02 90 4D 05 00 90 4D 01 00  // .I..;K...M...M..
    A420: 90 4D 00 00 90 4D 02 00 D1 4D 00 00 D1 4D 02 00  // .M...M...M...M..
    A430: 16 4E 00 00 A6 4A 00 02 A6 4A 01 02 A6 4A 02 02  // .N...J...J...J..
    A440: A6 4A 03 02 A6 4A 04 02 A6 4A 05 02 62 4C 00 00  // .J...J...J..bL..
    A450: 8A 4C 00 00 0B 4D 00 00 86 4D 00 00 6A 49 00 02  // .L...M...M..jI..
    A460: 6A 49 01 02 6A 49 02 02 6A 49 03 02 6A 49 04 02  // jI..jI..jI..jI..
    A470: 6A 49 05 02 85 4D 00 01 85 4D 00 01 AD 46 00 02  // jI...M...M...F..
    A480: AD 46 01 02 AD 46 02 02 AD 46 03 02 AD 46 04 02  // .F...F...F...F..
    A490: AD 46 05 02 AA 4C 00 00 86 4D 00 00 86 4D 00 00  // .F...L...M...M..
    A4A0: 86 4D 00 00 BB 4B 00 00 D1 47 00 02 D1 47 01 02  // .M...K...G...G..
    A4B0: D1 47 02 02 D1 47 03 02 D1 47 04 02 D1 47 05 02  // .G...G...G...G..
    A4C0: 00 48 00 02 00 48 01 02 00 48 02 02 00 48 03 02  // .H...H...H...H..
    A4D0: 00 48 04 02 00 48 05 02 36 48 00 02 36 48 01 02  // .H...H..6H..6H..
    A4E0: 36 48 02 02 36 48 03 02 36 48 04 02 36 48 05 02  // 6H..6H..6H..6H..
    A4F0: CD 4C 00 00 F0 4C 00 00 A6 00 01 01 58 BE 6A BE  // .L...L......X.j.
    A500: C2 BE 00 00 BC E9 F8 BE 00 00 00 00 00 00 2A BF  // ..............*.
    A510: 2A C0 00 00 6C C0 C0 C5 00 00 00 00 00 00 46 E9  // *...l.........F.
    A520: 00 00 26 C8 6E C8 00 00 00 00 00 00 00 00 00 00  // ..&.n...........
    A530: 00 00 00 00 0E F4 00 00 00 00 00 00 00 00 FC C8  // ................
    A540: 74 C9 E8 C9 26 CA 46 CB 00 00 00 00 72 CB 00 00  // t...&.F.....r...
    A550: 8C CB 6A CC 1A CE 68 CE 00 00 00 00 F8 CE 86 CF  // ..j...h.........
    A560: DA D0 46 F4 00 00 20 F6 B4 E4 00 00 D6 E6 00 00  // ..F... .........
    A570: 00 00 00 00 40 E7 00 00 00 00 00 00 00 00 14 E8  // ....@...........
    A580: 00 00 88 E9 00 00 18 F6 00 00 0E C8 00 00 88 E8  // ................
    A590: 00 00 CC F6 32 EB 00 00 66 F1 B2 F3 00 00 4A 00  // ....2...f.....J.
    A5A0: 01 01 00 00 00 00 00 00 80 A5 64 A6 D0 A6 D4 A9  // ..........d.....
    A5B0: BA B1 00 00 00 00 A6 AA FC AA 08 AD 24 AD 00 00  // ............$...
    A5C0: 98 AD 00 00 A2 B1 00 00 00 00 00 00 00 00 98 AF  // ................
    A5D0: FA B0 00 00 00 00 28 B1 68 B1 00 00 00 00 08 AB  // ......(.h.......
    A5E0: 00 00 00 00 00 00 00 00 E4 00 01 02 4E 0C 80 02  // ............N...
    A5F0: C0 00 90 01 2D 00 20 00 40 00 01 00 03 00 00 00  // ....-. .@.......
    A600: 00 00 00 00 02 00 E6 55 D6 09 80 02 A0 00 E0 01  // .......U........
    A610: 2D 00 10 00 60 00 0A 00 02 00 00 00 00 00 08 08  // -...`...........
    A620: 06 00 12 3C A0 0F 20 03 00 01 58 02 1C 00 28 00  // ...<.. ...X...(.
    A630: 80 00 01 00 04 00 00 00 00 00 00 00 00 00 6A 3C  // ..............j<
    A640: 64 19 00 04 40 01 00 03 26 00 18 00 88 00 03 00  // d...@...&.......
    A650: 06 00 00 00 00 00 00 00 06 00 55 3C 30 2A 00 05  // ..........U<0*..
    A660: 08 02 C0 03 28 00 60 00 70 00 01 00 03 00 00 00  // ....(.`.p.......
    A670: 00 00 00 00 00 00 E9 3C 30 2A 00 05 98 01 00 04  // .......<0*......
    A680: 2A 00 30 00 70 00 01 00 03 00 00 00 00 00 00 00  // *.0.p...........
    A690: 00 00 EA 3C 8F 2F 78 05 D0 01 1A 04 27 00 58 00  // ...<./x.....'.X.
    A6A0: 90 00 03 00 04 00 00 00 00 00 00 00 02 00 EB 3C  // ...............<
    A6B0: 48 3F 40 06 30 02 B0 04 32 00 40 00 C0 00 01 00  // H?@.0...2.@.....
    A6C0: 03 00 00 00 00 00 00 00 00 00 EC 3C 6C 00 02 02  // ...........<l...
    A6D0: 10 00 31 0F 40 9C 00 00 68 A0 01 00 00 00 00 00  // ..1.@...h.......
    A6E0: 40 7E 05 00 00 00 00 00 00 00 00 00 C0 D4 01 00  // @~..............
    A6F0: 00 00 00 00 E2 4A 01 00 00 00 00 00 58 02 B0 04  // .....J......X...
    A700: 00 00 00 00 60 EA 00 00 01 00 00 00 00 00 00 00  // ....`...........
    A710: 00 00 00 00 40 9C A3 02 88 13 00 00 3F 40 C0 12  // ....@.......?@..
    A720: 10 27 10 27 00 00 00 00 00 00 00 00 00 00 00 00  // .'.'............
    A730: 00 00 00 00 00 00 00 00 04 03 02 01 00 00 00 00  // ................
    A740: 00 2A 00 2A 00 00 2A 2A 2A 00 00 2A 00 2A 2A 15  // .*.*..***..*.**.
    A750: 00 2A 2A 2A 15 15 15 15 15 3F 15 3F 15 15 3F 3F  // .***.....?.?..??
    A760: 3F 15 15 3F 15 3F 3F 3F 15 3F 3F 3F 00 00 00 05  // ?..?.???.???....
    A770: 05 05 08 08 08 0B 0B 0B 0E 0E 0E 11 11 11 14 14  // ................
    A780: 14 18 18 18 1C 1C 1C 20 20 20 24 24 24 28 28 28  // .......   $$$(((
    A790: 2D 2D 2D 32 32 32 38 38 38 3F 3F 3F 00 00 3F 10  // ---222888???..?.
    A7A0: 00 3F 1F 00 3F 2F 00 3F 3F 00 3F 3F 00 2F 3F 00  // .?..?/.??.??./?.
    A7B0: 1F 3F 00 10 3F 00 00 3F 10 00 3F 1F 00 3F 2F 00  // .?..?..?..?..?/.
    A7C0: 3F 3F 00 2F 3F 00 1F 3F 00 10 3F 00 00 3F 00 00  // ??./?..?..?..?..
    A7D0: 3F 10 00 3F 1F 00 3F 2F 00 3F 3F 00 2F 3F 00 1F  // ?..?..?/.??./?..
    A7E0: 3F 00 10 3F 1F 1F 3F 27 1F 3F 2F 1F 3F 37 1F 3F  // ?..?..?'.?/.?7.?
    A7F0: 3F 1F 3F 3F 1F 37 3F 1F 2F 3F 1F 27 3F 1F 1F 3F  // ?.??.7?./?.'?..?
    A800: 27 1F 3F 2F 1F 3F 37 1F 3F 3F 1F 37 3F 1F 2F 3F  // '.?/.?7.??.7?./?
    A810: 1F 27 3F 1F 1F 3F 1F 1F 3F 27 1F 3F 2F 1F 3F 37  // .'?..?..?'.?/.?7
    A820: 1F 3F 3F 1F 37 3F 1F 2F 3F 1F 27 3F 2D 2D 3F 31  // .??.7?./?.'?--?1
    A830: 2D 3F 36 2D 3F 3A 2D 3F 3F 2D 3F 3F 2D 3A 3F 2D  // -?6-?:-??-??-:?-
    A840: 36 3F 2D 31 3F 2D 2D 3F 31 2D 3F 36 2D 3F 3A 2D  // 6?-1?--?1-?6-?:-
    A850: 3F 3F 2D 3A 3F 2D 36 3F 2D 31 3F 2D 2D 3F 2D 2D  // ??-:?-6?-1?--?--
    A860: 3F 31 2D 3F 36 2D 3F 3A 2D 3F 3F 2D 3A 3F 2D 36  // ?1-?6-?:-??-:?-6
    A870: 3F 2D 31 3F 00 00 1C 07 00 1C 0E 00 1C 15 00 1C  // ?-1?............
    A880: 1C 00 1C 1C 00 15 1C 00 0E 1C 00 07 1C 00 00 1C  // ................
    A890: 07 00 1C 0E 00 1C 15 00 1C 1C 00 15 1C 00 0E 1C  // ................
    A8A0: 00 07 1C 00 00 1C 00 00 1C 07 00 1C 0E 00 1C 15  // ................
    A8B0: 00 1C 1C 00 15 1C 00 0E 1C 00 07 1C 0E 0E 1C 11  // ................
    A8C0: 0E 1C 15 0E 1C 18 0E 1C 1C 0E 1C 1C 0E 18 1C 0E  // ................
    A8D0: 15 1C 0E 11 1C 0E 0E 1C 11 0E 1C 15 0E 1C 18 0E  // ................
    A8E0: 1C 1C 0E 18 1C 0E 15 1C 0E 11 1C 0E 0E 1C 0E 0E  // ................
    A8F0: 1C 11 0E 1C 15 0E 1C 18 0E 1C 1C 0E 18 1C 0E 15  // ................
    A900: 1C 0E 11 1C 14 14 1C 16 14 1C 18 14 1C 1A 14 1C  // ................
    A910: 1C 14 1C 1C 14 1A 1C 14 18 1C 14 16 1C 14 14 1C  // ................
    A920: 16 14 1C 18 14 1C 1A 14 1C 1C 14 1A 1C 14 18 1C  // ................
    A930: 14 16 1C 14 14 1C 14 14 1C 16 14 1C 18 14 1C 1A  // ................
    A940: 14 1C 1C 14 1A 1C 14 18 1C 14 16 1C 00 00 10 04  // ................
    A950: 00 10 08 00 10 0C 00 10 10 00 10 10 00 0C 10 00  // ................
    A960: 08 10 00 04 10 00 00 10 04 00 10 08 00 10 0C 00  // ................
    A970: 10 10 00 0C 10 00 08 10 00 04 10 00 00 10 00 00  // ................
    A980: 10 04 00 10 08 00 10 0C 00 10 10 00 0C 10 00 08  // ................
    A990: 10 00 04 10 08 08 10 0A 08 10 0C 08 10 0E 08 10  // ................
    A9A0: 10 08 10 10 08 0E 10 08 0C 10 08 0A 10 08 08 10  // ................
    A9B0: 0A 08 10 0C 08 10 0E 08 10 10 08 0E 10 08 0C 10  // ................
    A9C0: 08 0A 10 08 08 10 08 08 10 0A 08 10 0C 08 10 0E  // ................
    A9D0: 08 10 10 08 0E 10 08 0C 10 08 0A 10 0B 0B 10 0C  // ................
    A9E0: 0B 10 0D 0B 10 0F 0B 10 10 0B 10 10 0B 0F 10 0B  // ................
    A9F0: 0D 10 0B 0C 10 0B 0B 10 0C 0B 10 0D 0B 10 0F 0B  // ................
    AA00: 10 10 0B 0F 10 0B 0D 10 0B 0C 10 0B 0B 10 0B 0B  // ................
    AA10: 10 0C 0B 10 0D 0B 10 0F 0B 10 10 0B 0F 10 0B 0D  // ................
    AA20: 10 0B 0C 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    AA30: 00 00 00 00 00 00 00 00 00 00 00 00 D1 00 01 03  // ................
    AA40: CE 1D 56 05 E2 00 00 03 1E 00 30 00 20 00 03 00  // ..V.......0. ...
    AA50: 06 00 58 01 C2 00 00 00 04 02 00 3C 00 00 20 00  // ..X........<.. .
    AA60: 00 00 00 00 1C 3C 01 00 00 00 00 00 01 CB C8 00  // .....<..........
    AA70: 07 5A 5A 07 7D 00 00 00 0B 0A 01 41 34 21 00 00  // .ZZ.}......A4!..
    AA80: 00 00 00 00 00 00 00 00 04 80 00 00 00 00 00 00  // ................
    AA90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    AAA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    AAB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    AAC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    AAD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    AAE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    AAF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    AB00: 00 00 00 00 00 00 00 00 00 00 FF 00 00 00 55 00  // ..............U.
    AB10: 01 01 68 48 6A 48 6B 48 69 48 68 48 6A 48 6B 48  // ..hHjHkHiHhHjHkH
    AB20: 69 48 90 00 00 00 00 08 08 08 08 00 00 6C 48 6E  // iH...........lHn
    AB30: 48 6F 48 6D 48 6C 48 6E 48 6F 48 6D 48 91 00 00  // HoHmHlHnHoHmH...
    AB40: 00 00 08 08 08 08 00 00 70 48 72 48 73 48 71 48  // ........pHrHsHqH
    AB50: 70 48 72 48 73 48 71 48 92 00 00 00 00 08 08 08  // pHrHsHqH........
    AB60: 08 00 00 00 0C 00 01 05 E0 FF 07 00 20 00 20 00  // ............ . .
    AB70: 00 02 01 09 40 9C 00 00 40 7E 05 00 68 A0 01 00  // ....@...@~..h...
    AB80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    AB90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    ABA0: 00 00 00 00 00 00 00 00 12 00 00 00 00 00 00 00  // ................
    ABB0: C8 00 00 00 00 00 00 00 0B 00 00 00 00 00 00 00  // ................
    ABC0: 00 00 00 00 00 00 74 01 00 00 04 01 00 00 00 00  // ......t.........
    ABD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    ABE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    ABF0: 00 00 00 00 70 17 DC 05 00 00 00 00 00 00 00 00  // ....p...........
    AC00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    AC10: 00 00 00 00 13 03 30 75 00 00 2C 03 40 9C 00 00  // ......0u..,.@...
    AC20: 5E 03 F8 C1 00 00 84 03 91 F4 00 00 9D 03 DC 0B  // ^...............
    AC30: 01 00 C2 03 0E 28 01 00 CF 03 80 38 01 00 DB 03  // .....(.....8....
    AC40: E2 4A 01 00 00 00 00 00 00 00 00 00 00 00 00 00  // .J..............
    AC50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    AC60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    AC70: 00 00 00 00 00 00 00 00 4C 13 00 00 D0 07 00 00  // ........L.......
    AC80: 77 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // w...............
    AC90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    ACA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    ACB0: 00 00 00 00 68 A0 01 00 8C 04 01 00 00 00 00 00  // ....h...........
    ACC0: 00 00 00 00 00 00 00 00 B0 AD 01 00 B0 AD 01 00  // ................
    ACD0: B0 AD 01 00 70 11 01 00 64 00 64 00 64 00 7A 00  // ....p...d.d.d.z.
    ACE0: 07 00 00 00 8C 00 01 01 00 00 00 00 00 00 00 00  // ................
    ACF0: 00 00 00 00 00 00 00 00 02 00 10 01 14 31 00 00  // .............1..
    AD00: 00 00 E4 00 00 00 00 00 08 00 10 02 0C 31 01 01  // .............1..
    AD10: 00 00 E4 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    AD20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    AD30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    AD40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    AD50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    AD60: 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00  // ................
    AD70: 1C 00 01 01 8D 48 00 01 8D 48 08 02 8D 48 10 03  // .....H...H...H..
    AD80: 8D 48 18 04 8D 48 1A 05 8D 48 1C 06 74 00 01 01  // .H...H...H..t...
    AD90: 10 01 06 12 11 01 16 12 13 01 06 6A 14 01 16 6A  // ...........j...j
    ADA0: 16 01 06 55 17 01 16 55 19 01 06 EA 1A 01 16 EA  // ...U...U........
    ADB0: 65 01 16 E9 66 01 0A E9 21 01 0A 12 22 01 0A 6A  // e...f...!..."..j
    ADC0: 23 01 0A 55 24 01 0A EA 45 01 16 EB 46 01 0A EB  // #..U$...E...F...
    ADD0: 75 01 16 EC 76 01 0A EC D2 01 16 70 D4 01 0A 70  // u...v......p...p
    ADE0: D8 01 16 71 D9 01 0A 71 E2 01 16 72 E4 01 0A 72  // ...q...q...r...r
    ADF0: E8 01 16 73 E9 01 0A 73 F5 01 16 74 F6 01 0A 74  // ...s...s...t...t
    AE00: EF 01 06 01 00 00 00 00 00 58 00 60 00 82 00 00  // .........X.`....
    AE10: 00 00 00 58 00 02 00 00 00 13 00 00 80 00 00 00  // ...X............
    AE20: 00 00 00 00 00 00 00 00 17 00 00 00 B4 00 00 00  // ................
    AE30: 00 00 00 00 00 00 73 01 00 00 00 00 00 00 00 00  // ......s.........
    AE40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    AE50: 00 00 00 00 00 00 00 00 02 02 00 00 07 01 01 00  // ................
    AE60: 08 04 00 00 00 00 01 00 00 00 02 00 00 00 03 00  // ................
    AE70: 00 00 04 00 00 00 05 00 00 00 06 00 00 00 07 00  // ................
    AE80: 00 00 02 18 05 00 00 00 00 00 00 00 00 00 00 00  // ................
    AE90: 00 00 00 00 00 00 00 00 00 00 00 00 08 00 00 00  // ................
    AEA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    AEB0: 00 00 00 00 18 00 00 00 00 00 00 00 00 00 CC 00  // ................
    AEC0: 28 01 00 00 00 00 9C 01 00 00 C6 01 00 08 30 75  // (.............0u
    AED0: 00 30 75 00 40 9C 00 40 9C 00 59 D8 00 59 D8 00  // .0u.@..@..Y..Y..
    AEE0: AF FF 00 AF FF 00 0E 28 01 0E 28 01 E2 4A 01 E2  // .......(..(..J..
    AEF0: 4A 01 90 5F 01 90 5F 01 00 77 01 00 77 01 08 7A  // J.._.._..w..w..z
    AF00: 00 00 76 00 01 6E 00 02 68 00 03 64 00 04 5E 00  // ..v..n..h..d..^.
    AF10: 05 5C 00 06 5A 00 07 08 07 01 06 01 01 01 02 01  // .\..Z...........
    AF20: 01 01 02 01 03 01 04 01 00 08 40 9C 00 30 75 00  // ..........@..0u.
    AF30: 74 B5 00 A0 8C 00 60 EA 00 74 B5 00 40 19 01 60  // t.....`..t..@..`
    AF40: EA 00 80 38 01 DC 0B 01 E2 4A 01 40 19 01 90 5F  // ...8.....J.@..._
    AF50: 01 0E 28 01 00 77 01 80 38 01 08 7A 00 00 76 00  // ..(..w..8..z..v.
    AF60: 01 6E 00 02 68 00 03 64 00 04 5E 00 05 5C 00 06  // .n..h..d..^..\..
    AF70: 5A 00 07 08 20 4E 00 7A 00 30 75 00 76 00 40 9C  // Z... N.z.0u.v.@.
    AF80: 00 6E 00 74 B5 00 68 00 E5 C8 00 64 00 00 E1 00  // .n.t..h....d....
    AF90: 5E 00 AF FF 00 5C 00 DC 0B 01 5A 00 00 08 7A 00  // ^....\....Z...z.
    AFA0: 10 27 00 76 00 10 27 00 6E 00 10 27 00 68 00 10  // .'.v..'.n..'.h..
    AFB0: 27 00 64 00 10 27 00 5E 00 10 27 00 5C 00 10 27  // '.d..'.^..'.\..'
    AFC0: 00 5A 00 10 27 00 08 20 4E 00 00 00 30 75 00 00  // .Z..'.. N...0u..
    AFD0: 00 40 9C 00 00 00 74 B5 00 00 00 E5 C8 00 00 00  // .@....t.........
    AFE0: 00 E1 00 00 00 AF FF 00 00 00 DC 0B 01 00 00 00  // ................
    AFF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    B000: 62 01 01 03 0A 00 3A 00 00 00 BF 00 00 00 12 00  // b.....:.........
    B010: 2C 01 03 01 00 00 02 00 0C 00 14 31 00 11 1E 21  // ,..........1...!
    B020: 00 00 08 00 0C 00 0C 31 00 11 1E 22 00 00 00 00  // .......1..."....
    B030: 0C 00 00 00 00 11 20 21 00 00 03 00 00 00 14 31  // ...... !.......1
    B040: 56 00 5C 00 00 00 0C 31 79 00 7F 00 00 00 00 00  // V.\....1y.......
    B050: 9C 00 A2 00 00 00 01 1E 21 00 00 00 04 14 01 00  // ........!.......
    B060: 10 01 00 00 02 00 00 00 00 00 00 00 00 00 00 00  // ................
    B070: 01 04 90 00 02 04 01 00 FF 01 1E 22 00 00 00 04  // ..........."....
    B080: 14 01 00 10 02 00 00 08 00 00 00 00 00 00 00 00  // ................
    B090: 00 00 00 01 04 91 00 02 04 02 00 FF 01 23 22 00  // .............#".
    B0A0: 00 00 04 14 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    B0B0: 00 00 00 00 00 00 01 04 00 00 02 04 00 00 FF 05  // ................
    B0C0: 00 00 00 1E 21 EB 00 F1 00 00 00 22 21 F6 00 FC  // ....!......"!...
    B0D0: 00 00 00 1E 22 05 01 0B 01 00 00 23 22 10 01 18  // ...."......#"...
    B0E0: 01 00 00 20 21 21 01 27 01 00 00 01 00 11 01 14  // ... !!.'........
    B0F0: 31 14 04 03 00 FF 01 1E 21 01 15 31 01 04 00 00  // 1.......!..1....
    B100: 02 04 00 00 FF 01 00 11 01 0C 31 14 04 03 00 FF  // ..........1.....
    B110: 01 1E 22 02 15 32 15 33 01 04 00 00 02 04 00 00  // .."..2.3........
    B120: FF 01 00 11 01 23 22 14 04 03 00 FF 02 00 00 00  // .....#".........
    B130: 03 71 00 00 40 01 00 00 04 71 55 01 5B 01 00 00  // .q..@....qU.[...
    B140: 10 0A 01 02 03 00 00 00 00 00 11 0A 90 91 92 00  // ................
    B150: 00 00 00 00 FF 00 00 00 00 00 00 09 06 00 01 00  // ................
    B160: 00 FF 2D 00 01 01 01 03 02 38 00 06 10 00 00 03  // ..-......8......
    B170: 38 00 02 39 00 09 10 00 01 83 02 38 00 06 10 00  // 8..9.......8....
    B180: 00 03 38 00 08 20 00 00 03 39 00 09 26 00 00 00  // ..8.. ...9..&...
    B190: 40 00 03 01 FF FF FF 00 00 00 E4 0C 04 01 00 00  // @...............
    B1A0: FF FF FF 00 00 00 E4 0C 05 01 00 00 FF FF FF 00  // ................
    B1B0: 00 00 A0 0F 06 00 00 00 FF FF FF 00 77 01 E4 0C  // ............w...
    B1C0: 07 12 00 00 FF FF FF 00 77 01 00 00 0B 12 00 00  // ........w.......
    B1D0: 39 00 02 03 14 00 00 00 53 35 00 00 6E 03 02 03  // 9.......S5..n...
    B1E0: 00 00 00 00 1E 21 34 00 4C 00 03 FF FF 00 1E 22  // .....!4.L......"
    B1F0: 34 00 4C 00 09 FF FF 00 20 21 34 00 4C 00 0A FF  // 4.L..... !4.L...
    B200: FF 00 FF FF 02 04 00 04 FF 00 18 00 02 01 02 00  // ................
    B210: 08 00 80 00 00 02 00 04 00 08 40 00 01 00 10 00  // ..........@.....
    B220: FF FF 9E 0C 03 03 DA 02 22 00 52 00 CA 0B D6 0B  // ........".R.....
    B230: 00 00 00 00 5C 04 9F 05 EB 06 2E 08 71 09 99 0A  // ....\.......q...
    B240: 00 00 00 00 C0 48 00 1F C1 48 00 1F C2 48 00 1F  // .....H...H...H..
    B250: C3 48 00 1F CB 48 00 10 CD 48 00 10 C4 48 08 17  // .H...H...H...H..
    B260: CE 48 00 1F CF 48 00 1F D0 48 00 1F D1 48 00 1F  // .H...H...H...H..
    B270: D4 48 00 1F 2E 00 A4 38 02 07 77 77 F0 0F 00 00  // .H.....8..ww....
    B280: 00 00 00 00 00 00 00 00 00 00 00 00 0E 80 08 08  // ................
    B290: 01 00 20 84 C4 06 01 00 81 0A 01 00 01 00 0E 00  // .. .............
    B2A0: 02 00 00 00 FF FF 02 07 77 77 F0 0F 00 00 00 00  // ........ww......
    B2B0: 00 00 00 04 00 00 00 00 00 00 0E 80 08 08 01 00  // ................
    B2C0: 20 84 C4 06 01 00 9F 0A 01 00 01 00 0E 00 02 00  //  ...............
    B2D0: 00 00 74 40 03 02 77 77 F0 0F 00 00 00 00 00 00  // ..t@..ww........
    B2E0: 00 00 00 00 00 00 00 00 0E 80 08 08 01 00 20 84  // .............. .
    B2F0: C4 06 01 00 81 0A 01 00 01 00 0E 00 02 00 00 00  // ................
    B300: E4 57 03 02 77 77 F0 0F 00 00 00 00 00 00 00 0C  // .W..ww..........
    B310: 00 00 00 00 00 00 0E 80 08 08 01 00 20 84 C4 06  // ............ ...
    B320: 01 00 9F 0A 01 00 01 00 0E 00 02 00 00 00 30 75  // ..............0u
    B330: 03 02 11 11 A0 0A 00 00 00 00 00 00 00 1C 00 00  // ................
    B340: 00 00 00 00 0E 80 08 08 01 00 20 84 C4 06 01 00  // .......... .....
    B350: 9F 0A 01 00 01 80 08 00 02 00 00 00 FF FF 03 02  // ................
    B360: 11 11 A0 0A 00 00 00 00 00 00 00 1C 00 00 00 00  // ................
    B370: 00 00 0E 80 08 08 01 00 20 84 C4 06 01 00 9F 0A  // ........ .......
    B380: 01 00 01 00 0E 00 02 00 00 00 74 40 03 04 77 77  // ..........t@..ww
    B390: F0 0F 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    B3A0: 0E 80 08 08 01 00 20 84 C4 06 01 00 81 0A 01 00  // ...... .........
    B3B0: 01 00 0E 00 02 00 00 00 E4 57 03 04 77 77 F0 0F  // .........W..ww..
    B3C0: 00 00 00 00 00 00 00 0C 00 00 00 00 00 00 0E 80  // ................
    B3D0: 08 08 01 00 20 84 C4 06 01 00 9F 0A 01 00 01 00  // .... ...........
    B3E0: 0E 00 02 00 00 00 30 75 03 04 11 11 A0 0A 00 00  // ......0u........
    B3F0: 00 00 00 00 00 1C 00 00 00 00 00 00 0E 80 08 08  // ................
    B400: 01 00 20 84 C4 06 01 00 9F 0A 01 00 01 80 08 00  // .. .............
    B410: 02 00 00 00 FF FF 03 04 11 11 A0 0A 00 00 00 00  // ................
    B420: 00 00 00 1C 00 00 00 00 00 00 0E 80 08 08 01 00  // ................
    B430: 20 84 C4 06 01 00 9F 0A 01 00 01 00 0E 00 02 00  //  ...............
    B440: 00 00 74 40 03 07 77 77 F0 0F 00 00 00 00 00 00  // ..t@..ww........
    B450: 00 00 00 00 00 00 00 00 0E 80 08 08 01 00 20 84  // .............. .
    B460: C4 06 01 00 81 0A 01 00 01 00 0E 00 02 00 00 00  // ................
    B470: E4 57 03 07 77 77 F0 0F 00 00 00 00 00 00 00 0C  // .W..ww..........
    B480: 00 00 00 00 00 00 0E 80 08 08 01 00 20 84 C4 06  // ............ ...
    B490: 01 00 9F 0A 01 00 01 00 0E 00 02 00 00 00 30 75  // ..............0u
    B4A0: 03 07 11 11 A0 0A 00 00 00 00 00 00 00 1C 00 00  // ................
    B4B0: 00 00 00 00 0E 80 08 08 01 00 20 84 C4 06 01 00  // .......... .....
    B4C0: 9F 0A 01 00 01 00 0E 00 02 00 00 00 FF FF 03 07  // ................
    B4D0: 11 11 A0 0A 00 00 00 00 00 00 00 1C 00 00 00 00  // ................
    B4E0: 00 00 0E 80 08 08 01 00 20 84 C4 06 01 00 9F 0A  // ........ .......
    B4F0: 01 00 01 00 0E 00 02 00 00 00 00 00 00 07 80 01  // ................
    B500: C0 48 69 00 01 04 10 40 00 00 00 00 00 02 08 20  // .Hi....@....... 
    B510: 80 00 00 00 50 05 04 10 40 00 01 00 00 A0 0A 08  // ....P...@.......
    B520: 20 80 00 02 00 00 F0 0F 10 40 00 01 04 11 11 00  //  ........@......
    B530: 00 20 80 00 02 08 11 11 50 05 40 00 01 04 10 11  // . ......P.@.....
    B540: 11 A0 0A 80 00 02 08 20 22 22 00 00 00 01 00 00  // ....... ""......
    B550: 00 22 22 50 15 00 00 04 10 40 22 22 50 05 00 02  // .""P.....@""P...
    B560: 08 20 80 33 33 00 00 00 00 C1 48 0F 00 FF FF FF  // . .33.....H.....
    B570: FF FF 00 00 00 00 00 00 C2 48 45 00 B9 F4 B2 C9  // .........HE.....
    B580: FF 00 00 00 00 06 08 00 00 00 00 00 00 14 00 02  // ................
    B590: 48 00 00 00 00 00 01 40 01 05 02 00 00 00 00 04  // H......@........
    B5A0: 00 00 00 04 00 00 00 00 16 00 00 00 10 00 00 00  // ................
    B5B0: 00 08 00 00 00 20 00 00 00 00 03 00 00 C3 48 0F  // ..... ........H.
    B5C0: 00 FF FF FF FF FF 80 00 00 00 00 00 CB 48 0F 00  // .............H..
    B5D0: FF FF FF FF FF 00 00 00 00 00 00 CD 48 0F 00 FF  // ............H...
    B5E0: FF FF FF FF 04 80 00 00 00 00 C4 48 0F 00 FF FF  // ...........H....
    B5F0: FF FF FF 00 08 08 00 00 00 CE 48 0F 00 FF FF FF  // ..........H.....
    B600: FF FF 01 00 20 80 00 00 CF 48 0F 00 FF FF FF FF  // .... ....H......
    B610: FF C4 06 01 00 00 00 D0 48 18 00 FF FF 0F C0 FF  // ........H.......
    B620: 81 0A 01 00 00 00 F0 3F 00 9F 0A 01 00 00 00 D1  // .......?........
    B630: 48 3C 00 01 00 00 00 00 01 00 02 00 00 04 00 00  // H<..............
    B640: 00 01 00 0A 00 02 00 10 01 00 01 00 0C 00 FC F9  // ................
    B650: A7 FE FF 01 00 0E 00 00 00 40 00 00 01 00 01 00  // .........@......
    B660: 00 02 08 00 00 01 80 0F 00 00 00 D4 48 0F 00 FF  // ............H...
    B670: FF FF FF FF 02 00 00 00 00 00 00 00 00 00 00 07  // ................
    B680: 41 01 C0 48 69 00 01 04 10 40 00 00 00 00 00 02  // A..Hi....@......
    B690: 08 20 80 00 00 00 50 05 04 10 40 00 01 00 00 A0  // . ....P...@.....
    B6A0: 0A 08 20 80 00 02 00 00 F0 0F 10 40 00 01 04 11  // .. ........@....
    B6B0: 11 00 00 20 80 00 02 08 11 11 50 05 40 00 01 04  // ... ......P.@...
    B6C0: 10 11 11 A0 0A 80 00 02 08 20 22 22 00 00 00 01  // ......... ""....
    B6D0: 00 00 00 22 22 50 15 00 00 04 10 40 22 22 50 05  // ...""P.....@""P.
    B6E0: 00 02 08 20 80 33 33 00 00 00 00 C1 48 0F 00 FF  // ... .33.....H...
    B6F0: FF FF FF FF 00 00 00 00 00 00 C2 48 2A 00 B9 F6  // ...........H*...
    B700: FA C9 FF 00 00 00 00 06 08 00 00 00 00 00 00 14  // ................
    B710: 40 01 05 22 00 00 00 00 04 00 00 00 14 00 00 00  // @.."............
    B720: 00 08 00 00 C3 48 0F 00 FF FF FF FF FF 80 00 00  // .....H..........
    B730: 00 00 00 CB 48 0F 00 FF FF FF FF FF 00 00 00 00  // ....H...........
    B740: 00 00 CD 48 0F 00 FF FF FF FF FF 04 80 00 00 00  // ...H............
    B750: 00 C4 48 0F 00 FF FF FF FF FF 00 08 08 00 00 00  // ..H.............
    B760: CE 48 0F 00 FF FF FF FF FF 01 00 20 80 00 00 CF  // .H......... ....
    B770: 48 0F 00 FF FF FF FF FF C4 06 01 00 00 00 D0 48  // H..............H
    B780: 0F 00 FF FF FF FF FF 81 0A 01 00 00 00 D1 48 21  // ..............H!
    B790: 00 01 04 00 00 00 01 00 0A 00 02 00 10 01 00 01  // ................
    B7A0: 00 0C 00 FC FB EF FE FF 01 00 0E 00 00 00 D4 48  // ...............H
    B7B0: 0F 00 FF FF FF FF FF 02 00 00 00 00 00 00 00 00  // ................
    B7C0: 00 00 07 4A 01 C0 48 69 00 01 04 10 40 00 00 00  // ...J..Hi....@...
    B7D0: 00 00 02 08 20 80 00 00 00 50 05 04 10 40 00 01  // .... ....P...@..
    B7E0: 00 00 A0 0A 08 20 80 00 02 00 00 F0 0F 10 40 00  // ..... ........@.
    B7F0: 01 04 11 11 00 00 20 80 00 02 08 11 11 50 05 40  // ...... ......P.@
    B800: 00 01 04 10 11 11 A0 0A 80 00 02 08 20 22 22 00  // ............ "".
    B810: 00 00 01 00 00 00 22 22 50 15 00 00 04 10 40 22  // ......""P.....@"
    B820: 22 50 05 00 02 08 20 80 33 33 00 00 00 00 C1 48  // "P.... .33.....H
    B830: 0F 00 FF FF FF FF FF 00 00 00 00 00 00 C2 48 2A  // ..............H*
    B840: 00 B9 F6 FA C9 FF 00 00 00 00 06 08 00 00 00 00  // ................
    B850: 00 00 14 40 01 05 22 00 00 00 00 04 00 00 00 14  // ...@..".........
    B860: 00 00 00 00 08 00 00 C3 48 0F 00 FF FF FF FF FF  // ........H.......
    B870: 80 00 00 00 00 00 CB 48 0F 00 FF FF FF FF FF 00  // .......H........
    B880: 00 00 00 00 00 CD 48 0F 00 FF FF FF FF FF 04 80  // ......H.........
    B890: 00 00 00 00 C4 48 0F 00 FF FF FF FF FF 00 08 08  // .....H..........
    B8A0: 00 00 00 CE 48 0F 00 FF FF FF FF FF 01 00 20 80  // ....H......... .
    B8B0: 00 00 CF 48 0F 00 FF FF FF FF FF C4 06 01 20 00  // ...H.......... .
    B8C0: 00 D0 48 0F 00 FF FF FF FF FF 81 0A 01 00 00 00  // ..H.............
    B8D0: D1 48 2A 00 01 04 00 00 00 01 00 0A 00 00 00 F0  // .H*.............
    B8E0: 3F 00 01 00 00 00 FC FB 0F C0 FF 01 00 0E 00 02  // ?...............
    B8F0: 00 00 00 00 01 00 0C 00 00 00 D4 48 0F 00 FF FF  // ...........H....
    B900: FF FF FF 02 00 00 00 00 00 00 00 00 00 00 07 41  // ...............A
    B910: 01 C0 48 69 00 01 04 10 40 00 00 00 00 00 02 08  // ..Hi....@.......
    B920: 20 80 00 00 00 50 05 04 10 40 00 01 00 00 A0 0A  //  ....P...@......
    B930: 08 20 80 00 02 00 00 F0 0F 10 40 00 01 04 11 11  // . ........@.....
    B940: 00 00 20 80 00 02 08 11 11 50 05 40 00 01 04 10  // .. ......P.@....
    B950: 11 11 A0 0A 80 00 02 08 20 22 22 00 00 00 01 00  // ........ "".....
    B960: 00 00 22 22 50 15 00 00 04 10 40 22 22 50 05 00  // ..""P.....@""P..
    B970: 02 08 20 80 33 33 00 00 00 00 C1 48 0F 00 FF FF  // .. .33.....H....
    B980: FF FF FF 00 00 00 00 00 00 C2 48 2A 00 B9 F6 FA  // ..........H*....
    B990: C9 FF 00 00 00 00 06 08 00 00 00 00 00 00 14 40  // ...............@
    B9A0: 01 05 22 00 00 00 00 04 00 00 00 14 00 00 00 00  // ..".............
    B9B0: 08 00 00 C3 48 0F 00 FF FF FF FF FF 80 00 00 00  // ....H...........
    B9C0: 00 00 CB 48 0F 00 FF FF FF FF FF 00 00 00 00 00  // ...H............
    B9D0: 00 CD 48 0F 00 FF FF FF FF FF 04 80 00 00 00 00  // ..H.............
    B9E0: C4 48 0F 00 FF FF FF FF FF 00 08 08 00 00 00 CE  // .H..............
    B9F0: 48 0F 00 FF FF FF FF FF 01 00 20 80 00 00 CF 48  // H......... ....H
    BA00: 0F 00 FF FF FF FF FF C4 06 01 40 00 00 D0 48 0F  // ..........@...H.
    BA10: 00 FF FF FF FF FF 81 0A 01 00 00 00 D1 48 21 00  // .............H!.
    BA20: 01 04 00 00 00 01 00 0A 00 02 00 10 01 00 01 00  // ................
    BA30: 0C 00 FC FB EF FE FF 01 00 0E 00 00 00 D4 48 0F  // ..............H.
    BA40: 00 FF FF FF FF FF 02 00 00 00 00 00 00 00 00 00  // ................
    BA50: 00 07 41 01 C0 48 69 00 01 04 10 40 00 00 00 00  // ..A..Hi....@....
    BA60: 00 02 08 20 80 00 00 00 50 05 04 10 40 00 01 00  // ... ....P...@...
    BA70: 00 A0 0A 08 20 80 00 02 00 00 F0 0F 10 40 00 01  // .... ........@..
    BA80: 04 11 11 00 00 20 80 00 02 08 11 11 50 05 40 00  // ..... ......P.@.
    BA90: 01 04 10 11 11 A0 0A 80 00 02 08 20 22 22 00 00  // ........... ""..
    BAA0: 00 01 00 00 00 22 22 50 15 00 00 04 10 40 22 22  // .....""P.....@""
    BAB0: 50 05 00 02 08 20 80 33 33 00 00 00 00 C1 48 0F  // P.... .33.....H.
    BAC0: 00 FF FF FF FF FF 00 00 00 00 00 00 C2 48 2A 00  // .............H*.
    BAD0: B9 F6 FA C9 FF 00 00 00 00 06 08 00 00 00 00 00  // ................
    BAE0: 00 14 40 01 05 22 00 00 00 00 04 00 00 00 14 00  // ..@.."..........
    BAF0: 00 00 00 08 00 00 C3 48 0F 00 FF FF FF FF FF 80  // .......H........
    BB00: 00 00 00 00 00 CB 48 0F 00 FF FF FF FF FF 00 00  // ......H.........
    BB10: 00 00 00 00 CD 48 0F 00 FF FF FF FF FF 04 80 00  // .....H..........
    BB20: 00 00 00 C4 48 0F 00 FF FF FF FF FF 00 08 08 00  // ....H...........
    BB30: 00 00 CE 48 0F 00 FF FF FF FF FF 01 00 20 80 00  // ...H......... ..
    BB40: 00 CF 48 0F 00 FF FF FF FF FF C4 06 01 80 00 00  // ..H.............
    BB50: D0 48 0F 00 FF FF FF FF FF 81 0A 01 00 00 00 D1  // .H..............
    BB60: 48 21 00 01 04 00 00 00 01 00 0A 00 02 00 10 01  // H!..............
    BB70: 00 01 00 0C 00 FC FB EF FE FF 01 00 0E 00 00 00  // ................
    BB80: D4 48 0F 00 FF FF FF FF FF 02 00 00 00 00 00 00  // .H..............
    BB90: 00 00 00 00 07 26 01 C0 48 69 00 01 04 10 40 00  // .....&..Hi....@.
    BBA0: 00 00 00 00 02 08 20 80 00 00 00 50 05 04 10 40  // ...... ....P...@
    BBB0: 00 01 00 00 A0 0A 08 20 80 00 02 00 00 F0 0F 10  // ....... ........
    BBC0: 40 00 01 04 11 11 00 00 20 80 00 02 08 11 11 50  // @....... ......P
    BBD0: 05 40 00 01 04 10 11 11 A0 0A 80 00 02 08 20 22  // .@............ "
    BBE0: 22 00 00 00 01 00 00 00 22 22 50 15 00 00 04 10  // ".......""P.....
    BBF0: 40 22 22 50 05 00 02 08 20 80 33 33 00 00 00 00  // @""P.... .33....
    BC00: C1 48 0F 00 FF FF FF FF FF 00 00 00 00 00 00 C2  // .H..............
    BC10: 48 0F 00 FF FF FF FF FF 00 00 00 00 00 00 C3 48  // H..............H
    BC20: 0F 00 FF FF FF FF FF 80 00 00 00 00 00 CB 48 0F  // ..............H.
    BC30: 00 FF FF FF FF FF 00 00 00 00 00 00 CD 48 0F 00  // .............H..
    BC40: FF FF FF FF FF 04 80 00 00 00 00 C4 48 0F 00 FF  // ............H...
    BC50: FF FF FF FF 00 08 08 00 00 00 CE 48 0F 00 FF FF  // ...........H....
    BC60: FF FF FF 01 00 20 80 00 00 CF 48 0F 00 FF FF FF  // ..... ....H.....
    BC70: FF FF C4 06 01 20 00 00 D0 48 0F 00 FF FF FF FF  // ..... ...H......
    BC80: FF 81 0A 01 00 00 00 D1 48 21 00 FF FF 0F 00 00  // ........H!......
    BC90: 01 00 0A 00 00 00 F0 3F 00 01 00 0C 00 00 00 00  // .......?........
    BCA0: C0 FF 01 00 0E 00 00 00 D4 48 0F 00 FF FF FF FF  // .........H......
    BCB0: FF 02 00 00 00 00 00 00 00 00 00 00 07 2F 01 C0  // ............./..
    BCC0: 48 69 00 01 04 10 40 00 00 00 00 00 02 08 20 80  // Hi....@....... .
    BCD0: 00 00 00 50 05 04 10 40 00 01 00 00 A0 0A 08 20  // ...P...@....... 
    BCE0: 80 00 02 00 00 F0 0F 10 40 00 01 04 11 11 00 00  // ........@.......
    BCF0: 20 80 00 02 08 11 11 50 05 40 00 01 04 10 11 11  //  ......P.@......
    BD00: A0 0A 80 00 02 08 20 22 22 00 00 00 01 00 00 00  // ...... "".......
    BD10: 22 22 50 15 00 00 04 10 40 22 22 50 05 00 02 08  // ""P.....@""P....
    BD20: 20 80 33 33 00 00 00 00 C1 48 0F 00 FF FF FF FF  //  .33.....H......
    BD30: FF 00 00 00 00 00 00 C2 48 18 00 0F 3E F8 E0 83  // ........H...>...
    BD40: 00 00 00 00 F0 C1 07 1F 7C 00 00 00 14 00 00 C3  // ........|.......
    BD50: 48 0F 00 FF FF FF FF FF 80 00 00 00 00 00 CB 48  // H..............H
    BD60: 0F 00 FF FF FF FF FF 00 00 00 00 00 00 CD 48 0F  // ..............H.
    BD70: 00 FF FF FF FF FF 04 80 00 00 00 00 C4 48 0F 00  // .............H..
    BD80: FF FF FF FF FF 00 08 08 00 00 00 CE 48 0F 00 FF  // ............H...
    BD90: FF FF FF FF 01 00 20 80 00 00 CF 48 0F 00 FF FF  // ...... ....H....
    BDA0: FF FF FF C4 06 01 20 00 00 D0 48 0F 00 FF FF FF  // ...... ...H.....
    BDB0: FF FF 81 0A 01 00 00 00 D1 48 21 00 0F 00 00 00  // .........H!.....
    BDC0: 00 01 00 0A 00 80 FF 0F FF FF 01 00 0E 00 70 00  // ..............p.
    BDD0: F0 00 00 01 00 0C 00 00 00 D4 48 0F 00 FF FF FF  // ..........H.....
    BDE0: FF FF 02 00 00 00 00 00 00 00 00 00 C5 48 00 1F  // .............H..
    BDF0: C6 48 00 1F C7 48 10 1F 0E 00 48 3F 00 07 00 80  // .H...H....H?....
    BE00: 28 00 5D 00 12 00 10 00 78 69 00 07 00 00 1B 00  // (.].....xi......
    BE10: 5D 00 1A 00 00 00 90 7E 00 07 68 66 20 00 5D 00  // ]......~..hf .].
    BE20: 0A 00 00 00 F0 D2 00 07 00 00 36 00 5D 00 1A 00  // ..........6.]...
    BE30: 00 00 35 0C 02 07 00 00 50 00 1D 00 85 10 00 C0  // ..5.....P.......
    BE40: 6A 18 02 07 00 00 28 00 1D 00 32 10 00 A0 D4 30  // j.....(...2....0
    BE50: 02 07 00 00 14 00 1D 00 0A 10 00 80 FF FF 02 07  // ................
    BE60: 00 00 14 00 1D 00 2A 10 00 01 A0 0F 03 07 00 00  // ......*.........
    BE70: 50 00 1D 00 85 10 00 C0 4C 1D 03 07 00 00 14 00  // P.......L.......
    BE80: 1D 00 0A 10 00 80 74 40 03 07 00 00 14 00 1D 00  // ......t@........
    BE90: 0A 10 00 01 E4 57 03 07 00 00 14 00 5D 00 00 10  // .....W......]...
    BEA0: 00 01 30 75 03 07 00 00 1E 00 5D 00 11 10 00 02  // ..0u......].....
    BEB0: FF FF 03 07 00 00 3C 00 5D 00 22 00 00 02 00 00  // ......<.].".....
    BEC0: 12 00 01 02 00 08 52 47 52 02 52 05 0D 65 D0 05  // ......RGR.R..e..
    BED0: 02 5B 57 00 01 02 00 00 37 00 00 52 14 02 08 00  // .[W.....7..R....
    BEE0: 0D 1A 32 08 00 0B 1A 02 88 00 0E 1A 32 88 00 0C  // ..2.........2...
    BEF0: 1A 03 00 46 04 1A 09 05 46 FF FF FF 02 56 00 40  // ...F....F....V.@
    BF00: 03 20 40 01 1A 09 25 40 03 75 02 46 40 03 18 40  // . @...%@.u.F@..@
    BF10: 5C 1B 2D 02 46 40 27 00 46 06 1A 2D 08 40 5C 1B  // \.-.F@'.F..-.@\.
    BF20: 02 0A 01 41 02 8A 01 40 5B 00 36 00 01 01 00 00  // ...A...@[.6.....
    BF30: 37 00 00 01 05 00 0B 21 00 20 0F 5C 05 D3 0B 00  // 7......!. .\....
    BF40: 00 E0 FF E0 1B 32 00 01 05 02 14 A1 03 03 00 01  // .....2..........
    BF50: 05 03 14 A0 03 03 00 01 05 17 15 10 C1 10 40 5B  // ..............@[
    BF60: 32 00 01 01 00 00 37 00 00 54 20 24 15 56 00 41  // 2.....7..T $.V.A
    BF70: 03 88 41 09 08 01 02 01 0B 41 01 3A C9 00 41 15  // ..A......A.:..A.
    BF80: 05 41 08 01 02 C4 00 41 54 20 2B 08 0D 25 24 15  // .A.....AT +..%$.
    BF90: 03 5B FF 00 02 01 00 04 37 00 00 66 0C 03 0C 41  // .[......7..f...A
    BFA0: 00 00 2D 0A 41 42 2D 0D 42 04 00 3D 24 00 03 00  // ..-.AB-.B..=$...
    BFB0: 44 30 00 2D 0D 42 04 00 3E 0A 42 41 44 FB 00 43  // D0.-.B..>.BAD..C
    BFC0: 19 00 56 00 43 03 A4 41 02 00 03 F2 41 41 03 0C  // ..V.C..A....AA..
    BFD0: 41 00 00 3E 0D 41 00 00 44 FB 00 3E 0D 41 61 48  // A..>.A..D..>.AaH
    BFE0: 49 6B 00 3E E5 41 10 46 5F 00 1B 3D 41 01 43 6B  // Ik.>.A.F_..=A.Ck
    BFF0: 00 09 E5 41 03 15 3D 41 02 2D E5 41 0C 03 3A 43  // ...A..=A.-.A..:C
    C000: 41 54 00 00 00 33 0D 41 01 00 01 0A 00 00 41 0D  // AT...3.A......A.
    C010: 02 01 00 44 2D 0D 41 02 00 01 0A 00 00 41 03 32  // ...D-.A......A.2
    C020: 43 41 4B E5 00 01 49 D7 00 07 02 01 00 45 2D 0D  // CAK...I......E-.
    C030: 41 01 00 01 0A 00 00 41 4A 02 01 00 44 44 B9 00  // A......AJ...DD..
    C040: 03 29 43 00 0E A2 00 44 43 C1 00 03 29 43 00 08  // .)C....DC...)C..
    C050: A2 00 45 33 0D 41 03 00 01 0A 00 00 41 03 3A 43  // ..E3.A......A.:C
    C060: 41 07 02 01 00 45 43 FA 00 0D 02 01 00 44 33 0D  // A....EC......D3.
    C070: 41 01 00 01 0A 00 00 41 3D A5 00 01 44 F5 00 07  // A......A=...D...
    C080: 02 01 00 45 43 FA 00 0D 02 01 00 44 5B 55 20 00  // ...EC......D[U .
    C090: 5B 00 41 00 01 01 00 04 02 01 01 00 02 E5 01 02  // [.A.............
    C0A0: 52 3C 37 00 00 01 05 82 01 EC 00 22 D8 4A A5 83  // R<7........".J..
    C0B0: 01 01 44 13 00 01 05 82 01 D0 00 22 D8 01 39 83  // ..D........"..9.
    C0C0: 01 01 01 05 82 01 EC 00 22 D8 4A A5 83 01 01 44  // ........".J....D
    C0D0: 30 00 5B 00 54 05 01 06 00 00 37 00 00 3D 25 02  // 0.[.T.....7..=%.
    C0E0: 08 49 49 02 3D 05 00 00 00 00 00 44 33 02 07 25  // .II.=......D3..%
    C0F0: 1E 17 FE 54 20 68 18 02 01 01 00 4A 25 51 18 10  // ...T h.....J%Q..
    C100: 44 40 00 4B E5 02 40 44 40 00 02 05 00 40 9C 00  // D@.K..@D@....@..
    C110: 00 43 47 00 02 05 00 60 EA 00 00 52 3C 03 01 46  // .CG....`...R<..F
    C120: 00 3C F9 24 01 00 44 AC 00 02 05 00 07 00 00 00  // .<.$..D.........
    C130: 52 13 4A A5 24 01 10 44 5E 00 07 25 15 01 FE 03  // R.J.$..D^..%....
    C140: 00 40 24 01 03 FA 40 46 3E 25 40 00 49 7F 00 03  // .@$...@F>%@.I...
    C150: 25 40 68 01 02 24 01 40 4A A5 24 01 10 44 84 00  // %@h..$.@J.$..D..
    C160: 02 02 00 46 4A 25 51 18 10 44 AC 00 4B E5 02 40  // ...FJ%Q..D..K..@
    C170: 44 AC 00 02 05 00 06 00 04 00 52 13 02 02 00 46  // D.........R....F
    C180: 55 38 00 20 05 00 50 C3 00 00 03 02 46 40 20 05  // U8. ..P.....F@ .
    C190: 00 05 00 00 00 66 1E 56 00 41 03 0C 41 10 01 21  // .....f.V.A..A..!
    C1A0: 02 40 41 27 05 40 14 00 00 00 33 02 46 40 01 02  // .@A'.@....3.F@..
    C1B0: 42 01 46 01 02 46 01 46 01 02 4A 01 46 01 02 4E  // B.F..F.F..J.F..N
    C1C0: 01 46 03 0C 41 10 01 3E 0D 41 00 00 44 1A 01 01  // .F..A..>.A..D...
    C1D0: A5 15 01 01 01 05 13 01 00 0E 27 07 01 02 14 01  // ..........'.....
    C1E0: 46 0D 25 15 01 01 4A 65 15 01 02 44 12 01 55 38  // F.%...Je...D..U8
    C1F0: 03 56 00 46 01 05 82 01 88 01 22 D8 03 00 41 83  // .V.F......"...A.
    C200: 01 09 05 41 07 00 03 00 4C 25 41 07 44 8B 01 0E  // ...A....L%A.D...
    C210: E5 03 01 03 0D 46 40 9C 3E 25 41 04 44 5C 01 03  // .....F@.>%A.D\..
    C220: 0D 46 30 75 3E 25 41 03 44 5C 01 03 0D 46 10 27  // .F0u>%A.D\...F.'
    C230: 3E A5 41 00 44 8B 01 3E A5 41 02 49 71 01 1B 0D  // >.A.D..>.A.Iq...
    C240: 46 01 43 8B 01 3E A5 41 01 49 7C 01 15 0D 46 01  // F.C..>.A.I|...F.
    C250: 03 05 41 03 00 00 00 27 02 46 41 03 02 46 40 4A  // ..A....'.FA..F@J
    C260: 25 51 18 10 44 D7 01 4B E5 02 40 44 D7 01 3D 05  // %Q..D..K..@D..=.
    C270: 01 40 9C 00 00 46 D7 01 0E E5 03 02 66 FF 2D 0D  // .@...F......f.-.
    C280: 42 30 05 3D 04 01 00 00 47 BF 01 2D 0D 42 06 00  // B0.=....G..-.B..
    C290: 43 AF 01 02 04 01 00 00 02 0C 03 04 00 3D 02 01  // C............=..
    C2A0: 46 49 D7 01 0E E5 03 04 43 E7 01 4B E5 03 01 44  // FI......C..K...D
    C2B0: E7 01 02 05 00 05 00 00 00 52 13 02 01 00 01 52  // .........R.....R
    C2C0: 3C 02 01 02 00 55 38 02 3C 39 24 01 00 44 11 02  // <....U8.<9$..D..
    C2D0: 4A A5 24 01 08 44 FC 01 01 39 24 01 00 4A A5 24  // J.$..D...9$..J.$
    C2E0: 01 08 44 09 02 4B E5 03 02 44 2E 02 02 01 02 01  // ..D..K...D......
    C2F0: 4B E5 03 04 49 2E 02 02 89 00 03 02 0D 00 04 00  // K...I...........
    C300: 52 13 02 01 00 02 5B 3A 00 00 0D 25 1E 17 01 0D  // R.....[:...%....
    C310: 25 68 18 01 4A 65 68 18 01 44 40 02 5B 4B 05 00  // %h..Jeh..D@.[K..
    C320: FF FF FF 00 44 6E 02 3D 65 02 24 49 5E 02 02 A5  // ....Dn.=e.$I^...
    C330: 02 00 3D 25 02 02 46 B8 03 52 24 4B E5 02 01 44  // ..=%..F..R$K...D
    C340: B8 03 3D E5 00 02 46 86 02 03 01 46 00 02 39 00  // ..=...F....F..9.
    C350: 00 55 28 00 52 23 02 02 00 46 3D 25 02 02 44 97  // .U(.R#...F=%..D.
    C360: 02 3A 2A 00 3D 25 02 00 49 FD 04 54 00 06 17 07  // .:*.=%..I..T....
    C370: 65 04 17 EF 54 00 05 17 54 00 03 17 07 25 07 17  // e...T...T....%..
    C380: F7 0D 25 07 17 01 51 32 07 25 07 17 7F 51 32 0D  // ..%...Q2.%...Q2.
    C390: 25 07 17 02 51 C8 4B 05 00 FF FF FF 00 44 FD 04  // %...Q.K......D..
    C3A0: 66 FF 2D 0D 42 04 05 3D 0C 01 00 00 47 E3 02 2D  // f.-.B..=....G..-
    C3B0: 0D 42 06 00 43 D3 02 3D A5 02 03 49 0E 03 03 01  // .B..C..=...I....
    C3C0: 46 00 56 38 46 3E 05 46 E4 57 00 00 47 0E 03 3D  // F.V8F>.F.W..G..=
    C3D0: 0D 01 1D 00 46 0E 03 01 05 08 17 44 B9 DE 19 43  // ....F......D...C
    C3E0: 14 03 01 04 08 17 02 00 01 65 00 17 40 4B E5 02  // .........e..@K..
    C3F0: 10 44 29 03 5C A5 07 17 F8 00 43 2F 03 5C A5 07  // .D).\.....C/.\..
    C400: 17 F8 01 0D 25 0C 17 01 4B E5 02 02 44 46 03 01  // ....%...K...DF..
    C410: 05 02 17 7E 7E 7E 00 43 64 03 01 39 00 17 01 01  // ...~~~.Cd..9....
    C420: 89 01 17 01 07 25 01 17 F0 01 B1 02 17 01 01 39  // .....%.........9
    C430: 02 17 03 01 71 02 17 01 51 64 54 20 0C 17 07 25  // ....q...QdT ...%
    C440: 07 17 FD 51 32 0D 25 07 17 80 50 02 07 25 07 17  // ...Q2.%...P..%..
    C450: FE 51 0A 4A A5 07 17 10 44 7D 03 4A A5 07 17 20  // .Q.J....D}.J... 
    C460: 44 87 03 4B E5 02 02 49 AE 03 01 31 01 17 03 3D  // D..K...I...1...=
    C470: 0D 03 00 00 44 AE 03 01 09 05 17 03 5C A5 05 17  // ....D.......\...
    C480: FC 01 0D 25 07 17 08 01 25 06 17 1F 3A 00 00 3D  // ...%....%...:..=
    C490: E5 00 02 46 FD 04 03 01 46 00 56 38 46 56 00 41  // ...F....F.V8FV.A
    C4A0: 03 39 41 02 09 25 41 0C 1B 25 41 01 66 FF 2D 0D  // .9A..%A..%A.f.-.
    C4B0: 42 28 05 2D 0A 42 41 03 24 41 01 00 21 02 46 41  // B(.-.BA.$A..!.FA
    C4C0: 03 24 41 00 00 27 02 40 41 03 05 41 00 E1 F5 05  // .$A..'.@A..A....
    C4D0: 27 02 41 40 3E 05 40 00 00 01 00 45 0F 04 03 0D  // '.A@>.@....E....
    C4E0: 40 FF FF 02 39 00 00 52 14 01 0A 30 1B 40 3A 00  // @...9..R...0.@:.
    C4F0: 00 55 00 03 02 39 03 00 14 0D 03 02 3D A5 02 00  // .U...9......=...
    C500: 49 84 04 03 09 48 03 21 05 46 50 C3 00 00 03 02  // I....H.!.FP.....
    C510: 46 40 3C 02 41 01 40 49 4E 04 4A 25 40 01 10 49  // F@<.A.@IN.J%@..I
    C520: FD 04 3A 00 00 55 28 00 52 23 03 09 48 03 07 25  // ..:..U(.R#..H..%
    C530: 40 01 EF 01 02 41 01 46 66 1E 03 0C 41 10 01 3E  // @....A.Ff...A..>
    C540: 0D 41 00 00 49 7C 04 5C 25 40 01 DF 10 43 FD 04  // .A..I|.\%@...C..
    C550: 0D 25 40 01 30 43 FD 04 03 09 48 03 03 39 46 02  // .%@.0C....H..9F.
    C560: 09 25 46 0C 15 25 46 02 0F 25 46 01 02 A1 02 02  // .%F..%F..%F.....
    C570: 2C A5 02 01 3D 25 02 02 49 AA 04 55 30 02 4B E5  // ,...=%..I..U0.K.
    C580: 02 01 49 CA 04 3C 31 40 01 02 49 C5 04 03 21 48  // ..I..<1@..I...!H
    C590: 02 3C 22 38 01 46 44 FD 04 55 28 00 52 23 03 21  // .<"8.FD..U(.R#.!
    C5A0: 48 02 07 25 38 01 FE 03 09 48 03 01 31 40 01 02  // H..%8....H..1@..
    C5B0: 03 21 48 02 01 22 38 01 46 4B E5 02 02 44 FD 04  // .!H.."8.FK...D..
    C5C0: 3A 00 00 03 21 43 00 0D 22 C1 00 44 0D 62 C1 00  // :...!C.."..D.b..
    C5D0: 44 3A 00 00 5B 7A 50 00 1D 00 44 B5 DE 9D 22 00  // D:..[zP...D...".
    C5E0: 44 B6 DE 9D 2D 00 44 B7 DE 9D 3B 00 44 65 DE 9D  // D...-.D...;.De..
    C5F0: 45 00 44 66 DE 9D FF FF 44 67 DE 9D 01 01 05 04  // E.Df....Dg......
    C600: 03 02 02 01 88 13 00 00 01 02 10 27 00 00 01 00  // ...........'....
    C610: 98 3A 00 00 03 02 20 4E 00 00 04 02 30 75 00 00  // .:.... N....0u..
    C620: 03 00 40 9C 00 00 04 00 4D 02 02 01 00 00 37 00  // ..@.....M.....7.
    C630: 00 3D 65 00 07 44 0F 01 03 0D 48 1B 00 3D 25 00  // .=e..D....H..=%.
    C640: 10 44 27 00 56 00 40 20 25 00 03 03 0A 48 40 3D  // .D'.V.@ %....H@=
    C650: 65 00 01 44 02 01 54 20 C1 02 3C E5 C2 02 30 49  // e..D..T ..<...0I
    C660: 32 00 56 08 48 3D 25 00 10 44 BF 00 03 21 48 00  // 2.V.H=%..D...!H.
    C670: 01 0D FA 02 02 00 52 14 01 05 8D 1A 00 00 20 00  // ......R....... .
    C680: 01 25 BE 1B 02 01 A5 CC 1A C0 01 0D 91 1A 45 01  // .%............E.
    C690: 5C 05 DA 1A F0 FF FF FF 02 00 00 00 07 25 03 1B  // \............%..
    C6A0: FB 0D 25 7D 1A 01 0D 25 34 1B 01 5C 05 36 1B EE  // ..%}...%4..\.6..
    C6B0: FE 00 00 11 01 FF 7F 01 25 3A 1B 11 01 0D 33 1B  // ........%:....3.
    C6C0: FF 7F 01 05 B3 1B 07 40 00 00 0D A5 B6 1B 01 01  // .......@........
    C6D0: 05 31 1B 00 08 00 04 01 0D 86 1B 04 00 01 0D E7  // .1..............
    C6E0: 1B 01 00 3A 00 00 5B 01 05 34 47 01 30 00 00 01  // ...:..[..4G.0...
    C6F0: 05 31 47 00 08 00 04 01 05 33 47 FF 7F 00 00 01  // .1G......3G.....
    C700: 05 38 47 11 00 00 00 01 05 41 47 01 30 00 00 01  // .8G......AG.0...
    C710: 05 3E 47 00 08 00 04 01 05 40 47 FF 7F 00 00 01  // .>G......@G.....
    C720: 05 45 47 11 00 00 00 43 BB 00 54 08 C0 02 0D 25  // .EG....C..T....%
    C730: C1 02 01 3A 00 00 5B 5C 05 F6 02 FF 00 FF 9F 04  // ...:..[\........
    C740: FC 00 20 01 05 F9 02 61 51 02 00 01 05 0C 03 00  // .. ....aQ.......
    C750: 90 00 10 01 25 09 01 03 0D 65 10 17 01 5C 65 07  // ....%....e...\e.
    C760: 17 E7 08 01 05 3B 01 30 02 12 00 01 05 30 01 80  // .....;.0.....0..
    C770: BB 10 00 01 8D E5 17 30 00 01 25 E4 17 01 01 05  // .......0..%.....
    C780: 31 01 3C 00 01 08 5C 65 D4 00 FC 02 01 0D FC 00  // 1.<...\e........
    C790: 00 01 01 05 2F 48 00 00 00 00 01 05 04 48 00 00  // ..../H.......H..
    C7A0: 00 00 01 05 3A 48 0F 00 00 00 0D E5 CB 05 10 01  // ....:H..........
    C7B0: 05 F8 16 00 00 00 30 01 0D 34 46 40 01 01 25 32  // ......0..4F@..%2
    C7C0: 01 00 01 05 34 47 01 30 00 00 01 05 31 47 00 08  // ....4G.0....1G..
    C7D0: 00 04 01 05 33 47 FF 7F 00 00 01 05 38 47 11 00  // ....3G......8G..
    C7E0: 00 00 01 05 41 47 01 30 00 00 01 05 3E 47 00 08  // ....AG.0....>G..
    C7F0: 00 04 01 05 40 47 FF 7F 00 00 01 05 45 47 11 00  // ....@G......EG..
    C800: 00 00 54 20 D2 02 4A 25 D5 02 01 49 DE 01 01 05  // ..T ..J%...I....
    C810: D4 02 00 20 00 00 01 05 D3 02 FF 10 00 10 4A 25  // ... ..........J%
    C820: D5 02 01 49 F6 01 01 05 D4 02 28 05 1B 00 01 05  // ...I......(.....
    C830: D3 02 FF 10 00 20 0D 25 D2 02 01 02 8D 00 00 07  // ..... .%........
    C840: 52 18 55 00 00 52 4E 02 25 00 07 52 33 66 16 03  // R.U..RN.%..R3f..
    C850: 0C 41 04 00 4C 0D 41 02 00 44 BB 00 0D A5 C9 05  // .A..L.A..D......
    C860: 04 52 4B 66 1E 03 24 41 38 00 09 25 41 3C 5C 22  // .RKf..$A8..%A<\"
    C870: 51 18 C3 41 5B 00 17 00 01 01 00 00 37 00 00 01  // Q..A[.......7...
    C880: 05 82 01 00 00 20 D0 07 A5 83 01 FC 5B 00 48 00  // ..... ......[.H.
    C890: 01 02 00 04 37 00 00 42 21 00 63 05 1F 00 63 04  // ....7..B!.c...c.
    C8A0: 1F 00 63 07 1F 00 63 06 1F 00 5A 5A 5B 54 00 D8  // ..c...c...ZZ[T..
    C8B0: 01 56 00 41 03 31 41 00 03 B9 41 00 01 02 E8 01  // .V.A.1A...A.....
    C8C0: 41 56 00 41 03 09 41 00 01 02 C8 01 41 3C 25 D8  // AV.A..A.....A<%.
    C8D0: 01 00 44 3F 00 5B 8E 00 01 02 00 04 66 FF 56 08  // ..D?.[......f.V.
    C8E0: 47 2D 0D 42 5C 00 03 21 47 00 09 25 47 F0 42 22  // G-.B\..!G..%G.B"
    C8F0: 47 63 00 43 00 63 40 2E 00 63 80 36 00 63 60 3E  // Gc.C.c@..c.6.c`>
    C900: 00 5A 5A 5B 2D 0D 42 26 00 43 43 00 2D 0D 42 0C  // .ZZ[-.B&.CC.-.B.
    C910: 00 43 43 00 2D 0D 42 18 00 03 21 47 00 09 25 47  // .CC.-.B...!G..%G
    C920: 07 2D 0A 42 47 2D 0A 42 47 03 0C 48 00 00 5B 7A  // .-.BG-.BG..H..[z
    C930: 32 00 00 00 00 02 00 04 00 26 00 28 00 2A 00 00  // 2........&.(.*..
    C940: 02 00 2C 00 2D 00 2E 00 2F 00 00 00 00 01 00 02  // ..,.-.../.......
    C950: 00 03 00 04 00 05 00 0A 00 00 01 00 07 00 08 00  // ................
    C960: 0B 00 0C 00 78 00 01 01 00 00 37 00 00 52 14 0D  // ....x.....7..R..
    C970: A5 51 1B 01 54 20 54 1B 07 25 44 1B FE 54 20 45  // .Q..T T..%D..T E
    C980: 1B 42 29 00 63 00 31 00 63 01 39 00 63 02 4D 00  // .B).c.1.c.9.c.M.
    C990: 5A 5A 43 70 00 01 25 45 1B 02 43 3E 00 01 25 45  // ZZCp..%E..C>..%E
    C9A0: 1B 01 54 20 42 1B 54 00 43 1B 54 00 47 1B 43 70  // ..T B.T.C.T.G.Cp
    C9B0: 00 01 0D 43 1B 01 01 01 05 47 1B 01 00 01 00 0D  // ...C.....G......
    C9C0: 65 48 1B 01 0D 65 4B 1B 01 01 0D 53 1B 10 10 01  // eH...eK....S....
    C9D0: 25 42 1B 01 54 30 51 1B 3A 00 00 5B 74 00 01 01  // %B..T0Q.:..[t...
    C9E0: 00 00 37 00 00 4A A5 CB 05 01 44 15 00 02 65 00  // ..7..J....D...e.
    C9F0: 01 0E 25 00 80 52 14 03 00 46 CC 00 08 25 00 0F  // ..%..R...F...%..
    CA00: 52 14 54 30 9D 1B 3C 69 9D 1B 00 44 65 00 01 69  // R.T0..<i...De..i
    CA10: 9D 1B 00 3D 65 00 00 44 65 00 4A A5 9C 1B 01 44  // ...=e..De.J....D
    CA20: 65 00 4C 25 46 01 44 69 00 4A 25 A3 1B 01 49 4D  // e.L%F.Di.J%...IM
    CA30: 00 4A 25 A3 1B 01 44 55 00 4A 25 A3 1B 01 49 5D  // .J%...DU.J%...I]
    CA40: 00 3A 00 00 5B 4A 25 9D 1B 01 44 69 00 43 65 00  // .:..[J%...Di.Ce.
    CA50: 3E 00 01 01 00 00 37 00 00 52 14 3D 65 00 01 44  // >.....7..R.=e..D
    CA60: 30 00 0D 65 9C 1B 03 07 25 9C 1B FE 4A A5 9C 1B  // 0..e....%...J...
    CA70: 01 49 1C 00 07 E5 00 1B 7F 54 20 A9 1B 43 3A 00  // .I.......T ..C:.
    CA80: 0D E5 00 1B 80 0D 25 9C 1B 01 3A 00 00 5B 20 01  // ......%...:..[ .
    CA90: 01 03 00 0C 37 00 00 56 00 40 03 09 40 01 21 05  // ....7..V.@..@.!.
    CAA0: 40 40 42 0F 00 2D 01 40 03 27 05 40 0A 00 00 00  // @@B..-.@.'.@....
    CAB0: 21 05 40 30 00 00 00 56 00 41 03 39 41 01 27 02  // !.@0...V.A.9A.'.
    CAC0: 40 41 27 05 40 E8 03 00 00 03 02 46 40 3E 05 41  // @A'.@......F@>.A
    CAD0: F4 01 00 00 47 50 00 2D 05 46 01 00 00 00 3D 05  // ....GP.-.F....=.
    CAE0: 03 00 00 00 00 44 84 00 2C 0D 01 01 00 03 05 40  // .....D..,......@
    CAF0: 40 42 0F 00 33 01 40 03 27 05 40 A0 86 01 00 02  // @B..3.@.'.@.....
    CB00: A2 03 40 15 05 41 0E 27 05 41 A8 61 00 00 02 0A  // ..@..A.'.A.a....
    CB10: 03 40 02 F1 03 01 3D A5 02 00 44 A5 00 2D 05 46  // .@....=...D..-.F
    CB20: E0 01 00 00 03 01 41 00 56 38 41 27 02 46 41 02  // ......A.V8A'.FA.
    CB30: E2 03 40 0E A5 03 10 4B E5 02 01 49 18 01 3D 25  // ..@....K...I..=%
    CB40: 02 02 44 C4 00 3A 2A 00 3D 25 02 00 44 C4 00 3A  // ..D..:*.=%..D..:
    CB50: 54 00 03 00 41 07 17 5E 05 41 FC FF F8 FF 08 00  // T...A..^.A......
    CB60: 01 00 4B E5 02 10 44 E0 00 5E A5 41 F8 00 3C 02  // ..K...D..^.A..<.
    CB70: 07 17 41 49 18 01 3C 39 00 17 01 49 18 01 3C 89  // ..AI..<9...I..<.
    CB80: 01 17 01 49 18 01 3C 31 01 17 03 49 18 01 3C 09  // ...I..<1...I..<.
    CB90: 05 17 03 49 18 01 3C B1 02 17 01 49 18 01 3C 39  // ...I..<....I..<9
    CBA0: 02 17 03 44 1C 01 0E E5 02 01 3A 00 00 5B 2C 00  // ...D......:..[,.
    CBB0: 02 01 00 00 37 00 00 3C 21 FC 00 00 49 19 00 0D  // ....7..<!...I...
    CBC0: A5 C0 00 01 43 26 00 3C 61 FC 00 00 49 26 00 0D  // ....C&.<a...I&..
    CBD0: A5 C0 00 02 0D A5 C1 00 01 5B 19 00 01 01 00 08  // .........[......
    CBE0: 37 00 00 52 14 01 01 5E 1B 00 01 01 5F 1B 01 3A  // 7..R...^...._..:
    CBF0: 00 00 5B 00 DE 00 01 03 04 00 37 00 00 56 00 46  // ..[.......7..V.F
    CC00: 56 00 00 03 21 00 00 55 20 00 3D 65 00 03 44 2C  // V...!..U .=e..D,
    CC10: 00 3D 65 00 0A 46 D3 00 02 29 00 00 32 25 00 08  // .=e..F...)..2%..
    CC20: 0E 25 00 60 52 14 5C 22 00 4A F8 00 02 22 00 00  // .%.`R.\".J..."..
    CC30: 3D A5 00 01 49 54 00 66 1E 03 04 46 40 01 3E 05  // =...IT.f...F@.>.
    CC40: 46 00 00 00 00 49 BF 00 52 14 03 08 41 C0 1A 09  // F....I..R...A...
    CC50: 0D 41 03 00 66 FF 2D 0D 42 DA 00 2D 0A 42 41 03  // .A..f.-.B..-.BA.
    CC60: 24 00 00 00 3D E2 00 00 48 BF 00 3E 25 00 04 44  // $...=...H..>%..D
    CC70: 8E 00 03 22 46 00 33 25 46 01 15 25 46 04 0F 25  // ..."F.3%F..%F..%
    CC80: 46 01 33 39 00 00 3E 25 00 01 44 AB 00 3E 25 00  // F.39..>%..D..>%.
    CC90: 02 44 A4 00 03 25 46 21 03 65 00 2F 43 AF 00 03  // .D...%F!.e./C...
    CCA0: 65 00 13 03 79 46 00 33 65 46 01 15 2D 46 03 0F  // e...yF.3eF..-F..
    CCB0: 65 46 01 52 14 01 02 F2 1B 46 01 52 EE 1B 00 54  // eF.R.....F.R...T
    CCC0: 00 F9 1B 54 00 ED 1B 3A 00 00 5B 7A 04 00 03 02  // ...T...:..[z....
    CCD0: 01 04 AF 01 01 04 00 08 37 00 00 3D 65 02 01 49  // ........7..=e..I
    CCE0: 44 01 4B A5 02 03 49 5D 00 02 05 00 00 03 00 05  // D.K...I]........
    CCF0: 02 05 01 00 05 02 00 3C 21 FC 00 02 49 57 00 01  // .......<!...IW..
    CD00: 8D C0 00 00 02 51 02 01 05 C6 00 00 00 10 00 01  // .....Q..........
    CD10: 05 C8 00 00 00 50 00 01 0D C3 00 02 00 54 20 CA  // .....P.......T .
    CD20: 00 01 05 C2 00 00 01 00 00 56 20 40 43 83 00 0E  // .........V @C...
    CD30: 25 02 80 52 14 54 00 CC 00 56 08 48 08 25 02 07  // %..R.T...V.H.%..
    CD40: 0D 25 CA 00 01 01 25 C2 00 01 54 00 C6 00 54 00  // .%....%...T...T.
    CD50: C8 00 56 20 40 3D A5 01 00 49 8F 00 0D 25 C2 00  // ..V @=...I...%..
    CD60: 10 07 65 D0 05 FE 3D A5 01 01 47 A0 00 0D 65 D0  // ..e...=...G...e.
    CD70: 05 01 03 A0 40 C9 00 03 00 46 C4 00 03 02 41 46  // ....@....F....AF
    CD80: 2D 00 46 C6 00 2D 00 41 C8 00 52 14 01 32 07 1A  // -.F..-.A..R..2..
    CD90: 40 01 32 08 1A 40 01 02 04 1A 46 01 02 05 1A 41  // @.2..@....F....A
    CDA0: 54 30 C1 1A 54 00 5C 1B 01 01 5D 1B 00 54 08 09  // T0..T.\...]..T..
    CDB0: 1A 54 08 0A 1A 54 08 0B 1A 54 08 0C 1A 01 09 0E  // .T...T...T......
    CDC0: 1A 00 01 19 0D 1A 00 5C 19 01 1A FC F8 01 5C A5  // .......\......\.
    CDD0: 01 1A 0F 10 01 09 06 1A 01 01 25 00 1A 01 0D 25  // ..........%....%
    CDE0: B3 1B 04 5C 62 B3 1B FE 40 54 20 35 1A 54 20 3C  // ...\b...@T 5.T <
    CDF0: 1A 54 00 CA 1B 54 00 C8 1B 54 00 CC 1B 4B A5 02  // .T...T...T...K..
    CE00: 03 49 40 01 0E 25 02 80 52 14 01 05 CC 00 01 00  // .I@..%..R.......
    CE10: 00 00 3A 00 00 5B 52 14 3D 65 02 00 49 61 01 54  // ..:..[R.=e..Ia.T
    CE20: 20 00 1A 3A 00 00 3C 21 FC 00 02 49 60 01 54 08  //  ..:..<!...I`.T.
    CE30: C1 00 5B 3D 65 02 10 44 6E 01 01 09 06 1A 01 5B  // ..[=e..Dn......[
    CE40: 03 00 40 04 1A 09 05 40 00 00 00 FD 2D 01 40 00  // ..@....@....-.@.
    CE50: 09 0D 40 00 F0 01 02 04 1A 40 08 0D 00 FF 0F 56  // ..@......@.....V
    CE60: 00 41 03 31 41 01 74 0A 00 41 2C 09 01 00 08 25  // .A.1A.t..A,....%
    CE70: 00 FC 14 05 00 10 01 01 5C 1B 00 01 09 0D 1A 01  // ........\.......
    CE80: 5B 00 4E 00 01 01 00 00 37 00 00 52 14 07 65 B6  // [.N.....7..R..e.
    CE90: 1B FE 3D 65 00 01 44 37 00 54 30 6E 1A 54 30 11  // ..=e..D7.T0n.T0.
    CEA0: 1A 54 20 B5 1B 54 20 BD 1B 54 30 BD 1B 4A 25 B6  // .T ..T ..T0..J%.
    CEB0: 1B 01 49 2B 00 3A 00 00 5B 0D 25 BD 1B 01 54 00  // ..I+.:..[.%...T.
    CEC0: 9E 1B 07 25 C0 1A F4 0D 25 03 1B 04 3A 00 00 5B  // ...%....%...:..[
    CED0: 90 00 01 03 00 00 37 00 00 52 14 54 20 78 1A 54  // ......7..R.T x.T
    CEE0: 00 80 1A 3D 65 00 01 49 51 00 0D 25 7E 1A 07 01  // ...=e..IQ..%~...
    CEF0: 25 7F 1A 01 51 01 4A 25 7F 1A 02 44 24 00 54 20  // %...Q.J%...D$.T 
    CF00: 7F 1A 54 08 81 1A 54 08 82 1A 54 08 83 1A 01 0D  // ..T...T...T.....
    CF10: 84 1A FF FF 01 0D 85 1A FF FF 01 0D 86 1A FF FF  // ................
    CF20: 5B 01 31 79 1A 00 56 00 41 03 19 41 01 3B 02 41  // [.1y..V.A..A.;.A
    CF30: 3D 65 00 02 49 73 00 03 00 40 7C 1A 04 02 00 40  // =e..Is...@|....@
    CF40: 43 7C 00 03 03 40 00 01 02 7C 1A 40 2D 05 46 04  // C|...@...|.@-.F.
    CF50: 00 00 00 2D 8D 41 01 00 3E 89 41 01 45 60 00 5B  // ...-.A..>.A.E`.[
    CF60: 8D 00 01 01 00 04 01 05 82 01 EC 00 22 D8 03 00  // ............"...
    CF70: 40 83 01 09 05 40 00 00 F0 07 1B 05 40 14 66 FF  // @....@......@.f.
    CF80: 2D 0D 42 65 00 3E 0C 40 02 00 47 35 00 2D 0D 42  // -.Be.>.@..G5.-.B
    CF90: 08 00 43 25 00 33 0C 40 04 00 21 0C 40 06 00 2D  // ..C%.3.@..!.@..-
    CFA0: 0C 40 00 00 56 18 40 03 02 46 40 66 1E 02 04 00  // .@..V.@..F@f....
    CFB0: 08 00 20 05 00 64 00 00 00 27 02 40 46 02 02 00  // .. ..d...'.@F...
    CFC0: 40 5B 7A 28 00 64 00 00 00 00 00 00 00 FF FF 07  // @[z(.d..........
    CFD0: 00 01 00 00 00 C8 00 3F 00 08 00 19 00 40 06 5F  // .......?.....@._
    CFE0: 00 40 00 32 00 80 0C 7F 00 60 00 64 00 00 53 01  // .@.2.....`.d..S.
    CFF0: 02 03 00 18 37 00 00 66 FF 2D 0D 42 47 01 55 28  // ....7..f.-.BG.U(
    D000: 05 2D 09 42 05 2D 09 42 05 03 0C 48 00 00 03 09  // .-.B.-.B...H....
    D010: 41 03 2D 19 41 03 3E 0D 41 03 00 46 3F 00 5C 05  // A.-.A.>.A..F?.\.
    D020: B3 1B FB 0F F0 FF 00 30 00 00 43 4B 00 5C 05 B3  // .......0..CK.\..
    D030: 1B FF 0F F0 FF 04 40 00 00 03 09 41 00 2D 19 41  // ......@....A.-.A
    D040: 00 33 0D 41 01 00 01 0A 80 1B 41 54 08 82 1B 01  // .3.A......AT....
    D050: 99 82 1B 02 03 19 41 00 33 09 41 02 56 18 41 03  // ......A.3.A.V.A.
    D060: B1 41 04 33 1A 41 41 01 8A 81 1B 41 03 19 41 00  // .A.3.AA....A..A.
    D070: 33 09 41 02 2D 1A 41 41 2D 09 41 00 4B 25 04 10  // 3.A.-.AA-.A.K%..
    D080: 44 99 00 2D 09 41 00 01 0A 81 1B 41 03 21 41 04  // D..-.A.....A.!A.
    D090: 09 25 41 02 1B 25 41 01 01 22 83 1B 41 54 00 5E  // .%A..%A.."..AT.^
    D0A0: 1B 01 31 5E 1B 04 01 B1 5E 1B 04 03 09 41 01 2D  // ..1^....^....A.-
    D0B0: 19 41 01 33 0D 41 01 00 01 0A 87 1B 41 54 08 8E  // .A.3.A......AT..
    D0C0: 1B 01 99 8E 1B 03 03 19 41 01 33 09 41 03 56 18  // ........A.3.A.V.
    D0D0: 41 03 B9 41 04 33 1A 41 41 01 8A 8D 1B 41 03 19  // A..A.3.AA....A..
    D0E0: 41 01 33 09 41 03 2D 1A 41 41 2D 09 41 01 4B 25  // A.3.A.-.AA-.A.K%
    D0F0: 04 20 44 0B 01 2D 09 41 01 01 0A 8D 1B 41 03 21  // . D..-.A.....A.!
    D100: 41 04 09 25 41 04 1B 25 41 02 01 22 8F 1B 41 54  // A..%A..%A.."..AT
    D110: 00 5F 1B 01 39 5F 1B 04 01 B9 5F 1B 04 03 21 41  // ._..9_...._...!A
    D120: 04 09 25 41 80 1B 25 41 07 01 22 9E 1B 41 3A 00  // ..%A..%A.."..A:.
    D130: 00 5B 7A 0C 00 00 00 00 02 00 04 00 26 00 28 00  // .[z.........&.(.
    D140: 2A 00 DA 13 02 03 08 00 37 00 00 56 00 00 03 09  // *.......7..V....
    D150: 00 00 02 0D 00 23 21 4B A5 00 10 44 21 00 02 0D  // .....#!K...D!...
    D160: 00 23 22 52 49 3E 0D 42 00 00 44 C3 05 03 0C 41  // .#"RI>.B..D....A
    D170: 04 00 3E 25 41 00 44 C3 05 3E 25 41 15 44 C3 05  // ..>%A.D..>%A.D..
    D180: 42 39 00 63 07 83 02 63 05 FC 00 63 06 FC 00 63  // B9.c...c...c...c
    D190: 12 2C 02 63 01 5C 00 63 00 76 00 5A 5A 5B 4B A5  // .,.c.\.c.v.ZZ[K.
    D1A0: 00 10 44 72 0A 4A A5 CB 05 01 49 76 00 07 E5 1F  // ..Dr.J....Iv....
    D1B0: 48 FE 0D E5 1B 48 03 5B 4B A5 00 10 44 72 0A 03  // H....H.[K...Dr..
    D1C0: 0C 41 01 00 66 FF 2D 0D 42 BE 13 3E 0C 41 00 00  // .A..f.-.B..>.A..
    D1D0: 44 99 00 2D 0D 42 04 00 43 89 00 03 0C 48 02 00  // D..-.B..C....H..
    D1E0: 4A 25 48 4A 01 44 72 0A 03 0D 41 01 00 66 FF 2D  // J%HJ.Dr...A..f.-
    D1F0: 0D 42 BE 13 4A 62 47 4A 41 49 CD 00 15 25 41 01  // .B..JbGJAI...%A.
    D200: 2D 0D 42 04 00 3E 25 41 80 49 B2 00 43 E2 00 03  // -.B..>%A.I..C...
    D210: 0C 48 02 00 54 08 A4 4A 51 C8 0D 25 A5 4A 01 51  // .H..T..JQ..%.J.Q
    D220: 32 56 08 48 03 25 01 03 03 05 00 01 BC FF 00 43  // 2V.H.%.........C
    D230: 3E 01 4C A5 41 02 44 72 0A 50 01 43 E2 00 56 20  // >.L.A.Dr.P.C..V 
    D240: 01 03 05 00 00 F3 FE 01 3D E5 00 05 44 3E 01 03  // ........=...D>..
    D250: 8D 00 FE 00 43 3E 01 66 06 03 24 41 28 00 4C 25  // ....C>.f..$A(.L%
    D260: 41 01 44 72 0A 03 25 01 01 03 05 00 00 F4 FB 04  // A.Dr..%.........
    D270: 3D E5 00 05 44 3E 01 03 8D 00 FB 00 43 3E 01 5B  // =...D>......C>.[
    D280: 56 28 01 03 99 01 00 3B 05 00 4C 00 00 04 05 00  // V(.....;..L.....
    D290: F0 05 80 61 57 00 01 04 0A 01 00 02 21 01 00 02  // ...aW.......!...
    D2A0: E9 01 00 02 05 00 00 4C 00 00 55 10 01 52 4E 3D  // .......L..U..RN=
    D2B0: 65 01 00 44 84 01 51 C8 51 C8 2D 65 01 01 3E 65  // e..D..Q.Q.-e..>e
    D2C0: 01 0C 45 61 01 5B 56 28 01 3B 05 00 4C 00 00 04  // ..Ea.[V(.;..L...
    D2D0: 05 00 F2 05 90 40 02 05 00 00 4C 04 4C 55 10 01  // .....@....L.LU..
    D2E0: 52 4E 3D 65 01 00 44 B3 01 2D 65 01 01 3E 65 01  // RN=e..D..-e..>e.
    D2F0: 06 45 87 01 5B 56 00 41 3B 05 04 4C 00 00 03 A3  // .E..[V.A;..L....
    D300: 41 00 3E A5 00 FF 44 06 02 09 B2 41 00 0F BA 41  // A.>...D....A...A
    D310: 00 03 0A 41 00 3B 05 00 4C 00 00 04 05 00 F0 05  // ...A.;..L.......
    D320: 80 72 04 02 01 41 56 28 01 02 05 00 00 4C 00 00  // .r...AV(.....L..
    D330: 55 10 01 52 4E 3D 65 01 00 44 06 02 2D 65 01 01  // U..RN=e..D..-e..
    D340: 3E 65 01 06 45 E7 01 5B 02 9A 00 01 02 21 00 01  // >e..E..[.....!..
    D350: 02 79 00 01 42 22 01 63 00 15 01 63 01 3D 01 63  // .y..B".c...c.=.c
    D360: 02 B8 02 63 03 F0 00 63 04 CD 02 5A 5A 5B 07 25  // ...c...c...ZZ[.%
    D370: C9 05 FC 56 30 00 3B 05 00 4C 00 00 04 05 00 00  // ...V0.;..L......
    D380: 02 90 40 02 21 01 00 02 E9 01 00 02 05 00 00 4C  // ..@.!..........L
    D390: 04 4C 55 10 01 52 4E 3D 65 01 00 44 6C 02 51 C8  // .LU..RN=e..Dl.Q.
    D3A0: 51 C8 2D A5 00 01 3E A5 00 06 45 34 02 5B 3B 05  // Q.-...>...E4.[;.
    D3B0: 04 4C 00 00 0A 25 00 3F 3F 25 00 00 44 82 02 0D  // .L...%.??%..D...
    D3C0: 25 C9 05 02 5B 56 00 41 03 21 41 00 09 25 41 0F  // %...[V.A.!A..%A.
    D3D0: 15 0D 41 01 66 FF 2D 0D 42 76 0A 2D 0A 42 41 03  // ..A.f.-.Bv.-.BA.
    D3E0: 0C 48 00 00 07 A5 00 5C FB 56 08 48 03 25 01 02  // .H.....\.V.H.%..
    D3F0: 03 05 00 00 02 FF 00 43 3E 01 3E A5 41 20 49 DE  // .......C>.>.A I.
    D400: 02 03 25 01 04 03 05 00 00 03 FF 00 43 3E 01 3E  // ..%.........C>.>
    D410: A5 41 31 49 DE 02 66 FF 2D 0D 42 FA 12 43 F1 02  // .A1I..f.-.B..C..
    D420: 66 FF 2D 0D 42 FE 11 4B A5 00 10 44 F1 02 2D 0D  // f.-.B..K...D..-.
    D430: 42 40 00 03 05 41 80 4C 00 00 3B 02 41 04 04 00  // B@...A.L..;.A...
    D440: 00 00 2D 0D 42 04 00 2D 05 41 04 00 00 00 3F 05  // ..-.B..-.A....?.
    D450: 00 FF FF FF FF 49 F8 02 4B A5 00 10 44 5C 05 02  // .....I..K...D\..
    D460: 05 01 06 00 00 00 56 00 41 66 1A 03 0C 41 00 00  // ......V.Af...A..
    D470: 2D 0A 41 42 2D 0D 42 04 00 3D 24 01 08 00 44 53  // -.AB-.B..=$...DS
    D480: 03 2D 0D 42 0C 00 3E 0A 42 41 49 37 03 03 0D 41  // .-.B..>.BAI7...A
    D490: 00 00 43 2C 04 03 0C 41 04 00 3E 0D 41 00 00 44  // ..C,...A..>.A..D
    D4A0: 2C 04 02 0C 01 06 00 03 02 46 41 26 05 01 64 00  // ,........FA&..d.
    D4B0: 00 00 03 02 01 40 21 02 46 01 02 02 01 40 21 02  // .....@!.F....@!.
    D4C0: 40 46 21 05 40 00 04 00 00 27 05 40 7D 01 00 00  // @F!.@....'.@}...
    D4D0: 03 02 46 40 20 05 01 00 00 08 00 27 05 40 71 02  // ..F@ ......'.@q.
    D4E0: 00 00 21 05 40 10 00 00 00 2D 02 46 40 03 02 41  // ..!.@....-.F@..A
    D4F0: 46 66 06 55 00 01 02 0C 01 04 00 20 05 01 30 02  // Ff.U....... ..0.
    D500: 00 00 3D 0D 01 97 06 47 F0 03 1B 05 40 01 3D 0D  // ..=....G....@.=.
    D510: 01 2F 0D 47 F0 03 1B 05 40 01 3D 0D 01 5E 1A 47  // ./.G....@.=..^.G
    D520: F0 03 1B 05 40 01 3D 0D 01 BC 34 47 F0 03 1B 05  // ....@.=...4G....
    D530: 40 01 03 02 00 40 3B 05 E8 4C 00 00 27 02 41 00  // @....@;..L..'.A.
    D540: 04 A2 00 40 3B 05 EC 4C 00 00 15 05 01 09 27 02  // ...@;..L......'.
    D550: 00 01 0F 25 40 80 04 A2 00 40 3B 05 18 4D 00 00  // ...%@....@;..M..
    D560: 04 A5 00 00 3B 05 20 4D 00 00 04 A5 00 02 3B 05  // ....;. M......;.
    D570: F0 4C 00 00 66 06 03 E4 41 28 00 4C E5 41 01 49  // .L..f...A(.L.A.I
    D580: 44 04 04 A5 00 00 3B 05 1C 4D 00 00 66 06 03 E4  // D.....;..M..f...
    D590: 41 28 00 4C E5 41 01 49 5C 04 04 A5 00 3C 3B 05  // A(.L.A.I\....<;.
    D5A0: A4 4C 00 00 66 06 03 E4 41 28 00 4C E5 41 02 44  // .L..f...A(.L.A.D
    D5B0: 7F 04 04 A5 00 46 4C E5 41 10 49 7F 04 04 A5 00  // .....FL.A.I.....
    D5C0: 4A 3B 05 20 4D 00 00 66 06 03 E4 41 28 00 4C E5  // J;. M..f...A(.L.
    D5D0: 41 20 49 97 04 10 A5 00 04 66 06 03 24 41 34 00  // A I......f..$A4.
    D5E0: 3B 05 C4 4C 00 00 04 A2 00 41 03 24 41 35 00 3B  // ;..L.....A.$A5.;
    D5F0: 05 C8 4C 00 00 04 A2 00 41 03 24 41 39 00 3B 05  // ..L.....A.$A9.;.
    D600: CC 4C 00 00 04 A2 00 41 03 24 41 37 00 3B 05 D0  // .L.....A.$A7.;..
    D610: 4C 00 00 04 A2 00 41 03 24 41 36 00 3B 05 D4 4C  // L.....A.$A6.;..L
    D620: 00 00 04 A2 00 41 03 24 41 3A 00 3B 05 D8 4C 00  // .....A.$A:.;..L.
    D630: 00 04 A2 00 41 03 24 41 38 00 3B 05 DC 4C 00 00  // ....A.$A8.;..L..
    D640: 04 A2 00 41 3B 05 A8 4C 00 00 66 1E 03 E4 41 36  // ...A;..L..f...A6
    D650: 01 4C E5 41 02 44 2E 05 04 A5 00 67 04 A5 01 89  // .L.A.D.....g....
    D660: 04 A5 02 AB 04 A5 03 01 04 A5 04 23 04 A5 05 45  // ...........#...E
    D670: 3B 05 C0 4C 00 00 66 1E 03 E4 41 36 01 4C E5 41  // ;..L..f...A6.L.A
    D680: 20 44 4B 05 03 E4 41 37 01 04 BA 00 41 3B 05 08  //  DK...A7....A;..
    D690: 4D 00 00 4C E5 41 10 44 5C 05 04 A5 00 80 03 05  // M..L.A.D\.......
    D6A0: 00 80 4C 00 00 02 21 01 00 02 E9 01 00 56 00 41  // ..L...!......V.A
    D6B0: 03 0A 41 00 3B 02 41 03 03 41 00 3E 05 41 FF FF  // ..A.;.A..A.>.A..
    D6C0: FF FF 44 C2 05 3B 05 00 4C 00 00 04 05 01 F0 05  // ..D..;..L.......
    D6D0: 80 72 04 02 02 41 02 05 00 04 4C 00 00 55 10 01  // .r...A....L..U..
    D6E0: 52 4E 3D 65 01 00 44 B7 05 51 C8 51 C8 2D A5 00  // RN=e..D..Q.Q.-..
    D6F0: 01 3E A5 00 07 45 6B 05 5B 2D 0D 00 04 00 56 18  // .>...Ek.[-....V.
    D700: 00 43 6B 05 5B 02 0D 00 22 21 52 49 3E 0D 42 00  // .Ck.[..."!RI>.B.
    D710: 00 44 72 0A 42 39 00 63 07 F0 05 63 00 CE 06 63  // .Dr.B9.c...c...c
    D720: 01 DD 06 63 0F 0A 07 63 12 EC 06 63 14 FB 06 5A  // ...c...c...c...Z
    D730: 5A 5B 56 00 41 03 21 41 00 09 25 41 0F 15 0D 41  // Z[V.A.!A..%A...A
    D740: 01 66 FF 2D 0D 42 76 0A 2D 0A 42 41 03 0C 48 00  // .f.-.Bv.-.BA..H.
    D750: 00 07 A5 00 5C FB 56 08 48 03 01 01 00 02 21 01  // ....\.V.H.....!.
    D760: 00 02 E9 01 00 3B 05 00 4C 00 00 04 05 00 A8 50  // .....;..L......P
    D770: 98 43 55 10 01 02 05 00 00 4C 04 4C 52 4E 3B 05  // .CU......L.LRN;.
    D780: 00 4C 00 00 03 03 40 01 3D 65 01 00 44 63 06 51  // .L....@.=e..Dc.Q
    D790: C8 51 C8 2D A5 00 01 02 02 00 01 3E A5 00 07 45  // .Q.-.......>...E
    D7A0: 1B 06 56 00 40 02 02 00 01 56 18 00 66 FF 2D 0D  // ..V.@....V..f.-.
    D7B0: 42 82 0A 03 0D 01 C0 01 03 05 41 80 4C 00 00 3B  // B.........A.L..;
    D7C0: 02 41 04 04 00 00 00 2D 0D 42 04 00 2D 05 41 04  // .A.....-.B..-.A.
    D7D0: 00 00 00 33 0D 01 04 00 3E 0D 01 00 00 49 7D 06  // ...3....>....I}.
    D7E0: 3E 25 40 00 44 BA 06 3E 25 40 32 49 B0 06 03 25  // >%@.D..>%@2I...%
    D7F0: 40 1F 3B 05 30 4E 00 00 04 22 00 40 3E 65 40 00  // @.;.0N...".@>e@.
    D800: 44 0E 09 3B 05 38 4E 00 00 04 6A 00 40 43 0E 09  // D..;.8N...j.@C..
    D810: 66 FF 2D 0D 42 82 0F 03 0D 40 64 01 43 16 07 66  // f.-.B....@d.C..f
    D820: FF 2D 0D 42 2A 0F 03 0D 40 58 00 43 16 07 66 FF  // .-.B*...@X.C..f.
    D830: 2D 0D 42 E6 10 03 0D 40 04 01 43 16 07 66 FF 2D  // -.B....@..C..f.-
    D840: 0D 42 EA 11 03 0D 40 14 00 43 16 07 66 FF 2D 0D  // .B....@..C..f.-.
    D850: 42 42 0C 03 0D 40 E8 02 03 05 41 80 4C 00 00 3B  // BB...@....A.L..;
    D860: 02 41 04 04 00 00 00 2D 0D 42 04 00 2D 05 41 04  // .A.....-.B..-.A.
    D870: 00 00 00 33 0D 40 04 00 3E 0D 40 00 00 49 1D 07  // ...3.@..>.@..I..
    D880: 3D E5 00 0F 49 0E 09 03 05 41 00 00 64 00 03 05  // =...I....A..d...
    D890: 40 00 00 22 00 4B A5 00 01 44 68 07 03 05 41 00  // @..".K...Dh...A.
    D8A0: 00 23 00 03 05 40 00 00 1B 00 3B 05 BC 4D 00 00  // .#...@....;..M..
    D8B0: 04 02 00 41 3B 05 C4 4D 00 00 04 02 00 40 03 05  // ...A;..M.....@..
    D8C0: 41 80 00 00 00 4B A5 00 01 44 91 07 03 05 41 00  // A....K...D....A.
    D8D0: 00 00 00 3B 05 18 4E 00 00 0F 03 41 00 0F 0D 41  // ...;..N....A...A
    D8E0: 01 02 03 8A 41 41 0F 0D 41 00 08 03 0A 40 41 0F  // ....AA..A....@A.
    D8F0: 0D 40 20 00 04 0A 00 41 04 1A 09 41 04 0A 0B 40  // .@ ....A...A...@
    D900: 3D 65 01 01 44 F0 07 04 0A 02 41 04 1A 0D 41 04  // =e..D.....A...A.
    D910: 0A 0F 40 3D 65 01 02 44 F0 07 04 0A 04 41 04 0A  // ..@=e..D.....A..
    D920: 06 41 04 1A 11 41 04 0A 13 40 04 1A 15 41 04 0A  // .A...A...@...A..
    D930: 17 40 03 05 40 00 1B B7 00 27 02 40 00 27 05 40  // .@..@....'.@.'.@
    D940: 64 00 00 00 03 02 01 40 21 02 01 00 21 05 40 01  // d......@!...!.@.
    D950: 00 00 00 03 8A 00 01 03 02 01 40 21 05 40 F5 28  // ..........@!.@.(
    D960: 00 00 03 02 41 40 03 02 40 01 03 02 01 41 21 05  // ....A@..@....A!.
    D970: 40 4C 00 00 00 27 05 40 64 00 00 00 2D 02 40 01  // @L...'.@d...-.@.
    D980: 2D 05 40 0C 00 00 00 27 05 40 19 00 00 00 03 05  // -.@....'.@......
    D990: 01 01 40 00 00 3B 05 9C 4E 00 00 04 02 00 01 3B  // ..@..;..N......;
    D9A0: 05 A4 4E 00 00 04 02 00 40 3B 05 7C 4E 00 00 1B  // ..N.....@;.|N...
    D9B0: 05 40 14 15 05 40 10 2D 05 40 00 00 00 00 04 02  // .@...@.-.@......
    D9C0: 00 40 56 00 01 03 1A 01 00 3B 05 B4 4E 00 00 04  // .@V......;..N...
    D9D0: 02 00 01 21 8A 00 00 27 05 40 C4 09 00 00 03 02  // ...!...'.@......
    D9E0: 01 40 2D 05 01 01 00 00 00 3E 05 41 00 00 00 00  // .@-......>.A....
    D9F0: 49 BF 08 33 05 01 01 00 00 00 15 05 01 10 43 F3  // I..3..........C.
    DA00: 08 15 05 01 10 03 05 40 C4 09 00 00 33 02 40 41  // .......@....3.@A
    DA10: 21 05 40 0A 00 00 00 27 05 40 C4 09 00 00 15 05  // !.@....'.@......
    DA20: 40 1C 2D 02 01 40 15 05 41 10 27 05 41 C4 09 00  // @.-..@..A.'.A...
    DA30: 00 03 0A 01 40 3B 05 18 4F 00 00 04 02 00 01 56  // ....@;..O......V
    DA40: 00 01 03 29 01 01 3B 05 60 4F 00 00 2E 02 00 01  // ...)..;.`O......
    DA50: 03 99 01 00 03 05 00 80 4C 00 00 02 21 01 00 02  // ........L...!...
    DA60: E9 01 00 3B 02 00 03 03 41 00 03 03 40 01 3E 05  // ...;....A...@.>.
    DA70: 41 FF FF FF FF 44 50 0A 3E E5 41 00 44 47 09 3E  // A....DP.>.A.DG.>
    DA80: E5 41 01 44 47 09 43 CF 09 3B 02 00 03 03 41 00  // .A.DG.C..;....A.
    DA90: 5E 05 41 FF FF 0F 00 00 00 90 43 3B 05 00 4C 00  // ^.A.......C;..L.
    DAA0: 00 04 02 00 41 55 10 01 02 05 00 00 4C 04 4C 52  // ....AU......L.LR
    DAB0: 4E 3B 05 00 4C 00 00 03 03 40 01 3D 65 01 00 44  // N;..L....@.=e..D
    DAC0: 90 09 51 C8 51 C8 2D 25 01 01 3E 25 01 07 45 47  // ..Q.Q.-%..>%..EG
    DAD0: 09 5B 3B 02 00 03 03 41 00 3E E5 41 00 44 B8 09  // .[;....A.>.A.D..
    DAE0: 03 03 41 01 2D 05 41 80 4C 00 00 3B 02 41 04 02  // ..A.-.A.L..;.A..
    DAF0: 00 40 2D 0D 00 08 00 43 21 09 0F 05 41 00 00 80  // .@-....C!...A...
    DB00: 83 09 03 40 01 0F 03 40 02 2D 0D 00 04 00 43 16  // ...@...@.-....C.
    DB10: 0A 3E 8D 41 FE FF 49 16 0A 3E 0D 41 64 00 45 FF  // .>.A..I..>.Ad.E.
    DB20: 09 27 0D 41 64 00 03 0A 41 40 50 01 33 0D 41 01  // .'.Ad...A@P.3.A.
    DB30: 00 3E 0D 41 00 00 49 E8 09 2D 0D 00 04 00 43 21  // .>.A..I..-....C!
    DB40: 09 51 0A 33 0D 41 01 00 3E 0D 41 00 00 49 FF 09  // .Q.3.A..>.A..I..
    DB50: 2D 0D 00 04 00 43 21 09 3B 05 00 4C 00 00 04 02  // -....C!.;..L....
    DB60: 00 41 04 02 01 40 02 05 00 00 4C 00 00 55 10 01  // .A...@....L..U..
    DB70: 52 4E 3D 65 01 00 44 45 0A 51 C8 2D A5 00 01 3E  // RN=e..DE.Q.-...>
    DB80: A5 00 07 45 24 0A 5B 2D 0D 00 08 00 56 18 00 43  // ...E$.[-....V..C
    DB90: 21 09 3E E5 01 12 49 72 0A 3B 05 3C 4D 00 00 03  // !.>...Ir.;.<M...
    DBA0: 03 41 00 07 25 C9 05 FC 3E 25 41 00 44 72 0A 0D  // .A..%...>%A.Dr..
    DBB0: 25 C9 05 02 5B 7A 64 09 00 00 1C 00 38 00 54 00  // %...[zd.....8.T.
    DBC0: 70 00 8C 00 08 80 88 83 7F 0F 00 00 00 80 88 83  // p...............
    DBD0: 10 00 00 00 10 05 80 50 E4 00 00 00 11 05 80 50  // .......P.......P
    DBE0: 00 00 00 00 82 05 80 83 01 00 00 00 A1 05 80 83  // ................
    DBF0: F0 00 00 00 18 80 88 83 10 01 00 00 80 80 88 83  // ................
    DC00: 01 00 00 00 70 80 88 83 01 00 00 00 30 80 88 83  // ....p.......0...
    DC10: 03 00 00 00 20 80 88 83 01 00 00 00 08 10 88 83  // .... ...........
    DC20: 00 00 00 10 04 10 88 83 10 00 23 00 08 10 88 83  // ..........#.....
    DC30: 00 00 1B 10 04 11 88 83 00 00 00 00 00 04 88 83  // ................
    DC40: 01 00 00 00 04 00 88 83 00 06 00 00 08 00 08 00  // ................
    DC50: F4 FF FF FF 08 20 00 00 04 01 88 83 00 06 00 00  // ..... ..........
    DC60: 08 01 08 00 F4 FF FF FF 08 20 00 00 04 02 88 83  // ......... ......
    DC70: 00 06 00 00 08 02 08 00 F4 FF FF FF 08 20 00 00  // ............. ..
    DC80: 04 03 88 83 00 06 00 00 08 03 08 00 F4 FF FF FF  // ................
    DC90: 08 20 00 00 24 30 88 83 03 04 06 00 20 30 88 83  // . ..$0...... 0..
    DCA0: 85 6F 07 29 38 30 88 83 00 00 00 20 40 30 08 00  // .o.)80..... @0..
    DCB0: FE FF EF FF 01 00 00 00 00 30 88 83 01 00 00 00  // .........0......
    DCC0: 00 50 88 83 00 00 00 00 50 50 88 83 01 01 01 01  // .P......PP......
    DCD0: A4 50 08 00 FE FF FF FF 01 00 00 00 14 05 00 00  // .P..............
    DCE0: FE FF FF FF 00 00 00 00 20 05 80 83 EE 02 00 00  // ........ .......
    DCF0: 1C 05 80 83 D0 07 00 00 18 05 80 83 00 00 00 00  // ................
    DD00: 13 05 80 50 00 00 00 00 14 05 00 00 F9 FF FF FF  // ...P............
    DD10: 06 00 00 00 38 70 88 83 00 01 00 00 30 70 08 00  // ....8p......0p..
    DD20: FF F0 FF FF 00 04 00 00 30 70 08 00 FF FF FF FD  // ........0p......
    DD30: 00 00 00 02 08 70 08 00 BF FF FF FF 40 00 00 00  // .....p......@...
    DD40: 14 05 00 00 FE FF FF FF 01 00 00 00 30 70 08 00  // ............0p..
    DD50: FE FF FF FF 00 00 00 00 F4 01 FE FF 14 70 88 83  // .............p..
    DD60: 02 00 11 00 A8 50 08 00 FF FF FE FF 00 00 00 00  // .....P..........
    DD70: 88 50 88 83 1F 00 00 00 74 50 88 83 02 1B 00 00  // .P......tP......
    DD80: FF FF FF FF 08 80 88 83 7F 0F 00 00 00 80 88 83  // ................
    DD90: 10 00 00 00 18 80 08 00 CF FF FF FF 10 00 00 00  // ................
    DDA0: 24 30 88 83 03 04 06 00 38 30 88 83 00 00 00 20  // $0......80..... 
    DDB0: 00 30 88 83 00 00 00 00 00 06 80 50 02 00 00 00  // .0.........P....
    DDC0: 04 00 08 00 DF FF FF FF 00 00 00 00 04 00 08 00  // ................
    DDD0: FF F7 FF FF 00 00 00 00 04 01 08 00 DF FF FF FF  // ................
    DDE0: 00 00 00 00 04 01 08 00 FF F7 FF FF 00 00 00 00  // ................
    DDF0: 04 02 08 00 DF FF FF FF 00 00 00 00 04 02 08 00  // ................
    DE00: FF F7 FF FF 00 00 00 00 04 03 08 00 DF FF FF FF  // ................
    DE10: 00 00 00 00 04 03 08 00 FF F7 FF FF 00 00 00 00  // ................
    DE20: 04 00 08 00 FE FF FF FF 00 00 00 00 04 01 08 00  // ................
    DE30: FE FF FF FF 00 00 00 00 04 02 08 00 FE FF FF FF  // ................
    DE40: 00 00 00 00 04 03 08 00 FE FF FF FF 00 00 00 00  // ................
    DE50: 08 00 08 00 FF FF FF FF 00 20 00 00 08 01 08 00  // ......... ......
    DE60: FF FF FF FF 00 20 00 00 08 02 08 00 FF FF FF FF  // ..... ..........
    DE70: 00 20 00 00 08 03 08 00 FF FF FF FF 00 20 00 00  // . ........... ..
    DE80: 18 80 08 00 FF FC FF FF 00 01 00 00 04 11 88 83  // ................
    DE90: 00 00 00 00 04 10 08 00 FF FF 00 FC 00 00 00 00  // ................
    DEA0: 04 80 88 83 00 00 00 00 F4 01 FE FF 18 80 08 00  // ................
    DEB0: FF F7 FF FF 00 08 00 00 01 00 FE FF 04 10 88 83  // ................
    DEC0: 00 00 00 00 08 10 88 83 00 00 00 00 04 11 88 83  // ................
    DED0: 0B 00 00 00 0A 00 FE FF 18 80 08 00 FF FC FF FF  // ................
    DEE0: 04 02 00 00 0A 00 FE FF 08 00 08 00 FF DF FF FF  // ................
    DEF0: 00 00 00 00 08 01 08 00 FF DF FF FF 00 00 00 00  // ................
    DF00: 08 02 08 00 FF DF FF FF 00 00 00 00 08 03 08 00  // ................
    DF10: FF DF FF FF 00 00 00 00 04 00 88 83 00 06 00 00  // ................
    DF20: 04 01 88 83 00 06 00 00 04 02 88 83 00 06 00 00  // ................
    DF30: 04 03 88 83 00 06 00 00 03 00 FE FF 04 00 88 83  // ................
    DF40: 00 06 00 00 04 00 88 83 00 06 00 00 04 01 88 83  // ................
    DF50: 00 06 00 00 04 01 88 83 00 06 00 00 04 02 88 83  // ................
    DF60: 00 06 00 00 04 02 88 83 00 06 00 00 04 03 88 83  // ................
    DF70: 00 06 00 00 04 03 88 83 00 06 00 00 58 30 88 83  // ............X0..
    DF80: 00 00 00 00 34 30 88 83 00 00 08 00 54 30 88 83  // ....40......T0..
    DF90: 00 00 00 00 54 30 88 83 01 00 00 00 04 30 88 83  // ....T0.......0..
    DFA0: 00 40 00 00 18 30 88 83 00 00 00 00 14 30 88 83  // .@...0.......0..
    DFB0: 10 00 00 00 1C 30 88 83 00 00 00 00 14 00 FE FF  // .....0..........
    DFC0: 38 30 08 00 FF FF FF EF 00 00 00 10 01 00 FE FF  // 80..............
    DFD0: 38 30 08 00 FF FF FF EF 00 00 00 00 01 00 FE FF  // 80..............
    DFE0: 38 30 08 00 FF FF FF DF 00 00 00 00 2C 01 FE FF  // 80..........,...
    DFF0: 00 30 88 83 01 00 00 00 24 30 08 00 FD FF FF FF  // .0......$0......
    E000: 00 00 00 00 05 00 FE FF 24 30 08 00 FE FF FF FF  // ........$0......
    E010: 00 00 00 00 40 00 FE FF 58 30 88 83 00 00 00 00  // ....@...X0......
    E020: 34 30 08 00 FF FF FC FF 00 00 01 00 54 30 08 00  // 40..........T0..
    E030: FD FF FF FF 02 00 00 00 05 00 FE FF 24 30 08 00  // ............$0..
    E040: FF FF F9 FC 00 00 00 01 54 30 08 00 FE FF FF FF  // ........T0......
    E050: 00 00 00 00 18 80 08 00 CF FF FF FF 30 00 00 00  // ............0...
    E060: 01 01 80 83 80 00 00 00 FF FF FF FF 08 80 88 83  // ................
    E070: 7F 0F 00 00 00 80 88 83 10 00 00 00 50 50 08 00  // ............PP..
    E080: FE FF FF FF 00 00 00 00 0A 00 FE FF A4 50 08 00  // .............P..
    E090: FE FF FF FF 00 00 00 00 64 00 FE FF 50 50 88 83  // ........d...PP..
    E0A0: 00 00 00 00 64 00 FE FF 00 50 88 83 01 00 00 00  // ....d....P......
    E0B0: 08 80 88 83 53 0F 00 00 00 80 88 83 00 00 00 00  // ....S...........
    E0C0: FF FF FF FF 08 80 88 83 7F 0F 00 00 00 80 88 83  // ................
    E0D0: 13 00 00 00 18 80 08 00 FF FF FF FF 00 01 00 00  // ................
    E0E0: 00 50 88 83 00 00 00 00 50 50 88 83 01 01 01 01  // .P......PP......
    E0F0: A4 50 08 00 FE FF FF FF 01 00 00 00 18 80 08 00  // .P..............
    E100: DF FF FF FF 00 00 00 00 24 30 08 00 FF FF FF FC  // ........$0......
    E110: 03 04 06 00 38 30 88 83 00 00 00 20 00 06 80 83  // ....80..... ....
    E120: 02 00 00 00 04 00 08 00 DF FF FF FF 00 00 00 00  // ................
    E130: 04 00 08 00 FF F7 FF FF 00 00 00 00 04 01 08 00  // ................
    E140: DF FF FF FF 00 00 00 00 04 01 08 00 FF F7 FF FF  // ................
    E150: 00 00 00 00 04 02 08 00 DF FF FF FF 00 00 00 00  // ................
    E160: 04 02 08 00 FF F7 FF FF 00 00 00 00 04 03 08 00  // ................
    E170: DF FF FF FF 00 00 00 00 04 03 08 00 FF F7 FF FF  // ................
    E180: 00 00 00 00 04 00 08 00 FE FF FF FF 00 00 00 00  // ................
    E190: 04 01 08 00 FE FF FF FF 00 00 00 00 04 02 08 00  // ................
    E1A0: FE FF FF FF 00 00 00 00 04 03 08 00 FE FF FF FF  // ................
    E1B0: 00 00 00 00 08 00 08 00 FF FF FF FF 00 20 00 00  // ............. ..
    E1C0: 08 01 08 00 FF FF FF FF 00 20 00 00 08 02 08 00  // ......... ......
    E1D0: FF FF FF FF 00 20 00 00 08 03 08 00 FF FF FF FF  // ..... ..........
    E1E0: 00 20 00 00 18 80 08 00 FF FD FF FF 00 00 00 00  // . ..............
    E1F0: 04 11 88 83 00 00 00 00 04 10 88 83 00 00 00 00  // ................
    E200: 08 80 88 83 53 0F 00 00 00 80 88 83 00 00 00 00  // ....S...........
    E210: 18 80 08 00 FF F7 FF FF 00 00 00 00 04 80 88 83  // ................
    E220: 01 00 00 00 FF FF FF FF 00 50 08 01 C4 00 00 00  // .........P......
    E230: 28 50 08 01 CC 00 00 00 40 50 08 01 D4 00 00 00  // (P......@P......
    E240: 58 50 08 01 DC 00 00 00 5C 50 08 01 E4 00 00 00  // XP......\P......
    E250: 50 50 08 01 EC 00 00 00 04 80 08 01 F4 00 00 00  // PP..............
    E260: A4 50 08 01 FC 00 00 00 04 80 88 83 00 00 00 00  // .P..............
    E270: 01 00 FE FF 00 50 88 83 01 00 00 00 28 50 08 00  // .....P......(P..
    E280: FC FF FF FF 00 00 00 00 40 50 88 83 00 00 00 00  // ........@P......
    E290: 58 50 88 83 01 00 00 00 5C 50 88 83 00 00 07 00  // XP......\P......
    E2A0: 50 50 08 00 FE FF FF FF 00 00 00 00 0A 00 FE FF  // PP..............
    E2B0: A4 50 08 00 FE FF FF FF 00 00 00 00 F4 01 FE FF  // .P..............
    E2C0: 50 50 88 83 00 00 00 00 40 50 88 83 E6 01 00 00  // PP......@P......
    E2D0: 14 00 FE FF 5C 50 88 83 00 01 07 00 0A 00 FE FF  // ....\P..........
    E2E0: 60 50 08 01 BC 00 00 00 00 50 88 83 00 00 00 00  // `P.......P......
    E2F0: 28 50 88 83 00 00 00 00 40 50 88 83 00 00 00 00  // (P......@P......
    E300: 58 50 88 83 00 00 00 00 5C 50 88 83 00 00 00 00  // XP......\P......
    E310: 50 50 88 83 00 00 00 00 04 80 88 83 00 00 00 00  // PP..............
    E320: A4 50 88 83 00 00 00 00 FF FF FF FF 30 70 08 00  // .P..........0p..
    E330: FE FF FF FF 00 00 00 00 F4 01 FE FF FF FF FF FF  // ................
    E340: 00 05 3D 00 00 1F 01 00 00 BA 00 00 00 BB 08 00  // ..=.............
    E350: 00 B1 4B 00 01 73 69 00 01 9F 26 00 00 19 33 00  // ..K..si...&...3.
    E360: 00 89 39 00 01 9E 05 00 01 CB 80 00 00 16 44 00  // ..9...........D.
    E370: 00 F1 20 00 00 DC 00 00 00 DD 00 00 FF FF FF FF  // .. .............
    E380: 00 05 3D 00 00 1F 03 00 00 BA 00 00 00 BB 08 00  // ..=.............
    E390: 00 B1 4B 00 01 73 69 00 01 9F 24 00 00 19 33 00  // ..K..si...$...3.
    E3A0: 00 89 39 00 00 F8 42 00 00 F9 01 00 00 FA 23 00  // ..9...B.......#.
    E3B0: 00 FB 45 00 00 FC 67 00 00 FD 89 00 00 FE AB 00  // ..E...g.........
    E3C0: 00 1D 25 00 01 C3 07 00 01 C2 5A 00 01 C4 00 00  // ..%.......Z.....
    E3D0: 01 C0 07 00 01 C1 5A 00 01 B1 00 00 01 BF 7D 00  // ......Z.......}.
    E3E0: 01 B5 63 00 01 CB 80 00 01 B3 00 00 01 B2 00 00  // ..c.............
    E3F0: 00 9F 10 00 01 83 14 00 00 A7 C2 00 01 71 12 00  // .............q..
    E400: 01 82 5D 00 01 89 24 00 01 BE 01 00 00 8A 53 00  // ..]...$.......S.
    E410: 00 0A 01 00 01 D4 10 00 00 F3 40 00 00 F4 00 00  // ..........@.....
    E420: 01 B4 00 00 00 DC 00 00 00 DD 00 00 01 91 20 00  // .............. .
    E430: 00 D1 06 00 00 D6 01 00 FF FF FF FF 00 05 3D 00  // ..............=.
    E440: 00 1F 03 00 00 BA 00 00 00 BB 08 00 00 B1 4B 00  // ..............K.
    E450: 01 73 69 00 01 9F 24 00 00 19 33 00 00 89 39 00  // .si...$...3...9.
    E460: 00 F8 42 00 00 F9 01 00 00 FA 23 00 00 FB 45 00  // ..B.......#...E.
    E470: 00 FC 67 00 00 FD 89 00 00 FE AB 00 00 1D 25 00  // ..g...........%.
    E480: 01 C3 07 00 01 C2 5A 00 01 C4 00 00 01 C0 07 00  // ......Z.........
    E490: 01 C1 5A 00 01 B1 00 00 01 BF 7D 00 01 B5 63 00  // ..Z.......}...c.
    E4A0: 01 CB 80 00 01 B3 00 00 01 B2 00 00 00 9F 10 00  // ................
    E4B0: 01 83 14 00 00 A7 C2 00 01 71 12 00 01 82 5D 00  // .........q....].
    E4C0: 01 89 28 00 01 BE 01 00 00 8A 53 00 00 0A 01 00  // ..(.......S.....
    E4D0: 01 D4 10 00 00 F3 40 00 00 F4 00 00 01 B4 00 00  // ......@.........
    E4E0: 00 DC 00 00 00 DD 00 00 01 91 20 00 00 D1 06 00  // .......... .....
    E4F0: 00 D6 01 00 01 D2 08 00 01 D3 80 00 FF FF FF FF  // ................
    E500: 1E 21 00 00 1E 22 00 01 20 21 00 02 20 22 00 03  // .!...".. !.. "..
    E510: 21 21 00 04 21 22 00 05 25 21 00 0A 21 02 01 01  // !!..!"..%!..!...
    E520: 00 08 37 00 00 0D 25 F4 16 08 07 25 62 18 FE 56  // ..7...%....%b..V
    E530: 00 41 03 39 41 01 09 25 41 0F 03 0A 40 42 66 FF  // .A.9A..%A...@Bf.
    E540: 2D 0D 42 11 02 15 25 41 02 2D 0A 42 41 03 0C 41  // -.B...%A.-.BA..A
    E550: 00 00 01 02 00 00 41 07 A5 01 00 FE 54 08 01 00  // ......A.....T...
    E560: 01 0C FB 16 02 00 03 0A 42 40 03 05 40 C0 5D 00  // ........B@..@.].
    E570: 00 56 00 41 03 21 41 00 27 02 40 41 01 8A F7 16  // .V.A.!A.'.@A....
    E580: 40 01 25 F7 16 02 0D 25 F5 16 02 01 A9 F9 16 01  // @.%....%........
    E590: 4B 25 01 01 49 7F 00 54 30 F9 16 01 0D F9 16 00  // K%..I..T0.......
    E5A0: 31 2B A5 F9 16 01 4B 25 01 02 44 96 00 2B A5 F9  // 1+....K%..D..+..
    E5B0: 16 01 56 00 41 03 71 41 01 0F E5 41 80 01 02 FA  // ..V.A.qA...A....
    E5C0: 16 41 03 69 41 00 2D A5 41 01 01 02 FA 16 41 4B  // .A.iA.-.A.....AK
    E5D0: 25 01 02 44 C6 00 56 28 41 2D A5 41 01 01 02 FA  // %..D..V(A-.A....
    E5E0: 16 41 4B 25 01 01 44 E7 00 03 71 41 00 2D A5 41  // .AK%..D...qA.-.A
    E5F0: 01 01 02 FA 16 41 03 79 41 00 2D A5 41 01 01 02  // .....A.yA.-.A...
    E600: FA 16 41 0D 25 F4 16 01 03 A5 41 01 43 BA 01 03  // ..A.%.....A.C...
    E610: 29 40 01 03 65 40 01 03 99 40 00 56 00 41 03 71  // )@..e@...@.V.A.q
    E620: 41 01 0F 65 41 01 0F E5 41 80 01 02 FA 16 41 01  // A..eA...A.....A.
    E630: A5 F9 16 04 3D 65 01 04 47 28 01 01 0D F9 16 01  // ....=e..G(......
    E640: 13 43 57 01 01 A2 F9 16 40 01 0D F9 16 01 31 43  // .CW.....@.....1C
    E650: 57 01 07 65 F9 16 EF 01 A5 F9 16 03 3E 25 40 04  // W..e........>%@.
    E660: 46 57 01 01 A2 F9 16 40 31 A5 F9 16 01 5C 65 F9  // FW.....@1....\e.
    E670: 16 FD 20 0D 25 F4 16 01 03 A5 41 00 43 BA 01 03  // .. .%.....A.C...
    E680: 05 41 01 00 00 80 03 AA 41 40 01 02 FA 16 41 3D  // .A......A@....A=
    E690: 65 01 01 49 82 01 02 A8 00 FA 16 43 F9 01 56 00  // e..I.......C..V.
    E6A0: 41 03 1A 41 40 3B 02 41 03 28 41 FA 16 03 68 41  // A..A@;.A.(A...hA
    E6B0: FA 16 03 A8 41 FA 16 03 E8 41 FA 16 04 02 00 41  // ....A....A.....A
    E6C0: 56 28 40 2D 8D 40 04 00 3E 25 40 04 47 F9 01 33  // V(@-.@..>%@.G..3
    E6D0: 25 40 04 43 36 01 02 65 00 02 03 0D 41 64 00 33  // %@.C6..e....Ad.3
    E6E0: 0D 41 01 00 3E 0D 41 00 00 44 F9 01 51 64 4A 25  // .A..>.A..D..QdJ%
    E6F0: F6 16 10 44 C3 01 4A 65 F6 16 06 49 F9 01 02 65  // ...D..Je...I...e
    E700: 00 01 0D 25 F5 16 02 3E A5 41 00 44 63 01 4B 25  // ...%...>.A.Dc.K%
    E710: 01 01 44 F3 00 0D 25 F5 16 02 01 25 F4 16 02 51  // ..D...%....%...Q
    E720: 01 54 00 F4 16 54 00 FB 16 5B 7A 10 00 68 48 01  // .T...T...[z..hH.
    E730: 00 6C 48 03 02 70 48 05 04 98 48 29 28 00 6A 00  // .lH..pH...H)(.j.
    E740: 02 02 00 04 37 00 00 3D 65 00 01 44 54 00 55 30  // ....7..=e..DT.U0
    E750: 00 3D 25 00 06 46 50 00 32 25 00 01 20 25 00 08  // .=%..FP.2%.. %..
    E760: 56 08 48 03 22 48 40 0D A5 99 18 01 02 A0 00 98  // V.H."H@.........
    E770: 18 08 A5 00 03 4A 25 98 18 02 44 4A 00 5C 0D 99  // .....J%...DJ.\..
    E780: 18 FF FE 01 00 43 50 00 0D 0D 99 18 01 01 3A 00  // .....CP.......:.
    E790: 00 5B 0D 65 CF 05 08 01 05 C8 01 01 00 00 00 3C  // .[.e...........<
    E7A0: 25 D8 01 00 44 61 00 5B D3 00 01 04 00 08 08 05  // %...Da.[........
    E7B0: 00 FF FF FF 00 66 1E 03 04 46 08 00 03 05 40 38  // .....f...F....@8
    E7C0: 18 00 00 3D 05 00 00 00 00 00 44 5D 00 21 05 46  // ...=......D].!.F
    E7D0: 64 00 00 00 2D 01 40 00 33 05 40 01 00 00 00 27  // d...-.@.3.@....'
    E7E0: 01 40 00 3E 05 40 38 18 00 00 45 4C 00 03 05 40  // .@.>.@8...EL...@
    E7F0: 38 18 00 00 3E 05 40 C8 00 00 00 46 5D 00 03 05  // 8...>.@....F]...
    E800: 40 C8 00 00 00 66 FF 2D 0D 42 BB 00 3E 0C 40 02  // @....f.-.B..>.@.
    E810: 00 47 74 00 2D 0D 42 08 00 43 64 00 33 0C 40 00  // .Gt.-.B..Cd.3.@.
    E820: 00 2D 0C 40 06 00 33 0D 40 01 00 27 0C 40 06 00  // .-.@..3.@..'.@..
    E830: 2D 0C 40 04 00 02 E2 00 40 33 0C 40 04 00 21 0C  // -.@.....@3.@..!.
    E840: 40 06 00 2D 0C 40 00 00 03 02 41 40 21 05 46 64  // @..-.@....A@!.Fd
    E850: 00 00 00 27 02 40 41 02 0A 00 40 02 B2 00 40 5B  // ...'.@A...@...@[
    E860: 7A 18 00 C8 00 40 06 08 00 19 00 40 06 80 0C 40  // z....@.....@...@
    E870: 00 32 00 80 0C 38 18 60 00 64 00 00 74 00 01 03  // .2...8.`.d..t...
    E880: 00 08 37 00 00 3A 2A 00 4B A5 00 0C 44 20 00 3A  // ..7..:*.K...D .:
    E890: 54 00 4B A5 00 04 49 20 00 3A 00 00 3D E5 00 01  // T.K...I .:..=...
    E8A0: 44 3D 00 07 65 04 17 EF 3C 0D 05 17 00 00 49 70  // D=..e...<.....Ip
    E8B0: 00 07 A5 05 17 FC 43 70 00 4A 65 04 17 10 49 70  // ......Cp.Je...Ip
    E8C0: 00 07 25 07 17 F7 5C A5 05 17 FC 01 4B A5 00 01  // ..%...\.....K...
    E8D0: 49 5B 00 0E 65 01 20 0E 65 01 10 01 09 03 17 00  // I[..e. .e.......
    E8E0: 01 01 04 17 01 50 01 0D 25 07 17 08 3A 00 00 5B  // .....P..%...:..[
    E8F0: BD 00 02 01 00 04 03 09 40 00 02 0D 00 00 FF 66  // ........@......f
    E900: 16 03 0A 41 40 1B 0D 41 0C 3E 25 41 02 44 2F 00  // ...A@..A.>%A.D/.
    E910: 3E 25 41 03 49 B9 00 2D 0C 42 06 00 43 34 00 2D  // >%A.I..-.B..C4.-
    E920: 0C 42 0A 00 03 24 41 00 00 3E 25 41 00 44 B9 00  // .B...$A..>%A.D..
    E930: 3E 0C 40 04 00 44 54 00 2D 0D 42 08 00 33 25 41  // >.@..DT.-.B..3%A
    E940: 01 43 39 00 03 0C 40 06 00 03 0C 41 08 00 66 16  // .C9...@....A..f.
    E950: 2D 0A 40 42 3E 0D 41 00 00 44 A7 00 2D 0A 42 41  // -.@B>.A..D..-.BA
    E960: 56 00 41 03 24 41 00 00 03 A4 41 01 00 3E 25 41  // V.A.$A....A..>%A
    E970: FF 44 A7 00 3E 25 41 01 49 90 00 02 24 00 02 00  // .D..>%A.I...$...
    E980: 3E 25 41 02 49 A0 00 02 64 00 02 00 32 65 00 01  // >%A.I...d...2e..
    E990: 2D 1A 42 41 43 73 00 03 0A 42 40 03 0C 41 01 00  // -.BACs...B@..A..
    E9A0: 3E 0D 41 00 00 44 B9 00 5B 56 08 42 5B 00 41 00  // >.A..D..[V.B[.A.
    E9B0: 01 03 00 08 37 00 00 03 01 41 00 55 18 00 55 08  // ....7....A.U..U.
    E9C0: 01 3E E5 41 03 44 21 00 3E E5 41 02 49 40 00 3D  // .>.A.D!.>.A.I@.=
    E9D0: 0D 00 30 75 45 40 00 03 05 40 C0 D4 01 00 27 01  // ..0uE@...@....'.
    E9E0: 40 00 15 25 40 01 02 62 01 40 1A 05 00 01 5B 00  // @..%@..b.@....[.
    E9F0: 34 00 01 03 00 04 37 00 00 3D 0D 00 01 00 49 33  // 4.....7..=....I3
    EA00: 00 54 00 D8 01 56 00 41 03 19 41 00 15 05 41 02  // .T...V.A..A...A.
    EA10: 01 02 E8 01 41 01 0D C8 01 02 00 3C 25 D8 01 00  // ....A......<%...
    EA20: 44 2B 00 5B 75 01 01 04 00 04 37 00 00 03 01 46  // D+.[u.....7....F
    EA30: 01 02 31 01 00 1A 25 01 04 03 21 41 01 0E 25 01  // ..1...%...!A..%.
    EA40: 60 52 14 02 02 01 46 42 39 00 63 0F 4F 00 63 08  // `R....FB9.c.O.c.
    EA50: 24 01 63 09 0D 01 63 0A 14 01 63 13 1C 01 63 0B  // $.c...c...c...c.
    EA60: 2C 01 63 0C 34 01 63 0D 44 01 63 10 5D 01 5A 5A  // ,.c.4.c.D.c.].ZZ
    EA70: 43 09 01 54 00 72 4A 01 0D 03 4A 1F 00 3D 25 01  // C..T.rJ...J..=%.
    EA80: 00 44 6E 00 3D 25 01 02 44 F7 00 3D 25 01 05 49  // .Dn.=%..D..=%..I
    EA90: FF 00 54 08 A1 4A 3D A5 01 00 49 7D 00 02 A5 01  // ..T..J=...I}....
    EAA0: 02 32 A5 01 01 01 F1 A1 4A 01 4A 25 A4 4A 01 49  // .2......J.J%.J.I
    EAB0: DB 00 66 FF 2D 0D 42 6D 01 03 31 41 00 09 05 41  // ..f.-.Bm..1A...A
    EAC0: 03 00 00 00 2D 0A 42 41 2D 0A 42 41 03 0C 41 00  // ....-.BA-.BA..A.
    EAD0: 00 07 65 A8 4A FE 01 05 A9 4A 00 80 00 00 56 00  // ..e.J....J....V.
    EAE0: 40 03 09 40 00 21 05 40 00 80 00 00 27 02 40 41  // @..@.!.@....'.@A
    EAF0: 01 02 AA 4A 40 0D E5 AB 4A 10 0D 65 00 4A 04 02  // ...J@...J..e.J..
    EB00: 20 01 00 4A 08 25 01 07 0E 25 01 00 52 14 15 2D  //  ..J.%...%..R..-
    EB10: 46 04 01 AA 9C 1B 46 3A 00 00 5B 01 05 72 4A 00  // F.....F:..[..rJ.
    EB20: 00 00 00 07 E5 00 4A 2F 0D 65 00 4A 04 3A 00 00  // ......J/.e.J.:..
    EB30: 5B 54 20 B0 4A 43 09 01 01 25 B0 4A 01 43 09 01  // [T .JC...%.J.C..
    EB40: 01 25 B0 4A 02 43 09 01 07 25 A0 4A EF 43 09 01  // .%.J.C...%.J.C..
    EB50: 0D 25 A0 4A 10 43 09 01 54 08 A4 4A 51 C8 0D 25  // .%.J.C..T..JQ..%
    EB60: A5 4A 01 51 32 43 09 01 0D 65 A8 4A 01 51 0A 07  // .J.Q2C...e.J.Q..
    EB70: 25 A5 4A FE 51 0A 01 0D A4 4A 01 02 51 C8 43 09  // %.J.Q....J..Q.C.
    EB80: 01 0D 25 B6 4A 10 01 21 A7 4A 01 43 09 01 7A 08  // ..%.J..!.J.C..z.
    EB90: 00 48 3F 78 69 F0 D2 90 7E 00 33 06 01 05 04 08  // .H?xi...~.3.....
    EBA0: 37 00 00 03 01 46 02 56 18 46 03 B1 46 00 15 1D  // 7....F.V.F..F...
    EBB0: 46 05 42 39 00 63 07 46 04 63 01 34 00 63 00 52  // F.B9.c.F.c.4.c.R
    EBC0: 03 63 0B 47 04 63 04 F7 05 5A 5A 43 03 06 03 20  // .c.G.c...ZZC... 
    EBD0: 40 CF 05 02 31 02 00 0E 25 02 60 52 14 01 62 47  // @...1...%.`R..bG
    EBE0: 4A 46 4C 25 40 10 49 66 00 3D A5 01 03 49 66 00  // JFL%@.If.=...If.
    EBF0: 4A 25 0D 4A 10 49 66 00 01 A5 47 4A 02 43 6B 00  // J%.J.If...GJ.Ck.
    EC00: 01 B1 47 4A 01 03 39 41 01 09 25 41 70 3E 25 41  // ..GJ..9A..%Ap>%A
    EC10: 00 44 83 00 33 25 41 10 01 E2 47 4A 41 3D A5 01  // .D..3%A...GJA=..
    EC20: 05 44 A8 00 3D A5 01 00 44 A8 00 01 0D 79 4A 0F  // .D..=...D....yJ.
    EC30: 01 3D 0D 00 A4 38 45 CA 00 01 0D 79 4A 0F 00 43  // .=...8E....yJ..C
    EC40: CA 00 02 A5 01 00 0E E5 01 02 03 21 43 01 03 02  // ...........!C...
    EC50: 40 44 33 25 40 01 32 25 01 01 01 21 A3 4A 01 01  // @D3%@.2%...!.J..
    EC60: 0A 79 4A 40 03 1A 48 46 4A 25 C6 48 01 49 42 04  // .yJ@..HFJ%.H.IB.
    EC70: 66 FF 2D 0D 42 0D 06 56 00 40 20 A5 00 06 2D 0A  // f.-.B..V.@ ...-.
    EC80: 42 40 07 A5 CA 48 FE 0D 25 CA 48 01 0D 64 C7 48  // B@...H..%.H..d.H
    EC90: 05 00 56 08 48 20 A5 00 02 03 22 48 40 01 04 06  // ..V.H ...."H@...
    ECA0: 48 00 00 01 64 05 48 04 00 07 E5 05 48 FC 03 1A  // H...d.H.....H...
    ECB0: 48 46 3D A5 01 00 44 B2 01 66 07 2D 0C 42 08 00  // HF=...D..f.-.B..
    ECC0: 02 01 02 00 02 F1 02 01 52 1C 03 1A 48 46 01 04  // ........R...HF..
    ECD0: C0 48 04 00 01 04 C1 48 08 00 01 04 C2 48 0C 00  // .H.....H.....H..
    ECE0: 01 04 C3 48 10 00 01 0C CB 48 14 00 01 0C CD 48  // ...H.....H.....H
    ECF0: 16 00 01 4C C4 48 18 00 03 04 40 1A 00 09 05 40  // ...L.H....@....@
    ED00: FE FF FF 7F 0F 05 40 02 00 00 00 01 02 CE 48 40  // ......@.......H@
    ED10: 03 04 40 1E 00 0F 05 40 00 00 02 00 01 02 CF 48  // ..@....@.......H
    ED20: 40 03 04 40 22 00 0F 05 40 00 40 00 40 01 02 D0  // @..@"...@.@.@...
    ED30: 48 40 03 04 40 26 00 0F 05 40 00 40 00 00 01 02  // H@..@&...@.@....
    ED40: D1 48 40 01 04 D4 48 2A 00 43 B8 01 56 08 46 43  // .H@...H*.C..V.FC
    ED50: 47 04 03 1A 48 46 07 25 C4 48 FE 07 25 CE 48 FD  // G...HF.%.H..%.H.
    ED60: 07 25 CF 48 FB 07 25 C4 48 FD 51 05 07 A5 CF 48  // .%.H..%.H.Q....H
    ED70: FD 51 03 0D 25 CE 48 01 51 03 07 05 D0 48 FE BF  // .Q..%.H.Q....H..
    ED80: FE BF 51 01 4A A5 D3 48 80 44 E8 01 4A E5 D3 48  // ..Q.J..H.D..J..H
    ED90: 01 49 42 04 0D E5 CE 48 80 51 03 07 0D D1 48 FE  // .IB....H.Q....H.
    EDA0: BF 51 01 4A E5 D3 48 40 44 07 02 0D 25 D1 48 01  // .Q.J..H@D...%.H.
    EDB0: 51 01 4A A5 D3 48 02 44 16 02 4A A5 D3 48 04 49  // Q.J..H.D..J..H.I
    EDC0: 42 04 0D 05 D0 48 01 00 01 00 51 01 0D 25 CD 48  // B....H....Q..%.H
    EDD0: 04 0D 25 CF 48 04 03 20 41 D3 48 09 25 41 AA 3E  // ..%.H.. A.H.%A.>
    EDE0: 25 41 AA 49 3C 02 3A 00 00 66 FF 2D 0D 42 1F 06  // %A.I<.:..f.-.B..
    EDF0: 56 08 41 03 39 41 01 09 25 41 0C 1B 25 41 01 2D  // V.A.9A..%A..%A.-
    EE00: 0A 42 41 03 0C 46 00 00 66 07 2D 0C 42 0C 00 02  // .BA..F..f.-.B...
    EE10: 01 02 00 02 F1 02 01 52 1C 03 1A 48 46 03 00 40  // .......R...HF..@
    EE20: C7 48 03 8C 40 0C 00 5E 0A 40 00 20 46 3D A5 01  // .H..@..^.@. F=..
    EE30: 00 44 A5 02 4B E5 01 02 44 A5 02 0F 25 40 02 01  // .D..K...D...%@..
    EE40: 04 C5 48 04 00 01 02 C7 48 40 03 04 41 08 00 5E  // ..H.....H@..A..^
    EE50: 25 41 07 07 01 02 C6 48 41 51 0F 07 25 C6 48 FD  // %A.....HAQ..%.H.
    EE60: 51 04 01 24 C6 48 08 00 51 04 0D 25 C4 48 02 3A  // Q..$.H..Q..%.H.:
    EE70: 00 00 03 31 41 00 15 25 41 01 2D 25 41 01 03 22  // ...1A..%A.-%A.."
    EE80: 43 41 03 02 41 44 0D 0A 36 48 41 51 05 03 1A 48  // CA..AD..6HAQ...H
    EE90: 46 07 25 C4 48 FD 56 08 48 03 31 48 00 0D 25 60  // F.%.H.V.H.1H..%`
    EEA0: 01 01 51 01 3A 00 00 54 08 36 48 51 0A 56 08 48  // ..Q.:..T.6HQ.V.H
    EEB0: 20 A5 00 02 03 22 48 40 5C A5 05 48 8F 10 02 31  //  ...."H@\..H...1
    EEC0: 02 00 0E 25 02 60 52 14 0D 25 48 4A 01 51 0A 56  // ...%.`R..%HJ.Q.V
    EED0: 08 48 20 A5 00 02 03 22 48 40 0D 25 05 48 01 51  // .H ...."H@.%.H.Q
    EEE0: 0A 0D E5 06 48 10 3A 00 00 43 42 04 02 31 02 00  // ....H.:..CB..1..
    EEF0: 0E 25 02 60 52 14 4A 25 48 4A 01 44 42 04 3C A5  // .%.`R.J%HJ.DB.<.
    EF00: 47 4A 02 44 74 03 3C A5 47 4A 03 49 82 03 54 00  // GJ.Dt.<.GJ.I..T.
    EF10: 48 4A 50 02 07 25 47 4A FE 43 A6 03 03 31 43 00  // HJP..%GJ.C...1C.
    EF20: 4A 62 47 4A 44 44 A6 03 54 08 A4 4A 51 C8 0D 25  // JbGJDD..T..JQ..%
    EF30: A5 4A 01 51 32 54 20 A0 4A 54 20 B0 4A 43 A6 03  // .J.Q2T .JT .JC..
    EF40: 56 08 48 20 A5 00 02 03 22 48 40 07 E5 06 48 EF  // V.H ...."H@...H.
    EF50: 07 A5 05 48 8F 03 1A 48 46 07 25 CD 48 FB 54 00  // ...H...HF.%.H.T.
    EF60: C3 48 54 00 C2 48 02 31 02 00 0E 25 02 60 52 14  // .HT..H.1...%.`R.
    EF70: 54 20 48 4A 54 28 47 4A 54 00 79 4A 56 08 48 03  // T HJT(GJT.yJV.H.
    EF80: 31 48 00 07 25 60 01 FE 03 1A 48 46 07 25 C6 48  // 1H..%`....HF.%.H
    EF90: 07 51 0A 07 25 C6 48 FE 51 0A 07 25 CE 48 FE 51  // .Q..%.H.Q..%.H.Q
    EFA0: 01 07 E5 CE 48 7F 51 01 0D 05 D0 48 01 00 01 00  // ....H.Q....H....
    EFB0: 0D 25 D1 48 01 51 0A 0D 25 CE 48 02 0D 25 C4 48  // .%.H.Q..%.H..%.H
    EFC0: 02 51 28 0D A5 CF 48 02 51 0A 0D 05 D0 48 00 40  // .Q(...H.Q....H.@
    EFD0: 00 40 0D 65 D1 48 40 0D 25 C4 48 01 3A 00 00 5B  // .@.e.H@.%.H.:..[
    EFE0: 5B 09 65 46 1B 66 FF 2D 0D 42 27 06 56 00 40 3E  // [.eF.f.-.B'.V.@>
    EFF0: 64 46 00 00 44 6E 04 2D 25 40 01 2D 0D 42 01 00  // dF..Dn.-%@.-.B..
    F000: 3E 25 40 0A 45 55 04 5B 56 08 48 03 22 43 40 03  // >%@.EU.[V.H."C@.
    F010: 02 41 44 03 0A 46 41 3D 0D 00 48 3F 44 B7 04 15  // .AD..FA=..H?D...
    F020: 05 41 0A 3D 0D 00 78 69 44 B7 04 15 05 41 0A 3D  // .A.=..xiD....A.=
    F030: 0D 00 F0 D2 44 B7 04 3D 0D 00 90 7E 49 EF 05 15  // ....D..=...~I...
    F040: 05 41 0A 3E 25 40 02 45 B7 04 1B 0D 46 02 43 BA  // .A.>%@.E....F.C.
    F050: 04 56 08 46 56 00 40 3D 65 01 14 49 D3 04 66 1E  // .V.FV.@=e..I..f.
    F060: 03 24 40 72 01 15 25 40 01 2D 25 40 0E 66 07 2D  // .$@r..%@.-%@.f.-
    F070: 0A 42 40 2D 0C 42 04 00 33 0A 42 40 55 30 01 03  // .B@-.B..3.B@U0..
    F080: 31 43 00 03 22 40 44 3D A4 01 00 00 49 FD 04 4C  // 1C.."@D=....I..L
    F090: 24 40 01 00 49 05 05 2D 0C 42 02 00 43 ED 04 2D  // $@..I..-.B..C..-
    F0A0: 0D 42 04 00 03 04 40 00 00 3E 0D 40 00 00 44 EF  // .B....@..>.@..D.
    F0B0: 05 2D 8A 40 42 4C 04 41 04 00 49 33 05 4C 24 46  // .-.@BL.A..I3.L$F
    F0C0: 08 00 49 33 05 2D 0D 42 09 00 43 1B 05 54 00 00  // ..I3.-.B..C..T..
    F0D0: 00 3D E5 00 01 49 D9 05 3E 0D 40 CE 48 49 6A 05  // .=...I..>.@.HIj.
    F0E0: 2D 1A 40 46 01 0A 00 00 40 03 04 00 09 00 09 05  // -.@F....@.......
    F0F0: 00 FE FF FF 7F 0F 05 00 02 00 00 00 01 02 01 00  // ................
    F100: 00 43 E8 05 3E 0D 40 CF 48 49 8F 05 2D 1A 40 46  // .C..>.@.HI..-.@F
    F110: 01 0A 00 00 40 03 04 00 09 00 0F 05 00 00 00 02  // ....@...........
    F120: 00 01 02 01 00 00 43 E8 05 3E 0D 40 D0 48 49 B4  // ......C..>.@.HI.
    F130: 05 2D 1A 40 46 01 0A 00 00 40 03 04 00 09 00 0F  // .-.@F....@......
    F140: 05 00 00 40 00 40 01 02 01 00 00 43 E8 05 3E 0D  // ...@.@.....C..>.
    F150: 40 D1 48 49 D9 05 2D 1A 40 46 01 0A 00 00 40 03  // @.HI..-.@F....@.
    F160: 04 00 09 00 0F 05 00 00 40 00 00 01 02 01 00 00  // ........@.......
    F170: 43 E8 05 2D 1A 40 46 01 0A 00 00 40 01 04 01 00  // C..-.@F....@....
    F180: 09 00 03 1A 42 40 43 0A 05 3D E5 00 01 44 B8 01  // ....B@C..=...D..
    F190: 5B 66 06 02 8C 02 32 00 02 68 02 CB 05 02 39 02  // [f....2..h....9.
    F1A0: 00 52 33 5B 7A 26 00 00 01 02 03 01 00 00 01 02  // .R3[z&..........
    F1B0: 03 01 00 00 01 02 03 01 00 08 05 08 05 04 05 20  // ............... 
    F1C0: 0A 00 01 02 03 08 09 0A 10 11 18 FF FF 00 4C 02  // ..............L.
    F1D0: 01 02 00 08 37 00 00 3D 0D 00 00 00 44 CE 01 56  // ....7..=....D..V
    F1E0: 00 41 03 21 41 01 09 25 41 0F 15 0D 41 02 03 0A  // .A.!A..%A...A...
    F1F0: 40 42 66 FF 2D 0D 42 34 02 2D 0A 42 41 03 0C 48  // @Bf.-.B4.-.BA..H
    F200: 02 00 0D A5 68 48 01 54 08 68 48 03 0C 48 00 00  // ....hH.T.hH..H..
    F210: 03 F9 41 01 15 3D 41 04 5C BA 00 5C 8F 41 03 0A  // ..A..=A.\..\.A..
    F220: 42 40 4A 25 00 5C 01 49 81 00 0D 0D 00 5C 01 01  // B@J%.\.I.....\..
    F230: 0D 25 00 5C 10 4A 25 00 5C 20 44 67 00 07 25 00  // .%.\.J%.\ Dg..%.
    F240: 5C EF 4A 25 00 5C 20 49 74 00 0D 25 03 5C 40 56  // \.J%.\ It..%.\@V
    F250: 00 41 03 09 41 00 3B 02 41 03 3B 41 00 1B 25 41  // .A..A.;.A.;A..%A
    F260: 04 01 A2 01 5C 41 03 69 41 01 15 2D 41 04 01 2A  // ....\A.iA..-A..*
    F270: 01 5C 41 56 00 40 0F E5 40 80 03 73 40 00 01 02  // .\AV.@..@..s@...
    F280: 06 5C 40 56 00 40 03 6B 40 00 01 02 06 5C 40 03  // .\@V.@.k@....\@.
    F290: 63 40 00 01 02 06 5C 40 03 7B 40 00 09 65 40 0F  // c@....\@.{@..e@.
    F2A0: 01 02 06 5C 40 3E 25 41 04 47 10 01 33 25 41 04  // ...\@>%A.G..3%A.
    F2B0: 2D 05 46 04 00 00 00 03 63 40 00 01 02 06 5C 40  // -.F.....c@....\@
    F2C0: 03 6B 40 00 01 02 06 5C 40 03 73 40 00 01 02 06  // .k@....\@.s@....
    F2D0: 5C 40 03 7B 40 00 01 02 06 5C 40 43 D7 00 0D 25  // \@.{@....\@C...%
    F2E0: 03 5C 02 0D 25 01 5C 01 03 29 40 01 21 25 40 0A  // .\..%.\..)@.!%@.
    F2F0: 2D 25 40 32 4A 25 04 5C 01 49 42 01 51 0A 33 25  // -%@2J%.\.IB.Q.3%
    F300: 40 01 3E 25 40 00 49 26 01 02 65 01 01 43 CA 01  // @.>%@.I&..e..C..
    F310: 4A 05 04 5C F0 8F FF 00 44 54 01 02 65 01 02 43  // J..\....DT..e..C
    F320: CA 01 01 05 06 5C 01 00 00 80 03 00 40 06 5C 02  // .....\......@.\.
    F330: 6A 01 40 02 B8 01 04 5C 08 A5 01 1F 3D A5 01 00  // j.@....\....=...
    F340: 46 7C 01 02 65 01 03 43 CA 01 32 A5 01 01 3D 8D  // F|..e..C..2...=.
    F350: 00 00 00 44 CA 01 3D A5 01 00 44 CA 01 03 31 41  // ...D..=...D...1A
    F360: 01 03 19 40 00 56 18 40 3B 02 40 03 28 40 06 5C  // ...@.V.@;.@.(@.\
    F370: 03 68 40 06 5C 03 A8 40 06 5C 03 E8 40 06 5C 04  // .h@.\..@.\..@.\.
    F380: 02 00 40 3E 25 41 04 47 CA 01 33 25 41 04 2D 05  // ..@>%A.G..3%A.-.
    F390: 46 04 00 00 00 43 9D 01 3A 00 00 5B 66 FF 2D 0D  // F....C..:..[f.-.
    F3A0: 42 34 02 03 0C 48 00 00 01 8D 08 5C 18 00 01 05  // B4...H.....\....
    F3B0: 09 5C 00 1C 02 00 01 05 0A 5C 10 12 3D 12 2D 0D  // .\.......\..=.-.
    F3C0: 42 04 00 2C 25 00 01 3D 25 00 03 49 D5 01 56 08  // B..,%..=%..I..V.
    F3D0: 48 03 25 41 10 0D 65 97 48 40 07 65 97 48 BF 33  // H.%A..e.H@.e.H.3
    F3E0: 25 41 01 3E 25 41 00 49 07 02 0D 25 3B 48 01 54  // %A.>%A.I...%;H.T
    F3F0: 30 3B 48 0D 25 3C 48 01 54 30 3C 48 51 32 5B 7A  // 0;H.%<H.T0<HQ2[z
    F400: 18 00 00 00 00 00 1C 00 04 00 38 00 08 00 54 00  // ..........8...T.
    F410: 0C 00 70 00 10 00 8C 00 14 00 5C 00 01 02 00 04  // ..p.......\.....
    F420: 02 25 01 04 03 31 41 00 09 0D 41 0F 00 15 0D 41  // .%...1A...A....A
    F430: 01 66 FF 2D 0D 42 50 00 2D 0A 42 41 03 0C 48 00  // .f.-.BP.-.BA..H.
    F440: 00 07 A5 68 48 FE 01 0D 68 48 11 11 50 02 4A 0D  // ...hH...hH..P.J.
    F450: 6B 48 01 00 49 41 00 02 25 01 13 54 08 68 48 54  // kH..IA..%..T.hHT
    F460: 00 6A 48 3A 00 00 5B 7A 0C 00 00 00 04 00 08 00  // .jH:..[z........
    F470: 0C 00 10 00 14 00 38 00 01 01 00 00 03 0C 41 00  // ......8.......A.
    F480: 00 2D 0D 42 02 00 03 31 43 00 03 A2 41 44 3D E4  // .-.B...1C...AD=.
    F490: 00 02 00 49 30 00 4C A4 41 03 00 44 30 00 3D 0C  // ...I0.L.A..D0.=.
    F4A0: 00 00 00 47 37 00 2D 0A 42 41 43 18 00 5B D1 01  // ...G7.-.BAC..[..
    F4B0: 02 01 04 04 37 00 00 42 21 00 63 07 29 00 63 03  // ....7..B!.c.).c.
    F4C0: 66 00 63 02 D5 00 63 04 FA 00 63 0C 85 01 63 0D  // f.c...c...c...c.
    F4D0: A8 01 5A 5A 43 D0 01 01 0D 1D 48 9F 0F 01 05 1E  // ..ZZC.....H.....
    F4E0: 48 00 00 00 00 01 05 1F 48 7D 00 00 00 66 06 01  // H.......H}...f..
    F4F0: 4C 1F 48 39 00 03 24 46 42 00 3E 25 46 00 44 58  // L.H9..$FB.>%F.DX
    F500: 00 01 25 1F 48 00 4A 25 1B 48 10 49 D0 01 0D E5  // ..%.H.J%.H.I....
    F510: 1B 48 02 5B 4A A5 CB 05 01 49 D0 01 4A 25 1B 48  // .H.[J....I..J%.H
    F520: 01 44 D0 01 4A 25 1C 48 10 44 76 00 4A E5 1B 48  // .D..J%.H.Dv.J..H
    F530: 02 49 91 00 4A 25 1C 48 08 49 D0 01 43 C5 00 4A  // .I..J%.H.I..C..J
    F540: E5 1B 48 01 49 D0 01 4A 25 1B 48 10 44 C5 00 0D  // ..H.I..J%.H.D...
    F550: A5 1B 48 03 0D 65 1B 48 03 01 0D 1D 48 00 00 5C  // ..H..e.H....H..\
    F560: 25 1B 48 EF 01 4A 25 1C 48 10 44 B7 00 01 0D 1D  // %.H..J%.H.D.....
    F570: 48 9F 0F 07 E5 1B 48 FC 0D E5 1F 48 01 0D 25 1B  // H.....H....H..%.
    F580: 48 11 5B 66 06 03 24 46 42 00 3E 25 46 00 49 D0  // H.[f..$FB.>%F.I.
    F590: 01 4A 25 1B 48 01 44 D0 01 4A 25 1C 48 10 44 EB  // .J%.H.D..J%.H.D.
    F5A0: 00 5C E5 1B 48 FE 02 5B 4A 65 D0 05 02 44 07 01  // .\..H..[Je...D..
    F5B0: 0D 25 23 48 01 3D 8D 00 00 00 44 84 01 03 05 46  // .%#H.=....D....F
    F5C0: 00 36 6E 01 56 00 41 03 19 41 00 21 05 41 FF 0F  // .6n.V.A..A.!.A..
    F5D0: 00 00 27 02 46 40 3E 05 41 00 00 00 00 44 37 01  // ..'.F@>.A....D7.
    F5E0: 2D 0D 40 01 00 01 8A 1D 48 40 56 00 41 03 19 41  // -.@.....H@V.A..A
    F5F0: 00 21 02 40 41 27 02 46 40 01 A5 22 48 0C 01 0A  // .!.@A'.F@.."H...
    F600: 22 48 40 15 05 40 04 56 00 41 03 29 41 00 2D 0D  // "H@..@.V.A.)A.-.
    F610: 41 01 00 21 02 40 41 1B 05 40 08 01 0A 20 48 40  // A..!.@A..@... H@
    F620: 0D E5 20 48 C0 07 25 23 48 FE 4A 65 23 48 01 49  // .. H..%#H.Je#H.I
    F630: 7C 01 5B 4A 25 1B 48 01 44 9D 01 4A 25 1B 48 10  // |.[J%.H.D..J%.H.
    F640: 49 D0 01 4A 25 1C 48 10 44 95 01 07 E5 1F 48 FE  // I..J%.H.D.....H.
    F650: 0D 25 1B 48 11 5B 4A 25 1B 48 01 44 D0 01 4A 25  // .%.H.[J%.H.D..J%
    F660: 1B 48 10 44 D0 01 4A 25 1C 48 10 44 B8 01 07 A5  // .H.D..J%.H.D....
    F670: 1B 48 FC 07 65 1B 48 FC 5C 25 1B 48 EF 01 5B 00  // .H..e.H.\%.H..[.
    F680: 07 00 03 01 08 00 5B 00 AC 00 03 01 00 10 37 00  // ......[.......7.
    F690: 00 56 00 40 4A 25 00 EC 01 44 31 00 4A 20 05 EC  // .V.@J%...D1.J ..
    F6A0: 1E 00 49 31 00 03 25 40 01 01 05 05 EC 03 00 00  // ..I1..%@........
    F6B0: 00 4A 65 05 EC 0F 49 29 00 3D 65 02 00 49 3D 00  // .Je...I).=e..I=.
    F6C0: 2C 28 02 09 08 3D E5 02 00 49 49 00 2C A8 02 09  // ,(...=...II.,...
    F6D0: 08 3D E5 02 03 49 5F 00 01 01 82 01 01 02 05 01  // .=...I_.........
    F6E0: 0C 06 00 00 43 5F 00 54 00 63 C0 01 01 64 C0 00  // ....C_.T.c...d..
    F6F0: 01 21 65 C0 02 01 01 66 C0 01 01 31 67 C0 02 01  // .!e....f...1g...
    F700: 01 E8 C0 03 3D 65 02 01 44 8C 00 3D E5 02 01 44  // ....=e..D..=...D
    F710: 8C 00 51 02 4A E5 A0 21 80 49 8C 00 3E 25 40 01  // ..Q.J..!.I..>%@.
    F720: 49 AB 00 01 05 05 EC 01 00 00 00 4A 65 05 EC 0F  // I..........Je...
    F730: 49 A3 00 5B 32 05 01 01 04 00 37 00 00 56 00 00  // I..[2.....7..V..
    F740: 66 1E 2D 0D 42 88 01 56 00 40 21 25 00 10 2D 0A  // f.-.B..V.@!%..-.
    F750: 42 40 03 24 41 0C 00 4C 25 41 7C 44 B2 00 02 25  // B@.$A..L%A|D...%
    F760: 00 64 02 0D 01 01 01 02 E4 01 06 00 0E E5 01 90  // .d..............
    F770: 66 1E 03 24 41 38 00 4C 25 41 20 49 5C 00 02 A4  // f..$A8.L%A I\...
    F780: 01 88 00 03 64 00 89 00 2D 0D 42 8A 00 43 98 00  // ....d...-.B..C..
    F790: 3E 0D 00 00 00 44 77 00 3E 0D 00 01 00 44 89 00  // >....Dw.>....D..
    F7A0: 3E 0D 00 02 00 44 4A 00 43 B2 00 02 A4 01 5C 00  // >....DJ.C.....\.
    F7B0: 03 64 00 5D 00 2D 0D 42 5E 00 43 98 00 02 A4 01  // .d.].-.B^.C.....
    F7C0: 70 00 03 64 00 71 00 2D 0D 42 72 00 3E 65 00 00  // p..d.q.-.Br.>e..
    F7D0: 44 B2 00 33 65 00 01 02 4C 00 00 00 52 36 2D 0D  // D..3e...L...R6-.
    F7E0: 42 02 00 43 98 00 2D 25 00 01 3E 25 00 03 45 0C  // B..C..-%..>%..E.
    F7F0: 00 4A A5 C9 05 04 44 AE 04 66 06 03 24 00 42 00  // .J....D..f..$.B.
    F800: 3E 25 00 02 45 AE 04 02 0D 00 00 FF 03 0D 40 14  // >%..E.........@.
    F810: 31 66 16 2D 0C 42 06 00 03 24 41 00 00 3E 25 41  // 1f.-.B...$A..>%A
    F820: 00 44 68 01 3E 0C 40 04 00 44 04 01 2D 0D 42 08  // .Dh.>.@..D..-.B.
    F830: 00 33 25 41 01 43 E9 00 03 0C 40 06 00 03 0C 41  // .3%A.C....@....A
    F840: 08 00 66 16 2D 0A 40 42 3E 0D 41 00 00 44 57 01  // ..f.-.@B>.A..DW.
    F850: 2D 0A 42 41 56 00 41 03 24 41 00 00 03 A4 41 01  // -.BAV.A.$A....A.
    F860: 00 3E 25 41 FF 44 57 01 3E 25 41 01 49 40 01 02  // .>%A.DW.>%A.I@..
    F870: 24 00 02 00 3E 25 41 02 49 50 01 02 64 00 02 00  // $...>%A.IP..d...
    F880: 32 65 00 01 2D 1A 42 41 43 23 01 03 0A 42 40 03  // 2e..-.BAC#...B@.
    F890: 0C 41 01 00 3E 0D 41 00 00 49 6C 01 56 08 42 5B  // .A..>.A..Il.V.B[
    F8A0: 42 22 00 63 02 76 01 5A 5A 5B 3B 05 00 4C 00 00  // B".c.v.ZZ[;..L..
    F8B0: 03 01 00 00 04 05 00 09 05 90 40 55 00 01 02 21  // ..........@U...!
    F8C0: 01 00 02 E9 01 00 02 05 00 00 4C 04 4C 52 4E 3D  // ..........L.LRN=
    F8D0: 65 01 00 44 B0 01 51 90 2C E5 00 01 3D E5 00 10  // e..D..Q.,...=...
    F8E0: 45 92 01 5B 02 02 00 00 03 E5 40 01 3B 05 04 4C  // E..[......@.;..L
    F8F0: 00 00 3F 25 00 04 44 C9 01 03 E5 40 02 66 FF 2D  // ..?%..D....@.f.-
    F900: 0D 42 F2 04 03 05 41 80 4C 00 00 3B 02 41 04 04  // .B....A.L..;.A..
    F910: 00 00 00 2D 0D 42 04 00 2D 05 41 04 00 00 00 3F  // ...-.B..-.A....?
    F920: 05 00 FF FF FF FF 49 D7 01 66 06 03 24 41 34 00  // ......I..f..$A4.
    F930: 15 25 41 02 3B 05 80 4C 00 00 04 62 00 41 56 00  // .%A.;..L...b.AV.
    F940: 41 03 24 41 35 00 3B 05 84 4C 00 00 04 62 00 41  // A.$A5.;..L...b.A
    F950: 56 00 41 03 24 41 39 00 15 0D 41 02 3B 05 88 4C  // V.A.$A9...A.;..L
    F960: 00 00 04 62 00 41 56 00 41 03 24 41 3A 00 15 0D  // ...b.AV.A.$A:...
    F970: 41 02 3B 05 8C 4C 00 00 04 62 00 41 56 00 41 03  // A.;..L...b.AV.A.
    F980: 24 41 36 00 3B 05 90 4C 00 00 04 62 00 41 03 24  // $A6.;..L...b.A.$
    F990: 41 37 00 15 25 41 02 3B 05 94 4C 00 00 04 62 00  // A7..%A.;..L...b.
    F9A0: 41 56 00 41 03 24 41 38 00 3B 05 98 4C 00 00 04  // AV.A.$A8.;..L...
    F9B0: 62 00 41 56 00 41 3E E5 40 01 49 8D 02 0F 25 41  // b.AV.A>.@.I...%A
    F9C0: 08 66 06 03 E4 41 28 00 4C E5 41 01 44 9F 02 0F  // .f...A(.L.A.D...
    F9D0: 25 41 80 4C E5 41 02 49 AA 02 0F 25 41 04 4C E5  // %A.L.A.I...%A.L.
    F9E0: 41 20 44 B5 02 0F 25 41 01 3B 05 A4 4C 00 00 04  // A D...%A.;..L...
    F9F0: 62 00 41 02 05 01 06 00 00 00 56 00 41 66 1A 03  // b.A.......V.Af..
    FA00: 0C 41 00 00 2D 0A 41 42 2D 0D 42 04 00 3D 24 01  // .A..-.AB-.B..=$.
    FA10: 08 00 44 F4 02 2D 0D 42 0C 00 3E 0A 42 41 49 D9  // ..D..-.B..>.BAI.
    FA20: 02 03 25 41 00 43 3E 04 03 8C 41 04 00 3E 8D 41  // ..%A.C>...A..>.A
    FA30: 00 00 44 ED 02 3E E5 40 01 49 7B 03 03 25 41 00  // ..D..>.@.I{..%A.
    FA40: 3E 8D 41 17 00 45 E8 03 03 25 41 01 3E 8D 41 47  // >.A..E...%A.>.AG
    FA50: 00 45 E8 03 03 25 41 02 3E 8D 41 7C 00 45 E8 03  // .E...%A.>.A|.E..
    FA60: 03 25 41 03 3E 8D 41 AC 00 45 E8 03 03 25 41 04  // .%A.>.A..E...%A.
    FA70: 3E 8D 41 D3 00 45 E8 03 03 25 41 05 3E 8D 41 10  // >.A..E...%A.>.A.
    FA80: 01 45 E8 03 03 25 41 06 3E 8D 41 4B 01 45 E8 03  // .E...%A.>.AK.E..
    FA90: 03 25 41 07 3E 8D 41 71 01 45 E8 03 03 25 41 08  // .%A.>.Aq.E...%A.
    FAA0: 3E 8D 41 AC 01 45 E8 03 03 25 41 09 43 E8 03 03  // >.A..E...%A.C...
    FAB0: 02 00 42 66 06 55 00 01 02 0C 01 04 00 66 FF 2D  // ..Bf.U.......f.-
    FAC0: 0D 42 B2 04 3D 04 01 00 00 45 A0 03 2D 0D 42 08  // .B..=....E..-.B.
    FAD0: 00 43 90 03 03 24 41 04 00 3E 8D 41 28 00 45 DF  // .C...$A..>.A(.E.
    FAE0: 03 3E 8D 41 3C 00 45 E2 03 03 24 41 05 00 3E 8D  // .>.A<.E...$A..>.
    FAF0: 41 50 00 45 DF 03 3E 8D 41 78 00 45 E2 03 03 24  // AP.E..>.Ax.E...$
    FB00: 41 06 00 3E 8D 41 78 00 45 DF 03 3E 8D 41 B4 00  // A..>.Ax.E..>.A..
    FB10: 45 E2 03 43 ED 02 66 1A 03 02 42 00 3B 05 A0 4C  // E..C..f...B.;..L
    FB20: 00 00 04 62 00 41 03 8C 41 06 00 03 25 41 00 3E  // ...b.A..A...%A.>
    FB30: 8D 41 AB 09 45 1F 04 03 25 41 20 3E 8D 41 36 10  // .A..E...%A >.A6.
    FB40: 45 1F 04 03 25 41 40 3E 8D 41 A8 16 45 1F 04 03  // E...%A@>.A..E...
    FB50: 25 41 60 0F 25 41 80 03 A4 41 09 00 4C A5 41 01  // %A`.%A...A..L.A.
    FB60: 49 3E 04 0F 25 41 10 3E E5 40 01 44 3E 04 09 25  // I>..%A.>.@.D>..%
    FB70: 41 7F 3B 05 9C 4C 00 00 04 62 00 41 03 05 00 80  // A.;..L...b.A....
    FB80: 4C 00 00 02 21 01 00 02 E9 01 00 56 00 41 03 0A  // L...!......V.A..
    FB90: 41 00 3B 02 41 03 03 41 00 3E 05 41 FF FF FF FF  // A.;.A..A.>.A....
    FBA0: 44 AE 04 3B 05 00 4C 00 00 04 05 01 F0 03 80 61  // D..;..L........a
    FBB0: 04 02 02 41 02 05 00 04 4C 00 00 55 10 01 52 4E  // ...A....L..U..RN
    FBC0: 3D 65 01 00 44 A3 04 51 C8 51 C8 2D A5 00 01 3E  // =e..D..Q.Q.-...>
    FBD0: A5 00 07 45 57 04 5B 2D 0D 00 04 00 56 18 00 43  // ...EW.[-....V..C
    FBE0: 57 04 5B 7A 80 00 AC 0D 00 00 0D 1A 27 00 94 11  // W.[z........'...
    FBF0: 00 00 08 10 18 00 7C 15 00 00 0A 14 1E 00 58 1B  // ......|.......X.
    FC00: 00 00 0D 1A 27 00 28 23 00 00 08 10 18 00 F8 2A  // ....'.(#.......*
    FC10: 00 00 0A 14 1E 00 4C 36 00 00 0D 1A 27 00 50 46  // ......L6....'.PF
    FC20: 00 00 08 10 18 00 01 1E 00 00 02 5A 00 00 03 00  // ...........Z....
    FC30: 00 00 04 00 00 00 05 5A 00 00 06 1E 00 00 07 7D  // .......Z.......}
    FC40: 00 00 08 20 00 00 09 01 00 00 0A 0C 00 00 0B 00  // ... ............
    FC50: 00 00 0C 06 00 00 0E 38 00 00 10 00 00 00 0D 01  // .......8........
    FC60: 00 00 FF FF FF FF FF FF 00 00 00 00 00 00 00 00  // ................
    FC70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    FC80: 00 00 00 00                                      // ....


WSMT
----
[000h 0000   4]                    Signature : "WSMT"    [Windows SMM Security Mitigations Table]
[004h 0004   4]                 Table Length : 00000028
[008h 0008   1]                     Revision : 01
[009h 0009   1]                     Checksum : 11
[00Ah 0010   6]                       Oem ID : "LENOVO"
[010h 0016   8]                 Oem Table ID : "CB-01   "
[018h 0024   4]                 Oem Revision : 00000000
[01Ch 0028   4]              Asl Compiler ID : "PTEC"
[020h 0032   4]        Asl Compiler Revision : 00000002

[024h 0036   4]             Protection Flags : 00000007
                          FIXED_COMM_BUFFERS : 1
           COMM_BUFFER_NESTED_PTR_PROTECTION : 1
                  SYSTEM_RESOURCE_PROTECTION : 1

Raw Table Data: Length 40 (0x28)

    0000: 57 53 4D 54 28 00 00 00 01 11 4C 45 4E 4F 56 4F  // WSMT(.....LENOVO
    0010: 43 42 2D 30 31 20 20 20 00 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 07 00 00 00                          // ........


