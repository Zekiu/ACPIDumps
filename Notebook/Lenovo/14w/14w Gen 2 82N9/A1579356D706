
Intel ACPI Component Architecture
ACPI Binary Table Extraction Utility version 20230628
Copyright (c) 2000 - 2023 Intel Corporation


 Signature  Length    Version Oem       Oem         Oem         Compiler Compiler
                              Id        TableId     RevisionId  Name     Revision
 _________  __________  ____  ________  __________  __________  _______  __________

 01)  SSDT  0x000008E0  0x01  "LENOVO"  "AMD CPU "  0x00000001  "AMD "   0x00000001
 02)  MCFG  0x0000003C  0x01  "LENOVO"  "CB-01   "  0x00000001  "PTEC"   0x00000002
 03)  APIC  0x00000108  0x03  "LENOVO"  "CB-01   "  0x00000000  "PTEC"   0x00000002
 04)  CRAT  0x00000490  0x01  "LENOVO"  "CB-01   "  0x00000001  "PTEC"   0x00000002
 05)  SSDT  0x00005419  0x02  "LENOVO"  "AmdTable"  0x00000002  "MSFT"   0x02000002
 06)  TPM2  0x00000034  0x03  "LENOVO"  "CB-01   "  0x00000002  "PTEC"   0x00000002
 07)  VFCT  0x0000D484  0x01  "LENOVO"  "CB-01   "  0x00000001  "PTEC"   0x00000002
 08)  BATB  0x0000004A  0x02  "LENOVO"  "CB-01   "  0x00000000  "PTEC"   0x00000002
 09)  CDIT  0x00000029  0x01  "LENOVO"  "CB-01   "  0x00000001  "PTEC"   0x00000002
 10)  UEFI  0x00000116  0x01  "LENOVO"  "CB-01   "  0x00000001  "PTEC"   0x00000002
 11)  IVRS  0x0000013E  0x02  "LENOVO"  "CB-01   "  0x00000001  "PTEC"   0x00000002
 12)  DSDT  0x00009B6F  0x01  "LENOVO"  "AMD     "  0x00001000  "INTL"   0x20180313
 13)  SSDT  0x00002745  0x01  "LENOVO"  "AmdTable"  0x00000001  "INTL"   0x20180313
 14)  SBST  0x00000030  0x01  "LENOVO"  "CB-01   "  0x00000001  "PTEC"   0x00000002
 15)  WSMT  0x00000028  0x01  "LENOVO"  "CB-01   "  0x00000000  "PTEC"   0x00000002
 16)  SSDT  0x000013AE  0x01  "LENOVO"  "AmdTable"  0x00000001  "INTL"   0x20180313
 17)  SSDT  0x00000632  0x02  "LENOVO"  "Tpm2Tabl"  0x00001000  "INTL"   0x20180313
 18)  FACP  0x0000010C  0x05  "LENOVO"  "CB-01   "  0x00000003  "PTEC"   0x00000002
 19)  FPDT  0x00000034  0x01  "LENOVO"  "CB-01   "  0x00000002  "PTEC"   0x00000002
 20)  SSDT  0x00000681  0x01  "LENOVO"  "UsbCUcsi"  0x00000001  "INTL"   0x20180313
 21)  MSDM  0x00000055  0x03  "LENOVO"  "CB-01   "  0x00000000  "PTEC"   0x00000002
 22)  SSDT  0x00000743  0x01  "LENOVO"  "AmdTable"  0x00000001  "INTL"   0x20180313
 23)  HPET  0x00000038  0x01  "LENOVO"  "CB-01   "  0x00000001  "PTEC"   0x00000002
 24)  SSDT  0x00001556  0x01  "LENOVO"  "AmdTable"  0x00000001  "INTL"   0x20180313
 25)  FACS  0x00000040  0x01
 26)  BGRT  0x00000038  0x01  "LENOVO"  "CB-01   "  0x00000002  "PTEC"   0x00000002

Found 26 ACPI tables in acpidump

APIC
----
[000h 0000 004h]                   Signature : "APIC"    [Multiple APIC Description Table (MADT)]
[004h 0004 004h]                Table Length : 00000108
[008h 0008 001h]                    Revision : 03
[009h 0009 001h]                    Checksum : 3A
[00Ah 0010 006h]                      Oem ID : "LENOVO"
[010h 0016 008h]                Oem Table ID : "CB-01   "
[018h 0024 004h]                Oem Revision : 00000000
[01Ch 0028 004h]             Asl Compiler ID : "PTEC"
[020h 0032 004h]       Asl Compiler Revision : 00000002

[024h 0036 004h]          Local Apic Address : FEE00000
[028h 0040 004h]       Flags (decoded below) : 00000001
                         PC-AT Compatibility : 1

[02Ch 0044 001h]               Subtable Type : 00 [Processor Local APIC]
[02Dh 0045 001h]                      Length : 08
[02Eh 0046 001h]                Processor ID : 00
[02Fh 0047 001h]               Local Apic ID : 00
[030h 0048 004h]       Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[034h 0052 001h]               Subtable Type : 00 [Processor Local APIC]
[035h 0053 001h]                      Length : 08
[036h 0054 001h]                Processor ID : 01
[037h 0055 001h]               Local Apic ID : 01
[038h 0056 004h]       Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[03Ch 0060 001h]               Subtable Type : 00 [Processor Local APIC]
[03Dh 0061 001h]                      Length : 08
[03Eh 0062 001h]                Processor ID : 02
[03Fh 0063 001h]               Local Apic ID : 02
[040h 0064 004h]       Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[044h 0068 001h]               Subtable Type : 00 [Processor Local APIC]
[045h 0069 001h]                      Length : 08
[046h 0070 001h]                Processor ID : 03
[047h 0071 001h]               Local Apic ID : 03
[048h 0072 004h]       Flags (decoded below) : 00000001
                           Processor Enabled : 1
                      Runtime Online Capable : 0

[04Ch 0076 001h]               Subtable Type : 00 [Processor Local APIC]
[04Dh 0077 001h]                      Length : 08
[04Eh 0078 001h]                Processor ID : 04
[04Fh 0079 001h]               Local Apic ID : 04
[050h 0080 004h]       Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[054h 0084 001h]               Subtable Type : 00 [Processor Local APIC]
[055h 0085 001h]                      Length : 08
[056h 0086 001h]                Processor ID : 05
[057h 0087 001h]               Local Apic ID : 05
[058h 0088 004h]       Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[05Ch 0092 001h]               Subtable Type : 00 [Processor Local APIC]
[05Dh 0093 001h]                      Length : 08
[05Eh 0094 001h]                Processor ID : 06
[05Fh 0095 001h]               Local Apic ID : 06
[060h 0096 004h]       Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[064h 0100 001h]               Subtable Type : 00 [Processor Local APIC]
[065h 0101 001h]                      Length : 08
[066h 0102 001h]                Processor ID : 07
[067h 0103 001h]               Local Apic ID : 07
[068h 0104 004h]       Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[06Ch 0108 001h]               Subtable Type : 00 [Processor Local APIC]
[06Dh 0109 001h]                      Length : 08
[06Eh 0110 001h]                Processor ID : 08
[06Fh 0111 001h]               Local Apic ID : 08
[070h 0112 004h]       Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[074h 0116 001h]               Subtable Type : 00 [Processor Local APIC]
[075h 0117 001h]                      Length : 08
[076h 0118 001h]                Processor ID : 09
[077h 0119 001h]               Local Apic ID : 09
[078h 0120 004h]       Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[07Ch 0124 001h]               Subtable Type : 00 [Processor Local APIC]
[07Dh 0125 001h]                      Length : 08
[07Eh 0126 001h]                Processor ID : 0A
[07Fh 0127 001h]               Local Apic ID : 0A
[080h 0128 004h]       Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[084h 0132 001h]               Subtable Type : 00 [Processor Local APIC]
[085h 0133 001h]                      Length : 08
[086h 0134 001h]                Processor ID : 0B
[087h 0135 001h]               Local Apic ID : 0B
[088h 0136 004h]       Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[08Ch 0140 001h]               Subtable Type : 00 [Processor Local APIC]
[08Dh 0141 001h]                      Length : 08
[08Eh 0142 001h]                Processor ID : 0C
[08Fh 0143 001h]               Local Apic ID : 0C
[090h 0144 004h]       Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[094h 0148 001h]               Subtable Type : 00 [Processor Local APIC]
[095h 0149 001h]                      Length : 08
[096h 0150 001h]                Processor ID : 0D
[097h 0151 001h]               Local Apic ID : 0D
[098h 0152 004h]       Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[09Ch 0156 001h]               Subtable Type : 00 [Processor Local APIC]
[09Dh 0157 001h]                      Length : 08
[09Eh 0158 001h]                Processor ID : 0E
[09Fh 0159 001h]               Local Apic ID : 0E
[0A0h 0160 004h]       Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0A4h 0164 001h]               Subtable Type : 00 [Processor Local APIC]
[0A5h 0165 001h]                      Length : 08
[0A6h 0166 001h]                Processor ID : 0F
[0A7h 0167 001h]               Local Apic ID : 0F
[0A8h 0168 004h]       Flags (decoded below) : 00000000
                           Processor Enabled : 0
                      Runtime Online Capable : 0

[0ACh 0172 001h]               Subtable Type : 01 [I/O APIC]
[0ADh 0173 001h]                      Length : 0C
[0AEh 0174 001h]                 I/O Apic ID : 20
[0AFh 0175 001h]                    Reserved : 00
[0B0h 0176 004h]                     Address : FEC00000
[0B4h 0180 004h]                   Interrupt : 00000000

[0B8h 0184 001h]               Subtable Type : 01 [I/O APIC]
[0B9h 0185 001h]                      Length : 0C
[0BAh 0186 001h]                 I/O Apic ID : 21
[0BBh 0187 001h]                    Reserved : 00
[0BCh 0188 004h]                     Address : FEC01000
[0C0h 0192 004h]                   Interrupt : 00000018

[0C4h 0196 001h]               Subtable Type : 02 [Interrupt Source Override]
[0C5h 0197 001h]                      Length : 0A
[0C6h 0198 001h]                         Bus : 00
[0C7h 0199 001h]                      Source : 00
[0C8h 0200 004h]                   Interrupt : 00000002
[0CCh 0204 002h]       Flags (decoded below) : 0000
                                    Polarity : 0
                                Trigger Mode : 0

[0CEh 0206 001h]               Subtable Type : 02 [Interrupt Source Override]
[0CFh 0207 001h]                      Length : 0A
[0D0h 0208 001h]                         Bus : 00
[0D1h 0209 001h]                      Source : 09
[0D2h 0210 004h]                   Interrupt : 00000009
[0D6h 0214 002h]       Flags (decoded below) : 000F
                                    Polarity : 3
                                Trigger Mode : 3

[0D8h 0216 001h]               Subtable Type : 04 [Local APIC NMI]
[0D9h 0217 001h]                      Length : 06
[0DAh 0218 001h]                Processor ID : 00
[0DBh 0219 002h]       Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0DDh 0221 001h]        Interrupt Input LINT : 01

[0DEh 0222 001h]               Subtable Type : 04 [Local APIC NMI]
[0DFh 0223 001h]                      Length : 06
[0E0h 0224 001h]                Processor ID : 01
[0E1h 0225 002h]       Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0E3h 0227 001h]        Interrupt Input LINT : 01

[0E4h 0228 001h]               Subtable Type : 04 [Local APIC NMI]
[0E5h 0229 001h]                      Length : 06
[0E6h 0230 001h]                Processor ID : 02
[0E7h 0231 002h]       Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0E9h 0233 001h]        Interrupt Input LINT : 01

[0EAh 0234 001h]               Subtable Type : 04 [Local APIC NMI]
[0EBh 0235 001h]                      Length : 06
[0ECh 0236 001h]                Processor ID : 03
[0EDh 0237 002h]       Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0EFh 0239 001h]        Interrupt Input LINT : 01

[0F0h 0240 001h]               Subtable Type : 04 [Local APIC NMI]
[0F1h 0241 001h]                      Length : 06
[0F2h 0242 001h]                Processor ID : 04
[0F3h 0243 002h]       Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0F5h 0245 001h]        Interrupt Input LINT : 01

[0F6h 0246 001h]               Subtable Type : 04 [Local APIC NMI]
[0F7h 0247 001h]                      Length : 06
[0F8h 0248 001h]                Processor ID : 05
[0F9h 0249 002h]       Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[0FBh 0251 001h]        Interrupt Input LINT : 01

[0FCh 0252 001h]               Subtable Type : 04 [Local APIC NMI]
[0FDh 0253 001h]                      Length : 06
[0FEh 0254 001h]                Processor ID : 06
[0FFh 0255 002h]       Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[101h 0257 001h]        Interrupt Input LINT : 01

[102h 0258 001h]               Subtable Type : 04 [Local APIC NMI]
[103h 0259 001h]                      Length : 06
[104h 0260 001h]                Processor ID : 07
[105h 0261 002h]       Flags (decoded below) : 0005
                                    Polarity : 1
                                Trigger Mode : 1
[107h 0263 001h]        Interrupt Input LINT : 01

Raw Table Data: Length 264 (0x108)

    0000: 41 50 49 43 08 01 00 00 03 3A 4C 45 4E 4F 56 4F  // APIC.....:LENOVO
    0010: 43 42 2D 30 31 20 20 20 00 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 00 00 E0 FE 01 00 00 00 00 08 00 00  // ................
    0030: 01 00 00 00 00 08 01 01 01 00 00 00 00 08 02 02  // ................
    0040: 01 00 00 00 00 08 03 03 01 00 00 00 00 08 04 04  // ................
    0050: 00 00 00 00 00 08 05 05 00 00 00 00 00 08 06 06  // ................
    0060: 00 00 00 00 00 08 07 07 00 00 00 00 00 08 08 08  // ................
    0070: 00 00 00 00 00 08 09 09 00 00 00 00 00 08 0A 0A  // ................
    0080: 00 00 00 00 00 08 0B 0B 00 00 00 00 00 08 0C 0C  // ................
    0090: 00 00 00 00 00 08 0D 0D 00 00 00 00 00 08 0E 0E  // ................
    00A0: 00 00 00 00 00 08 0F 0F 00 00 00 00 01 0C 20 00  // .............. .
    00B0: 00 00 C0 FE 00 00 00 00 01 0C 21 00 00 10 C0 FE  // ..........!.....
    00C0: 18 00 00 00 02 0A 00 00 02 00 00 00 00 00 02 0A  // ................
    00D0: 00 09 09 00 00 00 0F 00 04 06 00 05 00 01 04 06  // ................
    00E0: 01 05 00 01 04 06 02 05 00 01 04 06 03 05 00 01  // ................
    00F0: 04 06 04 05 00 01 04 06 05 05 00 01 04 06 06 05  // ................
    0100: 00 01 04 06 07 05 00 01                          // ........


BATB
----
[000h 0000 004h]                   Signature : "BATB"    
[004h 0004 004h]                Table Length : 0000004A
[008h 0008 001h]                    Revision : 02
[009h 0009 001h]                    Checksum : C4
[00Ah 0010 006h]                      Oem ID : "LENOVO"
[010h 0016 008h]                Oem Table ID : "CB-01   "
[018h 0024 004h]                Oem Revision : 00000000
[01Ch 0028 004h]             Asl Compiler ID : "PTEC"
[020h 0032 004h]       Asl Compiler Revision : 00000002


**** Unknown ACPI table signature [BATB]


Raw Table Data: Length 74 (0x4A)

    0000: 42 41 54 42 4A 00 00 00 02 C4 4C 45 4E 4F 56 4F  // BATBJ.....LENOVO
    0010: 43 42 2D 30 31 20 20 20 00 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 E8 63 95 D2 E1 CF 41 4D 8E 54 DA 43  // .....c....AM.T.C
    0030: 22 FE DE 5C 36 00 00 F0 2E CC 00 00 00 00 00 00  // "..\6...........
    0040: 2D CC 00 00 00 00 00 00 01 00                    // -.........


BGRT
----
[000h 0000 004h]                   Signature : "BGRT"    [Boot Graphics Resource Table]
[004h 0004 004h]                Table Length : 00000038
[008h 0008 001h]                    Revision : 01
[009h 0009 001h]                    Checksum : 95
[00Ah 0010 006h]                      Oem ID : "LENOVO"
[010h 0016 008h]                Oem Table ID : "CB-01   "
[018h 0024 004h]                Oem Revision : 00000002
[01Ch 0028 004h]             Asl Compiler ID : "PTEC"
[020h 0032 004h]       Asl Compiler Revision : 00000002

[024h 0036 002h]                     Version : 0001
[026h 0038 001h]      Status (decoded below) : 01
                                   Displayed : 1
                          Orientation Offset : 0
[027h 0039 001h]                  Image Type : 00
[028h 0040 008h]               Image Address : 00000000C34A6018
[030h 0048 004h]               Image OffsetX : 00000240
[034h 0052 004h]               Image OffsetY : 000000C4

Raw Table Data: Length 56 (0x38)

    0000: 42 47 52 54 38 00 00 00 01 95 4C 45 4E 4F 56 4F  // BGRT8.....LENOVO
    0010: 43 42 2D 30 31 20 20 20 02 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 01 00 01 00 18 60 4A C3 00 00 00 00  // .........`J.....
    0030: 40 02 00 00 C4 00 00 00                          // @.......


CDIT
----
[000h 0000 004h]                   Signature : "CDIT"    
[004h 0004 004h]                Table Length : 00000029
[008h 0008 001h]                    Revision : 01
[009h 0009 001h]                    Checksum : 32
[00Ah 0010 006h]                      Oem ID : "LENOVO"
[010h 0016 008h]                Oem Table ID : "CB-01   "
[018h 0024 004h]                Oem Revision : 00000001
[01Ch 0028 004h]             Asl Compiler ID : "PTEC"
[020h 0032 004h]       Asl Compiler Revision : 00000002


**** Unknown ACPI table signature [CDIT]


Raw Table Data: Length 41 (0x29)

    0000: 43 44 49 54 29 00 00 00 01 32 4C 45 4E 4F 56 4F  // CDIT)....2LENOVO
    0010: 43 42 2D 30 31 20 20 20 01 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 01 00 00 00 0A                       // .........


CRAT
----
[000h 0000 004h]                   Signature : "CRAT"    
[004h 0004 004h]                Table Length : 00000490
[008h 0008 001h]                    Revision : 01
[009h 0009 001h]                    Checksum : 73
[00Ah 0010 006h]                      Oem ID : "LENOVO"
[010h 0016 008h]                Oem Table ID : "CB-01   "
[018h 0024 004h]                Oem Revision : 00000001
[01Ch 0028 004h]             Asl Compiler ID : "PTEC"
[020h 0032 004h]       Asl Compiler Revision : 00000002


**** Unknown ACPI table signature [CRAT]


Raw Table Data: Length 1168 (0x490)

    0000: 43 52 41 54 90 04 00 00 01 73 4C 45 4E 4F 56 4F  // CRAT.....sLENOVO
    0010: 43 42 2D 30 31 20 20 20 01 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 13 00 00 00 01 00 00 00 00 00 00 00  // ................
    0030: 00 28 00 00 1D 00 00 00 00 00 00 00 00 00 00 00  // .(..............
    0040: 04 00 2C 00 28 00 00 00 00 00 40 00 40 01 00 00  // ..,.(.....@.@...
    0050: 01 0B 04 20 00 00 00 00 01 28 00 00 01 00 00 00  // ... .....(......
    0060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0A 00  // ................
    0070: 00 00 00 00 40 00 00 00 00 00 00 00 00 00 00 00  // ....@...........
    0080: 01 28 00 00 01 00 00 00 00 00 00 00 00 00 10 00  // .(..............
    0090: 00 00 00 00 00 00 F0 CF 00 00 00 00 40 00 00 00  // ............@...
    00A0: 00 00 00 00 00 00 00 00 01 28 00 00 01 00 00 00  // .........(......
    00B0: 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 30  // ...............0
    00C0: 01 00 00 00 40 00 00 00 00 00 00 00 00 00 00 00  // ....@...........
    00D0: 02 40 00 00 0B 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    00E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    00F0: 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00  // ............ ...
    0100: 01 01 40 00 08 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0110: 02 40 00 00 0D 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    0120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0130: 00 00 00 00 00 00 00 00 00 00 00 00 40 00 00 00  // ............@...
    0140: 01 01 40 00 04 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0150: 02 40 00 00 0F 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    0160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0170: 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00  // ................
    0180: 02 01 40 00 08 02 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0190: 02 40 00 00 0F 00 00 00 00 00 00 00 0F 00 00 00  // .@..............
    01A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    01B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 10 00 00  // ................
    01C0: 03 01 40 00 10 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    01D0: 02 40 00 00 0B 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    01E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    01F0: 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00  // ............ ...
    0200: 01 01 40 00 08 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0210: 02 40 00 00 0D 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    0220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0230: 00 00 00 00 00 00 00 00 00 00 00 00 40 00 00 00  // ............@...
    0240: 01 01 40 00 04 00 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0250: 02 40 00 00 0F 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    0260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0270: 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00  // ................
    0280: 02 01 40 00 08 02 01 00 00 00 00 00 00 00 00 00  // ..@.............
    0290: 03 40 00 00 0B 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    02A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    02B0: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    02C0: FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00 00 00  // .@...@...@......
    02D0: 03 40 00 00 0D 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    02E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    02F0: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0300: 00 00 FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00  // ...@...@...@....
    0310: 03 40 00 00 AB 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    0320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0330: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0340: 02 06 00 00 08 06 00 00 00 40 00 00 00 00 00 00  // .........@......
    0350: 03 40 00 00 AD 00 00 00 00 00 00 00 03 00 00 00  // .@..............
    0360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0370: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0380: 00 00 08 04 00 00 08 04 00 00 00 00 00 00 00 00  // ................
    0390: 03 40 00 00 0B 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    03A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    03B0: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    03C0: FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00 00 00  // .@...@...@......
    03D0: 03 40 00 00 0D 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    03E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    03F0: 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    0400: 00 00 FF 40 00 00 FF 40 00 00 0F 40 00 00 00 00  // ...@...@...@....
    0410: 03 40 00 00 AB 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    0420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0430: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0440: 02 06 00 00 08 06 00 00 00 40 00 00 00 00 00 00  // .........@......
    0450: 03 40 00 00 AD 00 00 00 02 00 00 00 0C 00 00 00  // .@..............
    0460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0470: 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  // ................
    0480: 00 00 08 04 00 00 08 04 00 00 00 00 00 00 00 00  // ................


DSDT
----
DefinitionBlock ("", "DSDT", 1, "LENOVO", "AMD", 0x00001000)
{
    External (_PR_.C000, DeviceObj)
    External (_PR_.C000.PPCV, IntObj)
    External (_PR_.C001, DeviceObj)
    External (_PR_.C001.PPCV, IntObj)
    External (_PR_.C002, DeviceObj)
    External (_PR_.C002.PPCV, IntObj)
    External (_PR_.C003, DeviceObj)
    External (_PR_.C003.PPCV, IntObj)
    External (_PR_.POWS, UnknownObj)
    External (_SB_.ACAD.ACDC, IntObj)
    External (_SB_.ALIB, MethodObj)    // 2 Arguments
    External (_SB_.APTS, MethodObj)    // 1 Arguments
    External (_SB_.AWAK, MethodObj)    // 1 Arguments
    External (_SB_.IETM, DeviceObj)
    External (_SB_.PCI0.GFX0.CLID, UnknownObj)
    External (_SB_.PCI0.GFX0.IUER, DeviceObj)
    External (_SB_.PCI0.GP17.VGA_.AFN4, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.GP17.VGA_.AFN7, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.LPC0.H_EC.ADP1.ACDC, IntObj)
    External (_SB_.PCI0.LPC0.H_EC.BKLI, IntObj)
    External (_SB_.PCI0.LPC0.H_EC.ECRD, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.LPC0.H_EC.ECWT, MethodObj)    // 2 Arguments
    External (_SB_.PCI0.LPC0.H_EC.PSD1, FieldUnitObj)
    External (_SB_.PCI0.LPC0.H_EC.PSKU, FieldUnitObj)
    External (_SB_.PCI0.LPC0.H_EC.TPTA, IntObj)
    External (_SB_.PCI0.LPC0.H_EC.TPTY, IntObj)
    External (_SB_.PCI0.LPC0.RTIP, UnknownObj)
    External (_SB_.PCI0.LPC0.UP1D, UnknownObj)
    External (_SB_.PCI0.M013, MethodObj)    // 4 Arguments
    External (_SB_.PCI0.M017, MethodObj)    // 6 Arguments
    External (_SB_.PCI0.M019, MethodObj)    // 4 Arguments
    External (_SB_.PCI0.M020, MethodObj)    // 5 Arguments
    External (_SB_.PCI0.M037, DeviceObj)
    External (_SB_.PCI0.M046, DeviceObj)
    External (_SB_.PCI0.M047, DeviceObj)
    External (_SB_.PCI0.M050, DeviceObj)
    External (_SB_.PCI0.M051, DeviceObj)
    External (_SB_.PCI0.M052, DeviceObj)
    External (_SB_.PCI0.M053, DeviceObj)
    External (_SB_.PCI0.M054, DeviceObj)
    External (_SB_.PCI0.M055, DeviceObj)
    External (_SB_.PCI0.M056, DeviceObj)
    External (_SB_.PCI0.M057, DeviceObj)
    External (_SB_.PCI0.M058, DeviceObj)
    External (_SB_.PCI0.M059, DeviceObj)
    External (_SB_.PCI0.M062, DeviceObj)
    External (_SB_.PCI0.M068, DeviceObj)
    External (_SB_.PCI0.M069, DeviceObj)
    External (_SB_.PCI0.M070, DeviceObj)
    External (_SB_.PCI0.M071, DeviceObj)
    External (_SB_.PCI0.M072, DeviceObj)
    External (_SB_.PCI0.M074, DeviceObj)
    External (_SB_.PCI0.M075, DeviceObj)
    External (_SB_.PCI0.M076, DeviceObj)
    External (_SB_.PCI0.M077, DeviceObj)
    External (_SB_.PCI0.M078, DeviceObj)
    External (_SB_.PCI0.M079, DeviceObj)
    External (_SB_.PCI0.M080, DeviceObj)
    External (_SB_.PCI0.M081, DeviceObj)
    External (_SB_.PCI0.M082, FieldUnitObj)
    External (_SB_.PCI0.M083, FieldUnitObj)
    External (_SB_.PCI0.M084, FieldUnitObj)
    External (_SB_.PCI0.M085, FieldUnitObj)
    External (_SB_.PCI0.M086, FieldUnitObj)
    External (_SB_.PCI0.M087, FieldUnitObj)
    External (_SB_.PCI0.M088, FieldUnitObj)
    External (_SB_.PCI0.M089, FieldUnitObj)
    External (_SB_.PCI0.M090, FieldUnitObj)
    External (_SB_.PCI0.M091, FieldUnitObj)
    External (_SB_.PCI0.M092, FieldUnitObj)
    External (_SB_.PCI0.M093, FieldUnitObj)
    External (_SB_.PCI0.M094, FieldUnitObj)
    External (_SB_.PCI0.M095, FieldUnitObj)
    External (_SB_.PCI0.M096, FieldUnitObj)
    External (_SB_.PCI0.M097, FieldUnitObj)
    External (_SB_.PCI0.M098, FieldUnitObj)
    External (_SB_.PCI0.M099, FieldUnitObj)
    External (_SB_.PCI0.M100, FieldUnitObj)
    External (_SB_.PCI0.M101, FieldUnitObj)
    External (_SB_.PCI0.M102, FieldUnitObj)
    External (_SB_.PCI0.M103, FieldUnitObj)
    External (_SB_.PCI0.M104, FieldUnitObj)
    External (_SB_.PCI0.M105, FieldUnitObj)
    External (_SB_.PCI0.M106, FieldUnitObj)
    External (_SB_.PCI0.M107, FieldUnitObj)
    External (_SB_.PCI0.M108, FieldUnitObj)
    External (_SB_.PCI0.M109, FieldUnitObj)
    External (_SB_.PCI0.M110, FieldUnitObj)
    External (_SB_.PCI0.M115, BuffObj)
    External (_SB_.PCI0.M116, BuffFieldObj)
    External (_SB_.PCI0.M117, BuffFieldObj)
    External (_SB_.PCI0.M118, BuffFieldObj)
    External (_SB_.PCI0.M119, BuffFieldObj)
    External (_SB_.PCI0.M120, BuffFieldObj)
    External (_SB_.PCI0.M122, FieldUnitObj)
    External (_SB_.PCI0.M127, DeviceObj)
    External (_SB_.PCI0.M128, FieldUnitObj)
    External (_SB_.PCI0.M131, FieldUnitObj)
    External (_SB_.PCI0.M132, FieldUnitObj)
    External (_SB_.PCI0.M133, FieldUnitObj)
    External (_SB_.PCI0.M134, FieldUnitObj)
    External (_SB_.PCI0.M135, FieldUnitObj)
    External (_SB_.PCI0.M136, FieldUnitObj)
    External (_SB_.PCI0.M220, FieldUnitObj)
    External (_SB_.PCI0.M221, FieldUnitObj)
    External (_SB_.PCI0.M226, FieldUnitObj)
    External (_SB_.PCI0.M227, DeviceObj)
    External (_SB_.PCI0.M229, FieldUnitObj)
    External (_SB_.PCI0.M231, FieldUnitObj)
    External (_SB_.PCI0.M233, FieldUnitObj)
    External (_SB_.PCI0.M235, FieldUnitObj)
    External (_SB_.PCI0.M251, FieldUnitObj)
    External (_SB_.PCI0.M280, FieldUnitObj)
    External (_SB_.PCI0.M290, FieldUnitObj)
    External (_SB_.PCI0.M310, FieldUnitObj)
    External (_SB_.PCI0.M320, FieldUnitObj)
    External (_SB_.PCI0.M321, FieldUnitObj)
    External (_SB_.PCI0.M322, FieldUnitObj)
    External (_SB_.PCI0.M323, FieldUnitObj)
    External (_SB_.PCI0.M324, FieldUnitObj)
    External (_SB_.PCI0.M325, FieldUnitObj)
    External (_SB_.PCI0.M326, FieldUnitObj)
    External (_SB_.PCI0.M327, FieldUnitObj)
    External (_SB_.PCI0.M328, FieldUnitObj)
    External (_SB_.PCI0.M329, DeviceObj)
    External (_SB_.PCI0.M330, DeviceObj)
    External (_SB_.PCI0.M378, FieldUnitObj)
    External (_SB_.PCI0.M379, FieldUnitObj)
    External (_SB_.PCI0.M380, FieldUnitObj)
    External (_SB_.PCI0.M381, FieldUnitObj)
    External (_SB_.PCI0.M382, FieldUnitObj)
    External (_SB_.PCI0.M383, FieldUnitObj)
    External (_SB_.PCI0.M384, FieldUnitObj)
    External (_SB_.PCI0.M385, FieldUnitObj)
    External (_SB_.PCI0.M386, FieldUnitObj)
    External (_SB_.PCI0.M387, FieldUnitObj)
    External (_SB_.PCI0.M388, FieldUnitObj)
    External (_SB_.PCI0.M389, FieldUnitObj)
    External (_SB_.PCI0.M390, FieldUnitObj)
    External (_SB_.PCI0.M391, FieldUnitObj)
    External (_SB_.PCI0.M392, FieldUnitObj)
    External (_SB_.PCI0.M404, DeviceObj)
    External (_SB_.TPM_.PTS_, MethodObj)    // 1 Arguments
    External (_TZ_.TZ01, ThermalZoneObj)
    External (M083, IntObj)
    External (MWAK, MethodObj)    // 1 Arguments
    External (ODV0, IntObj)

    OperationRegion (SYST, SystemMemory, 0xCE3ADF98, 0x00000001)
    Field (SYST, AnyAcc, Lock, Preserve)
    {
        RV2,    8
    }

    Name (WOLD, "_S5WOL_#0117EF00000000#")
    Scope (_PR)
    {
        Processor (C000, 0x00, 0x00000410, 0x06){}
        Processor (C001, 0x01, 0x00000410, 0x06){}
        Processor (C002, 0x02, 0x00000410, 0x06){}
        Processor (C003, 0x03, 0x00000410, 0x06){}
        Processor (C004, 0x04, 0x00000410, 0x06){}
        Processor (C005, 0x05, 0x00000410, 0x06){}
        Processor (C006, 0x06, 0x00000410, 0x06){}
        Processor (C007, 0x07, 0x00000410, 0x06){}
    }

    Name (TZFG, 0x00)
    OperationRegion (DBG0, SystemIO, 0x80, 0x01)
    Field (DBG0, ByteAcc, NoLock, Preserve)
    {
        IO80,   8
    }

    OperationRegion (EC01, SystemIO, 0x0666, One)
    Field (EC01, ByteAcc, NoLock, Preserve)
    {
        E666,   8
    }

    OperationRegion (DEB2, SystemIO, 0x80, 0x02)
    Field (DEB2, WordAcc, NoLock, Preserve)
    {
        P80H,   16
    }

    OperationRegion (PSMI, SystemIO, 0xB0, 0x02)
    Field (PSMI, ByteAcc, NoLock, Preserve)
    {
        APMC,   8, 
        APMD,   8
    }

    Method (TPST, 1, Serialized)
    {
        Local0 = (Arg0 + 0xB0000000)
        OperationRegion (VARM, SystemIO, 0x80, 0x04)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VARR,   32
        }

        VARR = Local0
    }

    OperationRegion (P01, SystemIO, 0x0401, 0x01)
    Field (P01, ByteAcc, NoLock, Preserve)
    {
        PST1,   8
    }

    Name (PRWP, Package (0x02)
    {
        Zero, 
        Zero
    })
    Method (GPRW, 2, NotSerialized)
    {
        PRWP [Zero] = Arg0
        PRWP [One] = Arg1
        If ((DAS3 == Zero))
        {
            If ((Arg1 <= 0x03))
            {
                PRWP [One] = Zero
            }
        }

        Return (PRWP) /* \PRWP */
    }

    OperationRegion (ECMM, SystemMemory, 0xFEEC2000, 0x0100)
    Field (ECMM, ByteAcc, NoLock, Preserve)
    {
        Offset (0xA3), 
        EMA3,   8, 
        Offset (0xEE), 
        EMEE,   8
    }

    OperationRegion (GNVS, SystemMemory, 0xCE4F9C98, 0x0000000B)
    Field (GNVS, AnyAcc, NoLock, Preserve)
    {
        BRTL,   8, 
        IGDS,   8, 
        CSTE,   16, 
        BVAL,   32, 
        CNSB,   8, 
        DAS3,   8, 
        WKPM,   8
    }

    OperationRegion (OGNS, SystemMemory, 0xCE3ADE98, 0x00000008)
    Field (OGNS, AnyAcc, Lock, Preserve)
    {
        M2WL,   8, 
        THPN,   8, 
        PBAR,   8, 
        THPD,   8, 
        SDMO,   8, 
        TBEN,   8, 
        TBNH,   8, 
        RV2I,   8
    }

    OperationRegion (PNVS, SystemMemory, 0xCE3ADF18, 0x00000002)
    Field (PNVS, AnyAcc, NoLock, Preserve)
    {
        HDSI,   8, 
        HDSO,   8
    }

    Name (LINX, 0x00)
    Name (OSSP, 0x00)
    Name (OSTB, Ones)
    Name (TPOS, Zero)
    Method (OSTP, 0, NotSerialized)
    {
        If ((OSTB == Ones))
        {
            If (CondRefOf (\_OSI, Local0))
            {
                OSTB = 0x00
                TPOS = 0x00
                If (_OSI ("Windows 2001"))
                {
                    OSTB = 0x08
                    TPOS = 0x08
                }

                If (_OSI ("Windows 2001.1"))
                {
                    OSTB = 0x20
                    TPOS = 0x20
                }

                If (_OSI ("Windows 2001 SP1"))
                {
                    OSTB = 0x10
                    TPOS = 0x10
                }

                If (_OSI ("Windows 2001 SP2"))
                {
                    OSTB = 0x11
                    TPOS = 0x11
                }

                If (_OSI ("Windows 2001 SP3"))
                {
                    OSTB = 0x12
                    TPOS = 0x12
                }

                If (_OSI ("Windows 2006"))
                {
                    OSTB = 0x40
                    TPOS = 0x40
                }

                If (_OSI ("Windows 2006 SP1"))
                {
                    OSSP = 0x01
                    OSTB = 0x40
                    TPOS = 0x40
                }

                If (_OSI ("Windows 2009"))
                {
                    OSSP = 0x01
                    OSTB = 0x50
                    TPOS = 0x50
                }

                If (_OSI ("Windows 2012"))
                {
                    OSSP = 0x01
                    OSTB = 0x60
                    TPOS = 0x60
                }

                If (_OSI ("Windows 2013"))
                {
                    OSSP = 0x01
                    OSTB = 0x61
                    TPOS = 0x61
                }

                If (_OSI ("Windows 2015"))
                {
                    OSSP = 0x01
                    OSTB = 0x70
                    TPOS = 0x70
                }

                If (_OSI ("Linux"))
                {
                    LINX = 0x01
                    OSTB = 0x80
                    TPOS = 0x80
                }
            }
            ElseIf (CondRefOf (\_OS, Local0))
            {
                If (SEQL (_OS, "Microsoft Windows"))
                {
                    OSTB = 0x01
                    TPOS = 0x01
                }
                ElseIf (SEQL (_OS, "Microsoft WindowsME: Millennium Edition"))
                {
                    OSTB = 0x02
                    TPOS = 0x02
                }
                ElseIf (SEQL (_OS, "Microsoft Windows NT"))
                {
                    OSTB = 0x04
                    TPOS = 0x04
                }
                Else
                {
                    OSTB = 0x00
                    TPOS = 0x00
                }
            }
            Else
            {
                OSTB = 0x00
                TPOS = 0x00
            }

            If ((TPOS == 0x80)){}
        }

        Return (OSTB) /* \OSTB */
    }

    Method (SEQL, 2, Serialized)
    {
        Local0 = SizeOf (Arg0)
        Local1 = SizeOf (Arg1)
        If ((Local0 != Local1))
        {
            Return (Zero)
        }

        Name (BUF0, Buffer (Local0){})
        BUF0 = Arg0
        Name (BUF1, Buffer (Local0){})
        BUF1 = Arg1
        Local2 = Zero
        While ((Local2 < Local0))
        {
            Local3 = DerefOf (BUF0 [Local2])
            Local4 = DerefOf (BUF1 [Local2])
            If ((Local3 != Local4))
            {
                Return (Zero)
            }

            Local2++
        }

        Return (One)
    }

    Name (_S0, Package (0x04)  // _S0_: S0 System State
    {
        0x00, 
        0x00, 
        0x00, 
        0x00
    })
    Name (_S3, Package (0x04)  // _S3_: S3 System State
    {
        0x03, 
        0x03, 
        0x00, 
        0x00
    })
    Name (_S4, Package (0x04)  // _S4_: S4 System State
    {
        0x04, 
        0x04, 
        0x00, 
        0x00
    })
    Name (_S5, Package (0x04)  // _S5_: S5 System State
    {
        0x05, 
        0x05, 
        0x00, 
        0x00
    })
    Method (_PTS, 1, NotSerialized)  // _PTS: Prepare To Sleep
    {
        If (CondRefOf (\_SB.TPM.PTS))
        {
            \_SB.TPM.PTS (Arg0)
        }

        If ((Arg0 == 0x05)){}
        If ((Arg0 == 0x04)){}
        If ((Arg0 == 0x03))
        {
            \_SB.PCI0.SMB.RSTU = Zero
        }

        \_SB.PCI0.SMB.CLPS = 0x01
        \_SB.PCI0.SMB.SLPS = 0x01
        \_SB.PCI0.SMB.PEWS = \_SB.PCI0.SMB.PEWS
        \_SB.APTS (Arg0)
    }

    Method (_WAK, 1, NotSerialized)  // _WAK: Wake
    {
        If ((Arg0 == 0x03))
        {
            \_SB.PCI0.SMB.RSTU = One
        }

        \_SB.PCI0.SMB.PEWS = \_SB.PCI0.SMB.PEWS
        \_SB.PCI0.SMB.PWDE = 0x01
        \_SB.PCI0.SMB.PEWD = Zero
        \_SB.AWAK (Arg0)
        If ((Arg0 == 0x03))
        {
            If (GPIC)
            {
                \_SB.PCI0.LPC0.DSPI ()
            }

            Notify (\_SB.PWRB, 0x02) // Device Wake
        }

        If ((Arg0 == 0x04))
        {
            If (GPIC)
            {
                \_SB.PCI0.LPC0.DSPI ()
            }

            Notify (\_SB.PWRB, 0x02) // Device Wake
        }

        \_SB.PCI0.LPC0.H_EC.ADP1.ACDC = 0xFF
        MWAK (Arg0)
        Notify (\_SB.PCI0, 0x00) // Bus Check
        \_SB.PCI0.LPC0.H_EC.BKLI = 0x01
        E666 = 0x82
        Return (Zero)
    }

    Scope (_SI)
    {
        Method (_SST, 1, NotSerialized)  // _SST: System Status
        {
            If ((Arg0 == 0x01))
            {
                Debug = "===== SST Working ====="
            }

            If ((Arg0 == 0x02))
            {
                Debug = "===== SST Waking ====="
            }

            If ((Arg0 == 0x03))
            {
                Debug = "===== SST Sleeping ====="
            }

            If ((Arg0 == 0x04))
            {
                Debug = "===== SST Sleeping S4 ====="
            }
        }
    }

    Name (GPIC, 0x00)
    Method (_PIC, 1, NotSerialized)  // _PIC: Interrupt Model
    {
        GPIC = Arg0
        If (Arg0)
        {
            \_SB.PCI0.LPC0.DSPI ()
        }
    }

    Scope (_SB)
    {
        Mutex (MSGF, 0x00)
        Scope (\_SB)
        {
            Device (DMIC)
            {
                Name (_HID, "DMIC0001")  // _HID: Hardware ID
                Name (_UID, "BTLD")  // _UID: Unique ID
                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    If ((V089 == 0x00))
                    {
                        Return (0x0F)
                    }
                    Else
                    {
                        Return (0x00)
                    }
                }

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {
                    If ((Arg0 == ToUUID ("7790c86f-4ec3-4c09-ba2a-f9f7720f9816") /* Unknown UUID */))
                    {
                        Switch (ToInteger (Arg2))
                        {
                            Case (0x00)
                            {
                                Return (Buffer (0x01)
                                {
                                     0x0F                                             // .
                                })
                            }
                            Case (0x01)
                            {
                                Return (O086) /* \_SB_.O086 */
                            }
                            Case (0x02)
                            {
                                O086 = 0x00
                                Return (O086) /* \_SB_.O086 */
                            }
                            Case (0x03)
                            {
                                O086 = 0x01
                                Return (O086) /* \_SB_.O086 */
                            }

                        }
                    }

                    Return (Buffer (0x01)
                    {
                         0x00                                             // .
                    })
                }
            }
        }

        Device (PWRB)
        {
            Name (_HID, EisaId ("PNP0C0C") /* Power Button Device */)  // _HID: Hardware ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0B)
            }
        }

        Device (PCI0)
        {
            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
            Name (_UID, 0x01)  // _UID: Unique ID
            Name (_BBN, 0x00)  // _BBN: BIOS Bus Number
            Name (_ADR, 0x00)  // _ADR: Address
            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                If ((GPIC != Zero))
                {
                    ^LPC0.DSPI ()
                }

                OSTP ()
            }

            Name (SUPP, 0x00)
            Name (CTRL, 0x00)
            Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
            {
                CreateDWordField (Arg3, 0x00, CDW1)
                CreateDWordField (Arg3, 0x04, CDW2)
                CreateDWordField (Arg3, 0x08, CDW3)
                If ((Arg0 == ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */))
                {
                    SUPP = CDW2 /* \_SB_.PCI0._OSC.CDW2 */
                    CTRL = CDW3 /* \_SB_.PCI0._OSC.CDW3 */
                    If ((TBEN == One))
                    {
                        If ((TBNH != Zero))
                        {
                            CTRL &= 0xFFFFFFF5
                        }
                        Else
                        {
                            CTRL &= 0xFFFFFFF4
                        }
                    }

                    If (((SUPP & 0x16) != 0x16))
                    {
                        CTRL &= 0x1E
                    }

                    CTRL &= 0x1D
                    If (~(CDW1 & 0x01))
                    {
                        If ((CTRL & 0x01)){}
                        If ((CTRL & 0x04)){}
                        If ((CTRL & 0x10)){}
                    }

                    If ((Arg1 != One))
                    {
                        CDW1 |= 0x08
                    }

                    If ((CDW3 != CTRL))
                    {
                        CDW1 |= 0x10
                    }

                    CDW3 = CTRL /* \_SB_.PCI0.CTRL */
                    Return (Arg3)
                }
                Else
                {
                    CDW1 |= 0x04
                    Return (Arg3)
                }
            }

            OperationRegion (K8ST, SystemMemory, 0xCE4F9B98, 0x00000068)
            Field (K8ST, AnyAcc, NoLock, Preserve)
            {
                C0_0,   16, 
                C2_0,   16, 
                C4_0,   16, 
                C6_0,   16, 
                C8_0,   16, 
                CA_0,   16, 
                CC_0,   16, 
                CE_0,   16, 
                D0_0,   16, 
                D2_0,   16, 
                D4_0,   16, 
                D6_0,   16, 
                D8_0,   16, 
                DA_0,   16, 
                DC_0,   16, 
                DE_0,   16, 
                E0_0,   16, 
                E2_0,   16, 
                E4_0,   16, 
                E6_0,   16, 
                E8_0,   16, 
                EA_0,   16, 
                EC_0,   16, 
                EE_0,   16, 
                F0_0,   16, 
                F2_0,   16, 
                F4_0,   16, 
                F6_0,   16, 
                F8_0,   16, 
                FA_0,   16, 
                FC_0,   16, 
                FE_0,   16, 
                TOML,   32, 
                TOMH,   32, 
                PCIB,   32, 
                PCIS,   32, 
                T1MN,   64, 
                T1MX,   64, 
                T1LN,   64
            }

            Name (RSRC, ResourceTemplate ()
            {
                WordBusNumber (ResourceProducer, MinFixed, MaxFixed, SubDecode,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x00FF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0100,             // Length
                    0x00,, )
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000A0000,         // Range Minimum
                    0x000BFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00020000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C0000,         // Range Minimum
                    0x000C1FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C2000,         // Range Minimum
                    0x000C3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C4000,         // Range Minimum
                    0x000C5FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C6000,         // Range Minimum
                    0x000C7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C8000,         // Range Minimum
                    0x000C9FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000CA000,         // Range Minimum
                    0x000CBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000CC000,         // Range Minimum
                    0x000CDFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000CE000,         // Range Minimum
                    0x000CFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D0000,         // Range Minimum
                    0x000D1FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D2000,         // Range Minimum
                    0x000D3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D4000,         // Range Minimum
                    0x000D5FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D6000,         // Range Minimum
                    0x000D7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D8000,         // Range Minimum
                    0x000D9FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000DA000,         // Range Minimum
                    0x000DBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000DC000,         // Range Minimum
                    0x000DDFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000DE000,         // Range Minimum
                    0x000DFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E0000,         // Range Minimum
                    0x000E1FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E2000,         // Range Minimum
                    0x000E3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E4000,         // Range Minimum
                    0x000E5FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E6000,         // Range Minimum
                    0x000E7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E8000,         // Range Minimum
                    0x000E9FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000EA000,         // Range Minimum
                    0x000EBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000EC000,         // Range Minimum
                    0x000EDFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000EE000,         // Range Minimum
                    0x000EFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00002000,         // Length
                    0x00,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x00000000,         // Range Minimum
                    0x00000000,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00000000,         // Length
                    0x00,, _Y00, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, SubDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0xFC000000,         // Range Minimum
                    0xFDFFFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x02000000,         // Length
                    0x00,, _Y01, AddressRangeMemory, TypeStatic)
                QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x0000000000000000, // Granularity
                    0x0000000000000000, // Range Minimum
                    0x0000000000000000, // Range Maximum
                    0x0000000000000000, // Translation Offset
                    0x0000000000000000, // Length
                    ,, _Y02, AddressRangeMemory, TypeStatic)
                IO (Decode16,
                    0x0CF8,             // Range Minimum
                    0x0CF8,             // Range Maximum
                    0x01,               // Alignment
                    0x08,               // Length
                    )
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x0CF7,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0CF8,             // Length
                    0x00,, , TypeStatic, DenseTranslation)
                WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x0000,             // Granularity
                    0x0D00,             // Range Minimum
                    0xFFFF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0xF300,             // Length
                    0x00,, , TypeStatic, DenseTranslation)
            })
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                CreateDWordField (RSRC, \_SB.PCI0._Y00._MIN, BT1S)  // _MIN: Minimum Base Address
                CreateDWordField (RSRC, \_SB.PCI0._Y00._MAX, BT1M)  // _MAX: Maximum Base Address
                CreateDWordField (RSRC, \_SB.PCI0._Y00._LEN, BT1L)  // _LEN: Length
                CreateDWordField (RSRC, \_SB.PCI0._Y01._MIN, BT2S)  // _MIN: Minimum Base Address
                CreateDWordField (RSRC, \_SB.PCI0._Y01._MAX, BT2M)  // _MAX: Maximum Base Address
                CreateDWordField (RSRC, \_SB.PCI0._Y01._LEN, BT2L)  // _LEN: Length
                Local0 = PCIB /* \_SB_.PCI0.PCIB */
                BT1S = TOML /* \_SB_.PCI0.TOML */
                BT1M = (Local0 - 0x01)
                BT1L = (Local0 - TOML) /* \_SB_.PCI0.TOML */
                CreateQWordField (RSRC, \_SB.PCI0._Y02._MIN, M1MN)  // _MIN: Minimum Base Address
                CreateQWordField (RSRC, \_SB.PCI0._Y02._MAX, M1MX)  // _MAX: Maximum Base Address
                CreateQWordField (RSRC, \_SB.PCI0._Y02._LEN, M1LN)  // _LEN: Length
                M1MN = T1MN /* \_SB_.PCI0.T1MN */
                M1MX = T1MX /* \_SB_.PCI0.T1MX */
                M1LN = T1LN /* \_SB_.PCI0.T1LN */
                Return (RSRC) /* \_SB_.PCI0.RSRC */
            }

            Device (MEMR)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (MEM1, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x0F50,             // Range Minimum
                        0x0F50,             // Range Maximum
                        0x01,               // Alignment
                        0x02,               // Length
                        )
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00000000,         // Address Length
                        _Y03)
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00000000,         // Address Length
                        _Y04)
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00000000,         // Address Length
                        _Y05)
                })
                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y03._BAS, MB01)  // _BAS: Base Address
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y03._LEN, ML01)  // _LEN: Length
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y04._BAS, MB02)  // _BAS: Base Address
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y04._LEN, ML02)  // _LEN: Length
                    If (GPIC)
                    {
                        MB01 = 0xFEC00000
                        MB02 = 0xFEE00000
                        ML01 = 0x2000
                        ML02 = 0x1000
                    }

                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y05._BAS, MB03)  // _BAS: Base Address
                    CreateDWordField (MEM1, \_SB.PCI0.MEMR._Y05._LEN, ML03)  // _LEN: Length
                    MB03 = PCIB /* \_SB_.PCI0.PCIB */
                    ML03 = PCIS /* \_SB_.PCI0.PCIS */
                    Return (MEM1) /* \_SB_.PCI0.MEMR.MEM1 */
                }
            }

            Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
            {
                If (GPIC)
                {
                    Return (Package (0x0A)
                    {
                        Package (0x04)
                        {
                            0x0001FFFF, 
                            0x00, 
                            0x00, 
                            0x28
                        }, 

                        Package (0x04)
                        {
                            0x0001FFFF, 
                            0x01, 
                            0x00, 
                            0x29
                        }, 

                        Package (0x04)
                        {
                            0x0001FFFF, 
                            0x02, 
                            0x00, 
                            0x2A
                        }, 

                        Package (0x04)
                        {
                            0x0001FFFF, 
                            0x03, 
                            0x00, 
                            0x2B
                        }, 

                        Package (0x04)
                        {
                            0x0008FFFF, 
                            0x00, 
                            0x00, 
                            0x2B
                        }, 

                        Package (0x04)
                        {
                            0x0008FFFF, 
                            0x01, 
                            0x00, 
                            0x24
                        }, 

                        Package (0x04)
                        {
                            0x0014FFFF, 
                            0x00, 
                            0x00, 
                            0x10
                        }, 

                        Package (0x04)
                        {
                            0x0014FFFF, 
                            0x01, 
                            0x00, 
                            0x11
                        }, 

                        Package (0x04)
                        {
                            0x0014FFFF, 
                            0x02, 
                            0x00, 
                            0x12
                        }, 

                        Package (0x04)
                        {
                            0x0014FFFF, 
                            0x03, 
                            0x00, 
                            0x13
                        }
                    })
                }
                Else
                {
                    Return (Package (0x0A)
                    {
                        Package (0x04)
                        {
                            0x0001FFFF, 
                            0x00, 
                            ^LPC0.LNKA, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0001FFFF, 
                            0x01, 
                            ^LPC0.LNKB, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0001FFFF, 
                            0x02, 
                            ^LPC0.LNKC, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0001FFFF, 
                            0x03, 
                            ^LPC0.LNKD, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0008FFFF, 
                            0x00, 
                            ^LPC0.LNKD, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0008FFFF, 
                            0x01, 
                            ^LPC0.LNKE, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0014FFFF, 
                            0x00, 
                            ^LPC0.LNKA, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0014FFFF, 
                            0x01, 
                            ^LPC0.LNKB, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0014FFFF, 
                            0x02, 
                            ^LPC0.LNKC, 
                            0x00
                        }, 

                        Package (0x04)
                        {
                            0x0014FFFF, 
                            0x03, 
                            ^LPC0.LNKD, 
                            0x00
                        }
                    })
                }
            }

            OperationRegion (BAR1, PCI_Config, 0x14, 0x04)
            Field (BAR1, ByteAcc, NoLock, Preserve)
            {
                NBBA,   32
            }

            Method (M017, 6, Serialized)
            {
                Local0 = M083 /* External reference */
                Local1 = (M083 >> 0x14)
                Local2 = (Local1 & 0x0F00)
                Local2 += 0x0100
                If (((Local1 + Arg0) >= Local2))
                {
                    Local3 = 0x7FFFFFFF
                    Local3 |= 0x80000000
                    Local4 = ((Local3 >> Arg4) & (Local3 >> (0x20 - Arg5)
                        ))
                    Return (Local4)
                }

                Local0 += (Arg0 << 0x14)
                Local0 += (Arg1 << 0x0F)
                Local0 += (Arg2 << 0x0C)
                Return (M013 (Local0, Arg3, Arg4, Arg5))
            }

            Method (WMEM, 5, Serialized)
            {
                Local0 = (Arg0 + Arg1)
                OperationRegion (VARM, SystemMemory, Local0, 0x04)
                Field (VARM, DWordAcc, NoLock, Preserve)
                {
                    VARR,   32
                }

                Local1 = VARR /* \_SB_.PCI0.WMEM.VARR */
                Local5 = 0x7FFFFFFF
                Local5 |= 0x80000000
                Local2 = (Arg2 + Arg3)
                Local2 = (0x20 - Local2)
                Local2 = (((Local5 << Local2) & Local5) >> Local2)
                Local2 = ((Local2 >> Arg2) << Arg2)
                Local3 = (Arg4 << Arg2)
                Local4 = ((Local1 & (Local5 ^ Local2)) | Local3)
                VARR = Local4
            }

            Method (WFIO, 2, Serialized)
            {
                Local0 = (Arg0 << 0x02)
                WMEM (0xFED81500, Local0, 0x16, 0x01, Arg1)
            }

            Device (GPP0)
            {
                Name (_ADR, 0x00010001)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x08, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x08, Zero))
                    }
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (GPIC)
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                0x00, 
                                0x18
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                0x00, 
                                0x19
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                0x00, 
                                0x1A
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                0x00, 
                                0x1B
                            }
                        })
                    }
                    Else
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                ^^LPC0.LNKA, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                ^^LPC0.LNKB, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                ^^LPC0.LNKC, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                ^^LPC0.LNKD, 
                                0x00
                            }
                        })
                    }
                }
            }

            Device (GPP1)
            {
                Name (_ADR, 0x00010002)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x08, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x08, Zero))
                    }
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (GPIC)
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                0x00, 
                                0x1C
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                0x00, 
                                0x1D
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                0x00, 
                                0x1E
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                0x00, 
                                0x1F
                            }
                        })
                    }
                    Else
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                ^^LPC0.LNKE, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                ^^LPC0.LNKF, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                ^^LPC0.LNKG, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                ^^LPC0.LNKH, 
                                0x00
                            }
                        })
                    }
                }

                Device (DEV0)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }
                }

                Device (DEV1)
                {
                    Name (_ADR, One)  // _ADR: Address
                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }

                    Method (QWRD, 0, Serialized)
                    {
                        Name (QWRY, Package (0x07)
                        {
                            0x02, 
                            0x01, 
                            0x24, 
                            0x1E, 
                            0x1E, 
                            0x1E, 
                            0x1E
                        })
                        Return (QWRY) /* \_SB_.PCI0.GPP1.DEV1.QWRD.QWRY */
                    }
                }
            }

            Device (GPP2)
            {
                Name (_ADR, 0x00010003)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x08, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x08, Zero))
                    }
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (GPIC)
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                0x00, 
                                0x20
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                0x00, 
                                0x21
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                0x00, 
                                0x22
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                0x00, 
                                0x23
                            }
                        })
                    }
                    Else
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                ^^LPC0.LNKA, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                ^^LPC0.LNKB, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                ^^LPC0.LNKC, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                ^^LPC0.LNKD, 
                                0x00
                            }
                        })
                    }
                }

                Device (DEV0)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If ((M2WL == One))
                        {
                            Return (0x0F)
                        }
                        Else
                        {
                            Return (Zero)
                        }
                    }

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {
                        Return (Zero)
                    }
                }
            }

            Device (GPP3)
            {
                Name (_ADR, 0x00010004)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x08, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x08, Zero))
                    }
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (GPIC)
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                0x00, 
                                0x24
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                0x00, 
                                0x25
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                0x00, 
                                0x26
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                0x00, 
                                0x27
                            }
                        })
                    }
                    Else
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                ^^LPC0.LNKE, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                ^^LPC0.LNKF, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                ^^LPC0.LNKG, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                ^^LPC0.LNKH, 
                                0x00
                            }
                        })
                    }
                }
            }

            Device (GPP4)
            {
                Name (_ADR, 0x00010005)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x08, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x08, Zero))
                    }
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (GPIC)
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                0x00, 
                                0x28
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                0x00, 
                                0x29
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                0x00, 
                                0x2A
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                0x00, 
                                0x2B
                            }
                        })
                    }
                    Else
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                ^^LPC0.LNKA, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                ^^LPC0.LNKB, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                ^^LPC0.LNKC, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                ^^LPC0.LNKD, 
                                0x00
                            }
                        })
                    }
                }
            }

            Device (GPP5)
            {
                Name (_ADR, 0x00010006)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x08, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x08, Zero))
                    }
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (GPIC)
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                0x00, 
                                0x2C
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                0x00, 
                                0x2D
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                0x00, 
                                0x2E
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                0x00, 
                                0x2F
                            }
                        })
                    }
                    Else
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                ^^LPC0.LNKE, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                ^^LPC0.LNKF, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                ^^LPC0.LNKG, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                ^^LPC0.LNKH, 
                                0x00
                            }
                        })
                    }
                }
            }

            Device (GPP6)
            {
                Name (_ADR, 0x00010007)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x08, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x08, Zero))
                    }
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (GPIC)
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                0x00, 
                                0x30
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                0x00, 
                                0x31
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                0x00, 
                                0x32
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                0x00, 
                                0x33
                            }
                        })
                    }
                    Else
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                ^^LPC0.LNKA, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                ^^LPC0.LNKB, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                ^^LPC0.LNKC, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                ^^LPC0.LNKD, 
                                0x00
                            }
                        })
                    }
                }
            }

            Device (GP17)
            {
                Name (_ADR, 0x00080001)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x19, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x19, Zero))
                    }
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (GPIC)
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                0x00, 
                                0x34
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                0x00, 
                                0x35
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                0x00, 
                                0x36
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                0x00, 
                                0x37
                            }
                        })
                    }
                    Else
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                ^^LPC0.LNKE, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                ^^LPC0.LNKF, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                ^^LPC0.LNKG, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                ^^LPC0.LNKH, 
                                0x00
                            }
                        })
                    }
                }

                Device (VGA)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Name (DOSA, Zero)
                    Method (_DOS, 1, NotSerialized)  // _DOS: Disable Output Switching
                    {
                        DOSA = Arg0
                    }

                    Method (_DOD, 0, NotSerialized)  // _DOD: Display Output Devices
                    {
                        Return (Package (0x07)
                        {
                            0x00010110, 
                            0x00010210, 
                            0x00010220, 
                            0x00010230, 
                            0x00010240, 
                            0x00031000, 
                            0x00032000
                        })
                    }

                    Device (LCD)
                    {
                        Name (_ADR, 0x0110)  // _ADR: Address
                        Name (BCLB, Package (0x66)
                        {
                            0x5A, 
                            0x3C, 
                            0x01, 
                            0x02, 
                            0x03, 
                            0x04, 
                            0x05, 
                            0x06, 
                            0x07, 
                            0x08, 
                            0x09, 
                            0x0A, 
                            0x0B, 
                            0x0C, 
                            0x0D, 
                            0x0E, 
                            0x0F, 
                            0x10, 
                            0x11, 
                            0x12, 
                            0x13, 
                            0x14, 
                            0x15, 
                            0x16, 
                            0x17, 
                            0x18, 
                            0x19, 
                            0x1A, 
                            0x1B, 
                            0x1C, 
                            0x1D, 
                            0x1E, 
                            0x1F, 
                            0x20, 
                            0x21, 
                            0x22, 
                            0x23, 
                            0x24, 
                            0x25, 
                            0x26, 
                            0x27, 
                            0x28, 
                            0x29, 
                            0x2A, 
                            0x2B, 
                            0x2C, 
                            0x2D, 
                            0x2E, 
                            0x2F, 
                            0x30, 
                            0x31, 
                            0x32, 
                            0x33, 
                            0x34, 
                            0x35, 
                            0x36, 
                            0x37, 
                            0x38, 
                            0x39, 
                            0x3A, 
                            0x3B, 
                            0x3C, 
                            0x3D, 
                            0x3E, 
                            0x3F, 
                            0x40, 
                            0x41, 
                            0x42, 
                            0x43, 
                            0x44, 
                            0x45, 
                            0x46, 
                            0x47, 
                            0x48, 
                            0x49, 
                            0x4A, 
                            0x4B, 
                            0x4C, 
                            0x4D, 
                            0x4E, 
                            0x4F, 
                            0x50, 
                            0x51, 
                            0x52, 
                            0x53, 
                            0x54, 
                            0x55, 
                            0x56, 
                            0x57, 
                            0x58, 
                            0x59, 
                            0x5A, 
                            0x5B, 
                            0x5C, 
                            0x5D, 
                            0x5E, 
                            0x5F, 
                            0x60, 
                            0x61, 
                            0x62, 
                            0x63, 
                            0x64
                        })
                        Method (_BCL, 0, NotSerialized)  // _BCL: Brightness Control Levels
                        {
                            Return (BCLB) /* \_SB_.PCI0.GP17.VGA_.LCD_.BCLB */
                        }

                        Method (_BCM, 1, NotSerialized)  // _BCM: Brightness Control Method
                        {
                            Divide ((Arg0 * 0xFF), 0x64, Local1, Local0)
                            AFN7 (Local0)
                            BRTL = Arg0
                        }
                    }
                }

                Device (PSP)
                {
                    Name (_ADR, 0x02)  // _ADR: Address
                }

                Device (ACP)
                {
                    Name (_ADR, 0x05)  // _ADR: Address
                }

                Device (AZAL)
                {
                    Name (_ADR, 0x06)  // _ADR: Address
                }

                Device (HDAU)
                {
                    Name (_ADR, One)  // _ADR: Address
                }

                Device (XHC0)
                {
                    Name (_ADR, 0x03)  // _ADR: Address
                    Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
                    {
                        Return (0x00)
                    }

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x19, 0x03))
                    }

                    Device (RHUB)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Method (GPLF, 0, Serialized)
                        {
                            Name (PCKG, Package (0x01)
                            {
                                Buffer (0x10)
                                {
                                    /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                    /* 0008 */  0x24, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // $.......
                                }
                            })
                            Return (PCKG) /* \_SB_.PCI0.GP17.XHC0.RHUB.GPLF.PCKG */
                        }

                        Method (GPLR, 0, Serialized)
                        {
                            Name (PCKG, Package (0x01)
                            {
                                Buffer (0x10)
                                {
                                    /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                    /* 0008 */  0x2C, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ,.......
                                }
                            })
                            Return (PCKG) /* \_SB_.PCI0.GP17.XHC0.RHUB.GPLR.PCKG */
                        }

                        Method (GUPC, 2, Serialized)
                        {
                            Name (PCKG, Package (0x04)
                            {
                                0xFF, 
                                0xFF, 
                                0x00, 
                                0x00
                            })
                            PCKG [0x00] = Arg0
                            PCKG [0x01] = Arg1
                            Return (PCKG) /* \_SB_.PCI0.GP17.XHC0.RHUB.GUPC.PCKG */
                        }

                        Device (PRT1)
                        {
                            Name (_ADR, One)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0x09, 
                                0x00, 
                                0x00
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x1,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x0,
                                    PLD_Panel              = "LEFT",
                                    PLD_VerticalPosition   = "CENTER",
                                    PLD_HorizontalPosition = "CENTER",
                                    PLD_Shape              = "OVAL",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0x1,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x0,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0)

                            })
                        }

                        Device (PRT2)
                        {
                            Name (_ADR, 0x02)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0x00, 
                                0x00, 
                                0x00
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x1,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x0,
                                    PLD_Panel              = "RIGHT",
                                    PLD_VerticalPosition   = "CENTER",
                                    PLD_HorizontalPosition = "LEFT",
                                    PLD_Shape              = "HORIZONTALRECTANGLE",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0x2,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x0,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0)

                            })
                        }

                        Device (PRT3)
                        {
                            Name (_ADR, 0x03)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0x00, 
                                0x00, 
                                0x00
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x1,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x0,
                                    PLD_Panel              = "RIGHT",
                                    PLD_VerticalPosition   = "CENTER",
                                    PLD_HorizontalPosition = "LEFT",
                                    PLD_Shape              = "HORIZONTALRECTANGLE",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0x5,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x0,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0)

                            })
                        }

                        Device (PRT4)
                        {
                            Name (_ADR, 0x04)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (0xFF, 0xFF))
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Name (PLDP, Package (0x01)
                                {
                                    Buffer (0x14)
                                    {
                                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                        /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                        /* 0010 */  0xFF, 0xFF, 0xFF, 0xFF                           // ....
                                    }
                                })
                                Return (PLDP) /* \_SB_.PCI0.GP17.XHC0.RHUB.PRT4._PLD.PLDP */
                            }

                            Device (RCAM)
                            {
                                Name (_ADR, 0x04)  // _ADR: Address
                                Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                                {
                                    Return (GUPC (0xFF, 0xFF))
                                }

                                Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                                {
                                    Return (GPLR ())
                                }
                            }
                        }

                        Device (PRT5)
                        {
                            Name (_ADR, 0x05)  // _ADR: Address
                            Name (UPC2, Package (0x04)
                            {
                                0xFF, 
                                0xFF, 
                                Zero, 
                                Zero
                            })
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPC2) /* \_SB_.PCI0.GP17.XHC0.RHUB.PRT5.UPC2 */
                            }

                            Name (PLD2, Package (0x01)
                            {
                                Buffer (0x10)
                                {
                                    /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                    /* 0008 */  0x58, 0x1E, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00   // X.......
                                }
                            })
                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Return (PLD2) /* \_SB_.PCI0.GP17.XHC0.RHUB.PRT5.PLD2 */
                            }
                        }

                        Device (PRT6)
                        {
                            Name (_ADR, 0x06)  // _ADR: Address
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (GUPC (0xFF, 0xFF))
                            }

                            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                            {
                                Name (PLDP, Package (0x01)
                                {
                                    Buffer (0x14)
                                    {
                                        /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                        /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                        /* 0010 */  0xFF, 0xFF, 0xFF, 0xFF                           // ....
                                    }
                                })
                                Return (PLDP) /* \_SB_.PCI0.GP17.XHC0.RHUB.PRT6._PLD.PLDP */
                            }

                            Device (FCAM)
                            {
                                Name (_ADR, 0x06)  // _ADR: Address
                                Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                                {
                                    Return (GUPC (0xFF, 0xFF))
                                }

                                Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                                {
                                    Return (GPLF ())
                                }
                            }
                        }

                        Device (PRT7)
                        {
                            Name (_ADR, 0x07)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0x09, 
                                0x00, 
                                0x00
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x1,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x0,
                                    PLD_Panel              = "LEFT",
                                    PLD_VerticalPosition   = "CENTER",
                                    PLD_HorizontalPosition = "CENTER",
                                    PLD_Shape              = "OVAL",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0x1,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x0,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0)

                            })
                        }

                        Device (PRT8)
                        {
                            Name (_ADR, 0x08)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0x03, 
                                0x00, 
                                0x00
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x1,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x0,
                                    PLD_Panel              = "RIGHT",
                                    PLD_VerticalPosition   = "CENTER",
                                    PLD_HorizontalPosition = "LEFT",
                                    PLD_Shape              = "HORIZONTALRECTANGLE",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0x2,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x0,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0)

                            })
                        }

                        Device (PRT9)
                        {
                            Name (_ADR, 0x09)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0x03, 
                                0x00, 
                                0x00
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x1,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x0,
                                    PLD_Panel              = "RIGHT",
                                    PLD_VerticalPosition   = "CENTER",
                                    PLD_HorizontalPosition = "LEFT",
                                    PLD_Shape              = "HORIZONTALRECTANGLE",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0x5,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x0,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0)

                            })
                        }

                        Device (PRTA)
                        {
                            Name (_ADR, 0x0A)  // _ADR: Address
                            Method (_STA, 0, NotSerialized)  // _STA: Status
                            {
                                Return (0x0F)
                            }

                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0x00, 
                                0x00, 
                                Zero, 
                                Zero
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x1,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x0,
                                    PLD_Panel              = "LEFT",
                                    PLD_VerticalPosition   = "LOWER",
                                    PLD_HorizontalPosition = "CENTER",
                                    PLD_Shape              = "UNKNOWN",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0x4,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x1,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0,
                                    PLD_VerticalOffset     = 0xFFFF,
                                    PLD_HorizontalOffset   = 0xFFFF)

                            })
                        }
                    }
                }

                Device (XHC1)
                {
                    Name (_ADR, 0x04)  // _ADR: Address
                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {
                        Return (GPRW (0x19, 0x03))
                    }

                    Device (RHUB)
                    {
                        Name (_ADR, Zero)  // _ADR: Address
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            Return (0x00)
                        }

                        Device (PRT1)
                        {
                            Name (_ADR, One)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0x03, 
                                Zero, 
                                Zero
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x1,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x0,
                                    PLD_Panel              = "LEFT",
                                    PLD_VerticalPosition   = "UPPER",
                                    PLD_HorizontalPosition = "LEFT",
                                    PLD_Shape              = "VERTICALRECTANGLE",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0x5,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x1,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0,
                                    PLD_VerticalOffset     = 0xFFFF,
                                    PLD_HorizontalOffset   = 0xFFFF)

                            })
                        }

                        Device (PRT2)
                        {
                            Name (_ADR, 0x02)  // _ADR: Address
                            Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                            {
                                0xFF, 
                                0xFF, 
                                Zero, 
                                Zero
                            })
                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x0,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x0,
                                    PLD_Panel              = "LEFT",
                                    PLD_VerticalPosition   = "UPPER",
                                    PLD_HorizontalPosition = "LEFT",
                                    PLD_Shape              = "VERTICALRECTANGLE",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0x6,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x1,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0,
                                    PLD_VerticalOffset     = 0xFFFF,
                                    PLD_HorizontalOffset   = 0xFFFF)

                            })
                        }

                        Device (PRT3)
                        {
                            Name (_ADR, 0x03)  // _ADR: Address
                            Name (UPC1, Package (0x04)
                            {
                                0xFF, 
                                0x03, 
                                Zero, 
                                Zero
                            })
                            Name (UPC2, Package (0x04)
                            {
                                Zero, 
                                0x03, 
                                Zero, 
                                Zero
                            })
                            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                            {
                                Return (UPC1) /* \_SB_.PCI0.GP17.XHC1.RHUB.PRT3.UPC1 */
                            }

                            Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                            {
                                ToPLD (
                                    PLD_Revision           = 0x2,
                                    PLD_IgnoreColor        = 0x1,
                                    PLD_Red                = 0x0,
                                    PLD_Green              = 0x0,
                                    PLD_Blue               = 0x0,
                                    PLD_Width              = 0x0,
                                    PLD_Height             = 0x0,
                                    PLD_UserVisible        = 0x1,
                                    PLD_Dock               = 0x0,
                                    PLD_Lid                = 0x0,
                                    PLD_Panel              = "LEFT",
                                    PLD_VerticalPosition   = "UPPER",
                                    PLD_HorizontalPosition = "LEFT",
                                    PLD_Shape              = "VERTICALRECTANGLE",
                                    PLD_GroupOrientation   = 0x0,
                                    PLD_GroupToken         = 0x0,
                                    PLD_GroupPosition      = 0x5,
                                    PLD_Bay                = 0x0,
                                    PLD_Ejectable          = 0x1,
                                    PLD_EjectRequired      = 0x0,
                                    PLD_CabinetNumber      = 0x0,
                                    PLD_CardCageNumber     = 0x0,
                                    PLD_Reference          = 0x0,
                                    PLD_Rotation           = 0x0,
                                    PLD_Order              = 0x0,
                                    PLD_VerticalOffset     = 0xFFFF,
                                    PLD_HorizontalOffset   = 0xFFFF)

                            })
                        }
                    }
                }

                Device (MP2C)
                {
                    Name (_ADR, 0x07)  // _ADR: Address
                    Method (_STA, 0, Serialized)  // _STA: Status
                    {
                        Return (0x00)
                    }
                }
            }

            Device (GP18)
            {
                Name (_ADR, 0x00080002)  // _ADR: Address
                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {
                    If ((WKPM == One))
                    {
                        Return (GPRW (0x08, 0x04))
                    }
                    Else
                    {
                        Return (GPRW (0x08, Zero))
                    }
                }

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {
                    If (GPIC)
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                0x00, 
                                0x36
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                0x00, 
                                0x37
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                0x00, 
                                0x34
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                0x00, 
                                0x35
                            }
                        })
                    }
                    Else
                    {
                        Return (Package (0x04)
                        {
                            Package (0x04)
                            {
                                0xFFFF, 
                                0x00, 
                                ^^LPC0.LNKG, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x01, 
                                ^^LPC0.LNKH, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x02, 
                                ^^LPC0.LNKE, 
                                0x00
                            }, 

                            Package (0x04)
                            {
                                0xFFFF, 
                                0x03, 
                                ^^LPC0.LNKF, 
                                0x00
                            }
                        })
                    }
                }

                Device (SATA)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                }
            }

            Scope (GPP1)
            {
                Method (RHRS, 0, NotSerialized)
                {
                    Name (RBUF, ResourceTemplate ()
                    {
                        GpioInt (Edge, ActiveLow, ExclusiveAndWake, PullNone, 0x0000,
                            "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x0018
                            }
                        GpioInt (Edge, ActiveHigh, SharedAndWake, PullNone, 0x0000,
                            "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x00AC
                            }
                    })
                    Return (RBUF) /* \_SB_.PCI0.GPP1.RHRS.RBUF */
                }

                Device (WLAN)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
                    OperationRegion (CMIO, SystemIO, 0x72, 0x02)
                    Field (CMIO, ByteAcc, Lock, Preserve)
                    {
                        CINX,   8, 
                        CDAT,   8
                    }

                    IndexField (CINX, CDAT, ByteAcc, NoLock, Preserve)
                    {
                        Offset (0xA0), 
                        MTKS,   8
                    }

                    Method (MTDS, 0, Serialized)
                    {
                        Name (MSA0, Package (0x02)
                        {
                            0x00, 
                            0x00
                        })
                        Name (MSA1, Package (0x12)
                        {
                            0x4D, 
                            0x54, 
                            0x44, 
                            0x53, 
                            0x01, 
                            0x02, 
                            0x01, 
                            0x19, 
                            0x17, 
                            0x1D, 
                            0x15, 
                            0x1D, 
                            0x02, 
                            0x19, 
                            0x17, 
                            0x1D, 
                            0x15, 
                            0x1D
                        })
                        If ((MTKS == 0x01))
                        {
                            Return (MSA1) /* \_SB_.PCI0.GPP1.WLAN.MTDS.MSA1 */
                        }
                        Else
                        {
                            Return (MSA0) /* \_SB_.PCI0.GPP1.WLAN.MTDS.MSA0 */
                        }
                    }

                    OperationRegion (FLDR, PCI_Config, 0x00, 0xFF)
                    Field (FLDR, ByteAcc, NoLock, Preserve)
                    {
                        MTVD,   16, 
                        MTDD,   16, 
                        Offset (0x84), 
                        DCAP,   32, 
                        DCTR,   16
                    }

                    Name (_PRR, Package (0x01)  // _PRR: Power Resource for Reset
                    {
                        PWFR
                    })
                    PowerResource (PWFR, 0x00, 0x0000)
                    {
                        Method (_RST, 0, NotSerialized)  // _RST: Device Reset
                        {
                            If ((MTVD == 0x14C3))
                            {
                                If ((DCAP & 0x10000000))
                                {
                                    Local0 = DCTR /* \_SB_.PCI0.GPP1.WLAN.DCTR */
                                    Local0 |= 0x8000
                                    DCTR = Local0
                                }
                            }
                        }

                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            Return (0x0F)
                        }

                        Method (_ON, 0, NotSerialized)  // _ON_: Power On
                        {
                        }

                        Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
                        {
                        }
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If ((MTKS == 0xFF))
                        {
                            Return (0x00)
                        }
                        Else
                        {
                            Return (0x0F)
                        }
                    }
                }
            }

            Scope (GPP1.DEV0)
            {
                Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
            }

            Scope (GPP2)
            {
                Method (RHRS, 0, NotSerialized)
                {
                    Name (RBUF, ResourceTemplate ()
                    {
                        GpioInt (Edge, ActiveLow, ExclusiveAndWake, PullNone, 0x0000,
                            "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x0012
                            }
                        GpioInt (Edge, ActiveHigh, SharedAndWake, PullNone, 0x0000,
                            "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x00AC
                            }
                    })
                    Return (RBUF) /* \_SB_.PCI0.GPP2.RHRS.RBUF */
                }
            }

            Scope (GPP2.DEV0)
            {
                Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
            }

            Method (PXCR, 3, Serialized)
            {
                Local0 = Zero
                Local1 = M017 (Arg0, Arg1, Arg2, 0x34, Zero, 0x08)
                While ((Local1 != Zero))
                {
                    Local2 = M017 (Arg0, Arg1, Arg2, Local1, Zero, 0x08)
                    If (((Local2 == Zero) || (Local2 == 0xFF)))
                    {
                        Break
                    }

                    If ((Local2 == 0x10))
                    {
                        Local0 = Local1
                        Break
                    }

                    Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + One), Zero, 0x08)
                }

                Return (Local0)
            }

            Scope (\_SB)
            {
                OperationRegion (PM80, SystemMemory, 0xFED80590, 0x10)
                Field (PM80, AnyAcc, NoLock, Preserve)
                {
                    SI3R,   1
                }

                Name (NBRI, Zero)
                Name (NBAR, Zero)
                Name (NCMD, Zero)
                Name (PXDC, Zero)
                Name (PXLC, Zero)
                Name (PXD2, Zero)
            }

            Scope (GPP4)
            {
                PowerResource (P0NV, 0x00, 0x0000)
                {
                    Name (D0NV, One)
                    Name (SLPS, 0x01)
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (D0NV) /* \_SB_.PCI0.GPP4.P0NV.D0NV */
                    }

                    Method (_ON, 0, NotSerialized)  // _ON_: Power On
                    {
                        If ((SI3R && Zero))
                        {
                            Local1 = PXCR (NBRI, Zero, Zero)
                            M020 (NBRI, Zero, Zero, (Local1 + 0x08), PXDC)
                            M020 (NBRI, Zero, Zero, (Local1 + 0x10), (PXLC & 0xFFFFFEFC))
                            M020 (NBRI, Zero, Zero, (Local1 + 0x28), PXD2)
                            M020 (NBRI, Zero, Zero, 0x10, NBAR)
                            M020 (NBRI, Zero, Zero, 0x04, (NCMD | 0x06))
                            APMC = HDSI /* \HDSI */
                            SI3R = Zero
                        }

                        D0NV = One
                    }

                    Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
                    {
                        Local0 = M019 (Zero, One, 0x05, 0x18)
                        NBRI = ((Local0 & 0xFF00) >> 0x08)
                        NCMD = M019 (NBRI, Zero, Zero, 0x04)
                        NBAR = M019 (NBRI, Zero, Zero, 0x10)
                        Local1 = PXCR (NBRI, Zero, Zero)
                        PXDC = M019 (NBRI, Zero, Zero, (Local1 + 0x08))
                        PXLC = M019 (NBRI, Zero, Zero, (Local1 + 0x10))
                        PXD2 = M019 (NBRI, Zero, Zero, (Local1 + 0x28))
                        D0NV = Zero
                    }
                }

                Device (NVME)
                {
                    Name (_ADR, Zero)  // _ADR: Address
                    Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
                    Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
                    {
                        P0NV
                    })
                    Name (_PR2, Package (0x01)  // _PR2: Power Resources for D2
                    {
                        P0NV
                    })
                    Name (_PR3, Package (0x01)  // _PR3: Power Resources for D3hot
                    {
                        P0NV
                    })
                    Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                    {
                    }

                    Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                    {
                    }

                    Name (_DSD, Package (0x02)  // _DSD: Device-Specific Data
                    {
                        ToUUID ("5025030f-842f-4ab4-a561-99a5189762d0") /* Unknown UUID */, 
                        Package (0x01)
                        {
                            Package (0x02)
                            {
                                "StorageD3Enable", 
                                One
                            }
                        }
                    })
                }
            }

            Device (SMB)
            {
                Name (_ADR, 0x00140000)  // _ADR: Address
                OperationRegion (SBRV, PCI_Config, 0x08, 0x0100)
                Field (SBRV, AnyAcc, NoLock, Preserve)
                {
                    RVID,   8, 
                    Offset (0x5A), 
                    I1F,    1, 
                    I12F,   1, 
                    Offset (0x7A), 
                        ,   2, 
                    G31O,   1, 
                    Offset (0xD9), 
                        ,   6, 
                    ACIR,   1
                }

                OperationRegion (PMIO, SystemIO, 0x0CD6, 0x02)
                Field (PMIO, ByteAcc, NoLock, Preserve)
                {
                    INPM,   8, 
                    DAPM,   8
                }

                IndexField (INPM, DAPM, ByteAcc, NoLock, Preserve)
                {
                        ,   6, 
                    HPEN,   1, 
                    Offset (0x60), 
                    P1EB,   16, 
                    Offset (0xF0), 
                        ,   3, 
                    RSTU,   1
                }

                OperationRegion (ERMG, SystemMemory, 0xFED81500, 0x03FF)
                Field (ERMG, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x1A), 
                    GE10,   1, 
                    Offset (0x1C), 
                    Offset (0x1E), 
                    GE11,   1, 
                    Offset (0x40), 
                    Offset (0x42), 
                    GE12,   1, 
                    Offset (0x46), 
                    GS17,   1, 
                        ,   5, 
                    GV17,   1, 
                    GE17,   1, 
                    Offset (0x108), 
                    Offset (0x10A), 
                    P33I,   1, 
                    Offset (0x10C), 
                    Offset (0x10E), 
                    P37I,   1, 
                    Offset (0x118), 
                    Offset (0x11A), 
                    P3BI,   1, 
                    Offset (0x11C), 
                    Offset (0x11E), 
                    P40I,   1
                }

                OperationRegion (ERMM, SystemMemory, 0xFED80000, 0x1000)
                Field (ERMM, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x200), 
                        ,   1, 
                    E01S,   1, 
                        ,   3, 
                    E05S,   1, 
                        ,   9, 
                    E15S,   1, 
                    E16S,   1, 
                        ,   5, 
                    E22S,   1, 
                    Offset (0x204), 
                        ,   1, 
                    E01E,   1, 
                        ,   3, 
                    E05E,   1, 
                        ,   9, 
                    E15E,   1, 
                    E16E,   1, 
                        ,   5, 
                    E22E,   1, 
                    Offset (0x208), 
                        ,   1, 
                    E01C,   1, 
                        ,   3, 
                    E05C,   1, 
                        ,   4, 
                    E10C,   1, 
                        ,   4, 
                    E15C,   1, 
                    E16C,   1, 
                        ,   4, 
                    E21C,   1, 
                    E22C,   1, 
                        ,   3, 
                    E26C,   1, 
                    Offset (0x20C), 
                        ,   1, 
                    E01L,   1, 
                        ,   3, 
                    E05L,   1, 
                        ,   9, 
                    E15L,   1, 
                    E16L,   1, 
                        ,   5, 
                    E22L,   1, 
                    Offset (0x288), 
                        ,   1, 
                    CLPS,   1, 
                    Offset (0x299), 
                        ,   7, 
                    G15A,   1, 
                    Offset (0x2AC), 
                        ,   6, 
                    SRBT,   2, 
                    Offset (0x2B0), 
                        ,   2, 
                    SLPS,   2, 
                    Offset (0x2B2), 
                        ,   4, 
                    SPBT,   2, 
                    Offset (0x362), 
                        ,   6, 
                    MT3A,   1, 
                    Offset (0x377), 
                    EPNM,   1, 
                    DPPF,   1, 
                    Offset (0x3BB), 
                        ,   6, 
                    PWDE,   1, 
                    Offset (0x3BE), 
                        ,   5, 
                    ALLS,   1, 
                    Offset (0x3C8), 
                        ,   2, 
                    TFTE,   1, 
                    Offset (0x3DF), 
                    BLNK,   2, 
                    Offset (0x3F0), 
                    PHYD,   1, 
                        ,   1, 
                        ,   1, 
                    US5R,   1, 
                    Offset (0x400), 
                    F0CT,   8, 
                    F0MS,   8, 
                    F0FQ,   8, 
                    F0LD,   8, 
                    F0MD,   8, 
                    F0MP,   8, 
                    LT0L,   8, 
                    LT0H,   8, 
                    MT0L,   8, 
                    MT0H,   8, 
                    HT0L,   8, 
                    HT0H,   8, 
                    LRG0,   8, 
                    LHC0,   8, 
                    Offset (0x410), 
                    F1CT,   8, 
                    F1MS,   8, 
                    F1FQ,   8, 
                    F1LD,   8, 
                    F1MD,   8, 
                    F1MP,   8, 
                    LT1L,   8, 
                    LT1H,   8, 
                    MT1L,   8, 
                    MT1H,   8, 
                    HT1L,   8, 
                    HT1H,   8, 
                    LRG1,   8, 
                    LHC1,   8, 
                    Offset (0x420), 
                    F2CT,   8, 
                    F2MS,   8, 
                    F2FQ,   8, 
                    F2LD,   8, 
                    F2MD,   8, 
                    F2MP,   8, 
                    LT2L,   8, 
                    LT2H,   8, 
                    MT2L,   8, 
                    MT2H,   8, 
                    HT2L,   8, 
                    HT2H,   8, 
                    LRG2,   8, 
                    LHC2,   8, 
                    Offset (0x430), 
                    F3CT,   8, 
                    F3MS,   8, 
                    F3FQ,   8, 
                    F3LD,   8, 
                    F3MD,   8, 
                    F3MP,   8, 
                    LT3L,   8, 
                    LT3H,   8, 
                    MT3L,   8, 
                    MT3H,   8, 
                    HT3L,   8, 
                    HT3H,   8, 
                    LRG3,   8, 
                    LHC3,   8, 
                    Offset (0x700), 
                    SEC,    8, 
                    Offset (0x702), 
                    MIN,    8, 
                    Offset (0xD01), 
                    MX01,   8, 
                    Offset (0xD07), 
                    MX07,   8, 
                    Offset (0xD0E), 
                    MX14,   8, 
                    MX15,   8, 
                    MX16,   8, 
                    Offset (0xD15), 
                    MX21,   8, 
                    MX22,   8, 
                    MX23,   8, 
                    Offset (0xD1B), 
                    MX27,   8, 
                    MX28,   8, 
                    Offset (0xD20), 
                    MX32,   8, 
                    MX33,   8, 
                    MX34,   8, 
                    Offset (0xD29), 
                    MX41,   8, 
                    Offset (0xD2C), 
                    MX44,   8, 
                    Offset (0xD33), 
                    MX51,   8, 
                    Offset (0xD35), 
                    MX53,   8, 
                    Offset (0xD39), 
                    MX57,   8, 
                    MX58,   8, 
                    MX59,   8, 
                    Offset (0xD42), 
                    MX66,   8, 
                    Offset (0xD66), 
                    M102,   8, 
                    Offset (0xD6C), 
                    M108,   8, 
                    Offset (0xDAA), 
                    M170,   8, 
                    Offset (0xDAF), 
                    M175,   8, 
                    M176,   8, 
                    Offset (0xDB4), 
                    M180,   8, 
                    M181,   8, 
                    M182,   8, 
                    Offset (0xDC5), 
                    M197,   8, 
                    Offset (0xDC7), 
                    M199,   8, 
                    M200,   8, 
                    Offset (0xE00), 
                    MS00,   8, 
                    MS01,   8, 
                    MS02,   8, 
                    MS03,   8, 
                    MS04,   8, 
                    Offset (0xE40), 
                    MS40,   8, 
                    Offset (0xE81), 
                        ,   2, 
                    ECES,   1
                }

                OperationRegion (P1E0, SystemIO, P1EB, 0x04)
                Field (P1E0, ByteAcc, NoLock, Preserve)
                {
                        ,   14, 
                    PEWS,   1, 
                    WSTA,   1, 
                        ,   14, 
                    PEWD,   1
                }

                Method (TRMD, 0, NotSerialized)
                {
                    TFTE = Zero
                }

                Method (HTCD, 0, NotSerialized)
                {
                }

                OperationRegion (ABIO, SystemIO, 0x0CD8, 0x08)
                Field (ABIO, DWordAcc, NoLock, Preserve)
                {
                    INAB,   32, 
                    DAAB,   32
                }

                Method (RDAB, 1, NotSerialized)
                {
                    INAB = Arg0
                    Return (DAAB) /* \_SB_.PCI0.SMB_.DAAB */
                }

                Method (WTAB, 2, NotSerialized)
                {
                    INAB = Arg0
                    DAAB = Arg1
                }

                Method (RWAB, 3, NotSerialized)
                {
                    Local0 = (RDAB (Arg0) & Arg1)
                    Local1 = (Local0 | Arg2)
                    WTAB (Arg0, Local1)
                }

                Method (CABR, 3, NotSerialized)
                {
                    Local0 = (Arg0 << 0x05)
                    Local1 = (Local0 + Arg1)
                    Local2 = (Local1 << 0x18)
                    Local3 = (Local2 + Arg2)
                    Return (Local3)
                }
            }

            Device (LPC0)
            {
                Name (_ADR, 0x00140003)  // _ADR: Address
                OperationRegion (PIRQ, SystemIO, 0x0C00, 0x02)
                Field (PIRQ, ByteAcc, NoLock, Preserve)
                {
                    PIID,   8, 
                    PIDA,   8
                }

                IndexField (PIID, PIDA, ByteAcc, NoLock, Preserve)
                {
                    PIRA,   8, 
                    PIRB,   8, 
                    PIRC,   8, 
                    PIRD,   8, 
                    PIRE,   8, 
                    PIRF,   8, 
                    PIRG,   8, 
                    PIRH,   8, 
                    Offset (0x0C), 
                    SIRA,   8, 
                    SIRB,   8, 
                    SIRC,   8, 
                    SIRD,   8, 
                    PIRS,   8, 
                    Offset (0x13), 
                    HDAD,   8, 
                    Offset (0x17), 
                    SDCL,   8, 
                    Offset (0x1A), 
                    SDIO,   8, 
                    Offset (0x30), 
                    USB1,   8, 
                    Offset (0x34), 
                    USB3,   8, 
                    Offset (0x41), 
                    SATA,   8, 
                    Offset (0x62), 
                    GIOC,   8, 
                    Offset (0x70), 
                    I2C0,   8, 
                    I2C1,   8, 
                    I2C2,   8, 
                    I2C3,   8, 
                    URT0,   8, 
                    URT1,   8
                }

                Name (IPRS, ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {3,4,5,7,10,11,12,14,15}
                })
                Name (UPRS, ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Exclusive, )
                        {3,4,5,7}
                })
                OperationRegion (KBDD, SystemIO, 0x64, 0x01)
                Field (KBDD, ByteAcc, NoLock, Preserve)
                {
                    PD64,   8
                }

                Method (DSPI, 0, NotSerialized)
                {
                    INTA (0x1F)
                    INTB (0x1F)
                    INTC (0x1F)
                    INTD (0x1F)
                    Local1 = PD64 /* \_SB_.PCI0.LPC0.PD64 */
                    PIRE = 0x1F
                    PIRF = 0x1F
                    PIRG = 0x1F
                    PIRH = 0x1F
                }

                Method (INTA, 1, NotSerialized)
                {
                    PIRA = Arg0
                    If (GPIC)
                    {
                        HDAD = Arg0
                        SDCL = Arg0
                    }
                }

                Method (INTB, 1, NotSerialized)
                {
                    PIRB = Arg0
                }

                Method (INTC, 1, NotSerialized)
                {
                    PIRC = Arg0
                    If (GPIC)
                    {
                        USB1 = Arg0
                        USB3 = Arg0
                    }
                }

                Method (INTD, 1, NotSerialized)
                {
                    PIRD = Arg0
                    If (GPIC)
                    {
                        SATA = Arg0
                    }
                }

                Device (LNKA)
                {
                    Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                    Name (_UID, 0x01)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If (PIRA)
                        {
                            Return (0x0B)
                        }
                        Else
                        {
                            Return (0x09)
                        }
                    }

                    Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
                    {
                        Return (IPRS) /* \_SB_.PCI0.LPC0.IPRS */
                    }

                    Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                    {
                        INTA (0x1F)
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Local0 = IPRS /* \_SB_.PCI0.LPC0.IPRS */
                        CreateWordField (Local0, 0x01, IRQ0)
                        IRQ0 = (0x01 << PIRA) /* \_SB_.PCI0.LPC0.PIRA */
                        Return (Local0)
                    }

                    Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
                    {
                        CreateWordField (Arg0, 0x01, IRQ0)
                        FindSetRightBit (IRQ0, Local0)
                        Local0--
                        INTA (Local0)
                    }
                }

                Device (LNKB)
                {
                    Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                    Name (_UID, 0x02)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If (PIRB)
                        {
                            Return (0x0B)
                        }
                        Else
                        {
                            Return (0x09)
                        }
                    }

                    Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
                    {
                        Return (IPRS) /* \_SB_.PCI0.LPC0.IPRS */
                    }

                    Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                    {
                        INTB (0x1F)
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Local0 = IPRS /* \_SB_.PCI0.LPC0.IPRS */
                        CreateWordField (Local0, 0x01, IRQ0)
                        IRQ0 = (0x01 << PIRB) /* \_SB_.PCI0.LPC0.PIRB */
                        Return (Local0)
                    }

                    Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
                    {
                        CreateWordField (Arg0, 0x01, IRQ0)
                        FindSetRightBit (IRQ0, Local0)
                        Local0--
                        INTB (Local0)
                    }
                }

                Device (LNKC)
                {
                    Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                    Name (_UID, 0x03)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If (PIRC)
                        {
                            Return (0x0B)
                        }
                        Else
                        {
                            Return (0x09)
                        }
                    }

                    Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
                    {
                        Return (IPRS) /* \_SB_.PCI0.LPC0.IPRS */
                    }

                    Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                    {
                        INTC (0x1F)
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Local0 = IPRS /* \_SB_.PCI0.LPC0.IPRS */
                        CreateWordField (Local0, 0x01, IRQ0)
                        IRQ0 = (0x01 << PIRC) /* \_SB_.PCI0.LPC0.PIRC */
                        Return (Local0)
                    }

                    Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
                    {
                        CreateWordField (Arg0, 0x01, IRQ0)
                        FindSetRightBit (IRQ0, Local0)
                        Local0--
                        INTC (Local0)
                    }
                }

                Device (LNKD)
                {
                    Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                    Name (_UID, 0x04)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If (PIRD)
                        {
                            Return (0x0B)
                        }
                        Else
                        {
                            Return (0x09)
                        }
                    }

                    Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
                    {
                        Return (IPRS) /* \_SB_.PCI0.LPC0.IPRS */
                    }

                    Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                    {
                        INTD (0x1F)
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Local0 = IPRS /* \_SB_.PCI0.LPC0.IPRS */
                        CreateWordField (Local0, 0x01, IRQ0)
                        IRQ0 = (0x01 << PIRD) /* \_SB_.PCI0.LPC0.PIRD */
                        Return (Local0)
                    }

                    Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
                    {
                        CreateWordField (Arg0, 0x01, IRQ0)
                        FindSetRightBit (IRQ0, Local0)
                        Local0--
                        INTD (Local0)
                    }
                }

                Device (LNKE)
                {
                    Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                    Name (_UID, 0x05)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If (PIRE)
                        {
                            Return (0x0B)
                        }
                        Else
                        {
                            Return (0x09)
                        }
                    }

                    Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
                    {
                        Return (IPRS) /* \_SB_.PCI0.LPC0.IPRS */
                    }

                    Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                    {
                        PIRE = 0x1F
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Local0 = IPRS /* \_SB_.PCI0.LPC0.IPRS */
                        CreateWordField (Local0, 0x01, IRQ0)
                        IRQ0 = (0x01 << PIRE) /* \_SB_.PCI0.LPC0.PIRE */
                        Return (Local0)
                    }

                    Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
                    {
                        CreateWordField (Arg0, 0x01, IRQ0)
                        FindSetRightBit (IRQ0, Local0)
                        Local0--
                        PIRE = Local0
                    }
                }

                Device (LNKF)
                {
                    Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                    Name (_UID, 0x06)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If (PIRF)
                        {
                            Return (0x0B)
                        }
                        Else
                        {
                            Return (0x09)
                        }
                    }

                    Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
                    {
                        Return (IPRS) /* \_SB_.PCI0.LPC0.IPRS */
                    }

                    Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                    {
                        PIRF = 0x1F
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Local0 = IPRS /* \_SB_.PCI0.LPC0.IPRS */
                        CreateWordField (Local0, 0x01, IRQ0)
                        IRQ0 = (0x01 << PIRF) /* \_SB_.PCI0.LPC0.PIRF */
                        Return (Local0)
                    }

                    Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
                    {
                        CreateWordField (Arg0, 0x01, IRQ0)
                        FindSetRightBit (IRQ0, Local0)
                        Local0--
                        PIRF = Local0
                    }
                }

                Device (LNKG)
                {
                    Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                    Name (_UID, 0x07)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If (PIRG)
                        {
                            Return (0x0B)
                        }
                        Else
                        {
                            Return (0x09)
                        }
                    }

                    Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
                    {
                        Return (IPRS) /* \_SB_.PCI0.LPC0.IPRS */
                    }

                    Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                    {
                        PIRG = 0x1F
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Local0 = IPRS /* \_SB_.PCI0.LPC0.IPRS */
                        CreateWordField (Local0, 0x01, IRQ0)
                        IRQ0 = (0x01 << PIRG) /* \_SB_.PCI0.LPC0.PIRG */
                        Return (Local0)
                    }

                    Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
                    {
                        CreateWordField (Arg0, 0x01, IRQ0)
                        FindSetRightBit (IRQ0, Local0)
                        Local0--
                        PIRG = Local0
                    }
                }

                Device (LNKH)
                {
                    Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
                    Name (_UID, 0x08)  // _UID: Unique ID
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If (PIRH)
                        {
                            Return (0x0B)
                        }
                        Else
                        {
                            Return (0x09)
                        }
                    }

                    Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
                    {
                        Return (IPRS) /* \_SB_.PCI0.LPC0.IPRS */
                    }

                    Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                    {
                        PIRH = 0x1F
                    }

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Local0 = IPRS /* \_SB_.PCI0.LPC0.IPRS */
                        CreateWordField (Local0, 0x01, IRQ0)
                        IRQ0 = (0x01 << PIRH) /* \_SB_.PCI0.LPC0.PIRH */
                        Return (Local0)
                    }

                    Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
                    {
                        CreateWordField (Arg0, 0x01, IRQ0)
                        FindSetRightBit (IRQ0, Local0)
                        Local0--
                        PIRH = Local0
                    }
                }

                Device (DMAC)
                {
                    Name (_HID, EisaId ("PNP0200") /* PC-class DMA Controller */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x01,               // Alignment
                            0x10,               // Length
                            )
                        IO (Decode16,
                            0x0081,             // Range Minimum
                            0x0081,             // Range Maximum
                            0x01,               // Alignment
                            0x0F,               // Length
                            )
                        IO (Decode16,
                            0x00C0,             // Range Minimum
                            0x00C0,             // Range Maximum
                            0x01,               // Alignment
                            0x20,               // Length
                            )
                        DMA (Compatibility, NotBusMaster, Transfer8_16, )
                            {4}
                    })
                }

                Device (MATH)
                {
                    Name (_HID, EisaId ("PNP0C04") /* x87-compatible Floating Point Processing Unit */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x00F0,             // Range Minimum
                            0x00F0,             // Range Maximum
                            0x01,               // Alignment
                            0x0F,               // Length
                            )
                        IRQNoFlags ()
                            {13}
                    })
                }

                Device (PIC)
                {
                    Name (_HID, EisaId ("PNP0000") /* 8259-compatible Programmable Interrupt Controller */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0020,             // Range Minimum
                            0x0020,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00A0,             // Range Minimum
                            0x00A0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IRQNoFlags ()
                            {2}
                    })
                }

                Device (RTC)
                {
                    Name (_HID, EisaId ("PNP0B00") /* AT Real-Time Clock */)  // _HID: Hardware ID
                    Name (BUF0, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0070,             // Range Minimum
                            0x0070,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                    })
                    Name (BUF1, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0070,             // Range Minimum
                            0x0070,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IRQNoFlags ()
                            {8}
                    })
                    Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                    {
                        If ((^^^SMB.HPEN == One))
                        {
                            Return (BUF0) /* \_SB_.PCI0.LPC0.RTC_.BUF0 */
                        }

                        Return (BUF1) /* \_SB_.PCI0.LPC0.RTC_.BUF1 */
                    }
                }

                Device (SPKR)
                {
                    Name (_HID, EisaId ("PNP0800") /* Microsoft Sound System Compatible Device */)  // _HID: Hardware ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0061,             // Range Minimum
                            0x0061,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                    })
                }

                Device (TIME)
                {
                    Name (_HID, EisaId ("PNP0100") /* PC-class System Timer */)  // _HID: Hardware ID
                    Name (BUF0, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0040,             // Range Minimum
                            0x0040,             // Range Maximum
                            0x01,               // Alignment
                            0x04,               // Length
                            )
                    })
                    Name (BUF1, ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0040,             // Range Minimum
                            0x0040,             // Range Maximum
                            0x01,               // Alignment
                            0x04,               // Length
                            )
                        IRQNoFlags ()
                            {0}
                    })
                    Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                    {
                        If ((^^^SMB.HPEN == One))
                        {
                            Return (BUF0) /* \_SB_.PCI0.LPC0.TIME.BUF0 */
                        }

                        Return (BUF1) /* \_SB_.PCI0.LPC0.TIME.BUF1 */
                    }
                }

                Device (KBC0)
                {
                    Name (_HID, "PTL0001")  // _HID: Hardware ID
                    Name (_CID, EisaId ("PNP0303") /* IBM Enhanced Keyboard (101/102-key, PS/2 Mouse) */)  // _CID: Compatible ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0060,             // Range Minimum
                            0x0060,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0064,             // Range Minimum
                            0x0064,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IRQNoFlags ()
                            {1}
                    })
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }

                    Method (_PSW, 1, NotSerialized)  // _PSW: Power State Wake
                    {
                    }
                }

                Device (MSE0)
                {
                    Name (_HID, "PTL0003")  // _HID: Hardware ID
                    Name (_CID, EisaId ("PNP0F13") /* PS/2 Mouse */)  // _CID: Compatible ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IRQ (Edge, ActiveHigh, Exclusive, )
                            {12}
                    })
                    Method (_PSW, 1, NotSerialized)  // _PSW: Power State Wake
                    {
                    }

                    Name (MSP0, 0x00)
                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (MSP0) /* \_SB_.PCI0.LPC0.MSE0.MSP0 */
                    }
                }

                Device (SYSR)
                {
                    Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                    Name (_UID, One)  // _UID: Unique ID
                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0010,             // Range Minimum
                            0x0010,             // Range Maximum
                            0x01,               // Alignment
                            0x10,               // Length
                            )
                        IO (Decode16,
                            0x0072,             // Range Minimum
                            0x0072,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0080,             // Range Minimum
                            0x0080,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x00B0,             // Range Minimum
                            0x00B0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0092,             // Range Minimum
                            0x0092,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0400,             // Range Minimum
                            0x0400,             // Range Maximum
                            0x01,               // Alignment
                            0xD0,               // Length
                            )
                        IO (Decode16,
                            0x04D0,             // Range Minimum
                            0x04D0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x04D6,             // Range Minimum
                            0x04D6,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0C00,             // Range Minimum
                            0x0C00,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0C14,             // Range Minimum
                            0x0C14,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0C50,             // Range Minimum
                            0x0C50,             // Range Maximum
                            0x01,               // Alignment
                            0x03,               // Length
                            )
                        IO (Decode16,
                            0x0C6C,             // Range Minimum
                            0x0C6C,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0C6F,             // Range Minimum
                            0x0C6F,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0CD0,             // Range Minimum
                            0x0CD0,             // Range Maximum
                            0x01,               // Alignment
                            0x0C,               // Length
                            )
                    })
                }

                OperationRegion (LPCS, PCI_Config, 0xA0, 0x04)
                Field (LPCS, DWordAcc, NoLock, Preserve)
                {
                    SPBA,   32
                }

                Device (MEM)
                {
                    Name (_HID, EisaId ("PNP0C01") /* System Board */)  // _HID: Hardware ID
                    Name (MSRC, ResourceTemplate ()
                    {
                        Memory32Fixed (ReadOnly,
                            0x000E0000,         // Address Base
                            0x00020000,         // Address Length
                            )
                        Memory32Fixed (ReadOnly,
                            0xFF000000,         // Address Base
                            0x01000000,         // Address Length
                            )
                        Memory32Fixed (ReadWrite,
                            0x00000000,         // Address Base
                            0x00000000,         // Address Length
                            _Y06)
                        Memory32Fixed (ReadWrite,
                            0xFEC10000,         // Address Base
                            0x00000020,         // Address Length
                            _Y07)
                        Memory32Fixed (ReadOnly,
                            0xFED00000,         // Address Base
                            0x00000400,         // Address Length
                            )
                        Memory32Fixed (ReadWrite,
                            0xFED61000,         // Address Base
                            0x00000400,         // Address Length
                            )
                        Memory32Fixed (ReadWrite,
                            0xFED80000,         // Address Base
                            0x00001000,         // Address Length
                            )
                    })
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        CreateDWordField (MSRC, \_SB.PCI0.LPC0.MEM._Y06._BAS, BARX)  // _BAS: Base Address
                        CreateDWordField (MSRC, \_SB.PCI0.LPC0.MEM._Y06._LEN, GALN)  // _LEN: Length
                        CreateDWordField (MSRC, \_SB.PCI0.LPC0.MEM._Y07._BAS, MB01)  // _BAS: Base Address
                        CreateDWordField (MSRC, \_SB.PCI0.LPC0.MEM._Y07._LEN, ML01)  // _LEN: Length
                        Local0 = SPBA /* \_SB_.PCI0.LPC0.SPBA */
                        MB01 = (Local0 & 0xFFFFFFE0)
                        Local0 = NBBA /* \_SB_.PCI0.NBBA */
                        If (Local0)
                        {
                            GALN = 0x1000
                            BARX = (Local0 & 0xFFFFFFF0)
                        }

                        Return (MSRC) /* \_SB_.PCI0.LPC0.MEM_.MSRC */
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        Return (0x0F)
                    }
                }

                Name (\MIEC, 0x01)
                Name (\LIDF, 0x01)
                Device (H_EC)
                {
                    Name (_HID, EisaId ("PNP0C09") /* Embedded Controller Device */)  // _HID: Hardware ID
                    Name (ECFG, Zero)
                    Name (WIBT, Zero)
                    Name (_UID, One)  // _UID: Unique ID
                    Name (APST, Zero)
                    Name (ECON, One)
                    Name (B1CC, Zero)
                    Name (B2CC, Zero)
                    Name (B2ST, Zero)
                    Name (CFAN, Zero)
                    Name (CMDR, Zero)
                    Name (DOCK, Zero)
                    Name (EJET, Zero)
                    Name (MCAP, Zero)
                    Name (PLMX, Zero)
                    Name (PECH, Zero)
                    Name (PECL, Zero)
                    Name (PENV, Zero)
                    Name (PINV, Zero)
                    Name (PPSH, Zero)
                    Name (PPSL, Zero)
                    Name (PSTP, Zero)
                    Name (RPWR, Zero)
                    Name (LIDS, Zero)
                    Name (SLPC, Zero)
                    Name (WTMS, Zero)
                    Name (AWT2, Zero)
                    Name (AWT1, Zero)
                    Name (AWT0, Zero)
                    Name (DLED, Zero)
                    Name (IBT1, Zero)
                    Name (ECAV, One)
                    Name (SPT2, Zero)
                    Name (PB10, Zero)
                    Name (IWCW, Zero)
                    Name (IWCR, Zero)
                    Name (VPWR, Zero)
                    Name (PVOL, Zero)
                    Name (RCMD, Zero)
                    Name (ONTM, Zero)
                    Name (BNUM, Zero)
                    Name (RDHW, 0x00)
                    Mutex (ECMT, 0x00)
                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {
                        Name (BFFR, ResourceTemplate ()
                        {
                            IO (Decode16,
                                0x0662,             // Range Minimum
                                0x0662,             // Range Maximum
                                0x01,               // Alignment
                                0x01,               // Length
                                )
                            IO (Decode16,
                                0x0666,             // Range Minimum
                                0x0666,             // Range Maximum
                                0x01,               // Alignment
                                0x01,               // Length
                                )
                        })
                        Return (BFFR) /* \_SB_.PCI0.LPC0.H_EC._CRS.BFFR */
                    }

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {
                        If ((ECON == One))
                        {
                            Return (0x0F)
                        }

                        Return (Zero)
                    }

                    OperationRegion (ECF2, EmbeddedControl, Zero, 0xFF)
                    Field (ECF2, ByteAcc, Lock, Preserve)
                    {
                        VCMD,   8, 
                        VDAT,   8, 
                        VPCS,   8, 
                        Offset (0x0F), 
                            ,   4, 
                        CREC,   1, 
                        UCST,   1, 
                            ,   1, 
                        CIBM,   1, 
                        Offset (0x14), 
                        HTKS,   8, 
                        HTKE,   8, 
                        Offset (0x17), 
                        TSR1,   8, 
                        TSR2,   8, 
                        Offset (0x1A), 
                        TSR3,   8, 
                        Offset (0x1E), 
                        TSR4,   8, 
                        Offset (0x20), 
                        LSTE,   1, 
                            ,   1, 
                        BNOV,   1, 
                        FNHK,   1, 
                        HKST,   1, 
                            ,   1, 
                        KBT0,   1, 
                        BKLI,   1, 
                        TROM,   8, 
                        TLCL,   8, 
                        MCRI,   8, 
                        PATC,   8, 
                        PAT0,   8, 
                        PAT1,   8, 
                        Offset (0x28), 
                        SMPR,   8, 
                        SMST,   8, 
                        SMAD,   8, 
                        SMCD,   8, 
                        SDAT,   16, 
                        SDA2,   16, 
                        SDA4,   32, 
                        SDA5,   32, 
                        SDA6,   32, 
                        SDA7,   32, 
                        SDA8,   32, 
                        SDA9,   32, 
                        SDAA,   32, 
                        SMCN,   8, 
                        Offset (0x60), 
                        ECWR,   8, 
                        Offset (0x64), 
                        B1DC,   16, 
                        B1FV,   16, 
                        B1FC,   16, 
                        Offset (0x6C), 
                        B1CR,   16, 
                        B1RC,   16, 
                        B1VT,   16, 
                        Offset (0x74), 
                        BCYC,   16, 
                        Offset (0x77), 
                            ,   7, 
                        XX10,   1, 
                        Offset (0x7D), 
                        MIDL,   8, 
                        MIDH,   8, 
                        HIDL,   8, 
                        HIDH,   8, 
                        FWVL,   8, 
                        FWVH,   8, 
                        DAVL,   8, 
                        DAVH,   8, 
                        Offset (0x88), 
                        SCPU,   8, 
                        B1ST,   8, 
                        BPCN,   8, 
                        Offset (0x8C), 
                            ,   1, 
                        SWBL,   1, 
                        Offset (0x90), 
                            ,   1, 
                        FUEN,   1, 
                        Offset (0x91), 
                        EDCC,   1, 
                        ALSC,   1, 
                        CDMB,   1, 
                        CCSB,   1, 
                        BTSM,   1, 
                        BTCM,   1, 
                        LBTM,   1, 
                        CSBM,   1, 
                        HYMS,   1, 
                        HDME,   1, 
                        HGMF,   1, 
                        SWCS,   1, 
                        CREA,   1, 
                        DCRC,   1, 
                        ALSS,   1, 
                        UCFG,   1, 
                        IPEN,   1, 
                        MBBD,   1, 
                        SBBD,   1, 
                        QCFG,   1, 
                        QCEN,   1, 
                        UCSA,   1, 
                        CGBE,   1, 
                        CVEC,   1, 
                        EDCF,   1, 
                        BTCF,   1, 
                        HSMG,   1, 
                        O72H,   1, 
                        BLEG,   1, 
                        BTMF,   1, 
                        ATOM,   1, 
                        Offset (0x9F), 
                        TPTY,   8, 
                        PSD1,   8, 
                        WAKS,   8, 
                        Offset (0xBA), 
                        FAN2,   16, 
                        Offset (0xBE), 
                        DREQ,   8, 
                        DACK,   8, 
                        TCPU,   8, 
                        SCHG,   8, 
                        Offset (0xC3), 
                        PSTE,   8, 
                        Offset (0xE0), 
                        DGPU,   8, 
                        Offset (0xE4), 
                        ITSM,   8, 
                        GPUP,   8, 
                        Offset (0xE9), 
                        PSKU,   8, 
                        Offset (0xF0), 
                            ,   3, 
                        BLOF,   1, 
                            ,   2, 
                        DRMD,   1, 
                        Offset (0xF1)
                    }

                    Method (SECC, 1, NotSerialized)
                    {
                        RCMD = Arg0
                    }

                    Method (ECMD, 1, Serialized)
                    {
                        SECC (Arg0)
                    }

                    Method (ECRD, 1, Serialized)
                    {
                        Local0 = Acquire (ECMT, 0x03E8)
                        If ((Local0 == Zero))
                        {
                            If (ECAV)
                            {
                                Local1 = DerefOf (Arg0)
                                Release (ECMT)
                                Return (Local1)
                            }
                            Else
                            {
                                Release (ECMT)
                            }
                        }

                        Return (0x00)
                    }

                    Method (ECWT, 2, Serialized)
                    {
                        Local0 = Acquire (ECMT, 0x03E8)
                        If ((Local0 == Zero))
                        {
                            If (ECAV)
                            {
                                Arg1 = Arg0
                            }

                            Release (ECMT)
                        }
                    }

                    Method (_GPE, 0, NotSerialized)  // _GPE: General Purpose Events
                    {
                        Local0 = 0x04
                        Return (Local0)
                    }

                    Device (ADP1)
                    {
                        Name (_HID, "ACPI0003" /* Power Source Device */)  // _HID: Hardware ID
                        Name (ACDC, 0xFF)
                        Name (XX00, Buffer (0x03){})
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            If ((ECRD (RefOf (ECWR)) & One))
                            {
                                Return (0x0F)
                            }

                            Return (0x0F)
                        }

                        Method (_PSR, 0, NotSerialized)  // _PSR: Power Source
                        {
                            Local0 = (ECRD (RefOf (ECWR)) & One)
                            If (((Local0 != ACDC) || (ACDC == 0xFF)))
                            {
                                CreateWordField (XX00, 0x00, SSZE)
                                CreateByteField (XX00, 0x02, ACST)
                                SSZE = 0x03
                                ACDC = Local0
                                If (ACDC)
                                {
                                    ^^^^GP17.VGA.AFN4 (0x01)
                                    ACST = 0x00
                                }
                                Else
                                {
                                    ^^^^GP17.VGA.AFN4 (0x02)
                                    ACST = 0x01
                                }

                                ALIB (0x01, XX00)
                            }

                            Return (Local0)
                        }

                        Method (_PCL, 0, NotSerialized)  // _PCL: Power Consumer List
                        {
                            Return (_SB) /* \_SB_ */
                        }
                    }

                    Device (BAT0)
                    {
                        Name (_HID, EisaId ("PNP0C0A") /* Control Method Battery */)  // _HID: Hardware ID
                        Name (_UID, One)  // _UID: Unique ID
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            Local0 = 0x0F
                            If ((ECWR & 0x02))
                            {
                                Local0 = 0x1F
                            }

                            Return (Local0)
                        }

                        Method (_BIX, 0, Serialized)  // _BIX: Battery Information Extended
                        {
                            Name (BPK1, Package (0x15)
                            {
                                0x01, 
                                0x00, 
                                0xFFFFFFFF, 
                                0xFFFFFFFF, 
                                0x01, 
                                0xFFFFFFFF, 
                                0x00, 
                                0x00, 
                                0x64, 
                                0x00017318, 
                                0x00, 
                                0x00, 
                                0x00, 
                                0x00, 
                                0x64, 
                                0x00, 
                                "SR Real Battery", 
                                "123456789", 
                                "LiP", 
                                "LENOVO", 
                                0x01
                            })
                            If ((XX10 == 0x01))
                            {
                                Local0 = (B1DC * B1FV)
                                Local0 = (Local0 / 0x03E8)
                                BPK1 [0x02] = Local0
                            }
                            Else
                            {
                                Local0 = (B1DC * 0x0A)
                                BPK1 [0x02] = Local0
                            }

                            If ((XX10 == 0x01))
                            {
                                Local1 = (B1FC * B1FV)
                                Local1 = (Local1 / 0x03E8)
                                BPK1 [0x03] = Local1
                            }
                            Else
                            {
                                Local1 = (B1FC * 0x0A)
                                BPK1 [0x03] = Local1
                            }

                            BPK1 [0x06] = (Local1 / 0x0A)
                            BPK1 [0x07] = (Local1 / 0x19)
                            BPK1 [0x08] = BCYC /* \_SB_.PCI0.LPC0.H_EC.BCYC */
                            SMST = 0x00
                            SMCD = 0x20
                            SMAD = 0x16
                            SMPR = 0x0B
                            Local0 = 0x32
                            While (Local0)
                            {
                                Sleep (0x02)
                                If ((SMPR == Zero))
                                {
                                    BPK1 [0x13] = SM2S ()
                                    Local0 = 0x00
                                }
                                Else
                                {
                                    Local0--
                                }
                            }

                            Return (BPK1) /* \_SB_.PCI0.LPC0.H_EC.BAT0._BIX.BPK1 */
                        }

                        Method (_BST, 0, NotSerialized)  // _BST: Battery Status
                        {
                            Name (PKG1, Package (0x04)
                            {
                                Ones, 
                                Ones, 
                                Ones, 
                                Ones
                            })
                            Local0 = 0x00
                            If ((ECWR & 0x04))
                            {
                                Local0 = 0x02
                            }
                            ElseIf ((ECWR & 0x08))
                            {
                                Local0 = 0x01
                            }

                            If ((ECWR & 0x40))
                            {
                                Local0 |= 0x04
                            }

                            PKG1 [0x00] = Local0
                            If ((B1ST & One))
                            {
                                If ((XX10 == 0x01))
                                {
                                    Local0 = (B1CR * B1FV)
                                    Local0 = (Local0 / 0x03E8)
                                    PKG1 [0x01] = Local0
                                }
                                Else
                                {
                                    Local0 = (B1CR * 0x0A)
                                    PKG1 [0x01] = Local0
                                }
                            }
                            ElseIf ((XX10 == 0x01))
                            {
                                Local0 = (B1CR * B1FV)
                                Local0 = (Local0 / 0x03E8)
                                PKG1 [0x01] = Local0
                            }
                            Else
                            {
                                Local0 = (B1CR * 0x0A)
                                PKG1 [0x01] = Local0
                            }

                            If ((XX10 == 0x01))
                            {
                                Local1 = (B1RC * B1FV)
                                Local1 = (Local1 / 0x03E8)
                                PKG1 [0x02] = Local1
                            }
                            Else
                            {
                                PKG1 [0x02] = (B1RC * 0x0A)
                            }

                            PKG1 [0x03] = B1FV /* \_SB_.PCI0.LPC0.H_EC.B1FV */
                            Return (PKG1) /* \_SB_.PCI0.LPC0.H_EC.BAT0._BST.PKG1 */
                        }

                        Method (_PCL, 0, NotSerialized)  // _PCL: Power Consumer List
                        {
                            Return (_SB) /* \_SB_ */
                        }
                    }

                    Scope (^^GP17.VGA)
                    {
                        OperationRegion (BAR6, PCI_Config, 0x24, 0x04)
                        Field (BAR6, ByteAcc, NoLock, Preserve)
                        {
                            VGBA,   32
                        }

                        OperationRegion (PWML, SystemMemory, VGBA, 0x00013200)
                        Field (PWML, ByteAcc, NoLock, Preserve)
                        {
                            Offset (0x131C4), 
                            BPUL,   8
                        }
                    }

                    Method (_Q05, 0, Serialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        If ((^^^GP17.VGA.BPUL <= 0x05))
                        {
                            SWBL = 0x01
                            VDAT = 0x00
                            VCMD = 0x33
                        }

                        Acquire (MSGF, 0xFFFF)
                        Notify (^^^GP17.VGA.LCD, 0x87) // Device-Specific
                        Release (MSGF)
                    }

                    Method (_Q06, 0, Serialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        If ((SWBL == 0x01))
                        {
                            SWBL = 0x00
                            VDAT = 0x01
                            VCMD = 0x33
                        }

                        Acquire (MSGF, 0xFFFF)
                        Notify (^^^GP17.VGA.LCD, 0x86) // Device-Specific
                        Release (MSGF)
                    }

                    Method (_Q10, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        Sleep (0x0258)
                        Notify (BAT0, 0x80) // Status Change
                        Notify (ADP1, 0x80) // Status Change
                    }

                    Method (_Q11, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        Sleep (0x01F4)
                        Notify (BAT0, 0x81) // Information Change
                        Sleep (0x01F4)
                        Notify (BAT0, 0x80) // Status Change
                    }

                    Method (_Q12, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        If (ECAV)
                        {
                            If ((Acquire (ECMT, 0xA000) == 0x00))
                            {
                                If (MIEC)
                                {
                                    If (((LSTE && 0x01) == 0x00))
                                    {
                                        LIDF = 0x01
                                        LIDS = 0x01
                                    }
                                    Else
                                    {
                                        LIDF = 0x00
                                        LIDS = 0x00
                                    }
                                }

                                Release (ECMT)
                            }
                        }

                        Notify (LID0, 0x80) // Status Change
                    }

                    Method (_QD1, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        DGPU = 0xD1
                    }

                    Method (_QD2, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        DGPU = 0xD2
                    }

                    Method (_Q14, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        Notify (PWRB, 0x80) // Status Change
                        Sleep (0x32)
                    }

                    Method (_Q21, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        Sleep (0x01F4)
                        Notify (BAT0, 0x81) // Information Change
                        Sleep (0x01F4)
                        Notify (BAT0, 0x80) // Status Change
                    }

                    Method (_Q17, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        If ((PSTE <= 0x02))
                        {
                            \_PR.C000.PPCV = PSTE /* \_SB_.PCI0.LPC0.H_EC.PSTE */
                            \_PR.C001.PPCV = PSTE /* \_SB_.PCI0.LPC0.H_EC.PSTE */
                            \_PR.C002.PPCV = PSTE /* \_SB_.PCI0.LPC0.H_EC.PSTE */
                            \_PR.C003.PPCV = PSTE /* \_SB_.PCI0.LPC0.H_EC.PSTE */
                            Notify (\_PR.C000, 0x80) // Performance Capability Change
                            Notify (\_PR.C001, 0x80) // Performance Capability Change
                            Notify (\_PR.C002, 0x80) // Performance Capability Change
                            Notify (\_PR.C003, 0x80) // Performance Capability Change
                        }
                    }

                    Method (_Q36, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        Notify (\_TZ.TZ01, 0x80) // Thermal Status Change
                    }

                    Method (_REG, 2, NotSerialized)  // _REG: Region Availability
                    {
                        BKLI = 0x01
                        E666 = 0x82
                    }

                    Name (PSEV, Package (0x02)
                    {
                        Package (0x08)
                        {
                            Zero, 
                            One, 
                            0x02, 
                            0x03, 
                            0x04, 
                            0x05, 
                            0x06, 
                            0x08
                        }, 

                        Package (0x08)
                        {
                            Zero, 
                            One, 
                            0x02, 
                            0x03, 
                            0x04, 
                            0x05, 
                            0x07, 
                            0x09
                        }
                    })
                    Device (LID0)
                    {
                        Name (_HID, EisaId ("PNP0C0D") /* Lid Device */)  // _HID: Hardware ID
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            Return (0x0F)
                        }

                        Method (_LID, 0, NotSerialized)  // _LID: Lid Status
                        {
                            If (ECAV)
                            {
                                If ((Acquire (ECMT, 0xA000) == 0x00))
                                {
                                    If (MIEC)
                                    {
                                        If (((LSTE && 0x01) == 0x00))
                                        {
                                            LIDF = 0x01
                                            LIDS = 0x01
                                        }
                                        Else
                                        {
                                            LIDF = 0x00
                                            LIDS = 0x00
                                        }
                                    }

                                    Release (ECMT)
                                }
                            }

                            Return (LIDF) /* \LIDF */
                        }
                    }

                    Method (\SM2S, 0, NotSerialized)
                    {
                        Name (CHAR, 0x00)
                        Name (STR1, Buffer (0x25)
                        {
                            "0000000000                          "
                        })
                        If (\_SB.PCI0.LPC0.H_EC.ECAV)
                        {
                            CHAR = \_SB.PCI0.LPC0.H_EC.SDAT
                            STR1 [0x00] = CHAR /* \SM2S.CHAR */
                            STR1 [0x01] = (CHAR >> 0x08)
                            CHAR = \_SB.PCI0.LPC0.H_EC.SDA2
                            STR1 [0x02] = CHAR /* \SM2S.CHAR */
                            STR1 [0x03] = (CHAR >> 0x08)
                            CHAR = \_SB.PCI0.LPC0.H_EC.SDA4
                            STR1 [0x04] = (CHAR >> 0x00)
                            STR1 [0x05] = (CHAR >> 0x08)
                            STR1 [0x06] = (CHAR >> 0x10)
                            STR1 [0x07] = (CHAR >> 0x18)
                            CHAR = \_SB.PCI0.LPC0.H_EC.SDA5
                            STR1 [0x08] = (CHAR >> 0x00)
                            STR1 [0x09] = (CHAR >> 0x08)
                            STR1 [0x0A] = (CHAR >> 0x10)
                            STR1 [0x0B] = (CHAR >> 0x18)
                            CHAR = \_SB.PCI0.LPC0.H_EC.SDA6
                            STR1 [0x0C] = (CHAR >> 0x00)
                            STR1 [0x0D] = (CHAR >> 0x08)
                            STR1 [0x0E] = (CHAR >> 0x10)
                            STR1 [0x0F] = (CHAR >> 0x18)
                            CHAR = \_SB.PCI0.LPC0.H_EC.SDA7
                            STR1 [0x10] = (CHAR >> 0x00)
                            STR1 [0x11] = (CHAR >> 0x08)
                            STR1 [0x12] = (CHAR >> 0x10)
                            STR1 [0x13] = (CHAR >> 0x18)
                            CHAR = \_SB.PCI0.LPC0.H_EC.SDA8
                            STR1 [0x14] = (CHAR >> 0x00)
                            STR1 [0x15] = (CHAR >> 0x08)
                            STR1 [0x16] = (CHAR >> 0x10)
                            STR1 [0x17] = (CHAR >> 0x18)
                            CHAR = \_SB.PCI0.LPC0.H_EC.SDA9
                            STR1 [0x18] = (CHAR >> 0x00)
                            STR1 [0x19] = (CHAR >> 0x08)
                            STR1 [0x1A] = (CHAR >> 0x10)
                            STR1 [0x1B] = (CHAR >> 0x18)
                            CHAR = \_SB.PCI0.LPC0.H_EC.SDAA
                            STR1 [0x1C] = (CHAR >> 0x00)
                            STR1 [0x1D] = (CHAR >> 0x08)
                            STR1 [0x1E] = (CHAR >> 0x10)
                            STR1 [0x1F] = (CHAR >> 0x18)
                            STR1 [\_SB.PCI0.LPC0.H_EC.SMCN] = 0x00
                        }

                        Return (STR1) /* \SM2S.STR1 */
                    }
                }

                Name (APTG, Zero)
                Name (APEJ, Zero)
                Name (PRNA, Zero)
                Scope (H_EC)
                {
                    Device (CYMC)
                    {
                        Name (_HID, "YMC2017")  // _HID: Hardware ID
                        Name (_UID, 0x00)  // _UID: Unique ID
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            Return (0x00)
                        }
                    }

                    Device (HKDV)
                    {
                        Name (_HID, "LHK2019")  // _HID: Hardware ID
                        Name (_UID, 0x00)  // _UID: Unique ID
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            Return (0x0F)
                        }
                    }

                    Device (VPC0)
                    {
                        Name (_HID, "VPC2004")  // _HID: Hardware ID
                        Name (_UID, 0x00)  // _UID: Unique ID
                        Name (_VPC, 0xF40D0005)
                        Name (VPCD, 0x00)
                        Method (_STA, 0, NotSerialized)  // _STA: Status
                        {
                            Return (0x0F)
                        }

                        Method (_CFG, 0, NotSerialized)
                        {
                            Return (_VPC) /* \_SB_.PCI0.LPC0.H_EC.VPC0._VPC */
                        }

                        Method (VPCR, 1, Serialized)
                        {
                            If (ECAV)
                            {
                                If ((Arg0 == 0x01))
                                {
                                    VPCD = ECRD (RefOf (VCMD))
                                }
                                Else
                                {
                                    VPCD = ECRD (RefOf (VDAT))
                                }
                            }

                            Return (VPCD) /* \_SB_.PCI0.LPC0.H_EC.VPC0.VPCD */
                        }

                        Method (VPCW, 2, Serialized)
                        {
                            If (ECAV)
                            {
                                If ((Arg0 == 0x01))
                                {
                                    ECWT (Arg1, RefOf (VCMD))
                                }
                                Else
                                {
                                    ECWT (Arg1, RefOf (VDAT))
                                }
                            }

                            Return (0x00)
                        }

                        Method (SVCR, 1, Serialized)
                        {
                        }

                        Method (HALS, 0, NotSerialized)
                        {
                            Local0 = Zero
                            Local0 |= 0x40
                            Local0 |= 0x4000
                            If ((One == ECRD (RefOf (UCSA))))
                            {
                                Local0 |= 0x80
                            }

                            If ((One == ECRD (RefOf (CGBE))))
                            {
                                Local0 |= 0x8000
                            }

                            Local0 |= 0x0200
                            If ((Zero == ECRD (RefOf (FNHK))))
                            {
                                Local0 |= 0x0400
                            }

                            Return (Local0)
                        }

                        Method (SALS, 1, Serialized)
                        {
                            Local0 = Arg0
                            If ((Local0 == 0x0A))
                            {
                                ECWT (One, RefOf (CVEC))
                                ECWT (One, RefOf (UCSA))
                                Return (0x00)
                            }

                            If ((Local0 == 0x0B))
                            {
                                ECWT (One, RefOf (CVEC))
                                ECWT (Zero, RefOf (UCSA))
                                Return (0x00)
                            }

                            If ((Local0 == 0x0E))
                            {
                                ECWT (0x00, RefOf (FNHK))
                                ECWT (One, RefOf (HKST))
                            }

                            If ((Local0 == 0x0F))
                            {
                                ECWT (0x01, RefOf (FNHK))
                                ECWT (One, RefOf (HKST))
                            }

                            If ((Local0 == 0x12))
                            {
                                ECWT (One, RefOf (CREC))
                                ECWT (0x00, RefOf (CGBE))
                                Return (0x00)
                            }

                            If ((Local0 == 0x13))
                            {
                                ECWT (One, RefOf (CREC))
                                ECWT (One, RefOf (CGBE))
                                Return (0x00)
                            }
                        }

                        Method (GBMD, 0, NotSerialized)
                        {
                            Local0 = 0x10020000
                            If ((Zero == CSBM))
                            {
                                Local0 |= 0x02
                            }

                            If ((One == QCEN))
                            {
                                Local0 |= 0x04
                            }

                            If ((One == BTSM))
                            {
                                Local0 |= 0x20
                            }

                            If ((One == MBBD))
                            {
                                Local0 |= 0x08
                            }

                            If ((BLEG == One))
                            {
                                Local0 |= 0x80
                            }

                            If ((HYMS == One))
                            {
                                Local0 |= 0x0100
                            }

                            If ((BTSM == One))
                            {
                                Local0 &= 0xFFFFFDFF
                            }
                            Else
                            {
                                Local0 |= 0x0200
                            }

                            Return (Local0)
                        }

                        Method (SBMC, 1, NotSerialized)
                        {
                            If (ECAV)
                            {
                                If ((Arg0 == Zero))
                                {
                                    ECWT (Zero, RefOf (CDMB))
                                    ECWT (One, RefOf (EDCC))
                                    ECWT (One, RefOf (EDCF))
                                    Return (Zero)
                                }

                                If ((Arg0 == One))
                                {
                                    ECWT (Zero, RefOf (EDCC))
                                    ECWT (One, RefOf (CDMB))
                                    Return (Zero)
                                }

                                If ((Arg0 == 0x03))
                                {
                                    ECWT (One, RefOf (BTSM))
                                    ECWT (Zero, RefOf (LBTM))
                                    Return (Zero)
                                }

                                If ((Arg0 == 0x05))
                                {
                                    ECWT (One, RefOf (LBTM))
                                    ECWT (One, RefOf (BTCF))
                                    ECWT (Zero, RefOf (BTSM))
                                    Return (Zero)
                                }

                                If ((Arg0 == 0x06))
                                {
                                    ECWT (One, RefOf (CSBM))
                                    Return (Zero)
                                }

                                If ((Arg0 == 0x07))
                                {
                                    ECWT (One, RefOf (QCEN))
                                    Return (Zero)
                                }

                                If ((Arg0 == 0x08))
                                {
                                    ECWT (Zero, RefOf (QCEN))
                                    Return (Zero)
                                }
                            }

                            Return (Zero)
                        }

                        Name (BIDF, Package (0x04)
                        {
                            Buffer (0x02)
                            {
                                 0x00, 0x00                                       // ..
                            }, 

                            Buffer (0x02)
                            {
                                 0xFF, 0xFF                                       // ..
                            }, 

                            Buffer (0x08)
                            {
                                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                            }, 

                            Buffer (0x08)
                            {
                                 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF   // ........
                            }
                        })
                        Method (GBID, 0, Serialized)
                        {
                            DerefOf (BIDF [0x00]) [0x00] = BCYC /* \_SB_.PCI0.LPC0.H_EC.BCYC */
                            DerefOf (BIDF [0x02]) [0x00] = MIDL /* \_SB_.PCI0.LPC0.H_EC.MIDL */
                            DerefOf (BIDF [0x02]) [0x01] = MIDH /* \_SB_.PCI0.LPC0.H_EC.MIDH */
                            DerefOf (BIDF [0x02]) [0x02] = HIDL /* \_SB_.PCI0.LPC0.H_EC.HIDL */
                            DerefOf (BIDF [0x02]) [0x03] = HIDH /* \_SB_.PCI0.LPC0.H_EC.HIDH */
                            DerefOf (BIDF [0x02]) [0x04] = FWVL /* \_SB_.PCI0.LPC0.H_EC.FWVL */
                            DerefOf (BIDF [0x02]) [0x05] = FWVH /* \_SB_.PCI0.LPC0.H_EC.FWVH */
                            DerefOf (BIDF [0x02]) [0x06] = DAVL /* \_SB_.PCI0.LPC0.H_EC.DAVL */
                            DerefOf (BIDF [0x02]) [0x07] = DAVH /* \_SB_.PCI0.LPC0.H_EC.DAVH */
                            Sleep (0x32)
                            Return (BIDF) /* \_SB_.PCI0.LPC0.H_EC.VPC0.BIDF */
                        }

                        Name (VBST, 0x00)
                        Name (VBAC, 0x00)
                        Name (VBPR, 0x00)
                        Name (VBRC, 0x00)
                        Name (VBPV, 0x00)
                        Name (VBFC, 0x00)
                        Name (VBCT, 0x00)
                        Method (MHCF, 1, NotSerialized)
                        {
                            Local0 = Arg0
                            If ((Local0 && 0x20))
                            {
                                FUEN = 0x01
                            }
                            Else
                            {
                                FUEN = 0x00
                            }

                            Return (Local0)
                        }

                        Method (MHPF, 1, NotSerialized)
                        {
                            Name (BFWB, Buffer (0x25){})
                            CreateByteField (BFWB, 0x00, FB0)
                            CreateByteField (BFWB, 0x01, FB1)
                            CreateByteField (BFWB, 0x02, FB2)
                            CreateByteField (BFWB, 0x03, FB3)
                            CreateWordField (BFWB, 0x04, FB4A)
                            CreateWordField (BFWB, 0x06, FB4B)
                            CreateDWordField (BFWB, 0x08, FB4C)
                            CreateDWordField (BFWB, 0x0C, FB4D)
                            CreateDWordField (BFWB, 0x10, FB4E)
                            CreateDWordField (BFWB, 0x14, FB4F)
                            CreateDWordField (BFWB, 0x18, FB4G)
                            CreateDWordField (BFWB, 0x1C, FB4H)
                            CreateDWordField (BFWB, 0x20, FB4I)
                            CreateByteField (BFWB, 0x24, FB5)
                            If ((SizeOf (Arg0) <= 0x25))
                            {
                                If ((SMPR != 0x00))
                                {
                                    FB1 = SMST /* \_SB_.PCI0.LPC0.H_EC.SMST */
                                }
                                Else
                                {
                                    BFWB = Arg0
                                    SMAD = FB2 /* \_SB_.PCI0.LPC0.H_EC.VPC0.MHPF.FB2_ */
                                    SMCD = FB3 /* \_SB_.PCI0.LPC0.H_EC.VPC0.MHPF.FB3_ */
                                    SMCN = FB5 /* \_SB_.PCI0.LPC0.H_EC.VPC0.MHPF.FB5_ */
                                    Local0 = FB0 /* \_SB_.PCI0.LPC0.H_EC.VPC0.MHPF.FB0_ */
                                    If (((Local0 & 0x01) == 0x00))
                                    {
                                        SDAT = FB4A /* \_SB_.PCI0.LPC0.H_EC.VPC0.MHPF.FB4A */
                                        SDA2 = FB4B /* \_SB_.PCI0.LPC0.H_EC.VPC0.MHPF.FB4B */
                                        SDA4 = FB4C /* \_SB_.PCI0.LPC0.H_EC.VPC0.MHPF.FB4C */
                                        SDA5 = FB4D /* \_SB_.PCI0.LPC0.H_EC.VPC0.MHPF.FB4D */
                                        SDA6 = FB4E /* \_SB_.PCI0.LPC0.H_EC.VPC0.MHPF.FB4E */
                                        SDA7 = FB4F /* \_SB_.PCI0.LPC0.H_EC.VPC0.MHPF.FB4F */
                                        SDA8 = FB4G /* \_SB_.PCI0.LPC0.H_EC.VPC0.MHPF.FB4G */
                                        SDA9 = FB4H /* \_SB_.PCI0.LPC0.H_EC.VPC0.MHPF.FB4H */
                                        SDAA = FB4I /* \_SB_.PCI0.LPC0.H_EC.VPC0.MHPF.FB4I */
                                    }

                                    SMST = 0x00
                                    SMPR = FB0 /* \_SB_.PCI0.LPC0.H_EC.VPC0.MHPF.FB0_ */
                                    Local1 = 0x00
                                    While ((0x0A > Local1))
                                    {
                                        Sleep (0x01)
                                        Local1++
                                        If ((SMPR == 0x00))
                                        {
                                            Break
                                        }
                                    }

                                    Local0 = FB0 /* \_SB_.PCI0.LPC0.H_EC.VPC0.MHPF.FB0_ */
                                    If (((Local0 & 0x01) != 0x00))
                                    {
                                        FB4A = SDAT /* \_SB_.PCI0.LPC0.H_EC.SDAT */
                                        FB4B = SDA2 /* \_SB_.PCI0.LPC0.H_EC.SDA2 */
                                        FB4C = SDA4 /* \_SB_.PCI0.LPC0.H_EC.SDA4 */
                                        FB4D = SDA5 /* \_SB_.PCI0.LPC0.H_EC.SDA5 */
                                        FB4E = SDA6 /* \_SB_.PCI0.LPC0.H_EC.SDA6 */
                                        FB4F = SDA7 /* \_SB_.PCI0.LPC0.H_EC.SDA7 */
                                        FB4G = SDA8 /* \_SB_.PCI0.LPC0.H_EC.SDA8 */
                                        FB4H = SDA9 /* \_SB_.PCI0.LPC0.H_EC.SDA9 */
                                        FB4I = SDAA /* \_SB_.PCI0.LPC0.H_EC.SDAA */
                                    }

                                    FB1 = SMST /* \_SB_.PCI0.LPC0.H_EC.SMST */
                                    If ((Local1 >= 0x0A))
                                    {
                                        SMPR = 0x00
                                        FB1 = 0x18
                                    }
                                }

                                Return (BFWB) /* \_SB_.PCI0.LPC0.H_EC.VPC0.MHPF.BFWB */
                            }

                            Return (Arg0)
                        }

                        Method (MHIF, 1, NotSerialized)
                        {
                            Name (BFWI, Buffer (0x0A){})
                            CreateField (BFWI, 0x00, 0x10, RES)
                            CreateField (BFWI, 0x10, 0x40, ECI)
                            Local0 = Arg0
                            If ((Local0 && 0x01))
                            {
                                BFWI = Zero
                            }
                            Else
                            {
                                Sleep (0x64)
                                Notify (BAT0, 0x81) // Information Change
                                Sleep (0x64)
                                Notify (BAT0, 0x80) // Status Change
                                Sleep (0x64)
                                RES = Zero
                                BFWI [0x02] = MIDL /* \_SB_.PCI0.LPC0.H_EC.MIDL */
                                BFWI [0x03] = MIDH /* \_SB_.PCI0.LPC0.H_EC.MIDH */
                                BFWI [0x04] = HIDL /* \_SB_.PCI0.LPC0.H_EC.HIDL */
                                BFWI [0x05] = HIDH /* \_SB_.PCI0.LPC0.H_EC.HIDH */
                                BFWI [0x06] = FWVL /* \_SB_.PCI0.LPC0.H_EC.FWVL */
                                BFWI [0x07] = FWVH /* \_SB_.PCI0.LPC0.H_EC.FWVH */
                                BFWI [0x08] = DAVL /* \_SB_.PCI0.LPC0.H_EC.DAVL */
                                BFWI [0x09] = DAVH /* \_SB_.PCI0.LPC0.H_EC.DAVH */
                            }

                            Return (BFWI) /* \_SB_.PCI0.LPC0.H_EC.VPC0.MHIF.BFWI */
                        }

                        Method (HODD, 0, NotSerialized)
                        {
                        }

                        Method (SODD, 1, Serialized)
                        {
                        }

                        Method (SMTF, 0, Serialized)
                        {
                            Name (ATTF, Buffer (0x04){})
                            Return (ATTF) /* \_SB_.PCI0.LPC0.H_EC.VPC0.SMTF.ATTF */
                        }

                        Method (GSBI, 0, Serialized)
                        {
                            Name (BATE, Buffer (0x53){})
                            CreateField (BATE, 0x00, 0x10, BUF1)
                            CreateField (BATE, 0x10, 0x10, BUF2)
                            CreateField (BATE, 0x20, 0x10, BUF3)
                            CreateField (BATE, 0x30, 0x10, BUF4)
                            CreateField (BATE, 0x40, 0x10, BUF5)
                            CreateField (BATE, 0x50, 0x10, BUF6)
                            CreateField (BATE, 0x60, 0x10, BUF7)
                            CreateField (BATE, 0x70, 0x10, BUF8)
                            CreateField (BATE, 0x80, 0x10, BUF9)
                            CreateField (BATE, 0x90, 0x10, BUFA)
                            CreateField (BATE, 0xA0, 0x10, BUFB)
                            CreateField (BATE, 0xB0, 0x50, BUFC)
                            CreateField (BATE, 0x0100, 0x40, BUFD)
                            CreateField (BATE, 0x0140, 0x60, BUFE)
                            CreateField (BATE, 0x01A0, 0xB8, BUFF)
                            CreateField (BATE, 0x0258, 0x40, BUFG)
                            Name (CHEM, Buffer (0x08){})
                            CreateField (CHEM, 0x00, 0x08, BCH1)
                            CreateField (CHEM, 0x08, 0x08, BCH2)
                            CreateField (CHEM, 0x10, 0x08, BCH3)
                            CreateField (CHEM, 0x18, 0x08, BCH4)
                            CreateField (CHEM, 0x24, 0x08, BCH5)
                            CreateField (CHEM, 0x28, 0x08, BCH6)
                            Return (BATE) /* \_SB_.PCI0.LPC0.H_EC.VPC0.GSBI.BATE */
                        }

                        Name (APDT, 0x00)
                        Method (APPC, 1, Serialized)
                        {
                        }

                        Method (DBSL, 0, NotSerialized)
                        {
                            Return (Package (0x10)
                            {
                                0xC9, 
                                0xAE, 
                                0x95, 
                                0x7E, 
                                0x69, 
                                0x56, 
                                0x45, 
                                0x36, 
                                0x29, 
                                0x1E, 
                                0x15, 
                                0x0E, 
                                0x09, 
                                0x06, 
                                0x05, 
                                0x00
                            })
                        }

                        Method (SBSL, 1, Serialized)
                        {
                        }

                        Method (STHT, 1, Serialized)
                        {
                            Return (0x00)
                        }
                    }

                    Method (_Q44, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        Notify (VPC0, 0x80) // Status Change
                    }

                    Method (_Q61, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
                    {
                        If ((PSD1 == 0x01))
                        {
                            Notify (WMIU, 0xD0) // Hardware-Specific
                            Notify (WMIL, 0xD0) // Hardware-Specific
                        }
                    }
                }

                Scope (\_SB)
                {
                    Device (WMIU)
                    {
                        Name (_HID, "PNP0C14" /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
                        Name (_UID, "LSK20")  // _UID: Unique ID
                        Name (_WDG, Buffer (0x3C)
                        {
                            /* 0000 */  0x74, 0x09, 0x6C, 0xCE, 0x07, 0x04, 0x50, 0x4F,  // t.l...PO
                            /* 0008 */  0x88, 0xBA, 0x4F, 0xC3, 0xB6, 0x55, 0x9A, 0xD8,  // ..O..U..
                            /* 0010 */  0x53, 0x4B, 0x01, 0x02, 0x21, 0x12, 0x90, 0x05,  // SK..!...
                            /* 0018 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,  // f.......
                            /* 0020 */  0xC9, 0x06, 0x29, 0x10, 0x44, 0x41, 0x01, 0x00,  // ..).DA..
                            /* 0028 */  0x0C, 0xDE, 0xC0, 0x8F, 0xE4, 0xB4, 0xFD, 0x43,  // .......C
                            /* 0030 */  0xB0, 0xF3, 0x88, 0x71, 0x71, 0x1C, 0x12, 0x94,  // ...qq...
                            /* 0038 */  0xD0, 0x00, 0x01, 0x08                           // ....
                        })
                        Method (WMSK, 3, NotSerialized)
                        {
                            If ((Arg1 == 0x01))
                            {
                                If ((ToInteger (Arg2) == 0x01))
                                {
                                    Return (0x02)
                                }
                                ElseIf ((ToInteger (Arg2) == 0x02))
                                {
                                    Return (0x01)
                                }
                                ElseIf ((ToInteger (Arg2) == 0x03))
                                {
                                    Return (0x01)
                                }
                                ElseIf ((ToInteger (Arg2) == 0x04))
                                {
                                    Return (0x01)
                                }
                                Else
                                {
                                    Return (0x00)
                                }
                            }
                        }

                        Method (_WED, 1, NotSerialized)  // _Wxx: Wake Event, xx=0x00-0xFF
                        {
                            If ((Arg0 == 0xD0))
                            {
                                Return (^^PCI0.LPC0.H_EC.PSD1) /* \_SB_.PCI0.LPC0.H_EC.PSD1 */
                            }
                        }

                        Name (WQDA, Buffer (0x0422)
                        {
                            /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
                            /* 0008 */  0x12, 0x04, 0x00, 0x00, 0x66, 0x0C, 0x00, 0x00,  // ....f...
                            /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
                            /* 0018 */  0xA8, 0x42, 0x86, 0x00, 0x01, 0x06, 0x18, 0x42,  // .B.....B
                            /* 0020 */  0x10, 0x05, 0x10, 0x8A, 0x29, 0x81, 0x42, 0x04,  // ....).B.
                            /* 0028 */  0x8A, 0x40, 0xA4, 0x60, 0x30, 0x28, 0x0D, 0x20,  // .@.`0(. 
                            /* 0030 */  0x92, 0x03, 0x21, 0x17, 0x4C, 0x4C, 0x80, 0x08,  // ..!.LL..
                            /* 0038 */  0x08, 0x79, 0x15, 0x60, 0x53, 0x80, 0x49, 0x10,  // .y.`S.I.
                            /* 0040 */  0xF5, 0xEF, 0x0F, 0x51, 0x12, 0x1C, 0x4A, 0x08,  // ...Q..J.
                            /* 0048 */  0x84, 0x24, 0x0A, 0x30, 0x2F, 0x40, 0xB7, 0x00,  // .$.0/@..
                            /* 0050 */  0xC3, 0x02, 0x6C, 0x0B, 0x30, 0x2D, 0xC0, 0x31,  // ..l.0-.1
                            /* 0058 */  0x24, 0x95, 0x06, 0x4E, 0x09, 0x2C, 0x05, 0x42,  // $..N.,.B
                            /* 0060 */  0x42, 0x05, 0x28, 0x17, 0xE0, 0x5B, 0x80, 0x76,  // B.(..[.v
                            /* 0068 */  0x44, 0x49, 0x16, 0x60, 0x19, 0x46, 0x04, 0x1E,  // DI.`.F..
                            /* 0070 */  0x45, 0x64, 0xA3, 0x71, 0x68, 0xEC, 0x30, 0x2C,  // Ed.qh.0,
                            /* 0078 */  0x13, 0x4C, 0x83, 0x38, 0x8C, 0xB2, 0x91, 0x45,  // .L.8...E
                            /* 0080 */  0xE0, 0x09, 0x75, 0x2A, 0x40, 0xAE, 0x00, 0x61,  // ..u*@..a
                            /* 0088 */  0x02, 0xC4, 0xA3, 0x0A, 0xA3, 0x39, 0x28, 0x22,  // .....9("
                            /* 0090 */  0x1A, 0x1A, 0x25, 0x66, 0x4C, 0x04, 0xB6, 0x73,  // ..%fL..s
                            /* 0098 */  0x6C, 0x8D, 0xE2, 0x34, 0x0A, 0x17, 0x20, 0x1D,  // l..4.. .
                            /* 00A0 */  0x43, 0x23, 0x38, 0xAE, 0x63, 0x30, 0x58, 0x90,  // C#8.c0X.
                            /* 00A8 */  0x43, 0x31, 0x44, 0x41, 0x02, 0xAC, 0xA2, 0x91,  // C1DA....
                            /* 00B0 */  0x61, 0x84, 0x08, 0x72, 0x7C, 0x81, 0xBA, 0xC4,  // a..r|...
                            /* 00B8 */  0x13, 0x88, 0xC7, 0xE4, 0x01, 0x18, 0x21, 0x4C,  // ......!L
                            /* 00C0 */  0x8B, 0xB0, 0x82, 0x36, 0x62, 0x02, 0xC3, 0x1E,  // ...6b...
                            /* 00C8 */  0x0A, 0xE6, 0x07, 0x20, 0x01, 0x9E, 0x05, 0x58,  // ... ...X
                            /* 00D0 */  0x1F, 0x23, 0x21, 0xB0, 0x7B, 0x01, 0xE2, 0x04,  // .#!.{...
                            /* 00D8 */  0x68, 0x1E, 0x8D, 0x46, 0x75, 0x9C, 0xC6, 0x88,  // h..Fu...
                            /* 00E0 */  0xD2, 0x96, 0x00, 0xC5, 0x23, 0x13, 0x4C, 0x88,  // ....#.L.
                            /* 00E8 */  0x28, 0x21, 0x3A, 0xC3, 0x13, 0x5A, 0x28, 0xC3,  // (!:..Z(.
                            /* 00F0 */  0x45, 0x89, 0x13, 0x25, 0x70, 0x84, 0xDE, 0x04,  // E..%p...
                            /* 00F8 */  0x18, 0x83, 0x20, 0x08, 0x81, 0x43, 0x54, 0x36,  // .. ..CT6
                            /* 0100 */  0x48, 0xA1, 0xB6, 0x3F, 0x08, 0x22, 0xCB, 0xC1,  // H..?."..
                            /* 0108 */  0x89, 0x80, 0x45, 0x1A, 0x0D, 0xEA, 0x14, 0x90,  // ..E.....
                            /* 0110 */  0xE0, 0xA9, 0xC0, 0x27, 0x82, 0x93, 0x3A, 0xAF,  // ...'..:.
                            /* 0118 */  0xA3, 0x3A, 0xEB, 0x20, 0xC1, 0x4F, 0xA4, 0xCE,  // .:. .O..
                            /* 0120 */  0xE3, 0x00, 0x19, 0x38, 0x9B, 0x9A, 0xD9, 0x75,  // ...8...u
                            /* 0128 */  0x3E, 0x80, 0xE0, 0x1A, 0x50, 0xFF, 0xFF, 0x79,  // >...P..y
                            /* 0130 */  0x3E, 0x16, 0xB0, 0x61, 0x86, 0xC3, 0x0C, 0xD1,  // >..a....
                            /* 0138 */  0x83, 0xF5, 0x04, 0x0E, 0x91, 0x01, 0x7A, 0x62,  // ......zb
                            /* 0140 */  0x4F, 0x04, 0x58, 0x87, 0x93, 0xD1, 0x71, 0xA0,  // O.X...q.
                            /* 0148 */  0x54, 0x01, 0x66, 0xC7, 0xAD, 0x49, 0x27, 0x38,  // T.f..I'8
                            /* 0150 */  0x1E, 0x9F, 0x03, 0x3C, 0x9F, 0x13, 0x4E, 0x60,  // ...<..N`
                            /* 0158 */  0xF9, 0x83, 0x40, 0x8D, 0xCC, 0xD0, 0x36, 0x38,  // ..@...68
                            /* 0160 */  0x2D, 0x1D, 0x04, 0x7C, 0x00, 0x30, 0x81, 0xC5,  // -..|.0..
                            /* 0168 */  0x1E, 0x26, 0xE8, 0x78, 0xC0, 0x7F, 0x00, 0x78,  // .&.x...x
                            /* 0170 */  0x3E, 0x88, 0xF0, 0xCE, 0xE0, 0xF9, 0x9A, 0xA0,  // >.......
                            /* 0178 */  0xA8, 0xB3, 0x85, 0x9C, 0x8C, 0x07, 0x75, 0xAC,  // ......u.
                            /* 0180 */  0xF0, 0x05, 0x01, 0x03, 0x7E, 0xB4, 0x2F, 0x0C,  // ....~./.
                            /* 0188 */  0x61, 0x5E, 0x1A, 0xE2, 0x1E, 0xBC, 0xB5, 0x5E,  // a^.....^
                            /* 0190 */  0x21, 0x08, 0x81, 0x83, 0x43, 0xE8, 0xAF, 0x61,  // !...C..a
                            /* 0198 */  0x51, 0x83, 0xA7, 0x27, 0x0B, 0x7E, 0xA8, 0x60,  // Q..'.~.`
                            /* 01A0 */  0xC0, 0x7C, 0x3C, 0xA7, 0xE5, 0xB3, 0x87, 0x87,  // .|<.....
                            /* 01A8 */  0x07, 0x7F, 0x26, 0x4F, 0x14, 0xC0, 0x41, 0xE3,  // ..&O..A.
                            /* 01B0 */  0x19, 0x41, 0x88, 0xAF, 0x14, 0x6F, 0x14, 0xD8,  // .A...o..
                            /* 01B8 */  0xF3, 0x01, 0xBB, 0x53, 0x60, 0x87, 0x0E, 0xFF,  // ...S`...
                            /* 01C0 */  0x5A, 0x61, 0x54, 0x5F, 0x25, 0xDE, 0x22, 0x12,  // ZaT_%.".
                            /* 01C8 */  0x18, 0x2B, 0xC1, 0xFF, 0x3F, 0x30, 0x6E, 0xEC,  // .+..?0n.
                            /* 01D0 */  0xF6, 0x2B, 0x00, 0x21, 0xF8, 0xC1, 0x3C, 0x1B,  // .+.!..<.
                            /* 01D8 */  0x3C, 0x85, 0x44, 0x38, 0x2E, 0xA3, 0x1F, 0x50,  // <.D8...P
                            /* 01E0 */  0x9F, 0x33, 0x17, 0x44, 0xB4, 0xE3, 0x3A, 0x87,  // .3.D..:.
                            /* 01E8 */  0xA3, 0x08, 0x15, 0xE2, 0x2C, 0x0C, 0x14, 0x2E,  // ....,...
                            /* 01F0 */  0x58, 0x40, 0xE3, 0x24, 0xB0, 0xC8, 0xC1, 0xA2,  // X@.$....
                            /* 01F8 */  0x07, 0xC1, 0x01, 0xCF, 0xE1, 0x90, 0x82, 0x1E,  // ........
                            /* 0200 */  0xC4, 0xC9, 0x44, 0x39, 0x8F, 0x63, 0xF2, 0x39,  // ..D9.c.9
                            /* 0208 */  0xC5, 0x08, 0xC7, 0xF4, 0x78, 0xF2, 0xDC, 0xE1,  // ....x...
                            /* 0210 */  0xFB, 0xC6, 0xE1, 0x9F, 0xD7, 0xD1, 0x3E, 0x85,  // ......>.
                            /* 0218 */  0xB0, 0xA1, 0x1F, 0x02, 0xE6, 0x74, 0xE1, 0x21,  // .....t.!
                            /* 0220 */  0xF0, 0x01, 0x1C, 0xD0, 0x29, 0x5A, 0xE9, 0xC4,  // ....)Z..
                            /* 0228 */  0x90, 0x27, 0x1A, 0x7E, 0x2C, 0xC1, 0x0E, 0x80,  // .'.~,...
                            /* 0230 */  0xAB, 0xF2, 0x00, 0xC2, 0xC4, 0x3F, 0x0E, 0x24,  // .....?.$
                            /* 0238 */  0xED, 0x95, 0x40, 0x61, 0x7C, 0xC6, 0x01, 0x5C,  // ..@a|..\
                            /* 0240 */  0x01, 0x3D, 0x42, 0x80, 0xE7, 0x6C, 0x00, 0x17,  // .=B..l..
                            /* 0248 */  0xFB, 0xE4, 0xA3, 0x84, 0x78, 0x7A, 0x88, 0x7E,  // ....xz.~
                            /* 0250 */  0x2E, 0x27, 0xF3, 0x08, 0x61, 0x82, 0xFF, 0xFF,  // .'..a...
                            /* 0258 */  0x03, 0x0E, 0xEC, 0x2B, 0x8C, 0xB5, 0x5D, 0x70,  // ...+..]p
                            /* 0260 */  0xC8, 0x94, 0x9E, 0x6A, 0xDE, 0x6E, 0x8C, 0x72,  // ...j.n.r
                            /* 0268 */  0x58, 0x86, 0x79, 0xC0, 0xF1, 0xED, 0xA0, 0x35,  // X.y....5
                            /* 0270 */  0x18, 0xDD, 0x6E, 0xD8, 0x89, 0xE4, 0x24, 0x42,  // ..n...$B
                            /* 0278 */  0x31, 0xDC, 0x07, 0x89, 0x38, 0xB1, 0xC3, 0x45,  // 1...8..E
                            /* 0280 */  0x88, 0xFD, 0xD0, 0x61, 0xBC, 0x07, 0x1C, 0x16,  // ...a....
                            /* 0288 */  0xEF, 0x38, 0xA0, 0x83, 0x88, 0x0F, 0x38, 0x00,  // .8....8.
                            /* 0290 */  0x3F, 0x4E, 0x07, 0x8F, 0x25, 0xE0, 0x3F, 0x2B,  // ?N..%.?+
                            /* 0298 */  0xF0, 0x53, 0x09, 0x18, 0xFE, 0xFF, 0xA7, 0x12,  // .S......
                            /* 02A0 */  0xF0, 0x24, 0x7E, 0x10, 0xE8, 0xB4, 0xE3, 0xB4,  // .$~.....
                            /* 02A8 */  0x20, 0xB2, 0xB1, 0x58, 0x1F, 0xAA, 0x0C, 0xA1,  //  ..X....
                            /* 02B0 */  0x9C, 0x0B, 0x96, 0x47, 0x5C, 0x61, 0x1E, 0x4F,  // ...G\a.O
                            /* 02B8 */  0xE4, 0x73, 0x88, 0xFC, 0x52, 0x11, 0xE1, 0x0C,  // .s..R...
                            /* 02C0 */  0x8E, 0x21, 0xD2, 0x69, 0xC5, 0x38, 0xB0, 0x57,  // .!.i.8.W
                            /* 02C8 */  0x0E, 0xDF, 0x03, 0x9E, 0x2C, 0x78, 0x22, 0x60,  // ....,x"`
                            /* 02D0 */  0x1D, 0xE5, 0x78, 0x16, 0x0A, 0x29, 0xA3, 0xD1,  // ..x..)..
                            /* 02D8 */  0xA8, 0x3C, 0x08, 0x6B, 0x81, 0x11, 0x9C, 0x41,  // .<.k...A
                            /* 02E0 */  0x0C, 0xE8, 0xA0, 0x10, 0x3A, 0x22, 0xE1, 0x94,  // ....:"..
                            /* 02E8 */  0x80, 0x68, 0x5A, 0x6F, 0x44, 0xEC, 0xDC, 0xE3,  // .hZoD...
                            /* 02F0 */  0x1B, 0x92, 0x09, 0xA6, 0xBA, 0x1D, 0xD1, 0x79,  // .......y
                            /* 02F8 */  0xFA, 0x46, 0xC0, 0xEF, 0x29, 0x3E, 0x23, 0x18,  // .F..)>#.
                            /* 0300 */  0xDC, 0x0A, 0xEF, 0x1F, 0xA0, 0x19, 0x71, 0x10,  // ......q.
                            /* 0308 */  0xDF, 0x18, 0x7C, 0x26, 0xF0, 0x46, 0x4F, 0x04,  // ..|&.FO.
                            /* 0310 */  0xA3, 0xE6, 0xD0, 0x84, 0x9A, 0x86, 0xA7, 0xFA,  // ........
                            /* 0318 */  0x62, 0x63, 0x02, 0xEB, 0xBA, 0x0C, 0x81, 0x4C,  // bc.....L
                            /* 0320 */  0xDF, 0x31, 0x01, 0x14, 0x40, 0xBE, 0x14, 0xF8,  // .1..@...
                            /* 0328 */  0xA4, 0xF3, 0x60, 0xC0, 0xC6, 0xF0, 0xB0, 0x63,  // ..`....c
                            /* 0330 */  0x34, 0xA3, 0x73, 0xC1, 0x93, 0x47, 0x49, 0x9C,  // 4.s..GI.
                            /* 0338 */  0x3C, 0x05, 0xF1, 0xE4, 0x1D, 0x7F, 0xF2, 0xE8,  // <.......
                            /* 0340 */  0x3B, 0x85, 0x8F, 0x57, 0x9C, 0xC0, 0x71, 0xC7,  // ;..W..q.
                            /* 0348 */  0x4E, 0xAF, 0x20, 0x98, 0xFF, 0xFF, 0x30, 0xD8,  // N. ...0.
                            /* 0350 */  0x64, 0x4F, 0xED, 0x51, 0xC1, 0xB3, 0xF0, 0xA5,  // dO.Q....
                            /* 0358 */  0x05, 0x37, 0x78, 0xB8, 0xB7, 0x8C, 0x23, 0x0F,  // .7x...#.
                            /* 0360 */  0xF3, 0x4C, 0xE5, 0xF3, 0x95, 0xC1, 0x82, 0x84,  // .L......
                            /* 0368 */  0x79, 0x5F, 0xC0, 0x01, 0xBD, 0xDF, 0xBD, 0x38,  // y_.....8
                            /* 0370 */  0x1C, 0x6E, 0x88, 0xF3, 0x3D, 0xF4, 0x08, 0x3E,  // .n..=..>
                            /* 0378 */  0x7E, 0xF8, 0xCC, 0x80, 0x1B, 0x12, 0xBB, 0x06,  // ~.......
                            /* 0380 */  0xF0, 0xD1, 0xF8, 0x1A, 0xC0, 0x47, 0xE9, 0x3B,  // .....G.;
                            /* 0388 */  0x16, 0xF8, 0x04, 0xDE, 0x03, 0x40, 0x0E, 0x8F,  // .....@..
                            /* 0390 */  0x09, 0x3F, 0x2A, 0x7A, 0xCF, 0xF0, 0xB8, 0xF8,  // .?*z....
                            /* 0398 */  0x90, 0x7D, 0x45, 0x62, 0xD8, 0xCF, 0x1A, 0xBE,  // .}Eb....
                            /* 03A0 */  0x47, 0x9E, 0xE0, 0x2B, 0xC5, 0x2B, 0x1B, 0x06,  // G..+.+..
                            /* 03A8 */  0xD6, 0x87, 0x00, 0x0E, 0x6B, 0xB4, 0xB0, 0x87,  // ....k...
                            /* 03B0 */  0xFC, 0x92, 0xE2, 0x13, 0x8E, 0x67, 0x66, 0x8C,  // .....gf.
                            /* 03B8 */  0xB0, 0x3E, 0x08, 0x38, 0xCC, 0x41, 0x00, 0x34,  // .>.8.A.4
                            /* 03C0 */  0x47, 0x36, 0xFC, 0x0D, 0xC0, 0x97, 0x80, 0x20,  // G6..... 
                            /* 03C8 */  0x6F, 0x22, 0xA7, 0xFB, 0xE4, 0x63, 0x54, 0x7E,  // o"...cT~
                            /* 03D0 */  0x23, 0xE0, 0xE7, 0x11, 0x2C, 0x50, 0x10, 0xDF,  // #...,P..
                            /* 03D8 */  0x30, 0x3C, 0xB6, 0x03, 0x89, 0x0D, 0xE7, 0x5A,  // 0<.....Z
                            /* 03E0 */  0xC2, 0xFE, 0xFF, 0x77, 0x02, 0x8C, 0x42, 0x9B,  // ...w..B.
                            /* 03E8 */  0x3E, 0x35, 0x1A, 0xB5, 0x6A, 0x50, 0xA6, 0x46,  // >5..jP.F
                            /* 03F0 */  0x99, 0x06, 0xB5, 0xFA, 0x54, 0x6A, 0xCC, 0x98,  // ....Tj..
                            /* 03F8 */  0x89, 0x2B, 0x9F, 0x5F, 0x11, 0x1A, 0xB1, 0x23,  // .+._...#
                            /* 0400 */  0x81, 0xD0, 0x98, 0x14, 0x02, 0x71, 0xE8, 0x1F,  // .....q..
                            /* 0408 */  0x87, 0x40, 0x2C, 0xF9, 0x1E, 0x26, 0x10, 0x4B,  // .@,..&.K
                            /* 0410 */  0xA2, 0x95, 0x91, 0x8B, 0x86, 0x41, 0x04, 0x64,  // .....A.d
                            /* 0418 */  0xFD, 0x2A, 0x80, 0x58, 0x1A, 0x10, 0x01, 0xF9,  // .*.X....
                            /* 0420 */  0xFF, 0x0F                                       // ..
                        })
                    }

                    Device (WMIL)
                    {
                        Name (_HID, "PNP0C14" /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
                        Name (_UID, "LSK")  // _UID: Unique ID
                        Name (_WDG, Buffer (0x3C)
                        {
                            /* 0000 */  0xB9, 0xEC, 0x18, 0x7F, 0xE6, 0xED, 0x4F, 0x4A,  // ......OJ
                            /* 0008 */  0xA7, 0xCA, 0xB8, 0xDC, 0xF1, 0x5F, 0xA1, 0xD3,  // ....._..
                            /* 0010 */  0x53, 0x4B, 0x01, 0x02, 0x21, 0x12, 0x90, 0x05,  // SK..!...
                            /* 0018 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,  // f.......
                            /* 0020 */  0xC9, 0x06, 0x29, 0x10, 0x44, 0x46, 0x01, 0x00,  // ..).DF..
                            /* 0028 */  0x73, 0x9C, 0x64, 0x1F, 0xC5, 0xD9, 0x5A, 0x47,  // s.d...ZG
                            /* 0030 */  0xA8, 0xC9, 0x34, 0x73, 0x06, 0xCD, 0x33, 0x29,  // ..4s..3)
                            /* 0038 */  0xD0, 0x00, 0x01, 0x08                           // ....
                        })
                        Method (LLSK, 1, NotSerialized)
                        {
                            Return (One)
                        }

                        Method (_WED, 1, NotSerialized)  // _Wxx: Wake Event, xx=0x00-0xFF
                        {
                            Return (One)
                        }

                        Name (WQDF, Buffer (0x04D4)
                        {
                            /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
                            /* 0008 */  0xC4, 0x04, 0x00, 0x00, 0xA8, 0x12, 0x00, 0x00,  // ........
                            /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
                            /* 0018 */  0x28, 0x43, 0x89, 0x00, 0x01, 0x06, 0x18, 0x42,  // (C.....B
                            /* 0020 */  0x10, 0x05, 0x10, 0x8A, 0x28, 0x81, 0x42, 0x04,  // ....(.B.
                            /* 0028 */  0x0A, 0x40, 0xA4, 0x50, 0x30, 0x28, 0x0D, 0x20,  // .@.P0(. 
                            /* 0030 */  0x92, 0x03, 0x21, 0x17, 0x4C, 0x4C, 0x80, 0x08,  // ..!.LL..
                            /* 0038 */  0x08, 0x79, 0x15, 0x60, 0x53, 0x80, 0x49, 0x10,  // .y.`S.I.
                            /* 0040 */  0xF5, 0xEF, 0x0F, 0x51, 0x12, 0x1C, 0x4A, 0x08,  // ...Q..J.
                            /* 0048 */  0x84, 0x24, 0x0A, 0x30, 0x2F, 0x40, 0xB7, 0x00,  // .$.0/@..
                            /* 0050 */  0xC3, 0x02, 0x6C, 0x0B, 0x30, 0x2D, 0xC0, 0x31,  // ..l.0-.1
                            /* 0058 */  0x24, 0x95, 0x06, 0x4E, 0x09, 0x2C, 0x05, 0x42,  // $..N.,.B
                            /* 0060 */  0x42, 0x05, 0x28, 0x17, 0xE0, 0x5B, 0x80, 0x76,  // B.(..[.v
                            /* 0068 */  0x44, 0x49, 0x16, 0x60, 0x19, 0x46, 0x04, 0x1E,  // DI.`.F..
                            /* 0070 */  0x45, 0x64, 0xA3, 0x71, 0x68, 0xEC, 0x30, 0x2C,  // Ed.qh.0,
                            /* 0078 */  0x13, 0x4C, 0x83, 0x38, 0x8C, 0xB2, 0x91, 0x45,  // .L.8...E
                            /* 0080 */  0xE0, 0x09, 0x75, 0x2A, 0x40, 0xAE, 0x00, 0x61,  // ..u*@..a
                            /* 0088 */  0x02, 0xC4, 0xA3, 0x0A, 0xA3, 0x39, 0x28, 0x32,  // .....9(2
                            /* 0090 */  0x87, 0xD0, 0x18, 0x31, 0x63, 0x22, 0xB0, 0x9D,  // ...1c"..
                            /* 0098 */  0x63, 0x6B, 0x14, 0xA7, 0x51, 0xB8, 0x00, 0xE9,  // ck..Q...
                            /* 00A0 */  0x18, 0x1A, 0xC1, 0x71, 0x1D, 0x83, 0xC1, 0x82,  // ...q....
                            /* 00A8 */  0x1C, 0x8A, 0x21, 0x0A, 0x1A, 0x82, 0xAC, 0x0E,  // ..!.....
                            /* 00B0 */  0x47, 0x16, 0x05, 0x28, 0x85, 0x91, 0x4B, 0x34,  // G..(..K4
                            /* 00B8 */  0x0D, 0x30, 0xC8, 0x21, 0x19, 0xDE, 0x08, 0x61,  // .0.!...a
                            /* 00C0 */  0xA2, 0x05, 0x0D, 0xEC, 0x01, 0x24, 0xF0, 0x80,  // .....$..
                            /* 00C8 */  0x8E, 0x04, 0x23, 0x03, 0x42, 0x9E, 0x05, 0x58,  // ..#.B..X
                            /* 00D0 */  0x1F, 0x22, 0x21, 0xB0, 0x7B, 0x01, 0xC6, 0x04,  // ."!.{...
                            /* 00D8 */  0x68, 0x14, 0xA0, 0x6D, 0x52, 0x1A, 0x54, 0x87,  // h..mR.T.
                            /* 00E0 */  0x02, 0xBC, 0x09, 0x70, 0x26, 0xC0, 0xD6, 0x88,  // ...p&...
                            /* 00E8 */  0x04, 0x63, 0x6B, 0x28, 0xC2, 0x8A, 0x14, 0xA4,  // .ck(....
                            /* 00F0 */  0x41, 0x14, 0x41, 0x14, 0x07, 0x25, 0xB0, 0x28,  // A.A..%.(
                            /* 00F8 */  0x11, 0x63, 0x19, 0xE3, 0x04, 0x63, 0x47, 0x0A,  // .c...cG.
                            /* 0100 */  0x1B, 0x25, 0x42, 0x65, 0x68, 0xB2, 0x3F, 0x08,  // .%Beh.?.
                            /* 0108 */  0x22, 0xCA, 0xC1, 0x81, 0x80, 0x45, 0x1A, 0x0D,  // "....E..
                            /* 0110 */  0xEA, 0x10, 0x90, 0xE0, 0xA1, 0xC0, 0x07, 0x82,  // ........
                            /* 0118 */  0x93, 0x3A, 0xAF, 0xA3, 0x3A, 0xE9, 0x20, 0x27,  // .:..:. '
                            /* 0120 */  0x7A, 0x60, 0x75, 0x9E, 0x06, 0xC8, 0xB8, 0xD9,  // z`u.....
                            /* 0128 */  0xD4, 0xCC, 0xAE, 0xE3, 0x01, 0x04, 0xD7, 0xF3,  // ........
                            /* 0130 */  0x24, 0x04, 0xFF, 0xFF, 0xA7, 0x02, 0x0F, 0x33,  // $......3
                            /* 0138 */  0x1C, 0x66, 0x88, 0x1E, 0xAC, 0x27, 0x70, 0x88,  // .f...'p.
                            /* 0140 */  0x0C, 0xD0, 0x93, 0x7A, 0x20, 0xC0, 0xCE, 0xEB,  // ...z ...
                            /* 0148 */  0x64, 0x9E, 0x06, 0x4A, 0x15, 0x60, 0x76, 0xEC,  // d..J.`v.
                            /* 0150 */  0x84, 0xE0, 0x78, 0x7C, 0x0C, 0xF0, 0x7C, 0x4E,  // ..x|..|N
                            /* 0158 */  0x38, 0x81, 0xE5, 0x0F, 0x02, 0x35, 0x32, 0x43,  // 8....52C
                            /* 0160 */  0x7B, 0xA8, 0xA7, 0xF5, 0x36, 0xE0, 0x03, 0x80,  // {...6...
                            /* 0168 */  0x09, 0x2C, 0xF6, 0x2C, 0x41, 0xC7, 0x03, 0x7E,  // .,.,A..~
                            /* 0170 */  0xC5, 0xC7, 0x03, 0x21, 0xBC, 0x32, 0x78, 0xBE,  // ...!.2x.
                            /* 0178 */  0x3E, 0x51, 0xE8, 0x68, 0xA1, 0xF1, 0xE0, 0x4E,  // >Q.h...N
                            /* 0180 */  0x15, 0xBE, 0x20, 0x60, 0xC0, 0x8F, 0xF6, 0x7D,  // .. `...}
                            /* 0188 */  0x21, 0xCC, 0x7B, 0x40, 0xDC, 0x83, 0xB7, 0xD6,  // !.{@....
                            /* 0190 */  0x1B, 0x04, 0x21, 0x70, 0x6C, 0x08, 0x7D, 0x35,  // ..!pl.}5
                            /* 0198 */  0x2C, 0x6A, 0xF0, 0xF4, 0x60, 0xC1, 0xCF, 0x14,  // ,j..`...
                            /* 01A0 */  0x0C, 0x98, 0x8F, 0xE7, 0xB4, 0x7C, 0xF4, 0xF0,  // .....|..
                            /* 01A8 */  0xF0, 0xE0, 0x9F, 0x1B, 0x70, 0x07, 0x0A, 0x60,  // ....p..`
                            /* 01B0 */  0x32, 0x40, 0x7E, 0xA5, 0xC0, 0x8E, 0x1C, 0x7C,  // 2@~....|
                            /* 01B8 */  0x58, 0x81, 0x31, 0xFF, 0x7F, 0x60, 0x0F, 0xDD,  // X.1..`..
                            /* 01C0 */  0x7E, 0x05, 0x20, 0x04, 0x3F, 0xA7, 0x47, 0x83,  // ~. .?.G.
                            /* 01C8 */  0x23, 0x8A, 0x70, 0x58, 0x46, 0x7F, 0x84, 0xE8,  // #.pXF...
                            /* 01D0 */  0x73, 0xE2, 0x82, 0x88, 0x76, 0x58, 0x98, 0x59,  // s...vX.Y
                            /* 01D8 */  0xC5, 0x38, 0x8C, 0x48, 0x31, 0xA2, 0x45, 0xF4,  // .8.H1.E.
                            /* 01E0 */  0x4C, 0x12, 0x14, 0x39, 0x56, 0xF4, 0x20, 0x38,  // L..9V. 8
                            /* 01E8 */  0xDE, 0x39, 0x1C, 0x52, 0xCC, 0xF8, 0xE1, 0xA3,  // .9.R....
                            /* 01F0 */  0x9C, 0xC7, 0x31, 0xF9, 0x94, 0x62, 0x84, 0xB3,  // ..1..b..
                            /* 01F8 */  0x7B, 0x38, 0x79, 0x58, 0xB1, 0xE6, 0x49, 0xE9,  // {8yX..I.
                            /* 0200 */  0xF4, 0x71, 0x5A, 0x0F, 0x21, 0x6C, 0xE4, 0x87,  // .qZ.!l..
                            /* 0208 */  0x80, 0x39, 0x5C, 0x78, 0x08, 0x7C, 0x3E, 0x98,  // .9\x.|>.
                            /* 0210 */  0x89, 0xE1, 0xCE, 0x33, 0xFC, 0x54, 0x82, 0x1D,  // ...3.T..
                            /* 0218 */  0x00, 0x97, 0x66, 0x03, 0x84, 0xC9, 0x7F, 0x1B,  // ..f.....
                            /* 0220 */  0x48, 0xDE, 0x23, 0x81, 0xC2, 0xF8, 0x84, 0x03,  // H.#.....
                            /* 0228 */  0xB8, 0x12, 0x7C, 0x82, 0x00, 0xD1, 0xD9, 0x00,  // ..|.....
                            /* 0230 */  0x36, 0xF8, 0xD1, 0x3F, 0x1A, 0x84, 0x78, 0x7B,  // 6..?..x{
                            /* 0238 */  0x08, 0x7F, 0x30, 0x47, 0xF3, 0x0C, 0xE1, 0x03,  // ..0G....
                            /* 0240 */  0x0E, 0xFF, 0xFF, 0x1F, 0x70, 0x60, 0x9E, 0x69,  // ....p`.i
                            /* 0248 */  0x1E, 0x70, 0x9E, 0x70, 0xDE, 0x6B, 0x8E, 0xE0,  // .p.p.k..
                            /* 0250 */  0x6D, 0xA0, 0xC2, 0x8B, 0x0D, 0x41, 0x39, 0x85,  // m....A9.
                            /* 0258 */  0x10, 0xEF, 0x35, 0x0F, 0x38, 0x9E, 0x43, 0x88,  // ..5.8.C.
                            /* 0260 */  0x80, 0x0F, 0x38, 0x06, 0x0D, 0xF8, 0x8A, 0x63,  // ..8....c
                            /* 0268 */  0xC8, 0xB0, 0x01, 0xC3, 0xC4, 0xF6, 0x39, 0x27,  // ......9'
                            /* 0270 */  0x46, 0xA8, 0x20, 0x6F, 0x38, 0x3E, 0xE0, 0xB0,  // F. o8>..
                            /* 0278 */  0x80, 0xE7, 0x01, 0x1D, 0x44, 0x7C, 0xC0, 0x01,  // ....D|..
                            /* 0280 */  0xF8, 0x71, 0x2E, 0x01, 0x0E, 0x87, 0x05, 0x4E,  // .q.....N
                            /* 0288 */  0xE0, 0x73, 0x09, 0xFC, 0xFF, 0xFF, 0xB9, 0x04,  // .s......
                            /* 0290 */  0x3C, 0x91, 0x4D, 0x1C, 0x09, 0x98, 0x76, 0x0A,  // <.M...v.
                            /* 0298 */  0xD9, 0x58, 0xAD, 0x4F, 0x05, 0x34, 0xD3, 0x8A,  // .X.O.4..
                            /* 02A0 */  0xE5, 0x11, 0x57, 0x98, 0x4F, 0x41, 0x58, 0xF4,  // ..W.OAX.
                            /* 02A8 */  0x43, 0x67, 0x29, 0x00, 0x75, 0x8C, 0xE3, 0xFA,  // Cg).u...
                            /* 02B0 */  0x29, 0xA4, 0x8C, 0x46, 0x23, 0x32, 0x9C, 0xB5,  // )..F#2..
                            /* 02B8 */  0xC0, 0x08, 0xCE, 0x20, 0x06, 0x74, 0x50, 0x08,  // ... .tP.
                            /* 02C0 */  0x39, 0x39, 0x0E, 0xA0, 0x7E, 0x75, 0x9A, 0x92,  // 99..~u..
                            /* 02C8 */  0x66, 0xC1, 0x20, 0x5E, 0x77, 0x18, 0xC1, 0x54,  // f. ^w..T
                            /* 02D0 */  0x57, 0x23, 0x3A, 0x47, 0x5F, 0x07, 0xF8, 0x2D,  // W#:G_..-
                            /* 02D8 */  0xC5, 0x07, 0x04, 0x83, 0xFB, 0x48, 0xF1, 0xF6,  // .....H..
                            /* 02E0 */  0x01, 0x96, 0xD1, 0x06, 0xF1, 0x75, 0xC1, 0x07,  // .....u..
                            /* 02E8 */  0x02, 0x6F, 0xF2, 0x44, 0x30, 0x6A, 0x4E, 0x4C,  // .o.D0jNL
                            /* 02F0 */  0xA8, 0x69, 0xF8, 0x72, 0xF0, 0x5A, 0x63, 0x02,  // .i.r.Zc.
                            /* 02F8 */  0xEB, 0xBA, 0x23, 0x40, 0x3F, 0x80, 0x78, 0x14,  // ..#@?.x.
                            /* 0300 */  0xBE, 0x9E, 0x99, 0xA0, 0xBE, 0x33, 0x02, 0x28,  // .....3.(
                            /* 0308 */  0x80, 0x7C, 0x21, 0xF0, 0xFD, 0xE0, 0xA1, 0x80,  // .|!.....
                            /* 0310 */  0x8D, 0xE1, 0x15, 0xC1, 0x68, 0x46, 0xE7, 0x22,  // ....hF."
                            /* 0318 */  0x27, 0x8F, 0x92, 0x35, 0x79, 0x0A, 0xE2, 0xC9,  // '..5y...
                            /* 0320 */  0x3B, 0xF2, 0xE4, 0xD1, 0x17, 0x0A, 0x1F, 0x09,  // ;.......
                            /* 0328 */  0x38, 0x81, 0x23, 0x8E, 0x9D, 0xDE, 0x3F, 0xF0,  // 8.#...?.
                            /* 0330 */  0x93, 0x3D, 0xB5, 0xC7, 0x04, 0x23, 0xFF, 0xFF,  // .=...#..
                            /* 0338 */  0x43, 0xBC, 0x20, 0x79, 0xF0, 0xE0, 0x38, 0x57,  // C. y..8W
                            /* 0340 */  0xC1, 0x19, 0x0B, 0x47, 0x79, 0x5B, 0xC0, 0x0E,  // ...Gy[..
                            /* 0348 */  0xC6, 0x17, 0x00, 0x3E, 0x0E, 0x5F, 0x00, 0xF8,  // ...>._..
                            /* 0350 */  0xF8, 0x7C, 0xE9, 0x80, 0x7F, 0x02, 0xC0, 0x12,  // .|......
                            /* 0358 */  0x14, 0x78, 0x03, 0x00, 0x39, 0x3C, 0x26, 0xDE,  // .x..9<&.
                            /* 0360 */  0xA8, 0xA8, 0xAC, 0x71, 0xA1, 0x06, 0xEB, 0xAB,  // ...q....
                            /* 0368 */  0x11, 0xC3, 0x7E, 0xC2, 0xB0, 0xE8, 0xB1, 0xEA,  // ..~.....
                            /* 0370 */  0x32, 0xF1, 0xA6, 0x86, 0x81, 0xF5, 0xF0, 0x39,  // 2......9
                            /* 0378 */  0xAC, 0xD1, 0xC2, 0x1E, 0xF5, 0xBB, 0x89, 0x0F,  // ........
                            /* 0380 */  0x36, 0x9E, 0x99, 0x31, 0xC2, 0xFA, 0x08, 0xE0,  // 6..1....
                            /* 0388 */  0xDB, 0xC7, 0x23, 0x00, 0x98, 0x4F, 0x6A, 0xB0,  // ..#..Oj.
                            /* 0390 */  0xAE, 0x08, 0x18, 0x41, 0x6F, 0x05, 0xDD, 0x46,  // ...Ao..F
                            /* 0398 */  0xF8, 0x38, 0x2C, 0x79, 0x5D, 0xBA, 0x8D, 0xB0,  // .8,y]...
                            /* 03A0 */  0x09, 0xB0, 0xCB, 0x0F, 0x4E, 0xE6, 0xC9, 0x81,  // ....N...
                            /* 03A8 */  0x42, 0x58, 0xE0, 0x7D, 0xCB, 0x07, 0x08, 0x94,  // BX.}....
                            /* 03B0 */  0x20, 0x38, 0x0A, 0xE2, 0x03, 0x84, 0xC3, 0x0A,  //  8......
                            /* 03B8 */  0xF8, 0xFF, 0xDF, 0x89, 0xB0, 0x07, 0x08, 0x7C,  // .......|
                            /* 03C0 */  0xB8, 0x03, 0x04, 0x28, 0x2E, 0x32, 0xF8, 0xE1,  // ...(.2..
                            /* 03C8 */  0x82, 0x6B, 0x78, 0xB8, 0xD3, 0x03, 0x3C, 0x02,  // .kx...<.
                            /* 03D0 */  0x5F, 0x90, 0xC0, 0x77, 0x7A, 0x00, 0x1E, 0xA1,  // _..wz...
                            /* 03D8 */  0x4E, 0x0F, 0xA0, 0x3B, 0x05, 0xF8, 0xF4, 0x00,  // N..;....
                            /* 03E0 */  0xAE, 0xF1, 0x03, 0x0F, 0x8D, 0x2F, 0x03, 0xDD,  // ...../..
                            /* 03E8 */  0x8A, 0x70, 0x8A, 0xD7, 0x26, 0xE8, 0xB7, 0x22,  // .p..&.."
                            /* 03F0 */  0x98, 0x1A, 0x01, 0x75, 0x2B, 0x62, 0xFF, 0x7F,  // ...u+b..
                            /* 03F8 */  0x82, 0xEA, 0x60, 0x94, 0xFF, 0xE4, 0x80, 0x4A,  // ..`....J
                            /* 0400 */  0x7C, 0x72, 0xA0, 0x20, 0x1E, 0xAD, 0x6F, 0x45,  // |r. ..oE
                            /* 0408 */  0x80, 0xCF, 0x98, 0xA7, 0x1F, 0x28, 0xB7, 0xB4,  // .....(..
                            /* 0410 */  0xF3, 0xC6, 0xC4, 0x9A, 0x22, 0xF4, 0x9B, 0x25,  // ...."..%
                            /* 0418 */  0x6E, 0x8A, 0xE0, 0x1A, 0x09, 0x6E, 0x8C, 0xB0,  // n....n..
                            /* 0420 */  0x6E, 0x03, 0xBE, 0x48, 0x01, 0xDF, 0xFF, 0x3F,  // n..H...?
                            /* 0428 */  0x81, 0xC5, 0xDD, 0x17, 0x50, 0x72, 0xEE, 0x0B,  // ....Pr..
                            /* 0430 */  0x14, 0xC4, 0xF7, 0x06, 0x47, 0x9D, 0x3B, 0x1A,  // ....G.;.
                            /* 0438 */  0xDA, 0x67, 0x1B, 0xDF, 0x57, 0x7C, 0x6F, 0x01,  // .g..W|o.
                            /* 0440 */  0x2E, 0x73, 0xC7, 0x1F, 0x7A, 0xD8, 0x81, 0x0E,  // .s..z...
                            /* 0448 */  0x73, 0x6F, 0x81, 0x37, 0x32, 0x5F, 0xA2, 0x80,  // so.72_..
                            /* 0450 */  0xF7, 0xB5, 0xC3, 0xF7, 0x16, 0x70, 0xC1, 0xF2,  // .....p..
                            /* 0458 */  0x7B, 0x0B, 0x78, 0xC0, 0xDE, 0x5B, 0xC0, 0x78,  // {.x..[.x
                            /* 0460 */  0x04, 0xC0, 0x5F, 0x7B, 0x3C, 0xA2, 0xB7, 0x88,  // .._{<...
                            /* 0468 */  0x28, 0xAF, 0x92, 0x6F, 0x2F, 0xBE, 0xB5, 0xB0,  // (..o/...
                            /* 0470 */  0x33, 0xBD, 0x2F, 0x28, 0xEC, 0xFF, 0x7F, 0x6C,  // 3./(...l
                            /* 0478 */  0xC1, 0x29, 0xB4, 0xE9, 0x53, 0xA3, 0x51, 0xAB,  // .)..S.Q.
                            /* 0480 */  0x06, 0x65, 0x6A, 0x94, 0x69, 0x50, 0xAB, 0x4F,  // .ej.iP.O
                            /* 0488 */  0xA5, 0xC6, 0x8C, 0x19, 0x39, 0x84, 0xFB, 0x21,  // ....9..!
                            /* 0490 */  0xA0, 0xE1, 0x39, 0x10, 0x08, 0x8D, 0x48, 0x21,  // ..9...H!
                            /* 0498 */  0x10, 0x47, 0xFE, 0x5D, 0x08, 0xC4, 0x82, 0x3D,  // .G.]...=
                            /* 04A0 */  0x80, 0x30, 0x29, 0x07, 0x47, 0x01, 0x5B, 0xD7,  // .0).G.[.
                            /* 04A8 */  0xD1, 0x91, 0x6A, 0x55, 0x01, 0xC4, 0x94, 0x83,  // ..jU....
                            /* 04B0 */  0x08, 0xC8, 0x29, 0x7E, 0x22, 0x02, 0x72, 0x26,  // ..)~".r&
                            /* 04B8 */  0x10, 0x01, 0x39, 0x95, 0x0E, 0x20, 0x16, 0x11,  // ..9.. ..
                            /* 04C0 */  0x44, 0xC7, 0x48, 0xE2, 0x03, 0x88, 0x05, 0x01,  // D.H.....
                            /* 04C8 */  0x11, 0x90, 0x43, 0x3D, 0x0B, 0x04, 0x48, 0x40,  // ..C=..H@
                            /* 04D0 */  0x04, 0xE4, 0xFF, 0x3F                           // ...?
                        })
                    }
                }
            }
        }
    }

    Scope (\)
    {
        Name (HPDT, Package (0x09)
        {
            "LEGACYHP", 
            0x80000000, 
            0x80000000, 
            "NATIVEHP", 
            0x80000000, 
            0x80000000, 
            "THERMALX", 
            0x80000000, 
            0x80000000
        })
        Name (DDB0, 0x00)
        Name (DDB1, 0x00)
        Name (DDB2, 0x00)
    }

    Scope (_GPE)
    {
        Method (_L08, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            If ((TBEN == Zero))
            {
                Notify (\_SB.PCI0.GPP0, 0x02) // Device Wake
                Notify (\_SB.PCI0.GPP1, 0x02) // Device Wake
            }

            Notify (\_SB.PCI0.GPP2, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP3, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP4, 0x02) // Device Wake
            Notify (\_SB.PCI0.GPP5, 0x02) // Device Wake
            Notify (\_SB.PCI0.GP17, 0x02) // Device Wake
            Notify (\_SB.PCI0.GP18, 0x02) // Device Wake
        }

        Method (_L13, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Notify (\_SB.PCI0.GPP3, 0x02) // Device Wake
        }

        Method (_L15, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Notify (\_SB.PCI0.GPP1, 0x02) // Device Wake
        }

        Method (_L19, 0, NotSerialized)  // _Lxx: Level-Triggered GPE, xx=0x00-0xFF
        {
            Notify (\_SB.PCI0.GP17.XHC0, 0x02) // Device Wake
            Notify (\_SB.PCI0.GP17.XHC1, 0x02) // Device Wake
        }
    }

    OperationRegion (DBGB, SystemIO, 0x80, 0x01)
    Field (DBGB, ByteAcc, NoLock, Preserve)
    {
        P80B,   8
    }

    OperationRegion (DBGW, SystemIO, 0x80, 0x02)
    Field (DBGW, WordAcc, NoLock, Preserve)
    {
        P80W,   16
    }

    OperationRegion (DBGD, SystemIO, 0x80, 0x04)
    Field (DBGD, DWordAcc, NoLock, Preserve)
    {
        P80D,   32
    }

    Name (TSOS, 0x75)
    If (CondRefOf (\_OSI))
    {
        If (_OSI ("Windows 2009"))
        {
            TSOS = 0x50
        }

        If (_OSI ("Windows 2015"))
        {
            TSOS = 0x70
        }
    }

    Scope (_SB)
    {
        OperationRegion (SMIC, SystemMemory, 0xFED80000, 0x00800000)
        Field (SMIC, ByteAcc, NoLock, Preserve)
        {
            Offset (0x36A), 
            SMIB,   8
        }

        OperationRegion (SSMI, SystemIO, SMIB, 0x02)
        Field (SSMI, AnyAcc, NoLock, Preserve)
        {
            SMIW,   16
        }

        OperationRegion (ECMC, SystemIO, 0x72, 0x02)
        Field (ECMC, AnyAcc, NoLock, Preserve)
        {
            ECMI,   8, 
            ECMD,   8
        }

        IndexField (ECMI, ECMD, ByteAcc, NoLock, Preserve)
        {
            Offset (0x08), 
            FRTB,   32
        }

        OperationRegion (FRTP, SystemMemory, FRTB, 0x0100)
        Field (FRTP, AnyAcc, NoLock, Preserve)
        {
            PEBA,   32, 
            SPIE,   1, 
            P80E,   1, 
                ,   2, 
            NI2C,   1, 
            IC0E,   1, 
            IC1E,   1, 
            IC2E,   1, 
            IC3E,   1, 
            IC4E,   1, 
            IC5E,   1, 
            UT0E,   1, 
            UT1E,   1, 
                ,   1, 
                ,   1, 
            ST_E,   1, 
            UT2E,   1, 
                ,   1, 
            EMMD,   2, 
            SDMC,   1, 
                ,   2, 
            XHCE,   1, 
                ,   1, 
                ,   1, 
            UT3E,   1, 
            ESPI,   1, 
            EMME,   1, 
            Offset (0x08), 
            PCEF,   1, 
                ,   4, 
            IC0D,   1, 
            IC1D,   1, 
            IC2D,   1, 
            IC3D,   1, 
            IC4D,   1, 
            IC5D,   1, 
            UT0D,   1, 
            UT1D,   1, 
                ,   1, 
                ,   1, 
            ST_D,   1, 
            UT2D,   1, 
                ,   1, 
            EHCD,   1, 
                ,   4, 
            XHCD,   1, 
            SD_D,   1, 
                ,   1, 
            UT3D,   1, 
                ,   1, 
            EMD3,   1, 
                ,   2, 
            S03D,   1, 
            FW00,   16, 
            FW01,   32, 
            FW02,   16, 
            FW03,   32, 
            SDS0,   8, 
            SDS1,   8, 
            CZFG,   1, 
            Offset (0x20), 
            SD10,   32, 
            EH10,   32, 
            XH10,   32, 
            STBA,   32
        }

        OperationRegion (FCFG, SystemMemory, PEBA, 0x01000000)
        Field (FCFG, DWordAcc, NoLock, Preserve)
        {
            Offset (0xA3044), 
            IPDE,   32, 
            IMPE,   32, 
            Offset (0xA306C), 
            RAR2,   32, 
            Offset (0xA3078), 
                ,   2, 
            LDQ0,   1, 
            Offset (0xA30CB), 
                ,   7, 
            AUSS,   1, 
            Offset (0xA30D0), 
                ,   13, 
            LCLK,   2
        }

        OperationRegion (IOMX, SystemMemory, 0xFED80D00, 0x0100)
        Field (IOMX, AnyAcc, NoLock, Preserve)
        {
            Offset (0x15), 
            IM15,   8, 
            IM16,   8, 
            IM17,   8, 
            Offset (0x20), 
            IM20,   8, 
            Offset (0x44), 
            IM44,   8, 
            Offset (0x46), 
            IM46,   8, 
            Offset (0x4A), 
            IM4A,   8, 
            IM4B,   8, 
            Offset (0x57), 
            IM57,   8, 
            IM58,   8, 
            Offset (0x68), 
            IM68,   8, 
            IM69,   8, 
            IM6A,   8, 
            IM6B,   8, 
            Offset (0x6D), 
            IM6D,   8
        }

        OperationRegion (FMIS, SystemMemory, 0xFED80E00, 0x0100)
        Field (FMIS, AnyAcc, NoLock, Preserve)
        {
            Offset (0x40), 
                ,   13, 
            I24M,   1
        }

        OperationRegion (FGIO, SystemMemory, 0xFED81500, 0x0300)
        Field (FGIO, AnyAcc, NoLock, Preserve)
        {
            Offset (0xA8), 
                ,   22, 
            O042,   1, 
            Offset (0x114), 
                ,   22, 
            O069,   1, 
            Offset (0x15A), 
                ,   6, 
            O086,   1, 
            Offset (0x15B), 
            Offset (0x164), 
            Offset (0x166), 
            V089,   1, 
                ,   5, 
            O089,   1
        }

        OperationRegion (FACR, SystemMemory, 0xFED81E00, 0x0100)
        Field (FACR, AnyAcc, NoLock, Preserve)
        {
            Offset (0x62), 
            AMTD,   2, 
            Offset (0x80), 
                ,   28, 
            RD28,   1, 
                ,   1, 
            RQTY,   1, 
            Offset (0x84), 
                ,   28, 
            SD28,   1, 
                ,   1, 
            Offset (0xA0), 
            PG1A,   1
        }

        OperationRegion (EMMX, SystemMemory, 0xFEDD5800, 0x0130)
        Field (EMMX, AnyAcc, NoLock, Preserve)
        {
            Offset (0xD0), 
                ,   17, 
            FC18,   1, 
            FC33,   1, 
                ,   7, 
            CD_T,   1, 
            WP_T,   1
        }

        OperationRegion (EMMB, SystemMemory, 0xFEDD5800, 0x0130)
        Field (EMMB, AnyAcc, NoLock, Preserve)
        {
            Offset (0xA4), 
            E0A4,   32, 
            E0A8,   32, 
            Offset (0xB0), 
            E0B0,   32, 
            Offset (0xD0), 
            E0D0,   32, 
            Offset (0x116), 
            E116,   32
        }

        OperationRegion (SPIM, SystemMemory, 0xFEC10000, 0x0100)
        Field (SPIM, AnyAcc, NoLock, Preserve)
        {
            Offset (0x1D), 
            ASCE,   2, 
            Offset (0x22), 
            SSSC,   16, 
            Offset (0xFC), 
            STRN,   1, 
                ,   2, 
            BOWS,   1, 
            DOWS,   1
        }

        Mutex (ASSM, 0x00)
        Name (SVBF, Buffer (0x0100)
        {
             0x00                                             // .
        })
        CreateDWordField (SVBF, 0x00, S0A4)
        CreateDWordField (SVBF, 0x04, S0A8)
        CreateDWordField (SVBF, 0x08, S0B0)
        CreateDWordField (SVBF, 0x0C, S0D0)
        CreateDWordField (SVBF, 0x10, S116)
        CreateWordField (SVBF, 0x14, RG22)
        CreateDWordField (SVBF, 0x18, SAR2)
        Method (SECR, 0, Serialized)
        {
            S116 = E116 /* \_SB_.E116 */
            RQTY = Zero
            RD28 = One
            Local0 = SD28 /* \_SB_.SD28 */
            While (Local0)
            {
                Local0 = SD28 /* \_SB_.SD28 */
            }
        }

        Method (RECR, 0, Serialized)
        {
            E116 = S116 /* \_SB_.S116 */
        }

        OperationRegion (LUIE, SystemMemory, 0xFEDC0020, 0x04)
        Field (LUIE, AnyAcc, NoLock, Preserve)
        {
            IER0,   1, 
            IER1,   1, 
            IER2,   1, 
            IER3,   1, 
            UOL0,   1, 
            UOL1,   1, 
            UOL2,   1, 
            UOL3,   1, 
            WUR0,   2, 
            WUR1,   2, 
            WUR2,   2, 
            WUR3,   2
        }

        Method (FRUI, 1, Serialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (IUA0) /* \_SB_.IUA0 */
            }

            If ((Arg0 == 0x01))
            {
                Return (IUA1) /* \_SB_.IUA1 */
            }

            If ((Arg0 == 0x02))
            {
                Return (IUA2) /* \_SB_.IUA2 */
            }

            If ((Arg0 == 0x03))
            {
                Return (IUA3) /* \_SB_.IUA3 */
            }

            Return (Zero)
        }

        Method (OP80, 1, Serialized)
        {
            If (P80E)
            {
                P80D = Arg0
            }
        }

        Method (SRAD, 2, Serialized)
        {
            Local1 = (Arg1 << 0x05)
            Local1 += 0xB000AF80
            Local1 += Arg0
            OP80 (Local1)
            Local0 = (Arg0 << 0x01)
            Local0 += 0xFED81E40
            OperationRegion (ADCR, SystemMemory, Local0, 0x02)
            Field (ADCR, ByteAcc, NoLock, Preserve)
            {
                ADTD,   2, 
                ADPS,   1, 
                ADPD,   1, 
                ADSO,   1, 
                ADSC,   1, 
                ADSR,   1, 
                ADIS,   1, 
                ADDS,   3
            }

            ADIS = One
            ADSR = Zero
            Stall (Arg1)
            ADSR = One
            ADIS = Zero
            Stall (Arg1)
        }

        Method (DSAD, 2, Serialized)
        {
            Local1 = (Arg1 << 0x05)
            Local1 += 0xB000AF80
            Local1 += Arg0
            OP80 (Local1)
            Local0 = (Arg0 << 0x01)
            Local0 += 0xFED81E40
            OperationRegion (ADCR, SystemMemory, Local0, 0x02)
            Field (ADCR, ByteAcc, NoLock, Preserve)
            {
                ADTD,   2, 
                ADPS,   1, 
                ADPD,   1, 
                ADSO,   1, 
                ADSC,   1, 
                ADSR,   1, 
                ADIS,   1, 
                ADDS,   3
            }

            If ((Arg1 != ADTD))
            {
                If ((Arg1 == 0x00))
                {
                    ADTD = 0x00
                    ADPD = One
                    Local0 = ADDS /* \_SB_.DSAD.ADDS */
                    While ((Local0 != 0x07))
                    {
                        Local0 = ADDS /* \_SB_.DSAD.ADDS */
                    }
                }

                If ((Arg1 == 0x03))
                {
                    ADPD = Zero
                    Local0 = ADDS /* \_SB_.DSAD.ADDS */
                    While ((Local0 != 0x00))
                    {
                        Local0 = ADDS /* \_SB_.DSAD.ADDS */
                    }

                    ADTD = 0x03
                }
            }
        }

        Method (HSAD, 2, Serialized)
        {
            Local0 = (Arg0 << 0x01)
            Local0 += 0xFED81E40
            OperationRegion (ADCR, SystemMemory, Local0, 0x02)
            Field (ADCR, ByteAcc, NoLock, Preserve)
            {
                ADTD,   2, 
                ADPS,   1, 
                ADPD,   1, 
                ADSO,   1, 
                ADSC,   1, 
                ADSR,   1, 
                ADIS,   1, 
                ADDS,   3
            }

            If ((Arg1 != ADTD))
            {
                If ((Arg1 == 0x00))
                {
                    ADTD = 0x00
                    ADPD = One
                    Local0 = ADDS /* \_SB_.HSAD.ADDS */
                    While ((Local0 != 0x07))
                    {
                        Local0 = ADDS /* \_SB_.HSAD.ADDS */
                    }

                    RQTY = One
                    RD28 = One
                    Local0 = SD28 /* \_SB_.SD28 */
                    While (!Local0)
                    {
                        Local0 = SD28 /* \_SB_.SD28 */
                    }
                }

                If ((Arg1 == 0x03))
                {
                    RQTY = Zero
                    RD28 = One
                    Local0 = SD28 /* \_SB_.SD28 */
                    While (Local0)
                    {
                        Local0 = SD28 /* \_SB_.SD28 */
                    }

                    ADPD = Zero
                    Local0 = ADDS /* \_SB_.HSAD.ADDS */
                    While ((Local0 != 0x00))
                    {
                        Local0 = ADDS /* \_SB_.HSAD.ADDS */
                    }

                    ADTD = 0x03
                }
            }
        }

        OperationRegion (FPIC, SystemIO, 0x0C00, 0x02)
        Field (FPIC, AnyAcc, NoLock, Preserve)
        {
            FPII,   8, 
            FPID,   8
        }

        IndexField (FPII, FPID, ByteAcc, NoLock, Preserve)
        {
            Offset (0xF4), 
            IUA0,   8, 
            IUA1,   8, 
            Offset (0xF8), 
            IUA2,   8, 
            IUA3,   8
        }

        Device (SPI1)
        {
            Name (_HID, "AMDI0060")  // _HID: Hardware ID
            Name (_UID, 0x00)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (SPIE)
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (0x00)
                }
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0xFEC10000,         // Address Base
                        0x00000100,         // Address Length
                        )
                })
                Return (RBUF) /* \_SB_.SPI1._CRS.RBUF */
            }

            Method (ASSC, 2, Serialized)
            {
                Acquire (ASSM, 0xFFFF)
                Local0 = Arg1
                Switch (ToInteger (Arg0))
                {
                    Case (0x03)
                    {
                        DOWS = One
                        STRN = One
                        While ((BOWS && STRN))
                        {
                            If (Arg1)
                            {
                                Stall (0x01)
                                Local0 -= One
                                If ((Local0 == Zero))
                                {
                                    Break
                                }
                            }
                        }

                        SAR2 = RAR2 /* \_SB_.RAR2 */
                        RAR2 = Zero
                        ASCE = 0x02
                        RG22 = SSSC /* \_SB_.SSSC */
                    }
                    Case (0x04)
                    {
                        SSSC = RG22 /* \_SB_.RG22 */
                        ASCE = Zero
                        RAR2 = SAR2 /* \_SB_.SAR2 */
                        Local0 = One
                        DOWS = Zero
                    }

                }

                Release (ASSM)
                Return (Local0)
            }
        }

        Device (GPIO)
        {
            Name (_HID, "AMDI0030")  // _HID: Hardware ID
            Name (_CID, "AMDI0030")  // _CID: Compatible ID
            Name (_UID, 0x00)  // _UID: Unique ID
            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
                    {
                        0x00000007,
                    }
                    Memory32Fixed (ReadWrite,
                        0xFED81500,         // Address Base
                        0x00000400,         // Address Length
                        )
                })
                Return (RBUF) /* \_SB_.GPIO._CRS.RBUF */
            }

            Method (RST, 0, NotSerialized)
            {
                Notify (GPIO, 0x00) // Bus Check
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (0x00)
                }
            }
        }

        Device (FUR0)
        {
            Name (_HID, "AMDI0020")  // _HID: Hardware ID
            Name (_UID, 0x00)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {3}
                Memory32Fixed (ReadWrite,
                    0xFEDC9000,         // Address Base
                    0x00001000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFEDC7000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((UT0E == One))
                    {
                        If (UOL0)
                        {
                            Return (0x00)
                        }

                        Return (0x0F)
                    }

                    Return (0x00)
                }
                Else
                {
                    Return (0x00)
                }
            }

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {
                If ((UT0D && UT0E))
                {
                    Return (0x04)
                }
                Else
                {
                    Return (0x00)
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If ((UT0D && UT0E))
                {
                    DSAD (0x0B, 0x00)
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                If ((UT0D && UT0E))
                {
                    DSAD (0x0B, 0x03)
                }
            }
        }

        Device (FUR1)
        {
            Name (_HID, "AMDI0020")  // _HID: Hardware ID
            Name (_UID, 0x01)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {4}
                Memory32Fixed (ReadWrite,
                    0xFEDCA000,         // Address Base
                    0x00001000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFEDC8000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((UT1E == One))
                    {
                        If (UOL1)
                        {
                            Return (0x00)
                        }

                        Return (0x0F)
                    }

                    Return (0x00)
                }
                Else
                {
                    Return (0x00)
                }
            }

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {
                If ((UT1D && UT1E))
                {
                    Return (0x04)
                }
                Else
                {
                    Return (0x00)
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If ((UT1D && UT1E))
                {
                    DSAD (0x0C, 0x00)
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                If ((UT1D && UT1E))
                {
                    DSAD (0x0C, 0x03)
                }
            }
        }

        Device (FUR2)
        {
            Name (_HID, "AMDI0020")  // _HID: Hardware ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {15}
                Memory32Fixed (ReadWrite,
                    0xFEDCE000,         // Address Base
                    0x00001000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFEDCC000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((UT2E == One))
                    {
                        If (UOL2)
                        {
                            Return (0x00)
                        }

                        Return (0x0F)
                    }

                    Return (0x00)
                }
                Else
                {
                    Return (0x00)
                }
            }

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {
                If ((UT2D && UT2E))
                {
                    Return (0x04)
                }
                Else
                {
                    Return (0x00)
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If ((UT2D && UT2E))
                {
                    DSAD (0x10, 0x00)
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                If ((UT2D && UT2E))
                {
                    DSAD (0x10, 0x03)
                }
            }
        }

        Device (FUR3)
        {
            Name (_HID, "AMDI0020")  // _HID: Hardware ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {5}
                Memory32Fixed (ReadWrite,
                    0xFEDCF000,         // Address Base
                    0x00001000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFEDCD000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((UT3E == One))
                    {
                        If (UOL3)
                        {
                            Return (0x00)
                        }

                        Return (0x0F)
                    }

                    Return (0x00)
                }
                Else
                {
                    Return (0x00)
                }
            }

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {
                If ((UT3D && UT3E))
                {
                    Return (0x04)
                }
                Else
                {
                    Return (0x00)
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If ((UT3D && UT3E))
                {
                    DSAD (0x1A, 0x00)
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                If ((UT3D && UT3E))
                {
                    DSAD (0x1A, 0x03)
                }
            }
        }

        Device (I2CA)
        {
            Name (_HID, "AMDI0011")  // _HID: Hardware ID
            Name (_UID, 0x00)  // _UID: Unique ID
            Name (_ADR, 0x00)  // _ADR: Address
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {10}
                Memory32Fixed (ReadWrite,
                    0xFEDC2000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                ^PCI0.GP17.MP2C
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC0E == One))
                    {
                        If ((NI2C == Zero))
                        {
                            Return (0x00)
                        }
                    }

                    Return (0x00)
                }
                Else
                {
                    Return (0x00)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x05, 0xC8)
            }
        }

        Device (I2CB)
        {
            Name (_HID, "AMDI0011")  // _HID: Hardware ID
            Name (_UID, 0x01)  // _UID: Unique ID
            Name (_ADR, 0x01)  // _ADR: Address
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {11}
                Memory32Fixed (ReadWrite,
                    0xFEDC3000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                ^PCI0.GP17.MP2C
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC1E == One))
                    {
                        If ((NI2C == Zero))
                        {
                            Return (0x00)
                        }
                    }

                    Return (0x00)
                }
                Else
                {
                    Return (0x00)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x06, 0xC8)
            }
        }

        Device (I2CC)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {14}
                Memory32Fixed (ReadWrite,
                    0xFEDC4000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC2E == One))
                    {
                        Return (0x0F)
                    }

                    Return (0x00)
                }
                Else
                {
                    Return (0x00)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x07, 0xC8)
            }

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {
                If ((IC2D && IC2E))
                {
                    Return (0x04)
                }
                Else
                {
                    Return (0x00)
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If ((IC2D && IC2E))
                {
                    DSAD (0x07, 0x00)
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                If ((IC2D && IC2E))
                {
                    DSAD (0x07, 0x03)
                }
            }
        }

        Device (I2CD)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {6}
                Memory32Fixed (ReadWrite,
                    0xFEDC5000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC3E == One))
                    {
                        Return (0x0F)
                    }

                    Return (0x00)
                }
                Else
                {
                    Return (0x00)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x08, 0xC8)
            }

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {
                If ((IC3D && IC3E))
                {
                    Return (0x04)
                }
                Else
                {
                    Return (0x00)
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If ((IC3D && IC3E))
                {
                    DSAD (0x08, 0x00)
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                If ((IC3D && IC3E))
                {
                    DSAD (0x08, 0x03)
                }
            }
        }

        Device (I2CE)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, 0x00)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {10}
                Memory32Fixed (ReadWrite,
                    0xFEDC2000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC0E == One))
                    {
                        If ((NI2C == One))
                        {
                            Return (0x0F)
                        }
                    }

                    Return (0x00)
                }
                Else
                {
                    Return (0x00)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x09, 0xC8)
            }
        }

        Device (I2CF)
        {
            Name (_HID, "AMDI0010")  // _HID: Hardware ID
            Name (_UID, 0x01)  // _UID: Unique ID
            Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {11}
                Memory32Fixed (ReadWrite,
                    0xFEDC3000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If ((IC1E == One))
                    {
                        If ((NI2C == One))
                        {
                            Return (0x0F)
                        }
                    }

                    Return (0x00)
                }
                Else
                {
                    Return (0x00)
                }
            }

            Method (RSET, 0, NotSerialized)
            {
                SRAD (0x0A, 0xC8)
            }
        }

        Method (EPIN, 0, NotSerialized)
        {
            IPDE = Zero
            IMPE = 0xFF00
            IM15 = One
            IM44 = One
            IM46 = One
            IM68 = One
            IM69 = One
            IM6A = One
            IM6B = One
            If ((EMMD != 0x01))
            {
                IM4A = One
                IM58 = One
                IM4B = One
                IM57 = One
                IM6D = One
            }

            SECR ()
        }

        Name (NCRS, ResourceTemplate ()
        {
            Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
            {
                0x00000005,
            }
            Memory32Fixed (ReadWrite,
                0xFEDD5000,         // Address Base
                0x00001000,         // Address Length
                )
        })
        Name (DCRS, ResourceTemplate ()
        {
            Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
            {
                0x00000005,
            }
            Memory32Fixed (ReadWrite,
                0xFEDD5000,         // Address Base
                0x00001000,         // Address Length
                )
            GpioInt (Edge, ActiveBoth, SharedAndWake, PullUp, 0x0BB8,
                "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                )
                {   // Pin list
                    0x0044
                }
            GpioIo (Shared, PullUp, 0x0000, 0x0000, IoRestrictionNone,
                "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                )
                {   // Pin list
                    0x0044
                }
        })
        Name (ECRS, ResourceTemplate ()
        {
            Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
            {
                0x00000005,
            }
            Memory32Fixed (ReadWrite,
                0xFEDD5000,         // Address Base
                0x00001000,         // Address Length
                )
        })
        Name (AHID, "AMDI0040")
        Name (ACID, "AMDI0040")
        Name (MHID, "AMDI0041")
        Name (MCID, "AMDI0041")
        Name (SHID, 0x400DD041)
        Name (SCID, "PCI\\CC_080501")
        Device (EMM0)
        {
            Method (_HID, 0, Serialized)  // _HID: Hardware ID
            {
                If ((EMMD == 0x00))
                {
                    Return (AHID) /* \_SB_.AHID */
                }

                If ((EMMD == 0x01))
                {
                    Return (SHID) /* \_SB_.SHID */
                }

                If ((EMMD == 0x02))
                {
                    Return (MHID) /* \_SB_.MHID */
                }

                Return (Zero)
            }

            Method (_CID, 0, Serialized)  // _CID: Compatible ID
            {
                If ((EMMD == 0x00))
                {
                    Return (ACID) /* \_SB_.ACID */
                }

                If ((EMMD == 0x01))
                {
                    Return (SCID) /* \_SB_.SCID */
                }

                If ((EMMD == 0x02))
                {
                    Return (MCID) /* \_SB_.MCID */
                }

                Return (Zero)
            }

            Name (_UID, 0x00)  // _UID: Unique ID
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                If (EMD3)
                {
                    If ((EMMD == 0x01))
                    {
                        Return (DCRS) /* \_SB_.DCRS */
                    }

                    Return (ECRS) /* \_SB_.ECRS */
                }
                Else
                {
                    Return (NCRS) /* \_SB_.NCRS */
                }
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((TSOS >= 0x70))
                {
                    If (EMME)
                    {
                        Return (0x0F)
                    }

                    Return (0x00)
                }
                Else
                {
                    Return (0x00)
                }
            }

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                If (EMME)
                {
                    EPIN ()
                }
            }

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {
                If ((EMD3 && EMME))
                {
                    Return (0x04)
                }
                Else
                {
                    Return (0x00)
                }
            }

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                If ((EMD3 && EMME))
                {
                    HSAD (0x1C, 0x00)
                    RECR ()
                }
            }

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                If ((EMD3 && EMME))
                {
                    HSAD (0x1C, 0x03)
                }
            }

            Device (CARD)
            {
                Name (_ADR, Zero)  // _ADR: Address
                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                {
                    If ((EMMD == 0x01))
                    {
                        If ((SDMC == 0x01))
                        {
                            Return (Zero)
                        }

                        Return (One)
                    }

                    Return (Zero)
                }
            }
        }
    }

    Scope (_SB.PCI0)
    {
        Device (UAR1)
        {
            Name (_HID, EisaId ("PNP0501") /* 16550A-compatible COM Serial Port */)  // _HID: Hardware ID
            Name (_DDN, "COM4")  // _DDN: DOS Device Name
            Name (_UID, 0x04)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((IER0 && (AMTD != 0x03)))
                {
                    Return (0x0F)
                }

                Return (0x00)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x02E8,             // Range Minimum
                        0x02E8,             // Range Maximum
                        0x01,               // Alignment
                        0x08,               // Length
                        _Y08)
                    IRQNoFlags (_Y09)
                        {3}
                })
                CreateByteField (BUF0, \_SB.PCI0.UAR1._CRS._Y08._MIN, IOLO)  // _MIN: Minimum Base Address
                CreateByteField (BUF0, 0x03, IOHI)
                CreateByteField (BUF0, \_SB.PCI0.UAR1._CRS._Y08._MAX, IORL)  // _MAX: Maximum Base Address
                CreateByteField (BUF0, 0x05, IORH)
                CreateWordField (BUF0, \_SB.PCI0.UAR1._CRS._Y09._INT, IRQL)  // _INT: Interrupts
                IRQL = (One << FRUI (WUR0))
                Return (BUF0) /* \_SB_.PCI0.UAR1._CRS.BUF0 */
            }
        }

        Device (UAR2)
        {
            Name (_HID, EisaId ("PNP0501") /* 16550A-compatible COM Serial Port */)  // _HID: Hardware ID
            Name (_DDN, "COM2")  // _DDN: DOS Device Name
            Name (_UID, 0x02)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((IER1 && (AMTD != 0x03)))
                {
                    Return (0x0F)
                }

                Return (0x00)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x02F8,             // Range Minimum
                        0x02F8,             // Range Maximum
                        0x01,               // Alignment
                        0x08,               // Length
                        _Y0A)
                    IRQNoFlags (_Y0B)
                        {4}
                })
                CreateByteField (BUF0, \_SB.PCI0.UAR2._CRS._Y0A._MIN, IOLO)  // _MIN: Minimum Base Address
                CreateByteField (BUF0, 0x03, IOHI)
                CreateByteField (BUF0, \_SB.PCI0.UAR2._CRS._Y0A._MAX, IORL)  // _MAX: Maximum Base Address
                CreateByteField (BUF0, 0x05, IORH)
                CreateWordField (BUF0, \_SB.PCI0.UAR2._CRS._Y0B._INT, IRQL)  // _INT: Interrupts
                IRQL = (One << FRUI (WUR1))
                Return (BUF0) /* \_SB_.PCI0.UAR2._CRS.BUF0 */
            }
        }

        Device (UAR3)
        {
            Name (_HID, EisaId ("PNP0501") /* 16550A-compatible COM Serial Port */)  // _HID: Hardware ID
            Name (_DDN, "COM3")  // _DDN: DOS Device Name
            Name (_UID, 0x03)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((IER2 && (AMTD != 0x03)))
                {
                    Return (0x0F)
                }

                Return (0x00)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x03E8,             // Range Minimum
                        0x03E8,             // Range Maximum
                        0x01,               // Alignment
                        0x08,               // Length
                        _Y0C)
                    IRQNoFlags (_Y0D)
                        {3}
                })
                CreateByteField (BUF0, \_SB.PCI0.UAR3._CRS._Y0C._MIN, IOLO)  // _MIN: Minimum Base Address
                CreateByteField (BUF0, 0x03, IOHI)
                CreateByteField (BUF0, \_SB.PCI0.UAR3._CRS._Y0C._MAX, IORL)  // _MAX: Maximum Base Address
                CreateByteField (BUF0, 0x05, IORH)
                CreateWordField (BUF0, \_SB.PCI0.UAR3._CRS._Y0D._INT, IRQL)  // _INT: Interrupts
                IRQL = (One << FRUI (WUR2))
                Return (BUF0) /* \_SB_.PCI0.UAR3._CRS.BUF0 */
            }
        }

        Device (UAR4)
        {
            Name (_HID, EisaId ("PNP0501") /* 16550A-compatible COM Serial Port */)  // _HID: Hardware ID
            Name (_DDN, "COM1")  // _DDN: DOS Device Name
            Name (_UID, 0x01)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((IER3 && (AMTD != 0x03)))
                {
                    Return (0x0F)
                }

                Return (0x00)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (BUF0, ResourceTemplate ()
                {
                    IO (Decode16,
                        0x03F8,             // Range Minimum
                        0x03F8,             // Range Maximum
                        0x01,               // Alignment
                        0x08,               // Length
                        _Y0E)
                    IRQNoFlags (_Y0F)
                        {4}
                })
                CreateByteField (BUF0, \_SB.PCI0.UAR4._CRS._Y0E._MIN, IOLO)  // _MIN: Minimum Base Address
                CreateByteField (BUF0, 0x03, IOHI)
                CreateByteField (BUF0, \_SB.PCI0.UAR4._CRS._Y0E._MAX, IORL)  // _MAX: Maximum Base Address
                CreateByteField (BUF0, 0x05, IORH)
                CreateWordField (BUF0, \_SB.PCI0.UAR4._CRS._Y0F._INT, IRQL)  // _INT: Interrupts
                IRQL = (One << FRUI (WUR3))
                Return (BUF0) /* \_SB_.PCI0.UAR4._CRS.BUF0 */
            }
        }
    }

    Scope (_SB.PCI0.GP17.VGA)
    {
        Method (ICLE, 0, NotSerialized)
        {
            I24M = Zero
        }

        Method (ICLD, 0, NotSerialized)
        {
            I24M = One
        }
    }

    OperationRegion (ACMS, SystemIO, 0x72, 0x02)
    Field (ACMS, ByteAcc, NoLock, Preserve)
    {
        ICMS,   8, 
        DCMS,   8
    }

    Name (CDAT, 0x00)
    Scope (_SB.I2CD)
    {
        Device (TPD0)
        {
            Name (_HID, "ELAN0643")  // _HID: Hardware ID
            Name (_CID, "PNP0C50" /* HID Protocol Device (I2C bus) */)  // _CID: Compatible ID
            ICMS = 0x0A
            DCMS = 0x01
            ICMS = 0x20
            CDAT = DCMS /* \DCMS */
            If ((CDAT == 0x02))
            {
                _HID = "SYNA2392"
            }

            If ((CDAT == 0x01))
            {
                _HID = "ELAN0643"
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((CDAT == 0x00))
                {
                    Return (0x00)
                }
                Else
                {
                    Return (0x0F)
                }
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                {
                    Switch (ToInteger (Arg2))
                    {
                        Case (0x00)
                        {
                            Switch (ToInteger (Arg1))
                            {
                                Case (0x01)
                                {
                                    Return (Buffer (0x01)
                                    {
                                         0x03                                             // .
                                    })
                                }
                                Default
                                {
                                    Return (Buffer (0x01)
                                    {
                                         0x00                                             // .
                                    })
                                }

                            }
                        }
                        Case (0x01)
                        {
                            If ((^^^PCI0.LPC0.H_EC.ECRD (RefOf (^^^PCI0.LPC0.H_EC.TPTY)) == 0x01))
                            {
                                Return (0x01)
                            }

                            If ((^^^PCI0.LPC0.H_EC.ECRD (RefOf (^^^PCI0.LPC0.H_EC.TPTY)) == 0x02))
                            {
                                Return (0x20)
                            }
                        }
                        Default
                        {
                            Return (0x00)
                        }

                    }
                }
                Else
                {
                    Return (Buffer (0x01)
                    {
                         0x00                                             // .
                    })
                }
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (SBFG, ResourceTemplate ()
                {
                    GpioInt (Level, ActiveLow, ExclusiveAndWake, PullUp, 0x0000,
                        "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0009
                        }
                })
                If ((^^^PCI0.LPC0.H_EC.ECRD (RefOf (^^^PCI0.LPC0.H_EC.TPTY)) == 0x01))
                {
                    Name (SBFB, ResourceTemplate ()
                    {
                        I2cSerialBusV2 (0x0015, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.I2CD",
                            0x00, ResourceConsumer, , Exclusive,
                            )
                    })
                    Return (ConcatenateResTemplate (SBFB, SBFG))
                }

                If ((^^^PCI0.LPC0.H_EC.ECRD (RefOf (^^^PCI0.LPC0.H_EC.TPTY)) == 0x02))
                {
                    Name (SBFC, ResourceTemplate ()
                    {
                        I2cSerialBusV2 (0x002C, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.I2CD",
                            0x00, ResourceConsumer, , Exclusive,
                            )
                    })
                    Return (ConcatenateResTemplate (SBFC, SBFG))
                }
            }
        }
    }

    Scope (_SB.I2CC)
    {
        Device (TPL1)
        {
            Name (HID2, Zero)
            Name (_HID, "ELAN238E")  // _HID: Hardware ID
            Name (_CID, "PNP0C50" /* HID Protocol Device (I2C bus) */)  // _CID: Compatible ID
            Name (_HRV, 0x01)  // _HRV: Hardware Revision
            Name (_S0W, 0x04)  // _S0W: S0 Device Wake State
            Name (CDAT, 0x00)
            ICMS = 0x0A
            DCMS = 0x01
            ICMS = 0x21
            CDAT = DCMS /* \DCMS */
            Name (SBFB, ResourceTemplate ()
            {
                I2cSerialBusV2 (0x0010, ControllerInitiated, 0x00061A80,
                    AddressingMode7Bit, "\\_SB.I2CC",
                    0x00, ResourceConsumer, , Exclusive,
                    )
            })
            Name (RBFB, ResourceTemplate ()
            {
                I2cSerialBusV2 (0x0039, ControllerInitiated, 0x00061A80,
                    AddressingMode7Bit, "\\_SB.I2CC",
                    0x00, ResourceConsumer, , Exclusive,
                    )
            })
            Name (SBFG, ResourceTemplate ()
            {
                GpioInt (Level, ActiveLow, ExclusiveAndWake, PullUp, 0x0000,
                    "\\_SB.GPIO", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x0054
                    }
            })
            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If (((CDAT == 0x01) || (CDAT == 0x02)))
                {
                    Return (0x0F)
                }
                Else
                {
                    Return (0x00)
                }
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                If ((CDAT == 0x02))
                {
                    _HID = "RAYD0001"
                    Return (ConcatenateResTemplate (RBFB, SBFG))
                }
                Else
                {
                    _HID = "ELAN238E"
                    Return (ConcatenateResTemplate (SBFB, SBFG))
                }
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                Debug = "Method _DSM begin"
                If ((Arg0 == ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                {
                    Switch (ToInteger (Arg2))
                    {
                        Case (0x00)
                        {
                            Switch (ToInteger (Arg1))
                            {
                                Case (0x01)
                                {
                                    Debug = "Method _DSM Function Query"
                                    Return (Buffer (One)
                                    {
                                         0x03                                             // .
                                    })
                                }
                                Default
                                {
                                    Return (Buffer (One)
                                    {
                                         0x00                                             // .
                                    })
                                }

                            }
                        }
                        Case (0x01)
                        {
                            Debug = "Method _DSM Function HID"
                            Return (0x01)
                        }
                        Default
                        {
                            Return (0x00)
                        }

                    }
                }
                ElseIf ((Arg0 == ToUUID ("ef87eb82-f951-46da-84ec-14871ac6f84b") /* Unknown UUID */))
                {
                    If ((Arg2 == Zero))
                    {
                        If ((Arg1 == One))
                        {
                            Return (Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }
                    }

                    If ((Arg2 == One))
                    {
                        Return (ConcatenateResTemplate (SBFB, SBFG))
                    }

                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
                Else
                {
                    Return (Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }

            Method (_PS3, 0, Serialized)  // _PS3: Power State 3
            {
            }

            Method (_PS0, 0, Serialized)  // _PS0: Power State 0
            {
                O069 = 0x00
                Sleep (0x0A)
                Sleep (0x1E)
                O069 = 0x01
                Sleep (0x9B)
            }
        }
    }

    Scope (_TZ)
    {
        ThermalZone (TZ01)
        {
            Name (CRTT, 0x5A)
            Name (PSVT, 0x32)
            Name (TSPS, 0x14)
            Method (_TMP, 0, Serialized)  // _TMP: Temperature
            {
                Return (0x0B74)
            }

            Method (_PSL, 0, Serialized)  // _PSL: Passive List
            {
                Return (Package (0x08)
                {
                    \_PR.C000, 
                    \_PR.C001, 
                    \_PR.C002, 
                    \_PR.C003, 
                    \_PR.C004, 
                    \_PR.C005, 
                    \_PR.C006, 
                    \_PR.C007
                })
            }

            Method (_CRT, 0, Serialized)  // _CRT: Critical Temperature
            {
                Return ((0x0AAC + (CRTT * 0x0A)))
            }

            Method (_PSV, 0, Serialized)  // _PSV: Passive Temperature
            {
                Return ((0x0AAC + (PSVT * 0x0A)))
            }

            Method (_TC1, 0, Serialized)  // _TC1: Thermal Constant 1
            {
                Return (One)
            }

            Method (_TC2, 0, Serialized)  // _TC2: Thermal Constant 2
            {
                Return (0x02)
            }

            Method (_TSP, 0, Serialized)  // _TSP: Thermal Sampling Period
            {
                Return (TSPS) /* \_TZ_.TZ01.TSPS */
            }
        }
    }

    OperationRegion (SMI0, SystemIO, 0xB0, 0x01)
    Field (SMI0, ByteAcc, NoLock, Preserve)
    {
        APMW,   8
    }

    Device (WMI1)
    {
        Name (_HID, EisaId ("PNP0C14") /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
        Name (_CID, "LBGNB")  // _CID: Compatible ID
        Name (_UID, 0x01)  // _UID: Unique ID
        Name (_WDG, Buffer (0xB4)
        {
            /* 0000 */  0x0E, 0x23, 0xF5, 0x51, 0x77, 0x96, 0xCD, 0x46,  // .#.Qw..F
            /* 0008 */  0xA1, 0xCF, 0xC0, 0xB2, 0x3E, 0xE3, 0x4D, 0xB7,  // ....>.M.
            /* 0010 */  0x41, 0x30, 0x50, 0x05, 0x64, 0x9A, 0x47, 0x98,  // A0P.d.G.
            /* 0018 */  0xF5, 0x33, 0x33, 0x4E, 0xA7, 0x07, 0x8E, 0x25,  // .33N...%
            /* 0020 */  0x1E, 0xBB, 0xC3, 0xA1, 0x41, 0x31, 0x01, 0x06,  // ....A1..
            /* 0028 */  0xEF, 0x54, 0x4B, 0x6A, 0xED, 0xA5, 0x33, 0x4D,  // .TKj..3M
            /* 0030 */  0x94, 0x55, 0xB0, 0xD9, 0xB4, 0x8D, 0xF4, 0xB3,  // .U......
            /* 0038 */  0x41, 0x32, 0x01, 0x06, 0xB6, 0xEB, 0xF1, 0x74,  // A2.....t
            /* 0040 */  0x7A, 0x92, 0x7D, 0x4C, 0x95, 0xDF, 0x69, 0x8E,  // z.}L..i.
            /* 0048 */  0x21, 0xE8, 0x0E, 0xB5, 0x41, 0x33, 0x01, 0x06,  // !...A3..
            /* 0050 */  0xFF, 0x04, 0xEF, 0x7E, 0x28, 0x43, 0x7C, 0x44,  // ...~(C|D
            /* 0058 */  0xB5, 0xBB, 0xD4, 0x49, 0x92, 0x5D, 0x53, 0x8D,  // ...I.]S.
            /* 0060 */  0x41, 0x34, 0x01, 0x06, 0x9E, 0x15, 0xDB, 0x8A,  // A4......
            /* 0068 */  0x32, 0x1E, 0x5C, 0x45, 0xBC, 0x93, 0x30, 0x8A,  // 2.\E..0.
            /* 0070 */  0x7E, 0xD9, 0x82, 0x46, 0x41, 0x35, 0x01, 0x01,  // ~..FA5..
            /* 0078 */  0xFD, 0xD9, 0x51, 0x26, 0x1C, 0x91, 0x69, 0x4B,  // ..Q&..iK
            /* 0080 */  0xB9, 0x4E, 0xD0, 0xDE, 0xD5, 0x96, 0x3B, 0xD7,  // .N....;.
            /* 0088 */  0x41, 0x36, 0x01, 0x06, 0x1A, 0x65, 0x64, 0x73,  // A6...eds
            /* 0090 */  0x2F, 0x13, 0xE7, 0x4F, 0xAD, 0xAA, 0x40, 0xC6,  // /..O..@.
            /* 0098 */  0xC7, 0xEE, 0x2E, 0x3B, 0x41, 0x37, 0x01, 0x06,  // ...;A7..
            /* 00A0 */  0x21, 0x12, 0x90, 0x05, 0x66, 0xD5, 0xD1, 0x11,  // !...f...
            /* 00A8 */  0xB2, 0xF0, 0x00, 0xA0, 0xC9, 0x06, 0x29, 0x10,  // ......).
            /* 00B0 */  0x42, 0x41, 0x01, 0x00                           // BA..
        })
        Name (RETN, Package (0x05)
        {
            "Success", 
            "Not Supported", 
            "Invalid Parameter", 
            "Access Denied", 
            "System Busy"
        })
        Name (ITEM, Package (0x32)
        {
            Package (0x02)
            {
                0x00, 
                "USBLegacy"
            }, 

            Package (0x02)
            {
                0x00, 
                "WirelessLAN"
            }, 

            Package (0x02)
            {
                0x02, 
                "SATAControllerMode"
            }, 

            Package (0x02)
            {
                0x00, 
                "PowerBeep"
            }, 

            Package (0x02)
            {
                0x00, 
                "AMDVTMTechnology"
            }, 

            Package (0x02)
            {
                0x00, 
                "BiosBackFlash"
            }, 

            Package (0x02)
            {
                0x00, 
                "HotkeyMode"
            }, 

            Package (0x02)
            {
                0x00, 
                "FastBoot"
            }, 

            Package (0x02)
            {
                0x00, 
                "IntelHyperThreading"
            }, 

            Package (0x02)
            {
                0x00, 
                "Reserved"
            }, 

            Package (0x02)
            {
                0x00, 
                "AMDPlatformSecurityProcessor"
            }, 

            Package (0x02)
            {
                0x06, 
                "ClearAMDPSPKey"
            }, 

            Package (0x02)
            {
                0x01, 
                "IntelSGXControl"
            }, 

            Package (0x02)
            {
                0x00, 
                "SecureBoot"
            }, 

            Package (0x02)
            {
                0x06, 
                "ResetToSetupMode"
            }, 

            Package (0x02)
            {
                0x06, 
                "RestoreFactoryKeys"
            }, 

            Package (0x02)
            {
                0x00, 
                "SecurityChip"
            }, 

            Package (0x02)
            {
                0x06, 
                "ClearSecurityChipKey"
            }, 

            Package (0x02)
            {
                0x00, 
                "PowerOnPassword"
            }, 

            Package (0x02)
            {
                0x06, 
                "ClearUserPassword"
            }, 

            Package (0x02)
            {
                0x04, 
                "BootMode"
            }, 

            Package (0x02)
            {
                0x05, 
                "BootPriority"
            }, 

            Package (0x02)
            {
                0x00, 
                "USBBoot"
            }, 

            Package (0x02)
            {
                0x00, 
                "ESATABoot"
            }, 

            Package (0x02)
            {
                0x00, 
                "PxeBootToLAN"
            }, 

            Package (0x02)
            {
                0x00, 
                "FoolProofFnCtrl"
            }, 

            Package (0x02)
            {
                0x00, 
                "AlwaysOnUsb"
            }, 

            Package (0x02)
            {
                0x00, 
                "ChargeInBattery"
            }, 

            Package (0x02)
            {
                0x00, 
                "Reserved"
            }, 

            Package (0x02)
            {
                0x00, 
                "Reserved"
            }, 

            Package (0x02)
            {
                0x64, 
                "BootOrder"
            }, 

            Package (0x02)
            {
                0x03, 
                "OSOptimizedDefaults"
            }, 

            Package (0x02)
            {
                0x00, 
                "EthernetLAN"
            }, 

            Package (0x02)
            {
                0x00, 
                "WirelessWAN"
            }, 

            Package (0x02)
            {
                0x00, 
                "Bluetooth"
            }, 

            Package (0x02)
            {
                0x00, 
                "USBPort"
            }, 

            Package (0x02)
            {
                0x00, 
                "MemoryCardSlot"
            }, 

            Package (0x02)
            {
                0x00, 
                "SmartCardSlot"
            }, 

            Package (0x02)
            {
                0x00, 
                "IntegratedCamera"
            }, 

            Package (0x02)
            {
                0x00, 
                "Microphone"
            }, 

            Package (0x02)
            {
                0x00, 
                "FingerprintReader"
            }, 

            Package (0x02)
            {
                0x00, 
                "Thunderbolt"
            }, 

            Package (0x02)
            {
                0x00, 
                "NFC"
            }, 

            Package (0x02)
            {
                0x00, 
                "FlipBoot"
            }, 

            Package (0x02)
            {
                0x00, 
                "Reserved"
            }, 

            Package (0x02)
            {
                0x00, 
                "Reserved"
            }, 

            Package (0x02)
            {
                0x00, 
                "Reserved"
            }, 

            Package (0x02)
            {
                0x00, 
                "Reserved"
            }, 

            Package (0x02)
            {
                0x00, 
                "Reserved"
            }, 

            Package (0x02)
            {
                0x00, 
                "Reserved"
            }
        })
        Name (VSEL, Package (0x07)
        {
            Package (0x02)
            {
                "Disable", 
                "Enable"
            }, 

            Package (0x03)
            {
                "Disable", 
                "Enable", 
                "SoftwareControl"
            }, 

            Package (0x02)
            {
                "AHCI", 
                "RAID"
            }, 

            Package (0x02)
            {
                "Enable", 
                "Disable"
            }, 

            Package (0x02)
            {
                "LegacySupport", 
                "UEFI"
            }, 

            Package (0x02)
            {
                "UEFIFirst", 
                "LegacyFirst"
            }, 

            Package (0x02)
            {
                "", 
                "Enter"
            }
        })
        Name (VLST, Package (0x13)
        {
            "HDD1", 
            "HDD2", 
            "HDD3", 
            "HDD4", 
            "HDD0", 
            "PCILAN_IPV4", 
            "ATAPICD1", 
            "ATAPICD2", 
            "ATAPICD0", 
            "USBFDD", 
            "USBCD", 
            "USBHDD", 
            "OtherHDD", 
            "OtherCD", 
            "NVMe1", 
            "NVMe0", 
            "PCILAN_IPV6", 
            "PCILAN", 
            "NODEV"
        })
        Name (PENC, Package (0x02)
        {
            "ascii", 
            "scancode"
        })
        Name (PKBD, Package (0x03)
        {
            "us", 
            "fr", 
            "gr"
        })
        Name (PTYP, Package (0x08)
        {
            "pap", 
            "pop", 
            "uhdp1", 
            "mhdp1", 
            "uhdp2", 
            "mhdp2", 
            "uhdp3", 
            "mhdp3"
        })
        Mutex (MWMI, 0x00)
        Name (PCFG, Buffer (0x18){})
        Name (IBUF, Buffer (0x0100){})
        Name (ILEN, 0x00)
        Name (PSTR, Buffer (0x81){})
        Method (WQA0, 1, NotSerialized)
        {
            Acquire (MWMI, 0xFFFF)
            If ((WMIS (0x00, Arg0) != 0x00))
            {
                Release (MWMI)
                Return ("")
            }

            Local0 = DerefOf (ITEM [WITM])
            Local1 = DerefOf (Local0 [0x00])
            Local2 = DerefOf (Local0 [0x01])
            If ((Local1 < 0x64))
            {
                Concatenate (Local2, ",", Local6)
                Local3 = DerefOf (VSEL [Local1])
                Concatenate (Local6, DerefOf (Local3 [WSEL]), Local7)
            }
            Else
            {
                Local3 = SizeOf (VLST)
                If ((WLS0 <= Local3))
                {
                    Concatenate (Local2, ",", Local7)
                    Concatenate (Local7, DerefOf (VLST [WLS0]), Local2)
                }

                If ((WLS1 <= Local3))
                {
                    Concatenate (Local2, ":", Local7)
                    Concatenate (Local7, DerefOf (VLST [WLS1]), Local2)
                }

                If ((WLS2 <= Local3))
                {
                    Concatenate (Local2, ":", Local7)
                    Concatenate (Local7, DerefOf (VLST [WLS2]), Local2)
                }

                If ((WLS3 <= Local3))
                {
                    Concatenate (Local2, ":", Local7)
                    Concatenate (Local7, DerefOf (VLST [WLS3]), Local2)
                }

                If ((WLS4 <= Local3))
                {
                    Concatenate (Local2, ":", Local7)
                    Concatenate (Local7, DerefOf (VLST [WLS4]), Local2)
                }

                If ((WLS5 <= Local3))
                {
                    Concatenate (Local2, ":", Local7)
                    Concatenate (Local7, DerefOf (VLST [WLS5]), Local2)
                }

                If ((WLS6 <= Local3))
                {
                    Concatenate (Local2, ":", Local7)
                    Concatenate (Local7, DerefOf (VLST [WLS6]), Local2)
                }

                If ((WLS7 <= Local3))
                {
                    Concatenate (Local2, ":", Local7)
                    Concatenate (Local7, DerefOf (VLST [WLS7]), Local2)
                }

                If ((WLS8 <= Local3))
                {
                    Concatenate (Local2, ":", Local7)
                    Concatenate (Local7, DerefOf (VLST [WLS8]), Local2)
                }

                If ((WLS9 <= Local3))
                {
                    Concatenate (Local2, ":", Local7)
                    Concatenate (Local7, DerefOf (VLST [WLS9]), Local2)
                }

                If ((WLSA <= Local3))
                {
                    Concatenate (Local2, ":", Local7)
                    Concatenate (Local7, DerefOf (VLST [WLSA]), Local2)
                }

                If ((WLSB <= Local3))
                {
                    Concatenate (Local2, ":", Local7)
                    Concatenate (Local7, DerefOf (VLST [WLSB]), Local2)
                }

                If ((WLSC <= Local3))
                {
                    Concatenate (Local2, ":", Local7)
                    Concatenate (Local7, DerefOf (VLST [WLSC]), Local2)
                }

                If ((WLSD <= Local3))
                {
                    Concatenate (Local2, ":", Local7)
                    Concatenate (Local7, DerefOf (VLST [WLSD]), Local2)
                }

                Local7 = Local2
            }

            Release (MWMI)
            Return (Local7)
        }

        Method (GITM, 2, NotSerialized)
        {
            Local0 = 0x00
            Local1 = SizeOf (Arg1)
            While ((Local0 < Local1))
            {
                Local3 = DerefOf (DerefOf (Arg1 [Local0]) [0x01])
                If (SCMP (Local3, Arg0, 0x00))
                {
                    Return (Local0)
                }

                Local0++
            }

            Return (Ones)
        }

        Method (GSEL, 3, NotSerialized)
        {
            Local0 = 0x00
            Local1 = SizeOf (Arg0)
            While ((Local0 < Local1))
            {
                Local2 = DerefOf (Arg0 [Local0])
                If (SCMP (Local2, Arg1, Arg2))
                {
                    Return (Local0)
                }

                Local0++
            }

            Return (Ones)
        }

        Method (SLEN, 2, NotSerialized)
        {
            Local0 = DerefOf (Arg0 [Arg1])
            Return (SizeOf (Local0))
        }

        Method (CLRP, 0, NotSerialized)
        {
            WPAS = 0x00
            WPNW = 0x00
        }

        Method (GPAS, 2, NotSerialized)
        {
            Local0 = Arg1
            Local1 = 0x00
            While ((Local1 <= 0x80))
            {
                Local2 = DerefOf (Arg0 [Local0])
                If (((Local2 == 0x2C) || (Local2 == 0x00)))
                {
                    PSTR [Local1] = 0x00
                    Return (Local1)
                }

                PSTR [Local1] = Local2
                Local0++
                Local1++
            }

            PSTR [Local1] = 0x00
            Return (Ones)
        }

        Method (CPAS, 2, NotSerialized)
        {
            CLRP ()
            Local0 = Arg1
            Local1 = GPAS (Arg0, Local0)
            If ((Local1 == Ones))
            {
                Return (0x02)
            }

            If ((Local1 == 0x00))
            {
                Return (0x02)
            }

            WPAS = PSTR /* \WMI1.PSTR */
            Local0 += Local1
            Local0++
            Local6 = GSEL (PENC, Arg0, Local0)
            If ((Local6 == Ones))
            {
                Return (0x02)
            }

            WENC = Local6
            If ((Local6 == 0x00))
            {
                Local0 += SLEN (PENC, 0x00)
                If ((DerefOf (Arg0 [Local0]) != 0x2C))
                {
                    Return (0x02)
                }

                Local0++
                Local6 = GSEL (PKBD, Arg0, Local0)
                If ((Local6 == Ones))
                {
                    Return (0x02)
                }

                WKBD = Local6
            }

            Return (0x00)
        }

        Method (SPAS, 1, NotSerialized)
        {
            CLRP ()
            Local6 = GSEL (PTYP, Arg0, 0x00)
            If ((Local6 == Ones))
            {
                Return (0x02)
            }

            WPTY = Local6
            Local0 = SLEN (PTYP, Local6)
            If ((DerefOf (Arg0 [Local0]) != 0x2C))
            {
                Return (0x02)
            }

            Local0++
            Local1 = GPAS (Arg0, Local0)
            If (((Local1 == Ones) || (Local1 == 0x00)))
            {
                Return (0x02)
            }

            WPAS = PSTR /* \WMI1.PSTR */
            Local0 += Local1
            If ((DerefOf (Arg0 [Local0]) != 0x2C))
            {
                Return (0x02)
            }

            Local0++
            Local1 = GPAS (Arg0, Local0)
            If ((Local1 == Ones))
            {
                Return (0x02)
            }

            If ((Local1 == 0x00))
            {
                PSTR = 0x00
            }

            WPNW = PSTR /* \WMI1.PSTR */
            Local0 += Local1
            Local0++
            Local6 = GSEL (PENC, Arg0, Local0)
            If ((Local6 == Ones))
            {
                Return (0x02)
            }

            WENC = Local6
            If ((Local6 == 0x00))
            {
                Local0 += SLEN (PENC, 0x00)
                If ((DerefOf (Arg0 [Local0]) != 0x2C))
                {
                    Return (0x02)
                }

                Local0++
                Local6 = GSEL (PKBD, Arg0, Local0)
                If ((Local6 == Ones))
                {
                    Return (0x02)
                }

                WKBD = Local6
            }

            Return (0x00)
        }

        Method (WSET, 2, NotSerialized)
        {
            Local0 = ILEN /* \WMI1.ILEN */
            Local0++
            Local1 = GITM (IBUF, Arg0)
            If ((Local1 == Ones))
            {
                Return (0x02)
            }

            WITM = Local1
            Local3 = DerefOf (Arg0 [Local1])
            Local4 = DerefOf (Local3 [0x01])
            Local2 = SizeOf (Local4)
            Local2++
            Local4 = DerefOf (Local3 [0x00])
            If ((Local4 < 0x64))
            {
                Local5 = DerefOf (Arg1 [Local4])
                Local6 = GSEL (Local5, IBUF, Local2)
                If ((Local6 == Ones))
                {
                    Return (0x02)
                }

                WSEL = Local6
                Local2 += SLEN (Local5, Local6)
                Local4 = DerefOf (IBUF [Local2])
            }
            Else
            {
                WLS0 = 0x3F
                WLS1 = 0x3F
                WLS2 = 0x3F
                WLS3 = 0x3F
                WLS4 = 0x3F
                WLS5 = 0x3F
                WLS6 = 0x3F
                WLS7 = 0x3F
                WLS8 = 0x3F
                WLS9 = 0x3F
                WLSA = 0x3F
                WLSB = 0x3F
                WLSC = 0x3F
                WLSD = 0x3F
                Local6 = GSEL (VLST, IBUF, Local2)
                If ((Local6 == Ones))
                {
                    Return (0x02)
                }

                WLS0 = Local6
                Local2 += SLEN (VLST, Local6)
                Local4 = DerefOf (IBUF [Local2])
                If (((Local2 < Local0) && (Local4 == 0x3A)))
                {
                    Local2++
                    Local6 = GSEL (VLST, IBUF, Local2)
                    If ((Local6 == Ones))
                    {
                        Return (0x02)
                    }

                    WLS1 = Local6
                    Local2 += SLEN (VLST, Local6)
                    Local4 = DerefOf (IBUF [Local2])
                }

                If (((Local2 < Local0) && (Local4 == 0x3A)))
                {
                    Local2++
                    Local6 = GSEL (VLST, IBUF, Local2)
                    If ((Local6 == Ones))
                    {
                        Return (0x02)
                    }

                    WLS2 = Local6
                    Local2 += SLEN (VLST, Local6)
                    Local4 = DerefOf (IBUF [Local2])
                }

                If (((Local2 < Local0) && (Local4 == 0x3A)))
                {
                    Local2++
                    Local6 = GSEL (VLST, IBUF, Local2)
                    If ((Local6 == Ones))
                    {
                        Return (0x02)
                    }

                    WLS3 = Local6
                    Local2 += SLEN (VLST, Local6)
                    Local4 = DerefOf (IBUF [Local2])
                }

                If (((Local2 < Local0) && (Local4 == 0x3A)))
                {
                    Local2++
                    Local6 = GSEL (VLST, IBUF, Local2)
                    If ((Local6 == Ones))
                    {
                        Return (0x02)
                    }

                    WLS4 = Local6
                    Local2 += SLEN (VLST, Local6)
                    Local4 = DerefOf (IBUF [Local2])
                }

                If (((Local2 < Local0) && (Local4 == 0x3A)))
                {
                    Local2++
                    Local6 = GSEL (VLST, IBUF, Local2)
                    If ((Local6 == Ones))
                    {
                        Return (0x02)
                    }

                    WLS5 = Local6
                    Local2 += SLEN (VLST, Local6)
                    Local4 = DerefOf (IBUF [Local2])
                }

                If (((Local2 < Local0) && (Local4 == 0x3A)))
                {
                    Local2++
                    Local6 = GSEL (VLST, IBUF, Local2)
                    If ((Local6 == Ones))
                    {
                        Return (0x02)
                    }

                    WLS6 = Local6
                    Local2 += SLEN (VLST, Local6)
                    Local4 = DerefOf (IBUF [Local2])
                }

                If (((Local2 < Local0) && (Local4 == 0x3A)))
                {
                    Local2++
                    Local6 = GSEL (VLST, IBUF, Local2)
                    If ((Local6 == Ones))
                    {
                        Return (0x02)
                    }

                    WLS7 = Local6
                    Local2 += SLEN (VLST, Local6)
                    Local4 = DerefOf (IBUF [Local2])
                }

                If (((Local2 < Local0) && (Local4 == 0x3A)))
                {
                    Local2++
                    Local6 = GSEL (VLST, IBUF, Local2)
                    If ((Local6 == Ones))
                    {
                        Return (0x02)
                    }

                    WLS8 = Local6
                    Local2 += SLEN (VLST, Local6)
                    Local4 = DerefOf (IBUF [Local2])
                }

                If (((Local2 < Local0) && (Local4 == 0x3A)))
                {
                    Local2++
                    Local6 = GSEL (VLST, IBUF, Local2)
                    If ((Local6 == Ones))
                    {
                        Return (0x02)
                    }

                    WLS9 = Local6
                    Local2 += SLEN (VLST, Local6)
                    Local4 = DerefOf (IBUF [Local2])
                }

                If (((Local2 < Local0) && (Local4 == 0x3A)))
                {
                    Local2++
                    Local6 = GSEL (VLST, IBUF, Local2)
                    If ((Local6 == Ones))
                    {
                        Return (0x02)
                    }

                    WLSA = Local6
                    Local2 += SLEN (VLST, Local6)
                    Local4 = DerefOf (IBUF [Local2])
                }

                If (((Local2 < Local0) && (Local4 == 0x3A)))
                {
                    Local2++
                    Local6 = GSEL (VLST, IBUF, Local2)
                    If ((Local6 == Ones))
                    {
                        Return (0x02)
                    }

                    WLSB = Local6
                    Local2 += SLEN (VLST, Local6)
                    Local4 = DerefOf (IBUF [Local2])
                }

                If (((Local2 < Local0) && (Local4 == 0x3A)))
                {
                    Local2++
                    Local6 = GSEL (VLST, IBUF, Local2)
                    If ((Local6 == Ones))
                    {
                        Return (0x02)
                    }

                    WLSC = Local6
                    Local2 += SLEN (VLST, Local6)
                    Local4 = DerefOf (IBUF [Local2])
                }

                If (((Local2 < Local0) && (Local4 == 0x3A)))
                {
                    Local2++
                    Local6 = GSEL (VLST, IBUF, Local2)
                    If ((Local6 == Ones))
                    {
                        Return (0x02)
                    }

                    WLSD = Local6
                    Local2 += SLEN (VLST, Local6)
                    Local4 = DerefOf (IBUF [Local2])
                }
            }

            If (((Local4 == 0x2C) && (Local2 < Local0)))
            {
                Local2++
                Local0 = CPAS (IBUF, Local2)
                If ((Local0 != 0x00))
                {
                    Return (Local0)
                }
            }

            Return (0x00)
        }

        Method (WMA1, 3, NotSerialized)
        {
            Acquire (MWMI, 0xFFFF)
            If ((SizeOf (Arg2) == 0x00))
            {
                Local0 = 0x02
            }
            Else
            {
                Local0 = CARG (Arg2)
                If ((Local0 == 0x00))
                {
                    Local0 = WSET (ITEM, VSEL)
                    If ((Local0 == 0x00))
                    {
                        Local0 = WMIS (0x01, 0x00)
                    }
                }
            }

            Release (MWMI)
            Return (DerefOf (RETN [Local0]))
        }

        Method (WMA2, 3, NotSerialized)
        {
            Acquire (MWMI, 0xFFFF)
            Local0 = CARG (Arg2)
            If ((Local0 == 0x00))
            {
                If ((ILEN != 0x00))
                {
                    Local0 = CPAS (IBUF, 0x00)
                }

                If ((Local0 == 0x00))
                {
                    Local0 = WMIS (0x02, 0x00)
                }
            }

            Release (MWMI)
            Return (DerefOf (RETN [Local0]))
        }

        Method (WMA3, 3, NotSerialized)
        {
            Acquire (MWMI, 0xFFFF)
            Local0 = CARG (Arg2)
            If ((Local0 == 0x00))
            {
                If ((ILEN != 0x00))
                {
                    Local0 = CPAS (IBUF, 0x00)
                }

                If ((Local0 == 0x00))
                {
                    Local0 = WMIS (0x03, 0x00)
                }
            }

            Release (MWMI)
            Return (DerefOf (RETN [Local0]))
        }

        Method (WMA4, 3, NotSerialized)
        {
            Acquire (MWMI, 0xFFFF)
            Local0 = CARG (Arg2)
            If ((Local0 == 0x00))
            {
                If ((ILEN != 0x00))
                {
                    Local0 = CPAS (IBUF, 0x00)
                }

                If ((Local0 == 0x00))
                {
                    Local0 = WMIS (0x04, 0x00)
                }
            }

            Release (MWMI)
            Return (DerefOf (RETN [Local0]))
        }

        Method (WQA5, 1, NotSerialized)
        {
            Acquire (MWMI, 0xFFFF)
            Local0 = WMIS (0x05, 0x00)
            PCFG [0x00] = WSPM /* \WSPM */
            PCFG [0x04] = WSPS /* \WSPS */
            PCFG [0x08] = WSMN /* \WSMN */
            PCFG [0x0C] = WSMX /* \WSMX */
            PCFG [0x10] = WSEN /* \WSEN */
            PCFG [0x14] = WSKB /* \WSKB */
            Release (MWMI)
            Return (PCFG) /* \WMI1.PCFG */
        }

        Method (WMA6, 3, NotSerialized)
        {
            Acquire (MWMI, 0xFFFF)
            If ((SizeOf (Arg2) == 0x00))
            {
                Local0 = 0x02
            }
            Else
            {
                Local0 = CARG (Arg2)
                If ((Local0 == 0x00))
                {
                    If ((ILEN != 0x00))
                    {
                        Local0 = SPAS (IBUF)
                    }

                    If ((Local0 == 0x00))
                    {
                        Local0 = WMIS (0x06, 0x00)
                    }
                }
            }

            Release (MWMI)
            Return (DerefOf (RETN [Local0]))
        }

        Method (WMA7, 3, NotSerialized)
        {
            If ((SizeOf (Arg2) == 0x00))
            {
                Return ("")
            }

            Local0 = CARG (Arg2)
            If ((Local0 == 0x00))
            {
                Local1 = GITM (IBUF, ITEM)
                If ((Local1 == Ones))
                {
                    Return ("")
                }

                Local0 = DerefOf (ITEM [Local1])
                Local1 = DerefOf (Local0 [0x00])
                If ((Local1 < 0x64))
                {
                    Local3 = DerefOf (VSEL [Local1])
                    Local2 = DerefOf (Local3 [0x00])
                    Local4 = SizeOf (Local3)
                    Local5 = 0x01
                    While ((Local5 < Local4))
                    {
                        Local6 = DerefOf (Local3 [Local5])
                        If ((SizeOf (Local6) != 0x00))
                        {
                            Concatenate (Local2, ",", Local7)
                            Concatenate (Local7, Local6, Local2)
                        }

                        Local5++
                    }
                }
                Else
                {
                    Local2 = DerefOf (VLST [0x00])
                    Local4 = SizeOf (VLST)
                    Local5 = 0x01
                    While ((Local5 < Local4))
                    {
                        Local6 = DerefOf (VLST [Local5])
                        Concatenate (Local2, ",", Local7)
                        Concatenate (Local7, Local6, Local2)
                        Local5++
                    }
                }
            }

            Return (Local2)
        }

        Method (CARG, 1, NotSerialized)
        {
            Local0 = SizeOf (Arg0)
            If ((Local0 == 0x00))
            {
                IBUF = 0x00
                ILEN = 0x00
                Return (0x00)
            }

            If ((ObjectType (Arg0) != 0x02))
            {
                Return (0x02)
            }

            If ((Local0 >= 0xFF))
            {
                Return (0x02)
            }

            IBUF = Arg0
            Local0--
            Local1 = DerefOf (IBUF [Local0])
            If (((Local1 == 0x3B) || (Local1 == 0x2A)))
            {
                IBUF [Local0] = 0x00
                ILEN = Local0
            }
            Else
            {
                ILEN = SizeOf (Arg0)
            }

            Return (0x00)
        }

        Method (SCMP, 3, Serialized)
        {
            Local0 = SizeOf (Arg0)
            If ((Local0 == 0x00))
            {
                Return (0x00)
            }

            Local0++
            Name (STR1, Buffer (Local0){})
            STR1 = Arg0
            Local0--
            Local1 = 0x00
            Local2 = Arg2
            While ((Local1 < Local0))
            {
                Local3 = DerefOf (STR1 [Local1])
                Local4 = DerefOf (Arg1 [Local2])
                If ((Local3 != Local4))
                {
                    Return (0x00)
                }

                Local1++
                Local2++
            }

            Local4 = DerefOf (Arg1 [Local2])
            If ((Local4 == 0x00))
            {
                Return (0x01)
            }

            If (((Local4 == 0x2C) || (Local4 == 0x3A)))
            {
                Return (0x01)
            }

            Return (0x00)
        }

        Name (WQBA, Buffer (0x089D)
        {
            /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  // FOMB....
            /* 0008 */  0x8D, 0x08, 0x00, 0x00, 0xF2, 0x36, 0x00, 0x00,  // .....6..
            /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  // DS...}.T
            /* 0018 */  0xA8, 0xC9, 0x9A, 0x00, 0x01, 0x06, 0x18, 0x42,  // .......B
            /* 0020 */  0x10, 0x13, 0x10, 0x0A, 0x0D, 0x21, 0x02, 0x0B,  // .....!..
            /* 0028 */  0x83, 0x50, 0x4C, 0x18, 0x14, 0xA0, 0x45, 0x41,  // .PL...EA
            /* 0030 */  0xC8, 0x05, 0x14, 0x95, 0x02, 0x21, 0xC3, 0x02,  // .....!..
            /* 0038 */  0x14, 0x0B, 0x70, 0x2E, 0x40, 0xBA, 0x00, 0xE5,  // ..p.@...
            /* 0040 */  0x28, 0x72, 0x0C, 0x22, 0x02, 0xF7, 0xEF, 0x0F,  // (r."....
            /* 0048 */  0x31, 0x0E, 0x88, 0x14, 0x40, 0x48, 0x26, 0x84,  // 1...@H&.
            /* 0050 */  0x44, 0x00, 0x53, 0x21, 0x70, 0x84, 0xA0, 0x5F,  // D.S!p.._
            /* 0058 */  0x01, 0x08, 0x1D, 0xA2, 0xC9, 0xA0, 0x00, 0xA7,  // ........
            /* 0060 */  0x08, 0x82, 0xB4, 0x65, 0x01, 0xBA, 0x05, 0xF8,  // ...e....
            /* 0068 */  0x16, 0xA0, 0x1D, 0x42, 0x68, 0x15, 0x0A, 0x30,  // ...Bh..0
            /* 0070 */  0x29, 0xC0, 0x27, 0x98, 0x2C, 0x0A, 0x90, 0x0D,  // ).'.,...
            /* 0078 */  0x26, 0xDB, 0x70, 0x64, 0x18, 0x4C, 0xE4, 0x18,  // &.pd.L..
            /* 0080 */  0x50, 0x62, 0xC6, 0x80, 0xD2, 0x39, 0x05, 0xD9,  // Pb...9..
            /* 0088 */  0x04, 0x16, 0x74, 0xA1, 0x28, 0x9A, 0x46, 0x94,  // ..t.(.F.
            /* 0090 */  0x04, 0x07, 0x75, 0x0C, 0x11, 0x82, 0x97, 0x2B,  // ..u....+
            /* 0098 */  0x40, 0xF2, 0x04, 0xA4, 0x79, 0x5E, 0xB2, 0x3E,  // @...y^.>
            /* 00A0 */  0x08, 0x0D, 0x81, 0x8D, 0x80, 0x47, 0x91, 0x00,  // .....G..
            /* 00A8 */  0xC2, 0x62, 0x2C, 0x53, 0xE2, 0x61, 0x50, 0x1E,  // .b,S.aP.
            /* 00B0 */  0x40, 0x24, 0x67, 0xA8, 0x28, 0x60, 0x7B, 0x9D,  // @$g.(`{.
            /* 00B8 */  0x88, 0x86, 0x75, 0x9C, 0x4C, 0x12, 0x1C, 0x6A,  // ..u.L..j
            /* 00C0 */  0x94, 0x96, 0x28, 0xC0, 0xFC, 0xC8, 0x34, 0x91,  // ..(...4.
            /* 00C8 */  0x63, 0x6B, 0x7A, 0xC4, 0x82, 0x64, 0xD2, 0x86,  // ckz..d..
            /* 00D0 */  0x82, 0x1A, 0xBA, 0xA7, 0x75, 0x52, 0x9E, 0x68,  // ....uR.h
            /* 00D8 */  0xC4, 0x83, 0x32, 0x4C, 0x02, 0x8F, 0x82, 0xA1,  // ..2L....
            /* 00E0 */  0x71, 0x82, 0xB2, 0x20, 0xE4, 0x60, 0xA0, 0x28,  // q.. .`.(
            /* 00E8 */  0xC0, 0x93, 0xF0, 0x1C, 0x8B, 0x17, 0x20, 0x7C,  // ...... |
            /* 00F0 */  0xC6, 0xE4, 0x28, 0x10, 0x23, 0x81, 0x8F, 0x04,  // ..(.#...
            /* 00F8 */  0x1E, 0xCD, 0x31, 0x63, 0x81, 0xC2, 0x05, 0x3C,  // ..1c...<
            /* 0100 */  0x9F, 0x63, 0x88, 0x1C, 0xF7, 0x50, 0x63, 0x1C,  // .c...Pc.
            /* 0108 */  0x45, 0xE4, 0x04, 0xEF, 0x00, 0x51, 0x8C, 0x56,  // E....Q.V
            /* 0110 */  0xD0, 0xBC, 0x85, 0x18, 0x2C, 0x9A, 0xC1, 0x7A,  // ....,..z
            /* 0118 */  0x06, 0x27, 0x83, 0x4E, 0xF0, 0xFF, 0x3F, 0x02,  // .'.N..?.
            /* 0120 */  0x2E, 0x03, 0x42, 0x1E, 0x05, 0x58, 0x1D, 0x94,  // ..B..X..
            /* 0128 */  0xA6, 0x61, 0x82, 0xEE, 0x05, 0xBC, 0x1A, 0x1A,  // .a......
            /* 0130 */  0x13, 0xA0, 0x11, 0x43, 0xCA, 0x04, 0x38, 0xBB,  // ...C..8.
            /* 0138 */  0x2F, 0x68, 0x46, 0x6D, 0x09, 0x30, 0x27, 0x40,  // /hFm.0'@
            /* 0140 */  0x9B, 0x00, 0x6F, 0x08, 0x42, 0x39, 0xCF, 0x28,  // ..o.B9.(
            /* 0148 */  0xC7, 0x72, 0x8A, 0x51, 0x1E, 0x06, 0x62, 0xBE,  // .r.Q..b.
            /* 0150 */  0x0C, 0x04, 0x8D, 0x12, 0x23, 0xE6, 0xB9, 0xC4,  // ....#...
            /* 0158 */  0x35, 0x6C, 0x84, 0x18, 0x21, 0x4F, 0x21, 0x50,  // 5l..!O!P
            /* 0160 */  0xDC, 0xF6, 0x07, 0x41, 0x06, 0x8D, 0x1B, 0xBD,  // ...A....
            /* 0168 */  0x4F, 0x0B, 0x67, 0x75, 0x02, 0x47, 0xFF, 0xA4,  // O.gu.G..
            /* 0170 */  0x60, 0x02, 0x4F, 0xF9, 0xC0, 0x9E, 0x0D, 0x4E,  // `.O....N
            /* 0178 */  0xE0, 0x58, 0xA3, 0xC6, 0x38, 0x95, 0x04, 0x8E,  // .X..8...
            /* 0180 */  0xFD, 0x80, 0x90, 0x06, 0x10, 0x45, 0x82, 0x47,  // .....E.G
            /* 0188 */  0x9D, 0x16, 0x7C, 0x2E, 0xF0, 0xD0, 0x0E, 0xDA,  // ..|.....
            /* 0190 */  0x73, 0x3C, 0x81, 0x20, 0x87, 0x70, 0x04, 0x4F,  // s<. .p.O
            /* 0198 */  0x0C, 0x0F, 0x04, 0x1E, 0x03, 0xBB, 0x29, 0xF8,  // ......).
            /* 01A0 */  0x08, 0xE0, 0x13, 0x02, 0xDE, 0x35, 0xA0, 0xAE,  // .....5..
            /* 01A8 */  0x06, 0x0F, 0x06, 0x6C, 0xD0, 0xE1, 0x30, 0xE3,  // ...l..0.
            /* 01B0 */  0xF5, 0xF0, 0xC3, 0x9D, 0xC0, 0x49, 0x3E, 0x60,  // .....I>`
            /* 01B8 */  0xF0, 0xC3, 0x86, 0x07, 0x87, 0x9B, 0xE7, 0xC9,  // ........
            /* 01C0 */  0x1C, 0x59, 0xA9, 0x02, 0xCC, 0x1E, 0x0E, 0x74,  // .Y.....t
            /* 01C8 */  0x90, 0xF0, 0x69, 0x83, 0x9D, 0x01, 0x30, 0xF2,  // ..i...0.
            /* 01D0 */  0x07, 0x81, 0x1A, 0x99, 0xA1, 0x3D, 0xEE, 0x97,  // .....=..
            /* 01D8 */  0x0E, 0x43, 0x3E, 0x27, 0x1C, 0x16, 0x13, 0x7B,  // .C>'...{
            /* 01E0 */  0xEA, 0xA0, 0xE3, 0x01, 0xFF, 0x65, 0xE4, 0x39,  // .....e.9
            /* 01E8 */  0xC3, 0xD3, 0xF7, 0x7C, 0x4D, 0x30, 0xEC, 0xC0,  // ...|M0..
            /* 01F0 */  0xD1, 0x03, 0x31, 0xF4, 0xC3, 0xC6, 0x61, 0x9C,  // ..1...a.
            /* 01F8 */  0x86, 0xEF, 0x1F, 0x3E, 0x2F, 0xC0, 0x38, 0x05,  // ...>/.8.
            /* 0200 */  0x78, 0xE4, 0xFE, 0xFF, 0x1F, 0x52, 0x7C, 0x9A,  // x....R|.
            /* 0208 */  0xE0, 0x47, 0x0B, 0x9F, 0x26, 0xD8, 0xF5, 0xE0,  // .G..&...
            /* 0210 */  0x34, 0x9E, 0x03, 0x3C, 0x9C, 0xB3, 0xF2, 0x61,  // 4..<...a
            /* 0218 */  0x02, 0x6C, 0xF7, 0x13, 0x36, 0xA2, 0x77, 0x0B,  // .l..6.w.
            /* 0220 */  0x8F, 0x06, 0x7B, 0x0A, 0x00, 0xDF, 0xF9, 0x05,  // ..{.....
            /* 0228 */  0x9C, 0x77, 0x0D, 0x36, 0x58, 0x18, 0xE7, 0x17,  // .w.6X...
            /* 0230 */  0xE0, 0x71, 0x42, 0xF0, 0x10, 0xF8, 0x41, 0xC2,  // .qB...A.
            /* 0238 */  0x43, 0xE0, 0x03, 0x78, 0xFE, 0x38, 0x43, 0x2B,  // C..x.8C+
            /* 0240 */  0x9D, 0x17, 0x72, 0x60, 0xF0, 0xCE, 0x39, 0x30,  // ..r`..90
            /* 0248 */  0x46, 0xC1, 0xF3, 0x3C, 0x36, 0x4C, 0xA0, 0x20,  // F..<6L. 
            /* 0250 */  0xAF, 0x01, 0x85, 0x7A, 0x16, 0x50, 0x18, 0x9F,  // ...z.P..
            /* 0258 */  0x6A, 0x80, 0xD7, 0xFF, 0xFF, 0x54, 0x03, 0x5C,  // j....T.\
            /* 0260 */  0x0E, 0x07, 0xB8, 0x93, 0x03, 0xDC, 0x7B, 0x01,  // ......{.
            /* 0268 */  0xBB, 0x38, 0x3C, 0xD7, 0xC0, 0x15, 0x7D, 0xAE,  // .8<...}.
            /* 0270 */  0x81, 0x7A, 0x6F, 0x29, 0x6E, 0x8C, 0xBA, 0xC6,  // .zo)n...
            /* 0278 */  0x04, 0x79, 0x14, 0x78, 0xA4, 0x89, 0xF2, 0x3C,  // .y.x...<
            /* 0280 */  0xF3, 0x2E, 0x13, 0xE1, 0xD9, 0xC6, 0xD7, 0x1A,  // ........
            /* 0288 */  0x4F, 0x21, 0x8E, 0xAF, 0x35, 0x46, 0x7C, 0x99,  // O!..5F|.
            /* 0290 */  0x78, 0xB7, 0x31, 0xEE, 0xC1, 0x3D, 0xD6, 0x3C,  // x.1..=.<
            /* 0298 */  0xE4, 0x18, 0xE4, 0x68, 0x22, 0xBC, 0x18, 0x04,  // ...h"...
            /* 02A0 */  0x7C, 0xBC, 0xF1, 0xB1, 0x06, 0xBC, 0x62, 0x5E,  // |.....b^
            /* 02A8 */  0x28, 0xB2, 0x70, 0xAC, 0x01, 0x34, 0xFE, 0xFF,  // (.p..4..
            /* 02B0 */  0x8F, 0x35, 0xC0, 0x0D, 0xEB, 0x01, 0x05, 0x7C,  // .5.....|
            /* 02B8 */  0x47, 0x06, 0x76, 0x43, 0x81, 0x77, 0x42, 0x01,  // G.vC.wB.
            /* 02C0 */  0xFC, 0x24, 0x7E, 0x01, 0xE8, 0xC8, 0xE1, 0xB4,  // .$~.....
            /* 02C8 */  0x20, 0xB2, 0xF1, 0x06, 0xF0, 0x29, 0x80, 0xAA,  //  ....)..
            /* 02D0 */  0x01, 0xD2, 0x34, 0x61, 0x13, 0x4C, 0x4F, 0x2E,  // ..4a.LO.
            /* 02D8 */  0x78, 0x1F, 0x09, 0x9C, 0x9B, 0x44, 0xC9, 0x87,  // x....D..
            /* 02E0 */  0x45, 0xE1, 0x9C, 0xF5, 0x20, 0x42, 0x41, 0x0C,  // E... BA.
            /* 02E8 */  0xE8, 0x20, 0xC7, 0x09, 0xF4, 0x19, 0xC5, 0x07,  // . ......
            /* 02F0 */  0x91, 0x13, 0x7D, 0x22, 0xF4, 0xA0, 0x3C, 0x8C,  // ..}"..<.
            /* 02F8 */  0x77, 0x14, 0x76, 0x02, 0xF1, 0x61, 0xC2, 0x63,  // w.v..a.c
            /* 0300 */  0xF7, 0x31, 0x81, 0xFF, 0x63, 0x3C, 0x1B, 0xA3,  // .1..c<..
            /* 0308 */  0x5B, 0x0D, 0x86, 0xFE, 0xFF, 0xE7, 0x14, 0x0E,  // [.......
            /* 0310 */  0xE6, 0x83, 0x08, 0x27, 0xA8, 0xEB, 0x26, 0x01,  // ...'..&.
            /* 0318 */  0x32, 0x7D, 0x47, 0x05, 0x50, 0x00, 0xF9, 0x5E,  // 2}G.P..^
            /* 0320 */  0xE0, 0x73, 0xC0, 0xB3, 0x01, 0x1B, 0xC3, 0xA3,  // .s......
            /* 0328 */  0x80, 0xD1, 0x8C, 0xCE, 0xC3, 0x4F, 0x16, 0x15,  // .....O..
            /* 0330 */  0x77, 0xB2, 0x14, 0xC4, 0x93, 0x75, 0x94, 0xC9,  // w....u..
            /* 0338 */  0xA2, 0x67, 0xE2, 0x7B, 0x85, 0x67, 0xF4, 0xA6,  // .g.{.g..
            /* 0340 */  0xE5, 0x39, 0x7A, 0xC2, 0xBE, 0x87, 0xC0, 0x3A,  // .9z....:
            /* 0348 */  0x0C, 0x84, 0x7C, 0x30, 0xF0, 0x34, 0x0C, 0xE7,  // ..|0.4..
            /* 0350 */  0xC9, 0x72, 0x38, 0x4F, 0x96, 0x8F, 0xC5, 0xD7,  // .r8O....
            /* 0358 */  0x10, 0xF0, 0x09, 0x9C, 0x2D, 0xC8, 0xE1, 0x31,  // ....-..1
            /* 0360 */  0xB1, 0x46, 0x45, 0xAF, 0x42, 0x1E, 0x1E, 0xBF,  // .FE.B...
            /* 0368 */  0x1C, 0x78, 0x3E, 0xCF, 0x08, 0x47, 0xF9, 0x24,  // .x>..G.$
            /* 0370 */  0x81, 0xC3, 0x78, 0x26, 0xF1, 0x10, 0x7D, 0x2B,  // ..x&..}+
            /* 0378 */  0x82, 0x35, 0x91, 0x93, 0xF6, 0x6D, 0xE1, 0x64,  // .5...m.d
            /* 0380 */  0x83, 0xBE, 0x9E, 0x61, 0x6E, 0x45, 0xB0, 0xFF,  // ...anE..
            /* 0388 */  0xFF, 0xB7, 0x22, 0x38, 0x17, 0x34, 0x98, 0x99,  // .."8.4..
            /* 0390 */  0xEE, 0x55, 0xA8, 0x58, 0xF7, 0x2A, 0x40, 0xEC,  // .U.X.*@.
            /* 0398 */  0xB0, 0x5E, 0x7B, 0x7C, 0xB0, 0x82, 0x7B, 0xAF,  // .^{|..{.
            /* 03A0 */  0x82, 0x7B, 0xA9, 0x7A, 0x56, 0x38, 0xC6, 0xF0,  // .{.zV8..
            /* 03A8 */  0x0F, 0x53, 0x31, 0x4E, 0xE9, 0xB5, 0xD3, 0x40,  // .S1N...@
            /* 03B0 */  0x61, 0xA2, 0xC4, 0x7B, 0xAF, 0xF2, 0x18, 0xDF,  // a..{....
            /* 03B8 */  0xAB, 0xD8, 0x15, 0x2A, 0x4C, 0xAC, 0x97, 0x2B,  // ...*L..+
            /* 03C0 */  0xA3, 0xBE, 0x4E, 0x84, 0x0B, 0x14, 0x24, 0xD2,  // ..N...$.
            /* 03C8 */  0xAB, 0x55, 0x94, 0xC8, 0xF1, 0x0D, 0xF9, 0x5E,  // .U.....^
            /* 03D0 */  0x05, 0x5E, 0x39, 0xF7, 0x2A, 0x90, 0xFD, 0xFF,  // .^9.*...
            /* 03D8 */  0xEF, 0x55, 0x80, 0x79, 0xB4, 0xF7, 0x2A, 0x30,  // .U.y..*0
            /* 03E0 */  0x5E, 0x1B, 0xD8, 0x0D, 0x09, 0x16, 0xD0, 0x8B,  // ^.......
            /* 03E8 */  0x15, 0x60, 0x28, 0xF3, 0xC5, 0x8A, 0xE6, 0xBD,  // .`(.....
            /* 03F0 */  0x58, 0x21, 0xFE, 0xFF, 0xE7, 0x12, 0xA6, 0xE7,  // X!......
            /* 03F8 */  0x62, 0x45, 0xE6, 0x09, 0xFF, 0x66, 0x05, 0x70,  // bE...f.p
            /* 0400 */  0xFA, 0xFF, 0x7F, 0xB3, 0x02, 0x8C, 0xDD, 0x8B,  // ........
            /* 0408 */  0x30, 0x47, 0x2B, 0x78, 0x29, 0x6F, 0x56, 0x34,  // 0G+x)oV4
            /* 0410 */  0xCE, 0x32, 0x14, 0x70, 0x41, 0x14, 0xC6, 0x37,  // .2.pA..7
            /* 0418 */  0x2B, 0xC0, 0xD1, 0x75, 0x05, 0x37, 0x64, 0xB8,  // +..u.7d.
            /* 0420 */  0x60, 0x51, 0x82, 0xF9, 0x10, 0xE2, 0xE9, 0x1C,  // `Q......
            /* 0428 */  0xF1, 0x43, 0xC2, 0x4B, 0xC0, 0x63, 0x8E, 0x07,  // .C.K.c..
            /* 0430 */  0xFC, 0x40, 0xE0, 0xCB, 0x15, 0x98, 0xFE, 0xFF,  // .@......
            /* 0438 */  0x04, 0x3E, 0xF9, 0x9E, 0xE5, 0xDB, 0xD4, 0x7B,  // .>.....{
            /* 0440 */  0x2F, 0x3F, 0x60, 0xBD, 0x57, 0xF9, 0xF0, 0x1B,  // /?`.W...
            /* 0448 */  0xEB, 0x9D, 0xE1, 0xE5, 0xCA, 0x23, 0x89, 0x72,  // .....#.r
            /* 0450 */  0x12, 0xA1, 0x7C, 0xB7, 0x7A, 0xAF, 0x32, 0x4A,  // ..|.z.2J
            /* 0458 */  0xC4, 0x17, 0x62, 0x9F, 0x82, 0x0D, 0x6D, 0x94,  // ..b...m.
            /* 0460 */  0xA7, 0x8A, 0xE8, 0xC6, 0x7B, 0xB9, 0x02, 0xAF,  // ....{...
            /* 0468 */  0xA4, 0xCB, 0x15, 0x40, 0x93, 0xE1, 0xBF, 0x5C,  // ...@...\
            /* 0470 */  0x81, 0xEF, 0xE6, 0x80, 0xBD, 0x26, 0xC1, 0xF9,  // .....&..
            /* 0478 */  0xFF, 0x5F, 0x93, 0xF8, 0xF5, 0x0A, 0xF0, 0x93,  // ._......
            /* 0480 */  0xFD, 0x7A, 0x45, 0x73, 0x5F, 0xAF, 0x50, 0xA2,  // .zEs_.P.
            /* 0488 */  0x20, 0xA4, 0x08, 0x48, 0x33, 0x05, 0xCF, 0xFD,  //  ..H3...
            /* 0490 */  0x0A, 0xE0, 0xC4, 0xFF, 0xFF, 0x7E, 0x05, 0x58,  // .....~.X
            /* 0498 */  0x0E, 0x77, 0xBF, 0x02, 0x7A, 0xB7, 0x23, 0xF0,  // .w..z.#.
            /* 04A0 */  0xA2, 0xBC, 0x1D, 0x61, 0xAF, 0x58, 0xF8, 0x8C,  // ...a.X..
            /* 04A8 */  0x57, 0x2C, 0x1A, 0x66, 0x25, 0x8A, 0xB7, 0x26,  // W,.f%..&
            /* 04B0 */  0x0A, 0xE3, 0x2B, 0x16, 0x30, 0xF9, 0xFF, 0x5F,  // ..+.0.._
            /* 04B8 */  0xB1, 0x80, 0xD9, 0x41, 0x14, 0x37, 0x6A, 0xB8,  // ...A.7j.
            /* 04C0 */  0x17, 0x27, 0xDF, 0x7A, 0x3C, 0xDF, 0x88, 0xBE,  // .'.z<...
            /* 04C8 */  0xC3, 0x60, 0x4E, 0x58, 0x30, 0x6E, 0x58, 0xF0,  // .`NX0nX.
            /* 04D0 */  0x87, 0xF4, 0x30, 0xEC, 0x93, 0xC4, 0x3B, 0x96,  // ..0...;.
            /* 04D8 */  0x8F, 0x56, 0x06, 0x79, 0x03, 0x7E, 0xB2, 0x7A,  // .V.y.~.z
            /* 04E0 */  0xB0, 0x8A, 0x62, 0x84, 0x80, 0xC7, 0xF3, 0x2E,  // ..b.....
            /* 04E8 */  0xEC, 0xA3, 0xD5, 0x9B, 0x96, 0x51, 0x62, 0xC7,  // .....Qb.
            /* 04F0 */  0xF2, 0x85, 0xEA, 0x59, 0xCB, 0xD7, 0x2C, 0x43,  // ...Y..,C
            /* 04F8 */  0xC4, 0x7D, 0x20, 0xF6, 0x0D, 0x0B, 0xB0, 0xFD,  // .} .....
            /* 0500 */  0xFF, 0xBF, 0x61, 0x01, 0x8E, 0x2E, 0x0E, 0xFC,  // ..a.....
            /* 0508 */  0xE0, 0x80, 0xBD, 0x61, 0x01, 0x3E, 0x67, 0x0A,  // ...a.>g.
            /* 0510 */  0x9E, 0x1B, 0x16, 0xB0, 0xF9, 0xFF, 0xDF, 0xB0,  // ........
            /* 0518 */  0x00, 0xFE, 0xFF, 0xFF, 0x6F, 0x58, 0xC0, 0xE1,  // ....oX..
            /* 0520 */  0x76, 0x85, 0xBD, 0x65, 0x61, 0x6F, 0x2F, 0x64,  // v..eao/d
            /* 0528 */  0x15, 0x34, 0xD4, 0x4A, 0x14, 0xFC, 0x7B, 0x65,  // .4.J..{e
            /* 0530 */  0x18, 0x7A, 0xC3, 0x02, 0x1C, 0x8D, 0xDB, 0xA3,  // .z......
            /* 0538 */  0x06, 0xC7, 0xD9, 0xE0, 0x49, 0x02, 0x73, 0xAE,  // ....I.s.
            /* 0540 */  0xC6, 0xCD, 0xE6, 0xE0, 0x02, 0x47, 0xE8, 0x1D,  // .....G..
            /* 0548 */  0x54, 0x73, 0x67, 0x97, 0x14, 0x18, 0xB7, 0x2C,  // Tsg....,
            /* 0550 */  0xB8, 0x97, 0xAA, 0x87, 0x86, 0x28, 0x07, 0xF1,  // .....(..
            /* 0558 */  0x2A, 0xFC, 0x60, 0xF5, 0x28, 0x75, 0x64, 0x8F,  // *.`.(ud.
            /* 0560 */  0x57, 0x4F, 0xC3, 0x3E, 0x66, 0xF9, 0x96, 0x65,  // WO.>f..e
            /* 0568 */  0xA8, 0x08, 0x6F, 0x59, 0xEC, 0x0C, 0x11, 0x2F,  // ..oY.../
            /* 0570 */  0x56, 0x94, 0x10, 0xEF, 0x15, 0xA1, 0x7D, 0xE7,  // V.....}.
            /* 0578 */  0x32, 0xF8, 0xA3, 0xB1, 0x51, 0x83, 0xBE, 0x1C,  // 2...Q...
            /* 0580 */  0xBF, 0x65, 0xC1, 0xFB, 0xFF, 0xDF, 0xB2, 0xE0,  // .e......
            /* 0588 */  0x8B, 0xFC, 0xAB, 0xE8, 0x44, 0xE0, 0x5B, 0x16,  // ....D.[.
            /* 0590 */  0xC0, 0x8F, 0x60, 0x10, 0x72, 0x32, 0x70, 0xF4,  // ..`.r2p.
            /* 0598 */  0x79, 0x01, 0x3F, 0x80, 0x87, 0x11, 0x0F, 0x89,  // y.?.....
            /* 05A0 */  0x05, 0x18, 0x38, 0xBD, 0x2F, 0xF9, 0x4C, 0xC1,  // ..8./.L.
            /* 05A8 */  0x0F, 0x18, 0x3E, 0x53, 0xB0, 0xEB, 0x41, 0xF4,  // ..>S..A.
            /* 05B0 */  0xC7, 0x00, 0x9F, 0x4B, 0x30, 0x83, 0x03, 0xFF,  // ...K0...
            /* 05B8 */  0xB5, 0xE2, 0xD0, 0x3D, 0x8A, 0xD7, 0x07, 0x13,  // ...=....
            /* 05C0 */  0x78, 0x70, 0xFC, 0xFF, 0x3F, 0x38, 0xB8, 0x77,  // xp..?8.w
            /* 05C8 */  0x86, 0x23, 0xF2, 0x1D, 0xC6, 0x83, 0x03, 0xDB,  // .#......
            /* 05D0 */  0x41, 0x00, 0x38, 0x0C, 0x0E, 0x1F, 0x6A, 0x70,  // A.8...jp
            /* 05D8 */  0xE8, 0xF1, 0x18, 0x38, 0xA4, 0xCF, 0x63, 0xEC,  // ...8..c.
            /* 05E0 */  0xC2, 0xF0, 0x90, 0xE3, 0xA1, 0x81, 0x0D, 0xD0,  // ........
            /* 05E8 */  0x43, 0x03, 0x96, 0x93, 0x78, 0x0A, 0x39, 0x34,  // C...x.94
            /* 05F0 */  0x30, 0x4B, 0x18, 0x1A, 0x50, 0x8A, 0x37, 0x34,  // 0K..P.74
            /* 05F8 */  0xFA, 0xFF, 0x1F, 0x1A, 0x1F, 0x92, 0x0F, 0x0B,  // ........
            /* 0600 */  0x31, 0x9F, 0x72, 0x22, 0xBC, 0x2F, 0xF8, 0x04,  // 1.r"./..
            /* 0608 */  0xC5, 0xD0, 0x5F, 0x53, 0x7C, 0xBB, 0xF0, 0x4D,  // .._S|..M
            /* 0610 */  0x10, 0x37, 0x3E, 0x70, 0x5D, 0x3A, 0x3D, 0x3E,  // .7>p]:=>
            /* 0618 */  0xE0, 0x73, 0xE4, 0xF2, 0xF8, 0x70, 0x47, 0x27,  // .s...pG'
            /* 0620 */  0x8F, 0x0F, 0x86, 0xCB, 0xAB, 0x0C, 0x39, 0x9A,  // ......9.
            /* 0628 */  0xF8, 0x68, 0xC5, 0x86, 0x07, 0xB6, 0x9B, 0x9E,  // .h......
            /* 0630 */  0x87, 0x07, 0x7C, 0xAE, 0x9B, 0x60, 0xBC, 0x42,  // ..|..`.B
            /* 0638 */  0xF2, 0x6B, 0x09, 0x8C, 0x13, 0x14, 0xFE, 0xBA,  // .k......
            /* 0640 */  0x09, 0xDE, 0xFF, 0xFF, 0x75, 0x13, 0x78, 0x8E,  // ....u.x.
            /* 0648 */  0x82, 0x6B, 0xBD, 0x64, 0xD3, 0x20, 0xAF, 0x1C,  // .k.d. ..
            /* 0650 */  0xC5, 0x7A, 0x11, 0x50, 0x18, 0x9F, 0xD9, 0x00,  // .z.P....
            /* 0658 */  0x47, 0x63, 0x7D, 0x66, 0x03, 0xCB, 0xBD, 0x80,  // Gc}f....
            /* 0660 */  0xDD, 0xD8, 0xE0, 0x9E, 0xD6, 0x60, 0xDF, 0x1D,  // .....`..
            /* 0668 */  0x1E, 0xCE, 0x1E, 0xD3, 0x1E, 0xD5, 0x1E, 0xD0,  // ........
            /* 0670 */  0x7C, 0xC4, 0x8E, 0xF1, 0x96, 0x16, 0x24, 0x4E,  // |.....$N
            /* 0678 */  0x84, 0xD7, 0x81, 0xA7, 0x35, 0x5F, 0x32, 0xE2,  // ....5_2.
            /* 0680 */  0x05, 0x7A, 0x5A, 0x33, 0x46, 0x9C, 0x97, 0x36,  // .zZ3F..6
            /* 0688 */  0x23, 0xBE, 0x52, 0x84, 0x78, 0x58, 0xF3, 0xC9,  // #.R.xX..
            /* 0690 */  0xCD, 0x78, 0x0F, 0x13, 0xE1, 0xC2, 0xBC, 0xB0,  // .x......
            /* 0698 */  0x3D, 0xAD, 0x81, 0xE3, 0xFF, 0x7F, 0x5A, 0x83,  // =.....Z.
            /* 06A0 */  0x23, 0xE7, 0x8A, 0x0D, 0xD0, 0xE4, 0xA2, 0x8F,  // #.......
            /* 06A8 */  0x3B, 0xA4, 0x80, 0xE5, 0xDA, 0xC0, 0x6E, 0x29,  // ;.....n)
            /* 06B0 */  0xF0, 0x2E, 0xD8, 0xC0, 0xF9, 0xFF, 0x7F, 0x44,  // .......D
            /* 06B8 */  0x01, 0x5F, 0x96, 0x0B, 0x36, 0xCD, 0x71, 0xC1,  // ._..6.q.
            /* 06C0 */  0x46, 0x71, 0x58, 0x0D, 0x90, 0xE6, 0x09, 0xFF,  // FqX.....
            /* 06C8 */  0x7A, 0x0D, 0xFE, 0x49, 0xF8, 0x7A, 0x0D, 0xD8,  // z..I.z..
            /* 06D0 */  0xBE, 0xC5, 0xE2, 0xAE, 0xD7, 0xC0, 0xEA, 0xFF,  // ........
            /* 06D8 */  0x7F, 0xBD, 0x06, 0x96, 0x82, 0x47, 0x4A, 0xEF,  // .....GJ.
            /* 06E0 */  0xD4, 0xE0, 0xBA, 0x69, 0xE3, 0x41, 0xDF, 0xB4,  // ...i.A..
            /* 06E8 */  0x61, 0x0A, 0xBE, 0x45, 0xD1, 0x28, 0xE4, 0x8A,  // a..E.(..
            /* 06F0 */  0xB6, 0x10, 0x0A, 0xE3, 0x5B, 0x14, 0xE0, 0x08,  // ....[...
            /* 06F8 */  0xFB, 0x2D, 0x0A, 0x2C, 0x17, 0xA7, 0xB7, 0x28,  // .-.,...(
            /* 0700 */  0xFC, 0x0C, 0x3C, 0x68, 0xDF, 0x75, 0x18, 0xA6,  // ..<h.u..
            /* 0708 */  0xEF, 0xD0, 0xF0, 0x4F, 0x4D, 0xCF, 0x4D, 0x0F,  // ...OM.M.
            /* 0710 */  0x4E, 0x0F, 0xCD, 0x3E, 0x48, 0xF9, 0x70, 0xF0,  // N..>H.p.
            /* 0718 */  0xFC, 0xF4, 0xFF, 0x8F, 0xF1, 0x5E, 0xE7, 0x9B,  // .....^..
            /* 0720 */  0xD4, 0x6B, 0x94, 0x2F, 0x30, 0xC7, 0x10, 0x31,  // .k./0..1
            /* 0728 */  0xCA, 0xCB, 0xB4, 0x21, 0xE2, 0xF9, 0xD4, 0xE4,  // ...!....
            /* 0730 */  0xB3, 0x42, 0xDC, 0x10, 0x0F, 0xD1, 0x46, 0x88,  // .B....F.
            /* 0738 */  0xFA, 0x3C, 0xED, 0x09, 0xBD, 0x46, 0x81, 0x57,  // .<...F.W
            /* 0740 */  0xD0, 0x35, 0x0A, 0xA0, 0xC9, 0xFD, 0x08, 0x77,  // .5.....w
            /* 0748 */  0x8D, 0x02, 0xCB, 0xBD, 0x81, 0x9D, 0x87, 0xF8,  // ........
            /* 0750 */  0x95, 0xC8, 0xD7, 0x06, 0x18, 0xF7, 0x28, 0x38,  // ......(8
            /* 0758 */  0xFF, 0xFF, 0x7B, 0x14, 0x60, 0x23, 0xCC, 0x3D,  // ..{.`#.=
            /* 0760 */  0x8A, 0x06, 0xB9, 0x47, 0xA1, 0x4E, 0x26, 0xBE,  // ...G.N&.
            /* 0768 */  0xD4, 0x79, 0xA2, 0xE0, 0x08, 0x7F, 0x91, 0x42,  // .y.....B
            /* 0770 */  0xC5, 0x26, 0x51, 0xE8, 0xC3, 0x10, 0x2A, 0xE6,  // .&Q...*.
            /* 0778 */  0x61, 0x84, 0x82, 0x18, 0xD0, 0x19, 0x4E, 0x14,  // a.....N.
            /* 0780 */  0x68, 0x15, 0x27, 0x0A, 0x72, 0x8B, 0xF1, 0xA4,  // h.'.r...
            /* 0788 */  0x1E, 0xA3, 0x00, 0x5F, 0xCB, 0xF4, 0x50, 0x79,  // ..._..Py
            /* 0790 */  0xE4, 0xA1, 0x52, 0x10, 0x0F, 0xD5, 0x71, 0x86,  // ..R...q.
            /* 0798 */  0x8A, 0x9E, 0xA4, 0xE7, 0x8F, 0xF9, 0xFF, 0x1F,  // ........
            /* 07A0 */  0x1C, 0xB0, 0x07, 0x29, 0x80, 0x17, 0x0A, 0x6D,  // ...)...m
            /* 07A8 */  0xFA, 0xD4, 0x68, 0xD4, 0xAA, 0x41, 0x99, 0x1A,  // ..h..A..
            /* 07B0 */  0x65, 0x1A, 0xD4, 0xEA, 0x53, 0xA9, 0x31, 0x63,  // e...S.1c
            /* 07B8 */  0xE7, 0x50, 0x4B, 0x3B, 0x4B, 0x50, 0x31, 0x8B,  // .PK;KP1.
            /* 07C0 */  0xD1, 0x68, 0x1C, 0x05, 0x84, 0xCA, 0xFE, 0x9B,  // .h......
            /* 07C8 */  0x0B, 0xC4, 0x21, 0x9F, 0x3A, 0x02, 0x74, 0xB0,  // ..!.:.t.
            /* 07D0 */  0x17, 0x95, 0x80, 0x2C, 0x6B, 0x6D, 0x02, 0x71,  // ...,km.q
            /* 07D8 */  0x7C, 0x13, 0x10, 0x8D, 0x80, 0x48, 0xCB, 0x63,  // |....H.c
            /* 07E0 */  0x42, 0x40, 0xCE, 0x0D, 0x22, 0x20, 0xAB, 0x58,  // B@.." .X
            /* 07E8 */  0x93, 0x80, 0xAC, 0xF9, 0x01, 0x23, 0x70, 0xEB,  // .....#p.
            /* 07F0 */  0xD4, 0x01, 0xC4, 0x52, 0x82, 0xD0, 0x44, 0x0B,  // ...R..D.
            /* 07F8 */  0x17, 0xA8, 0xE3, 0x81, 0x68, 0x30, 0x84, 0x46,  // ....h0.F
            /* 0800 */  0x40, 0x0E, 0x46, 0x21, 0x20, 0xCB, 0xF8, 0x74,  // @.F! ..t
            /* 0808 */  0x0B, 0xDC, 0x02, 0xAC, 0x00, 0x31, 0xF9, 0x20,  // .....1. 
            /* 0810 */  0x54, 0xB0, 0x17, 0x50, 0xA6, 0x1E, 0x44, 0x40,  // T..P..D@
            /* 0818 */  0x56, 0xBA, 0x56, 0x01, 0x59, 0x37, 0x88, 0x80,  // V.V.Y7..
            /* 0820 */  0xFE, 0xFF, 0x2F, 0x83, 0x32, 0x03, 0xCE, 0x32,  // ../.2..2
            /* 0828 */  0xBA, 0x01, 0x62, 0x0A, 0x1F, 0x0A, 0x02, 0xB1,  // ..b.....
            /* 0830 */  0x26, 0x3D, 0xA0, 0x4C, 0x20, 0x88, 0xAE, 0x1C,  // &=.L ...
            /* 0838 */  0xC4, 0x0F, 0x10, 0x93, 0x06, 0x22, 0x20, 0xC7,  // ....." .
            /* 0840 */  0x39, 0x98, 0x08, 0xDC, 0x71, 0x14, 0x01, 0x52,  // 9...q..R
            /* 0848 */  0x47, 0xC3, 0xA5, 0x20, 0x54, 0xFC, 0xF3, 0x44,  // G.. T..D
            /* 0850 */  0x20, 0x16, 0x64, 0x09, 0x8C, 0x82, 0xD0, 0x08,  //  .d.....
            /* 0858 */  0x9A, 0x40, 0x98, 0x3C, 0x4F, 0x20, 0x2C, 0xD4,  // .@.<O ,.
            /* 0860 */  0x9F, 0x5C, 0xA7, 0x15, 0xA2, 0x6A, 0x88, 0xD4,  // .\...j..
            /* 0868 */  0x15, 0x08, 0x0B, 0xFC, 0x30, 0xD0, 0x60, 0x9C,  // ....0.`.
            /* 0870 */  0x1E, 0x44, 0x40, 0x4E, 0xFA, 0xA7, 0x0A, 0x44,  // .D@N...D
            /* 0878 */  0x72, 0x83, 0x08, 0xC8, 0xF9, 0x9F, 0x22, 0x02,  // r.....".
            /* 0880 */  0x77, 0xEA, 0xD7, 0x84, 0x86, 0x4F, 0xBE, 0x58,  // w....O.X
            /* 0888 */  0x41, 0x88, 0xB8, 0x87, 0x55, 0x50, 0xA2, 0x14,  // A...UP..
            /* 0890 */  0x44, 0x40, 0x56, 0xF6, 0xB4, 0x12, 0x90, 0x75,  // D@V....u
            /* 0898 */  0x82, 0x08, 0xC8, 0xFF, 0x7F                     // .....
        })
    }

    Method (WMIS, 2, NotSerialized)
    {
        Return (SMI (0x10, Arg0, Arg1, 0x00, 0x00))
    }

    Mutex (MSMI, 0x00)
    Method (SMI, 5, Serialized)
    {
        Acquire (MSMI, 0xFFFF)
        Local0 = 0x00
        CMD = Arg0
        ERR = 0x01
        PAR0 = Arg1
        PAR1 = Arg2
        PAR2 = Arg3
        PAR3 = Arg4
        APMW = 0xF5
        While ((ERR == 0x01))
        {
            Sleep (0x01)
            APMW = 0xF5
        }

        Local0 = PAR0 /* \PAR0 */
        Release (MSMI)
        Return (Local0)
    }

    OperationRegion (MNVS, SystemMemory, 0xCE39F018, 0x1000)
    Field (MNVS, ByteAcc, NoLock, Preserve)
    {
        Offset (0xB00), 
        WITM,   8, 
        WSEL,   8, 
        WLS0,   8, 
        WLS1,   8, 
        WLS2,   8, 
        WLS3,   8, 
        WLS4,   8, 
        WLS5,   8, 
        WLS6,   8, 
        WLS7,   8, 
        WLS8,   8, 
        WLS9,   8, 
        WLSA,   8, 
        WLSB,   8, 
        WLSC,   8, 
        WLSD,   8, 
        WENC,   8, 
        WKBD,   8, 
        WPTY,   8, 
        WPAS,   1032, 
        WPNW,   1032, 
        WSPM,   8, 
        WSPS,   8, 
        WSMN,   8, 
        WSMX,   8, 
        WSEN,   8, 
        WSKB,   8, 
        WASB,   8, 
        WASI,   16, 
        WASD,   8, 
        WASS,   32
    }

    Field (MNVS, AnyAcc, NoLock, Preserve)
    {
        Offset (0xFC0), 
        CMD,    8, 
        ERR,    32, 
        PAR0,   32, 
        PAR1,   32, 
        PAR2,   32, 
        PAR3,   32
    }
}



FACP
----
[000h 0000 004h]                   Signature : "FACP"    [Fixed ACPI Description Table (FADT)]
[004h 0004 004h]                Table Length : 0000010C
[008h 0008 001h]                    Revision : 05
[009h 0009 001h]                    Checksum : FD
[00Ah 0010 006h]                      Oem ID : "LENOVO"
[010h 0016 008h]                Oem Table ID : "CB-01   "
[018h 0024 004h]                Oem Revision : 00000003
[01Ch 0028 004h]             Asl Compiler ID : "PTEC"
[020h 0032 004h]       Asl Compiler Revision : 00000002

[024h 0036 004h]                FACS Address : CDAFE000
[028h 0040 004h]                DSDT Address : C7F41000
[02Ch 0044 001h]                       Model : 01
[02Dh 0045 001h]                  PM Profile : 02 [Mobile]
[02Eh 0046 002h]               SCI Interrupt : 0009
[030h 0048 004h]            SMI Command Port : 000000B0
[034h 0052 001h]           ACPI Enable Value : A0
[035h 0053 001h]          ACPI Disable Value : A1
[036h 0054 001h]              S4BIOS Command : 00
[037h 0055 001h]             P-State Control : 00
[038h 0056 004h]    PM1A Event Block Address : 00000400
[03Ch 0060 004h]    PM1B Event Block Address : 00000000
[040h 0064 004h]  PM1A Control Block Address : 00000404
[044h 0068 004h]  PM1B Control Block Address : 00000000
[048h 0072 004h]   PM2 Control Block Address : 00000000
[04Ch 0076 004h]      PM Timer Block Address : 00000408
[050h 0080 004h]          GPE0 Block Address : 00000420
[054h 0084 004h]          GPE1 Block Address : 00000000
[058h 0088 001h]      PM1 Event Block Length : 04
[059h 0089 001h]    PM1 Control Block Length : 02
[05Ah 0090 001h]    PM2 Control Block Length : 00
[05Bh 0091 001h]       PM Timer Block Length : 04
[05Ch 0092 001h]           GPE0 Block Length : 08
[05Dh 0093 001h]           GPE1 Block Length : 00
[05Eh 0094 001h]            GPE1 Base Offset : 00
[05Fh 0095 001h]                _CST Support : 00
[060h 0096 002h]                  C2 Latency : 0065
[062h 0098 002h]                  C3 Latency : 03E9
[064h 0100 002h]              CPU Cache Size : 0000
[066h 0102 002h]          Cache Flush Stride : 0000
[068h 0104 001h]           Duty Cycle Offset : 01
[069h 0105 001h]            Duty Cycle Width : 00
[06Ah 0106 001h]         RTC Day Alarm Index : 0D
[06Bh 0107 001h]       RTC Month Alarm Index : 00
[06Ch 0108 001h]           RTC Century Index : 32
[06Dh 0109 002h]  Boot Flags (decoded below) : 0013
               Legacy Devices Supported (V2) : 1
            8042 Present on ports 60/64 (V2) : 1
                        VGA Not Present (V4) : 0
                      MSI Not Supported (V4) : 0
                PCIe ASPM Not Supported (V4) : 1
                   CMOS RTC Not Present (V5) : 0
[06Fh 0111 001h]                    Reserved : 00
[070h 0112 004h]       Flags (decoded below) : 0000C5AD
      WBINVD instruction is operational (V1) : 1
              WBINVD flushes all caches (V1) : 0
                    All CPUs support C1 (V1) : 1
                  C2 works on MP system (V1) : 1
            Control Method Power Button (V1) : 0
            Control Method Sleep Button (V1) : 1
        RTC wake not in fixed reg space (V1) : 0
            RTC can wake system from S4 (V1) : 1
                        32-bit PM Timer (V1) : 1
                      Docking Supported (V1) : 0
               Reset Register Supported (V2) : 1
                            Sealed Case (V3) : 0
                    Headless - No Video (V3) : 0
        Use native instr after SLP_TYPx (V3) : 0
              PCIEXP_WAK Bits Supported (V4) : 1
                     Use Platform Timer (V4) : 1
               RTC_STS valid on S4 wake (V4) : 0
                Remote Power-on capable (V4) : 0
                 Use APIC Cluster Model (V4) : 0
     Use APIC Physical Destination Mode (V4) : 0
                       Hardware Reduced (V5) : 0
                      Low Power S0 Idle (V5) : 0

[074h 0116 00Ch]              Reset Register : [Generic Address Structure]
[074h 0116 001h]                    Space ID : 01 [SystemIO]
[075h 0117 001h]                   Bit Width : 08
[076h 0118 001h]                  Bit Offset : 00
[077h 0119 001h]        Encoded Access Width : 01 [Byte Access:8]
[078h 0120 008h]                     Address : 0000000000000CF9

[080h 0128 001h]        Value to cause reset : 06
[081h 0129 002h]   ARM Flags (decoded below) : 0000
                              PSCI Compliant : 0
                       Must use HVC for PSCI : 0

[083h 0131 001h]         FADT Minor Revision : 00
[084h 0132 008h]                FACS Address : 0000000000000000
[08Ch 0140 008h]                DSDT Address : 00000000C7F41000
[094h 0148 00Ch]            PM1A Event Block : [Generic Address Structure]
[094h 0148 001h]                    Space ID : 01 [SystemIO]
[095h 0149 001h]                   Bit Width : 20
[096h 0150 001h]                  Bit Offset : 00
[097h 0151 001h]        Encoded Access Width : 02 [Word Access:16]
[098h 0152 008h]                     Address : 0000000000000400

[0A0h 0160 00Ch]            PM1B Event Block : [Generic Address Structure]
[0A0h 0160 001h]                    Space ID : 01 [SystemIO]
[0A1h 0161 001h]                   Bit Width : 00
[0A2h 0162 001h]                  Bit Offset : 00
[0A3h 0163 001h]        Encoded Access Width : 02 [Word Access:16]
[0A4h 0164 008h]                     Address : 0000000000000000

[0ACh 0172 00Ch]          PM1A Control Block : [Generic Address Structure]
[0ACh 0172 001h]                    Space ID : 01 [SystemIO]
[0ADh 0173 001h]                   Bit Width : 10
[0AEh 0174 001h]                  Bit Offset : 00
[0AFh 0175 001h]        Encoded Access Width : 02 [Word Access:16]
[0B0h 0176 008h]                     Address : 0000000000000404

[0B8h 0184 00Ch]          PM1B Control Block : [Generic Address Structure]
[0B8h 0184 001h]                    Space ID : 01 [SystemIO]
[0B9h 0185 001h]                   Bit Width : 00
[0BAh 0186 001h]                  Bit Offset : 00
[0BBh 0187 001h]        Encoded Access Width : 02 [Word Access:16]
[0BCh 0188 008h]                     Address : 0000000000000000

[0C4h 0196 00Ch]           PM2 Control Block : [Generic Address Structure]
[0C4h 0196 001h]                    Space ID : 01 [SystemIO]
[0C5h 0197 001h]                   Bit Width : 00
[0C6h 0198 001h]                  Bit Offset : 00
[0C7h 0199 001h]        Encoded Access Width : 01 [Byte Access:8]
[0C8h 0200 008h]                     Address : 0000000000000000

[0D0h 0208 00Ch]              PM Timer Block : [Generic Address Structure]
[0D0h 0208 001h]                    Space ID : 01 [SystemIO]
[0D1h 0209 001h]                   Bit Width : 20
[0D2h 0210 001h]                  Bit Offset : 00
[0D3h 0211 001h]        Encoded Access Width : 03 [DWord Access:32]
[0D4h 0212 008h]                     Address : 0000000000000408

[0DCh 0220 00Ch]                  GPE0 Block : [Generic Address Structure]
[0DCh 0220 001h]                    Space ID : 01 [SystemIO]
[0DDh 0221 001h]                   Bit Width : 40
[0DEh 0222 001h]                  Bit Offset : 00
[0DFh 0223 001h]        Encoded Access Width : 03 [DWord Access:32]
[0E0h 0224 008h]                     Address : 0000000000000420

[0E8h 0232 00Ch]                  GPE1 Block : [Generic Address Structure]
[0E8h 0232 001h]                    Space ID : 01 [SystemIO]
[0E9h 0233 001h]                   Bit Width : 00
[0EAh 0234 001h]                  Bit Offset : 00
[0EBh 0235 001h]        Encoded Access Width : 03 [DWord Access:32]
[0ECh 0236 008h]                     Address : 0000000000000000


[0F4h 0244 00Ch]      Sleep Control Register : [Generic Address Structure]
[0F4h 0244 001h]                    Space ID : 01 [SystemIO]
[0F5h 0245 001h]                   Bit Width : 08
[0F6h 0246 001h]                  Bit Offset : 00
[0F7h 0247 001h]        Encoded Access Width : 00 [Undefined/Legacy]
[0F8h 0248 008h]                     Address : 0000000000000000

[100h 0256 00Ch]       Sleep Status Register : [Generic Address Structure]
[100h 0256 001h]                    Space ID : 01 [SystemIO]
[101h 0257 001h]                   Bit Width : 08
[102h 0258 001h]                  Bit Offset : 00
[103h 0259 001h]        Encoded Access Width : 00 [Undefined/Legacy]
[104h 0260 008h]                     Address : 0000000000000000

/**** ACPI table terminates in the middle of a data structure! (dump table) 
CurrentOffset: 10C, TableLength: 10C ***/
Raw Table Data: Length 268 (0x10C)

    0000: 46 41 43 50 0C 01 00 00 05 FD 4C 45 4E 4F 56 4F  // FACP......LENOVO
    0010: 43 42 2D 30 31 20 20 20 03 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 00 E0 AF CD 00 10 F4 C7 01 02 09 00  // ................
    0030: B0 00 00 00 A0 A1 00 00 00 04 00 00 00 00 00 00  // ................
    0040: 04 04 00 00 00 00 00 00 00 00 00 00 08 04 00 00  // ................
    0050: 20 04 00 00 00 00 00 00 04 02 00 04 08 00 00 00  //  ...............
    0060: 65 00 E9 03 00 00 00 00 01 00 0D 00 32 13 00 00  // e...........2...
    0070: AD C5 00 00 01 08 00 01 F9 0C 00 00 00 00 00 00  // ................
    0080: 06 00 00 00 00 00 00 00 00 00 00 00 00 10 F4 C7  // ................
    0090: 00 00 00 00 01 20 00 02 00 04 00 00 00 00 00 00  // ..... ..........
    00A0: 01 00 00 02 00 00 00 00 00 00 00 00 01 10 00 02  // ................
    00B0: 04 04 00 00 00 00 00 00 01 00 00 02 00 00 00 00  // ................
    00C0: 00 00 00 00 01 00 00 01 00 00 00 00 00 00 00 00  // ................
    00D0: 01 20 00 03 08 04 00 00 00 00 00 00 01 40 00 03  // . ...........@..
    00E0: 20 04 00 00 00 00 00 00 01 00 00 03 00 00 00 00  //  ...............
    00F0: 00 00 00 00 01 08 00 00 00 00 00 00 00 00 00 00  // ................
    0100: 01 08 00 00 00 00 00 00 00 00 00 00              // ............


FACS
----
[000h 0000 004h]                   Signature : "FACS"
[004h 0004 004h]                      Length : 00000040
[008h 0008 004h]          Hardware Signature : 0000232E
[00Ch 0012 004h]   32 Firmware Waking Vector : 00000000
[010h 0016 004h]                 Global Lock : 00000000
[014h 0020 004h]       Flags (decoded below) : 00000000
                      S4BIOS Support Present : 0
                  64-bit Wake Supported (V2) : 0
[018h 0024 008h]   64 Firmware Waking Vector : 0000000000000000
[020h 0032 001h]                     Version : 01
[021h 0033 003h]                    Reserved : 000000
[024h 0036 004h]   OspmFlags (decoded below) : 00000000
               64-bit Wake Env Required (V2) : 0

Raw Table Data: Length 64 (0x40)

    0000: 46 41 43 53 40 00 00 00 2E 23 00 00 00 00 00 00  // FACS@....#......
    0010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0020: 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................


FPDT
----
[000h 0000 004h]                   Signature : "FPDT"    [Firmware Performance Data Table]
[004h 0004 004h]                Table Length : 00000034
[008h 0008 001h]                    Revision : 01
[009h 0009 001h]                    Checksum : 2E
[00Ah 0010 006h]                      Oem ID : "LENOVO"
[010h 0016 008h]                Oem Table ID : "CB-01   "
[018h 0024 004h]                Oem Revision : 00000002
[01Ch 0028 004h]             Asl Compiler ID : "PTEC"
[020h 0032 004h]       Asl Compiler Revision : 00000002


[024h 0036 002h]               Subtable Type : 0000
[026h 0038 001h]                      Length : 10
[027h 0039 001h]                    Revision : 01
[028h 0040 004h]                    Reserved : 00000000
[02Ch 0044 008h]    FPDT Boot Record Address : 00000000CC2CF000

Raw Table Data: Length 52 (0x34)

    0000: 46 50 44 54 34 00 00 00 01 2E 4C 45 4E 4F 56 4F  // FPDT4.....LENOVO
    0010: 43 42 2D 30 31 20 20 20 02 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 00 00 10 01 00 00 00 00 00 F0 2C CC  // ..............,.
    0030: 00 00 00 00                                      // ....


HPET
----
[000h 0000 004h]                   Signature : "HPET"    [High Precision Event Timer Table]
[004h 0004 004h]                Table Length : 00000038
[008h 0008 001h]                    Revision : 01
[009h 0009 001h]                    Checksum : 0D
[00Ah 0010 006h]                      Oem ID : "LENOVO"
[010h 0016 008h]                Oem Table ID : "CB-01   "
[018h 0024 004h]                Oem Revision : 00000001
[01Ch 0028 004h]             Asl Compiler ID : "PTEC"
[020h 0032 004h]       Asl Compiler Revision : 00000002

[024h 0036 004h]           Hardware Block ID : 43538210

[028h 0040 00Ch]        Timer Block Register : [Generic Address Structure]
[028h 0040 001h]                    Space ID : 00 [SystemMemory]
[029h 0041 001h]                   Bit Width : 08
[02Ah 0042 001h]                  Bit Offset : 00
[02Bh 0043 001h]        Encoded Access Width : 00 [Undefined/Legacy]
[02Ch 0044 008h]                     Address : 00000000FED00000

[034h 0052 001h]             Sequence Number : 02
[035h 0053 002h]         Minimum Clock Ticks : 0014
[037h 0055 001h]       Flags (decoded below) : 00
                             4K Page Protect : 0
                            64K Page Protect : 0

Raw Table Data: Length 56 (0x38)

    0000: 48 50 45 54 38 00 00 00 01 0D 4C 45 4E 4F 56 4F  // HPET8.....LENOVO
    0010: 43 42 2D 30 31 20 20 20 01 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 10 82 53 43 00 08 00 00 00 00 D0 FE  // ......SC........
    0030: 00 00 00 00 02 14 00 00                          // ........


IVRS
----
[000h 0000 004h]                   Signature : "IVRS"    [I/O Virtualization Reporting Structure]
[004h 0004 004h]                Table Length : 0000013E
[008h 0008 001h]                    Revision : 02
[009h 0009 001h]                    Checksum : 59
[00Ah 0010 006h]                      Oem ID : "LENOVO"
[010h 0016 008h]                Oem Table ID : "CB-01   "
[018h 0024 004h]                Oem Revision : 00000001
[01Ch 0028 004h]             Asl Compiler ID : "PTEC"
[020h 0032 004h]       Asl Compiler Revision : 00000002

[024h 0036 004h]         Virtualization Info : 00203041
[028h 0040 008h]                    Reserved : 0000000000000000

[030h 0048 001h]               Subtable Type : 10 [Hardware Definition Block (IVHD)]
[031h 0049 001h]       Flags (decoded below) : B0
                                     HtTunEn : 0
                                      PassPW : 0
                                   ResPassPW : 0
                                Isoc Control : 0
                               Iotlb Support : 1
                                    Coherent : 1
                            Prefetch Support : 0
                                 PPR Support : 1
[032h 0050 002h]                      Length : 0048
[034h 0052 002h]                    DeviceId : 0002
[036h 0054 002h]           Capability Offset : 0040
[038h 0056 008h]                Base Address : 00000000FD100000
[040h 0064 002h]           PCI Segment Group : 0000
[042h 0066 002h]         Virtualization Info : 0000
[044h 0068 004h]           Feature Reporting : 80048F6E

[048h 0072 001h]               Subtable Type : 03 [Device Entry: Start of Range]
[049h 0073 002h]                   Device ID : 0008
[04Bh 0075 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[04Ch 0076 001h]               Subtable Type : 04 [Device Entry: End of Range]
[04Dh 0077 002h]                   Device ID : FFFE
[04Fh 0079 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[050h 0080 001h]               Subtable Type : 43 [Device Entry: Alias Start of Range]
[051h 0081 002h]                   Device ID : FF00
[053h 0083 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[054h 0084 001h]                    Reserved : 00
[055h 0085 002h]       Source Used Device ID : 00A4
[057h 0087 001h]                    Reserved : 00

[058h 0088 001h]               Subtable Type : 04 [Device Entry: End of Range]
[059h 0089 002h]                   Device ID : FFFF
[05Bh 0091 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[05Ch 0092 001h]               Subtable Type : 00 [Unknown/Reserved Device Entry Type]
[05Dh 0093 002h]                   Device ID : 0000
[05Fh 0095 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[060h 0096 001h]               Subtable Type : 48 [Device Entry: Special Device]
[061h 0097 002h]                   Device ID : 0000
[063h 0099 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[064h 0100 001h]                      Handle : 00
[065h 0101 002h]       Source Used Device ID : 00A0
[067h 0103 001h]                     Variety : 02

[068h 0104 001h]               Subtable Type : 48 [Device Entry: Special Device]
[069h 0105 002h]                   Device ID : 0000
[06Bh 0107 001h] Data Setting (decoded below) : D7
                                    INITPass : 1
                                    EIntPass : 1
                                     NMIPass : 1
                                    Reserved : 0
                                 System MGMT : 1
                                  LINT0 Pass : 1
                                  LINT1 Pass : 1
[06Ch 0108 001h]                      Handle : 20
[06Dh 0109 002h]       Source Used Device ID : 00A0
[06Fh 0111 001h]                     Variety : 01

[070h 0112 001h]               Subtable Type : 48 [Device Entry: Special Device]
[071h 0113 002h]                   Device ID : 0000
[073h 0115 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[074h 0116 001h]                      Handle : 21
[075h 0117 002h]       Source Used Device ID : 0001
[077h 0119 001h]                     Variety : 01

[078h 0120 001h]               Subtable Type : 11 [Hardware Definition Block (IVHD)]
[079h 0121 001h]       Flags (decoded below) : B0
                                     HtTunEn : 0
                                      PassPW : 0
                                   ResPassPW : 0
                                Isoc Control : 0
                               Iotlb Support : 1
                                    Coherent : 1
                            Prefetch Support : 0
                                 PPR Support : 1
[07Ah 0122 002h]                      Length : 0058
[07Ch 0124 002h]                    DeviceId : 0002
[07Eh 0126 002h]           Capability Offset : 0040
[080h 0128 008h]                Base Address : 00000000FD100000
[088h 0136 002h]           PCI Segment Group : 0000
[08Ah 0138 002h]         Virtualization Info : 0000
[08Ch 0140 004h]                  Attributes : 00040200
[090h 0144 008h]                   EFR Image : 004F77EF22294ADA
[098h 0152 008h]                    Reserved : 0000000000000000

[0A0h 0160 001h]               Subtable Type : 03 [Device Entry: Start of Range]
[0A1h 0161 002h]                   Device ID : 0008
[0A3h 0163 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0A4h 0164 001h]               Subtable Type : 04 [Device Entry: End of Range]
[0A5h 0165 002h]                   Device ID : FFFE
[0A7h 0167 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0A8h 0168 001h]               Subtable Type : 43 [Device Entry: Alias Start of Range]
[0A9h 0169 002h]                   Device ID : FF00
[0ABh 0171 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[0ACh 0172 001h]                    Reserved : 00
[0ADh 0173 002h]       Source Used Device ID : 00A4
[0AFh 0175 001h]                    Reserved : 00

[0B0h 0176 001h]               Subtable Type : 04 [Device Entry: End of Range]
[0B1h 0177 002h]                   Device ID : FFFF
[0B3h 0179 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0B4h 0180 001h]               Subtable Type : 00 [Unknown/Reserved Device Entry Type]
[0B5h 0181 002h]                   Device ID : 0000
[0B7h 0183 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0B8h 0184 001h]               Subtable Type : 48 [Device Entry: Special Device]
[0B9h 0185 002h]                   Device ID : 0000
[0BBh 0187 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[0BCh 0188 001h]                      Handle : 00
[0BDh 0189 002h]       Source Used Device ID : 00A0
[0BFh 0191 001h]                     Variety : 02

[0C0h 0192 001h]               Subtable Type : 48 [Device Entry: Special Device]
[0C1h 0193 002h]                   Device ID : 0000
[0C3h 0195 001h] Data Setting (decoded below) : D7
                                    INITPass : 1
                                    EIntPass : 1
                                     NMIPass : 1
                                    Reserved : 0
                                 System MGMT : 1
                                  LINT0 Pass : 1
                                  LINT1 Pass : 1
[0C4h 0196 001h]                      Handle : 20
[0C5h 0197 002h]       Source Used Device ID : 00A0
[0C7h 0199 001h]                     Variety : 01

[0C8h 0200 001h]               Subtable Type : 48 [Device Entry: Special Device]
[0C9h 0201 002h]                   Device ID : 0000
[0CBh 0203 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[0CCh 0204 001h]                      Handle : 21
[0CDh 0205 002h]       Source Used Device ID : 0001
[0CFh 0207 001h]                     Variety : 01

[0D0h 0208 001h]               Subtable Type : 40 [Hardware Definition Block - Mixed Format (IVHD)]
[0D1h 0209 001h]       Flags (decoded below) : B0
                                     HtTunEn : 0
                                      PassPW : 0
                                   ResPassPW : 0
                                Isoc Control : 0
                               Iotlb Support : 1
                                    Coherent : 1
                            Prefetch Support : 0
                                 PPR Support : 1
[0D2h 0210 002h]                      Length : 006E
[0D4h 0212 002h]                    DeviceId : 0002
[0D6h 0214 002h]           Capability Offset : 0040
[0D8h 0216 008h]                Base Address : 00000000FD100000
[0E0h 0224 002h]           PCI Segment Group : 0000
[0E2h 0226 002h]         Virtualization Info : 0000
[0E4h 0228 004h]                  Attributes : 00040200
[0E8h 0232 008h]                   EFR Image : 004F77EF22294ADA
[0F0h 0240 008h]                    Reserved : 0000000000000000

[0F8h 0248 001h]               Subtable Type : 03 [Device Entry: Start of Range]
[0F9h 0249 002h]                   Device ID : 0008
[0FBh 0251 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0FCh 0252 001h]               Subtable Type : 04 [Device Entry: End of Range]
[0FDh 0253 002h]                   Device ID : FFFE
[0FFh 0255 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[100h 0256 001h]               Subtable Type : 43 [Device Entry: Alias Start of Range]
[101h 0257 002h]                   Device ID : FF00
[103h 0259 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[104h 0260 001h]                    Reserved : 00
[105h 0261 002h]       Source Used Device ID : 00A4
[107h 0263 001h]                    Reserved : 00

[108h 0264 001h]               Subtable Type : 04 [Device Entry: End of Range]
[109h 0265 002h]                   Device ID : FFFF
[10Bh 0267 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[10Ch 0268 001h]               Subtable Type : 00 [Unknown/Reserved Device Entry Type]
[10Dh 0269 002h]                   Device ID : 0000
[10Fh 0271 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[110h 0272 001h]               Subtable Type : 48 [Device Entry: Special Device]
[111h 0273 002h]                   Device ID : 0000
[113h 0275 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[114h 0276 001h]                      Handle : 00
[115h 0277 002h]       Source Used Device ID : 00A0
[117h 0279 001h]                     Variety : 02

[118h 0280 001h]               Subtable Type : 48 [Device Entry: Special Device]
[119h 0281 002h]                   Device ID : 0000
[11Bh 0283 001h] Data Setting (decoded below) : D7
                                    INITPass : 1
                                    EIntPass : 1
                                     NMIPass : 1
                                    Reserved : 0
                                 System MGMT : 1
                                  LINT0 Pass : 1
                                  LINT1 Pass : 1
[11Ch 0284 001h]                      Handle : 20
[11Dh 0285 002h]       Source Used Device ID : 00A0
[11Fh 0287 001h]                     Variety : 01

[120h 0288 001h]               Subtable Type : 48 [Device Entry: Special Device]
[121h 0289 002h]                   Device ID : 0000
[123h 0291 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[124h 0292 001h]                      Handle : 21
[125h 0293 002h]       Source Used Device ID : 0001
[127h 0295 001h]                     Variety : 01

[128h 0296 001h]               Subtable Type : F0 [Device Entry: ACPI HID Named Device]
[129h 0297 002h]                   Device ID : 0099
[12Bh 0299 001h] Data Setting (decoded below) : F7
                                    INITPass : 1
                                    EIntPass : 1
                                     NMIPass : 1
                                    Reserved : 0
                                 System MGMT : 3
                                  LINT0 Pass : 1
                                  LINT1 Pass : 1
[12Ch 0300 008h]                    ACPI HID : "AMDI0041"
[134h 0308 008h]                    ACPI CID : 0000000000000000

Raw Table Data: Length 318 (0x13E)

    0000: 49 56 52 53 3E 01 00 00 02 59 4C 45 4E 4F 56 4F  // IVRS>....YLENOVO
    0010: 43 42 2D 30 31 20 20 20 01 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 41 30 20 00 00 00 00 00 00 00 00 00  // ....A0 .........
    0030: 10 B0 48 00 02 00 40 00 00 00 10 FD 00 00 00 00  // ..H...@.........
    0040: 00 00 00 00 6E 8F 04 80 03 08 00 00 04 FE FF 00  // ....n...........
    0050: 43 00 FF 00 00 A4 00 00 04 FF FF 00 00 00 00 00  // C...............
    0060: 48 00 00 00 00 A0 00 02 48 00 00 D7 20 A0 00 01  // H.......H... ...
    0070: 48 00 00 00 21 01 00 01 11 B0 58 00 02 00 40 00  // H...!.....X...@.
    0080: 00 00 10 FD 00 00 00 00 00 00 00 00 00 02 04 00  // ................
    0090: DA 4A 29 22 EF 77 4F 00 00 00 00 00 00 00 00 00  // .J)".wO.........
    00A0: 03 08 00 00 04 FE FF 00 43 00 FF 00 00 A4 00 00  // ........C.......
    00B0: 04 FF FF 00 00 00 00 00 48 00 00 00 00 A0 00 02  // ........H.......
    00C0: 48 00 00 D7 20 A0 00 01 48 00 00 00 21 01 00 01  // H... ...H...!...
    00D0: 40 B0 6E 00 02 00 40 00 00 00 10 FD 00 00 00 00  // @.n...@.........
    00E0: 00 00 00 00 00 02 04 00 DA 4A 29 22 EF 77 4F 00  // .........J)".wO.
    00F0: 00 00 00 00 00 00 00 00 03 08 00 00 04 FE FF 00  // ................
    0100: 43 00 FF 00 00 A4 00 00 04 FF FF 00 00 00 00 00  // C...............
    0110: 48 00 00 00 00 A0 00 02 48 00 00 D7 20 A0 00 01  // H.......H... ...
    0120: 48 00 00 00 21 01 00 01 F0 99 00 F7 41 4D 44 49  // H...!.......AMDI
    0130: 30 30 34 31 00 00 00 00 00 00 00 00 00 00        // 0041..........


MCFG
----
[000h 0000 004h]                   Signature : "MCFG"    [Memory Mapped Configuration Table]
[004h 0004 004h]                Table Length : 0000003C
[008h 0008 001h]                    Revision : 01
[009h 0009 001h]                    Checksum : FA
[00Ah 0010 006h]                      Oem ID : "LENOVO"
[010h 0016 008h]                Oem Table ID : "CB-01   "
[018h 0024 004h]                Oem Revision : 00000001
[01Ch 0028 004h]             Asl Compiler ID : "PTEC"
[020h 0032 004h]       Asl Compiler Revision : 00000002

[024h 0036 008h]                    Reserved : 0000000000000000

[02Ch 0044 008h]                Base Address : 00000000F8000000
[034h 0052 002h]        Segment Group Number : 0000
[036h 0054 001h]            Start Bus Number : 00
[037h 0055 001h]              End Bus Number : 3F
[038h 0056 004h]                    Reserved : 00000000

Raw Table Data: Length 60 (0x3C)

    0000: 4D 43 46 47 3C 00 00 00 01 FA 4C 45 4E 4F 56 4F  // MCFG<.....LENOVO
    0010: 43 42 2D 30 31 20 20 20 01 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 F8  // ................
    0030: 00 00 00 00 00 00 00 3F 00 00 00 00              // .......?....


MSDM
----
[000h 0000 004h]                   Signature : "MSDM"    [Microsoft Data Management Table]
[004h 0004 004h]                Table Length : 00000055
[008h 0008 001h]                    Revision : 03
[009h 0009 001h]                    Checksum : 8A
[00Ah 0010 006h]                      Oem ID : "LENOVO"
[010h 0016 008h]                Oem Table ID : "CB-01   "
[018h 0024 004h]                Oem Revision : 00000000
[01Ch 0028 004h]             Asl Compiler ID : "PTEC"
[020h 0032 004h]       Asl Compiler Revision : 00000002

[024h 0036 031h] Software Licensing Structure : 4D 53 44 4D 55 00 00 00 03 8A 4C 45 4E 4F 56 4F /* MSDMU.....LENOVO */\
/* 034h 0052  16 */                            43 42 2D 30 31 20 20 20 00 00 00 00 50 54 45 43 /* CB-01   ....PTEC */\
/* 044h 0068  16 */                            02 00 00 00 01 00 00 00 00 00 00 00 01 00 00 00 /* ................ */\
/* 054h 0084   1 */                            00                                              /* . */\

Raw Table Data: Length 85 (0x55)

    0000: 4D 53 44 4D 55 00 00 00 03 8A 4C 45 4E 4F 56 4F  // MSDMU.....LENOVO
    0010: 43 42 2D 30 31 20 20 20 00 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 01 00 00 00 00 00 00 00 01 00 00 00  // ................
    0030: 00 00 00 00 1D 00 00 00 43 38 32 44 58 2D 4D 4E  // ........C82DX-MN
    0040: 56 37 33 2D 56 59 33 33 51 2D 56 33 57 34 56 2D  // V73-VY33Q-V3W4V-
    0050: 32 52 34 38 42                                   // 2R48B


SBST
----
[000h 0000 004h]                   Signature : "SBST"    [Smart Battery Specification Table]
[004h 0004 004h]                Table Length : 00000030
[008h 0008 001h]                    Revision : 01
[009h 0009 001h]                    Checksum : 0F
[00Ah 0010 006h]                      Oem ID : "LENOVO"
[010h 0016 008h]                Oem Table ID : "CB-01   "
[018h 0024 004h]                Oem Revision : 00000001
[01Ch 0028 004h]             Asl Compiler ID : "PTEC"
[020h 0032 004h]       Asl Compiler Revision : 00000002

[024h 0036 004h]               Warning Level : 00000005
[028h 0040 004h]                   Low Level : 00000005
[02Ch 0044 004h]              Critical Level : 00000005

Raw Table Data: Length 48 (0x30)

    0000: 53 42 53 54 30 00 00 00 01 0F 4C 45 4E 4F 56 4F  // SBST0.....LENOVO
    0010: 43 42 2D 30 31 20 20 20 01 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 05 00 00 00 05 00 00 00 05 00 00 00  // ................


SSDT1
-----
DefinitionBlock ("", "SSDT", 1, "LENOVO", "AMD CPU", 0x00000001)
{
    External (_PR_.C000, DeviceObj)
    External (_PR_.C001, DeviceObj)
    External (_PR_.C002, DeviceObj)
    External (_PR_.C003, DeviceObj)

    Scope (\_PR.C000)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000004B0, 
                0x000005B6, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000320, 
                0x000002F8, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000190, 
                0x0000016D, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x000004B0, 
                0x000005B6, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000320, 
                0x000002F8, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000190, 
                0x0000016D, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C000.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C001)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000004B0, 
                0x000005B6, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000320, 
                0x000002F8, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000190, 
                0x0000016D, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x000004B0, 
                0x000005B6, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000320, 
                0x000002F8, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000190, 
                0x0000016D, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C001.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000000, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C002)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000004B0, 
                0x000005B6, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000320, 
                0x000002F8, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000190, 
                0x0000016D, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x000004B0, 
                0x000005B6, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000320, 
                0x000002F8, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000190, 
                0x0000016D, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000001, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C002.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000001, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }

    Scope (\_PR.C003)
    {
        Name (_PCT, Package (0x02)  // _PCT: Performance Control
        {
            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000C0010062, // Address
                    ,)
            }, 

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }
        })
        Name (_PSS, Package (0x03)  // _PSS: Performance Supported States
        {
            Package (0x06)
            {
                0x000004B0, 
                0x000005B6, 
                0x00000000, 
                0x00000000, 
                0x00000000, 
                0x00000000
            }, 

            Package (0x06)
            {
                0x00000320, 
                0x000002F8, 
                0x00000000, 
                0x00000000, 
                0x00000001, 
                0x00000001
            }, 

            Package (0x06)
            {
                0x00000190, 
                0x0000016D, 
                0x00000000, 
                0x00000000, 
                0x00000002, 
                0x00000002
            }
        })
        Name (XPSS, Package (0x03)
        {
            Package (0x08)
            {
                0x000004B0, 
                0x000005B6, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000320, 
                0x000002F8, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }, 

            Package (0x08)
            {
                0x00000190, 
                0x0000016D, 
                0x00000000, 
                0x00000000, 
                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }, 

                Buffer (0x08)
                {
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            }
        })
        Name (_PSD, Package (0x01)  // _PSD: Power State Dependencies
        {
            Package (0x05)
            {
                0x05, 
                0x00, 
                0x00000001, 
                0x000000FE, 
                0x00000002
            }
        })
        Name (PPCV, 0x00)
        Method (_PPC, 0, NotSerialized)  // _PPC: Performance Present Capabilities
        {
            Return (PPCV) /* \_PR_.C003.PPCV */
        }

        Name (_CST, Package (0x03)  // _CST: C-States
        {
            0x02, 
            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (FFixedHW, 
                        0x02,               // Bit Width
                        0x02,               // Bit Offset
                        0x0000000000000000, // Address
                        ,)
                }, 

                0x01, 
                0x0001, 
                0x00000000
            }, 

            Package (0x04)
            {
                ResourceTemplate ()
                {
                    Register (SystemIO, 
                        0x08,               // Bit Width
                        0x00,               // Bit Offset
                        0x0000000000000414, // Address
                        0x01,               // Access Size
                        )
                }, 

                0x02, 
                0x0190, 
                0x00000000
            }
        })
        Name (_CSD, Package (0x01)  // _CSD: C-State Dependencies
        {
            Package (0x06)
            {
                0x06, 
                0x00, 
                0x00000001, 
                0x000000FE, 
                0x00000002, 
                0x00000000
            }
        })
    }
}



SSDT2
-----
DefinitionBlock ("", "SSDT", 2, "LENOVO", "AmdTable", 0x00000002)
{
    Scope (\_SB)
    {
        Name (AGRB, 0xF8000000)
        Name (ADBG, Buffer (0x0100){})
        Name (ADAT, Buffer (0x0520)
        {
            /* 0000 */  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0020 */  0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00,  // ........
            /* 0028 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,  // ........
            /* 0038 */  0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x07, 0x01,  // ........
            /* 0040 */  0x00, 0x01, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0048 */  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x04,  // ........
            /* 0050 */  0x04, 0xFF, 0xFF, 0x02, 0x00, 0x01, 0x06, 0x00,  // ........
            /* 0058 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,  // ........
            /* 0060 */  0x00, 0x00, 0x00, 0x05, 0x05, 0xFF, 0xFF, 0x03,  // ........
            /* 0068 */  0x03, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0070 */  0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00,  // ........
            /* 0078 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0080 */  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,  // ........
            /* 0088 */  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0090 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0098 */  0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00,  // ........
            /* 00A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00A8 */  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,  // ........
            /* 00B0 */  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 00F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0100 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0108 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0110 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0118 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0120 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0128 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0130 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0138 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0140 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0148 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0150 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0158 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0160 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0168 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0170 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0178 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0180 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0188 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0190 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0198 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 01F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0200 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0208 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0210 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0218 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0220 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0228 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0230 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0238 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0240 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0248 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0250 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0258 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0260 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0268 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0270 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0278 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0280 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0288 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0290 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0298 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 02F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0300 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0308 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0310 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0318 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0320 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0328 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0330 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0338 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0340 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0348 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0350 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0358 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0360 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0368 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0370 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0378 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0380 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0388 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0390 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0398 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 03F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0400 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0408 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0410 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0418 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0420 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0428 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0430 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0438 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0440 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0448 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0450 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0458 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0460 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0468 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0470 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0478 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0480 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0488 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0490 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0498 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04D8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 04F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0500 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0508 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0510 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0518 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
        })
        Method (ALIB, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                CreateWordField (Arg1, 0x00, A014)
                CreateWordField (Arg1, 0x02, A015)
                CreateDWordField (Arg1, 0x04, A016)
                Local0 = Buffer (0x0100){}
                CreateWordField (Local0, 0x00, A017)
                A017 = A014 /* \_SB_.ALIB.A014 */
                CreateWordField (Local0, 0x02, A018)
                A018 = A015 /* \_SB_.ALIB.A015 */
                CreateDWordField (Local0, 0x04, A019)
                A019 = A016 /* \_SB_.ALIB.A016 */
                A019 &= ~0x0F
                If ((DerefOf (\_SB.ADAT [0x00]) > 0x00))
                {
                    Local1 = 0x0F
                }
                Else
                {
                    Local1 = 0x01
                }

                A019 |= Local1
                Return (Local0)
            }

            If ((Arg0 == 0x01))
            {
                Local0 = DerefOf (Arg1 [0x02])
                Return (A020 (Local0))
            }

            If ((Arg0 == 0x02))
            {
                Local0 = Buffer (0x0100)
                    {
                         0x03, 0x00, 0x00                                 // ...
                    }
                Return (Local0)
            }

            If ((Arg0 == 0x03))
            {
                Local0 = Buffer (0x0100)
                    {
                         0x03, 0x00, 0x00                                 // ...
                    }
                Return (Local0)
            }

            If ((Arg0 == 0x06))
            {
                Local0 = DerefOf (Arg1 [0x04])
                Local1 = DerefOf (Arg1 [0x02])
                Return (A023 (Local0, Local1))
            }

            If ((Arg0 == 0x0A))
            {
                Local0 = DerefOf (Arg1 [0x02])
                Return (A024 (Local0))
            }

            If ((Arg0 == 0x0B))
            {
                Local0 = DerefOf (Arg1 [0x02])
                Local1 = DerefOf (Arg1 [0x03])
                Local2 = DerefOf (Arg1 [0x04])
                Local2 |= (DerefOf (Arg1 [0x05]) << 0x08)
                Local2 |= (DerefOf (Arg1 [0x06]) << 0x10)
                Local2 |= (DerefOf (Arg1 [0x07]) << 0x18)
                Local3 = DerefOf (Arg1 [0x08])
                Local3 |= (DerefOf (Arg1 [0x09]) << 0x08)
                Local3 |= (DerefOf (Arg1 [0x0A]) << 0x10)
                Local3 |= (DerefOf (Arg1 [0x0B]) << 0x18)
                Local4 = DerefOf (Arg1 [0x0C])
                Local4 |= (DerefOf (Arg1 [0x0D]) << 0x08)
                Local4 |= (DerefOf (Arg1 [0x0E]) << 0x10)
                Local4 |= (DerefOf (Arg1 [0x0F]) << 0x18)
                Return (A025 (Local0, Local1, Local2, Local3, Local4))
            }

            If ((Arg0 == 0x0C))
            {
                A026 (Arg1)
            }

            If ((Arg0 == 0x10))
            {
                Local7 = Buffer (0x18){}
                CreateDWordField (Local7, 0x00, A027)
                CreateDWordField (Local7, 0x04, A028)
                CreateDWordField (Local7, 0x08, A029)
                CreateDWordField (Local7, 0x0C, A030)
                CreateDWordField (Local7, 0x10, A031)
                CreateDWordField (Local7, 0x14, A032)
                A027 = 0x00
                A028 = 0x00
                A029 = 0x00
                A030 = 0x00
                A031 = 0x00
                A032 = 0x00
                A012 (0x51, Local7)
            }

            If ((Arg0 == 0x11))
            {
                Local6 = Buffer (0x18){}
                CreateDWordField (Local6, 0x00, A006)
                CreateDWordField (Local6, 0x04, A007)
                CreateDWordField (Local6, 0x08, A008)
                CreateDWordField (Local6, 0x0C, A009)
                CreateDWordField (Local6, 0x10, A010)
                CreateDWordField (Local6, 0x14, A011)
                A006 = 0x00
                A007 = 0x00
                A008 = 0x00
                A009 = 0x00
                A010 = 0x00
                A011 = 0x00
                A012 (0x52, Local6)
            }

            Return (0x00)
        }

        Method (A023, 2, NotSerialized)
        {
            Local0 = 0x00
            While ((Local0 < 0x07))
            {
                Local1 = A084 (Local0, Arg1)
                If ((Local1 == 0x01))
                {
                    Local2 = A085 (Local0, Arg0)
                    Break
                }

                Local0++
            }

            Local7 = Buffer (0x0A){}
            CreateWordField (Local7, 0x00, A017)
            CreateByteField (Local7, 0x02, A034)
            CreateByteField (Local7, 0x03, A086)
            A017 = 0x04
            A034 = 0x00
            If ((Local2 == 0x00))
            {
                A086 = 0x00
            }
            Else
            {
                A086 = 0x01
            }

            Return (Local7)
        }

        Method (A084, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A079 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A079 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A079 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A079 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A079 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A079 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A079 (Arg1))
            }
        }

        Method (A085, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A080 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A080 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A080 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A080 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A080 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A080 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A080 (Arg1))
            }
        }

        Name (AD00, 0x00)
        Name (DK00, 0x00)
        Method (A020, 1, NotSerialized)
        {
            AD00 = Arg0
            A005 ()
        }

        Method (A024, 1, NotSerialized)
        {
            DK00 = Arg0
        }

        Method (A025, 5, NotSerialized)
        {
        }

        Name (AP01, 0x00)
        Name (AP02, 0x00)
        Name (AP03, 0x00)
        Name (AP05, 0x00)
        Name (AP0B, 0xFF)
        Name (AP10, 0x00)
        Method (A033, 1, NotSerialized)
        {
            Local7 = Buffer (0x0100){}
            CreateWordField (Local7, 0x00, A017)
            A017 = 0x03
            CreateByteField (Local7, 0x02, A034)
            A034 = 0x01
            If ((DerefOf (\_SB.ADAT [0x00]) == 0x01))
            {
                A034 = 0x02
                Return (Local7)
            }

            If ((DerefOf (\_SB.ADAT [0x00]) == 0x00))
            {
                A034 = 0x01
                Return (Local7)
            }

            A035 (Arg0)
            If ((AP05 != 0x01))
            {
                Return (Local7)
            }

            A036 ()
            A034 = 0x02
            Return (Local7)
        }

        Method (A037, 0, NotSerialized)
        {
            If ((DerefOf (\_SB.ADAT [0x00]) <= 0x01))
            {
                Return (0x00)
            }

            If ((AP05 != 0x01))
            {
                Return (0x00)
            }

            A036 ()
        }

        Method (A038, 1, NotSerialized)
        {
            If ((Arg0 == 0x03))
            {
                AP01 = 0x00
            }
        }

        Method (A039, 1, NotSerialized)
        {
            AP10 = 0x01
        }

        Method (A040, 1, NotSerialized)
        {
            AP05 = Arg0
            If ((DerefOf (\_SB.ADAT [0x00]) <= 0x01))
            {
                Return (0x00)
            }

            Local1 = AP0B /* \_SB_.AP0B */
            If ((AP05 == 0x00))
            {
                Local0 = 0x00
                While ((Local0 < 0x07))
                {
                    A041 (Local0)
                    Local0++
                }

                AP0B = 0x00
            }

            A036 ()
            AP0B = Local1
            Local7 = Buffer (0x0100){}
            Local7 [0x00] = 0x03
            Local7 [0x01] = 0x00
            Local7 [0x02] = 0x00
            Return (Local7)
        }

        Method (A042, 0, NotSerialized)
        {
            If ((AP0B != 0xFF))
            {
                Return (AP0B) /* \_SB_.AP0B */
            }

            Return (AD00) /* \_SB_.AD00 */
        }

        Method (A035, 1, NotSerialized)
        {
            CreateWordField (Arg0, 0x02, AP06)
            CreateWordField (Arg0, 0x04, AP07)
            CreateWordField (Arg0, 0x06, AP08)
            CreateByteField (Arg0, 0x08, AP09)
            CreateByteField (Arg0, 0x09, AP0A)
            Local0 = 0x00
            While ((Local0 < 0x07))
            {
                If ((A043 (Local0, AP06) == 0x01))
                {
                    If (((AP07 & AP08) == 0x01))
                    {
                        Local1 = A044 (Local0)
                        A045 (Local0, Local1)
                    }
                    Else
                    {
                        A045 (Local0, AP0A)
                    }

                    Break
                }

                Local0++
            }
        }

        Method (A046, 0, NotSerialized)
        {
            AP02 = 0x01
            Local0 = 0x00
            While ((Local0 < 0x07))
            {
                Local1 = A047 (Local0)
                If ((Local1 > AP02))
                {
                    AP02 = Local1
                }

                Local0++
            }
        }

        Method (A048, 0, NotSerialized)
        {
            AP03 = 0x00
            Local0 = 0x00
            While ((Local0 < 0x07))
            {
                Local1 = A049 (Local0)
                If ((Local1 > AP03))
                {
                    AP03 = Local1
                }

                Local0++
            }
        }

        Method (A036, 0, NotSerialized)
        {
            A048 ()
            A046 ()
            If ((AP02 != AP01))
            {
                A013 (AP02, AP01)
            }

            If ((AP02 > AP01))
            {
                AP01 = AP02 /* \_SB_.AP02 */
            }

            Local0 = 0x00
            While ((Local0 < 0x07))
            {
                Local1 = A047 (Local0)
                Local2 = A050 (Local0)
                If ((Local1 != Local2))
                {
                    A051 (Local0, Local1)
                }
                ElseIf ((AP10 == 0x01))
                {
                    A051 (Local0, Local1)
                }

                Local0++
            }

            If ((AP02 < AP01))
            {
                AP01 = AP02 /* \_SB_.AP02 */
            }
            ElseIf ((AP10 == 0x01))
            {
                AP01 = AP02 /* \_SB_.AP02 */
            }

            AP10 = 0x00
        }

        Method (A051, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A052 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A052 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A052 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A052 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A052 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A052 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A052 (Arg1))
            }
        }

        Method (A050, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A053 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A053 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A053 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A053 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A053 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A053 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A053 ())
            }
        }

        Method (A047, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A054 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A054 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A054 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A054 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A054 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A054 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A054 ())
            }
        }

        Method (A049, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A055 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A055 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A055 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A055 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A055 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A055 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A055 ())
            }
        }

        Method (A044, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A056 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A056 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A056 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A056 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A056 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A056 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A056 ())
            }
        }

        Method (A045, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A057 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A057 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A057 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A057 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A057 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A057 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A057 (Arg1))
            }
        }

        Method (A043, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A058 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A058 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A058 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A058 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A058 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A058 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A058 (Arg1))
            }
        }

        Method (A041, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A059 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A059 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A059 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A059 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A059 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A059 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A059 ())
            }
        }

        OperationRegion (A111, SystemMemory, AGRB, 0x1000)
        Field (A111, DWordAcc, Lock, Preserve)
        {
            Offset (0xB8), 
            A112,   32
        }

        BankField (A111, A112, 0x03B10528, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A109,   32
        }

        BankField (A111, A112, 0x03B10564, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A103,   32
        }

        BankField (A111, A112, 0x03B10998, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A071,   32
        }

        BankField (A111, A112, 0x03B1099C, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A104,   32
        }

        BankField (A111, A112, 0x03B109A0, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A105,   32
        }

        BankField (A111, A112, 0x03B109A4, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A106,   32
        }

        BankField (A111, A112, 0x03B109A8, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A107,   32
        }

        BankField (A111, A112, 0x03B109AC, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A108,   32
        }

        BankField (A111, A112, 0x13B00084, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A089,   32
        }

        BankField (A111, A112, 0x11140280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A090,   32
        }

        BankField (A111, A112, 0x11141280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A091,   32
        }

        BankField (A111, A112, 0x11142280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A092,   32
        }

        BankField (A111, A112, 0x11143280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A093,   32
        }

        BankField (A111, A112, 0x11144280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A094,   32
        }

        BankField (A111, A112, 0x11145280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A095,   32
        }

        BankField (A111, A112, 0x11146280, DWordAcc, Lock, Preserve)
        {
            Offset (0xBC), 
            A096,   32
        }

        Method (A087, 2, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A067 (Arg1))
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A067 (Arg1))
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A067 (Arg1))
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A067 (Arg1))
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A067 (Arg1))
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A067 (Arg1))
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A067 (Arg1))
            }
        }

        Method (A088, 2, NotSerialized)
        {
            If ((Arg1 == 0x01))
            {
                If ((Arg0 == 0x00))
                {
                    Local0 = 0x00090300
                }

                If ((Arg0 == 0x01))
                {
                    Local0 = 0x000A0300
                }

                If ((Arg0 == 0x02))
                {
                    Local0 = 0x000B0300
                }

                If ((Arg0 == 0x03))
                {
                    Local0 = 0x000C0300
                }

                If ((Arg0 == 0x04))
                {
                    Local0 = 0x000D0300
                }

                If ((Arg0 == 0x05))
                {
                    Local0 = 0x000E0300
                }

                If ((Arg0 == 0x06))
                {
                    Local0 = 0x000F0300
                }

                Local1 = A089 /* \_SB_.A089 */
                Local1 &= 0xFF00FCFF
                A089 = (Local0 | Local1)
                Local1 = A089 /* \_SB_.A089 */
                A089 = (0xFFFFFDFF & Local1)
            }
            ElseIf ((Arg1 == 0x00))
            {
                If ((Arg0 == 0x00))
                {
                    Local1 = A090 /* \_SB_.A090 */
                    A090 = (0x00400000 | Local1)
                    Local1 = A090 /* \_SB_.A090 */
                    A090 = (0xFFBFFFFF & Local1)
                }

                If ((Arg0 == 0x01))
                {
                    Local1 = A091 /* \_SB_.A091 */
                    A091 = (0x00400000 | Local1)
                    Local1 = A091 /* \_SB_.A091 */
                    A091 = (0xFFBFFFFF & Local1)
                }

                If ((Arg0 == 0x02))
                {
                    Local1 = A092 /* \_SB_.A092 */
                    A092 = (0x00400000 | Local1)
                    Local1 = A092 /* \_SB_.A092 */
                    A092 = (0xFFBFFFFF & Local1)
                }

                If ((Arg0 == 0x03))
                {
                    Local1 = A093 /* \_SB_.A093 */
                    A093 = (0x00400000 | Local1)
                    Local1 = A093 /* \_SB_.A093 */
                    A093 = (0xFFBFFFFF & Local1)
                }

                If ((Arg0 == 0x04))
                {
                    Local1 = A094 /* \_SB_.A094 */
                    A094 = (0x00400000 | Local1)
                    Local1 = A094 /* \_SB_.A094 */
                    A094 = (0xFFBFFFFF & Local1)
                }

                If ((Arg0 == 0x05))
                {
                    Local1 = A095 /* \_SB_.A095 */
                    A095 = (0x00400000 | Local1)
                    Local1 = A095 /* \_SB_.A095 */
                    A095 = (0xFFBFFFFF & Local1)
                }

                If ((Arg0 == 0x06))
                {
                    Local1 = A096 /* \_SB_.A096 */
                    A096 = (0x00400000 | Local1)
                    Local1 = A096 /* \_SB_.A096 */
                    A096 = (0xFFBFFFFF & Local1)
                }
            }
        }

        Method (A004, 2, NotSerialized)
        {
            Local0 = 0x00
            While ((Local0 < 0x07))
            {
                Local1 = A087 (Local0, Arg1)
                If ((Local1 == 0x01))
                {
                    A088 (Local0, Arg1)
                    Break
                }

                Local0++
            }
        }

        Method (A012, 2, Serialized)
        {
            CreateDWordField (Arg1, 0x00, A097)
            CreateDWordField (Arg1, 0x04, A098)
            CreateDWordField (Arg1, 0x08, A099)
            CreateDWordField (Arg1, 0x0C, A100)
            CreateDWordField (Arg1, 0x10, A101)
            CreateDWordField (Arg1, 0x14, A102)
            A103 = 0x00
            While ((A103 != 0x00)){}
            A071 = A097 /* \_SB_.A012.A097 */
            A104 = A098 /* \_SB_.A012.A098 */
            A105 = A099 /* \_SB_.A012.A099 */
            A106 = A100 /* \_SB_.A012.A100 */
            A107 = A101 /* \_SB_.A012.A101 */
            A108 = A102 /* \_SB_.A012.A102 */
            A109 = Arg0
            While ((A103 == 0x00)){}
        }

        Method (A082, 5, NotSerialized)
        {
            Local7 = Buffer (0x18){}
            CreateDWordField (Local7, 0x00, A006)
            CreateDWordField (Local7, 0x04, A007)
            CreateDWordField (Local7, 0x08, A008)
            CreateDWordField (Local7, 0x0C, A009)
            CreateDWordField (Local7, 0x10, A010)
            CreateDWordField (Local7, 0x14, A011)
            A006 = Arg0
            A007 = Arg1
            A008 = Arg2
            A009 = Arg3
            A012 (0x0A, Local7)
        }

        Method (A026, 1, Serialized)
        {
            CreateWordField (Arg0, 0x00, A110)
            Local7 = Buffer (0x18){}
            CreateDWordField (Local7, 0x00, A006)
            CreateDWordField (Local7, 0x04, A007)
            CreateDWordField (Local7, 0x08, A008)
            CreateDWordField (Local7, 0x0C, A009)
            CreateDWordField (Local7, 0x10, A010)
            CreateDWordField (Local7, 0x14, A011)
            Local0 = 0x02
            While ((Local0 < A110))
            {
                Local1 = DerefOf (Arg0 [Local0])
                Local0++
                Local2 = DerefOf (Arg0 [Local0])
                Local0++
                Local2 |= (DerefOf (Arg0 [Local0]) << 0x08)
                Local0++
                Local2 |= (DerefOf (Arg0 [Local0]) << 0x10)
                Local0++
                Local2 |= (DerefOf (Arg0 [Local0]) << 0x18)
                Local0++
                A006 = 0x00
                A007 = 0x00
                A008 = 0x00
                A009 = 0x00
                A010 = 0x00
                A011 = 0x00
                If ((Local1 == 0x01))
                {
                    A006 = Local2
                    A012 (0x1E, Local7)
                }

                If ((Local1 == 0x03))
                {
                    A006 = Local2
                    A012 (0x1F, Local7)
                }

                If ((Local1 == 0x05))
                {
                    A006 = Local2
                    A012 (0x1A, Local7)
                }

                If ((Local1 == 0x06))
                {
                    A006 = Local2
                    A012 (0x1B, Local7)
                }

                If ((Local1 == 0x07))
                {
                    A006 = Local2
                    A012 (0x1C, Local7)
                }

                If ((Local1 == 0x08))
                {
                    A006 = Local2
                    A012 (0x1D, Local7)
                }

                If ((Local1 == 0x09))
                {
                    A006 = Local2
                    A012 (0x26, Local7)
                }

                If ((Local1 == 0x0A))
                {
                    A006 = Local2
                    A012 (0x27, Local7)
                }

                If ((Local1 == 0x0B))
                {
                    A006 = Local2
                    A012 (0x20, Local7)
                }

                If ((Local1 == 0x0C))
                {
                    A006 = Local2
                    A012 (0x22, Local7)
                }

                If ((Local1 == 0x0D))
                {
                    A006 = Local2
                    A012 (0x24, Local7)
                }

                If ((Local1 == 0x0F))
                {
                    A006 = Local2
                    A012 (0x25, Local7)
                }

                If ((DerefOf (\_SB.ADAT [0x08]) == 0x01))
                {
                    If ((Local1 == 0x10))
                    {
                        If ((Local2 == 0x00))
                        {
                            A012 (0x2B, Local7)
                        }
                        Else
                        {
                            A012 (0x2A, Local7)
                        }
                    }
                }
            }
        }

        Device (AWR0)
        {
            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
            Name (_UID, 0x90)  // _UID: Unique ID
            Device (ABR0)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x80)  // _UID: Unique ID
                Name (AB12, 0x20)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A072, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A072, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A065,   8, 
                    A066,   8, 
                    Offset (0x68), 
                    A073,   2, 
                        ,   2, 
                    A074,   1, 
                    A075,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A076,   1, 
                    Offset (0x88), 
                    A077,   4, 
                        ,   1, 
                    A078,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A060, 0, NotSerialized)
                {
                    Local0 = A042 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR0.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR0.AB0E */
                    }
                }

                Method (A055, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR0.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A054, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR0.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR0.AB0E */
                    }

                    Local0 = A061 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR0.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A060 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A053, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR0.AB02 */
                }

                Method (A056, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR0.AB00 */
                }

                Method (A052, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A062 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A063 (0x00)
                    Name (A064, 0x00)
                    A063 (0x01)
                }

                Method (A057, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A058, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A065) && (Local0 <= A066)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A067, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A059, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A062, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A068, 0, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A069 (Local0, 0x00)
                    Local2 = A069 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A069 (0x00, Local0)
                                    Local5 = 0x00
                                    If (((Local4 && 0x09) == 0x00))
                                    {
                                        If (((Local4 && 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A069 (0x00, Local0)
                                        }

                                        A070 (0x34, Local3, 0x00)
                                        Local6 = A071 /* \_SB_.A071 */
                                        If ((Local6 == 0x01))
                                        {
                                            A070 (0x28, (Local4 & 0xFFFFFFF0), 0x00)
                                            A070 (0x29, Local5, 0x00)
                                            A070 (0x05, 0x00, (0x01 << 0x0A))
                                            A070 (0x2A, 0x00, 0x00)
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A083, 2, NotSerialized)
                {
                    If ((A069 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A069 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A069 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A063, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A069 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A069 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A083 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A069 (Local0, (Local1 + 0x10))
                                A081 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A081 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A081, 3, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A069, 2, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR0.A069.ADRR */
                }

                Method (A079, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A067 (Arg0))
                }

                Method (A080, 1, NotSerialized)
                {
                    Name (A064, 0x00)
                    Local2 = 0x00
                    A064 = A073 /* \_SB_.AWR0.ABR0.A073 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A074 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A063 (0x00)
                        Local0 = A069 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A081 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A069 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A081 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A074 = 0x01
                        Local0 = 0x05
                    }

                    A073 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A082 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A069 (0x00, 0x00)
                            A082 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A073 = A064 /* \_SB_.AWR0.ABR0.A080.A064 */
                    If ((A064 != 0x00))
                    {
                        A063 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR1)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x81)  // _UID: Unique ID
                Name (AB12, 0x34)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A072, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A072, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A065,   8, 
                    A066,   8, 
                    Offset (0x68), 
                    A073,   2, 
                        ,   2, 
                    A074,   1, 
                    A075,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A076,   1, 
                    Offset (0x88), 
                    A077,   4, 
                        ,   1, 
                    A078,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A060, 0, NotSerialized)
                {
                    Local0 = A042 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR1.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR1.AB0E */
                    }
                }

                Method (A055, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR1.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A054, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR1.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR1.AB0E */
                    }

                    Local0 = A061 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR1.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A060 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A053, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR1.AB02 */
                }

                Method (A056, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR1.AB00 */
                }

                Method (A052, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A062 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A063 (0x00)
                    Name (A064, 0x00)
                    A063 (0x01)
                }

                Method (A057, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A058, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A065) && (Local0 <= A066)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A067, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A059, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A062, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A068, 0, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A069 (Local0, 0x00)
                    Local2 = A069 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A069 (0x00, Local0)
                                    Local5 = 0x00
                                    If (((Local4 && 0x09) == 0x00))
                                    {
                                        If (((Local4 && 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A069 (0x00, Local0)
                                        }

                                        A070 (0x34, Local3, 0x00)
                                        Local6 = A071 /* \_SB_.A071 */
                                        If ((Local6 == 0x01))
                                        {
                                            A070 (0x28, (Local4 & 0xFFFFFFF0), 0x00)
                                            A070 (0x29, Local5, 0x00)
                                            A070 (0x05, 0x00, (0x01 << 0x0A))
                                            A070 (0x2A, 0x00, 0x00)
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A083, 2, NotSerialized)
                {
                    If ((A069 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A069 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A069 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A063, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A069 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A069 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A083 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A069 (Local0, (Local1 + 0x10))
                                A081 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A081 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A081, 3, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A069, 2, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR1.A069.ADRR */
                }

                Method (A079, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A067 (Arg0))
                }

                Method (A080, 1, NotSerialized)
                {
                    Name (A064, 0x00)
                    Local2 = 0x00
                    A064 = A073 /* \_SB_.AWR0.ABR1.A073 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A074 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A063 (0x00)
                        Local0 = A069 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A081 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A069 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A081 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A074 = 0x01
                        Local0 = 0x05
                    }

                    A073 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A082 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A069 (0x00, 0x00)
                            A082 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A073 = A064 /* \_SB_.AWR0.ABR1.A080.A064 */
                    If ((A064 != 0x00))
                    {
                        A063 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR2)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x82)  // _UID: Unique ID
                Name (AB12, 0x48)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A072, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A072, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A065,   8, 
                    A066,   8, 
                    Offset (0x68), 
                    A073,   2, 
                        ,   2, 
                    A074,   1, 
                    A075,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A076,   1, 
                    Offset (0x88), 
                    A077,   4, 
                        ,   1, 
                    A078,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A060, 0, NotSerialized)
                {
                    Local0 = A042 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR2.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR2.AB0E */
                    }
                }

                Method (A055, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR2.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A054, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR2.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR2.AB0E */
                    }

                    Local0 = A061 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR2.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A060 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A053, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR2.AB02 */
                }

                Method (A056, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR2.AB00 */
                }

                Method (A052, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A062 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A063 (0x00)
                    Name (A064, 0x00)
                    A063 (0x01)
                }

                Method (A057, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A058, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A065) && (Local0 <= A066)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A067, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A059, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A062, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A068, 0, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A069 (Local0, 0x00)
                    Local2 = A069 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A069 (0x00, Local0)
                                    Local5 = 0x00
                                    If (((Local4 && 0x09) == 0x00))
                                    {
                                        If (((Local4 && 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A069 (0x00, Local0)
                                        }

                                        A070 (0x34, Local3, 0x00)
                                        Local6 = A071 /* \_SB_.A071 */
                                        If ((Local6 == 0x01))
                                        {
                                            A070 (0x28, (Local4 & 0xFFFFFFF0), 0x00)
                                            A070 (0x29, Local5, 0x00)
                                            A070 (0x05, 0x00, (0x01 << 0x0A))
                                            A070 (0x2A, 0x00, 0x00)
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A083, 2, NotSerialized)
                {
                    If ((A069 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A069 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A069 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A063, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A069 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A069 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A083 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A069 (Local0, (Local1 + 0x10))
                                A081 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A081 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A081, 3, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A069, 2, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR2.A069.ADRR */
                }

                Method (A079, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A067 (Arg0))
                }

                Method (A080, 1, NotSerialized)
                {
                    Name (A064, 0x00)
                    Local2 = 0x00
                    A064 = A073 /* \_SB_.AWR0.ABR2.A073 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A074 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A063 (0x00)
                        Local0 = A069 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A081 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A069 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A081 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A074 = 0x01
                        Local0 = 0x05
                    }

                    A073 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A082 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A069 (0x00, 0x00)
                            A082 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A073 = A064 /* \_SB_.AWR0.ABR2.A080.A064 */
                    If ((A064 != 0x00))
                    {
                        A063 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR3)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x83)  // _UID: Unique ID
                Name (AB12, 0x5C)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A072, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A072, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A065,   8, 
                    A066,   8, 
                    Offset (0x68), 
                    A073,   2, 
                        ,   2, 
                    A074,   1, 
                    A075,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A076,   1, 
                    Offset (0x88), 
                    A077,   4, 
                        ,   1, 
                    A078,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A060, 0, NotSerialized)
                {
                    Local0 = A042 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR3.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR3.AB0E */
                    }
                }

                Method (A055, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR3.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A054, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR3.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR3.AB0E */
                    }

                    Local0 = A061 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR3.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A060 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A053, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR3.AB02 */
                }

                Method (A056, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR3.AB00 */
                }

                Method (A052, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A062 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A063 (0x00)
                    Name (A064, 0x00)
                    A063 (0x01)
                }

                Method (A057, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A058, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A065) && (Local0 <= A066)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A067, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A059, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A062, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A068, 0, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A069 (Local0, 0x00)
                    Local2 = A069 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A069 (0x00, Local0)
                                    Local5 = 0x00
                                    If (((Local4 && 0x09) == 0x00))
                                    {
                                        If (((Local4 && 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A069 (0x00, Local0)
                                        }

                                        A070 (0x34, Local3, 0x00)
                                        Local6 = A071 /* \_SB_.A071 */
                                        If ((Local6 == 0x01))
                                        {
                                            A070 (0x28, (Local4 & 0xFFFFFFF0), 0x00)
                                            A070 (0x29, Local5, 0x00)
                                            A070 (0x05, 0x00, (0x01 << 0x0A))
                                            A070 (0x2A, 0x00, 0x00)
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A083, 2, NotSerialized)
                {
                    If ((A069 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A069 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A069 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A063, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A069 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A069 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A083 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A069 (Local0, (Local1 + 0x10))
                                A081 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A081 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A081, 3, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A069, 2, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR3.A069.ADRR */
                }

                Method (A079, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A067 (Arg0))
                }

                Method (A080, 1, NotSerialized)
                {
                    Name (A064, 0x00)
                    Local2 = 0x00
                    A064 = A073 /* \_SB_.AWR0.ABR3.A073 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A074 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A063 (0x00)
                        Local0 = A069 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A081 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A069 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A081 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A074 = 0x01
                        Local0 = 0x05
                    }

                    A073 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A082 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A069 (0x00, 0x00)
                            A082 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A073 = A064 /* \_SB_.AWR0.ABR3.A080.A064 */
                    If ((A064 != 0x00))
                    {
                        A063 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR4)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x84)  // _UID: Unique ID
                Name (AB12, 0x70)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A072, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A072, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A065,   8, 
                    A066,   8, 
                    Offset (0x68), 
                    A073,   2, 
                        ,   2, 
                    A074,   1, 
                    A075,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A076,   1, 
                    Offset (0x88), 
                    A077,   4, 
                        ,   1, 
                    A078,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A060, 0, NotSerialized)
                {
                    Local0 = A042 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR4.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR4.AB0E */
                    }
                }

                Method (A055, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR4.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A054, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR4.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR4.AB0E */
                    }

                    Local0 = A061 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR4.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A060 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A053, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR4.AB02 */
                }

                Method (A056, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR4.AB00 */
                }

                Method (A052, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A062 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A063 (0x00)
                    Name (A064, 0x00)
                    A063 (0x01)
                }

                Method (A057, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A058, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A065) && (Local0 <= A066)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A067, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A059, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A062, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A068, 0, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A069 (Local0, 0x00)
                    Local2 = A069 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A069 (0x00, Local0)
                                    Local5 = 0x00
                                    If (((Local4 && 0x09) == 0x00))
                                    {
                                        If (((Local4 && 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A069 (0x00, Local0)
                                        }

                                        A070 (0x34, Local3, 0x00)
                                        Local6 = A071 /* \_SB_.A071 */
                                        If ((Local6 == 0x01))
                                        {
                                            A070 (0x28, (Local4 & 0xFFFFFFF0), 0x00)
                                            A070 (0x29, Local5, 0x00)
                                            A070 (0x05, 0x00, (0x01 << 0x0A))
                                            A070 (0x2A, 0x00, 0x00)
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A083, 2, NotSerialized)
                {
                    If ((A069 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A069 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A069 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A063, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A069 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A069 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A083 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A069 (Local0, (Local1 + 0x10))
                                A081 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A081 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A081, 3, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A069, 2, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR4.A069.ADRR */
                }

                Method (A079, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A067 (Arg0))
                }

                Method (A080, 1, NotSerialized)
                {
                    Name (A064, 0x00)
                    Local2 = 0x00
                    A064 = A073 /* \_SB_.AWR0.ABR4.A073 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A074 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A063 (0x00)
                        Local0 = A069 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A081 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A069 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A081 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A074 = 0x01
                        Local0 = 0x05
                    }

                    A073 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A082 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A069 (0x00, 0x00)
                            A082 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A073 = A064 /* \_SB_.AWR0.ABR4.A080.A064 */
                    If ((A064 != 0x00))
                    {
                        A063 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR5)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x85)  // _UID: Unique ID
                Name (AB12, 0x84)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A072, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A072, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A065,   8, 
                    A066,   8, 
                    Offset (0x68), 
                    A073,   2, 
                        ,   2, 
                    A074,   1, 
                    A075,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A076,   1, 
                    Offset (0x88), 
                    A077,   4, 
                        ,   1, 
                    A078,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A060, 0, NotSerialized)
                {
                    Local0 = A042 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR5.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR5.AB0E */
                    }
                }

                Method (A055, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR5.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A054, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR5.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR5.AB0E */
                    }

                    Local0 = A061 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR5.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A060 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A053, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR5.AB02 */
                }

                Method (A056, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR5.AB00 */
                }

                Method (A052, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A062 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A063 (0x00)
                    Name (A064, 0x00)
                    A063 (0x01)
                }

                Method (A057, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A058, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A065) && (Local0 <= A066)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A067, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A059, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A062, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A068, 0, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A069 (Local0, 0x00)
                    Local2 = A069 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A069 (0x00, Local0)
                                    Local5 = 0x00
                                    If (((Local4 && 0x09) == 0x00))
                                    {
                                        If (((Local4 && 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A069 (0x00, Local0)
                                        }

                                        A070 (0x34, Local3, 0x00)
                                        Local6 = A071 /* \_SB_.A071 */
                                        If ((Local6 == 0x01))
                                        {
                                            A070 (0x28, (Local4 & 0xFFFFFFF0), 0x00)
                                            A070 (0x29, Local5, 0x00)
                                            A070 (0x05, 0x00, (0x01 << 0x0A))
                                            A070 (0x2A, 0x00, 0x00)
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A083, 2, NotSerialized)
                {
                    If ((A069 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A069 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A069 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A063, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A069 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A069 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A083 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A069 (Local0, (Local1 + 0x10))
                                A081 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A081 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A081, 3, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A069, 2, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR5.A069.ADRR */
                }

                Method (A079, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A067 (Arg0))
                }

                Method (A080, 1, NotSerialized)
                {
                    Name (A064, 0x00)
                    Local2 = 0x00
                    A064 = A073 /* \_SB_.AWR0.ABR5.A073 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A074 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A063 (0x00)
                        Local0 = A069 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A081 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A069 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A081 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A074 = 0x01
                        Local0 = 0x05
                    }

                    A073 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A082 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A069 (0x00, 0x00)
                            A082 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A073 = A064 /* \_SB_.AWR0.ABR5.A080.A064 */
                    If ((A064 != 0x00))
                    {
                        A063 (0x01)
                    }

                    Return (Local2)
                }
            }

            Device (ABR6)
            {
                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
                Name (_UID, 0x86)  // _UID: Unique ID
                Name (AB12, 0x98)
                Name (AB00, 0x00)
                Name (AB01, 0x00)
                Name (AB0E, 0x00)
                Name (AB02, 0x00)
                Name (AB03, 0x00)
                Name (AB04, 0x00)
                Name (AB05, 0x00)
                Name (AB06, 0x00)
                Name (AB07, 0x00)
                Name (AB08, 0x00)
                Name (AB09, 0x00)
                Name (AB0A, 0x00)
                Name (AB0B, 0x00)
                Name (AB0C, 0x00)
                Name (AB0D, 0x00)
                OperationRegion (A072, SystemMemory, (AGRB + ((DerefOf (\_SB.ADAT [(AB12 + 0x0D)]
                    ) << 0x0F) | (DerefOf (\_SB.ADAT [(AB12 + 0x0E)]) << 0x0C
                    ))), 0x1000)
                Field (A072, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x18), 
                    Offset (0x19), 
                    A065,   8, 
                    A066,   8, 
                    Offset (0x68), 
                    A073,   2, 
                        ,   2, 
                    A074,   1, 
                    A075,   1, 
                    Offset (0x6A), 
                        ,   11, 
                    A076,   1, 
                    Offset (0x88), 
                    A077,   4, 
                        ,   1, 
                    A078,   1
                }

                Name (AB10, 0x00)
                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    AB00 = DerefOf (\_SB.ADAT [(AB12 + 0x00)])
                    AB0E = DerefOf (\_SB.ADAT [(AB12 + 0x01)])
                    AB01 = DerefOf (\_SB.ADAT [(AB12 + 0x02)])
                    AB02 = DerefOf (\_SB.ADAT [(AB12 + 0x03)])
                    AB03 = DerefOf (\_SB.ADAT [(AB12 + 0x04)])
                    AB04 = DerefOf (\_SB.ADAT [(AB12 + 0x05)])
                    AB05 = DerefOf (\_SB.ADAT [(AB12 + 0x06)])
                    AB06 = DerefOf (\_SB.ADAT [(AB12 + 0x07)])
                    AB07 = DerefOf (\_SB.ADAT [(AB12 + 0x08)])
                    AB08 = DerefOf (\_SB.ADAT [(AB12 + 0x09)])
                    AB09 = DerefOf (\_SB.ADAT [(AB12 + 0x0A)])
                    AB0A = DerefOf (\_SB.ADAT [(AB12 + 0x0B)])
                    AB0B = DerefOf (\_SB.ADAT [(AB12 + 0x0C)])
                    AB0C = DerefOf (\_SB.ADAT [(AB12 + 0x0D)])
                    AB0D = DerefOf (\_SB.ADAT [(AB12 + 0x0E)])
                }

                Method (A060, 0, NotSerialized)
                {
                    Local0 = A042 ()
                    If ((Local0 == 0x01))
                    {
                        Return (AB01) /* \_SB_.AWR0.ABR6.AB01 */
                    }

                    If ((Local0 == 0x00))
                    {
                        Return (AB0E) /* \_SB_.AWR0.ABR6.AB0E */
                    }
                }

                Method (A055, 0, NotSerialized)
                {
                    If ((AB10 != 0x00))
                    {
                        If ((AB10 == 0x01))
                        {
                            Return (0x01)
                        }
                    }

                    Return (0x00)
                }

                Method (A061, 0, NotSerialized)
                {
                    If ((AB05 != 0x00))
                    {
                        Return (AB05) /* \_SB_.AWR0.ABR6.AB05 */
                    }

                    If ((AB10 > 0x01))
                    {
                        Return ((AB10 - 0x01))
                    }

                    Return (0x00)
                }

                Method (A054, 0, NotSerialized)
                {
                    If ((\_SB.AP05 == 0x00))
                    {
                        If ((AB05 != 0x00))
                        {
                            Return (AB05) /* \_SB_.AWR0.ABR6.AB05 */
                        }

                        Return (AB0E) /* \_SB_.AWR0.ABR6.AB0E */
                    }

                    Local0 = A061 ()
                    If ((Local0 != 0x00))
                    {
                        If ((Local0 > AB00))
                        {
                            Return (AB00) /* \_SB_.AWR0.ABR6.AB00 */
                        }
                        Else
                        {
                            Return (Local0)
                        }
                    }

                    Local0 = A060 ()
                    If ((\_SB.AP03 != 0x00))
                    {
                        If ((\_SB.AP03 < Local0))
                        {
                            Return (\_SB.AP03)
                        }
                    }

                    Return (Local0)
                }

                Method (A053, 0, NotSerialized)
                {
                    Return (AB02) /* \_SB_.AWR0.ABR6.AB02 */
                }

                Method (A056, 0, NotSerialized)
                {
                    Return (AB00) /* \_SB_.AWR0.ABR6.AB00 */
                }

                Method (A052, 1, NotSerialized)
                {
                    AB02 = Arg0
                    A062 (Arg0)
                    If ((AB10 != 0x00)){}
                    Else
                    {
                    }

                    A063 (0x00)
                    Name (A064, 0x00)
                    A063 (0x01)
                }

                Method (A057, 1, NotSerialized)
                {
                    AB10 = Arg0
                }

                Method (A058, 1, NotSerialized)
                {
                    Local0 = (Arg0 >> 0x08)
                    If (((Local0 >= A065) && (Local0 <= A066)))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A067, 1, NotSerialized)
                {
                    Local0 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == Local0))
                    {
                        Return (0x01)
                    }

                    Return (0x00)
                }

                Method (A059, 0, NotSerialized)
                {
                    AB10 = 0x00
                }

                Method (A062, 1, NotSerialized)
                {
                    If ((Arg0 >= 0x02)){}
                    If ((Arg0 >= 0x03)){}
                    If ((Arg0 == 0x01))
                    {
                        If ((AB04 == 0x01)){}
                    }
                    Else
                    {
                    }
                }

                Method (A068, 0, NotSerialized)
                {
                    Local0 = 0x00
                    Local1 = A069 (Local0, 0x00)
                    Local2 = A069 (Local0, 0x08)
                    If ((Local1 != 0xFFFFFFFF))
                    {
                        Local3 = ((Local1 >> 0x10) & 0xFFFF)
                        Local1 &= 0xFFFF
                        Local2 = ((Local2 >> 0x18) & 0xFF)
                        If ((Local2 == 0x03))
                        {
                            If (((Local1 == 0x1002) || (Local1 == 0x1022)))
                            {
                                Local0 = 0x10
                                While ((Local0 < 0x30))
                                {
                                    Local4 = A069 (0x00, Local0)
                                    Local5 = 0x00
                                    If (((Local4 && 0x09) == 0x00))
                                    {
                                        If (((Local4 && 0x06) == 0x04))
                                        {
                                            Local0 += 0x04
                                            Local5 = A069 (0x00, Local0)
                                        }

                                        A070 (0x34, Local3, 0x00)
                                        Local6 = A071 /* \_SB_.A071 */
                                        If ((Local6 == 0x01))
                                        {
                                            A070 (0x28, (Local4 & 0xFFFFFFF0), 0x00)
                                            A070 (0x29, Local5, 0x00)
                                            A070 (0x05, 0x00, (0x01 << 0x0A))
                                            A070 (0x2A, 0x00, 0x00)
                                            Break
                                        }
                                    }
                                    ElseIf (((Local4 && 0x06) == 0x04))
                                    {
                                        Local0 += 0x04
                                    }

                                    Local0 += 0x04
                                }
                            }
                        }
                    }
                }

                Method (A083, 2, NotSerialized)
                {
                    If ((A069 (Arg0, 0x00) == 0xFFFFFFFF))
                    {
                        Return (0x00)
                    }

                    Local0 = A069 (Arg0, 0x34)
                    While (0x01)
                    {
                        Local1 = A069 (Arg0, (Local0 & 0xFF))
                        If (((Local1 & 0xFF) == Arg1))
                        {
                            Return ((Local0 & 0xFF))
                        }

                        Local0 = ((Local1 >> 0x08) & 0xFF)
                        If ((Local0 == 0x00))
                        {
                            Return (Local0)
                        }
                    }
                }

                Name (AESP, Package (0x08)
                {
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00, 
                    0x00
                })
                Method (A063, 1, NotSerialized)
                {
                    Local0 = 0x00
                    If ((A069 (Local0, 0x00) != 0xFFFFFFFF))
                    {
                        Local1 = (A069 (Local0, 0x08) & 0x80)
                        If ((Local1 == 0x80))
                        {
                            Local7 = 0x07
                        }
                        Else
                        {
                            Local7 = 0x00
                        }

                        While ((Local0 <= Local7))
                        {
                            Local1 = A083 (Local0, 0x10)
                            If ((Local1 == 0x00))
                            {
                                Local0++
                                Continue
                            }

                            If ((Arg0 == 0x00))
                            {
                                Local2 = A069 (Local0, (Local1 + 0x10))
                                A081 (Local0, (Local1 + 0x10), (Local2 & ~0x03))
                                AESP [Local0] = Local2
                            }
                            Else
                            {
                                Local2 = DerefOf (AESP [Local0])
                                A081 (Local0, (Local1 + 0x10), Local2)
                            }

                            Local0++
                        }
                    }
                    Else
                    {
                    }
                }

                Method (A081, 3, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    ADRR = Arg2
                }

                Method (A069, 2, Serialized)
                {
                    Local0 = (AGRB + (A065 << 0x14))
                    Local0 += (Arg0 << 0x0C)
                    Local0 += Arg1
                    OperationRegion (ADRB, SystemMemory, Local0, 0x04)
                    Field (ADRB, DWordAcc, NoLock, Preserve)
                    {
                        ADRR,   32
                    }

                    Return (ADRR) /* \_SB_.AWR0.ABR6.A069.ADRR */
                }

                Method (A079, 1, NotSerialized)
                {
                    If ((AB0B != 0x01))
                    {
                        Return (0x00)
                    }

                    Return (A067 (Arg0))
                }

                Method (A080, 1, NotSerialized)
                {
                    Name (A064, 0x00)
                    Local2 = 0x00
                    A064 = A073 /* \_SB_.AWR0.ABR6.A073 */
                    Local1 = (AB0D | (AB0C << 0x03))
                    If ((Arg0 == 0x01))
                    {
                        A074 = 0x00
                        Local0 = 0x01
                    }
                    Else
                    {
                        A063 (0x00)
                        Local0 = A069 (0x00, 0x04)
                        If ((Local0 != 0xFFFFFFFF))
                        {
                            A081 (0x00, 0x04, (Local0 & ~0x04))
                            Local0 = A069 (0x01, 0x04)
                            If ((Local0 != 0xFFFFFFFF))
                            {
                                A081 (0x01, 0x04, (Local0 & ~0x04))
                            }
                        }

                        Local2 = 0x00
                        A074 = 0x01
                        Local0 = 0x05
                    }

                    A073 = 0x00
                    While ((Local0 != 0x08))
                    {
                        If ((Local0 == 0x01))
                        {
                            A082 (0x29, Local1, 0x00, 0x00, 0x00)
                            Local2 = 0x01
                            Local0 = 0x08
                        }

                        If ((Local0 == 0x05))
                        {
                            A069 (0x00, 0x00)
                            A082 (0x2A, Local1, 0x00, 0x00, 0x00)
                            AB05 = 0x00
                            AB04 = 0x00
                            AB10 = 0x00
                            Local2 = 0x00
                            Local0 = 0x08
                        }
                    }

                    A073 = A064 /* \_SB_.AWR0.ABR6.A080.A064 */
                    If ((A064 != 0x00))
                    {
                        A063 (0x01)
                    }

                    Return (Local2)
                }
            }
        }

        Method (A003, 0, Serialized)
        {
            If ((DerefOf (\_SB.ADAT [0x08]) == 0x01))
            {
                Local0 = 0x00
                While ((Local0 < 0x07))
                {
                    A113 (Local0)
                    Local0++
                }
            }
        }

        Method (A070, 3, NotSerialized)
        {
            Local7 = Buffer (0x18){}
            CreateDWordField (Local7, 0x00, A006)
            CreateDWordField (Local7, 0x04, A007)
            CreateDWordField (Local7, 0x08, A008)
            CreateDWordField (Local7, 0x0C, A009)
            CreateDWordField (Local7, 0x10, A010)
            CreateDWordField (Local7, 0x14, A011)
            A006 = Arg1
            A007 = Arg2
            A012 (Arg0, Local7)
        }

        Method (A113, 1, NotSerialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (\_SB.AWR0.ABR0.A068 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (\_SB.AWR0.ABR1.A068 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (\_SB.AWR0.ABR2.A068 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (\_SB.AWR0.ABR3.A068 ())
            }

            If ((Arg0 == 0x04))
            {
                Return (\_SB.AWR0.ABR4.A068 ())
            }

            If ((Arg0 == 0x05))
            {
                Return (\_SB.AWR0.ABR5.A068 ())
            }

            If ((Arg0 == 0x06))
            {
                Return (\_SB.AWR0.ABR6.A068 ())
            }
        }

        Name (A001, 0x01)
        Name (A002, 0x00)
        Method (APTS, 1, NotSerialized)
        {
            If ((Arg0 == 0x03)){}
        }

        Method (AWAK, 1, NotSerialized)
        {
            A003 ()
            If ((Arg0 == 0x03)){}
        }

        Method (APPM, 1, NotSerialized)
        {
            Local0 = DerefOf (Arg0 [0x04])
            Local1 = DerefOf (Arg0 [0x02])
            A004 (Local0, Local1)
        }

        Method (A005, 0, NotSerialized)
        {
            Local7 = Buffer (0x18){}
            CreateDWordField (Local7, 0x00, A006)
            CreateDWordField (Local7, 0x04, A007)
            CreateDWordField (Local7, 0x08, A008)
            CreateDWordField (Local7, 0x0C, A009)
            CreateDWordField (Local7, 0x10, A010)
            CreateDWordField (Local7, 0x14, A011)
            A006 = 0x00
            A007 = 0x00
            A008 = 0x00
            A009 = 0x00
            A010 = 0x00
            A011 = 0x00
            If ((AD00 == 0x00))
            {
                A012 (0x18, Local7)
            }
            Else
            {
                A012 (0x19, Local7)
            }
        }

        Method (A013, 2, NotSerialized)
        {
        }
    }
}



SSDT3
-----
DefinitionBlock ("", "SSDT", 1, "LENOVO", "AmdTable", 0x00000001)
{
    External (_SB_.ALIB, MethodObj)    // 2 Arguments
    External (_SB_.M263, MethodObj)    // 1 Arguments
    External (_SB_.M264, MethodObj)    // 1 Arguments
    External (_SB_.M284, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.GP18.SATA.TPTS, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.GP18.SATA.TWAK, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.SATA.TPTS, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.SATA.TWAK, MethodObj)    // 1 Arguments
    External (M038, MethodObj)    // 1 Arguments
    External (M039, MethodObj)    // 2 Arguments
    External (M050, DeviceObj)
    External (M051, DeviceObj)
    External (M052, DeviceObj)
    External (M053, DeviceObj)
    External (M054, DeviceObj)
    External (M055, DeviceObj)
    External (M056, DeviceObj)
    External (M057, DeviceObj)
    External (M058, DeviceObj)
    External (M059, DeviceObj)
    External (M062, DeviceObj)
    External (M068, DeviceObj)
    External (M069, DeviceObj)
    External (M070, DeviceObj)
    External (M071, DeviceObj)
    External (M072, DeviceObj)
    External (M074, DeviceObj)
    External (M075, DeviceObj)
    External (M076, DeviceObj)
    External (M077, DeviceObj)
    External (M078, DeviceObj)
    External (M079, DeviceObj)
    External (M080, DeviceObj)
    External (M081, DeviceObj)
    External (M127, DeviceObj)
    External (MOEM, MethodObj)    // 3 Arguments

    OperationRegion (CPNV, SystemMemory, 0xCE4E8018, 0x000100C9)
    Field (CPNV, AnyAcc, Lock, Preserve)
    {
        M082,   32, 
        M083,   32, 
        M084,   32, 
        M085,   8, 
        M221,   8, 
        M086,   16, 
        M229,   8, 
        M231,   16, 
        M235,   8, 
        M233,   32, 
            ,   1, 
            ,   2, 
            ,   1, 
            ,   1, 
            ,   1, 
            ,   1, 
        Offset (0x19), 
        M087,   1, 
            ,   1, 
        Offset (0x1C), 
        M088,   16, 
        M089,   16, 
        M090,   3, 
        M091,   5, 
        M092,   8, 
        M093,   3, 
        M094,   5, 
        M095,   8, 
        M096,   8, 
        M097,   8, 
        M098,   32, 
        M099,   32, 
        M100,   32, 
        M101,   32, 
        M102,   32, 
        M103,   32, 
        M104,   224, 
        M105,   32, 
        M106,   32768, 
        M378,   32768, 
        M379,   32768, 
        M380,   32768, 
        M381,   32768, 
        M382,   32768, 
        M383,   32768, 
        M384,   32768, 
        M385,   32768, 
        M386,   32768, 
        M387,   32768, 
        M388,   32768, 
        M389,   32768, 
        M390,   32768, 
        M391,   32768, 
        M392,   32768, 
        M107,   64, 
        M320,   32, 
        M321,   32, 
        M322,   32, 
        M323,   32, 
        M324,   32, 
        M325,   32, 
        M326,   32, 
        M327,   16, 
        M328,   8, 
        M128,   32, 
        M108,   32, 
        M109,   32, 
        M110,   32, 
        M122,   32, 
        M131,   32, 
        M132,   32, 
        M133,   32, 
        M134,   32, 
        M135,   32, 
        M136,   32, 
        M220,   32, 
        M226,   32, 
        M251,   32, 
        M310,   32, 
        M280,   32, 
        M290,   32
    }

    Method (M000, 1, Serialized)
    {
        Name (M285, Buffer (0x04)
        {
             0x01, 0x03, 0x80, 0x00                           // ....
        })
        CreateByteField (M285, 0x00, M286)
        CreateByteField (M285, 0x01, M287)
        CreateWordField (M285, 0x02, M288)
        If ((ToInteger (M286) == 0x01))
        {
            Local0 = (Arg0 + 0xB0000C00)
            Local1 = ToInteger (M288)
            If ((ToInteger (M287) == 0x03))
            {
                OperationRegion (VARM, SystemIO, Local1, 0x04)
                Field (VARM, DWordAcc, NoLock, Preserve)
                {
                    VARR,   32
                }

                VARR = Local0
            }
            ElseIf ((ToInteger (M287) == 0x02))
            {
                OperationRegion (VARN, SystemIO, Local1, 0x02)
                Field (VARN, WordAcc, NoLock, Preserve)
                {
                    VARS,   16
                }

                VARS = (Local0 & 0xFFFF)
            }
            ElseIf ((ToInteger (M287) == 0x01))
            {
                OperationRegion (VARO, SystemIO, Local1, 0x01)
                Field (VARO, ByteAcc, NoLock, Preserve)
                {
                    VART,   8
                }

                VART = (Local0 & 0xFF)
            }
        }
    }

    Method (M019, 4, Serialized)
    {
        Return (M017 (Arg0, Arg1, Arg2, Arg3, 0x00, 0x20))
    }

    Method (M020, 5, Serialized)
    {
        M018 (Arg0, Arg1, Arg2, Arg3, 0x00, 0x20, Arg4)
    }

    Mutex (M253, 0x00)
    Method (M249, 4, Serialized)
    {
        If ((((Arg0 + Arg1) + Arg2) == 0x00))
        {
            Local0 = 0x00
        }
        Else
        {
            Local0 = M252 (Arg0, Arg1, Arg2)
        }

        If ((Local0 == 0xFFFFFFFF))
        {
            Return (0xFFFFFFFF)
        }

        Local0 = (M083 + (Local0 << 0x14))
        Local0 += 0xB8
        Acquire (M253, 0xFFFF)
        OperationRegion (VARM, SystemMemory, Local0, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        Local1 = VAR1 /* \M249.VAR1 */
        Local2 = VAR2 /* \M249.VAR2 */
        VAR1 = Local1
        Release (M253)
        Return (Local2)
    }

    Method (M250, 5, Serialized)
    {
        If ((((Arg0 + Arg1) + Arg2) == 0x00))
        {
            Local0 = 0x00
        }
        Else
        {
            Local0 = M252 (Arg0, Arg1, Arg2)
        }

        If ((Local0 != 0xFFFFFFFF))
        {
            Local0 = (M083 + (Local0 << 0x14))
            Local0 += 0xB8
            Acquire (M253, 0xFFFF)
            OperationRegion (VARM, SystemMemory, Local0, 0x08)
            Field (VARM, DWordAcc, NoLock, Preserve)
            {
                VAR1,   32
            }

            BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                VAR2,   32
            }

            Local1 = VAR1 /* \M250.VAR1 */
            VAR2 = Arg4
            VAR1 = Local1
            Release (M253)
        }
    }

    Method (M021, 4, Serialized)
    {
        Local0 = (M083 + (Arg0 << 0x14))
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        Local0 += 0xE0
        OperationRegion (VARM, SystemMemory, Local0, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        Local0 = VAR2 /* \M021.VAR2 */
        Return (Local0)
    }

    Method (M022, 5, Serialized)
    {
        Local0 = (M083 + (Arg0 << 0x14))
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        Local0 += 0xE0
        OperationRegion (VARM, SystemMemory, Local0, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg3, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        VAR2 = Arg4
    }

    Method (M023, 3, Serialized)
    {
        M018 (Arg0, Arg1, Arg2, 0x70, 0x03, 0x01, 0x00)
        M018 (Arg0, Arg1, Arg2, 0x70, 0x13, 0x01, 0x01)
    }

    Method (M024, 3, Serialized)
    {
        Local0 = M019 (Arg0, Arg1, Arg2, 0x0128)
        If ((Local0 & 0x00020000))
        {
            Return (Ones)
        }
        Else
        {
            Return (Zero)
        }
    }

    Method (M026, 3, Serialized)
    {
        Local0 = M021 (Arg0, Arg1, Arg2, 0xA2)
        Local0 &= 0xFFFFFFF8
        Local1 = (Local0 >> 0x04)
        Local1 &= 0x07
        Local0 |= Local1
        Local0 |= 0x0100
        M022 (Arg0, Arg1, Arg2, 0xA2, Local0)
    }

    Method (M025, 3, Serialized)
    {
        Local0 = M019 (Arg0, Arg1, Arg2, 0x68)
        Local0 &= 0xFFFFFFDF
        M020 (Arg0, Arg1, Arg2, 0x68, Local0)
        Local0 |= 0x20
        M020 (Arg0, Arg1, Arg2, 0x68, Local0)
        Local1 = 0x64
        Local2 = 0x01
        While ((Local1 && Local2))
        {
            Sleep (0x01)
            Local3 = M019 (Arg0, Arg1, Arg2, 0x68)
            If ((Local3 & 0x08000000))
            {
                Local1--
            }
            Else
            {
                Local2 = 0x00
            }
        }

        Local0 &= 0xFFFFFFDF
        M020 (Arg0, Arg1, Arg2, 0x68, Local0)
        If (!Local2)
        {
            Return (Ones)
        }
        Else
        {
            Return (Zero)
        }
    }

    Method (M009, 1, Serialized)
    {
        Local0 = (Arg0 >> 0x08)
        Local1 = (Arg0 & 0xFF)
        Local2 = 0x00
        If ((Local0 == 0x00))
        {
            If ((M085 >= 0x02))
            {
                Local2 = M011 ((M084 + 0x1502), (Local1 * 0x04), 0x00, 
                    0x01)
            }
            Else
            {
                Local2 = M011 ((M084 + 0x0100), Local1, 0x07, 0x01)
            }
        }
        ElseIf ((Local0 == 0x01))
        {
            Local2 = M038 (Local1)
        }
        ElseIf ((Local0 == 0x02))
        {
            Local2 = M038 ((Local1 + 0x08))
        }

        Return (Local2)
    }

    Method (M010, 2, Serialized)
    {
        Local0 = (Arg0 >> 0x08)
        Local1 = (Arg0 & 0xFF)
        If ((Local0 == 0x00))
        {
            If ((M085 >= 0x02))
            {
                M012 ((M084 + 0x1502), (Local1 * 0x04), 0x06, 0x02, (
                    0x02 | Arg1))
            }
            Else
            {
                M012 ((M084 + 0x0100), Local1, 0x06, 0x01, Arg1)
                M012 ((M084 + 0x0100), Local1, 0x05, 0x01, 0x00)
            }
        }
        ElseIf ((Local0 == 0x01))
        {
            M039 (Local1, Arg1)
        }
        ElseIf ((Local0 == 0x02))
        {
            M039 ((Local1 + 0x08), Arg1)
        }
    }

    Name (M037, Buffer (0x17)
    {
        /* 0000 */  0x7E, 0x81, 0x03, 0x16, 0x04, 0x15, 0x0E, 0x05,  // ~.......
        /* 0008 */  0x02, 0x20, 0x06, 0x07, 0x10, 0x11, 0x12, 0x18,  // . ......
        /* 0010 */  0x17, 0x19, 0x0B, 0x01, 0x0F, 0x0D, 0x09         // .......
    })
    Name (M227, Buffer (0x18)
    {
        /* 0000 */  0x41, 0x42, 0x03, 0x16, 0x04, 0x15, 0x0E, 0x05,  // AB......
        /* 0008 */  0x02, 0x44, 0x06, 0x07, 0x10, 0x11, 0x12, 0x18,  // .D......
        /* 0010 */  0x17, 0x45, 0x0B, 0x01, 0x0F, 0x0D, 0x09, 0x08   // .E......
    })
    Name (M329, Buffer (0x18)
    {
        /* 0000 */  0x59, 0x5A, 0x03, 0x16, 0x04, 0x15, 0x5B, 0x05,  // YZ....[.
        /* 0008 */  0x02, 0x56, 0x06, 0x4C, 0x10, 0x11, 0x12, 0x18,  // .V.L....
        /* 0010 */  0x17, 0x81, 0x54, 0x01, 0x28, 0x00, 0x09, 0x08   // ..T.(...
    })
    Name (M330, Buffer (0x18)
    {
        /* 0000 */  0x59, 0x5A, 0x03, 0x16, 0x04, 0x15, 0x5B, 0x05,  // YZ....[.
        /* 0008 */  0x02, 0x56, 0x06, 0x07, 0x10, 0x11, 0x12, 0x18,  // .V......
        /* 0010 */  0x17, 0x81, 0x54, 0x01, 0x28, 0x00, 0x09, 0x08   // ..T.(...
    })
    Method (M029, 1, Serialized)
    {
        If ((M085 == 0x02))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M037 [Arg0]) * 
                0x04), 0x00, 0x01))
        }
        ElseIf ((M085 >= 0x09))
        {
            If ((M085 >= 0x0B))
            {
                Return (M011 ((M084 + 0x1502), (DerefOf (M329 [Arg0]) * 
                    0x04), 0x00, 0x01))
            }
            Else
            {
                Return (M011 ((M084 + 0x1502), (DerefOf (M330 [Arg0]) * 
                    0x04), 0x00, 0x01))
            }
        }
        ElseIf ((M085 == 0x08))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M329 [Arg0]) * 
                0x04), 0x00, 0x01))
        }
        ElseIf ((M085 >= 0x03))
        {
            Return (M011 ((M084 + 0x1502), (DerefOf (M227 [Arg0]) * 
                0x04), 0x00, 0x01))
        }
        Else
        {
            Return (M011 ((M084 + 0x0160), Arg0, 0x07, 0x01))
        }
    }

    Method (M031, 1, Serialized)
    {
        Local0 = M011 ((M084 + 0x0240), Arg0, 0x00, 0x05)
        Return (M011 ((M084 + 0x0208), (Local0 / 0x08), (Local0 & 
            0x07), 0x01))
    }

    Method (M032, 2, Serialized)
    {
        Local0 = M011 ((M084 + 0x0240), Arg0, 0x00, 0x05)
        M012 ((M084 + 0x0208), (Local0 / 0x08), (Local0 & 0x07
            ), 0x01, Arg1)
    }

    Method (M013, 4, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, 0x04)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VARR,   32
        }

        Local1 = VARR /* \M013.VARR */
        Local5 = 0x7FFFFFFF
        Local5 |= 0x80000000
        Local2 = ((Local1 >> Arg2) & (Local5 >> (0x20 - Arg3)
            ))
        Return (Local2)
    }

    Method (M014, 5, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, 0x04)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VARR,   32
        }

        Local1 = VARR /* \M014.VARR */
        Local5 = 0x7FFFFFFF
        Local5 |= 0x80000000
        Local2 = (Arg2 + Arg3)
        Local2 = (0x20 - Local2)
        Local2 = (((Local5 << Local2) & Local5) >> Local2)
        Local2 = ((Local2 >> Arg2) << Arg2)
        Local3 = (Arg4 << Arg2)
        Local4 = ((Local1 & (Local5 ^ Local2)) | Local3)
        VARR = Local4
    }

    Method (M011, 4, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, 0x01)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            VARR,   8
        }

        Local1 = VARR /* \M011.VARR */
        Local2 = ((Local1 >> Arg2) & (0xFF >> (0x08 - Arg3)
            ))
        Return (Local2)
    }

    Method (M012, 5, Serialized)
    {
        Local0 = (Arg0 + Arg1)
        OperationRegion (VARM, SystemMemory, Local0, 0x01)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            VARR,   8
        }

        Local1 = VARR /* \M012.VARR */
        Local2 = (Arg2 + Arg3)
        Local2 = (0x08 - Local2)
        Local2 = (((0xFF << Local2) & 0xFF) >> Local2)
        Local2 = ((Local2 >> Arg2) << Arg2)
        Local3 = (Arg4 << Arg2)
        Local4 = ((Local1 & (0xFF ^ Local2)) | Local3)
        VARR = Local4
    }

    Method (M017, 6, Serialized)
    {
        Local0 = M083 /* \M083 */
        Local1 = (M083 >> 0x14)
        Local2 = (Local1 & 0x0F00)
        Local2 += 0x0100
        If (((Local1 + Arg0) >= Local2))
        {
            Local3 = 0x7FFFFFFF
            Local3 |= 0x80000000
            Local4 = ((Local3 >> Arg4) & (Local3 >> (0x20 - Arg5)
                ))
            Return (Local4)
        }

        Local0 += (Arg0 << 0x14)
        Local0 += (Arg1 << 0x0F)
        Local0 += (Arg2 << 0x0C)
        Return (M013 (Local0, Arg3, Arg4, Arg5))
    }

    Method (M018, 7, Serialized)
    {
        Local0 = M083 /* \M083 */
        Local1 = (M083 >> 0x14)
        Local2 = (Local1 & 0x0F00)
        Local2 += 0x0100
        If (((Local1 + Arg0) < Local2))
        {
            Local0 += (Arg0 << 0x14)
            Local0 += (Arg1 << 0x0F)
            Local0 += (Arg2 << 0x0C)
            If ((M013 (Local0, 0x00, 0x00, 0x20) != 0xFFFFFFFF))
            {
                M014 (Local0, Arg3, Arg4, Arg5, Arg6)
            }
        }
    }

    Method (M265, 3, Serialized)
    {
        Local0 = 0x00
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, 0x00, 0x08)
        While ((Local1 != 0x00))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, 0x00, 0x08)
            If (((Local2 == 0x00) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                Local3 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x0C), 0x12, 0x01)
                Local4 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x10), 0x08, 0x01)
                If (((Local3 == 0x01) && (Local4 == 0x01)))
                {
                    Local0 = 0x01
                }

                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x01), 0x00, 0x08)
        }

        Return (Local0)
    }

    Method (M033, 3, Serialized)
    {
        Local0 = 0x00
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, 0x00, 0x08)
        While ((Local1 != 0x00))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, 0x00, 0x08)
            If (((Local2 == 0x00) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                Local0 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x0C), 0x0A, 0x02)
                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x01), 0x00, 0x08)
        }

        Return (Local0)
    }

    Method (M027, 3, Serialized)
    {
        Local0 = 0x00
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, 0x00, 0x08)
        While ((Local1 != 0x00))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, 0x00, 0x08)
            If (((Local2 == 0x00) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                Local0 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x10), 0x00, 0x02)
                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x01), 0x00, 0x08)
        }

        Return (Local0)
    }

    Method (M028, 4, Serialized)
    {
        Local1 = M017 (Arg0, Arg1, Arg2, 0x34, 0x00, 0x08)
        While (((Local1 != 0x00) && (Local1 < 0xFF)))
        {
            Local2 = M017 (Arg0, Arg1, Arg2, Local1, 0x00, 0x08)
            If (((Local2 == 0x00) || (Local2 == 0xFF)))
            {
                Break
            }

            If ((Local2 == 0x10))
            {
                M018 (Arg0, Arg1, Arg2, (Local1 + 0x10), 0x00, 0x02, Arg3)
                Break
            }

            Local1 = M017 (Arg0, Arg1, Arg2, (Local1 + 0x01), 0x00, 0x08)
        }
    }

    Method (M034, 1, Serialized)
    {
        Return (M011 ((M084 + 0x0700), Arg0, 0x00, 0x08))
    }

    Method (M015, 1, Serialized)
    {
        Return (M011 ((M084 + 0x0400), Arg0, 0x00, 0x08))
    }

    Method (M016, 2, Serialized)
    {
        M012 ((M084 + 0x0400), Arg0, 0x00, 0x08, Arg1)
    }

    Method (M035, 1, Serialized)
    {
        Return (M011 (M084, Arg0, 0x00, 0x08))
    }

    Method (M036, 2, Serialized)
    {
        M012 (M084, Arg0, 0x00, 0x08, Arg1)
    }

    Method (M001, 2, Serialized)
    {
        Local0 = 0x00
        If ((Arg0 == 0x15))
        {
            Local0 = 0x01
        }

        Return (Local0)
    }

    Method (M003, 3, Serialized)
    {
        Local0 = (Arg0 << 0x05)
        Local1 = (Local0 + Arg1)
        Local2 = (Local1 << 0x18)
        Local3 = (Local2 + Arg2)
        Return (Local3)
    }

    Method (M004, 1, Serialized)
    {
        OperationRegion (VARM, SystemIO, 0x0CD8, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg0, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        Local0 = VAR2 /* \M004.VAR2 */
        Return (Local0)
    }

    Method (M005, 2, Serialized)
    {
        OperationRegion (VARM, SystemIO, 0x0CD8, 0x08)
        Field (VARM, DWordAcc, NoLock, Preserve)
        {
            VAR1,   32
        }

        BankField (VARM, VAR1, Arg0, DWordAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            VAR2,   32
        }

        VAR2 = Arg1
    }

    Method (M006, 3, Serialized)
    {
        Local0 = (M004 (Arg0) & Arg1)
        Local1 = (Local0 | Arg2)
        M005 (Arg0, Local1)
    }

    Method (M002, 2, Serialized)
    {
        If ((Arg0 == 0x00))
        {
            If ((Arg1 == 0x00))
            {
                M006 (M003 (0x06, 0x00, 0xC0), 0xFFFFEFFF, 0x00)
                M006 (M003 (0x01, 0x00, 0x65), 0xFFFFFEFE, 0x00)
            }

            If ((Arg1 == 0x01))
            {
                M006 (M003 (0x06, 0x00, 0xC0), 0xFFFFDFFF, 0x00)
                M006 (M003 (0x01, 0x00, 0x65), 0xFFFFFDFD, 0x00)
            }

            If ((Arg1 == 0x02))
            {
                M006 (M003 (0x06, 0x00, 0xC0), 0xFFFFBFFF, 0x00)
                M006 (M003 (0x01, 0x00, 0x65), 0xFFFFFBFB, 0x00)
            }

            If ((Arg1 == 0x03))
            {
                M006 (M003 (0x06, 0x00, 0xC0), 0xFFFF7FFF, 0x00)
                M006 (M003 (0x01, 0x00, 0x65), 0xFFFFF7F7, 0x00)
            }

            Sleep (0x01)
        }

        If ((Arg0 == 0x01))
        {
            If ((Arg1 == 0x00))
            {
                M006 (M003 (0x06, 0x00, 0xC0), 0xFFFFEFFF, 0x1000)
                M006 (M003 (0x01, 0x00, 0x65), 0xFFFFFEFE, 0x0101)
            }

            If ((Arg1 == 0x01))
            {
                M006 (M003 (0x06, 0x00, 0xC0), 0xFFFFDFFF, 0x2000)
                M006 (M003 (0x01, 0x00, 0x65), 0xFFFFFDFD, 0x0202)
            }

            If ((Arg1 == 0x02))
            {
                M006 (M003 (0x06, 0x00, 0xC0), 0xFFFFBFFF, 0x4000)
                M006 (M003 (0x01, 0x00, 0x65), 0xFFFFFBFB, 0x0404)
            }

            If ((Arg1 == 0x03))
            {
                M006 (M003 (0x06, 0x00, 0xC0), 0xFFFF7FFF, 0x8000)
                M006 (M003 (0x01, 0x00, 0x65), 0xFFFFF7F7, 0x0808)
            }

            Sleep (0x01)
        }

        If ((Arg0 == 0x00))
        {
            M008 (Arg1)
            Local0 = M004 (M003 (0x03, Arg1, 0xA5))
            Local0 &= 0xFF
            Local1 = 0x01F4
            While (((Local1 > 0x00) && (Local0 != 0x10)))
            {
                Local0 = M004 (M003 (0x03, Arg1, 0xA5))
                Local0 &= 0xFF
                Local1--
                Sleep (0x01)
            }

            If ((Local0 != 0x10))
            {
                M007 (Arg1)
            }
        }
    }

    Method (M008, 1, Serialized)
    {
        Local0 = M019 (0x00, 0x15, Arg0, 0x88)
        Local1 = ((Local0 & 0xFFFFFFF0) | 0x02)
        M020 (0x00, 0x15, Arg0, 0x88, Local1)
        M006 (M003 (0x03, Arg0, 0xA4), 0xFFFFFFFE, 0x01)
        M006 (M003 (0x03, Arg0, 0xA2), 0xFFFFDFFF, 0x2000)
        M006 (M003 (0x03, Arg0, 0xC0), 0xFFFF7FFF, 0x8000)
        M006 (M003 (0x03, Arg0, 0xA4), 0xDFFFFFFF, 0x20000000)
        Sleep (0x01)
    }

    Method (M007, 1, Serialized)
    {
        Local0 = M019 (0x00, 0x15, Arg0, 0x88)
        Local1 = ((Local0 & 0xFFFFFFF0) | 0x01)
        M020 (0x00, 0x15, Arg0, 0x88, Local1)
        M006 (M003 (0x03, Arg0, 0xA4), 0xFFFFFFFE, 0x00)
        M006 (M003 (0x03, Arg0, 0xA2), 0xFFFFDFFF, 0x2000)
        Sleep (0x01)
    }

    Method (M111, 2, Serialized)
    {
        If ((Arg0 != 0x00))
        {
            Local0 = M110 /* \M110 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = 0x00
                Local2 = M013 ((Local0 + Local1), 0x00, 0x00, 0x08)
                While (((Local2 != 0xFF) && (Local2 != 0x00)))
                {
                    Local3 = M013 ((Local0 + Local1), 0x01, 0x00, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        Local3 = M013 ((Local0 + Local1), 0x07, 0x00, 0x08)
                        If ((Local3 != 0x00))
                        {
                            Local4 = M013 ((Local0 + Local1), 0x02, 0x00, 0x08)
                            If ((Local4 == 0x00))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, 0x00, 0x10)
                                Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                                M010 (Local5, Local6)
                            }

                            If ((Local4 == 0x01))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, 0x00, 0x10)
                                Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                                While ((M009 (Local5) != Local6)){}
                            }

                            If ((Local4 == 0x02))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, 0x00, 0x20)
                                Sleep (((Local5 + 0x03E7) / 0x03E8))
                            }
                        }
                    }

                    Local1 += 0x08
                    Local2 = M013 ((Local0 + Local1), 0x00, 0x00, 0x08)
                }
            }
        }
    }

    Method (M228, 1, Serialized)
    {
        If ((Arg0 > 0x03))
        {
            Local0 = M110 /* \M110 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = 0x00
                Local2 = M013 ((Local0 + Local1), 0x00, 0x00, 0x08)
                While (((Local2 != 0xFF) && (Local2 != 0x00)))
                {
                    Local3 = M013 ((Local0 + Local1), 0x07, 0x00, 0x08)
                    If ((Local3 == Arg0))
                    {
                        Local4 = M013 ((Local0 + Local1), 0x02, 0x00, 0x08)
                        If ((Local4 == 0x00))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                            M010 (Local5, Local6)
                        }

                        If ((Local4 == 0x01))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                            While ((M009 (Local5) != Local6)){}
                        }

                        If ((Local4 == 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, 0x00, 0x20)
                            Sleep (((Local5 + 0x03E7) / 0x03E8))
                        }
                    }

                    Local1 += 0x08
                    Local2 = M013 ((Local0 + Local1), 0x00, 0x00, 0x08)
                }
            }
        }
    }

    Method (M219, 2, Serialized)
    {
        If ((Arg0 != 0x00))
        {
            Local0 = M221 /* \M221 */
            If ((Local0 & 0x02))
            {
                Local0 = M220 /* \M220 */
                If (Local0)
                {
                    Local0 += 0x10
                    Local1 = 0x00
                    Local2 = 0x01
                    While ((Local2 != 0xFF))
                    {
                        Local2 = M013 ((Local0 + Local1), 0x00, 0x00, 0x08)
                        Local3 = M013 ((Local0 + Local1), 0x01, 0x00, 0x08)
                        Local4 = M013 ((Local0 + Local1), 0x04, 0x00, 0x08)
                        Local5 = M013 ((Local0 + Local1), 0x07, 0x00, 0x08)
                        Local7 = M013 ((Local0 + Local1), 0x08, 0x00, 0x20)
                        If ((Local4 == Arg0))
                        {
                            If (((Local2 < 0x0A) && (Local5 & 0x80)))
                            {
                                If ((Arg1 == 0x00))
                                {
                                    If ((M085 >= 0x04))
                                    {
                                        If (((Local7 >> 0x10) > 0x00))
                                        {
                                            If (((Local7 >> 0x1C) == 0x02))
                                            {
                                                Local6 = M249 (((Local7 >> 0x18) & 0x0F), ((
                                                    Local7 >> 0x14) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D02300)
                                            }
                                            Else
                                            {
                                                Local6 = M249 (((Local7 >> 0x18) & 0x0F), ((
                                                    Local7 >> 0x14) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D01E00)
                                            }

                                            Local6 &= (0xFFFFFFFF ^ (0x03 << (Local2 << 0x01)))
                                            If (((Local7 >> 0x1C) == 0x02))
                                            {
                                                M250 (((Local7 >> 0x18) & 0x0F), ((Local7 >> 0x14
                                                    ) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D02300, Local6)
                                            }
                                            Else
                                            {
                                                M250 (((Local7 >> 0x18) & 0x0F), ((Local7 >> 0x14
                                                    ) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D01E00, Local6)
                                            }
                                        }
                                        ElseIf ((Local2 >= 0x04))
                                        {
                                            M012 ((M084 + 0x0E00), 0x01, ((Local2 - 0x04) * 0x02
                                                ), 0x02, 0x00)
                                        }
                                        Else
                                        {
                                            M012 ((M084 + 0x0E00), 0x00, (Local2 * 0x02), 0x02, 0x00)
                                        }
                                    }
                                    Else
                                    {
                                        M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                            0x01) * 0x04), 0x04, 0x00)
                                    }
                                }
                                ElseIf ((Local5 & 0x04))
                                {
                                    If ((Arg1 == 0x01))
                                    {
                                        If ((M085 >= 0x04))
                                        {
                                            If (((Local7 >> 0x10) > 0x00))
                                            {
                                                If (((Local7 >> 0x1C) == 0x02))
                                                {
                                                    Local6 = M249 (((Local7 >> 0x18) & 0x0F), ((
                                                        Local7 >> 0x14) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D02300)
                                                }
                                                Else
                                                {
                                                    Local6 = M249 (((Local7 >> 0x18) & 0x0F), ((
                                                        Local7 >> 0x14) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D01E00)
                                                }

                                                Local6 &= (0xFFFFFFFF ^ (0x03 << (Local2 << 0x01)))
                                                Local6 |= (0x03 << (Local2 << 0x01))
                                                If (((Local7 >> 0x1C) == 0x02))
                                                {
                                                    M250 (((Local7 >> 0x18) & 0x0F), ((Local7 >> 0x14
                                                        ) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D02300, Local6)
                                                }
                                                Else
                                                {
                                                    M250 (((Local7 >> 0x18) & 0x0F), ((Local7 >> 0x14
                                                        ) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D01E00, Local6)
                                                }
                                            }
                                            ElseIf ((Local2 >= 0x04))
                                            {
                                                M012 ((M084 + 0x0E00), 0x01, ((Local2 - 0x04) * 0x02
                                                    ), 0x02, 0x03)
                                            }
                                            Else
                                            {
                                                M012 ((M084 + 0x0E00), 0x00, (Local2 * 0x02), 0x02, 0x03)
                                            }
                                        }
                                        Else
                                        {
                                            M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                                0x01) * 0x04), 0x04, 0x0F)
                                        }
                                    }

                                    If ((Arg1 == 0x02))
                                    {
                                        Local6 = M017 (0x00, M013 ((Local0 + Local1), 0x05, 0x00, 0x08), 
                                            M013 ((Local0 + Local1), 0x06, 0x00, 0x08), 0x19, 0x00, 0x08)
                                        If ((M265 (Local6, 0x00, 0x00) == 0x01))
                                        {
                                            If ((M085 >= 0x04))
                                            {
                                                If (((Local7 >> 0x10) > 0x00))
                                                {
                                                    If (((Local7 >> 0x1C) == 0x02))
                                                    {
                                                        Local6 = M249 (((Local7 >> 0x18) & 0x0F), ((
                                                            Local7 >> 0x14) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D02300)
                                                    }
                                                    Else
                                                    {
                                                        Local6 = M249 (((Local7 >> 0x18) & 0x0F), ((
                                                            Local7 >> 0x14) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D01E00)
                                                    }

                                                    Local6 &= (0xFFFFFFFF ^ (0x03 << (Local2 << 0x01)))
                                                    Local6 |= (Local3 << (Local2 << 0x01))
                                                    If (((Local7 >> 0x1C) == 0x02))
                                                    {
                                                        M250 (((Local7 >> 0x18) & 0x0F), ((Local7 >> 0x14
                                                            ) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D02300, Local6)
                                                    }
                                                    Else
                                                    {
                                                        M250 (((Local7 >> 0x18) & 0x0F), ((Local7 >> 0x14
                                                            ) & 0x0F), ((Local7 >> 0x10) & 0x0F), 0x02D01E00, Local6)
                                                    }
                                                }
                                                ElseIf ((Local2 >= 0x04))
                                                {
                                                    M012 ((M084 + 0x0E00), 0x01, ((Local2 - 0x04) * 0x02
                                                        ), 0x02, Local3)
                                                }
                                                Else
                                                {
                                                    M012 ((M084 + 0x0E00), 0x00, (Local2 * 0x02), 0x02, Local3)
                                                }
                                            }
                                            Else
                                            {
                                                M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                                    0x01) * 0x04), 0x04, Local3)
                                            }
                                        }
                                    }
                                }
                                ElseIf ((M085 >= 0x04))
                                {
                                    M012 ((M084 + 0x0E00), 0x00, (Local2 * 0x02), 0x02, 0x03)
                                }
                                Else
                                {
                                    M012 ((M084 + 0x0E00), (Local2 / 0x02), ((Local2 & 
                                        0x01) * 0x04), 0x04, Local3)
                                }

                                Local2 = 0xFF
                            }
                        }

                        Local1 += 0x0C
                    }
                }
            }
        }
    }

    Method (M112, 2, Serialized)
    {
        If ((Arg0 != 0x00))
        {
            Local0 = M109 /* \M109 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = 0x00
                Local2 = 0x01
                While (((Local2 != 0xFF) && (Local2 != 0x00)))
                {
                    Local2 = M013 ((Local0 + Local1), 0x00, 0x00, 0x08)
                    Local3 = M013 ((Local0 + Local1), 0x01, 0x00, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        If ((Local3 < 0x02))
                        {
                            Local4 = M013 ((Local0 + Local1), 0x02, 0x00, 0x08)
                            If ((Local4 == 0x00))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, 0x00, 0x10)
                                Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                                M010 (Local5, Local6)
                            }
                        }

                        If ((Local3 == 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x03, 0x00, 0x20)
                            Sleep (((Local5 + 0x03E7) / 0x03E8))
                        }
                    }

                    Local1 += 0x08
                }
            }
        }
    }

    Method (M275, 2, Serialized)
    {
        Local7 = 0x00
        If ((Arg0 != 0x00))
        {
            Local0 = M109 /* \M109 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = 0x00
                Local2 = 0x01
                While (((Local2 != 0xFF) && (Local2 != 0x00)))
                {
                    Local2 = M013 ((Local0 + Local1), 0x00, 0x00, 0x08)
                    Local3 = M013 ((Local0 + Local1), 0x01, 0x00, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        If ((Local3 < 0x02))
                        {
                            Local4 = M013 ((Local0 + Local1), 0x02, 0x00, 0x08)
                            If ((Local4 == 0x00))
                            {
                                Local5 = M013 ((Local0 + Local1), 0x03, 0x00, 0x10)
                                Local6 = M013 ((Local0 + Local1), 0x03, 0x10, 0x08)
                                If ((M009 (Local5) == Local6))
                                {
                                    Local7 = 0x01
                                }
                            }
                        }
                    }

                    Local1 += 0x08
                }
            }
        }

        Return (Local7)
    }

    Method (M113, 1, Serialized)
    {
        If ((Arg0 != 0x00))
        {
            Local0 = M108 /* \M108 */
            Local7 = 0x01
            If (Local0)
            {
                Local0 += 0x10
                Local1 = 0x00
                Local2 = 0x01
                While (((Local2 != 0xFF) && (Local2 != 0x00)))
                {
                    Local2 = M013 ((Local0 + Local1), 0x00, 0x00, 0x08)
                    If ((Local2 == Arg0))
                    {
                        Local2 = 0xFF
                        Local3 = M013 ((Local0 + Local1), 0x01, 0x00, 0x08)
                        If ((Local3 == 0x00))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, 0x00, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                        }

                        If ((Local3 == 0x01))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, 0x00, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, 0x00, 0x08)
                            Local7 &= (M009 (Local5) == Local6)
                        }

                        If ((Local3 == 0x02))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, 0x00, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, 0x00, 0x08)
                            Local7 &= (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x08, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x0A, 0x00, 0x08)
                            Local7 &= (M009 (Local5) == Local6)
                        }

                        If ((Local3 == 0x03))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, 0x00, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, 0x00, 0x08)
                            Local7 |= (M009 (Local5) == Local6)
                        }

                        If ((Local3 == 0x04))
                        {
                            Local5 = M013 ((Local0 + Local1), 0x02, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x04, 0x00, 0x08)
                            Local7 = (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x05, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x07, 0x00, 0x08)
                            Local7 |= (M009 (Local5) == Local6)
                            Local5 = M013 ((Local0 + Local1), 0x08, 0x00, 0x10)
                            Local6 = M013 ((Local0 + Local1), 0x0A, 0x00, 0x08)
                            Local7 |= (M009 (Local5) == Local6)
                        }
                    }
                    Else
                    {
                        Local1 += 0x0B
                    }
                }
            }
        }
        Else
        {
            Local7 = 0x00
        }

        If (Local7)
        {
            Local7 = 0x01
        }

        Return (Local7)
    }

    Method (M114, 4, Serialized)
    {
        Local7 = 0x00
        If (!M001 (Arg0, Arg1))
        {
            Name (M115, Buffer (0x05){})
            CreateWordField (M115, 0x00, M116)
            CreateField (M115, 0x10, 0x03, M117)
            CreateField (M115, 0x13, 0x05, M118)
            CreateByteField (M115, 0x03, M119)
            CreateByteField (M115, 0x04, M120)
            M116 = 0x05
            M119 = 0x00
            M118 = Arg0
            M117 = Arg1
            If ((Arg2 == 0x00))
            {
                If ((Arg3 != 0x01))
                {
                    M120 = 0x00
                    \_SB.ALIB (0x06, M115)
                }
            }
            Else
            {
                If ((Arg3 != 0x01))
                {
                    M120 = 0x01
                    \_SB.ALIB (0x06, M115)
                }

                Local0 = M017 (0x00, Arg0, Arg1, 0x19, 0x00, 0x08)
                If (((Local0 != 0x00) && (Local0 != 0xFF)))
                {
                    Local1 = M019 (Local0, 0x00, 0x00, 0x00)
                    Local2 = 0x7FFFFFFF
                    Local2 |= 0x80000000
                    If (((Local1 != 0x00) && (Local1 != Local2)))
                    {
                        Local7 = 0x01
                    }
                }
            }
        }
        ElseIf ((Arg2 == 0x00))
        {
            M002 (0x01, Arg1)
        }
        Else
        {
            M002 (0x00, Arg1)
            Local0 = M017 (0x00, Arg0, Arg1, 0x19, 0x00, 0x08)
            If (((Local0 != 0x00) && (Local0 != 0xFF)))
            {
                Local1 = M019 (Local0, 0x00, 0x00, 0x00)
                Local2 = 0x7FFFFFFF
                Local2 |= 0x80000000
                If (((Local1 != 0x00) && (Local1 != Local2)))
                {
                    Local7 = 0x01
                }
            }
        }

        Return (Local7)
    }

    Method (M252, 3, Serialized)
    {
        If ((M085 >= 0x08))
        {
            Local0 = M251 /* \M251 */
            If (Local0)
            {
                Local0 += 0x10
                Local1 = 0x00
                Local2 = 0x00
                While ((Local2 != 0xFF))
                {
                    Local2 = M011 ((Local0 + Local1), 0x00, 0x00, 0x08)
                    Local3 = M011 ((Local0 + Local1), 0x01, 0x00, 0x08)
                    Local4 = M011 ((Local0 + Local1), 0x02, 0x00, 0x08)
                    Local5 = M011 ((Local0 + Local1), 0x03, 0x00, 0x08)
                    If (((Local2 == Arg0) && (Local3 == Arg1)))
                    {
                        If ((Local4 == Arg2))
                        {
                            Return (Local5)
                        }
                    }

                    Local1 += 0x04
                }
            }
        }

        Return (0xFFFFFFFF)
    }

    Name (M046, Zero)
    Name (M047, Ones)
    Method (M045, 0, Serialized)
    {
        Local0 = 0x00
        If ((M047 == Ones))
        {
            M047 = 0x00
            M046 = 0x00
            If (CondRefOf (\_OSI))
            {
                If (\_OSI ("Windows 2012"))
                {
                    M046 = 0x01
                }

                If (\_OSI ("Windows 2013"))
                {
                    M046 = 0x01
                }

                If (\_OSI ("Windows 2015"))
                {
                    M046 = 0x01
                }

                If (\_OSI ("Windows 2016"))
                {
                    M046 = 0x01
                }

                If (\_OSI ("Windows 2017"))
                {
                    M046 = 0x01
                }
            }
        }

        If ((M046 == 0x01))
        {
            Local0 = 0x01
        }

        Return (Local0)
    }

    Method (M049, 2, Serialized)
    {
        Local0 = 0x00
        If ((Arg0 != 0x00))
        {
            Local0 = M011 (Arg0, Arg1, 0x00, 0x08)
        }

        Return (Local0)
    }

    Method (M04A, 2, Serialized)
    {
        Local0 = 0x00
        If ((Arg0 != 0x00))
        {
            Local0 = M011 (Arg0, Arg1, 0x00, 0x08)
            Local1 = M011 (Arg0, (Arg1 + 0x01), 0x00, 0x08)
            Local0 |= (Local1 << 0x08)
        }

        Return (Local0)
    }

    Method (M04B, 2, Serialized)
    {
        Local0 = 0x00
        If ((Arg0 != 0x00))
        {
            Local0 = M011 (Arg0, Arg1, 0x00, 0x08)
            Local1 = M011 (Arg0, (Arg1 + 0x01), 0x00, 0x08)
            Local2 = M011 (Arg0, (Arg1 + 0x02), 0x00, 0x08)
            Local3 = M011 (Arg0, (Arg1 + 0x03), 0x00, 0x08)
            Local0 |= (Local1 << 0x08)
            Local0 |= (Local2 << 0x10)
            Local0 |= (Local3 << 0x18)
        }

        Return (Local0)
    }

    Mutex (M230, 0x00)
    Method (M232, 3, Serialized)
    {
        Local0 = Arg0
        Local1 = Arg1
        Local2 = Arg2
        Acquire (M230, 0xFFFF)
        Local0 = Arg0
        OperationRegion (VARM, SystemIO, M231, 0x02)
        Field (VARM, ByteAcc, NoLock, Preserve)
        {
            VAR1,   8, 
            VAR2,   8
        }

        VAR2 = Local1
        VAR1 = Local0
        Sleep (Local2)
        Release (M230)
    }

    Method (M043, 3, Serialized)
    {
        If (CondRefOf (MOEM))
        {
            Return (MOEM (Arg0, Arg1, Arg2))
        }
        Else
        {
            Return (0x00)
        }
    }

    Method (MLIB, 2, Serialized)
    {
        Switch (ToInteger (Arg0))
        {
            Case (0x00)
            {
                Local0 = DerefOf (Arg1 [0x02])
                Switch (ToInteger (Local0))
                {
                    Case (0x03)
                    {
                        M228 (0x04)
                        M228 (0x05)
                    }
                    Case (0x04)
                    {
                        M228 (0x04)
                        M228 (0x06)
                    }
                    Case (0x05)
                    {
                        M228 (0x04)
                        M228 (0x07)
                    }

                }
            }

        }
    }

    Method (M248, 1, Serialized)
    {
        If ((M085 == 0x08))
        {
            If ((Arg0 == 0x00))
            {
                Return (M017 (0x00, 0x07, 0x01, 0x19, 0x00, 0x08))
            }
            Else
            {
                Return (M017 (0x00, 0x08, 0x01, 0x19, 0x00, 0x08))
            }
        }
        ElseIf ((M085 >= 0x0B))
        {
            If ((Arg0 == 0x00))
            {
                Return (M017 (0x00, 0x07, 0x01, 0x19, 0x00, 0x08))
            }
            Else
            {
                Return (M017 (0x00, 0x08, Arg0, 0x19, 0x00, 0x08))
            }
        }
        ElseIf ((M085 >= 0x09))
        {
            If ((Arg0 == 0x00))
            {
                Return (M017 (0x00, 0x08, 0x01, 0x19, 0x00, 0x08))
            }
            Else
            {
                Return (M017 (0x00, 0x08, 0x02, 0x19, 0x00, 0x08))
            }
        }
        Else
        {
            Return (0x00)
        }
    }

    Method (M401, 2, NotSerialized)
    {
        Local0 = (Arg0 & 0x1F)
        Local0 = ((Local0 << 0x03) | (Arg1 & 0x07))
        Local1 = 0x00
        If (((M085 >= 0x09) && (M085 <= 0x0A)))
        {
            Local2 = 0x07
        }
        Else
        {
            Local2 = 0x0A
        }

        Local3 = 0x14301000
        Local4 = M249 (0x00, 0x00, 0x00, ((Local1 * 0x04) + Local3
            ))
        While (((Local1 < Local2) && (Local4 != Local0)))
        {
            Local1++
            Local4 = M249 (0x00, 0x00, 0x00, ((Local1 * 0x04) + Local3
                ))
        }

        If ((Local1 <= Local2))
        {
            Return (Local1)
        }
        Else
        {
            Return (0xFF)
        }
    }

    Method (M402, 2, NotSerialized)
    {
        Local4 = M401 (Arg0, Arg1)
        If ((Local4 != 0xFF))
        {
            If (((M085 >= 0x08) && (M085 <= 0x0B)))
            {
                Local0 = M249 (0x00, 0x00, 0x00, 0x11180188)
                Local0 &= 0xFFFFDFFF
                M250 (0x00, 0x00, 0x00, 0x11180188, (Local0 | 0x2000))
            }

            Local1 = (M019 (0x00, 0x00, 0x00, 0x84) & 0xFF00FCFF)
            Local2 = ((Arg0 << 0x13) | (Arg1 << 0x10))
            Local1 |= Local2
            M020 (0x00, 0x00, 0x00, 0x84, (Local1 | 0x0100))
            M020 (0x00, 0x00, 0x00, 0x84, (Local1 | 0x0300))
            If ((M085 >= 0x0C))
            {
                Local3 = M019 (0x00, 0x00, 0x00, 0x84)
                Local5 = 0x4EEA
                While (((Local5 > 0x00) && ((Local3 & 0x0400) != 0x0400)))
                {
                    Local5 = (Local5 - 0x01)
                    Stall (0x63)
                    Local3 = M019 (0x00, 0x00, 0x00, 0x84)
                }
            }

            If (((M085 == 0x0D) && (Local4 >= 0x03)))
            {
                Local2 = (0x11240294 + ((Local4 - 0x03) << 0x0C))
            }
            Else
            {
                Local2 = (0x11140294 + (Local4 << 0x0C))
            }

            Local3 = M249 (0x00, 0x00, 0x00, Local2)
            Local5 = 0x4EEA
            While (((Local5 > 0x00) && ((Local3 & 0x3F) != 0x1F)))
            {
                Local5 = (Local5 - 0x01)
                Stall (0x63)
                Local3 = M249 (0x00, 0x00, 0x00, Local2)
            }

            M020 (0x00, 0x00, 0x00, 0x84, (Local1 | 0x0100))
            If (((M085 >= 0x08) && (M085 <= 0x0B)))
            {
                M250 (0x00, 0x00, 0x00, 0x11180188, Local0)
            }
        }
    }

    Method (M403, 3, NotSerialized)
    {
        Local4 = M401 (Arg0, Arg1)
        If ((Local4 != 0xFF))
        {
            If (((M085 == 0x0D) && (Local4 >= 0x03)))
            {
                Local2 = (0x11240280 + ((Local4 - 0x03) << 0x0C))
            }
            Else
            {
                Local2 = (0x11140280 + (Local4 << 0x0C))
            }

            Local0 = M249 (0x00, 0x00, 0x00, Local2)
            Local0 &= 0xFFBFFFFF
            Local1 = Arg2
            Local0 |= (Local1 << 0x16)
            M250 (0x00, 0x00, 0x00, Local2, Local0)
        }
    }

    Name (M404, Buffer (0x07)
    {
         0x00, 0x02, 0x06, 0x08, 0x04, 0x0A, 0x0C         // .......
    })
    Method (M405, 5, Serialized)
    {
        If ((M085 >= 0x04))
        {
            Local1 = DerefOf (M404 [Arg4])
            If ((((Arg0 > 0x00) || (Arg1 > 0x00)) || ((Arg2 > 
                0x00) || (Arg3 > 0x00))))
            {
                If ((Arg3 == 0x02))
                {
                    Local0 = M249 (Arg0, Arg1, Arg2, 0x02D02300)
                }
                Else
                {
                    Local0 = M249 (Arg0, Arg1, Arg2, 0x02D01E00)
                }

                Local0 <<= (Local1 * 0x02)
                Local0 &= 0x03
            }
            ElseIf ((Local1 >= 0x04))
            {
                Local0 = M011 ((M084 + 0x0E00), 0x01, ((Local1 - 0x04
                    ) * 0x02), 0x02)
            }
            Else
            {
                Local0 = M011 ((M084 + 0x0E00), 0x00, (Local1 * 0x02), 
                    0x02)
            }
        }
        Else
        {
            Local0 = M011 ((M084 + 0x0E00), (Arg4 / 0x02), (
                (Arg4 & 0x01) * 0x04), 0x04)
        }

        Return (Local0)
    }

    Method (M406, 6, Serialized)
    {
        If ((M085 >= 0x04))
        {
            Local1 = DerefOf (M404 [Arg4])
            If ((((Arg0 > 0x00) || (Arg1 > 0x00)) || ((Arg2 > 
                0x00) || (Arg3 > 0x00))))
            {
                If ((Arg3 == 0x02))
                {
                    Local0 = M249 (Arg0, Arg1, Arg2, 0x02D02300)
                }
                Else
                {
                    Local0 = M249 (Arg0, Arg1, Arg2, 0x02D01E00)
                }

                Local0 &= (0xFFFFFFFF ^ (0x03 << (Local1 << 0x01)))
                Local0 |= (Arg5 << (Local1 << 0x01))
                If ((Arg3 == 0x02))
                {
                    M250 (Arg0, Arg1, Arg2, 0x02D02300, Local0)
                }
                Else
                {
                    M250 (Arg0, Arg1, Arg2, 0x02D01E00, Local0)
                }
            }
            ElseIf ((Local1 >= 0x04))
            {
                M012 ((M084 + 0x0E00), 0x01, ((Local1 - 0x04) * 0x02
                    ), 0x02, Arg5)
            }
            Else
            {
                M012 ((M084 + 0x0E00), 0x00, (Local1 * 0x02), 0x02, Arg5)
            }
        }
        Else
        {
            M012 ((M084 + 0x0E00), (Arg4 / 0x02), ((Arg4 & 
                0x01) * 0x04), 0x04, Arg5)
        }
    }

    Method (MPTS, 1, NotSerialized)
    {
        Local0 = M049 (M128, 0x67)
        If (((Local0 & 0x03) == 0x03))
        {
            If ((M085 >= 0x08))
            {
                \_SB.PCI0.GP18.SATA.TPTS (Arg0)
            }
            Else
            {
                \_SB.PCI0.SATA.TPTS (Arg0)
            }
        }

        If ((M226 != 0x00))
        {
            \_SB.M263 (Arg0)
        }
    }

    Method (MWAK, 1, NotSerialized)
    {
        Local0 = M049 (M128, 0x67)
        If (((Local0 & 0x03) == 0x03))
        {
            If ((M085 >= 0x08))
            {
                \_SB.PCI0.GP18.SATA.TWAK (Arg0)
            }
            Else
            {
                \_SB.PCI0.SATA.TWAK (Arg0)
            }
        }

        If ((M226 != 0x00))
        {
            \_SB.M264 (Arg0)
        }

        If ((M280 != 0x00))
        {
            \_SB.M284 (Arg0)
        }
    }
}



SSDT4
-----
DefinitionBlock ("", "SSDT", 1, "LENOVO", "AmdTable", 0x00000001)
{
    External (_SB_.ALIB, MethodObj)    // 2 Arguments
    External (_SB_.PCI0.GP17.VGA_, DeviceObj)
    External (_SB_.PCI0.GP17.VGA_.AFN0, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.GP17.VGA_.AFN1, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.GP17.VGA_.AFN2, MethodObj)    // 2 Arguments
    External (_SB_.PCI0.GP17.VGA_.AFN3, MethodObj)    // 2 Arguments
    External (_SB_.PCI0.GP17.VGA_.AFN4, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.GP17.VGA_.AFN5, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.GP17.VGA_.AFN6, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.GP17.VGA_.AFN7, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.GP17.VGA_.AFN8, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.GP17.VGA_.AFNC, MethodObj)    // 2 Arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN0, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN1, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN2, MethodObj)    // 2 Arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN3, MethodObj)    // 2 Arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN4, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN5, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN6, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN7, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFN8, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.GPP0.SWUS.SWDS.VGA_.AFNC, MethodObj)    // 2 Arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN0, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN1, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN2, MethodObj)    // 2 Arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN3, MethodObj)    // 2 Arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN4, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN5, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN6, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN7, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.GPP0.VGA_.AFN8, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.GPP0.VGA_.AFNC, MethodObj)    // 2 Arguments
    External (M037, DeviceObj)
    External (M046, DeviceObj)
    External (M047, DeviceObj)
    External (M049, MethodObj)    // 2 Arguments
    External (M050, DeviceObj)
    External (M051, DeviceObj)
    External (M052, DeviceObj)
    External (M053, DeviceObj)
    External (M054, DeviceObj)
    External (M055, DeviceObj)
    External (M056, DeviceObj)
    External (M057, DeviceObj)
    External (M058, DeviceObj)
    External (M059, DeviceObj)
    External (M062, DeviceObj)
    External (M068, DeviceObj)
    External (M069, DeviceObj)
    External (M070, DeviceObj)
    External (M071, DeviceObj)
    External (M072, DeviceObj)
    External (M074, DeviceObj)
    External (M075, DeviceObj)
    External (M076, DeviceObj)
    External (M077, DeviceObj)
    External (M078, DeviceObj)
    External (M079, DeviceObj)
    External (M080, DeviceObj)
    External (M081, DeviceObj)
    External (M082, FieldUnitObj)
    External (M083, FieldUnitObj)
    External (M084, FieldUnitObj)
    External (M085, FieldUnitObj)
    External (M086, FieldUnitObj)
    External (M087, FieldUnitObj)
    External (M088, FieldUnitObj)
    External (M089, FieldUnitObj)
    External (M090, FieldUnitObj)
    External (M091, FieldUnitObj)
    External (M092, FieldUnitObj)
    External (M093, FieldUnitObj)
    External (M094, FieldUnitObj)
    External (M095, FieldUnitObj)
    External (M096, FieldUnitObj)
    External (M097, FieldUnitObj)
    External (M098, FieldUnitObj)
    External (M099, FieldUnitObj)
    External (M100, FieldUnitObj)
    External (M101, FieldUnitObj)
    External (M102, FieldUnitObj)
    External (M103, FieldUnitObj)
    External (M104, FieldUnitObj)
    External (M105, FieldUnitObj)
    External (M106, FieldUnitObj)
    External (M107, FieldUnitObj)
    External (M108, FieldUnitObj)
    External (M109, FieldUnitObj)
    External (M110, FieldUnitObj)
    External (M113, MethodObj)    // 1 Arguments
    External (M115, BuffObj)
    External (M116, BuffFieldObj)
    External (M117, BuffFieldObj)
    External (M118, BuffFieldObj)
    External (M119, BuffFieldObj)
    External (M120, BuffFieldObj)
    External (M122, FieldUnitObj)
    External (M127, DeviceObj)
    External (M128, FieldUnitObj)
    External (M131, FieldUnitObj)
    External (M132, FieldUnitObj)
    External (M133, FieldUnitObj)
    External (M134, FieldUnitObj)
    External (M135, FieldUnitObj)
    External (M136, FieldUnitObj)
    External (M220, FieldUnitObj)
    External (M221, FieldUnitObj)
    External (M226, FieldUnitObj)
    External (M227, DeviceObj)
    External (M229, FieldUnitObj)
    External (M231, FieldUnitObj)
    External (M232, MethodObj)    // 3 Arguments
    External (M233, FieldUnitObj)
    External (M235, FieldUnitObj)
    External (M251, FieldUnitObj)
    External (M280, FieldUnitObj)
    External (M290, FieldUnitObj)
    External (M310, FieldUnitObj)
    External (M320, FieldUnitObj)
    External (M321, FieldUnitObj)
    External (M322, FieldUnitObj)
    External (M323, FieldUnitObj)
    External (M324, FieldUnitObj)
    External (M325, FieldUnitObj)
    External (M326, FieldUnitObj)
    External (M327, FieldUnitObj)
    External (M328, FieldUnitObj)
    External (M329, DeviceObj)
    External (M330, DeviceObj)
    External (M378, FieldUnitObj)
    External (M379, FieldUnitObj)
    External (M380, FieldUnitObj)
    External (M381, FieldUnitObj)
    External (M382, FieldUnitObj)
    External (M383, FieldUnitObj)
    External (M384, FieldUnitObj)
    External (M385, FieldUnitObj)
    External (M386, FieldUnitObj)
    External (M387, FieldUnitObj)
    External (M388, FieldUnitObj)
    External (M389, FieldUnitObj)
    External (M390, FieldUnitObj)
    External (M391, FieldUnitObj)
    External (M392, FieldUnitObj)
    External (M404, DeviceObj)

    Scope (\_SB.PCI0.GP17.VGA)
    {
        Name (M207, Buffer (0xFF){})
        Name (M208, Buffer (0x03){})
        Name (M204, 0x01)
        Method (ATCS, 2, Serialized)
        {
            If ((Arg0 == 0x00))
            {
                ATC0 ()
            }

            If ((Arg0 == 0x01))
            {
                ATC1 ()
            }

            If ((Arg0 == 0x02))
            {
                ATC2 (Arg1)
            }

            If ((Arg0 == 0x03))
            {
                ATC3 ()
            }

            If ((Arg0 == 0x04))
            {
                ATC4 (Arg1)
            }

            If ((Arg0 == 0x06))
            {
                ATC6 (Arg1)
            }

            If ((Arg0 == 0x07))
            {
                ATC7 (Arg1)
            }

            Return (M207) /* \_SB_.PCI0.GP17.VGA_.M207 */
        }

        Method (ATC0, 0, NotSerialized)
        {
            CreateWordField (M207, 0x00, M157)
            CreateWordField (M207, 0x02, M158)
            CreateDWordField (M207, 0x04, M160)
            M157 = 0x08
            M158 = 0x01
            M160 = 0x6F
            M207 = \_SB.ALIB (0x00, M207)
        }

        Method (ATC1, 0, Serialized)
        {
            CreateWordField (M207, 0x00, M157)
            CreateDWordField (M207, 0x02, M161)
            CreateDWordField (M207, 0x06, M162)
            CreateField (M207, 0x30, 0x01, M203)
            M157 = 0x0A
            M161 = 0x01
            M162 = M100 /* External reference */
            Local0 = M049 (M133, 0x15)
            If ((Local0 & 0x80))
            {
                M204 = (Local0 & 0x01)
            }
            ElseIf ((Local0 & 0x7F))
            {
                M204 = M113 (Local0)
            }

            M203 = M204 /* \_SB_.PCI0.GP17.VGA_.M204 */
        }

        Method (ATC2, 1, Serialized)
        {
            CreateWordField (M207, 0x00, M157)
            CreateByteField (M207, 0x02, M205)
            M157 = 0x03
            M205 = 0x01
            M207 = \_SB.ALIB (0x02, Arg0)
        }

        Method (ATC3, 0, Serialized)
        {
            CreateWordField (M207, 0x00, M157)
            CreateByteField (M207, 0x02, M205)
            CreateWordField (M208, 0x00, M197)
            CreateByteField (M208, 0x02, M206)
            M157 = 0x03
            M205 = 0x01
            M197 = 0x03
            M206 = 0x01
            M207 = \_SB.ALIB (0x03, M208)
        }

        Method (ATC4, 1, Serialized)
        {
            CreateWordField (M207, 0x00, M157)
            CreateByteField (M207, 0x02, M209)
            M157 = 0x03
            M209 = 0x01
            M207 = \_SB.ALIB (0x04, Arg0)
        }

        Method (ATC6, 1, Serialized)
        {
            CreateWordField (M207, 0x00, M157)
            CreateDWordField (M207, 0x02, M234)
            M157 = 0x06
            M234 = M233 /* External reference */
        }

        Method (ATC7, 1, Serialized)
        {
            M232 (M235, 0x00, 0x01)
        }

        Method (XTRM, 2, Serialized)
        {
            If ((M105 == 0x00))
            {
                Return (Buffer (0x01)
                {
                     0x00                                             // .
                })
            }

            Local4 = M105 /* External reference */
            If ((Local4 > 0x00010000))
            {
                Local4 = 0x00010000
            }

            Local5 = Arg0
            Local6 = Arg1
            If ((Local6 > 0x1000))
            {
                Local6 = 0x1000
            }

            If ((Local5 > Local4))
            {
                Return (Buffer (Local6)
                {
                     0x00                                             // .
                })
            }

            If ((((Local5 & 0x0FFF) + Local6) > 0x1000))
            {
                Local6 = (0x1000 - (Local5 & 0x0FFF))
            }

            Name (M202, Buffer (0x1000)
            {
                 0x00                                             // .
            })
            If (((Local5 & 0xF000) == 0x00))
            {
                M202 = M106 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x1000))
            {
                M202 = M378 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x2000))
            {
                M202 = M379 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x3000))
            {
                M202 = M380 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x4000))
            {
                M202 = M381 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x5000))
            {
                M202 = M382 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x6000))
            {
                M202 = M383 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x7000))
            {
                M202 = M384 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x8000))
            {
                M202 = M385 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0x9000))
            {
                M202 = M386 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0xA000))
            {
                M202 = M387 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0xB000))
            {
                M202 = M388 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0xC000))
            {
                M202 = M389 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0xD000))
            {
                M202 = M390 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0xE000))
            {
                M202 = M391 /* External reference */
            }
            ElseIf (((Local5 & 0xF000) == 0xF000))
            {
                M202 = M392 /* External reference */
            }

            If (((Local5 + Local6) <= Local4))
            {
                If ((Local6 == 0x1000))
                {
                    Return (M202) /* \_SB_.PCI0.GP17.VGA_.XTRM.M202 */
                }
            }
            Else
            {
                Local6 = (Local4 - Local5)
            }

            Name (M393, Buffer (Local6)
            {
                 0x00                                             // .
            })
            CreateField (M202, ((Local5 & 0x0FFF) * 0x08), (Local6 * 0x08
                ), M394)
            M393 = M394 /* \_SB_.PCI0.GP17.VGA_.XTRM.M394 */
            Return (M393) /* \_SB_.PCI0.GP17.VGA_.XTRM.M393 */
        }
    }

    Method (AFN0, 0, Serialized)
    {
        If ((M087 == 0x00))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN0))
            {
                \_SB.PCI0.GP17.VGA.AFN0 ()
            }
        }

        If ((M087 == 0x01))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN0))
            {
                \_SB.PCI0.GPP0.VGA.AFN0 ()
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN0))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN0 ()
            }
        }
    }

    Method (AFN1, 1, Serialized)
    {
        If ((M087 == 0x00))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN1))
            {
                \_SB.PCI0.GP17.VGA.AFN1 (Arg0)
            }
        }

        If ((M087 == 0x01))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN1))
            {
                \_SB.PCI0.GPP0.VGA.AFN1 (Arg0)
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN1))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN1 (Arg0)
            }
        }
    }

    Method (AFN2, 2, Serialized)
    {
        If ((M087 == 0x00))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN2))
            {
                \_SB.PCI0.GP17.VGA.AFN2 (Arg0, Arg1)
            }
        }

        If ((M087 == 0x01))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN2))
            {
                \_SB.PCI0.GPP0.VGA.AFN2 (Arg0, Arg1)
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN2))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN2 (Arg0, Arg1)
            }
        }
    }

    Method (AFN3, 2, Serialized)
    {
        If ((M087 == 0x00))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN3))
            {
                \_SB.PCI0.GP17.VGA.AFN3 (Arg0, Arg1)
            }
        }

        If ((M087 == 0x01))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN3))
            {
                \_SB.PCI0.GPP0.VGA.AFN3 (Arg0, Arg1)
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN3))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN3 (Arg0, Arg1)
            }
        }
    }

    Method (AFN4, 1, Serialized)
    {
        If ((M087 == 0x00))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN4))
            {
                \_SB.PCI0.GP17.VGA.AFN4 (Arg0)
            }
        }

        If ((M087 == 0x01))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN4))
            {
                \_SB.PCI0.GPP0.VGA.AFN4 (Arg0)
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN4))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN4 (Arg0)
            }
        }
    }

    Method (AFN5, 0, Serialized)
    {
        If ((M087 == 0x00))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN5))
            {
                \_SB.PCI0.GP17.VGA.AFN5 ()
            }
        }

        If ((M087 == 0x01))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN5))
            {
                \_SB.PCI0.GPP0.VGA.AFN5 ()
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN5))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN5 ()
            }
        }
    }

    Method (AFN6, 0, Serialized)
    {
        If ((M087 == 0x00))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN6))
            {
                \_SB.PCI0.GP17.VGA.AFN6 ()
            }
        }

        If ((M087 == 0x01))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN6))
            {
                \_SB.PCI0.GPP0.VGA.AFN6 ()
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN6))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN6 ()
            }
        }
    }

    Method (AFN7, 1, Serialized)
    {
        If ((M087 == 0x00))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN7))
            {
                \_SB.PCI0.GP17.VGA.AFN7 (Arg0)
            }
        }

        If ((M087 == 0x01))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN7))
            {
                \_SB.PCI0.GPP0.VGA.AFN7 (Arg0)
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN7))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN7 (Arg0)
            }
        }
    }

    Method (AFN8, 0, Serialized)
    {
        If ((M087 == 0x00))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFN8))
            {
                \_SB.PCI0.GP17.VGA.AFN8 ()
            }
        }

        If ((M087 == 0x01))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFN8))
            {
                \_SB.PCI0.GPP0.VGA.AFN8 ()
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN8))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFN8 ()
            }
        }
    }

    Method (AFNC, 2, Serialized)
    {
        If ((M087 == 0x00))
        {
            If (CondRefOf (\_SB.PCI0.GP17.VGA.AFNC))
            {
                \_SB.PCI0.GP17.VGA.AFNC (Arg0, Arg1)
            }
        }

        If ((M087 == 0x01))
        {
            If (CondRefOf (\_SB.PCI0.GPP0.VGA.AFNC))
            {
                \_SB.PCI0.GPP0.VGA.AFNC (Arg0, Arg1)
            }

            If (CondRefOf (\_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFNC))
            {
                \_SB.PCI0.GPP0.SWUS.SWDS.VGA.AFNC (Arg0, Arg1)
            }
        }
    }
}



SSDT5
-----
DefinitionBlock ("", "SSDT", 2, "LENOVO", "Tpm2Tabl", 0x00001000)
{
    Scope (\_SB)
    {
        Device (TPM)
        {
            Name (_HID, "NTC0702")  // _HID: Hardware ID
            Noop
            Name (_CID, "MSFT0101" /* TPM 2.0 Security Device */)  // _CID: Compatible ID
            Name (_STR, Unicode ("TPM 2.0 Device"))  // _STR: Description String
            OperationRegion (SMIP, SystemIO, 0xB0, 0x01)
            Field (SMIP, ByteAcc, NoLock, Preserve)
            {
                IOB2,   8
            }

            OperationRegion (TPMR, SystemMemory, 0xFED40000, 0x5000)
            Field (TPMR, AnyAcc, NoLock, Preserve)
            {
                ACC0,   8, 
                Offset (0x08), 
                INTE,   32, 
                INTV,   8, 
                Offset (0x10), 
                INTS,   32, 
                INTF,   32, 
                STS0,   32, 
                Offset (0x24), 
                FIFO,   32, 
                Offset (0x30), 
                TID0,   32
            }

            OperationRegion (TNVS, SystemMemory, 0xCE3AB000, 0x2F)
            Field (TNVS, AnyAcc, NoLock, Preserve)
            {
                PPIN,   8, 
                PPIP,   32, 
                PPRP,   32, 
                PPRQ,   32, 
                PPRM,   32, 
                LPPR,   32, 
                FRET,   32, 
                MCIN,   8, 
                MCIP,   32, 
                MORD,   32, 
                MRET,   32, 
                UCRQ,   32, 
                IRQN,   32, 
                SFRB,   8
            }

            Name (RESS, ResourceTemplate ()
            {
                Memory32Fixed (ReadWrite,
                    0xFED40000,         // Address Base
                    0x00005000,         // Address Length
                    )
                Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
                {
                    0x00000001,
                    0x00000002,
                    0x00000003,
                    0x00000004,
                    0x00000005,
                    0x00000006,
                    0x00000007,
                    0x00000008,
                    0x00000009,
                    0x0000000A,
                }
            })
            Name (RESL, ResourceTemplate ()
            {
                Memory32Fixed (ReadWrite,
                    0xFED40000,         // Address Base
                    0x00005000,         // Address Length
                    )
                Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
                {
                    0x00000001,
                    0x00000002,
                    0x00000003,
                    0x00000004,
                    0x00000005,
                    0x00000006,
                    0x00000007,
                    0x00000008,
                    0x00000009,
                    0x0000000A,
                    0x0000000B,
                    0x0000000C,
                    0x0000000D,
                    0x0000000E,
                    0x0000000F,
                }
            })
            Name (RES0, ResourceTemplate ()
            {
                Memory32Fixed (ReadWrite,
                    0xFED40000,         // Address Base
                    0x00005000,         // Address Length
                    )
                Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, _Y00)
                {
                    0x0000000C,
                }
            })
            Name (RES1, ResourceTemplate ()
            {
                Memory32Fixed (ReadWrite,
                    0xFED40000,         // Address Base
                    0x00005000,         // Address Length
                    )
            })
            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                If ((IRQN == 0x00))
                {
                    Return (RES1) /* \_SB_.TPM_.RES1 */
                }
                Else
                {
                    CreateDWordField (RES0, \_SB.TPM._Y00._INT, LIRQ)  // _INT: Interrupts
                    LIRQ = IRQN /* \_SB_.TPM_.IRQN */
                    Return (RES0) /* \_SB_.TPM_.RES0 */
                }
            }

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {
                If ((IRQN != 0x00))
                {
                    CreateDWordField (Arg0, 0x11, IRQ0)
                    CreateDWordField (RES0, \_SB.TPM._Y00._INT, LIRQ)  // _INT: Interrupts
                    LIRQ = IRQ0 /* \_SB_.TPM_._SRS.IRQ0 */
                    IRQN = IRQ0 /* \_SB_.TPM_._SRS.IRQ0 */
                    CreateBitField (Arg0, 0x79, ITRG)
                    CreateBitField (RES0, \_SB.TPM._Y00._HE, LTRG)  // _HE_: High-Edge
                    LTRG = ITRG /* \_SB_.TPM_._SRS.ITRG */
                    CreateBitField (Arg0, 0x7A, ILVL)
                    CreateBitField (RES0, \_SB.TPM._Y00._LL, LLVL)  // _LL_: Low Level
                    LLVL = ILVL /* \_SB_.TPM_._SRS.ILVL */
                    If ((((TID0 & 0x0F) == 0x00) || ((TID0 & 0x0F
                        ) == 0x0F)))
                    {
                        If ((IRQ0 < 0x10))
                        {
                            INTV = (IRQ0 & 0x0F)
                        }

                        If ((ITRG == 0x01))
                        {
                            INTE |= 0x10
                        }
                        Else
                        {
                            INTE &= 0xFFFFFFEF
                        }

                        If ((ILVL == 0x00))
                        {
                            INTE |= 0x08
                        }
                        Else
                        {
                            INTE &= 0xFFFFFFF7
                        }
                    }
                }
            }

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {
                If ((IRQN == 0x00))
                {
                    Return (RES1) /* \_SB_.TPM_.RES1 */
                }
                ElseIf ((SFRB == 0x00))
                {
                    Return (RESL) /* \_SB_.TPM_.RESL */
                }
                Else
                {
                    Return (RESS) /* \_SB_.TPM_.RESS */
                }
            }

            Method (PTS, 1, Serialized)
            {
                If (((Arg0 < 0x06) && (Arg0 > 0x03)))
                {
                    If (!(MORD & 0x10))
                    {
                        MCIP = 0x02
                        IOB2 = MCIN /* \_SB_.TPM_.MCIN */
                    }
                }

                Return (0x00)
            }

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                If ((ACC0 == 0xFF))
                {
                    Return (0x00)
                }

                Return (0x0F)
            }

            Method (HINF, 1, Serialized)
            {
                Switch (ToInteger (Arg0))
                {
                    Case (0x00)
                    {
                        Return (Buffer (0x01)
                        {
                             0x03                                             // .
                        })
                    }
                    Case (0x01)
                    {
                        Name (TPMV, Package (0x02)
                        {
                            0x01, 
                            Package (0x02)
                            {
                                0x02, 
                                0x00
                            }
                        })
                        If ((_STA () == 0x00))
                        {
                            Return (Package (0x01)
                            {
                                0x00
                            })
                        }

                        Return (TPMV) /* \_SB_.TPM_.HINF.TPMV */
                    }
                    Default
                    {
                        BreakPoint
                    }

                }

                Return (Buffer (0x01)
                {
                     0x00                                             // .
                })
            }

            Name (TPM2, Package (0x02)
            {
                Zero, 
                Zero
            })
            Name (TPM3, Package (0x03)
            {
                Zero, 
                Zero, 
                Zero
            })
            Method (TPPI, 2, Serialized)
            {
                Switch (ToInteger (Arg0))
                {
                    Case (0x00)
                    {
                        Return (Buffer (0x02)
                        {
                             0xFF, 0x01                                       // ..
                        })
                    }
                    Case (0x01)
                    {
                        Return ("1.3")
                    }
                    Case (0x02)
                    {
                        PPRQ = DerefOf (Arg1 [0x00])
                        PPRM = 0x00
                        PPIP = 0x02
                        IOB2 = PPIN /* \_SB_.TPM_.PPIN */
                        Return (FRET) /* \_SB_.TPM_.FRET */
                    }
                    Case (0x03)
                    {
                        TPM2 [0x01] = PPRQ /* \_SB_.TPM_.PPRQ */
                        Return (TPM2) /* \_SB_.TPM_.TPM2 */
                    }
                    Case (0x04)
                    {
                        Return (0x02)
                    }
                    Case (0x05)
                    {
                        PPIP = 0x05
                        IOB2 = PPIN /* \_SB_.TPM_.PPIN */
                        TPM3 [0x01] = LPPR /* \_SB_.TPM_.LPPR */
                        TPM3 [0x02] = PPRP /* \_SB_.TPM_.PPRP */
                        Return (TPM3) /* \_SB_.TPM_.TPM3 */
                    }
                    Case (0x06)
                    {
                        Return (0x03)
                    }
                    Case (0x07)
                    {
                        PPIP = 0x07
                        PPRQ = DerefOf (Arg1 [0x00])
                        PPRM = 0x00
                        If ((PPRQ == 0x17))
                        {
                            PPRM = DerefOf (Arg1 [0x01])
                        }

                        IOB2 = PPIN /* \_SB_.TPM_.PPIN */
                        Return (FRET) /* \_SB_.TPM_.FRET */
                    }
                    Case (0x08)
                    {
                        PPIP = 0x08
                        UCRQ = DerefOf (Arg1 [0x00])
                        IOB2 = PPIN /* \_SB_.TPM_.PPIN */
                        Return (FRET) /* \_SB_.TPM_.FRET */
                    }
                    Default
                    {
                        BreakPoint
                    }

                }

                Return (0x01)
            }

            Method (TMCI, 2, Serialized)
            {
                Switch (ToInteger (Arg0))
                {
                    Case (0x00)
                    {
                        Return (Buffer (0x01)
                        {
                             0x03                                             // .
                        })
                    }
                    Case (0x01)
                    {
                        MORD = DerefOf (Arg1 [0x00])
                        MCIP = 0x01
                        IOB2 = MCIN /* \_SB_.TPM_.MCIN */
                        Return (MRET) /* \_SB_.TPM_.MRET */
                    }
                    Default
                    {
                        BreakPoint
                    }

                }

                Return (0x01)
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("cf8e16a5-c1e8-4e25-b712-4f54a96702c8") /* Unknown UUID */))
                {
                    Return (HINF (Arg2))
                }

                If ((Arg0 == ToUUID ("3dddfaa6-361b-4eb4-a424-8d10089d1653") /* Physical Presence Interface */))
                {
                    Return (TPPI (Arg2, Arg3))
                }

                If ((Arg0 == ToUUID ("376054ed-cc13-4675-901c-4756d7f2d45d") /* Unknown UUID */))
                {
                    Return (TMCI (Arg2, Arg3))
                }

                Return (Buffer (0x01)
                {
                     0x00                                             // .
                })
            }
        }
    }
}



SSDT6
-----
DefinitionBlock ("", "SSDT", 1, "LENOVO", "UsbCUcsi", 0x00000001)
{
    External (_SB_.PCI0.LPC0.H_EC, DeviceObj)

    Scope (\_SB.PCI0.LPC0.H_EC)
    {
        Method (_Q79, 0, NotSerialized)  // _Qxx: EC Query, xx=0x00-0xFF
        {
            \_SB.UBTC.NTFY ()
        }
    }

    Scope (\_SB)
    {
        Device (UBTC)
        {
            Name (_HID, EisaId ("USBC000"))  // _HID: Hardware ID
            Name (_CID, EisaId ("PNP0CA0"))  // _CID: Compatible ID
            Name (_UID, Zero)  // _UID: Unique ID
            Name (_DDN, "USB Type C")  // _DDN: DOS Device Name
            Name (_ADR, Zero)  // _ADR: Address
            Name (_DEP, Package (0x01)  // _DEP: Dependencies
            {
                \_SB.PCI0.LPC0.H_EC
            })
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (0x0F)
            }

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Name (RBUF, ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0xCE3B7000,         // Address Base
                        0x00001000,         // Address Length
                        )
                })
                Return (RBUF) /* \_SB_.UBTC._CRS.RBUF */
            }

            Device (CR01)
            {
                Name (_ADR, 0x00)  // _ADR: Address
                Name (_UPC, Package (0x04)  // _UPC: USB Port Capabilities
                {
                    0xFF, 
                    0x09, 
                    0x00, 
                    0x00
                })
                Name (_PLD, Package (0x01)  // _PLD: Physical Location of Device
                {
                    ToPLD (
                        PLD_Revision           = 0x2,
                        PLD_IgnoreColor        = 0x1,
                        PLD_Red                = 0x0,
                        PLD_Green              = 0x0,
                        PLD_Blue               = 0x0,
                        PLD_Width              = 0x0,
                        PLD_Height             = 0x0,
                        PLD_UserVisible        = 0x1,
                        PLD_Dock               = 0x0,
                        PLD_Lid                = 0x0,
                        PLD_Panel              = "LEFT",
                        PLD_VerticalPosition   = "CENTER",
                        PLD_HorizontalPosition = "CENTER",
                        PLD_Shape              = "OVAL",
                        PLD_GroupOrientation   = 0x0,
                        PLD_GroupToken         = 0x0,
                        PLD_GroupPosition      = 0x1,
                        PLD_Bay                = 0x0,
                        PLD_Ejectable          = 0x0,
                        PLD_EjectRequired      = 0x0,
                        PLD_CabinetNumber      = 0x0,
                        PLD_CardCageNumber     = 0x0,
                        PLD_Reference          = 0x0,
                        PLD_Rotation           = 0x0,
                        PLD_Order              = 0x0)

                })
            }

            OperationRegion (USBC, SystemMemory, 0xCE3B7000, 0x30)
            Field (USBC, ByteAcc, Lock, Preserve)
            {
                VER1,   8, 
                VER2,   8, 
                RSV1,   8, 
                RSV2,   8, 
                CCI0,   8, 
                CCI1,   8, 
                CCI2,   8, 
                CCI3,   8, 
                CTL0,   8, 
                CTL1,   8, 
                CTL2,   8, 
                CTL3,   8, 
                CTL4,   8, 
                CTL5,   8, 
                CTL6,   8, 
                CTL7,   8, 
                MGI0,   8, 
                MGI1,   8, 
                MGI2,   8, 
                MGI3,   8, 
                MGI4,   8, 
                MGI5,   8, 
                MGI6,   8, 
                MGI7,   8, 
                MGI8,   8, 
                MGI9,   8, 
                MGIA,   8, 
                MGIB,   8, 
                MGIC,   8, 
                MGID,   8, 
                MGIE,   8, 
                MGIF,   8, 
                MGO0,   8, 
                MGO1,   8, 
                MGO2,   8, 
                MGO3,   8, 
                MGO4,   8, 
                MGO5,   8, 
                MGO6,   8, 
                MGO7,   8, 
                MGO8,   8, 
                MGO9,   8, 
                MGOA,   8, 
                MGOB,   8, 
                MGOC,   8, 
                MGOD,   8, 
                MGOE,   8, 
                MGOF,   8
            }

            OperationRegion (USBD, SystemMemory, 0xFEDF0A80, 0x60)
            Field (USBD, ByteAcc, Lock, Preserve)
            {
                CCE1,   8, 
                CCE2,   8, 
                Offset (0x10), 
                CVE1,   8, 
                CVE2,   8, 
                CRS1,   8, 
                CRS2,   8, 
                MCI0,   8, 
                MCI1,   8, 
                MCI2,   8, 
                MCI3,   8, 
                MTL0,   8, 
                MTL1,   8, 
                MTL2,   8, 
                MTL3,   8, 
                MTL4,   8, 
                MTL5,   8, 
                MTL6,   8, 
                MTL7,   8, 
                CGI0,   8, 
                CGI1,   8, 
                CGI2,   8, 
                CGI3,   8, 
                CGI4,   8, 
                CGI5,   8, 
                CGI6,   8, 
                CGI7,   8, 
                CGI8,   8, 
                CGI9,   8, 
                CGIA,   8, 
                CGIB,   8, 
                CGIC,   8, 
                CGID,   8, 
                CGIE,   8, 
                CGIF,   8, 
                CGO0,   8, 
                CGO1,   8, 
                CGO2,   8, 
                CGO3,   8, 
                CGO4,   8, 
                CGO5,   8, 
                CGO6,   8, 
                CGO7,   8, 
                CGO8,   8, 
                CGO9,   8, 
                CGOA,   8, 
                CGOB,   8, 
                CGOC,   8, 
                CGOD,   8, 
                CGOE,   8, 
                CGOF,   8, 
                Offset (0x51), 
                CCD1,   8, 
                CCD2,   8
            }

            Method (NTFY, 0, Serialized)
            {
                Local0 = Timer
                ECR1 ()
                Local1 = ((Timer - Local0) / 0x2710)
                Notify (\_SB.UBTC, 0x80) // Status Change
            }

            Method (ECR1, 0, Serialized)
            {
                MGI0 = CGI0 /* \_SB_.UBTC.CGI0 */
                MGI1 = CGI1 /* \_SB_.UBTC.CGI1 */
                MGI2 = CGI2 /* \_SB_.UBTC.CGI2 */
                MGI3 = CGI3 /* \_SB_.UBTC.CGI3 */
                MGI4 = CGI4 /* \_SB_.UBTC.CGI4 */
                MGI5 = CGI5 /* \_SB_.UBTC.CGI5 */
                MGI6 = CGI6 /* \_SB_.UBTC.CGI6 */
                MGI7 = CGI7 /* \_SB_.UBTC.CGI7 */
                MGI8 = CGI8 /* \_SB_.UBTC.CGI8 */
                MGI9 = CGI9 /* \_SB_.UBTC.CGI9 */
                MGIA = CGIA /* \_SB_.UBTC.CGIA */
                MGIB = CGIB /* \_SB_.UBTC.CGIB */
                MGIC = CGIC /* \_SB_.UBTC.CGIC */
                MGID = CGID /* \_SB_.UBTC.CGID */
                MGIE = CGIE /* \_SB_.UBTC.CGIE */
                MGIF = CGIF /* \_SB_.UBTC.CGIF */
                VER1 = CVE1 /* \_SB_.UBTC.CVE1 */
                VER2 = CVE2 /* \_SB_.UBTC.CVE2 */
                RSV1 = CRS1 /* \_SB_.UBTC.CRS1 */
                RSV2 = CRS2 /* \_SB_.UBTC.CRS2 */
                CCI0 = MCI0 /* \_SB_.UBTC.MCI0 */
                CCI1 = MCI1 /* \_SB_.UBTC.MCI1 */
                CCI2 = MCI2 /* \_SB_.UBTC.MCI2 */
                CCI3 = MCI3 /* \_SB_.UBTC.MCI3 */
                CCE2 = 0xE1
                Return (Zero)
            }

            Method (ECRD, 0, Serialized)
            {
                MGI0 = CGI0 /* \_SB_.UBTC.CGI0 */
                MGI1 = CGI1 /* \_SB_.UBTC.CGI1 */
                MGI2 = CGI2 /* \_SB_.UBTC.CGI2 */
                MGI3 = CGI3 /* \_SB_.UBTC.CGI3 */
                MGI4 = CGI4 /* \_SB_.UBTC.CGI4 */
                MGI5 = CGI5 /* \_SB_.UBTC.CGI5 */
                MGI6 = CGI6 /* \_SB_.UBTC.CGI6 */
                MGI7 = CGI7 /* \_SB_.UBTC.CGI7 */
                MGI8 = CGI8 /* \_SB_.UBTC.CGI8 */
                MGI9 = CGI9 /* \_SB_.UBTC.CGI9 */
                MGIA = CGIA /* \_SB_.UBTC.CGIA */
                MGIB = CGIB /* \_SB_.UBTC.CGIB */
                MGIC = CGIC /* \_SB_.UBTC.CGIC */
                MGID = CGID /* \_SB_.UBTC.CGID */
                MGIE = CGIE /* \_SB_.UBTC.CGIE */
                MGIF = CGIF /* \_SB_.UBTC.CGIF */
                VER1 = CVE1 /* \_SB_.UBTC.CVE1 */
                VER2 = CVE2 /* \_SB_.UBTC.CVE2 */
                RSV1 = CRS1 /* \_SB_.UBTC.CRS1 */
                RSV2 = CRS2 /* \_SB_.UBTC.CRS2 */
                CCI0 = MCI0 /* \_SB_.UBTC.MCI0 */
                CCI1 = MCI1 /* \_SB_.UBTC.MCI1 */
                CCI2 = MCI2 /* \_SB_.UBTC.MCI2 */
                CCI3 = MCI3 /* \_SB_.UBTC.MCI3 */
                Return (Zero)
            }

            Method (ECWR, 0, Serialized)
            {
                CGO0 = MGO0 /* \_SB_.UBTC.MGO0 */
                CGO1 = MGO1 /* \_SB_.UBTC.MGO1 */
                CGO2 = MGO2 /* \_SB_.UBTC.MGO2 */
                CGO3 = MGO3 /* \_SB_.UBTC.MGO3 */
                CGO4 = MGO4 /* \_SB_.UBTC.MGO4 */
                CGO5 = MGO5 /* \_SB_.UBTC.MGO5 */
                CGO6 = MGO6 /* \_SB_.UBTC.MGO6 */
                CGO7 = MGO7 /* \_SB_.UBTC.MGO7 */
                CGO8 = MGO8 /* \_SB_.UBTC.MGO8 */
                CGO9 = MGO9 /* \_SB_.UBTC.MGO9 */
                CGOA = MGOA /* \_SB_.UBTC.MGOA */
                CGOB = MGOB /* \_SB_.UBTC.MGOB */
                CGOC = MGOC /* \_SB_.UBTC.MGOC */
                CGOD = MGOD /* \_SB_.UBTC.MGOD */
                CGOE = MGOE /* \_SB_.UBTC.MGOE */
                CGOF = MGOF /* \_SB_.UBTC.MGOF */
                MTL0 = CTL0 /* \_SB_.UBTC.CTL0 */
                MTL1 = CTL1 /* \_SB_.UBTC.CTL1 */
                MTL2 = CTL2 /* \_SB_.UBTC.CTL2 */
                MTL3 = CTL3 /* \_SB_.UBTC.CTL3 */
                MTL4 = CTL4 /* \_SB_.UBTC.CTL4 */
                MTL5 = CTL5 /* \_SB_.UBTC.CTL5 */
                MTL6 = CTL6 /* \_SB_.UBTC.CTL6 */
                MTL7 = CTL7 /* \_SB_.UBTC.CTL7 */
                CCE1 = 0xE0
                Return (Zero)
            }

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                If ((Arg0 == ToUUID ("6f8398c2-7ca4-11e4-ad36-631042b5008f") /* Unknown UUID */))
                {
                    If ((ToInteger (Arg2) == 0x00))
                    {
                        Return (Buffer (0x01)
                        {
                             0x0F                                             // .
                        })
                    }
                    ElseIf ((ToInteger (Arg2) == 0x01))
                    {
                        ECWR ()
                    }
                    ElseIf ((ToInteger (Arg2) == 0x02))
                    {
                        ECRD ()
                    }
                    Else
                    {
                        Return (0x00)
                    }
                }

                Return (0x00)
            }
        }
    }
}



SSDT7
-----
DefinitionBlock ("", "SSDT", 1, "LENOVO", "AmdTable", 0x00000001)
{
    External (_SB_.PCI0.GP17.ACP_, DeviceObj)
    External (_SB_.PCI0.GP17.AZAL, DeviceObj)
    External (M000, MethodObj)    // 1 Arguments
    External (M017, MethodObj)    // 6 Arguments
    External (M019, MethodObj)    // 4 Arguments
    External (M037, DeviceObj)
    External (M046, DeviceObj)
    External (M047, DeviceObj)
    External (M050, DeviceObj)
    External (M051, DeviceObj)
    External (M052, DeviceObj)
    External (M053, DeviceObj)
    External (M054, DeviceObj)
    External (M055, DeviceObj)
    External (M056, DeviceObj)
    External (M057, DeviceObj)
    External (M058, DeviceObj)
    External (M059, DeviceObj)
    External (M062, DeviceObj)
    External (M068, DeviceObj)
    External (M069, DeviceObj)
    External (M070, DeviceObj)
    External (M071, DeviceObj)
    External (M072, DeviceObj)
    External (M074, DeviceObj)
    External (M075, DeviceObj)
    External (M076, DeviceObj)
    External (M077, DeviceObj)
    External (M078, DeviceObj)
    External (M079, DeviceObj)
    External (M080, DeviceObj)
    External (M081, DeviceObj)
    External (M082, FieldUnitObj)
    External (M083, FieldUnitObj)
    External (M084, FieldUnitObj)
    External (M085, FieldUnitObj)
    External (M086, FieldUnitObj)
    External (M087, FieldUnitObj)
    External (M088, FieldUnitObj)
    External (M089, FieldUnitObj)
    External (M090, FieldUnitObj)
    External (M091, FieldUnitObj)
    External (M092, FieldUnitObj)
    External (M093, FieldUnitObj)
    External (M094, FieldUnitObj)
    External (M095, FieldUnitObj)
    External (M096, FieldUnitObj)
    External (M097, FieldUnitObj)
    External (M098, FieldUnitObj)
    External (M099, FieldUnitObj)
    External (M100, FieldUnitObj)
    External (M101, FieldUnitObj)
    External (M102, FieldUnitObj)
    External (M103, FieldUnitObj)
    External (M104, FieldUnitObj)
    External (M105, FieldUnitObj)
    External (M106, FieldUnitObj)
    External (M107, FieldUnitObj)
    External (M108, FieldUnitObj)
    External (M109, FieldUnitObj)
    External (M110, FieldUnitObj)
    External (M115, BuffObj)
    External (M116, BuffFieldObj)
    External (M117, BuffFieldObj)
    External (M118, BuffFieldObj)
    External (M119, BuffFieldObj)
    External (M120, BuffFieldObj)
    External (M122, FieldUnitObj)
    External (M127, DeviceObj)
    External (M128, FieldUnitObj)
    External (M131, FieldUnitObj)
    External (M132, FieldUnitObj)
    External (M133, FieldUnitObj)
    External (M134, FieldUnitObj)
    External (M135, FieldUnitObj)
    External (M136, FieldUnitObj)
    External (M220, FieldUnitObj)
    External (M221, FieldUnitObj)
    External (M226, FieldUnitObj)
    External (M227, DeviceObj)
    External (M229, FieldUnitObj)
    External (M231, FieldUnitObj)
    External (M233, FieldUnitObj)
    External (M235, FieldUnitObj)
    External (M249, MethodObj)    // 4 Arguments
    External (M250, MethodObj)    // 5 Arguments
    External (M251, FieldUnitObj)
    External (M276, MethodObj)    // 0 Arguments
    External (M277, MethodObj)    // 0 Arguments
    External (M280, FieldUnitObj)
    External (M290, FieldUnitObj)
    External (M310, FieldUnitObj)
    External (M320, FieldUnitObj)
    External (M321, FieldUnitObj)
    External (M322, FieldUnitObj)
    External (M323, FieldUnitObj)
    External (M324, FieldUnitObj)
    External (M325, FieldUnitObj)
    External (M326, FieldUnitObj)
    External (M327, FieldUnitObj)
    External (M328, FieldUnitObj)
    External (M329, DeviceObj)
    External (M330, DeviceObj)
    External (M378, FieldUnitObj)
    External (M379, FieldUnitObj)
    External (M380, FieldUnitObj)
    External (M381, FieldUnitObj)
    External (M382, FieldUnitObj)
    External (M383, FieldUnitObj)
    External (M384, FieldUnitObj)
    External (M385, FieldUnitObj)
    External (M386, FieldUnitObj)
    External (M387, FieldUnitObj)
    External (M388, FieldUnitObj)
    External (M389, FieldUnitObj)
    External (M390, FieldUnitObj)
    External (M391, FieldUnitObj)
    External (M392, FieldUnitObj)
    External (M404, DeviceObj)

    Name (M278, 0x01)
    Name (M279, 0x01)
    Name (M27A, 0x01)
    Method (M276, 0, NotSerialized)
    {
        If ((M27A == 0x00))
        {
            M278 = 0x00
        }

        If (((M278 == 0x01) || (M279 == 0x01)))
        {
            Local0 = M017 (0x00, 0x08, 0x01, 0x19, 0x00, 0x08)
            Local1 = M019 (Local0, 0x00, 0x05, 0x00)
            If ((M27A == 0x00))
            {
                Local1 = 0x15E21022
            }

            If (((Local0 != 0x00) && (Local0 != 0xFF)))
            {
                If ((Local1 != 0xFFFFFFFF))
                {
                    M000 (0xB4)
                    M250 (0x00, 0x00, 0x00, 0x00058A74, 0x00)
                    M250 (0x00, 0x00, 0x00, 0x00058A54, 0xC8)
                    M250 (0x00, 0x00, 0x00, 0x00058A14, 0x03)
                    Local4 = M249 (0x00, 0x00, 0x00, 0x00058A74)
                    While ((Local4 == 0x00))
                    {
                        Local4 = M249 (0x00, 0x00, 0x00, 0x00058A74)
                        If ((Local4 != 0x00))
                        {
                            Break
                        }
                    }

                    M250 (0x00, 0x00, 0x00, 0x00048720, 0x0103)
                    Local4 = 0x01
                    Local5 = 0x64
                    While (((Local4 != 0x00) && Local5))
                    {
                        Local4 = M249 (0x00, 0x00, 0x00, 0x00048720)
                        Local4 |= 0x06
                        Local4 &= 0xFFFFFF0F
                        M250 (0x00, 0x00, 0x00, 0x00048720, Local4)
                        Local4 = M249 (0x00, 0x00, 0x00, 0x00048728)
                        Local4 &= 0x03
                        Local5--
                        Stall (0x63)
                    }

                    M250 (0x00, 0x00, 0x00, 0x00048720, 0x00)
                    M000 (0xB5)
                }
            }
        }
    }

    Method (M277, 0, NotSerialized)
    {
        If ((M27A == 0x00))
        {
            M278 = 0x00
        }

        If (((M278 == 0x00) && (M279 == 0x00)))
        {
            Local0 = M017 (0x00, 0x08, 0x01, 0x19, 0x00, 0x08)
            Local1 = M019 (Local0, 0x00, 0x05, 0x00)
            If ((M27A == 0x00))
            {
                Local1 = 0x15E21022
            }

            If (((Local0 != 0x00) && (Local0 != 0xFF)))
            {
                If ((Local1 != 0xFFFFFFFF))
                {
                    M000 (0xB6)
                    M250 (0x00, 0x00, 0x00, 0x00058A74, 0x00)
                    M250 (0x00, 0x00, 0x00, 0x00058A54, 0x00)
                    M250 (0x00, 0x00, 0x00, 0x00058A14, 0x03)
                    Local4 = M249 (0x00, 0x00, 0x00, 0x00058A74)
                    While ((Local4 == 0x00))
                    {
                        Local4 = M249 (0x00, 0x00, 0x00, 0x00058A74)
                        If ((Local4 != 0x00))
                        {
                            Break
                        }
                    }

                    M250 (0x00, 0x00, 0x00, 0x00048720, 0x0101)
                    Local4 = 0x01
                    Local5 = 0x64
                    While (((Local4 != 0x02) && Local5))
                    {
                        Local4 = M249 (0x00, 0x00, 0x00, 0x00048720)
                        Local4 |= 0x06
                        Local4 &= 0xFFFFFF0F
                        M250 (0x00, 0x00, 0x00, 0x00048720, Local4)
                        Local4 = M249 (0x00, 0x00, 0x00, 0x00048728)
                        Local4 &= 0x03
                        Local5--
                        Stall (0x63)
                    }

                    M250 (0x00, 0x00, 0x00, 0x00048720, 0x00)
                    M000 (0xB7)
                }
            }
        }
    }

    Scope (\_SB.PCI0.GP17.ACP)
    {
        Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
        {
            M278 = 0x01
            M276 ()
        }

        Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
        {
            M278 = 0x00
            M277 ()
        }
    }

    Scope (\_SB.PCI0.GP17.AZAL)
    {
        Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
        {
            M279 = 0x01
            M276 ()
        }

        Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
        {
            M279 = 0x00
            M277 ()
        }
    }
}



SSDT8
-----
DefinitionBlock ("", "SSDT", 1, "LENOVO", "AmdTable", 0x00000001)
{
    External (_SB_.ALIB, MethodObj)    // 2 Arguments
    External (_SB_.LID_._LID, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.GP17.VGA_, DeviceObj)
    External (M000, MethodObj)    // 1 Arguments
    External (M012, MethodObj)    // 5 Arguments
    External (M013, MethodObj)    // 4 Arguments
    External (M019, MethodObj)    // 4 Arguments
    External (M020, MethodObj)    // 5 Arguments
    External (M021, MethodObj)    // 4 Arguments
    External (M023, MethodObj)    // 3 Arguments
    External (M024, MethodObj)    // 3 Arguments
    External (M025, MethodObj)    // 3 Arguments
    External (M026, MethodObj)    // 3 Arguments
    External (M037, DeviceObj)
    External (M043, MethodObj)    // 3 Arguments
    External (M046, DeviceObj)
    External (M047, DeviceObj)
    External (M049, MethodObj)    // 2 Arguments
    External (M050, DeviceObj)
    External (M051, DeviceObj)
    External (M052, DeviceObj)
    External (M053, DeviceObj)
    External (M054, DeviceObj)
    External (M055, DeviceObj)
    External (M056, DeviceObj)
    External (M057, DeviceObj)
    External (M058, DeviceObj)
    External (M059, DeviceObj)
    External (M062, DeviceObj)
    External (M068, DeviceObj)
    External (M069, DeviceObj)
    External (M070, DeviceObj)
    External (M071, DeviceObj)
    External (M072, DeviceObj)
    External (M074, DeviceObj)
    External (M075, DeviceObj)
    External (M076, DeviceObj)
    External (M077, DeviceObj)
    External (M078, DeviceObj)
    External (M079, DeviceObj)
    External (M080, DeviceObj)
    External (M081, DeviceObj)
    External (M082, FieldUnitObj)
    External (M083, FieldUnitObj)
    External (M084, FieldUnitObj)
    External (M085, FieldUnitObj)
    External (M086, FieldUnitObj)
    External (M087, FieldUnitObj)
    External (M088, FieldUnitObj)
    External (M089, FieldUnitObj)
    External (M090, FieldUnitObj)
    External (M091, FieldUnitObj)
    External (M092, FieldUnitObj)
    External (M093, FieldUnitObj)
    External (M094, FieldUnitObj)
    External (M095, FieldUnitObj)
    External (M096, FieldUnitObj)
    External (M097, FieldUnitObj)
    External (M098, FieldUnitObj)
    External (M099, FieldUnitObj)
    External (M100, FieldUnitObj)
    External (M101, FieldUnitObj)
    External (M102, FieldUnitObj)
    External (M103, FieldUnitObj)
    External (M104, FieldUnitObj)
    External (M105, FieldUnitObj)
    External (M106, FieldUnitObj)
    External (M107, FieldUnitObj)
    External (M108, FieldUnitObj)
    External (M109, FieldUnitObj)
    External (M110, FieldUnitObj)
    External (M111, MethodObj)    // 2 Arguments
    External (M112, MethodObj)    // 2 Arguments
    External (M113, MethodObj)    // 1 Arguments
    External (M115, BuffObj)
    External (M116, BuffFieldObj)
    External (M117, BuffFieldObj)
    External (M118, BuffFieldObj)
    External (M119, BuffFieldObj)
    External (M120, BuffFieldObj)
    External (M122, FieldUnitObj)
    External (M127, DeviceObj)
    External (M128, FieldUnitObj)
    External (M131, FieldUnitObj)
    External (M132, FieldUnitObj)
    External (M133, FieldUnitObj)
    External (M134, FieldUnitObj)
    External (M135, FieldUnitObj)
    External (M136, FieldUnitObj)
    External (M220, FieldUnitObj)
    External (M221, FieldUnitObj)
    External (M226, FieldUnitObj)
    External (M227, DeviceObj)
    External (M229, FieldUnitObj)
    External (M231, FieldUnitObj)
    External (M232, MethodObj)    // 3 Arguments
    External (M233, FieldUnitObj)
    External (M235, FieldUnitObj)
    External (M251, FieldUnitObj)
    External (M280, FieldUnitObj)
    External (M290, FieldUnitObj)
    External (M310, FieldUnitObj)
    External (M320, FieldUnitObj)
    External (M321, FieldUnitObj)
    External (M322, FieldUnitObj)
    External (M323, FieldUnitObj)
    External (M324, FieldUnitObj)
    External (M325, FieldUnitObj)
    External (M326, FieldUnitObj)
    External (M327, FieldUnitObj)
    External (M328, FieldUnitObj)
    External (M329, DeviceObj)
    External (M330, DeviceObj)
    External (M378, FieldUnitObj)
    External (M379, FieldUnitObj)
    External (M380, FieldUnitObj)
    External (M381, FieldUnitObj)
    External (M382, FieldUnitObj)
    External (M383, FieldUnitObj)
    External (M384, FieldUnitObj)
    External (M385, FieldUnitObj)
    External (M386, FieldUnitObj)
    External (M387, FieldUnitObj)
    External (M388, FieldUnitObj)
    External (M389, FieldUnitObj)
    External (M390, FieldUnitObj)
    External (M391, FieldUnitObj)
    External (M392, FieldUnitObj)
    External (M404, DeviceObj)

    Scope (\_SB)
    {
        Name (MACO, 0x00)
    }

    Scope (\_SB.PCI0.GP17.VGA)
    {
        Name (M189, Buffer (0x0100){})
        Name (M190, 0xFFFFFFFF)
        Name (M191, 0xFFFFFFFF)
        Method (ATPX, 2, Serialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (PX00 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (PX01 ())
            }

            If ((Arg0 == 0x02))
            {
                PX02 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
            }

            If ((Arg0 == 0x03))
            {
                PX03 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
            }

            If ((Arg0 == 0x04))
            {
                PX04 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
            }

            If ((Arg0 == 0x08))
            {
                Return (PX08 ())
            }

            If ((Arg0 == 0x09))
            {
                Return (PX09 ())
            }

            If ((Arg0 == 0x0A))
            {
                PX10 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
            }

            If ((Arg0 == 0x0B))
            {
                PX11 (DerefOf (Arg1 [0x02]))
                Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
            }

            CreateWordField (M189, 0x00, M157)
            CreateWordField (M189, 0x02, M158)
            CreateDWordField (M189, 0x04, M160)
            M157 = 0x00
            M158 = 0x00
            M160 = 0x00
            Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
        }

        Method (PX00, 0, NotSerialized)
        {
            CreateWordField (M189, 0x00, M157)
            CreateWordField (M189, 0x02, M158)
            CreateDWordField (M189, 0x04, M160)
            M157 = 0x08
            M158 = 0x01
            M160 = M098 /* External reference */
            If (M098)
            {
                Local5 = 0x7FFFFFFF
                Local5 |= 0x80000000
                Local0 = M019 (M095, M094, M093, 0x2C)
                Local1 = M019 (M095, M094, (M093 + 0x01), 0x2C)
                If ((Local0 != Local5))
                {
                    M190 = Local0
                }

                If ((Local1 != Local5))
                {
                    M191 = Local1
                }
            }

            Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
        }

        Method (PX01, 0, NotSerialized)
        {
            CreateWordField (M189, 0x00, M157)
            CreateDWordField (M189, 0x02, M161)
            CreateDWordField (M189, 0x06, M162)
            M157 = 0x0A
            M161 = 0x0003FC80
            M162 = M099 /* External reference */
            Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
        }

        Method (PX02, 1, NotSerialized)
        {
            CreateWordField (M189, 0x00, M157)
            CreateByteField (M189, 0x02, M192)
            M157 = 0x03
            M192 = (Arg0 & 0x01)
            Local7 = Buffer (0x05){}
            CreateWordField (Local7, 0x00, M197)
            CreateField (Local7, 0x10, 0x03, M200)
            CreateField (Local7, 0x13, 0x05, M199)
            CreateByteField (Local7, 0x03, M198)
            CreateByteField (Local7, 0x04, M201)
            M197 = 0x05
            M198 = 0x00
            M199 = M091 /* External reference */
            M200 = M090 /* External reference */
            Name (HPOK, 0x00)
            Local0 = M049 (M133, 0x11)
            Local6 = M113 (Local0)
            M023 (0x00, M091, M090)
            If ((M192 && Local6))
            {
                M000 (0x86)
                M112 (Local0, 0x00)
                M111 (Local0, 0x01)
                Sleep (0x20)
                M112 (Local0, 0x02)
                M112 (Local0, 0x01)
                M000 (0x87)
                HPOK = 0x00
                Sleep (0x14)
                M201 = 0x01
                Local6 = \_SB.ALIB (0x06, Local7)
                Local2 = 0x00
                While ((Local2 < 0x0F))
                {
                    M023 (0x00, M091, M090)
                    Local4 = 0x01
                    Local5 = 0xC8
                    While ((Local4 && Local5))
                    {
                        Local0 = M021 (0x00, M091, M090, 0xA5)
                        Local0 &= 0x7F
                        If (((Local0 >= 0x10) && (Local0 != 0x7F)))
                        {
                            Local4 = 0x00
                        }
                        Else
                        {
                            Sleep (0x05)
                            Local5--
                        }
                    }

                    If (!Local4)
                    {
                        Local5 = M024 (0x00, M091, M090)
                        If (Local5)
                        {
                            M026 (0x00, M091, M090)
                            Sleep (0x05)
                            Local2++
                        }
                        Else
                        {
                            Local0 = 0x00
                            If ((M025 (0x00, M091, M090) == Ones))
                            {
                                Local0 = 0x01
                            }

                            If (Local0)
                            {
                                M111 (M049 (M133, 0x17), 0x01)
                                M111 (M049 (M133, 0x18), 0x01)
                                HPOK = 0x01
                                Local2 = 0x10
                            }
                            Else
                            {
                                HPOK = 0x00
                                Local2 = 0x10
                            }
                        }
                    }
                    Else
                    {
                        Local2 = 0x10
                    }
                }

                If (!HPOK)
                {
                    M000 (0x88)
                    Local1 = M019 (M095, M094, M093, 0x00)
                    Sleep (0x0A)
                    Local4 = 0x01
                    Local5 = 0x05
                    While ((Local4 && Local5))
                    {
                        Local0 = M021 (0x00, M091, M090, 0xA5)
                        Local0 &= 0x7F
                        If (((Local0 <= 0x04) || (Local0 == 0x1F)))
                        {
                            Local4 = 0x00
                        }
                        Else
                        {
                            Local0 = M019 (M095, M094, M093, 0x00)
                            Sleep (0x05)
                            Local5--
                        }
                    }

                    M201 = 0x00
                    \_SB.ALIB (0x06, Local7)
                }

                If ((M097 != 0x00))
                {
                    Local0 = M019 (0x00, M091, M090, 0x54)
                    M020 (0x00, M091, M090, 0x54, (Local0 & 0xFFFF7FFC))
                    M232 (M097, 0x00, 0x10)
                    M020 (0x00, M091, M090, 0x54, (Local0 & 0xFFFF7FFF))
                }

                M000 (0x89)
            }
            Else
            {
                M000 (0x8A)
                M201 = 0x00
                \_SB.ALIB (0x06, Local7)
                M000 (0x8B)
                M111 (M049 (M133, 0x17), 0x00)
                M111 (M049 (M133, 0x18), 0x00)
                M112 (Local0, 0x00)
                Sleep (0x0A)
                M111 (Local0, 0x00)
                M023 (0x00, M091, M090)
                Local1 = M019 (M095, M094, M093, 0x00)
                Sleep (0x0A)
                Local4 = 0x01
                Local5 = 0x05
                While ((Local4 && Local5))
                {
                    Local0 = M021 (0x00, M091, M090, 0xA5)
                    Local0 &= 0x7F
                    If (((Local0 <= 0x04) || (Local0 == 0x1F)))
                    {
                        Local4 = 0x00
                    }
                    Else
                    {
                        Local1 = M019 (M095, M094, M093, 0x00)
                        Sleep (0x05)
                        Local5--
                    }
                }

                HPOK = 0x02
                M000 (0x8C)
            }

            If (HPOK)
            {
                Local5 = 0x7FFFFFFF
                Local5 |= 0x80000000
                Local1 = M019 (0x00, M091, M090, 0x54)
                M020 (0x00, M091, M090, 0x54, (Local1 & 0xFFFF7FFC))
                Local0 = M019 (M095, M094, M093, 0x00)
                If (((HPOK == 0x01) && (Local0 != Local5)))
                {
                    M020 (M095, M094, M093, 0x4C, M190)
                    Sleep (0x0A)
                    If ((M191 != Local5))
                    {
                        M020 (M095, M094, (M093 + 0x01), 0x4C, M191)
                    }

                    Sleep (0x0A)
                }

                M020 (0x00, M091, M090, 0x54, (Local1 & 0xFFFF7FFF))
            }
        }

        Method (PX03, 1, NotSerialized)
        {
            CreateWordField (M189, 0x00, M157)
            CreateWordField (M189, 0x02, M195)
            M157 = 0x04
            M195 = (Arg0 & 0x01)
            If (M195)
            {
                M111 (M049 (M133, 0x17), 0x01)
            }
            Else
            {
                M111 (M049 (M133, 0x17), 0x00)
            }
        }

        Method (PX04, 1, NotSerialized)
        {
            CreateWordField (M189, 0x00, M157)
            CreateWordField (M189, 0x02, M196)
            M157 = 0x04
            M196 = (Arg0 & 0x01)
            If (M196)
            {
                M111 (M049 (M133, 0x18), 0x01)
            }
            Else
            {
                M111 (M049 (M133, 0x18), 0x00)
            }
        }

        Method (PX08, 0, NotSerialized)
        {
            CreateWordField (M189, 0x00, M193)
            CreateWordField (M189, 0x02, M157)
            Local0 = M049 (M133, 0x19)
            M193 = Local0
            M157 = 0x05
            Local0 *= M157 /* \_SB_.PCI0.GP17.VGA_.PX08.M157 */
            Local1 = 0x00
            While ((Local1 < Local0))
            {
                Local2 = M049 (M133, (0x1A + Local1))
                M189 [(0x04 + Local1)] = Local2
                Local1++
            }

            Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
        }

        Method (PX09, 0, NotSerialized)
        {
            CreateWordField (M189, 0x00, M193)
            CreateWordField (M189, 0x02, M157)
            Local0 = M049 (M133, 0x7E)
            M193 = Local0
            M157 = 0x03
            Local0 *= M157 /* \_SB_.PCI0.GP17.VGA_.PX09.M157 */
            Local1 = 0x00
            While ((Local1 < Local0))
            {
                Local2 = M049 (M133, (0x7F + Local1))
                M189 [(0x04 + Local1)] = Local2
                Local1++
            }

            Return (M189) /* \_SB_.PCI0.GP17.VGA_.M189 */
        }

        Method (PX10, 1, NotSerialized)
        {
            CreateWordField (M189, 0x00, M157)
            CreateByteField (M189, 0x02, M192)
            M157 = 0x03
            M192 = (Arg0 & 0x01)
            \_SB.MACO = (Arg0 & 0x01)
        }

        Method (PX11, 1, NotSerialized)
        {
            CreateWordField (M189, 0x00, M157)
            CreateByteField (M189, 0x02, M162)
            M157 = 0x03
            M162 = (Arg0 & 0x01)
            Local2 = M162 /* \_SB_.PCI0.GP17.VGA_.PX11.M162 */
            Local0 = M131 /* External reference */
            If (Local0)
            {
                Local0 = M049 (M131, 0x10)
                Local1 = M049 (M131, 0x11)
                Local1 = (M084 + ((Local0 * 0x0100) + Local1))
                M012 (Local1, 0x0E, 0x00, 0x08, Local2)
            }
        }

        Name (ATIB, Buffer (0x0100){})
        Method (ATIF, 2, Serialized)
        {
            If ((Arg0 == 0x00))
            {
                Return (AF00 ())
            }

            If ((Arg0 == 0x01))
            {
                Return (AF01 ())
            }

            If ((Arg0 == 0x02))
            {
                Return (AF02 ())
            }

            If ((Arg0 == 0x03))
            {
                Return (AF03 (DerefOf (Arg1 [0x02]), DerefOf (Arg1 [0x04])))
            }

            If ((Arg0 == 0x04))
            {
                Return (AF04 ())
            }

            If ((Arg0 == 0x0F))
            {
                Return (AF15 ())
            }

            If ((Arg0 == 0x10))
            {
                Return (AF16 (DerefOf (Arg1 [0x02])))
            }
            Else
            {
                CreateWordField (ATIB, 0x00, M157)
                CreateWordField (ATIB, 0x02, M158)
                CreateDWordField (ATIB, 0x04, M159)
                CreateDWordField (ATIB, 0x08, M160)
                M157 = 0x00
                M158 = 0x00
                M159 = 0x00
                M160 = 0x00
                Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
            }
        }

        Method (AF00, 0, NotSerialized)
        {
            CreateWordField (ATIB, 0x00, M157)
            CreateWordField (ATIB, 0x02, M158)
            CreateDWordField (ATIB, 0x04, M159)
            CreateDWordField (ATIB, 0x08, M160)
            M157 = 0x0C
            M158 = 0x01
            M159 = M101 /* External reference */
            If (!CondRefOf (\_SB.LID._LID))
            {
                M102 &= 0xFFFFFFF7
            }

            M160 = M102 /* External reference */
            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Method (AF01, 0, NotSerialized)
        {
            CreateWordField (ATIB, 0x00, M157)
            CreateDWordField (ATIB, 0x02, M161)
            CreateDWordField (ATIB, 0x06, M162)
            CreateByteField (ATIB, 0x0A, M163)
            Local0 = (M103 & 0xFF000000)
            Local1 = (M103 & 0x03)
            If ((Local1 == 0x02))
            {
                M157 = 0x0B
                M161 = 0x03
                M162 = Local1
                M163 = Local0
            }
            Else
            {
                M157 = 0x0A
                M161 = 0x03
                M162 = M103 /* External reference */
            }

            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Name (M164, Buffer (0x04)
        {
             0x00, 0x00, 0x00, 0x00                           // ....
        })
        Name (M210, 0x00)
        Name (M211, 0x00)
        Name (M212, 0x00)
        Name (M213, 0x00)
        Name (M214, 0x00)
        Name (M215, 0x00)
        Name (M303, 0x00)
        Name (M304, 0x00)
        Name (SSDM, 0x0A)
        Name (SCDY, 0x00)
        Method (AF02, 0, NotSerialized)
        {
            CreateBitField (M164, 0x00, M165)
            CreateBitField (M164, 0x01, M166)
            CreateBitField (M164, 0x02, M167)
            CreateBitField (M164, 0x03, M168)
            CreateBitField (M164, 0x04, M169)
            CreateBitField (M164, 0x05, M170)
            CreateBitField (M164, 0x06, M171)
            CreateBitField (M164, 0x07, M172)
            CreateBitField (M164, 0x08, M173)
            CreateBitField (M164, 0x0C, M300)
            CreateWordField (ATIB, 0x00, M157)
            CreateDWordField (ATIB, 0x02, M174)
            CreateByteField (ATIB, 0x06, M175)
            CreateByteField (ATIB, 0x07, M176)
            CreateByteField (ATIB, 0x08, M177)
            CreateByteField (ATIB, 0x09, M178)
            CreateByteField (ATIB, 0x0A, M179)
            CreateByteField (ATIB, 0x0B, M180)
            CreateByteField (ATIB, 0x0C, M181)
            CreateByteField (ATIB, 0x0D, M301)
            CreateDWordField (ATIB, 0x0E, M302)
            M157 = 0x0D
            M174 = M164 /* \_SB_.PCI0.GP17.VGA_.M164 */
            If (M165)
            {
                M165 = Zero
            }

            If (M166)
            {
                M175 = M210 /* \_SB_.PCI0.GP17.VGA_.M210 */
                M210 = Zero
                M166 = Zero
            }

            If (M167)
            {
                M176 = M211 /* \_SB_.PCI0.GP17.VGA_.M211 */
                M177 = M212 /* \_SB_.PCI0.GP17.VGA_.M212 */
                M211 = Zero
                M212 = Zero
                M167 = Zero
            }

            If (M168)
            {
                M178 = M213 /* \_SB_.PCI0.GP17.VGA_.M213 */
                M179 = M214 /* \_SB_.PCI0.GP17.VGA_.M214 */
                M213 = Zero
                M214 = Zero
                M168 = Zero
            }

            If (M169)
            {
                M180 = M215 /* \_SB_.PCI0.GP17.VGA_.M215 */
                M169 = Zero
            }

            If (M171)
            {
                M171 = Zero
            }

            If (M172)
            {
                M172 = Zero
            }

            If (M173)
            {
                M173 = Zero
            }

            If (M300)
            {
                M301 = M303 /* \_SB_.PCI0.GP17.VGA_.M303 */
                M302 = M304 /* \_SB_.PCI0.GP17.VGA_.M304 */
                M303 = Zero
                M304 = Zero
                M300 = Zero
            }

            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Method (AF03, 2, NotSerialized)
        {
            CreateWordField (ATIB, 0x00, M157)
            CreateWordField (ATIB, 0x02, M182)
            CreateWordField (ATIB, 0x04, M183)
            M182 = Arg0
            M183 = Arg1
            Name (M184, 0x06)
            Name (M185, 0x06)
            Name (M186, Buffer (0x14)
            {
                 0x00                                             // .
            })
            Name (M187, 0x00)
            M187 = M049 (M133, 0xBF)
            Local1 = 0x00
            While ((Local1 < M187))
            {
                Local2 = M049 (M133, (0xC0 + Local1))
                M186 [Local1] = Local2
                Local1++
            }

            Local1 = M182 /* \_SB_.PCI0.GP17.VGA_.AF03.M182 */
            Local1 &= 0x8B
            Local2 = M183 /* \_SB_.PCI0.GP17.VGA_.AF03.M183 */
            If (CondRefOf (\_SB.LID._LID))
            {
                Local0 = \_SB.LID._LID ()
                Local2 &= 0xFFFFFFFE
                Local2 |= Local0
            }

            Local0 = Zero
            While ((Local0 < M187))
            {
                Local3 = DerefOf (M186 [Local0])
                If ((Local3 == Local1))
                {
                    M185 = Local0
                    Local0 = M187 /* \_SB_.PCI0.GP17.VGA_.AF03.M187 */
                }
                Else
                {
                    Local0++
                }
            }

            Local0 = M185 /* \_SB_.PCI0.GP17.VGA_.AF03.M185 */
            While ((Local0 < M187))
            {
                Local0++
                If ((Local0 == M187))
                {
                    Local0 = 0x00
                }

                Local3 = DerefOf (M186 [Local0])
                If (((Local3 & Local2) == Local3))
                {
                    M184 = Local0
                    Local0 = M187 /* \_SB_.PCI0.GP17.VGA_.AF03.M187 */
                }
            }

            If ((M184 == M187))
            {
                M182 = Zero
            }
            Else
            {
                Local0 = M184 /* \_SB_.PCI0.GP17.VGA_.AF03.M184 */
                Local3 = DerefOf (M186 [Local0])
                M182 &= 0xFFFFFFF4
                M182 |= Local3
            }

            M157 = 0x04
            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Method (AF04, 0, NotSerialized)
        {
            CreateWordField (ATIB, 0x00, M157)
            CreateByteField (ATIB, 0x02, M188)
            M157 = 0x03
            Local1 = 0x00
            If (CondRefOf (\_SB.LID._LID))
            {
                Local0 = \_SB.LID._LID ()
                Local1 = (Local0 ^ 0x01)
            }

            M188 = Local1
            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Method (AF15, 0, NotSerialized)
        {
            ATIB = M104 /* External reference */
            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Method (AF16, 1, NotSerialized)
        {
            Local0 = M013 (M133, 0xD4, 0x00, 0x10)
            If (Local0)
            {
                Local1 = 0x00
                While ((Local1 < Local0))
                {
                    Local2 = M049 (M133, (0xD4 + Local1))
                    ATIB [Local1] = Local2
                    Local1++
                }
            }
            Else
            {
                Local3 = M043 (0x00, Arg0, 0x00)
                If ((ObjectType (Local3) == 0x03))
                {
                    ATIB = Local3
                }
                Else
                {
                    ATIB [0x00] = 0x05
                    ATIB [0x01] = 0x00
                    ATIB [0x02] = 0x00
                    ATIB [0x03] = 0x00
                    ATIB [0x04] = 0x02
                }
            }

            Return (ATIB) /* \_SB_.PCI0.GP17.VGA_.ATIB */
        }

        Method (AFN0, 0, Serialized)
        {
            If ((M101 & 0x01))
            {
                CreateBitField (M164, 0x00, M165)
                M165 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN1, 1, Serialized)
        {
            If ((M101 & 0x02))
            {
                Local0 = Arg0
                M210 = Local0
                CreateBitField (M164, 0x01, M166)
                M166 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN2, 2, Serialized)
        {
            If ((M101 & 0x04))
            {
                Local0 = Arg0
                M212 = Local0
                Local0 = Arg1
                M211 = Local0 &= 0x03
                CreateBitField (M164, 0x02, M167)
                M167 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN3, 2, Serialized)
        {
            If ((M101 & 0x08))
            {
                Local0 = Arg0
                M214 = Local0
                Local0 = Arg1
                M213 = Local0 &= 0x03
                CreateBitField (M164, 0x03, M168)
                M168 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN4, 1, Serialized)
        {
            If ((M101 & 0x10))
            {
                Local0 = Arg0
                Local1 = M215 /* \_SB_.PCI0.GP17.VGA_.M215 */
                M215 = Local0
                If ((Local0 == Local1)){}
                Else
                {
                    CreateBitField (M164, 0x04, M169)
                    M169 = One
                    Notify (VGA, 0x81) // Information Change
                }
            }
        }

        Method (AFN5, 0, Serialized)
        {
            If ((M101 & 0x20))
            {
                CreateBitField (M164, 0x05, M170)
                M170 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN6, 0, Serialized)
        {
            If ((M101 & 0x40))
            {
                CreateBitField (M164, 0x06, M171)
                M171 = One
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN7, 1, Serialized)
        {
            If ((M101 & 0x80))
            {
                CreateBitField (M164, 0x07, M172)
                M172 = One
                CreateByteField (ATIB, 0x0C, M181)
                M181 = Arg0
                Notify (VGA, 0x81) // Information Change
            }
        }

        Method (AFN8, 0, Serialized)
        {
            If ((M101 & 0x0100))
            {
                CreateBitField (M164, 0x08, M173)
                M173 = One
            }
        }

        Method (AFNC, 2, Serialized)
        {
            If ((M101 & 0x1000))
            {
                Local0 = (Arg0 & 0x03)
                M303 = Local0
                Local0 = (Arg1 & 0xFFFFFFFF)
                M304 = Local0
                CreateBitField (M164, 0x0C, M300)
                M300 = One
                Notify (VGA, 0x81) // Information Change
            }
        }
    }
}



TPM2
----
[000h 0000 004h]                   Signature : "TPM2"    [Trusted Platform Module hardware interface Table]
[004h 0004 004h]                Table Length : 00000034
[008h 0008 001h]                    Revision : 03
[009h 0009 001h]                    Checksum : 2A
[00Ah 0010 006h]                      Oem ID : "LENOVO"
[010h 0016 008h]                Oem Table ID : "CB-01   "
[018h 0024 004h]                Oem Revision : 00000002
[01Ch 0028 004h]             Asl Compiler ID : "PTEC"
[020h 0032 004h]       Asl Compiler Revision : 00000002

[024h 0036 004h]                    Reserved : 00000000
[028h 0040 008h]             Control Address : 0000000000000000
[030h 0048 004h]                Start Method : 00000006

Raw Table Data: Length 52 (0x34)

    0000: 54 50 4D 32 34 00 00 00 03 2A 4C 45 4E 4F 56 4F  // TPM24....*LENOVO
    0010: 43 42 2D 30 31 20 20 20 02 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0030: 06 00 00 00                                      // ....


UEFI
----
[000h 0000 004h]                   Signature : "UEFI"    [UEFI Boot Optimization Table]
[004h 0004 004h]                Table Length : 00000116
[008h 0008 001h]                    Revision : 01
[009h 0009 001h]                    Checksum : 1D
[00Ah 0010 006h]                      Oem ID : "LENOVO"
[010h 0016 008h]                Oem Table ID : "CB-01   "
[018h 0024 004h]                Oem Revision : 00000001
[01Ch 0028 004h]             Asl Compiler ID : "PTEC"
[020h 0032 004h]       Asl Compiler Revision : 00000002

[024h 0036 010h]             UUID Identifier : 0D9FB197-CEFC-4E91-ACB1-2535D9E5A844
[034h 0052 002h]                 Data Offset : 0036

Raw Table Data: Length 278 (0x116)

    0000: 55 45 46 49 16 01 00 00 01 1D 4C 45 4E 4F 56 4F  // UEFI......LENOVO
    0010: 43 42 2D 30 31 20 20 20 01 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 97 B1 9F 0D FC CE 91 4E AC B1 25 35  // ...........N..%5
    0030: D9 E5 A8 44 36 00 0B 00 00 00 10 00 00 00 D1 00  // ...D6...........
    0040: 00 00 11 00 00 00 12 00 00 00 8E 00 00 00 80 00  // ................
    0050: 00 00 81 00 00 00 82 00 00 00 20 00 00 00 EC 00  // .......... .....
    0060: 00 00 E9 00 00 00 03 25 05 FF F9 1A EB 4A 83 C4  // .......%.....J..
    0070: C2 D4 CE B1 0C A3 16 29 EA 81 A0 F9 15 41 83 85  // .......).....A..
    0080: 1A 86 4E 2F 30 9C E5 C3 71 51 DD C7 15 44 AF FB  // ..N/0...qQ...D..
    0090: AA EC D7 65 FE 15 54 D2 8E A2 52 C4 13 48 AF 26  // ...e..T...R..H.&
    00A0: 18 0D 39 D5 6C 00 B7 2B 10 7A 91 1E E9 46 BB BA  // ..9.l..+.z...F..
    00B0: B7 1F 75 BA 5E 57 05 9E E1 EE 9A 07 17 4D 8F 46  // ..u.^W.......M.F
    00C0: CF 81 12 60 DB 26 3D BE 20 33 92 49 CD 4F B8 6C  // ...`.&=. 3.I.O.l
    00D0: 60 E5 E9 15 69 1E 01 61 38 67 4A 86 3A 47 B4 29  // `...i..a8gJ.:G.)
    00E0: 9A F3 2F 3C CC 06 66 73 5E 52 29 84 65 4B B1 77  // ../<..fs^R).eK.w
    00F0: 3B 79 04 DD BF 85 AA EF E4 DC 31 57 BE 4B 8C 9E  // ;y........1W.K..
    0100: DE 67 F5 BF 93 67 58 DC AF D8 22 6E F8 42 99 66  // .g...gX..."n.B.f
    0110: 36 FF 78 8C 9C AF                                // 6.x...


VFCT
----
[000h 0000 004h]                   Signature : "VFCT"    
[004h 0004 004h]                Table Length : 0000D484
[008h 0008 001h]                    Revision : 01
[009h 0009 001h]                    Checksum : 51
[00Ah 0010 006h]                      Oem ID : "LENOVO"
[010h 0016 008h]                Oem Table ID : "CB-01   "
[018h 0024 004h]                Oem Revision : 00000001
[01Ch 0028 004h]             Asl Compiler ID : "PTEC"
[020h 0032 004h]       Asl Compiler Revision : 00000002


**** Unknown ACPI table signature [VFCT]


Raw Table Data: Length 54404 (0xD484)

    0000: 56 46 43 54 84 D4 00 00 01 51 4C 45 4E 4F 56 4F  // VFCT.....QLENOVO
    0010: 43 42 2D 30 31 20 20 20 01 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 32 9B A3 5D BD C6 CF 49 95 A6 E8 E4  // ....2..]...I....
    0030: 2E CD 79 A7 4C 00 00 00 00 00 00 00 00 00 00 00  // ..y.L...........
    0040: 00 00 00 00 00 00 00 00 00 00 00 00 04 00 00 00  // ................
    0050: 00 00 00 00 00 00 00 00 02 10 D8 15 00 00 00 00  // ................
    0060: 01 00 00 00 00 D4 00 00 55 AA 6A E9 FF 01 00 00  // ........U.j.....
    0070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0080: B0 01 00 00 00 00 49 42 4D 4A 34 90 00 00 00 00  // ......IBMJ4.....
    0090: 00 00 00 00 00 00 00 04 20 37 36 31 32 39 35 35  // ........ 7612955
    00A0: 32 30 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // 20..............
    00B0: 86 01 00 00 00 00 00 00 30 39 2F 30 32 2F 31 39  // ........09/02/19
    00C0: 2C 30 32 3A 35 36 3A 33 31 00 00 00 E9 ED 02 00  // ,02:56:31.......
    00D0: E9 F7 02 00 00 00 70 00 31 31 33 2D 52 41 56 45  // ......p.113-RAVE
    00E0: 4E 32 2D 31 31 37 00 52 41 56 45 4E 32 00 50 43  // N2-117.RAVEN2.PC
    00F0: 49 5F 45 58 50 52 45 53 53 00 30 00 0D 0A 52 61  // I_EXPRESS.0...Ra
    0100: 76 65 6E 32 20 47 65 6E 65 72 69 63 20 56 42 49  // ven2 Generic VBI
    0110: 4F 53 20 20 20 20 20 20 20 20 20 20 20 20 20 20  // OS              
    0120: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20  //                 
    0130: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20  //                 
    0140: 20 20 20 20 20 20 20 20 20 20 0D 0A 00 0D 0A 20  //           ..... 
    0150: 0D 0A 00 28 43 29 20 31 39 38 38 2D 32 30 31 30  // ...(C) 1988-2010
    0160: 2C 20 41 64 76 61 6E 63 65 64 20 4D 69 63 72 6F  // , Advanced Micro
    0170: 20 44 65 76 69 63 65 73 2C 20 49 6E 63 2E 00 41  //  Devices, Inc..A
    0180: 54 4F 4D 42 49 4F 53 42 4B 2D 41 4D 44 20 56 45  // TOMBIOSBK-AMD VE
    0190: 52 30 31 36 2E 30 30 32 2E 30 30 30 2E 30 31 31  // R016.002.000.011
    01A0: 2E 30 30 30 30 30 30 00 52 61 76 65 6E 32 47 65  // .000000.Raven2Ge
    01B0: 6E 65 72 69 00 31 39 39 32 30 30 37 31 00 34 37  // neri.19920071.47
    01C0: 39 30 37 39 20 20 00 20 20 20 20 20 20 20 20 00  // 9079  .        .
    01D0: 41 6D 64 52 61 76 65 6E 32 5F 47 65 6E 65 72 69  // AmdRaven2_Generi
    01E0: 63 5C 63 6F 6E 66 69 67 2E 68 00 00 00 90 28 00  // c\config.h....(.
    01F0: 02 02 41 54 4F 4D 00 C0 FF 02 40 01 D5 01 94 00  // ..ATOM....@.....
    0200: 32 03 00 00 00 00 02 10 02 10 B0 01 80 93 26 94  // 2.............&.
    0210: 00 00 00 00 00 00 00 00 50 43 49 52 02 10 D8 15  // ........PCIR....
    0220: 00 00 18 00 00 00 00 03 6A 00 02 10 00 80 00 00  // ........j.......
    0230: 41 4D 44 20 41 54 4F 4D 42 49 4F 53 00 87 AF 4C  // AMD ATOMBIOS...L
    0240: 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    0260: 00 00 00 00 00 00 00 00 00 00 00 00 00 1E 06 66  // ...............f
    0270: 50 66 51 66 52 66 53 66 55 66 56 66 57 0E 1F A3  // PfQfRfSfUfVfW...
    0280: 14 00 8C 0E 08 00 B2 20 E8 43 2F 0B C0 75 14 A2  // ....... .C/..u..
    0290: 02 00 66 5F 66 5E 66 5D 66 5B 66 5A 66 59 66 58  // ..f_f^f]f[fZfYfX
    02A0: 07 1F CB E8 5D 30 E8 2F 2E 32 D2 8D 3E 86 01 89  // ....]0./.2..>...
    02B0: 55 16 E8 3C 11 E8 FF 10 E8 56 12 E8 AD 02 E8 72  // U..<.....V.....r
    02C0: 28 0B C0 74 0C E8 39 00 E8 25 56 E8 FB 10 E8 74  // (..t..9..%V....t
    02D0: 56 E8 A9 00 B4 80 E8 29 2E 8A C7 66 C1 E0 10 8A  // V......)...f....
    02E0: E3 B0 20 66 A3 34 90 E8 AC 02 E8 0E 11 E8 38 30  // .. f.4........80
    02F0: 66 5F 66 5E 66 5D 66 5B 66 5A 66 59 66 58 07 1F  // f_f^f]f[fZfYfX..
    0300: CB 2E 8B 1E 08 00 83 3E 11 03 00 75 04 89 1E 0F  // .......>...u....
    0310: 03 1E 2E 8E 1E 07 03 9C FA 66 C7 06 08 01 65 F0  // .........f....e.
    0320: 00 F0 C7 06 40 00 32 03 89 1E 42 00 C7 06 B4 01  // ....@.2...B.....
    0330: 32 03 89 1E B6 01 C7 06 7C 00 16 5E 89 1E 7E 00  // 2.......|..^..~.
    0340: C7 06 0C 01 29 62 89 1E 0E 01 C7 06 A8 04 4E 58  // ....)b........NX
    0350: 89 1E AA 04 2E 8E 1E 0F 03 8B C3 A3 50 58 A3 60  // ............PX.`
    0360: 58 A3 72 58 9D 1F C3 50 4D 49 44 32 03 74 48 00  // X.rX...PMID2.tH.
    0370: 00 00 A0 00 B0 00 B8 00 C0 00 00 00 00 BB 00 00  // ................
    0380: E8 61 10 66 C1 E8 10 A3 B6 01 BB 0B 00 E8 54 10  // .a.f..........T.
    0390: 8D 3E 86 01 66 89 45 18 C3 00 E8 66 2F 80 FC A0  // .>..f.E....f/...
    03A0: 75 05 E8 3D 00 EB 11 80 FC 4F 75 05 E8 53 44 EB  // u..=.....Ou..SD.
    03B0: 07 E8 A8 49 EB 02 B4 01 E8 6D 2F CF E8 44 2F E8  // ...I.....m/..D/.
    03C0: 20 00 EB 02 B4 01 E8 5F 2F CB E8 36 2F 80 FC 4F  //  ......_/..6/..O
    03D0: 75 05 E8 2D 44 EB 07 E8 82 49 EB 02 B4 01 E8 47  // u..-D....I.....G
    03E0: 2F CB 1E 06 66 50 66 51 66 52 66 53 66 55 66 56  // /...fPfQfRfSfUfV
    03F0: 66 57 0E 1F 3C 04 75 29 2E A1 1A 00 66 C1 E0 10  // fW..<.u)....f...
    0400: 2E A1 18 00 8D 36 95 00 8A 3C 80 EF 30 B3 02 8B  // .....6...<..0...
    0410: EC 89 5E 0C 89 46 04 66 C1 E8 10 89 46 00 E9 28  // ..^..F.f....F..(
    0420: 01 3C 05 75 18 E8 DA 2C E8 AD 2C 2E A1 08 00 8B  // .<.u...,..,.....
    0430: EC 89 56 10 89 46 00 89 5E 04 E9 0C 01 3C 06 75  // ..V..F..^....<.u
    0440: 32 E8 88 0F 66 D1 E0 8B EC 89 46 14 BB 02 00 E8  // 2...f.....F.....
    0450: 92 0F 88 46 18 E8 7C 0F 66 89 46 0C BB 09 00 E8  // ...F..|.f.F.....
    0460: 82 0F 33 C0 66 89 46 00 2E 8B 16 B6 01 89 56 10  // ..3.f.F.......V.
    0470: E9 D6 00 3C 0B 75 24 0A DB 75 11 B9 80 00 BB 02  // ...<.u$..u......
    0480: 00 8B EC 89 5E 0C 89 4E 14 E9 BD 00 8A C7 E8 D0  // ....^..N........
    0490: 00 E8 34 01 0F 84 A9 00 E9 AE 00 3C 17 75 1D E8  // ..4........<.u..
    04A0: 2E 12 74 06 E8 8B 0D E8 16 17 E8 EE 09 E8 FA 0E  // ..t.............
    04B0: 33 C9 8B C8 8B EC 89 4E 14 E9 8D 00 3C 18 75 45  // 3......N....<.uE
    04C0: 0A FF 75 10 E8 B5 11 8B EC 89 46 0C E8 3B 0A 89  // ..u.......F..;..
    04D0: 4E 10 EB 75 E8 F9 11 75 68 BB 00 1C E8 E0 2D 66  // N..u...uh.....-f
    04E0: 0B C0 74 5D 23 C9 74 59 E8 CD 11 BE 00 1C E8 20  // ..t]#.tY....... 
    04F0: 0F 74 4E BE 00 1C B0 40 E8 6F 0F E8 7E 11 8B EC  // .tN....@.o..~...
    0500: 89 46 0C EB 44 3C 82 75 1A 80 FB 05 75 15 0A FF  // .F..D<.u....u...
    0510: 75 0A E8 C2 10 8B EC 89 46 14 EB 2D E8 8F 10 74  // u.......F..-...t
    0520: 18 EB 26 3C 8E 75 12 80 FF 01 74 08 80 FF 02 75  // ..&<.u....t....u
    0530: 08 80 C1 02 E8 E8 10 EB 10 8B EC C6 46 19 02 EB  // ............F...
    0540: 0F 8B EC C6 46 19 01 EB 07 32 E4 8B EC 88 66 19  // ....F....2....f.
    0550: 66 5F 66 5E 66 5D 66 5B 66 5A 66 59 66 58 07 1F  // f_f^f]f[fZfYfX..
    0560: C3 51 8A C8 B8 01 00 D3 E0 59 C3 E8 E0 2D C3 0C  // .Q.......Y...-..
    0570: 01 C3 50 51 B0 B6 E6 43 B0 33 E6 42 B0 05 E6 42  // ..PQ...C.3.B...B
    0580: E4 61 8A E0 0C 03 E6 61 8A C4 B9 C8 00 E8 0C 29  // .a.....a.......)
    0590: E6 61 59 58 C3 00 1E 56 0E 1F 80 3E 02 00 80 76  // .aYX...V...>...v
    05A0: 05 C6 06 02 00 80 8A 0E 02 00 C1 E1 09 FC C6 06  // ................
    05B0: 21 00 00 33 F6 32 E4 AC 02 E0 E2 FB F6 D4 FE C4  // !..3.2..........
    05C0: 88 26 21 00 5E 1F C3 00 57 0B C0 75 0F E8 2A 0C  // .&!.^...W..u..*.
    05D0: 74 25 E8 24 00 F6 C3 04 74 F3 EB 11 8B C8 E8 52  // t%.$....t......R
    05E0: 25 23 C1 74 12 E8 11 00 F6 C3 04 74 0A 5F 8D 5C  // %#.t.......t._.\
    05F0: 28 E8 4C 06 0B F6 C3 5F C3 50 E8 DF 0B E8 A4 24  // (.L...._.P.....$
    0600: E8 B2 24 0A C9 74 69 0A ED 74 10 8A CD B5 02 E8  // ..$..ti..t......
    0610: 0D 28 B1 02 8D 9C 48 01 E8 48 2C E8 76 02 F6 C3  // .(....H..H,.v...
    0620: 04 74 08 E8 F2 0C E8 15 23 74 45 8D 5C 28 E8 69  // .t......#tE.\(.i
    0630: 00 56 83 C6 08 E8 E1 22 5E 80 FD 02 75 11 51 E8  // .V....."^...u.Q.
    0640: 0E 18 59 80 FB 00 75 4D 51 B5 08 E8 E8 05 59 8A  // ..Y...uMQ.....Y.
    0650: DD 33 C9 E8 FF 16 0A C0 75 3B E8 37 02 8A EB 8D  // .3......u;.7....
    0660: 5C 28 80 CD 02 E8 3B 00 74 03 80 CD 04 E8 C6 05  // \(....;.t.......
    0670: 8D 9C A6 00 E8 48 2C 0A C0 74 1A 56 83 C6 08 E8  // .....H,..t.V....
    0680: 97 22 5E 8A DD B9 80 00 E8 CA 16 E8 D8 04 74 05  // ."^...........t.
    0690: 33 C9 E8 A1 05 E8 FC 01 58 C3 51 B9 49 00 E8 AA  // 3.......X.Q.I...
    06A0: 27 59 C3 51 E8 1A 00 75 14 E8 B9 01 3C 01 75 0D  // 'Y.Q...u....<.u.
    06B0: B9 20 00 E8 27 00 75 05 80 C9 01 EB 02 33 C9 59  // . ..'.u......3.Y
    06C0: C3 53 E8 FA 2B 66 3D 00 FF FF FF 75 0E 83 C3 04  // .S..+f=....u....
    06D0: E8 EC 2B 66 3D FF FF FF 00 75 00 5B C3 50 52 32  // ..+f=....u.[.PR2
    06E0: D2 E8 DB 2B 02 D0 02 D4 66 C1 E8 10 02 D0 02 D4  // ...+....f.......
    06F0: 83 C3 04 E2 EC 0A D2 5A 58 C3 E8 DF 0A 8D 9C 4C  // .......ZX......L
    0700: 01 E8 39 01 E8 8D 01 B5 13 F6 C3 08 75 0C E8 07  // ..9.........u...
    0710: 0C 8A EA 80 FD 13 75 02 B5 03 66 50 8D 9C B8 02  // ......u...fP....
    0720: 66 33 C0 8A C5 E8 F7 2A 66 58 A9 C8 0E 74 55 E8  // f3.....*fX...tU.
    0730: 62 01 F6 C3 08 74 0F E8 0F 05 8D 5C 28 E8 04 01  // b....t.....\(...
    0740: 75 04 E8 72 00 C3 B5 02 E8 23 01 E8 46 01 F6 C3  // u..r.....#..F...
    0750: 04 74 21 8D 5C 28 E8 49 01 E8 94 03 74 05 B5 03  // .t!.\(.I....t...
    0760: E8 0B 01 E8 68 04 E8 21 01 80 FD 00 75 48 B5 02  // ....h..!....uH..
    0770: E8 0D 01 C3 8D 9C 68 01 B8 00 55 E8 5B 11 B5 02  // ......h...U.[...
    0780: E8 FD 00 C3 A9 02 00 74 2D B5 04 E8 E0 00 E8 03  // .......t-.......
    0790: 01 F6 C3 08 74 03 E8 B0 04 8D 9C 68 01 56 E8 E5  // ....t......h.V..
    07A0: 28 8B F7 E8 68 04 5E E8 82 28 E8 D3 00 8D 5C 28  // (...h.^..(....\(
    07B0: E8 A2 28 E8 18 04 C3 B5 01 E8 B2 00 B5 02 E8 BF  // ..(.............
    07C0: 00 E8 D0 00 F6 C3 04 75 10 8D 9C 68 01 B8 00 55  // .......u...h...U
    07D0: E8 06 11 B5 02 E8 17 00 C3 E8 C6 00 B5 02 8D 5C  // ...............\
    07E0: 28 E8 6E 00 75 02 B5 01 E8 04 00 E8 E0 03 C3 8D  // (.n.u...........
    07F0: 9C B4 02 B1 02 E8 6B 2A B5 02 E8 83 00 C3 8D 9C  // ......k*........
    0800: 4C 01 E8 38 00 E8 8C 00 F6 C3 04 74 23 8D 5C 28  // L..8.......t#.\(
    0810: E8 8F 00 E8 70 28 8D 9C 68 01 06 0E 07 B9 07 00  // ....p(..h.......
    0820: E8 62 26 07 E8 63 00 E8 EE 0A 8D 5C 28 E8 61 28  // .b&..c.....\(.a(
    0830: 8D 5C 28 E8 FF 27 B8 02 00 E8 BE FE C3 B9 61 00  // .\(..'........a.
    0840: E8 08 26 C3 53 81 C3 05 01 E8 73 2A 24 06 3C 02  // ..&.S.....s*$.<.
    0850: 5B C3 E8 10 00 3D 01 04 75 0A 53 83 C3 18 E8 5E  // [....=..u.S....^
    0860: 2A 5B A8 01 C3 53 83 C3 12 E8 53 2A 5B C3 8D 9C  // *[...S....S*[...
    0870: B4 02 32 C9 E8 EC 29 C3 8D 9C B4 02 E8 40 2A C3  // ..2...)......@*.
    0880: 8D 9C B4 02 B1 01 E8 DA 29 C3 8D 9C B4 02 B1 01  // ........).......
    0890: E8 E8 29 C3 66 50 8D 9C 48 01 E8 22 2A 8A D8 66  // ..).fP..H.."*..f
    08A0: 58 C3 55 57 51 B9 08 00 BD 00 00 BB 08 00 2B D9  // X.UWQ.........+.
    08B0: D1 E3 8D 58 4E E8 07 2A E8 E3 01 E2 EE 8D 5C 4B  // ...XN..*......\K
    08C0: E8 FC 29 B9 03 00 8B D0 BF 1A 09 85 55 06 74 17  // ..).........U.t.
    08D0: 66 8B 05 8D 9A F4 01 E8 45 29 8B 45 04 8D 9A F8  // f.......E).E....
    08E0: 01 E8 53 29 83 C5 08 83 C7 08 E2 DF 8D 7C 5E B9  // ..S).........|^.
    08F0: 04 00 33 ED 8B DF E8 C6 29 0B C0 74 09 E8 5D 01  // ..3.....)..t..].
    0900: E8 97 00 83 C5 1C 83 C7 12 E2 E9 55 32 ED E8 6F  // ...........U2..o
    0910: FF 8D 5C 28 E8 4E FF 3D 01 04 75 10 83 C3 14 E8  // ..\(.N.=..u.....
    0920: 9D 29 24 70 C0 E8 04 8A E8 E8 54 FF 5D 8D 9C A6  // .)$p......T.]...
    0930: 00 E8 8B 29 0A C0 74 46 8D 9C A8 00 E8 80 29 3C  // ...)..tF......)<
    0940: 02 75 3B 66 C1 E8 10 3C 04 72 33 8D 9C A8 00 32  // .u;f...<.r3....2
    0950: E4 03 D8 8B FB B9 04 00 8B DF E8 62 29 0B C0 74  // ...........b)..t
    0960: 15 E8 F9 00 A9 80 00 75 0D E8 2E 00 83 C5 1C 55  // .......u.......U
    0970: 58 83 F8 70 73 08 83 C7 12 49 0B C9 75 DA 59 5F  // X..ps....I..u.Y_
    0980: 5D C3 20 03 58 02 3C 00 01 00 00 04 00 03 3C 00  // ]. .X.<.......<.
    0990: 00 08 80 02 E0 01 3C 00 20 00 51 8D 1D E8 1F 29  // ......<. .Q....)
    09A0: 8D 9A 68 01 E8 90 28 8D 5D 02 E8 12 29 8D 9A 6A  // ..h...(.]...)..j
    09B0: 01 E8 89 00 8D 5D 05 E8 05 29 8D 9A 6E 01 E8 7C  // .....]...)..n..|
    09C0: 00 8D 5D 08 E8 F8 28 8B C8 8A DC 66 C1 C8 10 8A  // ..]...(....f....
    09D0: D0 80 E2 0F 8A F0 C0 EE 04 8A EC C0 ED 06 8A FC  // ................
    09E0: C0 EF 04 80 E7 03 80 E4 0F C0 E4 04 0A D4 80 E2  // ................
    09F0: 3F 80 E4 C0 C0 EC 02 0A F4 8B C3 8D 9A 74 01 E8  // ?............t..
    0A00: 35 28 8D 9A 72 01 8B C1 E8 2C 28 8D 9A 76 01 33  // 5(..r....,(..v.3
    0A10: C0 8A C6 E8 21 28 8D 9A 78 01 33 C0 8A C2 E8 16  // ....!(..x.3.....
    0A20: 28 8D 5D 0C E8 98 28 8D 9A 7A 01 E8 0F 00 8D 5D  // (.]...(..z.....]
    0A30: 0F E8 8B 28 8D 9A 7E 01 E8 FC 27 59 C3 8B C8 8A  // ...(..~...'Y....
    0A40: D4 66 C1 C8 10 8A F0 80 E6 0F 8A E8 C0 ED 04 8B  // .f..............
    0A50: C1 E8 E3 27 83 C3 02 8B C2 E8 DB 27 C3 8D 5D 11  // ...'.......'..].
    0A60: E8 5C 28 8A E0 BA 06 00 C0 E8 07 74 03 80 CA 80  // .\(........t....
    0A70: 8A C4 C0 E8 03 24 03 3C 02 75 03 80 CA 40 3C 03  // .....$.<.u...@<.
    0A80: 75 12 8A C4 D0 E8 A8 01 74 03 80 E2 FD A8 02 74  // u.......t......t
    0A90: 03 80 E2 FB 8B C2 8D 9A 80 01 E8 9A 27 C3 3C 01  // ............'.<.
    0AA0: 74 3D 8B D0 0F B6 C6 24 3F 04 3C 8D 9A F8 01 E8  // t=.....$?.<.....
    0AB0: 85 27 0F B6 C2 83 C0 1F C1 E0 03 8D 9A F4 01 E8  // .'..............
    0AC0: 75 27 0F B6 DE C1 EB 06 C1 E3 02 2E F7 A7 7A 0A  // u'............z.
    0AD0: 2E F7 B7 78 0A 8D 9A F6 01 E8 5B 27 83 C5 08 C3  // ...x......['....
    0AE0: 10 00 0A 00 04 00 03 00 05 00 04 00 10 00 09 00  // ................
    0AF0: 8D 9C A6 00 E8 C8 27 0A C0 74 1F 8D 9C A8 00 51  // ......'..t.....Q
    0B00: B1 03 E8 18 00 59 0B DB 74 10 E8 B2 27 32 C0 66  // .....Y..t...'2.f
    0B10: 3D 00 03 0C 00 75 03 0B DB C3 33 DB C3 66 50 52  // =....u....3..fPR
    0B20: E8 9C 27 3C 02 75 39 80 FC 03 72 34 66 C1 E8 10  // ..'<.u9...r4f...
    0B30: 32 E4 3C 04 76 2A 03 C3 8B D0 83 C3 04 3B DA 73  // 2.<.v*.......;.s
    0B40: 1F E8 7B 27 8A E0 80 E4 E0 C0 EC 05 24 1F 38 CC  // ..{'........$.8.
    0B50: 74 08 32 E4 FE C0 03 D8 EB E3 0B DB 5A 66 58 C3  // t.2.........ZfX.
    0B60: 33 DB 5A 66 58 C3 51 8D 9C A6 00 E8 51 27 0A C0  // 3.ZfX.Q.....Q'..
    0B70: 74 1B 8D 9C A8 00 B1 12 E8 18 00 74 10 E8 3F 27  // t..........t..?'
    0B80: 66 C1 E8 10 80 E4 07 75 04 B0 01 EB 02 32 C0 0A  // f......u.....2..
    0B90: C0 59 C3 66 50 52 E8 26 27 3C 70 75 2B 66 C1 E8  // .Y.fPR.&'<pu+f..
    0BA0: 10 32 E4 83 C3 05 03 C3 8B D0 3B DA 73 1A E8 0E  // .2........;.s...
    0BB0: 27 38 C8 74 0D 66 C1 E8 10 32 E4 83 C0 03 03 D8  // '8.t.f...2......
    0BC0: EB E8 0B DB 5A 66 58 C3 33 DB 5A 66 58 C3 57 66  // ....ZfX.3.ZfX.Wf
    0BD0: 51 8D 9C 68 01 8B FB 8B DF E8 3D 00 0B C9 74 0B  // Q..h......=...t.
    0BE0: 66 8B D1 E8 A1 0F 83 C7 1C EB EC 66 59 5F C3 50  // f..........fY_.P
    0BF0: 53 51 B9 07 00 53 8B DA E8 C4 26 83 F8 00 5B 74  // SQ...S....&...[t
    0C00: 09 66 C1 E3 10 8B DA E8 56 22 59 5B 58 C3 51 53  // .f......V"Y[X.QS
    0C10: B9 07 00 E8 63 22 5B 59 C3 66 50 53 83 C3 06 E8  // ....c"[Y.fPS....
    0C20: 9D 26 5B 8B C8 66 C1 E1 10 53 83 C3 02 E8 8F 26  // .&[..f...S.....&
    0C30: 8B C8 5B 66 58 C3 8D 9C 48 01 32 C9 E8 24 26 C3  // ..[fX...H.2..$&.
    0C40: 57 B9 20 00 E8 3E 22 5F C3 E8 83 01 66 8B CA 66  // W. ..>"_....f..f
    0C50: 52 E8 C4 06 E8 E7 1C 66 5A 74 10 E8 3A 06 B3 00  // R......fZt..:...
    0C60: E8 94 19 66 3B CA 73 03 66 8B D1 8D 9C D0 03 E8  // ...f;.s.f.......
    0C70: 4D 26 0B C0 75 44 8D 9C 54 02 66 B8 48 3F 00 00  // M&..uD..T.f.H?..
    0C80: E8 9C 25 B5 01 66 81 FA 78 69 00 00 72 25 83 C3  // ..%..f..xi..r%..
    0C90: 04 66 B8 78 69 00 00 E8 85 25 B5 02 66 81 FA F0  // .f.xi....%..f...
    0CA0: D2 00 00 72 0E 83 C3 04 66 B8 F0 D2 00 00 E8 6E  // ...r....f......n
    0CB0: 25 B5 03 B1 03 E8 CF 01 EB 45 66 B9 08 00 00 00  // %........Ef.....
    0CC0: 66 33 D2 53 8D 9C 54 02 8B D3 5B E8 F1 25 0B C0  // f3.S..T...[..%..
    0CD0: 74 22 66 25 FF FF 00 00 66 D1 E0 53 8B DA E8 3E  // t"f%....f..S...>
    0CE0: 25 5B 66 C1 CA 10 FE C2 66 C1 CA 10 83 C2 04 83  // %[f.....f.......
    0CF0: C3 02 E2 D7 66 C1 CA 10 8A EA B1 03 E8 88 01 E8  // ....f...........
    0D00: 38 06 A8 01 74 3F 8D 9C AE 03 E8 B2 25 3C 00 74  // 8...t?......%<.t
    0D10: 34 E8 CF 05 8A EB E8 5C 01 32 ED E8 63 01 E8 A2  // 4......\.2..c...
    0D20: 05 8D 9C BB 02 E8 97 25 33 C9 8A C8 E8 28 01 66  // .......%3....(.f
    0D30: 3B C2 74 0E 51 E8 43 01 FE C5 E8 44 01 59 E2 EC  // ;.t.Q.C....D.Y..
    0D40: EB 03 B3 00 C3 8D 9C BB 02 E8 73 25 FE C8 8A E8  // ..........s%....
    0D50: E8 2E 01 8D 9C 40 03 B9 00 00 E8 06 25 E8 C2 02  // .....@......%...
    0D60: E8 D2 00 E8 0F 01 66 52 E8 AD 05 E8 D0 1B 66 5A  // ......fR......fZ
    0D70: 75 04 B3 00 EB 58 E8 F6 00 80 FD 01 77 07 E8 FA  // u....X......w...
    0D80: 00 0A ED 74 47 E8 1E 03 E8 32 11 80 FB 00 75 1D  // ...tG....2....u.
    0D90: E8 A7 05 A8 01 74 07 B1 0D E8 3D 19 EB 30 B5 01  // .....t....=..0..
    0DA0: E8 9E 05 E8 2F 0F B5 00 E8 96 05 EB 21 E8 BF 00  // ..../.......!...
    0DB0: 80 FD 01 76 07 D0 ED E8 BB 00 EB BA E8 76 00 E8  // ...v.........v..
    0DC0: B3 00 E8 B6 00 FE CD E8 B7 00 EB AA B3 08 C3 8D  // ................
    0DD0: 9C 29 01 E8 E9 24 66 33 D2 8A D0 66 B8 8C 0A 00  // .)...$f3...f....
    0DE0: 00 66 F7 E2 E8 31 05 E8 54 1B 75 3D 66 50 8D 9C  // .f...1..T.u=fP..
    0DF0: 28 01 E8 CA 24 3C 14 66 58 72 2E 66 50 8D 9C D0  // (...$<.fXr.fP...
    0E00: 03 E8 BB 24 0B C0 66 58 74 1F B9 07 00 8D 9C D0  // ...$..fXt.......
    0E10: 03 8B C1 D1 E0 03 D8 E8 A5 24 0B C0 75 02 E2 ED  // .........$..u...
    0E20: 66 25 FF FF 00 00 66 D1 E0 66 0B C0 75 03 B8 48  // f%....f..f..u..H
    0E30: 3F 66 8B D0 C3 8D 9C 2A 01 E8 83 24 24 0F 8A E8  // ?f.....*...$$...
    0E40: 0A ED 75 02 B5 01 C3 B5 00 8D 9C 31 01 E8 6F 24  // ..u........1..o$
    0E50: A8 01 74 02 B5 01 C3 53 51 E8 1F 00 32 E4 8A C5  // ..t....SQ...2...
    0E60: C1 E0 02 59 8D 9C 54 02 03 D8 E8 52 24 5B C3 B1  // ...Y..T....R$[..
    0E70: 02 E8 1D 00 C3 B1 02 E8 0D 00 C3 B1 01 E8 11 00  // ................
    0E80: C3 B1 01 E8 01 00 C3 53 8D 9C B8 02 E8 D4 23 5B  // .......S......#[
    0E90: C3 53 8D 9C B8 02 E8 E2 23 5B C3 33 C9 E8 75 20  // .S......#[.3..u 
    0EA0: 75 3C 66 BA 37 F1 FF FF 66 33 C0 E8 E3 04 33 C0  // u<f.7...f3....3.
    0EB0: E8 47 03 74 1C A9 C8 0E 74 F6 E8 3C F7 F6 C3 04  // .G.t....t..<....
    0EC0: 75 05 F6 C3 18 74 E9 E8 30 00 50 E8 2C F8 58 EB  // u....t..0.P.,.X.
    0ED0: DF E8 1C 00 75 08 E8 31 00 8B C1 E8 1C F8 C3 8D  // ....u..1........
    0EE0: 5D 28 66 C1 E3 10 8D 5C 28 B9 49 00 E8 71 1F C3  // ](f....\(.I..q..
    0EF0: 66 50 E8 B5 04 8B C8 66 58 C3 66 52 66 BA FF FF  // fP.....fX.fRf...
    0F00: FF FF 33 D0 E8 8A 04 66 5A C3 50 53 52 E8 E0 FF  // ..3....fZ.PSR...
    0F10: 75 09 33 C0 E8 E3 02 8B C8 EB 10 83 F9 02 74 0B  // u.3...........t.
    0F20: E8 2C 08 80 FB 01 75 03 83 E1 FD 5A 5B 58 C3 56  // .,....u....Z[X.V
    0F30: 66 33 C0 66 BA 00 F0 FF FF E8 4F 07 66 C1 E6 10  // f3.f......O.f...
    0F40: E8 C4 02 0B C0 74 03 E8 1C 00 E8 2F 07 5E C3 66  // .....t...../.^.f
    0F50: 52 66 8B D0 E8 DC 15 8D 9C 1C 03 E8 61 23 8A C2  // Rf..........a#..
    0F60: E8 BC 22 66 5A C3 50 51 E8 71 02 50 32 C0 E8 00  // .."fZ.PQ.q.P2...
    0F70: 04 E8 CC 01 E8 98 00 8D 9C 40 03 E8 41 23 38 E8  // .........@..A#8.
    0F80: 74 0A 8A C5 E8 98 22 B0 02 E8 E5 03 58 E8 CA 00  // t.....".....X...
    0F90: E8 A8 00 E8 8C 00 8D 9C 4C 01 E8 22 23 8B C8 8B  // ........L.."#...
    0FA0: D3 8D 9C 00 03 E8 17 23 3B C1 74 05 B0 02 E8 C0  // .......#;.t.....
    0FB0: 03 E8 3B FC 8D 9C 00 03 E8 55 15 8D 9C D8 02 E8  // ..;......U......
    0FC0: 5D 22 E8 8A FF 66 C1 CE 10 8B FE 66 C1 CE 10 E8  // ]"...f.....f....
    0FD0: 95 00 E8 D1 00 E8 24 03 8A E9 8D 9C DC 02 32 C9  // ......$.......2.
    0FE0: E8 80 22 E8 0D 03 66 25 FF 0F 00 00 59 58 66 BA  // .."...f%....YXf.
    0FF0: FF FF FF FF 33 D0 E8 92 06 33 D2 C3 53 66 50 8D  // ....3....3..SfP.
    1000: 9C D4 02 E8 B9 22 8A C4 E8 14 22 66 58 5B C3 53  // ....."...."fX[.S
    1010: 66 50 8D 9C D4 02 E8 A6 22 8A E0 E8 01 22 66 58  // fP......"...."fX
    1020: 5B C3 E8 73 02 E8 2E 02 8A DD E8 91 16 8A E9 8D  // [..s............
    1030: 9C 3C 03 32 C9 E8 2B 22 0B DB C3 83 EC 08 8B EC  // .<.2..+"........
    1040: E8 55 02 E8 10 02 E8 17 16 8D 9C 4C 03 E8 6F 22  // .U.........L..o"
    1050: 8A 46 00 E8 C9 21 83 C4 08 C3 8D 9C D4 02 E8 5E  // .F...!.........^
    1060: 22 32 C0 E8 B9 21 C3 E8 0A 00 8D 9C D0 02 32 C9  // "2...!........2.
    1070: E8 F0 21 C3 B5 00 8D 1D E8 44 22 66 8B D0 8D 9C  // ..!......D"f....
    1080: 02 03 E8 3A 22 0B C0 74 1C 51 8B C8 8D 9C 06 03  // ...:"..t.Q......
    1090: E8 2C 22 66 C1 E0 10 8B C1 59 66 3B C2 75 04 B5  // .,"f.....Yf;.u..
    10A0: 00 EB 02 B5 02 C3 E8 2B 02 8D 9C 40 03 B1 03 E8  // .......+...@....
    10B0: B1 21 E8 D5 F7 8D 9C 40 03 B1 02 E8 A5 21 E8 95  // .!.....@.....!..
    10C0: 01 80 FD 00 75 14 E8 A6 FD E8 8E 02 E8 88 FD 66  // ....u..........f
    10D0: 8B D0 E8 77 02 E8 8E 02 EB 21 E8 4A 02 E8 6C 02  // ...w.....!.J..l.
    10E0: E8 73 01 80 FD 02 B5 04 75 0B 81 FA 74 40 76 05  // .s......u...t@v.
    10F0: B5 08 66 D1 EA E8 6E 02 E8 5F 02 E8 2B 00 C3 66  // ..f...n.._..+..f
    1100: 52 52 32 ED 83 C1 02 B8 06 00 F7 E1 66 33 C9 8B  // RR2.........f3..
    1110: C8 5A 51 66 8B C2 8A CF 66 F7 E1 66 C1 E0 03 59  // .ZQf....f..f...Y
    1120: 66 F7 F1 66 8B C8 66 5A C3 B5 00 E8 EA 01 E8 09  // f..f..fZ........
    1130: 18 75 03 E8 11 FD 8D 9C 48 03 32 C9 E8 24 21 C3  // .u......H.2..$!.
    1140: 53 E8 5F 01 66 C1 E2 10 E8 4D 01 8D 9C B8 02 E8  // S._.f....M......
    1150: 6D 21 8A E8 8D 9C B4 02 E8 64 21 8A C8 E8 B8 14  // m!.......d!.....
    1160: 8A EB 5B C3 57 53 53 E8 D6 FF E8 2B 01 5B E8 1D  // ..[.WSS....+.[..
    1170: 15 74 66 80 FD 00 75 29 53 E8 DB FC 66 8B D0 E8  // .tf...u)S...f...
    1180: 08 F7 8A CD 51 E8 E7 FC 8A FD 59 E8 71 FF 5B E8  // ....Q.....Y.q.[.
    1190: 2D 21 66 25 FF FF 00 00 66 3B C8 73 39 32 DB EB  // -!f%....f;.s92..
    11A0: 38 80 FD 02 75 16 E8 6F 01 E8 9F 17 74 28 8D 1F  // 8...u..o....t(..
    11B0: E8 0C 21 3D 74 40 76 1E 32 DB EB 1D 80 FD 03 75  // ..!=t@v.2......u
    11C0: 15 53 E8 D3 00 B3 03 E8 2D 14 5B E8 F1 20 3B C2  // .S......-.[.. ;.
    11D0: 76 04 32 DB EB 03 80 CB 01 5B 5F C3 53 8B F0 E8  // v.2......[_.S...
    11E0: 51 19 23 F0 74 09 8B C6 E8 F0 17 8B F3 0B DB 5B  // Q.#.t..........[
    11F0: C3 51 E8 15 FD E8 0F 00 59 C3 51 50 E8 34 19 8B  // .Q......Y.QP.4..
    1200: C8 58 E8 02 00 59 C3 57 53 E8 FE 1A 0B C0 74 09  // .X...Y.WS.....t.
    1210: 8B 1D 83 C7 02 3B C3 75 F7 8B 1D 83 FB FF 74 0B  // .....;.u......t.
    1220: 83 C7 02 85 D9 74 F2 8B C3 EB 02 33 C0 0B C0 5B  // .....t.....3...[
    1230: 5F C3 33 C0 E8 C3 FF 74 13 E8 A0 FF 8B DE B9 FB  // _.3....t........
    1240: 00 E8 07 1C 83 C6 08 E8 99 18 EB E8 BB F0 16 B8  // ................
    1250: 5A A5 E8 E2 1F C3 53 66 50 8D 9C 40 03 E8 5F 20  // Z.....SfP..@.._ 
    1260: 8A E8 66 58 5B C3 8D 9C 69 03 E8 52 20 C3 8D 9C  // ..fX[...i..R ...
    1270: 64 03 E8 4A 20 0B C0 C3 53 66 50 8D 9C D4 02 E8  // d..J ...SfP.....
    1280: 3D 20 8A C8 66 58 5B C3 53 66 50 8D 9C D5 02 E8  // = ..fX[.SfP.....
    1290: 2D 20 8A C8 66 58 5B C3 53 8D 5C 14 E8 20 20 8B  // - ..fX[.S.\..  .
    12A0: D0 5B C3 53 66 50 8D 5C 16 E8 13 20 8B D0 66 58  // .[.SfP.\... ..fX
    12B0: 5B C3 53 66 50 8D 9C 50 03 E8 03 20 66 8B D0 66  // [.SfP..P... f..f
    12C0: 58 5B C3 53 66 50 8D 9C 54 03 E8 F2 1F 66 8B D0  // X[.SfP..T....f..
    12D0: 66 58 5B C3 53 66 50 8D 5C 10 E8 E2 1F 8B C8 66  // fX[.SfP.\......f
    12E0: 58 5B C3 66 50 53 8D 9C 41 03 E8 D2 1F 5B 8A D8  // X[.fPS..A....[..
    12F0: 66 58 C3 53 8D 5C 08 E8 C5 1F 5B C3 53 50 8D 9C  // fX.S.\....[.SP..
    1300: 4C 03 E8 BA 1F 8A C8 58 5B C3 53 50 8D 9C 4D 03  // L......X[.SP..M.
    1310: E8 AC 1F 8A C8 58 5B C3 53 66 50 8D 5C 0C E8 9E  // .....X[.SfP.\...
    1320: 1F 8B D0 66 58 5B C3 53 66 50 8D 9C 00 03 E8 8E  // ...fX[.SfP......
    1330: 1F 66 33 D2 8B D0 66 58 5B C3 8D 5C 04 E8 7F 1F  // .f3...fX[..\....
    1340: C3 51 8D 5C 04 32 C9 E8 19 1F 59 C3 8D 9C 50 03  // .Q.\.2....Y...P.
    1350: E8 6C 1F 66 8B C2 E8 C6 1E C3 53 8D 9C 40 03 B1  // .l.f......S..@..
    1360: 01 E8 FF 1E 5B C3 8D 9C 54 03 66 8B C2 E8 AF 1E  // ....[...T.f.....
    1370: C3 53 51 8A E8 E8 C2 FF 24 FD 0A E8 E8 C2 FF 59  // .SQ.....$......Y
    1380: 5B C3 66 50 8D 9C D8 02 E8 34 1F 66 8B D0 66 58  // [.fP.....4.f..fX
    1390: C3 53 66 50 51 66 8B C8 BB 00 00 E8 1E 16 23 C2  // .SfPQf........#.
    13A0: 0B C1 E8 20 16 59 66 58 5B C3 BB 00 00 E8 0C 16  // ... .YfX[.......
    13B0: 66 25 CA 0E 00 00 C3 E8 4F 1A E8 C7 19 E8 A5 19  // f%......O.......
    13C0: 75 06 E8 80 17 E8 A9 19 C3 B0 01 C3 55 B3 01 E8  // u...........U...
    13D0: E0 1C 5D C3 66 53 66 BB 04 00 00 00 E8 05 00 33  // ..].fSf........3
    13E0: C0 66 5B C3 55 66 C1 E3 10 BB 00 00 E8 C3 1C 5D  // .f[.Uf.........]
    13F0: C3 E8 0E 1B BB 0A 00 E8 CB 15 C3 BB 0A 00 E8 BB  // ................
    1400: 15 66 8B C8 E8 FB 1A BB 0A 00 66 2B C1 E8 B5 15  // .f........f+....
    1410: C3 E8 29 00 0B C9 74 22 E8 14 FB E8 2E 07 66 51  // ..)...t"......fQ
    1420: 66 8B C8 BB 07 00 E8 93 15 66 25 00 FE 00 00 66  // f........f%....f
    1430: 0B C1 E8 90 15 66 59 0C 01 C3 32 C0 C3 E8 68 02  // .....fY...2...h.
    1440: 0B C9 75 06 E8 C3 FA E8 6E 02 51 E8 BC FA 66 C1  // ..u.....n.Q...f.
    1450: E6 10 33 C0 E8 9A FD 74 09 E8 13 03 75 F6 33 C8  // ..3....t....u.3.
    1460: EB F2 58 23 C8 66 C1 EE 10 C3 A8 10 75 63 E8 ED  // ..X#.f......uc..
    1470: 06 66 C1 E6 10 33 C0 E8 80 FD 74 35 E8 5D FD 50  // .f...3....t5.].P
    1480: 51 8B C8 E8 F6 01 85 C1 59 58 74 0D 50 E8 AA FE  // Q.......YXt.P...
    1490: 24 03 3C 03 58 75 E0 EB 0C 50 E8 9D FE A8 01 58  // $.<.Xu...P.....X
    14A0: 74 D5 E8 6A FB 50 E8 D7 07 58 B5 00 E8 92 FE EB  // t..j.P...X......
    14B0: C6 E8 C8 01 E8 25 FD E8 31 01 B1 00 E8 4B 07 66  // .....%..1....K.f
    14C0: C1 EE 10 E8 91 06 A8 20 75 42 A8 40 75 03 E8 19  // ....... uB.@u...
    14D0: 0E E8 78 06 0A C0 75 07 32 C9 B5 01 E8 BC 0E E8  // ..x...u.2.......
    14E0: 9A 01 E8 F7 FC E8 30 FE E8 53 14 75 14 E8 5F 02  // ......0..S.u.._.
    14F0: 0A DB 74 0D E8 18 FB E8 86 07 B5 00 E8 42 FE EB  // ..t..........B..
    1500: 08 E8 63 07 B5 01 E8 38 FE E8 E3 00 C3 E8 23 16  // ..c....8......#.
    1510: C3 E8 1E FD E8 A9 06 33 C9 E8 9C 01 66 33 D2 66  // .......3....f3.f
    1520: 33 C0 E8 6C FE E8 4F 00 B1 FF E8 81 00 33 C0 E8  // 3..l..O......3..
    1530: C8 FC 74 0A E8 A5 FC 50 E8 CF 07 58 EB F1 32 C9  // ..t....P...X..2.
    1540: E8 C1 01 E8 ED 15 0B C0 C3 E8 E6 FC E8 71 06 66  // .............q.f
    1550: 33 C0 66 BA 00 F0 FF FF E8 30 01 51 B1 01 E8 89  // 3.f......0.Q....
    1560: 01 59 33 C0 E8 93 FC 74 0A E8 70 FC 50 E8 65 07  // .Y3....t..p.P.e.
    1570: 58 EB F1 E8 B1 0D C3 B8 02 00 E8 5F FC 74 2E B1  // X.........._.t..
    1580: 07 E8 F6 11 B8 02 00 E8 6F F0 F6 C3 04 75 12 E8  // ........o....u..
    1590: F4 1A 83 3D 00 75 0A E8 99 15 83 E0 FD E8 9C 15  // ...=.u..........
    15A0: C3 66 B8 02 00 00 00 E8 E7 FD E8 51 F2 C3 E8 1D  // .f.........Q....
    15B0: 14 74 23 38 E1 76 04 8A CC EB 06 38 C1 73 02 8A  // .t#8.v.....8.s..
    15C0: C8 BB 02 00 E8 F5 13 8A E1 E8 F9 13 B1 04 E8 A9  // ................
    15D0: 11 0C 01 C3 0C 01 C3 51 E8 F3 13 74 0C 8A CC BB  // .......Q...t....
    15E0: 02 00 E8 D7 13 8A C4 8A E1 59 C3 E8 FE 05 C3 E8  // .........Y......
    15F0: 09 06 C3 E8 1F 19 75 18 E8 81 00 E8 DE FB 80 F9  // ......u.........
    1600: 01 75 0E 51 E8 60 06 B5 01 E8 35 FD 59 E8 DF FF  // .u.Q.`....5.Y...
    1610: C3 E8 D7 FF 51 E8 BD 06 B5 00 E8 24 FD 59 C3 B8  // ....Q......$.Y..
    1620: 02 00 E8 B7 FB 74 03 E8 50 11 C3 E8 BD 04 3B C1  // .....t..P.....;.
    1630: 7C 3A 8B C1 E8 FD 04 E8 C7 0E 8B C8 51 E8 2D 05  // |:..........Q.-.
    1640: E8 F1 04 59 E8 BA 0E 3B C8 72 02 8B C1 8D 5C 04  // ...Y...;.r....\.
    1650: E8 E4 1B 32 C9 B5 0F E8 05 0D E8 E5 17 FE C1 38  // ...2...........8
    1660: C1 72 F2 8D 5C 04 E8 56 1C 0B C0 C3 33 C0 C3 BB  // .r..\..V....3...
    1670: 00 18 33 C0 8A C2 C1 E0 02 03 D8 C3 53 BB 03 00  // ..3.........S...
    1680: E8 39 13 66 25 FF 0F 00 00 5B C3 53 66 50 66 51  // .9.f%....[.SfPfQ
    1690: 66 8B C8 BB 03 00 E8 23 13 66 23 C2 66 0B C1 E8  // f......#.f#.f...
    16A0: 23 13 66 59 66 58 5B C3 66 50 BB 05 00 E8 0C 13  // #.fYfX[.fP......
    16B0: 25 FF 0F 8B C8 66 58 C3 E8 78 14 23 C8 66 50 BB  // %....fX..x.#.fP.
    16C0: 05 00 E8 F7 12 25 00 F0 0B C1 E8 F8 12 66 58 C3  // .....%.......fX.
    16D0: 66 50 53 BB 06 00 E8 E3 12 A8 10 75 09 BB F0 16  // fPS........u....
    16E0: E8 DC 1B 3D 5A A5 5B 66 58 C3 66 50 53 BB 06 00  // ...=Z.[fX.fPS...
    16F0: E8 C9 12 80 F1 01 C0 E1 04 24 EF 0A C1 E8 C5 12  // .........$......
    1700: 5B 66 58 C3 53 66 50 BB F8 16 E8 B2 1B 8A C1 E8  // [fX.SfP.........
    1710: 0D 1B 66 58 5B C3 53 BB F8 16 E8 A2 1B 83 E0 01  // ..fX[.S.........
    1720: 5B C3 53 66 50 BB 07 00 E8 91 12 F6 C4 01 66 58  // [.SfP.........fX
    1730: B0 06 74 02 B0 08 5B C3 53 BB 07 00 E8 7D 12 80  // ..t...[.S....}..
    1740: E4 FE 80 FD 06 74 03 80 CC 01 E8 78 12 5B C3 66  // .....t.....x.[.f
    1750: 50 BB 06 00 E8 65 12 24 40 C0 E8 06 8A D8 66 58  // P....e.$@.....fX
    1760: C3 B3 81 E8 41 19 75 04 83 C8 01 C3 33 C0 C3 50  // ....A.u.....3..P
    1770: 66 51 E8 67 FA 83 EC 04 8B EC 66 33 C0 66 89 46  // fQ.g......f3.f.F
    1780: 00 33 D2 8D BC 68 01 8D 1D E8 33 1B 0B C0 74 22  // .3...h....3...t"
    1790: 8B DF B0 00 E8 12 01 74 14 8B DF E8 7B F4 66 8B  // .......t....{.f.
    17A0: 46 00 66 3B C8 72 06 8B D7 66 89 4E 00 83 C7 1C  // F.f;.r...f.N....
    17B0: EB D5 0B D2 74 0A 8D 9C 4C 01 E8 32 F4 E9 88 00  // ....t...L..2....
    17C0: 66 33 C0 66 89 46 00 8D BC F4 01 33 D2 8D 1D E8  // f3.f.F.....3....
    17D0: ED 1A 0B C0 74 58 66 50 E8 9D F0 3C 01 66 58 74  // ....tXfP...<.fXt
    17E0: 05 3D 40 06 73 43 66 52 66 8B D0 8D 5D 04 E8 CE  // .=@.sCfRf...]...
    17F0: 1A E8 5D 00 8B CA 66 5A 74 2F 56 8D 9C 4C 01 8B  // ..]...fZt/V..L..
    1800: F1 E8 0A F4 5E B0 00 E8 9F 00 74 1D 8D 1D E8 AE  // ....^.....t.....
    1810: 1A 8B D9 8B 47 06 66 C1 E0 10 8B 47 02 66 3B 46  // ....G.f....G.f;F
    1820: 00 72 06 8B D1 66 89 46 00 83 C7 08 EB 9F 0B D2  // .r...f.F........
    1830: 74 16 56 8D 9C 4C 01 8B F2 E8 D2 F3 5E 53 8D 9C  // t.V..L......^S..
    1840: 62 01 33 C0 E8 F0 19 5B 83 C4 04 0B D2 66 59 58  // b.3....[.....fYX
    1850: C3 57 53 51 E8 DA 14 3B 55 02 75 18 66 C1 CA 10  // .WSQ...;U.u.f...
    1860: 8B DA 66 C1 CA 10 3B 5D 06 75 09 0A C0 74 0E 3A  // ..f...;].u...t.:
    1870: 45 1B 74 09 83 C7 1C E2 DE 33 D2 EB 02 8B D7 0B  // E.t......3......
    1880: D2 59 5B 5F C3 51 66 52 E8 A6 14 3A 65 1A 75 09  // .Y[_.QfR...:e.u.
    1890: 0A C0 74 0E 3A 45 1B 74 09 83 C7 1C E2 ED 33 FF  // ..t.:E.t......3.
    18A0: EB 00 0B FF 66 5A 59 C3 C3 66 51 66 52 53 53 66  // ....fZY..fQfRSSf
    18B0: C1 CE 10 8B DE 66 C1 CE 10 E8 03 1A 5B 66 8B D0  // .....f......[f..
    18C0: E8 56 F3 3B CA 72 0A 66 3B CA 72 05 E8 95 F8 75  // .V.;.r.f;.r....u
    18D0: 02 32 C0 5B 66 5A 66 59 C3 56 57 E8 A7 FF 8B F7  // .2.[fZfY.VW.....
    18E0: E8 2B F3 5F 5E C3 66 50 53 66 51 52 57 56 51 8B  // .+._^.fPSfQRWVQ.
    18F0: DE B9 08 00 E8 54 15 59 8D 5C 08 8B C1 66 C1 E0  // .....T.Y.\...f..
    1900: 10 8A C2 E8 19 19 F6 C2 03 75 24 8B C1 24 7F BF  // .........u$..$..
    1910: C9 19 80 3D FF 0F 84 0F 01 3A 05 75 0D 66 8B 45  // ...=.....:.u.f.E
    1920: 01 66 B9 00 05 02 00 E9 96 00 83 C7 05 EB E3 F6  // .f..............
    1930: C2 01 74 25 8B C1 E8 70 01 0F 84 EB 00 33 C9 8A  // ..t%...p.....3..
    1940: CC 8A D0 0A C0 75 12 8D 5C 08 66 25 FF FF 00 00  // .....u..\.f%....
    1950: 66 C1 E0 08 E8 C8 18 EB B2 8A E1 8A CA 80 E1 0C  // f...............
    1960: C0 E9 02 80 E2 F0 C0 EA 04 8A EA 80 FC 70 72 2A  // .............pr*
    1970: 80 FC 75 73 25 80 EC 70 8A C4 32 E4 50 E8 30 02  // ..us%..p..2.P.0.
    1980: 8B D8 58 38 D8 72 05 33 C0 E9 9C 00 E8 28 02 E8  // ..X8.r.3.....(..
    1990: 2D 19 0B C0 0F 84 90 00 EB 1B 32 C0 E8 E6 FE 0F  // -.........2.....
    19A0: 84 85 00 8D 5C 16 8B 05 E8 8C 18 8B 45 06 66 C1  // ....\.......E.f.
    19B0: E0 10 8B 45 02 50 E8 48 0B 66 C1 E1 10 8B C8 58  // ...E.P.H.f.....X
    19C0: 8D 1C E8 5A 18 66 50 8D 5C 04 66 8B C1 E8 4F 18  // ...Z.fP.\.f...O.
    19D0: 66 58 66 C1 E8 10 66 81 E1 FF FF 00 00 66 F7 E1  // fXf...f......f..
    19E0: 66 50 8D 5C 06 E8 D7 18 8B C8 66 58 66 D3 E0 66  // fP.\......fXf..f
    19F0: C1 E8 10 40 8D 5C 14 E8 3D 18 BF 29 1A 83 F9 01  // ...@.\..=..)....
    1A00: 74 11 BF 31 1A 81 F9 01 01 74 08 BF 39 1A 83 F9  // t..1.....t..9...
    1A10: 02 75 15 8D 5C 0C 66 8B 05 E8 03 18 8D 5C 10 66  // .u..\.f......\.f
    1A20: 8B 45 04 E8 F9 17 0B DB 5E 5F 5A 66 59 5B 66 58  // .E......^_ZfY[fX
    1A30: C3 00 40 01 90 01 01 40 01 90 01 02 80 02 90 01  // ..@....@........
    1A40: 03 80 02 90 01 04 40 01 90 01 05 40 01 90 01 06  // ......@....@....
    1A50: 80 02 90 01 07 D0 02 5E 01 0D 40 01 90 01 0E 80  // .......^..@.....
    1A60: 02 90 01 0F 80 02 5E 01 10 80 02 5E 01 11 80 02  // ......^....^....
    1A70: E0 01 12 80 02 E0 01 13 80 02 90 01 23 20 04 90  // ............# ..
    1A80: 01 32 20 04 B0 02 33 20 04 C0 02 62 80 02 E0 01  // .2 ...3 ...b....
    1A90: FF 05 0A 05 05 05 00 00 00 05 0B 06 05 05 00 00  // ................
    1AA0: 00 08 10 08 08 08 00 00 00 56 E8 70 15 80 E4 01  // .........V.p....
    1AB0: 3B 04 74 09 83 C6 04 E2 F7 33 C0 EB 05 8B 44 02  // ;.t......3....D.
    1AC0: 0B C0 5E C3 57 53 50 E8 53 15 83 E9 0A E8 E0 00  // ..^.WSP.S.......
    1AD0: 83 F8 05 76 03 B8 05 00 D1 E0 03 C8 FB A5 83 C6  // ...v............
    1AE0: 02 E2 FA B8 FF FF AB 58 5B 5F C3 66 53 51 66 52  // .......X[_.fSQfR
    1AF0: E8 41 00 E8 77 00 66 C1 E8 10 66 0F B7 D8 66 B8  // .A..w.f...f...f.
    1B00: 00 00 00 03 66 D3 E8 66 33 D2 66 F7 F3 E8 F1 09  // ....f..f3.f.....
    1B10: 66 5A 59 66 5B C3 53 66 50 BB 07 00 E8 9D 0E 0A  // fZYf[.SfP.......
    1B20: C0 66 58 5B C3 53 66 50 BB 07 00 E8 8E 0E A8 01  // .fX[.SfP........
    1B30: 66 58 5B C3 53 66 50 8D 5C 06 E8 82 17 8A C8 66  // fX[.SfP.\......f
    1B40: 58 5B C3 51 B9 08 00 E8 16 13 59 C3 53 8D 5C 08  // X[.Q......Y.S.\.
    1B50: E8 6C 17 24 03 5B C3 8D 5C 09 E8 62 17 C3 51 53  // .l.$.[..\..b..QS
    1B60: B1 01 8A E8 8D 5C 08 E8 F9 16 5B 59 C3 53 8D 1C  // .....\....[Y.S..
    1B70: E8 4C 17 5B C3 53 8D 5C 04 E8 43 17 5B C3 53 8D  // .L.[.S.\..C.[.S.
    1B80: 5C 16 E8 3A 17 5B C3 53 66 52 33 C0 E8 C2 FC 66  // \..:.[.SfR3....f
    1B90: 5A 75 1B E8 34 00 74 16 E8 15 00 40 83 F8 05 73  // Zu..4.t....@...s
    1BA0: 0D E8 7B 16 48 E8 0F 00 66 8B C2 E8 71 16 5B C3  // ..{.H...f...q.[.
    1BB0: BB 00 1E E8 09 17 C3 BB 08 1E C1 E0 03 03 D8 C3  // ................
    1BC0: BB 00 1E B9 32 00 E8 82 12 C3 51 E8 E2 FF 0B C0  // ....2.....Q.....
    1BD0: 74 12 8B C8 BB 08 1E E8 E5 16 66 3B C2 74 07 83  // t.........f;.t..
    1BE0: C3 08 E2 F3 0B DB 59 C3 C3 00 C3 00 BB 20 DF E8  // ......Y...... ..
    1BF0: 7B 36 E8 83 F6 B5 01 E8 E5 07 C3 BB 00 DF E8 6C  // {6.............l
    1C00: 36 E8 74 F6 B5 00 E8 D6 07 C3 80 F9 00 75 0A E8  // 6.t..........u..
    1C10: 36 12 8A C8 B5 02 E8 1D 09 0B F6 74 2E E8 58 F6  // 6..........t..X.
    1C20: B5 01 51 E8 C0 07 59 E8 C3 07 56 33 F6 B5 00 E8  // ..Q...Y...V3....
    1C30: 2D 07 5E B5 01 E8 C4 F6 E8 FB 08 E8 B8 09 E8 37  // -.^............7
    1C40: F6 8D 9C 00 03 E8 AC 07 E8 F5 07 66 C1 CE 10 B5  // ...........f....
    1C50: 01 E8 0B 07 E8 00 FF A8 40 75 07 32 C0 B5 01 E8  // ........@u.2....
    1C60: 7E 08 66 C1 CE 10 C3 E8 0E F6 B5 01 E8 4B 07 B5  // ~.f..........K..
    1C70: 00 E8 79 07 E8 DC 07 B1 0F E8 5D 0A E8 26 00 C3  // ..y.......]..&..
    1C80: E8 52 00 E8 02 F6 B5 00 E8 2F 07 B5 00 E8 5D 07  // .R......./....].
    1C90: E8 77 F6 E8 B2 11 38 C1 74 0A 80 F9 0B 74 05 B5  // .w....8.t....t..
    1CA0: 03 E8 92 08 C3 B1 10 E8 2F 0A E8 A9 F5 80 FD 00  // ......../.......
    1CB0: 74 06 B1 01 E8 C3 0A C3 E8 A6 05 80 FD 01 75 07  // t.............u.
    1CC0: B5 02 E8 D5 05 EB 03 E8 F3 01 B1 0D E8 0A 0A B1  // ................
    1CD0: 03 E8 54 00 C3 E8 CB F5 0B D2 74 05 B1 00 E8 36  // ..T.......t....6
    1CE0: 0A B1 02 E8 42 00 E8 51 F6 A8 01 74 12 E8 66 F5  // ....B..Q...t..f.
    1CF0: 80 FD 00 75 0A B1 0C E8 DF 09 B0 02 E8 91 04 B1  // ...u............
    1D00: 00 E8 76 0A B1 0D E8 1F 00 C3 B1 07 E8 6B 0A E8  // ..v..........k..
    1D10: 91 F5 0B D2 75 0C E8 FF F5 E8 1E 0C 75 09 E8 11  // ....u.......u...
    1D20: 0B C3 B1 07 E8 F0 09 C3 E8 ED F5 E8 0C 0C 75 24  // ..............u$
    1D30: 51 E8 46 0A 59 80 F9 0C 75 1A 33 D2 56 83 C6 08  // Q.F.Y...u.3.V...
    1D40: E8 35 0C 5E 0A C0 75 0C B9 0A 00 E8 4E 11 42 83  // .5.^..u.....N.B.
    1D50: FA 1E 75 E8 C3 80 FB 01 0F 84 C5 00 E8 A5 05 66  // ..u............f
    1D60: C1 E1 10 8D 9C 35 01 E8 55 15 A8 01 74 05 51 E8  // .....5..U...t.Q.
    1D70: 2B 04 59 E8 5E F5 B0 04 E8 9C 05 66 BA 50 01 40  // +.Y.^......f.P.@
    1D80: 50 E8 76 05 E8 EB 0A 75 7E 66 BA 50 01 50 4F 8D  // P.v....u~f.P.PO.
    1D90: 9C 2D 01 E8 29 15 24 06 3C 02 75 02 B6 02 B0 05  // .-..).$.<.u.....
    1DA0: E8 74 05 E8 54 05 8D 5C 28 03 D8 E8 C4 0A 75 57  // .t..T..\(.....uW
    1DB0: 0A FF 75 09 B0 0A E8 5E 05 32 DB EB 4A 51 33 C9  // ..u....^.2..JQ3.
    1DC0: 8A CF E8 35 05 03 C8 E8 3A 05 59 B0 07 E8 47 05  // ...5....:.Y...G.
    1DD0: 66 BA 50 01 10 30 33 DB E8 97 0A 74 0F 51 8A EB  // f.P..03....t.Q..
    1DE0: 8D 9C 44 01 B1 02 E8 7A 14 59 EB 61 E8 0B 05 66  // ..D....z.Y.a...f
    1DF0: C1 C9 10 2B C1 66 C1 C1 10 3D 80 00 0F 82 76 FF  // ...+.f...=....v.
    1E00: B0 08 E8 12 05 EB 43 51 8A EB 8D 9C 44 01 B1 02  // ......CQ....D...
    1E10: E8 50 14 59 66 BA 50 01 10 30 33 DB E8 53 0A EB  // .P.Yf.P..03..S..
    1E20: 2C 8D 5C 28 03 D9 53 8A E9 B1 32 51 5F E8 A4 F4  // ,.\(..S...2Q_...
    1E30: 8A E9 B1 A0 BA 00 80 E8 0D 0A 80 FF 01 5B 74 0A  // .............[t.
    1E40: B1 A2 E8 02 0A 80 FF 01 75 03 B0 00 C3 B0 01 C3  // ........u.......
    1E50: 51 B1 0C E8 D2 FE 59 B0 01 E8 BB 04 56 83 C6 08  // Q.....Y.....V...
    1E60: E8 15 0B 5E 0A C0 75 04 B3 10 EB 3F B0 02 E8 A6  // ...^..u....?....
    1E70: 04 E8 38 00 74 11 B0 03 E8 9C 04 B0 01 E8 10 03  // ..8.t...........
    1E80: 75 29 E8 27 00 75 24 66 BA 0C 00 90 43 8D 9C 30  // u).'.u$f....C..0
    1E90: 01 E8 DE 09 66 BA 20 00 90 41 8D 9C 34 01 E8 D1  // ....f. ..A..4...
    1EA0: 09 E8 BD 03 B0 09 E8 6E 04 33 DB C3 E8 25 F4 66  // .......n.3...%.f
    1EB0: BA 00 00 90 47 8D 9C 28 01 E8 B6 09 C3 B1 0C E8  // ....G..(........
    1EC0: 66 FE B1 00 E8 B3 08 B1 01 E8 AE 08 8D 9C AC 03  // f...............
    1ED0: 66 B8 00 00 00 00 E8 46 13 B0 01 E8 B2 02 74 0A  // f......F......t.
    1EE0: B5 04 E8 CB 03 B3 08 E9 3F 01 B1 08 E8 EA 07 E8  // ........?.......
    1EF0: D2 02 B1 09 E8 E2 07 E8 C5 01 8D 9C B8 03 66 33  // ..............f3
    1F00: C0 E8 1B 13 E8 60 01 B9 90 01 E8 84 0F B0 01 E8  // .....`..........
    1F10: 63 02 B5 02 E8 8D 03 E8 74 01 E8 9F 03 E8 E0 01  // c.......t.......
    1F20: B5 03 E8 7F 03 33 C9 E8 00 01 F6 C5 01 75 34 B5  // .....3.......u4.
    1F30: 02 E8 70 03 E8 20 01 F6 C5 04 74 08 B5 01 E8 6F  // ..p.. ....t....o
    1F40: 03 E9 CC 00 8A FD 80 E7 03 E8 E8 00 80 E3 03 38  // ...............8
    1F50: FB 75 0D E8 4C 01 75 08 B5 02 E8 53 03 E9 B0 00  // .u..L.u....S....
    1F60: E8 67 01 FE C1 E8 7B F3 38 D9 75 BB 8D 9C AC 03  // .g....{.8.u.....
    1F70: E8 4C 13 3C 03 74 05 E8 ED 00 EB 9B 8D 9C B0 03  // .L.<.t..........
    1F80: 66 33 C0 E8 99 12 8D 9C 2A 01 E8 32 13 A8 40 74  // f3......*..2..@t
    1F90: 0C B1 13 E8 43 07 B0 03 E8 DA 01 EB 0A B1 0A E8  // ....C...........
    1FA0: 37 07 B0 02 E8 CE 01 B5 04 E8 F8 02 E8 DF 00 E8  // 7...............
    1FB0: 0A 03 E8 4B 01 B5 05 E8 EA 02 33 C9 E8 6B 00 80  // ...K......3..k..
    1FC0: FD 07 75 05 E8 86 00 75 2E 51 B5 04 E8 D5 02 59  // ..u....u.Q.....Y
    1FD0: F6 C5 01 75 07 B5 03 E8 D6 02 EB 34 E8 78 00 8A  // ...u.......4.x..
    1FE0: D5 E8 E6 00 E8 70 00 38 EA 75 0C E8 B4 00 75 07  // .....p.8.u....u.
    1FF0: B5 02 E8 BB 02 EB 19 FE C1 E8 E7 F2 38 D9 75 BC  // ............8.u.
    2000: 8D 9C AC 03 E8 B8 12 3C 04 75 05 E8 59 00 EB 9C  // .......<.u..Y...
    2010: B0 00 E8 60 01 B1 0B E8 BF 06 8D 9C AD 03 E8 9E  // ...`............
    2020: 12 B3 00 0A C0 74 02 B3 08 C3 8D 9C C0 03 E8 0F  // .....t..........
    2030: 00 8A E8 C3 53 8D 9C C4 03 E8 04 00 5B 8A D8 C3  // ....S.......[...
    2040: 51 E8 7B 12 C0 E1 02 D3 E8 24 0F 59 C3 8D 9C C2  // Q.{......$.Y....
    2050: 03 E8 6B 12 A8 01 C3 8D 9C B8 03 E8 1D 12 C3 8D  // ..k.............
    2060: 9C B8 03 E8 FD 11 C3 33 C9 33 D2 E8 E9 FF 38 D5  // .......3.3....8.
    2070: 76 02 8A D5 FE C1 E8 6A F2 38 D9 72 EE 33 C9 8A  // v......j.8.r.3..
    2080: EA 8D 9C 5C 03 E8 DB 11 B1 0B E8 ED 06 C3 E8 43  // ...\...........C
    2090: F2 8D 9C B8 03 E8 27 12 66 BA 03 01 80 83 E8 D1  // ......'.f.......
    20A0: 07 C3 51 53 8D 9C B0 03 E8 D0 11 FE C5 E8 B3 11  // ..QS............
    20B0: 80 FD 06 72 07 B5 02 E8 F6 01 33 C9 5B 59 C3 66  // ...r......3.[Y.f
    20C0: 33 C0 8D 9C B0 03 E8 56 11 C3 32 ED E8 65 FF 80  // 3......V..2..e..
    20D0: E3 0C C0 EB 02 B7 03 2A FB C0 E3 03 8A EB 80 FB  // .......*........
    20E0: 18 72 03 80 CD 20 E8 4B FF 80 E3 03 38 FB 72 02  // .r... .K....8.r.
    20F0: 8A DF 80 FB 03 75 03 80 CD 04 0A EB E8 60 FF C3  // .....u.......`..
    2100: E8 D1 F1 8D 9C C0 03 66 BA 02 02 90 45 E8 62 07  // .......f....E.b.
    2110: C3 E8 C0 F1 66 BA 00 01 90 42 8D 9C B4 03 E8 51  // ....f....B.....Q
    2120: 07 E8 B0 F1 66 BA 03 01 90 45 8D 9C B8 03 E8 41  // ....f....E.....A
    2130: 07 E8 E4 F1 E8 07 08 75 3B E8 98 F1 66 BA 0A 01  // .......u;...f...
    2140: 90 40 8D 9C BF 03 E8 29 07 8D 9C 28 01 E8 6F 11  // .@.....)...(..o.
    2150: 3C 14 72 20 E8 7D F1 66 BA 10 00 90 4F 8D 9C D0  // <.r .}.f....O...
    2160: 03 E8 0E 07 E8 6D F1 66 BA 15 01 90 40 8D 9C CC  // .....m.f....@...
    2170: 03 E8 FE 06 C3 E8 5C F1 66 BA 02 01 80 50 E8 F1  // ......\.f....P..
    2180: 06 C3 E8 3E F1 8B C2 66 33 D2 B9 8C 0A F7 F1 C3  // ...>...f3.......
    2190: E8 41 F1 66 BA 00 06 80 50 E8 D6 06 C3 E8 34 F1  // .A.f....P.....4.
    21A0: 66 BA 11 01 80 50 B0 04 E8 C7 06 C3 E8 25 F1 66  // f....P.......%.f
    21B0: BA 00 06 90 40 8D 9C C8 03 E8 B6 06 8D 9C C8 03  // ....@...........
    21C0: E8 FC 10 C3 E8 BB FF 3C 06 74 0E 3C 0A 74 0A 3C  // .......<.t.<.t.<
    21D0: 14 74 06 3C 1E 74 02 33 C0 E8 07 F1 8A E3 80 CC  // .t.<.t.3........
    21E0: 80 50 E8 EF F0 58 66 BA 00 01 80 61 E8 83 06 33  // .P...Xf....a...3
    21F0: C9 E8 7A F0 0B C0 74 02 B5 10 8D 9C BC 03 E8 62  // ..z...t........b
    2200: 10 8A C5 E8 CE F0 66 BA 07 01 80 50 E8 63 06 E8  // ......f....P.c..
    2210: 06 F1 E8 29 07 75 49 8D 9C 48 03 E8 A1 10 0A C0  // ...).uI..H......
    2220: 74 0E E8 AF F0 66 BA 0A 01 80 50 B0 01 E8 42 06  // t....f....P...B.
    2230: 8D 9C 28 01 E8 88 10 3C 14 72 25 8D 9C D0 03 E8  // ..(....<.r%.....
    2240: 7D 10 0B C0 74 1A E8 32 EC 32 C9 8D 9C CC 03 E8  // }...t..2.2......
    2250: 11 10 8A C5 E8 7D F0 66 BA 15 01 80 50 E8 12 06  // .....}.f....P...
    2260: C3 8D 9C B4 03 B9 0E 00 E8 E0 0B E8 A3 FE E8 8F  // ................
    2270: FE E8 38 FF 3C 01 75 1C E8 D2 FD 74 17 33 C9 E8  // ..8.<.u....t.3..
    2280: A8 FD 80 FD 07 75 0D FE C1 E8 57 F0 38 D9 75 EF  // .....u....W.8.u.
    2290: B5 01 EB 02 B5 00 E8 01 00 C3 8D 9C AC 03 B1 02  // ................
    22A0: E8 C0 0F C3 51 8D 9C AC 03 32 C9 E8 B5 0F 59 C3  // ....Q....2....Y.
    22B0: 51 8D 9C AC 03 B1 01 E8 A9 0F 59 C3 8D 9C 32 01  // Q.........Y...2.
    22C0: E8 FC 0F 24 07 75 15 B9 64 00 8D 9C AC 03 E8 EE  // ...$.u..d.......
    22D0: 0F 3C 02 74 03 B9 90 01 E8 B6 0B C3 32 E4 B1 04  // .<.t........2...
    22E0: 33 D2 F6 E1 8B C8 E8 B3 0B C3 51 8D 5C 14 E8 CE  // 3.........Q.\...
    22F0: 0F 66 C1 E0 10 E8 A4 01 59 C3 53 8D 9C 44 01 E8  // .f......Y.S..D..
    2300: BD 0F 5B C3 53 66 50 8D 9C 44 01 E8 B1 0F 8B C1  // ..[.SfP..D......
    2310: E8 0C 0F 66 58 5B C3 53 51 8D 9C 44 01 8A E8 B1  // ...fX[.SQ..D....
    2320: 03 E8 3F 0F 59 5B C3 33 C9 E8 16 0B 38 C1 73 05  // ..?.Y[.3....8.s.
    2330: B5 00 E8 8C 00 B5 00 E8 80 00 FE C1 E8 06 0B 38  // ...............8
    2340: C1 72 E6 B1 14 8A E9 E8 FE 0A 38 C1 74 05 B5 03  // .r........8.t...
    2350: E8 E3 01 FE C1 E8 E7 0A 04 14 38 C1 76 E7 C3 83  // ..........8.v...
    2360: EC 0C 8B EC 0B F6 74 1E E8 02 F8 66 C1 C8 10 66  // ......t....f...f
    2370: 89 46 00 8D 5C 04 E8 46 0F 66 89 46 04 8D 5C 08  // .F..\..F.f.F..\.
    2380: E8 3C 0F 88 46 0A 89 4E 08 8C D0 66 C1 E0 10 8B  // .<..F..N...f....
    2390: C4 BB 2B 00 E8 AD 09 83 C4 0C C3 83 EC 04 8B EC  // ..+.............
    23A0: B0 02 88 46 01 88 4E 00 8C D0 66 C1 E0 10 8B C4  // ...F..N...f.....
    23B0: BB 25 00 E8 8E 09 83 C4 04 C3 BB 23 00 E8 08 00  // .%.........#....
    23C0: C3 BB 17 00 E8 01 00 C3 83 EC 04 8B EC 89 4E 00  // ..............N.
    23D0: 8C D0 66 C1 E0 10 8B C4 E8 69 09 83 C4 04 C3 BB  // ..f......i......
    23E0: 22 00 E8 E3 FF C3 BB 27 00 E8 DC FF C3 BB 2C 00  // "......'......,.
    23F0: E8 D5 FF C3 E8 C8 0E 66 A9 00 00 FF FF 74 40 83  // .......f.....t@.
    2400: EC 18 8B EC 55 51 B9 04 00 83 C3 02 E8 B0 0E 66  // ....UQ.........f
    2410: 89 46 00 83 C5 04 83 C3 04 E2 F1 83 C3 04 E8 9E  // .F..............
    2420: 0E 66 C1 C8 10 66 89 46 00 59 5D 88 4E 14 8C D0  // .f...f.F.Y].N...
    2430: 66 C1 E0 10 8B C4 BB 31 00 E8 08 09 83 C4 18 C3  // f......1........
    2440: E8 35 EE 8D 9C D0 02 E8 75 0E 8A E8 BB 21 00 E8  // .5......u....!..
    2450: 76 FF C3 8D 9C 3C 03 E8 65 0E 8A F8 E8 F7 ED 8A  // v....<..e.......
    2460: DD 53 8D 9C 42 03 E8 56 0E 8A E8 5B E8 09 EE E8  // .S..B..V...[....
    2470: A6 EE E8 C9 04 75 02 B3 01 83 EC 04 8B EC 88 4E  // .....u.........N
    2480: 00 88 7E 01 88 5E 02 88 6E 03 8C D0 66 C1 E0 10  // ..~..^..n...f...
    2490: 8B C4 BB 2A 00 E8 AC 08 83 C4 04 C3 83 EC 10 8B  // ...*............
    24A0: EC 66 3D F0 FF FF 03 76 06 66 B8 F0 FF FF 03 66  // .f=....v.f.....f
    24B0: 8B C8 66 33 C0 66 89 46 04 66 89 46 00 66 89 46  // ..f3.f.F.f.F.f.F
    24C0: 08 66 B8 00 00 00 D0 66 0B C1 66 89 46 0C 8C D0  // .f.....f..f.F...
    24D0: 66 C1 E0 10 8B C4 BB 35 00 E8 68 08 83 C4 10 C3  // f......5..h.....
    24E0: 83 EC 08 8B EC 89 4E 00 66 89 56 02 89 5E 06 8C  // ......N.f.V..^..
    24F0: D0 66 C1 E0 10 8B C4 BB 2D 00 E8 47 08 83 C4 08  // .f......-..G....
    2500: C3 3D C0 7F 76 04 B8 C0 7F C3 83 C0 3F 24 C0 C3  // .=..v.......?$..
    2510: 51 E8 AB 0D 66 33 D2 B9 0A 00 F7 F1 8B C8 E8 9E  // Q...f3..........
    2520: 0D 03 C1 66 25 FF FF 00 00 59 3D 10 27 73 03 B8  // ...f%....Y=.'s..
    2530: 10 27 C3 32 D2 C3 80 FD 02 75 19 E8 44 EE 66 BB  // .'.2.....u..D.f.
    2540: 00 08 00 00 E8 8E 00 66 33 D2 66 BB 01 08 00 00  // .......f3.f.....
    2550: E8 82 00 C3 80 FD 03 75 10 66 33 C0 8A C1 66 33  // .......u.f3...f3
    2560: D2 66 BB FF 00 00 00 EB 36 51 33 D2 E8 E7 EC 8A  // .f......6Q3.....
    2570: D5 66 C1 E2 10 E8 20 ED 8A F2 8A D1 66 8B C2 66  // .f.... .....f..f
    2580: 0D 00 00 00 80 E8 5B ED 80 FB 04 76 06 66 0D 00  // ......[....v.f..
    2590: 00 00 08 E8 91 ED E8 DF EC 66 33 DB 8A D9 59 83  // .........f3...Y.
    25A0: EC 10 8B EC 66 89 46 04 66 89 5E 08 66 8B C2 66  // ....f.F.f.^.f..f
    25B0: 33 D2 66 BB 64 00 00 00 66 F7 E3 66 89 46 00 BB  // 3.f.d...f..f.F..
    25C0: 0C 00 8C D0 66 C1 E0 10 8B C4 E8 77 07 8B EC B3  // ....f......w....
    25D0: 01 83 C4 10 C3 83 EC 10 8B EC 66 89 56 00 66 89  // ..........f.V.f.
    25E0: 5E 04 BB 2E 00 8C D0 66 C1 E0 10 8B C4 E8 54 07  // ^......f......T.
    25F0: B3 01 83 C4 10 C3 C3 53 51 66 50 B9 68 74 80 FB  // .......SQfP.ht..
    2600: 03 74 0B B9 A0 8C 80 FB 00 75 03 B9 78 69 66 33  // .t.......u..xif3
    2610: D2 8B D1 66 58 59 5B C3 66 52 B3 00 66 F7 C2 00  // ...fXY[.fR..f...
    2620: 00 FF FF 75 1A 80 FD 13 74 15 80 FD 14 74 10 B3  // ...u....t....t..
    2630: 01 80 FD 0E 74 09 B3 03 80 F9 03 74 02 B3 02 66  // ....t......t...f
    2640: 5A C3 B5 11 80 FA 23 74 07 80 FA 22 74 02 B5 00  // Z.....#t..."t...
    2650: C3 B5 02 80 FA 23 74 07 80 FA 22 74 02 B3 01 C3  // .....#t..."t....
    2660: 32 C9 80 FD 00 75 08 C7 46 00 0B 01 B1 01 C3 50  // 2....u..F......P
    2670: 33 C0 E8 9E 01 04 14 89 46 00 58 B1 01 C3 C3 8B  // 3.......F.X.....
    2680: DA B7 22 80 FE 21 74 02 B7 21 C3 0C 01 C3 E8 2E  // .."..!t..!......
    2690: 0C 66 C1 E8 10 0B C0 74 1C 53 83 C3 06 E8 1F 0C  // .f.....t.S......
    26A0: 5B 3D E0 01 72 0F 53 83 C3 18 E8 12 0C 5B A8 80  // [=..r.S......[..
    26B0: 75 03 0C 01 C3 32 C0 C3 B5 0C C3 B5 02 C3 50 E8  // u....2........P.
    26C0: 51 01 B1 03 0A C0 74 04 B1 08 02 C8 58 C3 80 FA  // Q.....t.....X...
    26D0: 22 75 05 C7 46 00 78 69 C3 E8 1A 01 80 FD FF 74  // "u..F.xi.......t
    26E0: 35 83 EC 0C 8B EC 88 4E 01 88 6E 00 80 F9 0F 75  // 5......N..n....u
    26F0: 05 E8 4F 00 EB 0F 80 F9 10 75 0A 8D 9C 48 03 E8  // ..O......u...H..
    2700: BD 0B 88 46 02 8C D0 66 C1 E0 10 8B C4 BB 04 00  // ...F...f........
    2710: E8 31 06 83 C4 0C C3 83 EC 10 8B EC 88 4E 01 E8  // .1...........N..
    2720: 81 EB 81 E2 00 07 FE CE C0 E6 04 88 76 00 E8 12  // ............v...
    2730: 00 8C D0 66 C1 E0 10 8B C4 BB 32 00 E8 05 06 83  // ...f......2.....
    2740: C4 10 C3 66 53 E8 7B EB 66 8B C2 66 33 D2 66 BB  // ...fS.{.f..f3.f.
    2750: 8C 0A 00 00 66 F7 F3 66 5B 8A E8 88 6E 09 8D 9C  // ....f..f[...n...
    2760: 40 03 E8 5A 0B 88 46 02 88 66 03 66 C1 E8 10 88  // @..Z..F..f.f....
    2770: 46 08 E8 3D EB 66 89 56 04 C3 83 EC 20 8B EC 80  // F..=.f.V.... ...
    2780: F9 04 75 0A 88 4E 01 32 C0 88 46 00 EB 56 E8 07  // ..u..N.2..F..V..
    2790: EB E8 7F 00 88 46 00 88 4E 01 E8 7B EB 88 56 0A  // .....F..N..{..V.
    27A0: 80 F9 01 74 18 80 F9 0B 75 3A 8D 9C 5C 03 E8 0E  // ...t....u:..\...
    27B0: 0B 88 46 02 E8 FB EA 66 89 56 04 EB 27 E8 14 EB  // ..F....f.V..'...
    27C0: 88 6E 08 E8 EC EA 66 89 56 04 E8 16 EB 88 5E 03  // .n....f.V.....^.
    27D0: E8 83 EA 88 6E 02 51 E8 1C 00 8A CD B0 01 D2 E0  // ....n.Q.........
    27E0: 59 88 46 09 8C D0 66 C1 E0 10 8B C4 BB 4C 00 E8  // Y.F...f......L..
    27F0: 52 05 83 C4 20 C3 8D 9C 3C 03 E8 C2 0A 32 ED 3C  // R... ...<....2.<
    2800: 03 74 0C 3C 09 72 09 3C 0E 77 05 2C 08 8A E8 C3  // .t.<.r.<.w.,....
    2810: B5 FF C3 52 32 C0 80 EE 21 80 FA 1E 74 10 B0 02  // ...R2...!...t...
    2820: 80 FA 20 74 09 B0 04 80 FA 21 74 02 B0 06 02 C6  // .. t.....!t.....
    2830: 5A C3 83 EC 08 8C D0 66 C1 E0 10 8B C4 BB 4B 00  // Z......f......K.
    2840: E8 01 05 83 C4 08 C3 83 EC 08 8B EC 89 7E 00 89  // .............~..
    2850: 5E 02 89 56 04 89 4E 06 8C D0 66 C1 E0 10 8B C4  // ^..V..N...f.....
    2860: BB 36 00 E8 DE 04 8B EC 8B 5E 02 8A 7E 01 83 C4  // .6.......^..~...
    2870: 08 C3 56 33 F6 66 F7 C2 00 00 80 00 75 0A 50 33  // ..V3.f......u.P3
    2880: C0 8A C6 8B F0 32 F6 58 53 BB 04 1F E8 90 09 66  // .....2.XS......f
    2890: 8B C2 BB 00 1F E8 87 09 5B 66 F7 C2 00 00 10 00  // ........[f......
    28A0: 75 02 33 DB 8B D3 66 C1 E2 10 BA 00 1F 83 EC 08  // u.3...f.........
    28B0: 8B EC 66 89 56 00 88 4E 04 8A C5 FE C8 88 46 07  // ..f.V..N......F.
    28C0: C6 46 05 00 C6 46 06 00 8C D0 66 C1 E0 10 8B C4  // .F...F....f.....
    28D0: BB 4E 00 E8 6E 04 8B EC 8A 5E 05 8A 7E 06 83 C4  // .N..n....^..~...
    28E0: 08 0A DB 74 32 51 B9 90 01 80 FB 20 74 05 80 FB  // ...t2Q..... t...
    28F0: 80 75 13 B9 0A 00 8B C6 0A C0 74 0A B9 90 01 3C  // .u........t....<
    2900: 01 74 03 B9 E8 03 E8 88 05 59 8B C6 FE C4 8B F0  // .t.......Y......
    2910: 80 FC 06 76 98 0A DB 5E C3 8D 5C 04 E8 A0 09 8B  // ...v...^..\.....
    2920: D0 B5 02 E8 14 00 74 11 B5 01 80 FA 13 75 0A E8  // ......t......u..
    2930: 61 00 80 FA 13 75 02 B5 02 C3 80 FA 14 C3 E8 F9  // a....u..........
    2940: FF 74 03 80 FA 0E C3 80 FA 05 C3 80 FA 02 74 03  // .t............t.
    2950: 80 FA 04 C3 80 FA 01 74 03 80 FA 02 C3 80 FA 02  // .......t........
    2960: 75 03 B2 01 C3 80 FA 04 75 03 B2 03 C3 C3 B5 08  // u.......u.......
    2970: E8 D8 FF 74 02 B5 04 C3 8D 5C 09 E8 41 09 8A C8  // ...t.....\..A...
    2980: 0A C9 75 03 32 C0 C3 B5 02 E8 93 04 8A C5 24 02  // ..u.2.........$.
    2990: D0 E8 C3 8D 5C 08 E8 26 09 8A D0 B6 01 83 EC 10  // ....\..&........
    29A0: 8B EC 89 56 02 8C D0 66 C1 E0 10 8B C4 BB 4F 00  // ...V...f......O.
    29B0: E8 91 03 8B EC 8A 56 04 83 C4 10 C3 53 83 C3 4C  // ......V.....S..L
    29C0: E8 CA 08 5B C3 53 83 C3 4C E8 1C 08 5B C3 56 E8  // ...[.S..L...[.V.
    29D0: 2F 03 8B 44 38 83 7D 20 00 5E C3 52 50 0F BC D8  // /..D8.} .^.RP...
    29E0: 32 FF 80 FB 01 75 05 BB 00 24 EB 0C FE CB B8 00  // 2....u...$......
    29F0: 04 F7 E3 05 00 20 8B D8 58 5A C3 57 E8 56 00 74  // ..... ..XZ.W.V.t
    2A00: 0A 8B 5D 02 E8 08 00 0B DB 5F C3 33 DB 5F C3 52  // ..]......_.3._.R
    2A10: 51 0B DB 74 1B 56 E8 CF 02 03 DE 5E 33 C9 8A 4F  // Q..t.V.....^3..O
    2A20: 01 80 3F FF 74 08 3A 07 74 06 03 D9 EB F0 33 DB  // ..?.t.:.t.....3.
    2A30: 0B DB 59 5A C3 56 51 E8 AE 02 32 C9 8D 7C 08 3B  // ..YZ.VQ...2..|.;
    2A40: 5D 04 74 0C 83 C7 10 FE C1 3A 4C 06 72 F1 33 FF  // ].t......:L.r.3.
    2A50: 0B FF 59 5E C3 56 51 E8 8E 02 32 C9 8D 7C 08 3B  // ..Y^.VQ...2..|.;
    2A60: 1D 74 0C 83 C7 10 FE C1 3A 4C 06 72 F2 33 FF 0B  // .t......:L.r.3..
    2A70: FF 59 5E C3 56 51 E8 6F 02 32 C9 8D 7C 08 3B 45  // .Y^.VQ.o.2..|.;E
    2A80: 0C 74 0C 83 C7 10 FE C1 3A 4C 06 72 F1 33 FF 0B  // .t......:L.r.3..
    2A90: FF 59 5E C3 57 50 E8 DB FF 8A C3 8B 5D 02 E8 6E  // .Y^.WP......]..n
    2AA0: FF 58 5F C3 53 32 C9 B3 01 E8 E8 FF 74 03 8A 4F  // .X_.S2......t..O
    2AB0: 02 0A C9 5B C3 53 32 ED B3 02 E8 D7 FF 74 03 8A  // ...[.S2......t..
    2AC0: 6F 02 0A ED 5B C3 50 57 8B DA E8 68 FF 75 04 33  // o...[.PW...h.u.3
    2AD0: DB EB 0D B0 14 8B 5D 08 E8 34 FF 74 F2 8B 5F 02  // ......]..4.t.._.
    2AE0: 5F 58 C3 66 50 53 51 57 8D 1C 66 25 FF FF 00 00  // _X.fPSQW..f%....
    2AF0: E8 2C 07 8B D8 E8 3B 00 23 C3 74 31 E8 75 FF 0B  // .,....;.#.t1.u..
    2B00: FF 74 2A 66 50 66 8B 45 04 8D 5C 0C E8 10 07 66  // .t*fPf.E..\....f
    2B10: 33 C0 8B 05 8D 5C 04 E8 05 07 66 58 E8 85 FF E8  // 3....\....fX....
    2B20: 93 FF 8D 5C 08 66 33 C0 8B C1 E8 F2 06 5F 59 5B  // ...\.f3......_Y[
    2B30: 66 58 C3 56 E8 B1 01 8B 44 04 5E C3 56 E8 A8 01  // fX.V....D.^.V...
    2B40: 89 44 04 5E C3 E8 CE 01 8B F7 83 C6 38 BB 00 2C  // .D.^........8..,
    2B50: B9 23 00 E8 23 03 E8 01 00 C3 51 66 57 56 E8 87  // .#..#.....QfWV..
    2B60: 01 66 33 FF 8D 7C 08 33 C0 E8 D0 FF 32 C9 8B 15  // .f3..|.3....2...
    2B70: B8 00 70 23 C2 3D 00 30 75 54 80 FA 15 74 0B E8  // ..p#.=.0uT...t..
    2B80: B1 FF 0B 45 0C E8 B4 FF EB 44 E8 5E 00 89 45 0C  // ...E.....D.^..E.
    2B90: 0B C0 75 04 89 05 EB 36 E8 98 FF 0B 45 0C E8 9B  // ..u....6....E...
    2BA0: FF 83 7D 06 00 74 16 E8 4A 00 89 45 06 0B C0 74  // ..}..t..J..E...t
    2BB0: 0C 83 7D 06 00 74 06 8B 5C 0A E8 BB 00 E8 40 00  // ..}..t..\.....@.
    2BC0: 89 05 8B 5D 02 E8 B0 00 8B 5D 08 E8 CB 00 83 C7  // ...].....]......
    2BD0: 10 FE C1 3A 4C 06 72 96 5E 66 5F 59 C3 08 00 80  // ...:L.r.^f_Y....
    2BE0: 00 00 02 00 04 00 08 40 00 00 00 53 E8 58 00 E8  // .......@...S.X..
    2BF0: CD 06 5B C3 53 E8 4F 00 83 C3 08 E8 C1 06 5B C3  // ..[.S.O.......[.
    2C00: 53 57 52 E8 41 00 83 C3 04 E8 B3 06 8B D0 E8 3A  // SWR.A..........:
    2C10: FD 75 16 8B 5D 04 8B D3 E8 64 FA 57 E8 16 FE 5F  // .u..]....d.W..._
    2C20: 75 07 8B D0 E8 36 FD 8B C2 5A 5F 5B C3 E8 D0 FF  // u....6...Z_[....
    2C30: 66 C1 E8 10 B4 11 E8 25 00 C3 E8 C3 FF 66 C1 E8  // f......%.....f..
    2C40: 18 B4 10 E8 18 00 C3 51 52 33 C9 8A CE 80 E1 07  // .......QR3......
    2C50: 49 B8 10 00 F7 E1 BB 14 2C 03 D8 5A 59 C3 57 53  // I.......,..ZY.WS
    2C60: 51 33 C9 8A C8 8A C4 BB 03 71 E8 8E FD 83 C3 02  // Q3.......q......
    2C70: 03 D9 8A 07 59 5B 5F C3 50 53 B0 01 E8 90 FD 74  // ....Y[_.PS.....t
    2C80: 15 E8 A9 FF 88 47 02 5B 53 B0 02 E8 81 FD 74 06  // .....G.[S.....t.
    2C90: E8 A7 FF 88 47 02 5B 58 C3 51 50 B0 14 E8 6F FD  // ....G.[X.QP...o.
    2CA0: 74 3A 53 E8 A1 FF 83 C3 0C E8 13 06 8B C8 5B F6  // t:S...........[.
    2CB0: C1 01 74 05 66 83 67 02 FD F6 C1 80 74 05 66 83  // ..t.f.g.....t.f.
    2CC0: 67 02 F7 F7 C1 00 01 74 08 66 81 4F 02 00 01 00  // g......t.f.O....
    2CD0: 00 F7 C1 00 02 74 05 66 83 67 02 FB 58 59 C3 BF  // .....t.f.g..XY..
    2CE0: A6 01 8B 3D 8B 7D 0C C3 BE A6 01 8B 34 8B 74 30  // ...=.}......4.t0
    2CF0: C3 1E 0E 1F BF A6 01 8B 3D 8B 7D 0E 83 C7 04 1F  // ........=.}.....
    2D00: C3 BE A6 01 8B 34 8B 74 10 C3 BF A6 01 8B 3D 8B  // .....4.t......=.
    2D10: 7D 26 83 C7 04 C3 BF A6 01 8B 3D 8B 7D 40 C3 BE  // }&........=.}@..
    2D20: A6 01 8B 34 8B 74 1A C3 BE A6 01 8B 34 8B 74 3A  // ...4.t......4.t:
    2D30: C3 BF A6 01 8B 3D 8B 7D 0A 83 C7 04 B9 07 00 C3  // .....=.}........
    2D40: E8 01 00 CB 83 EC 06 8B EC 89 46 00 66 33 C0 C6  // ..........F.f3..
    2D50: 46 04 00 89 46 02 06 52 8A D3 8B C5 E8 84 17 5A  // F...F..R.......Z
    2D60: 07 83 C4 06 C3 E8 77 FF 66 F7 45 10 01 00 00 00  // ......w.f.E.....
    2D70: C3 50 E8 6A FF B8 01 00 09 45 10 58 C3 E8 5F FF  // .P.j.....E.X.._.
    2D80: 88 45 10 C3 66 53 83 EC 48 8B EC 66 89 5E 00 66  // .E..fS..H..f.^.f
    2D90: 89 4E 04 8C D0 66 C1 E0 10 8B C4 BB 00 00 E8 A3  // .N...f..........
    2DA0: FF 83 C4 48 66 5B E8 81 01 E8 AA 01 83 EC 1C 8B  // ...Hf[..........
    2DB0: EC C6 46 01 07 8C D0 66 C1 E0 10 8B C4 BB 0D 00  // ..F....f........
    2DC0: E8 81 FF 83 C4 1C 83 EC 1C 8B EC C6 46 01 08 8C  // ............F...
    2DD0: D0 66 C1 E0 10 8B C4 BB 0D 00 E8 67 FF 83 C4 1C  // .f.........g....
    2DE0: BB 04 00 E8 D6 FB 66 C1 E8 10 E8 90 FF C3 83 EC  // ......f.........
    2DF0: 54 8B EC 66 89 5E 00 8C D0 66 C1 E0 10 8B C4 BB  // T..f.^...f......
    2E00: 0A 00 E8 3F FF 83 C4 54 C3 E8 D3 FE 66 8B 5D 08  // ...?...T....f.].
    2E10: 66 8B 4D 0C C3 56 E8 0F FF 66 8B 44 08 5E C3 83  // f.M..V...f.D.^..
    2E20: EC 04 8B EC 89 4E 00 8C D0 66 C1 E0 10 8B C4 BB  // .....N...f......
    2E30: 38 00 E8 0F FF 8B EC 8A 6E 02 83 C4 04 C3 C3 B0  // 8.......n.......
    2E40: 04 C3 B0 01 C3 B0 04 C3 B0 08 C3 53 66 50 66 33  // ...........SfPf3
    2E50: C0 E8 CB 03 83 C3 04 E2 F8 66 58 5B C3 32 C0 C3  // .........fX[.2..
    2E60: FC E8 5B 04 66 C1 CB 10 E8 B4 03 66 C1 CB 10 66  // ..[.f......f...f
    2E70: 81 C3 04 00 04 00 E2 E9 C3 FC 66 AD E8 A0 03 83  // ..........f.....
    2E80: C3 04 E2 F6 C3 FC E8 36 04 66 AB 83 C3 04 E2 F6  // .......6.f......
    2E90: C3 66 50 B8 64 00 E8 10 00 66 58 C3 66 50 B8 50  // .fP.d....fX.fP.P
    2EA0: C3 D1 E1 E8 03 00 66 58 C3 52 F7 E1 8B CA E8 27  // ......fX.R.....'
    2EB0: 02 66 53 8B D9 66 C1 E3 10 8B D8 66 B8 04 B1 03  // .fS..f.....f....
    2EC0: 00 B2 00 66 EF B2 04 66 33 C0 66 EF 66 B8 08 B1  // ...f...f3.f.f...
    2ED0: 03 00 B2 00 66 EF B2 04 66 ED 33 C9 66 03 D8 73  // ....f...f.3.f..s
    2EE0: 0A 66 ED 66 A9 00 00 00 80 75 F6 66 ED 66 3B C3  // .f.f.....u.f.f;.
    2EF0: 73 0C 66 C1 E8 10 3B C1 72 04 8B C8 EB ED 66 5B  // s.f...;.r.....f[
    2F00: 5A C3 BB 42 EC E8 85 03 66 33 D2 66 BB 64 00 00  // Z..B....f3.f.d..
    2F10: 00 66 F7 F3 C3 66 50 53 BB 07 00 E8 9E FA 25 00  // .f...fPS......%.
    2F20: 02 35 00 02 0B C0 5B 66 58 C3 B3 01 E8 83 01 66  // .5....[fX......f
    2F30: C1 E0 0A 66 83 E8 20 E8 E5 FD 66 89 44 04 C7 44  // ...f.. ...f.D..D
    2F40: 08 20 00 C3 56 1E 0E 1F E8 D4 FD 66 8B 44 04 66  // . ..V......f.D.f
    2F50: C1 E0 0A 1F 5E C3 E8 D1 FF 06 E8 B9 FD 0E 07 BB  // ....^...........
    2F60: 00 78 E8 5A 03 66 3B 05 75 19 B9 00 01 FC E8 14  // .x.Z.f;.u.......
    2F70: FF BB 00 7C BF A6 01 8B 3D 8B 7D 22 B9 00 01 FC  // ...|....=.}"....
    2F80: E8 02 FF E8 90 FD BE A6 01 8B 34 8B 74 14 8B 45  // ..........4.t..E
    2F90: 14 89 44 0C E8 6A FD 0B F6 74 4F 8B 45 28 89 44  // ..D..j...tO.E(.D
    2FA0: 20 8A 45 33 88 44 38 F6 45 26 08 74 17 8A 45 26  //  .E3.D8.E&.t..E&
    2FB0: C0 E8 04 88 44 24 80 64 24 FD F6 45 26 01 74 04  // ....D$.d$..E&.t.
    2FC0: 80 4C 24 02 57 83 C7 38 8A 85 87 00 88 44 3B 5F  // .L$.W..8.....D;_
    2FD0: 66 8B 45 18 89 44 28 B9 07 00 8D 5D 2C 8A 07 0A  // f.E..D(....],...
    2FE0: C0 74 03 88 44 2C 43 46 E2 F3 E8 3B FD 8B 45 20  // .t..D,CF...;..E 
    2FF0: 89 44 10 8B 45 22 89 44 12 8B 45 1C 89 44 14 8B  // .D..E".D..E..D..
    3000: 45 1E 89 44 16 BB 04 71 B0 09 E8 EE F9 74 0C 57  // E..D...q.....t.W
    3010: 83 C7 38 8A 85 85 00 88 47 04 5F 07 C3 BE A6 01  // ..8.....G._.....
    3020: 8B 34 8B 74 1E 83 C6 04 B9 1C 00 C3 56 E8 D1 FC  // .4.t........V...
    3030: 8A 6C 33 5E C3 56 E8 C8 FC 53 81 C3 09 01 E8 7E  // .l3^.V...S.....~
    3040: 02 8A E8 5B 53 81 C3 00 01 E8 73 02 5B 8A C5 66  // ...[S.....s.[..f
    3050: 89 44 34 5E C3 56 E8 A8 FC 66 8B 44 34 53 81 C3  // .D4^.V...f.D4S..
    3060: 08 01 B1 01 8A E8 E8 FA 01 5B 53 81 C3 00 01 B1  // .........[S.....
    3070: 01 8A EC E8 ED 01 5B 53 81 C3 02 01 66 C1 E8 10  // ......[S....f...
    3080: E8 B4 01 5B 5E C3 56 E8 77 FC 8B FE 83 C7 04 5E  // ...[^.V.w......^
    3090: C3 56 E8 6C FC 8A 44 24 80 FD 00 74 05 88 6C 33  // .V.l..D$...t..l3
    30A0: 0C 02 88 44 24 5E C3 32 C0 C3 E8 69 FC 66 8B 45  // ...D$^.2...i.f.E
    30B0: 08 C3 66 53 83 EC 04 8B EC 8C D0 66 C1 E0 10 8B  // ..fS.......f....
    30C0: C4 66 89 5E 00 BB 06 00 E8 79 FC 8B EC 66 8B 46  // .f.^.....y...f.F
    30D0: 00 83 C4 04 66 5B C3 00 66 50 8C C8 3D 00 C0 75  // ....f[..fP..=..u
    30E0: 0C BA C3 03 EC 8A F0 0A F6 74 02 EB 0E 53 2E 8B  // .........t...S..
    30F0: 1E 14 00 B2 20 E8 D6 00 8A F4 5B 32 D2 66 ED 66  // .... .....[2.f.f
    3100: 58 C3 2E 8B 1E 14 00 C3 0B C9 75 1A 4B 74 16 43  // X.........u.Kt.C
    3110: 3B DA 77 09 8B C8 8B C2 2B D2 F7 F3 91 F7 F3 8B  // ;.w.....+.......
    3120: DA 8B D1 2B C9 C3 3B CA 72 1A 75 10 3B D8 77 0C  // ...+..;.r.u.;.w.
    3130: 2B C3 8B D8 2B C9 2B D2 B8 01 00 C3 2B C9 2B DB  // +...+.+.....+.+.
    3140: 93 87 CA C3 55 56 2B F6 8B EE 03 DB 13 C9 72 11  // ....UV+.......r.
    3150: 45 3B CA 72 F5 77 04 3B D8 76 EF F8 13 F6 4D 78  // E;.r.w.;.v....Mx
    3160: 20 D1 D9 D1 DB 2B C3 1B D1 F5 72 F0 03 F6 4D 78  //  ....+....r...Mx
    3170: 0C D1 E9 D1 DB 03 C3 13 D1 73 F1 EB DF 03 C3 13  // .........s......
    3180: D1 8B D8 8B CA 8B C6 33 D2 5E 5D C3 93 50 92 0B  // .......3.^]..P..
    3190: C0 74 02 F7 E2 91 0B C0 74 04 F7 E3 03 C8 58 F7  // .t......t.....X.
    31A0: E3 03 D1 C3 52 66 50 B4 80 8A C7 66 C1 E0 10 8A  // ....RfP....f....
    31B0: E3 8A C2 24 FC BA F8 0C 66 EF 66 58 5A C3 52 BA  // ...$....f.fXZ.R.
    31C0: FC 0C 66 ED 5A C3 52 BA FC 0C 66 EF 5A C3 E8 31  // ..f.Z.R...f.Z..1
    31D0: FF 9C FA E8 CE FF E8 E5 FF 9D C3 E8 24 FF 9C FA  // ............$...
    31E0: E8 C1 FF E8 E0 FF 9D C3 52 66 53 66 50 E8 06 00  // ........RfSfP...
    31F0: 66 58 66 5B 5A C3 66 C1 E3 10 66 C1 EB 0E E8 D7  // fXf[Z.f...f.....
    3200: FE E8 75 01 C3 66 50 66 C1 E3 10 66 C1 EB 10 E8  // ..u..fPf...f....
    3210: 32 FD 66 03 D8 66 81 CB 00 00 00 80 66 58 C3 52  // 2.f..f......fX.R
    3220: 66 53 E8 04 00 66 5B 5A C3 66 50 E8 AA FE E8 D4  // fS...f[Z.fP.....
    3230: FF E8 45 01 66 58 C3 52 51 66 53 66 50 8A CB 80  // ..E.fX.RQfSfP...
    3240: E3 FC 80 E1 03 C0 E1 03 E8 8D FE E8 B7 FF E8 0F  // ................
    3250: 01 66 D3 C8 58 50 66 D3 C0 E8 1D 01 66 58 66 5B  // .f..XPf.....fXf[
    3260: 59 5A C3 66 50 51 C0 E1 03 E8 53 00 66 D3 C8 8A  // YZ.fPQ....S.f...
    3270: C5 66 D3 C0 E8 A8 FF 59 66 58 C3 66 50 51 C0 E1  // .f.....YfX.fPQ..
    3280: 03 E8 3B 00 66 D3 C8 59 8A E8 66 58 C3 E8 5F 00  // ..;.f..Y..fX.._.
    3290: C3 E8 44 FE 66 C1 E3 10 66 C1 EB 0E E8 C1 00 C3  // ..D.f...f.......
    32A0: E8 35 FE 66 C1 E3 02 E8 B6 00 C3 52 66 53 E8 04  // .5.f.......RfS..
    32B0: 00 66 5B 5A C3 E8 20 FE E8 4A FF E8 A2 00 C3 51  // .f[Z.. ..J.....Q
    32C0: 66 52 8A EB 8A CB 80 E1 03 C0 E1 03 80 E3 FC E8  // fR..............
    32D0: D9 FF 80 F9 00 74 14 66 8B D0 83 C3 04 E8 CB FF  // .....t.f........
    32E0: 83 EB 04 66 92 66 0F AD D0 8A DD 66 5A 59 C3 52  // ...f.f.....fZY.R
    32F0: 66 53 E8 9C FF 66 5B 5A C3 52 66 53 E8 A1 FF 66  // fS...f[Z.RfS...f
    3300: 5B 5A C3 66 50 55 52 66 50 8B EC 8B 56 0C 89 56  // [Z.fPURfP...V..V
    3310: 08 E8 C4 FD 2E A1 F5 01 B2 18 EF B2 00 66 ED 66  // .............f.f
    3320: 89 46 0A 66 58 5A 5D C3 66 50 55 52 8B EC E8 A7  // .F.fXZ].fPUR....
    3330: FD B2 00 66 8B 46 0A 66 EF 8B 56 08 89 56 0C 66  // ...f.F.f..V..V.f
    3340: 8B 46 04 66 89 46 08 5A 5D 66 58 66 58 C3 66 50  // .F.f.F.Z]fXfX.fP
    3350: 52 E8 84 FD B2 18 66 ED 2E A3 F5 01 5A 66 58 C3  // R.....f.....ZfX.
    3360: 66 81 FB FF 00 00 00 77 04 8A D3 EB 09 66 8B C3  // f......w.....f..
    3370: B2 00 66 EF B2 04 66 ED C3 66 81 FB FF 00 00 00  // ..f...f..f......
    3380: 77 04 8A D3 EB 0A 66 93 B2 00 66 EF 66 93 B2 04  // w.....f...f.f...
    3390: 66 EF C3 C3 C3 55 8B EC 53 51 8B F0 26 8B 5C 14  // f....U..SQ..&.\.
    33A0: 26 8B 4C 16 E8 28 00 8D 66 FC 59 5B 5D C3 53 51  // &.L..(..f.Y[].SQ
    33B0: 8B F0 26 8B 5C 24 33 C9 E8 14 00 59 5B C3 55 8B  // ..&.\$3....Y[.U.
    33C0: EC 53 51 8B F0 26 8B 5C 08 26 8B 4C 0A EB D5 52  // .SQ..&.\.&.L...R
    33D0: 56 57 C8 06 00 00 8B F0 89 4E FE 8C D0 8E C0 26  // VW.......N.....&
    33E0: 8B 7C 26 8A 45 01 32 E4 B9 20 00 2B C8 B8 FF FF  // .|&.E.2.. .+....
    33F0: 8B D0 E3 06 D1 EA D1 D8 E2 FA 8A 4D 03 32 ED 8B  // ...........M.2..
    3400: FA E3 06 D1 E0 D1 D7 E2 FA F7 D0 F7 D7 26 21 44  // .............&!D
    3410: 1C 26 21 7C 1E 8C D0 8E C0 26 8B 7C 26 8A 4D 01  // .&!|.....&.|&.M.
    3420: 32 ED B8 20 00 2B C1 8B C8 66 C7 46 FA FF FF FF  // 2.. .+...f.F....
    3430: FF E3 08 D1 6E FC D1 5E FA E2 F8 8A 4D 02 32 ED  // ....n..^....M.2.
    3440: 8B C3 8B 56 FE E3 06 D1 EA D1 D8 E2 FA 23 46 FA  // ...V.........#F.
    3450: 23 56 FC 8A 4D 03 32 ED E3 06 D1 E0 D1 D2 E2 FA  // #V..M.2.........
    3460: 26 09 44 1C 26 09 54 1E C9 5F 5E 5A C3 55 8B EC  // &.D.&.T.._^Z.U..
    3470: 53 51 52 57 50 8B D8 26 8B 7F 26 8A 45 01 32 E4  // SQRWP..&..&.E.2.
    3480: B9 20 00 2B C8 B8 FF FF 8B D0 E3 06 D1 EA D1 D8  // . .+............
    3490: E2 FA 8A 4D 02 88 4E F6 C6 46 F7 00 8B FA 8B 4E  // ...M..N..F.....N
    34A0: F6 E3 06 D1 E0 D1 D7 E2 FA 26 09 47 1C 26 09 7F  // .........&.G.&..
    34B0: 1E 8D 66 F8 5F 5A E9 F1 FE 53 51 52 57 8B D8 8C  // ..f._Z...SQRW...
    34C0: D0 8E C0 26 8B 77 26 8A 4C 01 32 ED B8 20 00 2B  // ...&.w&.L.2.. .+
    34D0: C1 8B C8 BE FF FF 8B D6 E3 06 D1 EA D1 DE E2 FA  // ................
    34E0: 26 8B 7F 26 8A 4D 02 32 ED 8B C6 E3 06 D1 E0 D1  // &..&.M.2........
    34F0: D2 E2 FA F7 D0 F7 D2 26 21 47 1C 26 21 57 1E 5F  // .......&!G.&!W._
    3500: E9 CC 05 53 56 8B D8 8C D2 8E C2 26 8B 77 26 80  // ...SV......&.w&.
    3510: 3C 00 74 73 80 3C 01 75 58 8A 44 01 32 E4 26 83  // <.ts.<.uX.D.2.&.
    3520: 7F 1E 00 75 4C 26 3B 47 1C 75 46 8A 04 6B F0 03  // ...uL&;G.uF..k..
    3530: 8A 84 68 91 26 01 47 26 8C D0 8E C0 26 8B 77 26  // ..h.&.G&....&.w&
    3540: 80 3C 09 74 17 8A 04 32 E4 6B F0 03 8B C3 FF 94  // .<.t...2.k......
    3550: 66 91 26 8B 77 26 8A 04 32 E4 EB D1 8B 44 01 26  // f.&.w&..2....D.&
    3560: 29 47 26 26 FF 47 26 26 8B 47 1C 26 8B 77 1E EB  // )G&&.G&&.G.&.w..
    3570: 1A 26 8B 77 26 8A 04 32 E4 6B F0 03 8A 84 68 91  // .&.w&..2.k....h.
    3580: 26 01 47 26 E9 80 FF 33 C0 33 F6 8B D6 5E 5B C3  // &.G&...3.3...^[.
    3590: 53 51 52 56 8B D8 8D 77 35 26 8B 54 02 26 89 57  // SQRV...w5&.T.&.W
    35A0: 14 26 C7 47 16 00 00 8B F0 26 8B 47 20 33 D2 26  // .&.G.....&.G 3.&
    35B0: 01 47 14 26 11 54 16 8C D1 8E C1 26 F6 47 2F 06  // .G.&.T.....&.G/.
    35C0: 0F 85 0A 05 26 80 7F 34 00 75 22 26 8B 77 16 26  // ....&..4.u"&.w.&
    35D0: 0B 77 14 75 10 26 D1 67 08 26 D1 57 0A 26 D1 67  // .w.u.&.g.&.W.&.g
    35E0: 08 26 D1 57 0A 8B C3 E8 79 11 E9 E1 04 26 8A 47  // .&.W....y....&.G
    35F0: 34 32 E4 05 80 00 99 26 89 47 1C 26 89 57 1E 8B  // 42.....&.G.&.W..
    3600: C3 E8 FF FE E9 C7 04 53 56 8B D8 8D 77 35 26 8A  // .......SV...w5&.
    3610: 44 02 32 E4 C1 E0 02 26 8B 37 26 8B 34 03 F0 26  // D.2....&.7&.4..&
    3620: 8B 47 08 26 8B 5F 0A 26 89 04 26 89 5C 02 5E 5B  // .G.&._.&..&.\.^[
    3630: C3 53 52 56 8B D8 8C D0 8D 77 35 8E C0 26 8A 54  // .SRV.....w5..&.T
    3640: 02 80 FA 40 73 21 26 8B 77 02 32 F6 C1 E2 02 26  // ...@s!&.w.2....&
    3650: 8B 74 04 03 F2 26 8B 57 08 26 8B 47 0A 26 89 14  // .t...&.W.&.G.&..
    3660: 26 89 44 02 E9 7F 00 80 FA 41 75 12 26 8B 47 08  // &.D......Au.&.G.
    3670: 26 8B 57 0A 26 89 47 10 26 89 57 12 EB 68 80 FA  // &.W.&.G.&.W..h..
    3680: 40 75 12 26 8B 47 08 26 8B 57 0A 26 89 47 0C 26  // @u.&.G.&.W.&.G.&
    3690: 89 57 0E EB 51 80 FA 42 75 0A 26 8B 47 08 26 89  // .W..Q..Bu.&.G.&.
    36A0: 47 22 EB 42 80 FA 43 75 0A 26 8A 47 08 26 88 47  // G".B..Cu.&.G.&.G
    36B0: 33 EB 33 80 FA 46 75 12 26 8B 57 08 26 8B 47 0A  // 3.3..Fu.&.W.&.G.
    36C0: 26 89 57 18 26 89 47 1A EB 1C 80 FA 47 75 0A 26  // &.W.&.G.....Gu.&
    36D0: 8B 47 08 26 89 47 24 EB 0D 80 FA 48 75 08 26 8B  // .G.&.G$....Hu.&.
    36E0: 47 08 26 89 47 20 5E 5A 5B C3 53 56 8B D8 8D 77  // G.&.G ^Z[.SV...w
    36F0: 35 26 8A 44 02 32 E4 26 89 47 14 26 C7 47 16 00  // 5&.D.2.&.G.&.G..
    3700: 00 5E 5B C3 53 56 8B D8 26 8B 77 02 26 8B 74 02  // .^[.SV..&.w.&.t.
    3710: 8A 04 32 E4 26 89 47 14 26 C7 47 16 00 00 26 8B  // ..2.&.G.&.G...&.
    3720: 5F 02 26 FF 47 02 5E 5B C3 53 56 8B D8 26 8B 77  // _.&.G.^[.SV..&.w
    3730: 02 26 8B 74 02 8B 34 26 89 77 14 26 C7 47 16 00  // .&.t..4&.w.&.G..
    3740: 00 26 8B 5F 02 26 83 47 02 02 5E 5B C3 53 56 8B  // .&._.&.G..^[.SV.
    3750: D8 26 8B 77 02 26 8B 74 02 8B 04 8B 74 02 26 89  // .&.w.&.t....t.&.
    3760: 47 14 26 89 77 16 26 8B 5F 02 26 83 47 02 04 5E  // G.&.w.&._.&.G..^
    3770: 5B C3 53 52 56 8B D8 E8 70 FF 8B F3 26 8B 47 18  // [.SRV...p...&.G.
    3780: 26 8B 57 1A D1 EA D1 D8 D1 EA D1 D8 26 01 47 14  // &.W.........&.G.
    3790: 26 11 54 16 8B C3 E8 2B 10 E9 4A FF 53 8B D8 26  // &.T....+..J.S..&
    37A0: 8B 5F 02 26 FF 47 02 5B C3 53 8B D8 26 8B 5F 02  // ._.&.G.[.S..&._.
    37B0: 26 83 47 02 02 5B C3 53 56 8B D8 E8 6B FF 8B F3  // &.G..[.SV...k...
    37C0: 26 8B 57 20 33 C0 26 01 57 14 26 11 44 16 8C D2  // &.W 3.&.W.&.D...
    37D0: 8E C2 26 8B 47 2E 32 C0 80 E4 06 3D 00 02 75 07  // ..&.G.2....=..u.
    37E0: 32 E4 33 D2 5E 5B C3 26 8B 47 2E 32 C0 80 E4 06  // 2.3.^[.&.G.2....
    37F0: 3D 00 04 74 EB 26 80 7F 34 00 75 08 8B C3 E8 2F  // =..t.&..4.u..../
    3800: 0F 5E 5B C3 26 8A 47 34 32 E4 26 89 47 1C 26 C7  // .^[.&.G42.&.G.&.
    3810: 47 1E 00 00 8B C3 E8 EA FC 5E 5B C3 53 8B D8 E8  // G........^[.S...
    3820: E2 FE 26 8B 47 14 C1 E0 02 26 8B 1F 26 8B 1F 03  // ..&.G....&..&...
    3830: D8 26 8B 07 26 8B 57 02 5B C3 40 38 35 38 4B 38  // .&..&.W.[.@858K8
    3840: 9A 38 51 38 69 38 83 38 8E 38 94 38 53 51 56 8B  // .8Q8i8.8.8.8SQV.
    3850: D8 E8 B0 FE 8C D2 8E C2 26 83 7F 16 00 75 22 26  // ........&....u"&
    3860: 83 7F 14 40 73 1B 26 8B 77 02 26 8B 5F 14 C1 E3  // ...@s.&.w.&._...
    3870: 02 26 8B 44 04 03 D8 26 8B 07 26 8B 57 02 E9 7B  // .&.D...&..&.W..{
    3880: 05 26 8B 77 14 26 8B 47 16 83 C6 C0 83 D0 FF 75  // .&.w.&.G.......u
    3890: 71 83 FE 08 77 6C 03 F6 2E FF A4 D2 37 26 8B 47  // q...wl......7&.G
    38A0: 10 26 8B 57 12 E9 54 05 26 8B 47 0C 26 8B 57 0E  // .&.W..T.&.G.&.W.
    38B0: E9 49 05 26 8B 47 22 EB 4B 26 8A 4F 33 32 ED BB  // .I.&.G".K&.O32..
    38C0: 01 00 33 D2 E3 06 D1 E3 D1 D2 E2 FA 8B C3 E9 2B  // ..3............+
    38D0: 05 26 8A 4F 33 32 ED B8 01 00 33 D2 E3 06 D1 E0  // .&.O32....3.....
    38E0: D1 D2 E2 FA F7 D0 F7 D2 E9 11 05 26 8B 47 18 26  // ...........&.G.&
    38F0: 8B 57 1A E9 06 05 26 8B 47 24 EB 08 26 8B 47 20  // .W....&.G$..&.G 
    3900: EB 02 33 C0 33 D2 E9 F3 04 53 56 8B D8 E8 F4 FD  // ..3.3....SV.....
    3910: 8B F3 26 8B 47 18 26 8B 57 1A D1 EA D1 D8 D1 EA  // ..&.G.&.W.......
    3920: D1 D8 26 01 47 14 26 11 54 16 8B C3 E8 16 0E 5E  // ..&.G.&.T......^
    3930: 5B C3 33 C0 33 D2 C3 53 56 8B D8 E8 EB FD 26 8B  // [.3.3..SV.....&.
    3940: 77 14 26 03 77 22 8B 04 8B 54 02 5E 5B C3 53 8B  // w.&.w"...T.^[.S.
    3950: D8 26 C6 47 2B 04 E8 AB FD 26 8B 47 14 26 8B 57  // .&.G+....&.G.&.W
    3960: 16 5B C3 53 8B D8 26 C6 47 2B 01 E8 BB FD EB E9  // .[.S..&.G+......
    3970: 53 8B D8 26 C6 47 2B 00 E8 D2 FD EB DC 53 8B D8  // S..&.G+......S..
    3980: 83 C3 35 26 8A 5F 01 C0 EB 03 80 E3 07 32 FF 03  // ..5&._.......2..
    3990: DB FF 97 F6 90 5B C3 53 52 56 8B D8 26 8A 47 2C  // .....[.SRV..&.G,
    39A0: 32 E4 8B F0 03 F0 8B C3 FF 94 12 91 26 89 47 08  // 2...........&.G.
    39B0: 26 89 57 0A 26 8A 47 2D 32 E4 8B F0 03 F0 8B C3  // &.W.&.G-2.......
    39C0: FF 94 2A 91 26 89 47 04 26 89 57 06 E9 17 FD 53  // ..*.&.G.&.W....S
    39D0: 51 56 8B D8 26 8A 4F 2B 32 ED 8B F1 8A 8C 5A 91  // QV..&.O+2.....Z.
    39E0: E3 0A 26 D1 6F 06 26 D1 5F 04 E2 F6 26 8A 4F 2B  // ..&.o.&._...&.O+
    39F0: 32 ED 8B F1 C1 E6 02 8B 8C 3A 91 8B B4 3C 91 26  // 2........:...<.&
    3A00: 21 4F 04 26 21 77 06 26 8A 4F 2A 32 ED 8B F1 8A  // !O.&!w.&.O*2....
    3A10: 8C 62 91 E3 0A 26 D1 67 04 26 D1 57 06 E2 F6 26  // .b...&.g.&.W...&
    3A20: 8B 4F 08 26 8B 77 0A 26 89 4F 14 26 89 77 16 E9  // .O.&.w.&.O.&.w..
    3A30: CA 03 53 51 52 56 57 8B D8 8C D0 8E C0 26 8A 47  // ..SQRVW......&.G
    3A40: 2B 32 E4 8B F0 C1 E6 02 26 8A 47 2A 8B F8 8A 8D  // +2......&.G*....
    3A50: 62 91 32 ED 8B 84 3A 91 8B 94 3C 91 E3 06 D1 E0  // b.2...:...<.....
    3A60: D1 D2 E2 FA F7 D0 F7 D2 26 21 47 14 26 21 57 16  // ........&!G.&!W.
    3A70: 26 8A 47 2A 32 E4 8B F0 8A 8C 62 91 32 ED E3 0A  // &.G*2.....b.2...
    3A80: 26 D1 6F 0A 26 D1 5F 08 E2 F6 26 8A 47 2B 8B F0  // &.o.&._...&.G+..
    3A90: C1 E6 02 8B 84 3A 91 8B 94 3C 91 26 21 47 08 26  // .....:...<.&!G.&
    3AA0: 21 57 0A 26 8A 47 2A 32 E4 8B F0 8A 8C 62 91 32  // !W.&.G*2.....b.2
    3AB0: ED E3 0A 26 D1 67 08 26 D1 57 0A E2 F6 26 8B 47  // ...&.g.&.W...&.G
    3AC0: 14 26 8B 57 16 26 09 47 08 26 09 57 0A 5F 5E 5A  // .&.W.&.G.&.W._^Z
    3AD0: 59 5B C3 53 51 56 8B D8 26 8A 4F 2B 32 ED 8B F1  // Y[.SQV..&.O+2...
    3AE0: 8A 8C 5A 91 E3 0A 26 D1 6F 06 26 D1 5F 04 E2 F6  // ..Z...&.o.&._...
    3AF0: 26 8A 4F 2B 32 ED 8B F1 C1 E6 02 8B 8C 3A 91 8B  // &.O+2........:..
    3B00: B4 3C 91 26 21 4F 04 26 21 77 06 26 8A 4F 2A 32  // .<.&!O.&!w.&.O*2
    3B10: ED 8B F1 8A 8C 62 91 E3 0A 26 D1 6F 0A 26 D1 5F  // .....b...&.o.&._
    3B20: 08 E2 F6 26 8A 4F 2B 32 ED 8B F1 C1 E6 02 8B 8C  // ...&.O+2........
    3B30: 3A 91 8B B4 3C 91 26 21 4F 08 26 21 77 0A E9 BB  // :...<.&!O.&!w...
    3B40: 02 51 52 57 8B D8 8C D0 8E C0 26 80 7F 2B 00 74  // .QRW......&..+.t
    3B50: 1A 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 12  // .&.G,2..........
    3B60: 91 26 89 47 08 26 89 57 0A EB 10 26 8A 47 2C 32  // .&.G.&.W...&.G,2
    3B70: E4 8B F0 03 F0 8B C3 FF 94 1E 91 26 8A 47 2D 32  // ...........&.G-2
    3B80: E4 8B F0 03 F0 8B C3 FF 94 2A 91 26 89 47 04 26  // .........*.&.G.&
    3B90: 89 57 06 8C D2 8E C2 26 80 7F 2B 00 74 4A 26 8A  // .W.....&..+.tJ&.
    3BA0: 47 2B 32 E4 8B F0 C1 E6 02 26 8A 47 2A 8B F8 8A  // G+2......&.G*...
    3BB0: 8D 62 91 32 ED 8B 84 3A 91 8B 94 3C 91 E3 06 D1  // .b.2...:...<....
    3BC0: E0 D1 D2 E2 FA F7 D0 F7 D2 26 21 47 08 26 21 57  // .........&!G.&!W
    3BD0: 0A 8B C3 E8 F9 FD 26 8B 47 04 26 8B 57 06 26 09  // ......&.G.&.W.&.
    3BE0: 47 08 26 09 57 0A EB 10 26 8B 57 04 26 8B 47 06  // G.&.W...&.W.&.G.
    3BF0: 26 89 57 08 26 89 47 0A 26 8A 47 2C 32 E4 8B F0  // &.W.&.G.&.G,2...
    3C00: 03 F0 8B C3 FF 94 06 91 5F 5A 59 C3 53 51 52 56  // ........_ZY.SQRV
    3C10: 57 8B D8 26 8A 47 2A 32 E4 8B F0 8A 8C 62 91 32  // W..&.G*2.....b.2
    3C20: ED E3 0A 26 D1 67 04 26 D1 57 06 E2 F6 8C D0 8E  // ...&.g.&.W......
    3C30: C0 26 8A 47 2B 32 E4 8B F0 C1 E6 02 26 8A 47 2A  // .&.G+2......&.G*
    3C40: 8B F8 8A 8D 62 91 32 ED 8B 84 3A 91 8B 94 3C 91  // ....b.2...:...<.
    3C50: E3 06 D1 E0 D1 D2 E2 FA F7 D0 F7 D2 26 09 47 04  // ............&.G.
    3C60: 26 09 57 06 26 8B 47 04 26 8B 57 06 26 21 47 08  // &.W.&.G.&.W.&!G.
    3C70: 26 21 57 0A E9 56 FE 55 8B EC 51 52 50 8B D8 26  // &!W..V.U..QRP..&
    3C80: 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 12 91 26  // .G,2...........&
    3C90: 89 47 08 26 89 57 0A 26 8A 47 2B 88 46 FA 8B C3  // .G.&.W.&.G+.F...
    3CA0: E8 DA FC 26 89 47 04 26 89 57 06 26 8A 4F 2D 32  // ...&.G.&.W.&.O-2
    3CB0: ED 8B F1 03 F1 8B C3 FF 94 2A 91 26 89 47 14 26  // .........*.&.G.&
    3CC0: 89 57 16 8B C3 E8 44 FF 8A 46 FA 32 E4 8B F0 8A  // .W....D..F.2....
    3CD0: 8C 5A 91 E3 0A 26 D1 6F 16 26 D1 5F 14 E2 F6 26  // .Z...&.o.&._...&
    3CE0: 8A 57 2B 32 F6 8B F2 C1 E6 02 8B 84 3A 91 8B 94  // .W+2........:...
    3CF0: 3C 91 26 21 47 14 26 21 57 16 26 8A 47 2A 32 E4  // <.&!G.&!W.&.G*2.
    3D00: 8B F0 8A 8C 62 91 32 ED E3 0A 26 D1 67 14 26 D1  // ....b.2...&.g.&.
    3D10: 57 16 E2 F6 26 8B 47 14 26 8B 57 16 26 09 47 08  // W...&.G.&.W.&.G.
    3D20: 26 09 57 0A 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3  // &.W.&.G,2.......
    3D30: FF 94 06 91 8D 66 FC 5A 59 5D C3 51 8B D8 E8 56  // .....f.ZY].Q...V
    3D40: FC 26 8A 4F 2B 32 ED 8B F1 8A 8C 5A 91 E3 0A 26  // .&.O+2.....Z...&
    3D50: D1 6F 06 26 D1 5F 04 E2 F6 8B C3 E8 AE FE 26 8A  // .o.&._........&.
    3D60: 4F 2C 32 ED 8B F1 03 F1 8B C3 FF 94 06 91 59 C3  // O,2...........Y.
    3D70: 8B D8 E8 22 FC 8B C3 E8 55 FC 26 8B 47 04 26 8B  // ..."....U.&.G.&.
    3D80: 77 06 26 09 47 08 26 09 77 0A 26 8A 47 2C 32 E4  // w.&.G.&.w.&.G,2.
    3D90: 8B F0 03 F0 8B C3 FF 94 06 91 C3 53 56 8B D8 E8  // ...........SV...
    3DA0: F5 FB 8B C3 E8 28 FC 26 8B 47 04 26 8B 77 06 26  // .....(.&.G.&.w.&
    3DB0: 31 47 08 26 31 77 0A 26 8A 47 2C 32 E4 8B F0 03  // 1G.&1w.&.G,2....
    3DC0: F0 8B C3 FF 94 06 91 5E 5B C3 53 51 56 8B D8 E8  // .......^[.SQV...
    3DD0: C5 FB 8B C3 E8 F8 FB 26 8B 4F 04 E3 0A 26 D1 67  // .......&.O...&.g
    3DE0: 08 26 D1 57 0A E2 F6 8B C3 E8 46 FC 26 8A 4F 2C  // .&.W......F.&.O,
    3DF0: 32 ED 8B F1 03 F1 8B C3 FF 94 06 91 5E 59 5B C3  // 2...........^Y[.
    3E00: 53 51 56 8B D8 E8 8F FB 8B C3 E8 C2 FB 26 8B 4F  // SQV..........&.O
    3E10: 04 E3 0A 26 D1 6F 0A 26 D1 5F 08 E2 F6 EB C8 52  // ...&.o.&._.....R
    3E20: 8B D8 E8 72 FB 8B C3 E8 A5 FB 8B F3 26 8B 47 04  // ...r........&.G.
    3E30: 26 8B 57 06 26 01 47 08 26 11 54 0A 8B C3 E8 F1  // &.W.&.G.&.T.....
    3E40: FB 26 8A 47 2C 32 E4 8B F0 03 F0 8B C3 FF 94 06  // .&.G,2..........
    3E50: 91 5A C3 52 8B D8 E8 3E FB 8B C3 E8 71 FB 8B F3  // .Z.R...>....q...
    3E60: 26 8B 47 04 26 8B 57 06 26 29 47 08 26 19 54 0A  // &.G.&.W.&)G.&.T.
    3E70: EB CA 51 52 8B F0 E8 1E FB 8B C6 E8 55 FC 26 8B  // ..QR........U.&.
    3E80: 44 08 26 8B 54 0A 26 8B 5C 04 26 8B 4C 06 E8 FB  // D.&.T.&.\.&.L...
    3E90: F2 26 89 44 0C 26 89 54 0E 5A 59 C3 52 8B D0 E8  // .&.D.&.T.ZY.R...
    3EA0: F5 FA 8B C2 E8 2C FC 8B C2 E8 5C 08 5A C3 51 52  // .....,....\.Z.QR
    3EB0: 57 8B F0 E8 E1 FA 8B C6 E8 18 FC 26 8B 44 08 26  // W..........&.D.&
    3EC0: 8B 54 0A 26 8B 5C 04 26 8B 4C 06 E8 3A F2 26 89  // .T.&.\.&.L..:.&.
    3ED0: 44 0C 26 89 54 0E 8C D7 8E C7 26 8B 44 08 26 8B  // D.&.T.....&.D.&.
    3EE0: 54 0A 26 8B 5C 04 26 8B 4C 06 E8 1B F2 26 89 5C  // T.&.\.&.L....&.\
    3EF0: 10 26 89 4C 12 E9 10 FD 52 8B D0 E8 99 FA 8B C2  // .&.L....R.......
    3F00: E8 D0 FB 8B C2 E8 D3 07 5A C3 51 52 8B D8 E8 86  // ........Z.QR....
    3F10: FA 8B C3 E8 BD FB 8C D1 8E C1 26 8B 47 08 26 8B  // ..........&.G.&.
    3F20: 57 0A 26 3B 57 06 75 0E 26 3B 47 04 75 08 26 C6  // W.&;W.u.&;G.u.&.
    3F30: 47 30 01 5A 59 C3 8B D0 26 8B 47 0A 26 3B 47 06  // G0.ZY...&.G.&;G.
    3F40: 72 08 75 0A 26 3B 57 04 73 04 33 C0 EB 03 B8 02  // r.u.&;W.s.3.....
    3F50: 00 26 88 47 30 5A 59 C3 51 52 57 8B D8 26 8A 47  // .&.G0ZY.QRW..&.G
    3F60: 2C 32 E4 8B F0 03 F0 8B C3 FF 94 12 91 26 89 47  // ,2...........&.G
    3F70: 08 26 89 57 0A 8C D0 8E C0 26 8A 47 2B 32 E4 8B  // .&.W.....&.G+2..
    3F80: F0 C1 E6 02 8B F8 8A 8D 5A 91 32 ED 8B 84 3A 91  // ........Z.2...:.
    3F90: 8B 94 3C 91 E3 06 D1 E0 D1 D2 E2 FA F7 D0 F7 D2  // ..<.............
    3FA0: 26 21 47 08 26 21 57 0A E9 4D FC 55 8B EC 51 52  // &!G.&!W..M.U..QR
    3FB0: 57 83 EC 06 8B D8 26 8A 47 2B 32 E4 8B F0 C1 E6  // W.....&.G+2.....
    3FC0: 02 8B F8 8A 8D 5A 91 32 ED 8B 84 3A 91 89 46 F4  // .....Z.2...:..F.
    3FD0: 8B 84 3C 91 89 46 F6 E3 08 D1 66 F4 D1 56 F6 E2  // ..<..F....f..V..
    3FE0: F8 8B 7E F4 8B 46 F6 89 46 F8 26 8A 47 2C 32 E4  // ..~..F..F.&.G,2.
    3FF0: 8B F0 03 F0 8B C3 FF 94 12 91 26 89 47 08 26 89  // ..........&.G.&.
    4000: 57 0A 8B C3 E8 47 F9 26 89 47 04 26 89 57 06 8B  // W....G.&.G.&.W..
    4010: C7 F7 D0 8B 56 F6 F7 D2 26 23 47 08 26 23 57 0A  // ....V...&#G.&#W.
    4020: 26 89 47 14 26 89 57 16 26 21 7F 08 8B 46 F6 26  // &.G.&.W.&!...F.&
    4030: 21 47 0A 8C D1 8D 77 35 8E C1 26 80 3C 19 73 12  // !G....w5..&.<.s.
    4040: 26 8B 4F 04 E3 0A 26 D1 67 08 26 D1 57 0A E2 F6  // &.O...&.g.&.W...
    4050: EB 10 26 8B 4F 04 E3 0A 26 D1 6F 0A 26 D1 5F 08  // ..&.O...&.o.&._.
    4060: E2 F6 26 21 7F 08 8B 46 F8 26 21 47 0A 26 8B 57  // ..&!...F.&!G.&.W
    4070: 14 26 8B 47 16 26 09 57 08 26 09 47 0A 26 8A 47  // .&.G.&.W.&.G.&.G
    4080: 2C 32 E4 8B F0 03 F0 8B C3 FF 94 06 91 8D 66 FA  // ,2............f.
    4090: 5F E9 A3 FC 52 8B D8 E8 FD F8 8B C3 E8 34 FA 26  // _...R........4.&
    40A0: 8B 47 08 26 8B 57 0A 26 85 57 06 75 06 26 85 47  // .G.&.W.&.W.u.&.G
    40B0: 04 74 05 B8 03 00 EB 03 B8 01 00 26 88 47 30 5A  // .t.........&.G0Z
    40C0: C3 53 51 52 56 8B D8 26 8A 4F 2D 32 ED 8B F1 03  // .SQRV..&.O-2....
    40D0: F1 FF 94 2A 91 26 89 47 04 26 89 57 06 26 8A 47  // ...*.&.G.&.W.&.G
    40E0: 2B 32 E4 8B F0 8A 8C 5A 91 E3 0A 26 D1 6F 06 26  // +2.....Z...&.o.&
    40F0: D1 5F 04 E2 F6 26 8A 47 2B 8B F0 C1 E6 02 8B 84  // ._...&.G+.......
    4100: 3A 91 8B 94 3C 91 26 21 47 04 26 21 57 06 E9 BD  // :...<.&!G.&!W...
    4110: F9 52 8B D8 E8 AA FF 26 8B 47 04 26 8B 57 06 26  // .R.....&.G.&.W.&
    4120: 89 47 18 26 89 57 1A 5A C3 51 52 8B D8 E8 91 FF  // .G.&.W.Z.QR.....
    4130: 8C D0 8E C0 26 8B 77 02 26 8B 74 02 81 3C 5A 5A  // ....&.w.&.t..<ZZ
    4140: 74 5B 26 8B 77 02 26 8B 74 02 80 3C 63 75 E1 26  // t[&.w.&.t..<cu.&
    4150: 8B 77 02 26 FF 44 02 8B C3 E8 21 F8 26 89 47 08  // .w.&.D....!.&.G.
    4160: 26 89 57 0A 8B C3 E8 FA F7 26 89 47 14 26 89 57  // &.W......&.G.&.W
    4170: 16 8C D1 8E C1 26 8B 57 04 26 8B 47 06 26 3B 47  // .....&.W.&.G.&;G
    4180: 0A 75 AD 26 3B 57 08 75 A7 26 8B 77 02 26 8B 04  // .u.&;W.u.&.w.&..
    4190: 26 03 47 14 8B DE 26 89 47 02 5A 59 C3 26 8B 5F  // &.G...&.G.ZY.&._
    41A0: 02 26 83 47 02 02 5A 59 C3 52 57 8B D8 8C D0 8E  // .&.G..ZY.RW.....
    41B0: C0 26 8B 77 02 26 8B 74 02 8A 54 01 84 D2 75 08  // .&.w.&.t..T...u.
    41C0: 26 C7 47 22 00 00 EB 2F 80 FA FF 75 14 26 8B 77  // &.G".../...u.&.w
    41D0: 02 26 8B 3F 26 8B 34 26 2B 75 02 26 89 77 22 EB  // .&.?&.4&+u.&.w".
    41E0: 16 26 8B 07 E8 E3 02 8B F0 8A C2 32 E4 03 C0 03  // .&.........2....
    41F0: F0 8B 04 26 89 47 22 26 8B 5F 02 26 83 47 02 02  // ...&.G"&._.&.G..
    4200: 5F 5A C3 8B D8 26 80 67 2F F9 26 8B 77 02 26 8B  // _Z...&.g/.&.w.&.
    4210: 74 02 8A 44 01 26 88 47 34 26 8B 5F 02 26 83 47  // t..D.&.G4&._.&.G
    4220: 02 03 C3 8B D8 26 8B 77 02 26 8B 74 02 8B 74 01  // .....&.w.&.t..t.
    4230: 26 89 77 20 EB E3 53 8B D8 26 8A 47 2C 32 E4 24  // &.w ..S..&.G,2.$
    4240: 03 26 80 67 2F F9 C1 E0 09 26 09 47 2E E9 4F F5  // .&.g/....&.G..O.
    4250: 8B D8 26 8B 77 02 26 8B 74 02 8A 44 01 32 E4 26  // ..&.w.&.t..D.2.&
    4260: 89 47 04 26 C7 47 06 00 00 8B C3 E8 40 04 26 8B  // .G.&.G......@.&.
    4270: 5F 02 26 83 47 02 02 C3 8B D8 26 8B 77 02 26 8B  // _.&.G.....&.w.&.
    4280: 74 02 8A 44 01 32 E4 26 89 47 04 26 C7 47 06 00  // t..D.2.&.G.&.G..
    4290: 00 8B C3 E8 08 04 EB D6 53 56 8B D8 26 8B 77 02  // ........SV..&.w.
    42A0: 26 8B 74 02 8A 44 01 32 E4 26 89 47 04 26 C7 47  // &.t..D.2.&.G.&.G
    42B0: 06 00 00 8B C3 E8 06 04 E9 86 F4 53 56 8B D8 26  // ...........SV..&
    42C0: 8B 77 02 26 8B 74 02 8A 44 01 32 E4 26 89 47 04  // .w.&.t..D.2.&.G.
    42D0: 26 C7 47 06 00 00 8B C3 E8 F0 03 E9 63 F4 53 56  // &.G.........c.SV
    42E0: 8B D8 26 8B 77 02 8B DE 26 8B 5F 02 8B 5F 01 83  // ..&.w...&._.._..
    42F0: C3 03 26 01 5C 02 5E 5B C3 51 52 8B D8 26 8B 77  // ..&.\.^[.QR..&.w
    4300: 02 26 83 44 02 02 26 8B 07 E8 A0 01 8B C8 26 8B  // .&.D..&.......&.
    4310: 77 28 8A 44 01 32 E4 03 C0 8B F1 03 F0 83 3C 00  // w(.D.2........<.
    4320: 74 4F 26 8B 77 28 8A 54 01 32 F6 8B C3 E8 B0 01  // tO&.w(.T.2......
    4330: 26 88 47 31 26 8B 77 02 26 8B 34 8B 44 04 C1 E8  // &.G1&.w.&.4.D...
    4340: 08 32 E4 24 7F C1 E8 02 32 E4 24 1F 26 80 67 2F  // .2.$....2.$.&.g/
    4350: 07 C1 E0 0B 26 09 47 2E 26 8B 37 26 8B 47 2E C1  // ....&.G.&.7&.G..
    4360: E8 0B C1 E0 02 26 01 04 26 C6 47 32 01 26 89 4F  // .....&..&.G2.&.O
    4370: 28 5A 59 C3 53 8B D8 26 C6 47 32 82 5B C3 57 8B  // (ZY.S..&.G2.[.W.
    4380: D8 8C D6 8E C6 26 80 7F 2C 05 74 0A 26 8A 47 2C  // .....&..,.t.&.G,
    4390: 26 3A 47 30 75 1E 26 8B 77 02 26 8B 74 02 26 8B  // &:G0u.&.w.&.t.&.
    43A0: 7F 02 26 8B 3D 8B 74 01 03 F7 26 8B 5F 02 26 89  // ..&.=.t...&._.&.
    43B0: 77 02 5F C3 26 8B 5F 02 26 83 47 02 03 5F C3 53  // w._.&._.&.G.._.S
    43C0: 56 57 8B D8 8C D6 8E C6 26 80 7F 30 01 74 0A 26  // VW......&..0.t.&
    43D0: 8A 47 30 26 3A 47 2C 75 20 26 8B 77 02 26 8B 74  // .G0&:G,u &.w.&.t
    43E0: 02 26 8B 7F 02 26 8B 3D 8B 74 01 03 F7 26 8B 5F  // .&...&.=.t...&._
    43F0: 02 26 89 77 02 5F 5E 5B C3 26 8B 5F 02 26 83 47  // .&.w._^[.&._.&.G
    4400: 02 03 EB F1 53 56 57 8B D8 8C D0 8E C0 26 80 7F  // ....SVW......&..
    4410: 30 01 74 E5 EB C3 55 8B EC 53 51 52 57 8B D8 26  // 0.t...U..SQRW..&
    4420: 8B 77 02 26 8B 74 02 8A 04 26 C6 47 3D 00 8C D1  // .w.&.t...&.G=...
    4430: 8E C1 26 80 7F 3D 08 73 20 26 8B 77 02 26 8A 57  // ..&..=.s &.w.&.W
    4440: 3D 32 F6 26 8B 7C 02 03 FA 8B F3 03 F2 8A 15 26  // =2.&.|.........&
    4450: 88 54 35 26 FE 47 3D EB D5 26 8B 7F 02 8A D0 32  // .T5&.G=..&.....2
    4460: F6 8B F2 C1 E6 02 8A 94 87 91 26 01 55 02 26 8B  // ..........&.U.&.
    4470: 7F 28 8A 55 01 80 E2 07 26 88 57 2D 26 8B 7F 28  // .(.U....&.W-&..(
    4480: 8A 55 01 C0 EA 03 80 E2 07 26 88 57 2B 26 8B 7F  // .U.......&.W+&..
    4490: 28 8A 55 01 C0 EA 06 26 88 57 2A 8A 94 86 91 26  // (.U....&.W*....&
    44A0: 88 57 2C 8D 66 F8 5F 5A 59 5B 5D C3 53 56 8B D8  // .W,.f._ZY[].SV..
    44B0: 26 8B 77 02 8B C6 8B 74 48 03 F0 8B D8 8B 74 1E  // &.w....tH.....t.
    44C0: 8B C6 03 C3 83 C0 04 5E 5B C3 53 56 8B D8 26 8B  // .......^[.SV..&.
    44D0: 77 02 8B C6 8B 74 48 03 F0 8B D8 8B 74 20 EB E0  // w....tH.....t ..
    44E0: 8A C2 C3 16 07 55 8B EC 53 51 56 57 83 EC 40 8B  // .....U..SQVW..@.
    44F0: F8 89 46 B8 E8 D3 FF 8B D8 89 46 E0 26 8B 45 02  // ..F.......F.&.E.
    4500: 8B 5F 2E 03 D8 89 5E DE 83 46 DE 04 8B C7 E8 9B  // ._....^..F......
    4510: FF 89 46 E0 32 F6 8D 46 B8 E8 C4 FF 8A D0 32 F6  // ..F.2..F......2.
    4520: 03 D2 8B 5E E0 03 DA 83 3F 00 0F 84 65 01 88 46  // ...^....?...e..F
    4530: E9 80 66 E7 F9 C6 46 EC 00 C7 46 D8 00 00 66 C7  // ..f...F...F...f.
    4540: 46 D0 00 00 00 00 C7 46 F6 00 00 C6 46 EA 01 EB  // F......F....F...
    4550: 06 3C 01 0F 85 8C 00 8A 56 E9 8A C2 32 E4 03 C0  // .<......V...2...
    4560: 8B 5E E0 03 D8 83 3F 00 74 75 26 8B 45 02 8B 1F  // .^....?.tu&.E...
    4570: 03 D8 8B 47 04 32 E4 8B C8 83 C1 09 32 ED 80 E1  // ...G.2......2...
    4580: FE 83 F9 00 74 07 D1 E9 33 C0 50 E2 FD 8B C4 8B  // ....t...3.P.....
    4590: D8 89 46 BA 85 C0 74 41 83 C0 08 26 89 47 04 8A  // ..F...tA...&.G..
    45A0: C2 32 E4 03 C0 8B 5E E0 03 D8 26 8B 45 02 03 07  // .2....^...&.E...
    45B0: 8B 5E BA 26 89 07 8B 5E BA 26 8B 07 83 C0 06 26  // .^.&...^.&.....&
    45C0: 89 47 02 8B 5E BA 8B 76 F6 26 89 77 06 8B 5E BA  // .G..^..v.&.w..^.
    45D0: 89 5E F6 C6 46 EA 00 EB 0A C6 46 EA 87 EB 04 C6  // .^..F.....F.....
    45E0: 46 EA 83 8A 46 EA 32 E4 83 F8 10 0F 8F 99 00 88  // F...F.2.........
    45F0: 66 EA 8A 46 EA 32 E4 85 C0 0F 8F 83 00 8C D0 8B  // f..F.2..........
    4600: 5E BA 8E C0 26 8B 5F 02 89 5E E0 8B 5E BA 26 8B  // ^...&._..^..^.&.
    4610: 5F 02 80 3F 5B 75 4A C6 46 EA 10 8B 5E BA 26 8B  // _..?[uJ.F...^.&.
    4620: 5F 06 89 5E F6 8B 5E BA 26 8B 1F 8B 47 04 32 E4  // _..^..^.&...G.2.
    4630: 8B C8 83 C1 09 32 ED 80 E1 FE 03 E1 8B 5E F6 89  // .....2.......^..
    4640: 5E BA 85 DB 74 AC 26 8B 1F 8B 47 04 C1 E8 08 32  // ^...t.&...G....2
    4650: E4 24 7F C1 E8 02 C1 E0 02 8B 5E B8 26 29 07 EB  // .$........^.&)..
    4660: 91 8D 46 B8 E8 AF FD 8A D0 8D 46 B8 E8 2E 00 8A  // ..F.......F.....
    4670: DA 32 FF C1 E3 02 8D 46 B8 FF 97 84 91 E9 72 FF  // .2.....F......r.
    4680: 83 7E F6 00 0F 85 C9 FE 80 7E EA 10 74 05 8A 46  // .~.......~..t..F
    4690: EA EB 02 32 C0 8D 66 F8 5F 5E E9 0B FE C3 53 51  // ...2..f._^....SQ
    46A0: 8B D8 26 8A 4F 04 32 ED E8 E6 E7 59 5B C3 53 51  // ..&.O.2....Y[.SQ
    46B0: 8B D8 26 8A 4F 04 32 ED E8 E1 E7 59 5B C3 53 8B  // ..&.O.2....Y[.S.
    46C0: D8 26 8A 47 04 32 E4 E6 80 5B C3 53 51 8B D8 26  // .&.G.2...[.SQ..&
    46D0: 8A 4F 04 32 ED E8 12 D5 59 5B C3 53 8B D8 66 50  // .O.2....Y[.S..fP
    46E0: 66 52 66 51 66 26 8B 47 08 66 26 8B 57 10 66 26  // fRfQf&.G.f&.W.f&
    46F0: 8B 4F 04 66 F7 F1 66 26 89 47 0C 66 26 89 57 10  // .O.f..f&.G.f&.W.
    4700: 66 59 66 5A 66 58 5B C3 53 8B D8 66 50 66 52 66  // fYfZfX[.S..fPfRf
    4710: 51 66 26 8B 47 08 66 26 8B 4F 04 66 F7 E1 66 26  // Qf&.G.f&.O.f..f&
    4720: 89 47 0C 66 26 89 57 10 66 59 66 5A 66 58 5B C3  // .G.f&.W.fYfZfX[.
    4730: 53 57 8B D8 26 8B 5F 14 E8 56 EB 8B D0 66 C1 E8  // SW..&._..V...f..
    4740: 10 92 5F 5B C3 53 57 8B D8 26 8B 47 14 26 8B 57  // .._[.SW..&.G.&.W
    4750: 16 8B D8 87 D3 66 C1 E3 10 8B DA C1 E3 02 E8 54  // .....f.........T
    4760: EB EB D8 53 52 57 8B D8 26 8B 47 08 26 8B 57 0A  // ...SRW..&.G.&.W.
    4770: 92 66 C1 E0 10 8B C2 26 8B 5F 14 E8 78 EA 5F 5A  // .f.....&._..x._Z
    4780: 5B C3 53 52 8B D8 26 8B 47 1C 26 8B 57 1E 92 66  // [.SR..&.G.&.W..f
    4790: C1 E0 10 8B C2 26 8B 5F 26 8B 5F 01 E8 57 EA 5A  // .....&._&._..W.Z
    47A0: 5B C3 53 52 56 8B F0 26 8B 5C 26 8B 5F 01 E8 E0  // [.SRV..&.\&._...
    47B0: EA 8B D0 66 C1 E8 10 92 26 89 44 1C 26 89 54 1E  // ...f....&.D.&.T.
    47C0: 5E 5A 5B C3 53 51 52 57 8B D8 26 8B 47 08 26 8B  // ^Z[.SQRW..&.G.&.
    47D0: 57 0A 92 66 C1 E0 10 8B C2 8B C8 26 8B 47 14 26  // W..f.......&.G.&
    47E0: 8B 57 16 8B D8 87 D3 66 C1 E3 10 8B DA C1 E3 02  // .W.....f........
    47F0: 8B C1 E8 34 EA 5F 5A 59 5B C3 8B D0 66 C1 E8 10  // ...4._ZY[...f...
    4800: 92 C3 1E 06 66 50 66 51 66 52 66 53 66 55 66 56  // ....fPfQfRfSfUfV
    4810: 66 57 0E 1F 0A C0 75 06 E8 07 01 E9 A8 00 3C 01  // fW....u.......<.
    4820: 75 06 E8 37 01 E9 9E 00 3C 02 75 06 E8 5F 02 E9  // u..7....<.u.._..
    4830: 94 00 3C 03 75 0B E8 91 03 8B EC 89 5E 0C E9 85  // ..<.u.......^...
    4840: 00 3C 04 75 02 EB 7D 3C 05 75 0A E8 0E 04 8B EC  // .<.u..}<.u......
    4850: 89 56 10 EB 71 3C 06 75 10 E8 8C 03 8B EC 89 5E  // .V..q<.u.......^
    4860: 0C 89 4E 14 89 56 10 EB 5D 3C 07 75 02 EB 55 3C  // ..N..V..]<.u..U<
    4870: 08 75 0A E8 D0 03 8B EC 88 7E 0D EB 49 3C 09 75  // .u.......~..I<.u
    4880: 02 EB 41 3C 0A 75 10 E8 65 04 8B EC 89 4E 14 89  // ..A<.u..e....N..
    4890: 7E 00 8C 46 1C EB 2F 3C 0B 75 02 EB 27 3C 10 75  // ~..F../<.u..'<.u
    48A0: 0A E8 5A 04 8B EC 89 5E 0C EB 1B 3C 11 75 02 EB  // ..Z....^...<.u..
    48B0: 13 3C 15 75 0F E8 80 04 8B EC 89 5E 0C EB 07 B8  // .<.u.......^....
    48C0: 4F 01 EB 02 32 C0 8B EC 89 46 18 66 5F 66 5E 66  // O...2....F.f_f^f
    48D0: 5D 66 5B 66 5A 66 59 66 58 07 1F C3 50 1E 2E 8E  // ]f[fZfYfX...P...
    48E0: 1E 0F 03 8C D8 A3 50 58 A3 60 58 A3 72 58 2E 8E  // ......PX.`X.rX..
    48F0: 1E 07 03 A3 AA 04 1F 58 CB 00 30 31 2E 30 30 00  // .......X..01.00.
    4900: 56 45 53 41 00 03 C8 01 00 00 01 00 00 00 00 00  // VESA............
    4910: 00 00 00 03 02 10 EB 00 00 00 7F 00 00 00 92 48  // ...............H
    4920: 00 00 B9 3F 00 8B DF 83 C7 04 FC 66 33 C0 F3 66  // ...?.......f3..f
    4930: AB 8B FB BE 98 48 B9 22 00 F3 A4 06 1F 8C 4F 08  // .....H."......O.
    4940: 8C 47 10 8C 4F 18 8C 4F 1C 8C 4F 20 83 C7 22 89  // .G..O..O..O ..".
    4950: 7F 0E 0E 1F E8 6D D1 B0 4F 32 E4 C3 56 51 57 B9  // .....m..O2..VQW.
    4960: 10 00 66 33 C0 F3 66 AB 5F 59 8C DB 06 1F C7 05  // ..f3..f._Y......
    4970: BB 00 C6 45 02 07 C7 45 04 40 00 C7 45 06 40 00  // ...E...E.@..E.@.
    4980: C6 45 1B 06 C6 45 18 01 C6 45 1A 01 C6 45 1E 01  // .E...E...E...E..
    4990: 66 C7 45 3E 00 84 D7 17 8E DB E8 37 CA 66 0B C0  // f.E>.......7.f..
    49A0: 0F 84 E1 00 06 1F 66 89 45 28 8C C8 66 C1 E0 10  // ......f.E(..f...
    49B0: B8 51 4C 66 89 45 0C 81 F9 FF 81 0F 84 C2 00 80  // .QLf.E..........
    49C0: E5 03 B2 01 53 8E DB BE 80 1C E8 19 CF 5B 06 1F  // ....S........[..
    49D0: 0F 84 B1 00 53 E8 95 D1 66 89 45 12 C7 45 16 08  // ....S...f.E..E..
    49E0: 10 8D 5C 0C E8 D8 E8 66 89 45 1F 66 89 45 36 8D  // ..\....f.E.f.E6.
    49F0: 5C 10 E8 CA E8 66 89 45 23 66 89 45 3A 8D 5C 08  // \....f.E#f.E:.\.
    4A00: E8 BC E8 0A C0 75 03 5B EB 7B E8 60 D1 66 C1 E8  // .....u.[.{.`.f..
    4A10: 10 3D 58 02 74 0D 3D 5E 01 74 08 77 0A C6 45 17  // .=X.t.=^.t.w..E.
    4A20: 08 EB 04 C6 45 17 0E 2E A1 09 03 89 45 08 8D 5C  // ....E.......E..\
    4A30: 04 E8 8B E8 66 8B C8 66 C1 E9 10 D3 E0 89 45 10  // ....f..f......E.
    4A40: 89 45 32 B0 08 D2 E0 88 45 19 8D 5C 14 E8 6F E8  // .E2.....E..\..o.
    4A50: 5B 3D 00 03 77 2F 53 8B D8 B8 00 03 33 D2 F7 F3  // [=..w/S.....3...
    4A60: 5B FE C8 88 45 1D 88 45 35 88 45 34 8E DB 57 53  // [...E..E5.E4..WS
    4A70: BE 80 1C E8 C7 C9 5B 5F 0B C9 75 05 06 1F 83 25  // ......[_..u....%
    4A80: FE 32 E4 EB 02 B4 03 B0 4F 8E DB 5E C3 00 81 FB  // .2......O..^....
    4A90: FF 81 74 68 0A FF 75 04 8B C3 EB 21 F6 C7 08 75  // ..th..u....!...u
    4AA0: 61 8B CB B2 01 BE 20 1C E8 3B CE 74 55 E8 9C D0  // a..... ..;.tU...
    4AB0: 0A C0 75 0E 66 C1 E8 10 80 E7 80 0A C7 E8 D5 02  // ..u.f...........
    4AC0: EB 3A E8 0B CC 74 06 E8 7F CA E8 CE C3 BE 20 1C  // .:...t........ .
    4AD0: E8 3E C9 74 2D E8 A5 00 E8 2C 00 66 BB 20 1C 00  // .>.t-....,.f. ..
    4AE0: 1C E8 5F D0 BE 00 1C E8 62 D0 66 C1 E8 10 8B D8  // .._.....b.f.....
    4AF0: 32 C0 F6 C7 80 74 02 B0 40 E8 6E C9 B0 4F 32 E4  // 2....t..@.n..O2.
    4B00: EB 04 B0 4F B4 03 C3 56 06 33 C0 8E C0 BE 20 1C  // ...O...V.3.... .
    4B10: E8 5A D0 8B C8 66 C1 E8 10 8B D0 C1 E9 03 26 89  // .Z...f........&.
    4B20: 0E 4A 04 C1 EA 04 FE CA 26 88 16 84 04 26 C6 06  // .J......&....&..
    4B30: 51 04 00 26 C6 06 50 04 00 26 C6 06 49 04 62 26  // Q..&..P..&..I.b&
    4B40: C7 06 4C 04 00 A0 26 C6 06 85 04 10 26 C7 06 0C  // ..L...&.....&...
    4B50: 01 29 62 8C C8 26 A3 0E 01 07 5E C3 01 0F 00 0A  // .)b..&....^.....
    4B60: 00 00 00 00 00 40 05 0F FF 00 01 02 03 04 05 06  // .....@..........
    4B70: 07 08 09 0A 0B 0C 0D 0E 0F 01 00 0F 00 FC BA C4  // ................
    4B80: 03 B8 00 01 EF B9 04 00 B4 01 BE F4 4A AC 86 E0  // ............J...
    4B90: EF 8A E0 FE C4 E2 F6 B8 00 03 EF B9 09 00 BA CE  // ................
    4BA0: 03 32 E4 BE F8 4A 8A C4 EE AC 42 EE 4A FE C4 E2  // .2...J....B.J...
    4BB0: F5 BA DA 03 EC B9 14 00 BA C0 03 32 E4 BE 01 4B  // ...........2...K
    4BC0: 8A C4 EE AC EE FE C4 E2 F7 C3 BE 00 1C E8 7C CF  // ..............|.
    4BD0: 66 C1 E8 10 8B D8 E8 4C CF 75 05 E8 38 CF 75 04  // f......L.u..8.u.
    4BE0: B8 4F 00 C3 B8 4F 03 C3 E8 3A CF 74 53 BE 00 1C  // .O...O...:.tS...
    4BF0: 80 FB 00 74 18 80 FB 01 75 05 E8 78 CF EB 1D 80  // ...t....u..x....
    4C00: FB 02 75 10 8B C1 E8 2B CF D3 E8 8B C8 E8 1B CA  // ..u....+........
    4C10: 74 2E EB 08 80 FB 03 75 24 E8 CF CE E8 15 CF 8B  // t......u$.......
    4C20: D8 D3 E3 50 33 C0 BA 00 03 3B DA 77 05 BA FF FF  // ...P3....;.w....
    4C30: EB 04 F7 F3 8B D0 58 8B C8 B8 4F 00 C3 32 C0 C3  // ......X...O..2..
    4C40: B0 4F B4 03 C3 00 0A DB 75 07 8A EF E8 E9 CA EB  // .O......u.......
    4C50: 05 E8 CE CA 8A F8 B0 4F 32 E4 C3 00 E8 C6 CE 74  // .......O2......t
    4C60: 2C BE 00 1C E8 E5 CE 66 C1 E8 10 F6 C4 40 75 1D  // ,......f.....@u.
    4C70: 0A FF 75 05 E8 1E 00 EB 0F 80 FF 01 75 14 BB 13  // ..u.........u...
    4C80: 00 E8 09 E6 D1 E8 8B D0 B0 4F 32 E4 C3 B0 4F B4  // .........O2...O.
    4C90: 03 C3 32 C0 C3 52 53 66 50 81 E2 FF 02 D1 E2 8B  // ..2..RSfP.......
    4CA0: C2 40 66 C1 E0 10 8B C2 BB 13 00 E8 3A E5 BB 12  // .@f.........:...
    4CB0: 00 E8 34 E5 66 58 5B 5A C3 9C 1E 06 66 50 66 51  // ..4.fX[Z....fPfQ
    4CC0: 66 52 66 53 66 55 66 56 66 57 0E 1F E8 34 E6 E8  // fRfSfUfVfW...4..
    4CD0: 8A FF E8 53 E6 8B EC 89 56 10 89 46 18 66 5F 66  // ...S....V..F.f_f
    4CE0: 5E 66 5D 66 5B 66 5A 66 59 66 58 07 1F 9D CB 0E  // ^f]f[fZfYfX.....
    4CF0: 07 BF 2C 90 2E 8B 0E 2A 90 B8 4F 00 C3 00 0A DB  // ..,....*..O.....
    4D00: 75 06 B7 04 B3 10 EB 26 80 FB 01 75 14 E8 C0 C9  // u......&...u....
    4D10: 75 21 53 B1 01 0A FF 74 02 B1 00 E8 D5 C8 5B EB  // u!S....t......[.
    4D20: 0D 80 FB 02 75 0D E8 ED C9 8A F8 C0 E7 02 B0 4F  // ....u..........O
    4D30: 32 E4 C3 B8 4F 03 C3 00 80 E3 01 0A DB 75 05 BB  // 2...O........u..
    4D40: 02 01 EB 0E E8 89 C9 75 0E 33 C0 53 E8 79 B8 5B  // .......u.3.S.y.[
    4D50: 74 05 B0 4F 32 E4 C3 B0 4F B4 03 C3 80 FC 1D 72  // t..O2...O......r
    4D60: 03 CD 42 C3 1E 06 66 50 66 51 66 52 66 53 66 55  // ..B...fPfQfRfSfU
    4D70: 66 56 66 57 0E 1F 50 0F B6 C4 D1 E0 8B F0 58 2E  // fVfW..P.......X.
    4D80: FF 94 3E 4D 66 5F 66 5E 66 5D 66 5B 66 5A 66 59  // ..>Mf_f^f]f[fZfY
    4D90: 66 58 07 1F C3 0E 1F 50 0F B6 C4 D1 E0 8B F0 58  // fX.....P.......X
    4DA0: 2E FF 94 3E 4D C3 78 4D 94 86 AD 86 CA 86 77 4E  // ...>M.xM......wN
    4DB0: CD 7D FF 7D 72 7E F5 7E 83 80 87 80 90 83 61 84  // .}.}r~.~......a.
    4DC0: E4 84 4B 85 E6 86 48 87 F1 89 90 50 38 8E 2C 4D  // ..K...H....P8.,M
    4DD0: 2C 4D 2C 4D 2C 4D 2C 4D 2C 4D 08 8F 0B 73 5F 74  // ,M,M,M,M,M...s_t
    4DE0: 2E 8E 1E 07 03 80 26 87 04 F3 50 8A E0 80 E4 7F  // ......&...P.....
    4DF0: 80 FC 03 74 07 80 FC 12 74 02 58 C3 E8 C4 01 3B  // ...t....t.X....;
    4E00: D3 75 02 58 C3 BA CC 03 EC B2 B4 B1 30 26 F6 47  // .u.X........0&.G
    4E10: 09 01 74 0C B2 D4 B1 20 A8 01 75 49 B5 09 EB 06  // ..t.... ..uI....
    4E20: A8 01 74 41 B5 0B 53 E8 6A 41 0A FF 5B 75 0B 80  // ..tA..S.jA..[u..
    4E30: 26 88 04 F0 08 2E 88 04 EB 2B 58 80 0E 87 04 08  // &........+X.....
    4E40: 80 26 10 04 CF 08 0E 10 04 89 16 63 04 C7 06 85  // .&.........c....
    4E50: 04 08 00 C6 06 84 04 18 C7 06 0C 01 16 5A 8C 0E  // .............Z..
    4E60: 0E 01 CD 42 C3 80 26 10 04 CF 08 0E 10 04 58 53  // ...B..&.......XS
    4E70: 50 0E 1F 33 C9 8A C8 E8 56 C8 74 06 E8 CA C6 E8  // P..3....V.t.....
    4E80: 19 C0 B2 08 BE 40 1C E8 5C CA BE 40 1C E8 81 C5  // .....@..\..@....
    4E90: 58 5B 0F 84 6E FF 2E 8E 1E 07 03 0E 07 E8 13 29  // X[..n..........)
    4EA0: 0E 1F 53 66 BB 40 1C 00 1C E8 97 CC BE 00 1C B0  // ..Sf.@..........
    4EB0: 20 E8 B6 C5 5B 2E 8E 1E 07 03 0E 07 E8 1C 2E E8  //  ...[...........
    4EC0: 24 00 E8 28 3D E8 D1 01 E8 8E 01 E8 AE 3E 0E 1F  // $..(=........>..
    4ED0: BE 00 1C B0 10 E8 92 C5 E8 F7 2D E8 EF 2D C3 8B  // ..........-..-..
    4EE0: EC C6 46 1B 00 C3 E8 2F 00 E8 0A 00 E8 BD 00 E8  // ..F..../........
    4EF0: 52 00 E8 5C 0A C3 53 83 C3 0A 8B 16 63 04 B9 19  // R..\..S.....c...
    4F00: 00 B8 11 30 EF 32 C0 26 8A 27 EF 43 FE C0 E2 F7  // ...0.2.&.'.C....
    4F10: 5B 80 C2 06 32 C0 EE C3 53 BA C4 03 83 C3 05 B9  // [...2...S.......
    4F20: 04 00 B0 01 26 8A 27 3C 01 75 03 80 CC 20 EF 43  // ....&.'<.u... .C
    4F30: FE C0 E2 F0 5B 26 8A 47 09 BA C2 03 EE B2 C4 B8  // ....[&.G........
    4F40: 00 03 EF C3 8B F3 83 C6 23 BA DA 03 26 F6 47 09  // ........#...&.G.
    4F50: 01 75 02 B2 BA F6 06 89 04 08 74 1D 83 C6 10 EC  // .u........t.....
    4F60: B9 04 00 B4 10 B2 C0 80 FC 11 74 07 8A C4 EE 26  // ..........t....&
    4F70: 8A 04 EE 46 FE C4 E2 EF C3 53 EC 8B DE B9 14 00  // ...F.....S......
    4F80: 32 E4 B2 C0 8A C4 EE FE C4 26 8A 07 EE 43 E2 F4  // 2........&...C..
    4F90: 8A C4 EE 32 C0 EE 1E 06 E8 49 2D 0B ED 74 09 1F  // ...2.....I-..t..
    4FA0: 1E B9 10 00 F3 A4 46 A4 07 1F 5B C3 53 83 C3 37  // ......F...[.S..7
    4FB0: B9 09 00 32 C0 BA CE 03 26 8A 27 EF 43 FE C0 E2  // ...2....&.'.C...
    4FC0: F7 5B C3 BB 4E 52 0E 07 8B D3 0A E4 7D 01 C3 E8  // .[..NR......}...
    4FD0: 01 00 C3 33 F6 80 FC 03 7F 3C 4A F6 06 89 04 10  // ...3.....<J.....
    4FE0: 75 20 A0 88 04 24 0F 3C 02 7E 24 3C 08 74 20 3C  // u ...$.<.~$<.t <
    4FF0: 06 74 1C 3C 07 74 18 B0 40 F6 E4 03 D8 81 C3 00  // .t.<.t..@.......
    5000: 04 C3 B0 40 D0 EC F6 E4 03 D8 81 C3 80 04 C3 B0  // ...@............
    5010: 40 F6 E4 03 D8 C3 80 FC 07 75 11 F6 06 89 04 10  // @........u......
    5020: 75 05 81 C3 00 01 C3 81 C3 00 05 C3 BF D0 4F BE  // u.............O.
    5030: F1 4F 33 C9 E8 4E 00 C3 04 80 00 05 80 00 06 C0  // .O3..N..........
    5040: 00 0D 80 02 0E C0 02 0F 80 03 10 C0 03 11 40 05  // ..............@.
    5050: 12 80 05 13 C0 05 62 40 01 53 8A 1E 49 04 80 FB  // ......b@.S..I...
    5060: 07 7F 10 32 FF D1 E3 2E 8B 87 0D 50 A2 65 04 88  // ...2.......P.e..
    5070: 26 66 04 5B C3 2C 30 28 30 2D 30 29 30 2A 30 2E  // &f.[.,0(0-0)0*0.
    5080: 30 1E 3F 29 30 2E 38 25 75 07 2E 03 5D 01 33 F6  // 0.?)0.8%u...].3.
    5090: C3 83 C7 03 3B FE 75 ED C3 1E 06 2E 8E 1E 07 03  // ....;.u.........
    50A0: F6 06 87 04 80 75 49 83 3E 4C 04 00 74 42 A0 49  // .....uI.>L..tB.I
    50B0: 04 B9 00 20 2E 8B 3E 0D 03 26 F6 47 33 01 75 0E  // ... ..>..&.G3.u.
    50C0: 26 F6 47 09 01 75 1B 2E 8B 3E 0B 03 EB 14 3C 06  // &.G..u...>....<.
    50D0: 7E 0B 2E 8B 3E 09 03 26 8A 67 37 B5 40 66 33 C0  // ~...>..&.g7.@f3.
    50E0: EB 06 66 B8 20 07 20 07 8E C7 66 33 FF F3 66 AB  // ..f. . ...f3..f.
    50F0: 80 26 87 04 7F 07 1F C3 2E 8E 1E 07 03 80 FB 10  // .&..............
    5100: 75 03 E9 7A 01 80 FB 20 75 03 E9 9B 01 80 FB 32  // u..z... u......2
    5110: 75 1F BA CC 03 0A C0 75 09 EC 0C 02 B2 C2 EE E9  // u......u........
    5120: F3 00 FE C8 0F 85 F3 00 EC 24 FD B2 C2 EE E9 E4  // .........$......
    5130: 00 80 FB 35 75 28 3C 80 75 08 80 0E 89 04 40 E9  // ...5u(<.u.....@.
    5140: D3 00 F6 06 89 04 40 0F 84 D0 00 0A C0 0F 84 CA  // ......@.........
    5150: 00 FE C8 75 06 E8 98 07 E9 BA 00 E9 BD 00 80 FB  // ...u............
    5160: 30 74 03 E9 96 00 50 E8 2A 3E 8A EF BA CC 03 EC  // 0t....P.*>......
    5170: 8A C8 58 0A C0 75 30 B7 08 F6 C1 01 75 12 0A ED  // ..X..u0.....u...
    5180: 75 0B A0 10 04 24 30 3C 30 75 10 B7 02 E9 8B 00  // u....$0<0u......
    5190: A0 10 04 24 30 3C 30 75 02 B7 02 80 26 89 04 6F  // ...$0<0u....&..o
    51A0: 80 0E 89 04 80 EB 36 3C 01 75 41 80 26 89 04 6F  // ......6<.uA.&..o
    51B0: B7 09 F6 C1 01 75 15 B7 0B A0 10 04 24 30 3C 30  // .....u......$0<0
    51C0: 74 1B B7 09 0A ED 74 15 B7 05 EB 11 A0 10 04 24  // t.....t........$
    51D0: 30 3C 30 75 08 B7 0B 0A ED 74 02 B7 03 8A 1E 88  // 0<0u.....t......
    51E0: 04 80 E3 F0 0A DF 88 1E 88 04 EB 29 3C 02 75 2B  // ...........)<.u+
    51F0: 80 26 89 04 6F 80 0E 89 04 10 EB B4 80 FB 31 75  // .&..o.........1u
    5200: 1B 0A C0 74 0B 3C 01 75 0C 80 0E 89 04 08 EB 05  // ...t.<.u........
    5210: 80 26 89 04 F7 8B EC C6 46 1A 12 C3 80 FB 33 75  // .&......F.....3u
    5220: 16 3C 00 74 0B 3C 01 75 EC 80 26 89 04 FD EB E5  // .<.t.<.u..&.....
    5230: 80 0E 89 04 02 EB DE 80 FB 34 75 17 3C 00 75 07  // .........4u.<.u.
    5240: 80 26 87 04 FE EB CE 3C 01 75 07 80 0E 87 04 01  // .&.....<.u......
    5250: EB C3 C3 80 FB 36 75 26 BB 20 FF 3C 01 74 09 BB  // .....6u&. .<.t..
    5260: 00 DF 3C 00 74 02 EB AD E8 02 00 EB A8 9C FA BA  // ..<.t...........
    5270: C4 03 B0 01 EE 42 EC 22 C7 0A C3 EE 9D C3 C3 B3  // .....B."........
    5280: 03 B7 00 BA CC 03 EC A8 01 75 02 B7 01 A0 88 04  // .........u......
    5290: 8A E0 B1 04 D2 EC 25 0F 0F 8B C8 8B EC 89 5E 0E  // ......%.......^.
    52A0: 89 4E 16 C6 46 1A 12 C3 9C FA C7 06 14 00 F8 77  // .N..F..........w
    52B0: 8C 0E 16 00 9D C3 28 18 08 00 08 09 03 00 02 63  // ......(........c
    52C0: 2D 27 28 90 2B A0 BF 1F 00 C7 06 07 00 00 00 00  // -'(.+...........
    52D0: 9C 8E 8F 14 1F 96 B9 A3 FF 00 01 02 03 04 05 06  // ................
    52E0: 07 10 11 12 13 14 15 16 17 08 00 0F 00 00 00 00  // ................
    52F0: 00 00 10 0E 00 FF 50 18 08 00 10 01 03 00 02 63  // ......P........c
    5300: 5F 4F 50 82 55 81 BF 1F 00 C7 06 07 00 00 00 00  // _OP.U...........
    5310: 9C 8E 8F 28 1F 96 B9 A3 FF 00 01 02 03 04 05 06  // ...(............
    5320: 07 10 11 12 13 14 15 16 17 08 00 0F 00 00 00 00  // ................
    5330: 00 00 10 0E 00 FF 28 18 08 00 40 09 03 00 02 63  // ......(...@....c
    5340: 2D 27 28 90 2B 80 BF 1F 00 C1 00 00 00 00 00 00  // -'(.+...........
    5350: 9C 8E 8F 14 00 96 B9 A2 FF 00 13 15 17 02 04 06  // ................
    5360: 07 10 11 12 13 14 15 16 17 01 00 03 00 00 00 00  // ................
    5370: 00 00 30 0F 00 FF 50 18 08 00 40 01 01 00 06 63  // ..0...P...@....c
    5380: 5F 4F 50 82 54 80 BF 1F 00 C1 00 00 00 00 00 00  // _OP.T...........
    5390: 9C 8E 8F 28 00 96 B9 C2 FF 00 17 17 17 17 17 17  // ...(............
    53A0: 17 17 17 17 17 17 17 17 17 01 00 01 00 00 00 00  // ................
    53B0: 00 00 00 0D 00 FF 50 18 0E 00 10 00 03 00 03 A6  // ......P.........
    53C0: 5F 4F 50 82 55 81 BF 1F 00 4D 0B 0C 00 00 00 00  // _OP.U....M......
    53D0: 83 85 5D 28 0D 63 BA A3 FF 00 08 08 08 08 08 08  // ..](.c..........
    53E0: 08 10 18 18 18 18 18 18 18 0E 00 0F 08 00 00 00  // ................
    53F0: 00 00 10 0A 00 FF 50 1D 10 00 A0 01 0F 00 0A E3  // ......P.........
    5400: 5F 4F 50 82 54 80 0B 3E 00 40 00 00 00 00 00 00  // _OP.T..>.@......
    5410: EA 8C DF 50 00 E7 04 E3 FF 00 01 02 03 04 05 06  // ...P............
    5420: 07 08 09 0A 0B 0C 0D 0E 0F 01 00 0F 00 10 00 00  // ................
    5430: 00 00 40 05 0F FF 00 05 11 1C 08 0B 14 28 0E 18  // ..@..........(..
    5440: 2D 32 20 24 38 3F 00 05 08 0B 0E 11 14 18 1C 20  // -2 $8?......... 
    5450: 24 28 2D 32 38 3F 07 0C 10 15 1A 18 16 15 13 1C  // $(-28?..........
    5460: 25 2F 38 33 2E 2A 25 27 29 2A 2C 23 19 10 23 25  // %/83.*%')*,#..#%
    5470: 27 2A 2C 2B 2A 29 29 2D 32 37 3B 39 37 34 32 33  // '*,+*))-27;97423
    5480: 34 35 35 31 2C 27 2F 30 32 33 34 34 33 33 32 35  // 4551,'/023443325
    5490: 38 3A 3D 3C 3A 39 38 38 39 39 3A 37 34 31 03 05  // 8:=<:98899:741..
    54A0: 07 09 0B 0B 0A 09 08 0D 11 15 19 17 15 13 11 11  // ................
    54B0: 12 13 14 0F 0B 07 10 10 12 13 14 13 13 13 12 14  // ................
    54C0: 16 18 1A 19 18 17 16 17 17 17 18 15 14 11 15 15  // ................
    54D0: 16 17 17 17 17 17 16 18 19 1A 1B 1B 1A 19 19 19  // ................
    54E0: 19 19 1A 18 17 16 02 03 04 05 07 06 06 05 05 07  // ................
    54F0: 0A 0C 0E 0D 0C 0B 09 0A 0A 0B 0B 09 06 04 09 09  // ................
    5500: 0A 0B 0B 0B 0B 0B 0A 0C 0D 0E 0F 0F 0E 0D 0D 0D  // ................
    5510: 0D 0D 0E 0C 0B 0A 0C 0C 0C 0D 0D 0D 0D 0D 0C 0D  // ................
    5520: 0E 0F 0F 0F 0F 0E 0E 0E 0E 0E 0E 0E 0D 0C 00 00  // ................
    5530: 00 00 00 00 00 00 28 18 08 00 20 09 0F 00 06 63  // ......(... ....c
    5540: 2D 27 28 90 2B 80 BF 1F 00 C0 00 00 00 00 00 00  // -'(.+...........
    5550: 9C 8E 8F 14 00 96 B9 E3 FF 00 01 02 03 04 05 06  // ................
    5560: 07 10 11 12 13 14 15 16 17 01 00 0F 00 00 00 00  // ................
    5570: 00 00 00 05 0F FF 50 18 08 00 40 01 0F 00 06 63  // ......P...@....c
    5580: 5F 4F 50 82 54 80 BF 1F 00 C0 00 00 00 00 00 00  // _OP.T...........
    5590: 9C 8E 8F 28 00 96 B9 E3 FF 00 01 02 03 04 05 06  // ...(............
    55A0: 07 10 11 12 13 14 15 16 17 01 00 0F 00 00 00 00  // ................
    55B0: 00 00 00 05 0F FF 00 05 11 1C 08 0B 25 28 02 07  // ............%(..
    55C0: 1B 20 0F 14 28 2C 0C 11 25 2A 14 1E 32 36 0F 13  // . ..(,..%*..26..
    55D0: 27 2C 1B 20 34 39 06 0B 1F 24 13 18 2C 30 09 0D  // ',. 49...$..,0..
    55E0: 21 26 15 1A 2E 33 13 17 2B 30 1F 24 38 3D 0E 18  // !&...3..+0.$8=..
    55F0: 2D 32 20 24 38 3F 00 05 11 1C 08 0B 14 18 00 05  // -2 $8?..........
    5600: 11 1C 08 0B 14 18 0E 18 2D 32 20 24 38 3F 0E 18  // ........-2 $8?..
    5610: 2D 32 20 24 38 3F 00 05 11 1C 08 0B 14 18 00 05  // -2 $8?..........
    5620: 11 1C 08 0B 14 18 0E 18 2D 32 20 24 38 3F 0E 18  // ........-2 $8?..
    5630: 2D 32 20 24 38 3F 50 18 0E 00 80 01 0F 00 06 A2  // -2 $8?P.........
    5640: 5F 4F 50 82 54 80 BF 1F 00 40 00 00 00 00 00 00  // _OP.T....@......
    5650: 83 85 5D 28 0F 63 BA E3 FF 00 08 00 00 18 18 00  // ..](.c..........
    5660: 00 00 08 00 00 00 18 00 00 0B 00 05 00 00 00 00  // ................
    5670: 00 00 00 05 05 FF 50 18 0E 00 80 01 0F 00 06 A3  // ......P.........
    5680: 5F 4F 50 82 54 80 BF 1F 00 40 00 00 00 00 00 00  // _OP.T....@......
    5690: 83 85 5D 28 0F 63 BA E3 FF 00 01 02 03 04 05 14  // ..](.c..........
    56A0: 07 38 39 3A 3B 3C 3D 3E 3F 01 00 0F 00 00 00 00  // .89:;<=>?.......
    56B0: 00 00 00 05 0F FF 28 18 0E 00 08 09 03 00 02 A3  // ......(.........
    56C0: 2D 27 28 90 2B A0 BF 1F 00 4D 0B 0C 00 00 00 00  // -'(.+....M......
    56D0: 83 85 5D 14 1F 63 BA A3 FF 00 01 02 03 04 05 14  // ..]..c..........
    56E0: 07 38 39 3A 3B 3C 3D 3E 3F 08 00 0F 00 00 00 00  // .89:;<=>?.......
    56F0: 00 00 10 0E 00 FF 50 18 0E 00 10 01 03 00 02 A3  // ......P.........
    5700: 5F 4F 50 82 55 81 BF 1F 00 4D 0B 0C 00 00 00 00  // _OP.U....M......
    5710: 83 85 5D 28 1F 63 BA A3 FF 00 01 02 03 04 05 14  // ..](.c..........
    5720: 07 38 39 3A 3B 3C 3D 3E 3F 08 00 0F 00 00 00 00  // .89:;<=>?.......
    5730: 00 00 10 0E 00 FF 28 18 10 00 08 08 03 00 02 67  // ......(........g
    5740: 2D 27 28 90 2B A0 BF 1F 00 4F 0D 0E 00 00 00 00  // -'(.+....O......
    5750: 9C 8E 8F 14 1F 96 B9 A3 FF 00 01 02 03 04 05 14  // ................
    5760: 07 38 39 3A 3B 3C 3D 3E 3F 0C 00 0F 08 00 00 00  // .89:;<=>?.......
    5770: 00 00 10 0E 00 FF 50 18 10 00 10 00 03 00 02 67  // ......P........g
    5780: 5F 4F 50 82 55 81 BF 1F 00 4F 0D 0E 00 00 00 00  // _OP.U....O......
    5790: 9C 8E 8F 28 1F 96 B9 A3 FF 00 01 02 03 04 05 14  // ...(............
    57A0: 07 38 39 3A 3B 3C 3D 3E 3F 0C 00 0F 08 00 00 00  // .89:;<=>?.......
    57B0: 00 00 10 0E 00 FF 50 18 10 00 10 00 03 00 02 66  // ......P........f
    57C0: 5F 4F 50 82 55 81 BF 1F 00 4F 0D 0E 00 00 00 00  // _OP.U....O......
    57D0: 9C 8E 8F 28 0F 96 B9 A3 FF 00 08 08 08 08 08 08  // ...(............
    57E0: 08 10 18 18 18 18 18 18 18 0E 00 0F 08 00 00 00  // ................
    57F0: 00 00 10 0A 00 FF 50 1D 10 00 A0 01 0F 00 06 E3  // ......P.........
    5800: 5F 4F 50 82 54 80 0B 3E 00 40 00 00 00 00 00 00  // _OP.T..>.@......
    5810: EA 8C DF 28 00 E7 04 C3 FF 00 3F 3F 3F 3F 3F 3F  // ...(......??????
    5820: 3F 3F 3F 3F 3F 3F 3F 3F 3F 01 00 0F 00 00 00 00  // ?????????.......
    5830: 00 00 00 05 01 FF 50 1D 10 00 A0 01 0F 00 06 E3  // ......P.........
    5840: 5F 4F 50 82 54 80 0B 3E 00 40 00 00 00 00 00 00  // _OP.T..>.@......
    5850: EA 8C DF 28 00 E7 04 E3 FF 00 01 02 03 04 05 14  // ...(............
    5860: 07 38 39 3A 3B 3C 3D 3E 3F 01 00 0F 00 00 00 00  // .89:;<=>?.......
    5870: 00 00 00 05 0F FF 28 18 08 00 20 01 0F 00 0E 63  // ......(... ....c
    5880: 5F 4F 50 82 54 80 BF 1F 00 41 00 00 00 00 00 00  // _OP.T....A......
    5890: 9C 8E 8F 28 40 96 B9 A3 FF 00 01 02 03 04 05 06  // ...(@...........
    58A0: 07 08 09 0A 0B 0C 0D 0E 0F 41 00 0F 00 00 00 00  // .........A......
    58B0: 00 00 40 05 0F FF 4E 52 00 C0 00 00 00 00 00 00  // ..@...NR........
    58C0: 00 00 00 00 00 00 6E 58 00 C0 00 00 00 00 00 00  // ......nX........
    58D0: 00 00 00 00 00 00 1A 00 06 90 00 C0 00 00 00 00  // ................
    58E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    58F0: 1E E8 10 00 2E 8E 1E 07 03 E8 F8 36 E8 CF 36 E8  // ...........6..6.
    5900: 70 1A 1F C3 2E 8E 1E 07 03 C7 06 87 04 60 F9 C6  // p............`..
    5910: 06 8A 04 0B A0 89 04 0C 11 24 17 A2 89 04 B4 01  // .........$......
    5920: E8 6D 1E A0 89 04 80 26 10 04 CF 80 0E 10 04 20  // .m.....&....... 
    5930: C7 06 63 04 D4 03 0E 1F E8 CF B5 F7 C1 02 00 75  // ..c............u
    5940: 03 E8 57 B5 C3 1E 2E 8E 1E 07 03 0E 07 EB 00 1F  // ..W.............
    5950: C3 F6 06 89 04 08 74 01 C3 53 BA C8 03 EC B0 FF  // ......t..S......
    5960: B2 C6 EE B2 C8 80 3E 63 04 B4 75 2F BE CA 59 B9  // ......>c..u/..Y.
    5970: 40 00 33 DB 9C FA 8A C3 EE 8B FB C1 EF 03 83 E7  // @.3.............
    5980: 03 03 FE 2E 8A 05 42 EE 2E 8A 45 04 EE 2E 8A 45  // ......B...E....E
    5990: 08 EE FE C3 4A E2 DF 9D E9 85 00 26 8A 47 2B F6  // ....J......&.G+.
    59A0: 06 89 04 06 74 31 B9 F8 00 BF CE 53 3C 08 74 11  // ....t1.....S<.t.
    59B0: B9 40 00 BF 4E 55 3C 38 74 07 3C 3F 74 03 BF 8E  // .@..NU<8t.<?t...
    59C0: 55 33 DB 9C FA 8A C3 EE 2E 8A 01 42 EE EE EE FE  // U3.........B....
    59D0: C3 4A E2 F1 9D EB 49 3C 08 74 25 3C 38 74 2E 3C  // .J....I<.t%<8t.<
    59E0: 3F 74 2A B9 08 00 33 DB 51 E8 05 D3 B9 08 00 F7  // ?t*...3.Q.......
    59F0: C3 10 00 74 03 83 C7 18 E8 67 00 59 E2 EA EB 20  // ...t.....g.Y... 
    5A00: E8 EE D2 B9 00 01 33 DB E8 57 00 EB 13 B9 40 00  // ......3..W....@.
    5A10: 33 DB 51 E8 28 00 8A C3 E8 B7 2F FE C3 59 E2 F2  // 3.Q.(...../..Y..
    5A20: 5B C3 00 2A 00 2A 00 2A 00 2A 15 3F 15 3F 15 3F  // [..*.*.*.*.?.?.?
    5A30: 15 3F 00 2A 00 3F 00 2A 00 3F 00 2A 00 3F 8B FB  // .?.*.?.*.?.*.?..
    5A40: C1 EF 02 83 E7 0F 2E 8A B5 BA 59 8B FB D1 EF 83  // ..........Y.....
    5A50: E7 0F 2E 8A AD BA 59 8B FB 83 E7 0F 2E 8A 8D BA  // ......Y.........
    5A60: 59 C3 9C 8A C3 FA EE 2E 8A 05 42 EE 47 2E 8A 05  // Y.........B.G...
    5A70: EE 47 2E 8A 05 EE 47 FE C3 4A E2 E7 9D C3 00 00  // .G....G..J......
    5A80: 00 00 00 00 00 00 7E 81 A5 81 BD 99 81 7E 7C FE  // ......~......~|.
    5A90: D6 BA C6 FE 7C 00 C6 EE FE FE 7C 38 10 00 10 38  // ....|.....|8...8
    5AA0: 7C FE 7C 38 10 00 10 38 10 EE EE 10 38 00 38 7C  // |.|8...8....8.8|
    5AB0: FE FE 6C 10 38 00 00 18 3C 7E 3C 18 00 00 FF E7  // ..l.8...<~<.....
    5AC0: C3 81 C3 E7 FF FF 00 18 3C 66 66 3C 18 00 FF E7  // ........<ff<....
    5AD0: C3 99 99 C3 E7 FF 1E 0E 1E 36 78 CC CC 78 7E C3  // .........6x..x~.
    5AE0: C3 7E 18 7E 18 18 1E 1A 1E 18 18 70 F0 60 3E 3E  // .~.~.......p.`>>
    5AF0: 36 36 F6 66 1E 0C DB 3C 66 E7 66 3C DB 00 80 C0  // 66.f...<f.f<....
    5B00: F0 F8 F0 C0 80 00 02 06 1E 3E 1E 06 02 00 18 3C  // .........>.....<
    5B10: 7E 18 7E 3C 18 00 66 66 66 66 66 00 66 00 7F DB  // ~.~<..fffff.f...
    5B20: 7B 3B 1B 1B 1B 00 3C 66 38 6C 6C 38 CC 78 00 00  // {;....<f8ll8.x..
    5B30: 00 00 FE FE FE 00 18 3C 7E 18 7E 3C 18 7E 18 3C  // .......<~.~<.~.<
    5B40: 7E 18 18 18 18 00 18 18 18 18 7E 3C 18 00 00 18  // ~.........~<....
    5B50: 1C FE 1C 18 00 00 00 30 70 FE 70 30 00 00 00 00  // .......0p.p0....
    5B60: C0 C0 C0 FE 00 00 00 24 66 FF 66 24 00 00 00 10  // .......$f.f$....
    5B70: 38 7C 7C FE 00 00 00 FE 7C 7C 38 10 00 00 00 00  // 8||.....||8.....
    5B80: 00 00 00 00 00 00 18 3C 3C 18 18 00 18 00 6C 6C  // .......<<.....ll
    5B90: 6C 00 00 00 00 00 6C 6C FE 6C FE 6C 6C 00 18 7E  // l.....ll.l.ll..~
    5BA0: C0 7C 06 FC 18 00 00 C6 0C 18 30 60 C6 00 38 6C  // .|........0`..8l
    5BB0: 38 76 CC CC 76 00 18 18 30 00 00 00 00 00 18 30  // 8v..v...0......0
    5BC0: 60 60 60 30 18 00 60 30 18 18 18 30 60 00 00 EE  // ```0..`0...0`...
    5BD0: 7C FE 7C EE 00 00 00 18 18 7E 18 18 00 00 00 00  // |.|......~......
    5BE0: 00 00 18 18 30 00 00 00 00 FE 00 00 00 00 00 00  // ....0...........
    5BF0: 00 00 00 38 38 00 06 0C 18 30 60 C0 80 00 7C C6  // ...88....0`...|.
    5C00: CE DE F6 E6 7C 00 18 78 18 18 18 18 7E 00 7C C6  // ....|..x....~.|.
    5C10: 0C 18 30 66 FE 00 7C C6 06 3C 06 C6 7C 00 0C 1C  // ..0f..|..<..|...
    5C20: 3C 6C FE 0C 0C 00 FE C0 FC 06 06 C6 7C 00 7C C6  // <l..........|.|.
    5C30: C0 FC C6 C6 7C 00 FE C6 06 0C 18 18 18 00 7C C6  // ....|.........|.
    5C40: C6 7C C6 C6 7C 00 7C C6 C6 7E 06 C6 7C 00 00 1C  // .|..|.|..~..|...
    5C50: 1C 00 00 1C 1C 00 00 18 18 00 00 18 18 30 0C 18  // .............0..
    5C60: 30 60 30 18 0C 00 00 00 FE 00 00 FE 00 00 60 30  // 0`0...........`0
    5C70: 18 0C 18 30 60 00 7C C6 06 0C 18 00 18 00 7C C6  // ...0`.|.......|.
    5C80: C6 DE DC C0 7E 00 38 6C C6 C6 FE C6 C6 00 FC 66  // ....~.8l.......f
    5C90: 66 7C 66 66 FC 00 3C 66 C0 C0 C0 66 3C 00 F8 6C  // f|ff..<f...f<..l
    5CA0: 66 66 66 6C F8 00 FE C2 C0 F8 C0 C2 FE 00 FE 62  // fffl...........b
    5CB0: 60 7C 60 60 F0 00 7C C6 C0 C0 DE C6 7C 00 C6 C6  // `|``..|.....|...
    5CC0: C6 FE C6 C6 C6 00 3C 18 18 18 18 18 3C 00 3C 18  // ......<.....<.<.
    5CD0: 18 18 D8 D8 70 00 C6 CC D8 F0 D8 CC C6 00 F0 60  // ....p..........`
    5CE0: 60 60 60 62 FE 00 C6 EE FE D6 D6 C6 C6 00 C6 E6  // ```b............
    5CF0: E6 F6 DE CE C6 00 7C C6 C6 C6 C6 C6 7C 00 FC 66  // ......|.....|..f
    5D00: 66 7C 60 60 F0 00 7C C6 C6 C6 C6 D6 7C 06 FC C6  // f|``..|.....|...
    5D10: C6 FC D8 CC C6 00 7C C6 C0 7C 06 C6 7C 00 7E 5A  // ......|..|..|.~Z
    5D20: 18 18 18 18 3C 00 C6 C6 C6 C6 C6 C6 7C 00 C6 C6  // ....<.......|...
    5D30: C6 C6 6C 38 10 00 C6 C6 D6 D6 FE EE C6 00 C6 6C  // ..l8...........l
    5D40: 38 38 38 6C C6 00 66 66 66 3C 18 18 3C 00 FE 86  // 888l..fff<..<...
    5D50: 0C 18 30 62 FE 00 7C 60 60 60 60 60 7C 00 C0 60  // ..0b..|`````|..`
    5D60: 30 18 0C 06 02 00 7C 0C 0C 0C 0C 0C 7C 00 10 38  // 0.....|.....|..8
    5D70: 6C C6 00 00 00 00 00 00 00 00 00 00 00 FF 30 30  // l.............00
    5D80: 18 00 00 00 00 00 00 00 78 0C 7C CC 7E 00 E0 60  // ........x.|.~..`
    5D90: 7C 66 66 66 FC 00 00 00 7C C6 C0 C6 7C 00 1C 0C  // |fff....|...|...
    5DA0: 7C CC CC CC 7E 00 00 00 7C C6 FE C0 7C 00 1C 36  // |...~...|...|..6
    5DB0: 30 FC 30 30 78 00 00 00 76 CE C6 7E 06 7C E0 60  // 0.00x...v..~.|.`
    5DC0: 7C 66 66 66 E6 00 18 00 38 18 18 18 3C 00 0C 00  // |fff....8...<...
    5DD0: 1C 0C 0C 0C CC 78 E0 60 66 6C 78 6C E6 00 18 18  // .....x.`flxl....
    5DE0: 18 18 18 18 1C 00 00 00 6C FE D6 D6 C6 00 00 00  // ........l.......
    5DF0: DC 66 66 66 66 00 00 00 7C C6 C6 C6 7C 00 00 00  // .ffff...|...|...
    5E00: DC 66 66 7C 60 F0 00 00 76 CC CC 7C 0C 1E 00 00  // .ff|`...v..|....
    5E10: DC 66 60 60 F0 00 00 00 7C C0 7C 06 7C 00 30 30  // .f``....|.|.|.00
    5E20: FC 30 30 36 1C 00 00 00 CC CC CC CC 76 00 00 00  // .006........v...
    5E30: C6 C6 6C 38 10 00 00 00 C6 C6 D6 FE 6C 00 00 00  // ..l8........l...
    5E40: C6 6C 38 6C C6 00 00 00 C6 C6 CE 76 06 7C 00 00  // .l8l.......v.|..
    5E50: FC 98 30 64 FC 00 0E 18 18 70 18 18 0E 00 18 18  // ..0d.....p......
    5E60: 18 00 18 18 18 00 70 18 18 0E 18 18 70 00 76 DC  // ......p.....p.v.
    5E70: 00 00 00 00 00 00 00 10 38 38 6C 6C FE 00 3C 66  // ........88ll..<f
    5E80: C0 66 3C 18 CC 78 00 C6 00 C6 C6 CE 76 00 0E 00  // .f<..x......v...
    5E90: 7C C6 FE C0 7C 00 7C C6 78 0C 7C CC 7E 00 C6 00  // |...|.|.x.|.~...
    5EA0: 78 0C 7C CC 7E 00 E0 00 78 0C 7C CC 7E 00 38 38  // x.|.~...x.|.~.88
    5EB0: 78 0C 7C CC 7E 00 00 00 7C C0 7C 18 6C 38 7C C6  // x.|.~...|.|.l8|.
    5EC0: 7C C6 FE C0 7C 00 C6 00 7C C6 FE C0 7C 00 E0 00  // |...|...|...|...
    5ED0: 7C C6 FE C0 7C 00 66 00 38 18 18 18 3C 00 7C C6  // |...|.f.8...<.|.
    5EE0: 38 18 18 18 3C 00 00 00 38 18 18 18 3C 00 C6 38  // 8...<...8...<..8
    5EF0: 6C C6 FE C6 C6 00 38 38 00 7C C6 FE C6 00 0E 00  // l.....88.|......
    5F00: FE C0 F8 C0 FE 00 00 00 6C 9A 7E D8 6E 00 7E D8  // ........l.~.n.~.
    5F10: D8 FE D8 D8 DE 00 7C C6 00 7C C6 C6 7C 00 00 C6  // ......|..|..|...
    5F20: 00 7C C6 C6 7C 00 00 E0 00 7C C6 C6 7C 00 7C C6  // .|..|....|..|.|.
    5F30: 00 C6 C6 CE 76 00 00 E0 00 C6 C6 CE 76 00 18 00  // ....v.......v...
    5F40: 3C 18 18 18 3C 00 C6 38 6C C6 C6 6C 38 00 C6 00  // <...<..8l..l8...
    5F50: C6 C6 C6 C6 7C 00 00 18 7E D8 D8 7E 18 00 38 6C  // ....|...~..~..8l
    5F60: 60 F0 66 F6 6C 00 C3 66 3C 7E 18 3C 18 00 3E 63  // `.f.l..f<~.<..>c
    5F70: 38 0E 63 3E 00 1C 00 3E 61 3C 86 7C 00 1C 0E 00  // 8.c>...>a<.|....
    5F80: 78 0C 7C CC 7E 00 1C 00 38 18 18 18 3C 00 00 0E  // x.|.~...8...<...
    5F90: 00 7C C6 C6 7C 00 00 0E 00 CC CC DC 76 00 00 FC  // .|..|.......v...
    5FA0: 00 BC 66 66 E6 00 FE 00 C6 E6 F6 CE C6 00 3E 00  // ..ff..........>.
    5FB0: 3E 60 67 63 3D 00 3E 00 76 CE C6 7E 06 7C 18 00  // >`gc=.>.v..~.|..
    5FC0: 18 30 60 66 3C 00 00 00 00 7C 60 60 00 00 00 00  // .0`f<....|``....
    5FD0: 00 7C 0C 0C 00 00 C0 CC D8 30 7C 36 0C 3E C0 CC  // .|.......0|6.>..
    5FE0: D8 30 6C 3C 7E 0C 18 00 18 18 3C 3C 18 00 00 36  // .0l<~.....<<...6
    5FF0: 6C D8 6C 36 00 00 00 D8 6C 36 6C D8 00 00 22 88  // l.l6....l6l...".
    6000: 22 88 22 88 22 88 55 AA 55 AA 55 AA 55 AA DD 77  // ".".".U.U.U.U..w
    6010: DD 77 DD 77 DD 77 18 18 18 18 18 18 18 18 18 18  // .w.w.w..........
    6020: 18 18 F8 18 18 18 18 18 F8 18 F8 18 18 18 36 36  // ..............66
    6030: 36 36 F6 36 36 36 00 00 00 00 FE 36 36 36 00 00  // 66.666.....666..
    6040: F8 18 F8 18 18 18 36 36 F6 06 F6 36 36 36 36 36  // ......66...66666
    6050: 36 36 36 36 36 36 00 00 FE 06 F6 36 36 36 36 36  // 666666.....66666
    6060: F6 06 FE 00 00 00 36 36 36 36 FE 00 00 00 18 18  // ......6666......
    6070: F8 18 F8 00 00 00 00 00 00 00 F8 18 18 18 18 18  // ................
    6080: 18 18 1F 00 00 00 18 18 18 18 FF 00 00 00 00 00  // ................
    6090: 00 00 FF 18 18 18 18 18 18 18 1F 18 18 18 00 00  // ................
    60A0: 00 00 FF 00 00 00 18 18 18 18 FF 18 18 18 18 18  // ................
    60B0: 1F 18 1F 18 18 18 36 36 36 36 37 36 36 36 36 36  // ......6666766666
    60C0: 37 30 3F 00 00 00 00 00 3F 30 37 36 36 36 36 36  // 70?.....?0766666
    60D0: F7 00 FF 00 00 00 00 00 FF 00 F7 36 36 36 36 36  // ...........66666
    60E0: 37 30 37 36 36 36 00 00 FF 00 FF 00 00 00 36 36  // 707666........66
    60F0: F7 00 F7 36 36 36 18 18 FF 00 FF 00 00 00 36 36  // ...666........66
    6100: 36 36 FF 00 00 00 00 00 FF 00 FF 18 18 18 00 00  // 66..............
    6110: 00 00 FF 36 36 36 36 36 36 36 3F 00 00 00 18 18  // ...6666666?.....
    6120: 1F 18 1F 00 00 00 00 00 1F 18 1F 18 18 18 00 00  // ................
    6130: 00 00 3F 36 36 36 36 36 36 36 FF 36 36 36 18 18  // ..?6666666.666..
    6140: FF 18 FF 18 18 18 18 18 18 18 F8 00 00 00 00 00  // ................
    6150: 00 00 1F 18 18 18 FF FF FF FF FF FF FF FF 00 00  // ................
    6160: 00 00 FF FF FF FF F0 F0 F0 F0 F0 F0 F0 F0 0F 0F  // ................
    6170: 0F 0F 0F 0F 0F 0F FF FF FF FF 00 00 00 00 00 00  // ................
    6180: 66 DC D8 DC 66 00 00 78 CC F8 CC C6 CC 00 00 FE  // f...f..x........
    6190: 62 60 60 60 E0 00 00 FE 6C 6C 6C 6C 6C 00 FE C6  // b```....lllll...
    61A0: 60 30 60 C6 FE 00 00 7E D8 CC CC D8 70 00 00 66  // `0`....~....p..f
    61B0: 66 66 66 7C C0 00 00 76 DC 18 18 18 38 00 FE 38  // fff|...v....8..8
    61C0: 6C C6 6C 38 FE 00 38 6C C6 FE C6 6C 38 00 38 6C  // l.l8..8l...l8.8l
    61D0: C6 C6 6C 6C EE 00 3E 60 38 66 C6 CC 78 00 00 00  // ..ll..>`8f..x...
    61E0: 7E DB DB 7E 00 00 06 7C DE F6 E6 7C C0 00 38 60  // ~..~...|...|..8`
    61F0: C0 F8 C0 60 38 00 7C C6 C6 C6 C6 C6 C6 00 00 FE  // ...`8.|.........
    6200: 00 FE 00 FE 00 00 18 18 7E 18 18 00 7E 00 30 18  // ........~...~.0.
    6210: 0C 18 30 00 7E 00 0C 18 30 18 0C 00 7E 00 0C 1E  // ..0.~...0...~...
    6220: 18 18 18 18 18 18 18 18 18 18 18 78 30 00 00 00  // ...........x0...
    6230: 18 00 7E 00 18 00 00 76 DC 00 76 DC 00 00 7C C6  // ..~....v..v...|.
    6240: C6 7C 00 00 00 00 00 00 00 18 18 00 00 00 00 00  // .|..............
    6250: 00 00 18 00 00 00 1F 18 18 18 F8 38 18 00 D8 6C  // ...........8...l
    6260: 6C 6C 00 00 00 00 70 D8 30 F8 00 00 00 00 00 00  // ll....p.0.......
    6270: 7C 7C 7C 7C 00 00 00 00 00 00 00 00 00 00 1D 00  // ||||............
    6280: 00 00 00 24 66 FF 66 24 00 00 00 00 00 00 00 10  // ...$f.f$........
    6290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    62A0: 00 00 00 7E 81 A5 81 81 BD 99 81 81 7E 00 00 00  // ...~........~...
    62B0: 00 00 00 7C FE FE D6 FE FE BA C6 FE 7C 00 00 00  // ...|........|...
    62C0: 00 00 00 00 6C EE FE FE FE FE 7C 38 10 00 00 00  // ....l.....|8....
    62D0: 00 00 00 00 10 38 7C FE 7C 38 10 00 00 00 00 00  // .....8|.|8......
    62E0: 00 00 00 00 10 38 38 10 6C EE 6C 10 38 00 00 00  // .....88.l.l.8...
    62F0: 00 00 00 10 38 7C 7C FE FE FE 6C 10 38 00 00 00  // ....8||...l.8...
    6300: 00 00 00 00 00 00 18 3C 3C 3C 18 00 00 00 00 00  // .......<<<......
    6310: 00 FF FF FF FF FF E7 C3 C3 C3 E7 FF FF FF FF FF  // ................
    6320: FF 00 00 00 00 18 3C 66 66 66 3C 18 00 00 00 00  // ......<fff<.....
    6330: 00 FF FF FF FF E7 C3 99 99 99 C3 E7 FF FF FF FF  // ................
    6340: FF 00 00 1E 0E 1E 36 78 CC CC CC CC 78 00 00 00  // ......6x....x...
    6350: 00 00 00 3C 66 66 66 3C 18 7E 18 18 18 00 00 00  // ...<fff<.~......
    6360: 00 00 00 1E 1A 1E 18 18 18 18 78 F8 70 00 00 00  // ..........x.p...
    6370: 00 00 00 3E 36 3E 36 36 76 F6 66 0E 1E 0C 00 00  // ...>6>66v.f.....
    6380: 00 00 00 18 DB 7E 3C 66 66 3C 7E DB 18 00 00 00  // .....~<ff<~.....
    6390: 00 00 00 00 80 E0 F0 FC FE FC F0 E0 80 00 00 00  // ................
    63A0: 00 00 00 00 02 0E 3E 7E FE 7E 3E 0E 02 00 00 00  // ......>~.~>.....
    63B0: 00 00 00 18 3C 7E 18 18 18 18 7E 3C 18 00 00 00  // ....<~....~<....
    63C0: 00 00 00 66 66 66 66 66 66 66 00 66 66 00 00 00  // ...fffffff.ff...
    63D0: 00 00 00 7F DB DB DB DB 7B 1B 1B 1B 1B 00 00 00  // ........{.......
    63E0: 00 00 00 7C C6 C6 60 7C F6 DE 7C 0C C6 C6 7C 00  // ...|..`|..|...|.
    63F0: 00 00 00 00 00 00 00 00 00 FE FE FE FE 00 00 00  // ................
    6400: 00 00 00 18 3C 7E 18 18 18 7E 3C 18 7E 00 00 00  // ....<~...~<.~...
    6410: 00 00 00 18 3C 7E 18 18 18 18 18 18 18 00 00 00  // ....<~..........
    6420: 00 00 00 18 18 18 18 18 18 18 7E 3C 18 00 00 00  // ..........~<....
    6430: 00 00 00 00 00 00 0C 0E FF 0E 0C 00 00 00 00 00  // ................
    6440: 00 00 00 00 00 00 30 70 FE 70 30 00 00 00 00 00  // ......0p.p0.....
    6450: 00 00 00 00 00 00 00 C0 C0 C0 FE 00 00 00 00 00  // ................
    6460: 00 00 00 00 00 00 24 66 FF 66 24 00 00 00 00 00  // ......$f.f$.....
    6470: 00 00 00 00 10 38 38 38 7C 7C FE FE 00 00 00 00  // .....888||......
    6480: 00 00 00 00 FE FE 7C 7C 7C 38 38 10 00 00 00 00  // ......|||88.....
    6490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    64A0: 00 00 00 18 3C 3C 3C 3C 18 18 00 18 18 00 00 00  // ....<<<<........
    64B0: 00 00 36 36 36 36 14 00 00 00 00 00 00 00 00 00  // ..6666..........
    64C0: 00 00 00 6C 6C 6C FE 6C 6C FE 6C 6C 6C 00 00 00  // ...lll.ll.lll...
    64D0: 00 00 00 18 18 7C C6 C0 78 3C 06 C6 7C 18 18 00  // .....|..x<..|...
    64E0: 00 00 00 00 00 00 62 66 0C 18 30 66 C6 00 00 00  // ......bf..0f....
    64F0: 00 00 00 38 6C 38 30 76 7E CC CC CC 76 00 00 00  // ...8l80v~...v...
    6500: 00 00 0C 0C 0C 18 00 00 00 00 00 00 00 00 00 00  // ................
    6510: 00 00 00 0C 18 30 30 30 30 30 30 18 0C 00 00 00  // .....000000.....
    6520: 00 00 00 30 18 0C 0C 0C 0C 0C 0C 18 30 00 00 00  // ...0........0...
    6530: 00 00 00 00 00 00 6C 38 FE 38 6C 00 00 00 00 00  // ......l8.8l.....
    6540: 00 00 00 00 00 00 18 18 7E 18 18 00 00 00 00 00  // ........~.......
    6550: 00 00 00 00 00 00 00 00 00 00 0C 0C 0C 18 00 00  // ................
    6560: 00 00 00 00 00 00 00 00 FE 00 00 00 00 00 00 00  // ................
    6570: 00 00 00 00 00 00 00 00 00 00 00 18 18 00 00 00  // ................
    6580: 00 00 00 00 00 02 06 0C 18 30 60 C0 80 00 00 00  // .........0`.....
    6590: 00 00 00 7C C6 C6 CE DE F6 E6 C6 C6 7C 00 00 00  // ...|........|...
    65A0: 00 00 00 18 78 18 18 18 18 18 18 18 7E 00 00 00  // ....x.......~...
    65B0: 00 00 00 7C C6 C6 06 0C 18 30 60 C6 FE 00 00 00  // ...|.....0`.....
    65C0: 00 00 00 7C C6 06 06 3C 06 06 06 C6 7C 00 00 00  // ...|...<....|...
    65D0: 00 00 00 0C 1C 3C 6C CC CC FE 0C 0C 1E 00 00 00  // .....<l.........
    65E0: 00 00 00 FE C0 C0 C0 FC 06 06 06 C6 7C 00 00 00  // ............|...
    65F0: 00 00 00 7C C6 C0 C0 FC C6 C6 C6 C6 7C 00 00 00  // ...|........|...
    6600: 00 00 00 FE C6 06 0C 18 30 30 30 30 30 00 00 00  // ........00000...
    6610: 00 00 00 7C C6 C6 C6 7C C6 C6 C6 C6 7C 00 00 00  // ...|...|....|...
    6620: 00 00 00 7C C6 C6 C6 C6 7E 06 06 C6 7C 00 00 00  // ...|....~...|...
    6630: 00 00 00 00 00 00 0C 0C 00 00 0C 0C 00 00 00 00  // ................
    6640: 00 00 00 00 00 00 0C 0C 00 00 0C 0C 0C 18 00 00  // ................
    6650: 00 00 00 00 0C 18 30 60 C0 60 30 18 0C 00 00 00  // ......0`.`0.....
    6660: 00 00 00 00 00 00 00 FE 00 FE 00 00 00 00 00 00  // ................
    6670: 00 00 00 00 60 30 18 0C 06 0C 18 30 60 00 00 00  // ....`0.....0`...
    6680: 00 00 00 7C C6 C6 0C 18 18 18 00 18 18 00 00 00  // ...|............
    6690: 00 00 00 7C C6 C6 C6 DE DE DE DC C0 7E 00 00 00  // ...|........~...
    66A0: 00 00 00 38 6C C6 C6 C6 FE C6 C6 C6 C6 00 00 00  // ...8l...........
    66B0: 00 00 00 FC 66 66 66 7C 66 66 66 66 FC 00 00 00  // ....fff|ffff....
    66C0: 00 00 00 3C 66 C2 C0 C0 C0 C0 C2 66 3C 00 00 00  // ...<f......f<...
    66D0: 00 00 00 F8 6C 66 66 66 66 66 66 6C F8 00 00 00  // ....lffffffl....
    66E0: 00 00 00 FE 66 60 64 7C 64 60 60 66 FE 00 00 00  // ....f`d|d``f....
    66F0: 00 00 00 FE 66 60 64 7C 64 60 60 60 F0 00 00 00  // ....f`d|d```....
    6700: 00 00 00 7C C6 C6 C0 C0 C0 CE C6 C6 7C 00 00 00  // ...|........|...
    6710: 00 00 00 C6 C6 C6 C6 FE C6 C6 C6 C6 C6 00 00 00  // ................
    6720: 00 00 00 3C 18 18 18 18 18 18 18 18 3C 00 00 00  // ...<........<...
    6730: 00 00 00 3C 18 18 18 18 18 18 D8 D8 70 00 00 00  // ...<........p...
    6740: 00 00 00 C6 C6 CC D8 F0 F0 D8 CC C6 C6 00 00 00  // ................
    6750: 00 00 00 F0 60 60 60 60 60 60 62 66 FE 00 00 00  // ....``````bf....
    6760: 00 00 00 C6 C6 EE EE FE D6 D6 D6 C6 C6 00 00 00  // ................
    6770: 00 00 00 C6 C6 E6 E6 F6 DE CE CE C6 C6 00 00 00  // ................
    6780: 00 00 00 7C C6 C6 C6 C6 C6 C6 C6 C6 7C 00 00 00  // ...|........|...
    6790: 00 00 00 FC 66 66 66 66 7C 60 60 60 F0 00 00 00  // ....ffff|```....
    67A0: 00 00 00 7C C6 C6 C6 C6 C6 C6 D6 D6 7C 06 00 00  // ...|........|...
    67B0: 00 00 00 FC 66 66 66 7C 78 6C 66 66 E6 00 00 00  // ....fff|xlff....
    67C0: 00 00 00 7C C6 C0 C0 70 1C 06 06 C6 7C 00 00 00  // ...|...p....|...
    67D0: 00 00 00 7E 5A 18 18 18 18 18 18 18 3C 00 00 00  // ...~Z.......<...
    67E0: 00 00 00 C6 C6 C6 C6 C6 C6 C6 C6 C6 7C 00 00 00  // ............|...
    67F0: 00 00 00 C6 C6 C6 C6 C6 C6 C6 6C 38 10 00 00 00  // ..........l8....
    6800: 00 00 00 C6 C6 C6 D6 D6 D6 FE EE C6 C6 00 00 00  // ................
    6810: 00 00 00 C6 C6 C6 6C 38 38 6C C6 C6 C6 00 00 00  // ......l88l......
    6820: 00 00 00 66 66 66 66 66 3C 18 18 18 3C 00 00 00  // ...fffff<...<...
    6830: 00 00 00 FE C6 86 0C 18 30 60 C2 C6 FE 00 00 00  // ........0`......
    6840: 00 00 00 7C 60 60 60 60 60 60 60 60 7C 00 00 00  // ...|````````|...
    6850: 00 00 00 00 00 80 C0 60 30 18 0C 06 02 00 00 00  // .......`0.......
    6860: 00 00 00 7C 0C 0C 0C 0C 0C 0C 0C 0C 7C 00 00 00  // ...|........|...
    6870: 00 00 10 38 6C C6 00 00 00 00 00 00 00 00 00 00  // ...8l...........
    6880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 FF 00  // ................
    6890: 00 00 18 18 18 0C 00 00 00 00 00 00 00 00 00 00  // ................
    68A0: 00 00 00 00 00 00 78 0C 7C CC CC DC 76 00 00 00  // ......x.|...v...
    68B0: 00 00 00 E0 60 60 7C 66 66 66 66 66 FC 00 00 00  // ....``|fffff....
    68C0: 00 00 00 00 00 00 7C C6 C0 C0 C0 C6 7C 00 00 00  // ......|.....|...
    68D0: 00 00 00 1C 0C 0C 7C CC CC CC CC CC 7E 00 00 00  // ......|.....~...
    68E0: 00 00 00 00 00 00 7C C6 C6 FE C0 C6 7C 00 00 00  // ......|.....|...
    68F0: 00 00 00 1C 36 30 30 FC 30 30 30 30 78 00 00 00  // ....600.0000x...
    6900: 00 00 00 00 00 00 76 CE C6 C6 CE 76 06 C6 7C 00  // ......v....v..|.
    6910: 00 00 00 E0 60 60 7C 66 66 66 66 66 E6 00 00 00  // ....``|fffff....
    6920: 00 00 00 18 18 00 38 18 18 18 18 18 3C 00 00 00  // ......8.....<...
    6930: 00 00 00 0C 0C 00 1C 0C 0C 0C 0C 0C CC CC 78 00  // ..............x.
    6940: 00 00 00 E0 60 60 66 66 6C 78 6C 66 E6 00 00 00  // ....``fflxlf....
    6950: 00 00 00 18 18 18 18 18 18 18 18 18 1C 00 00 00  // ................
    6960: 00 00 00 00 00 00 6C FE D6 D6 C6 C6 C6 00 00 00  // ......l.........
    6970: 00 00 00 00 00 00 DC 66 66 66 66 66 66 00 00 00  // .......ffffff...
    6980: 00 00 00 00 00 00 7C C6 C6 C6 C6 C6 7C 00 00 00  // ......|.....|...
    6990: 00 00 00 00 00 00 DC 66 66 66 66 7C 60 60 F0 00  // .......ffff|``..
    69A0: 00 00 00 00 00 00 76 CC CC CC CC 7C 0C 0C 1E 00  // ......v....|....
    69B0: 00 00 00 00 00 00 DC 66 60 60 60 60 F0 00 00 00  // .......f````....
    69C0: 00 00 00 00 00 00 7C C6 C0 7C 06 C6 7C 00 00 00  // ......|..|..|...
    69D0: 00 00 00 30 30 30 FC 30 30 30 30 36 1C 00 00 00  // ...000.00006....
    69E0: 00 00 00 00 00 00 CC CC CC CC CC CC 76 00 00 00  // ............v...
    69F0: 00 00 00 00 00 00 C6 C6 C6 C6 6C 38 10 00 00 00  // ..........l8....
    6A00: 00 00 00 00 00 00 C6 C6 D6 D6 D6 FE 6C 00 00 00  // ............l...
    6A10: 00 00 00 00 00 00 C6 C6 6C 38 6C C6 C6 00 00 00  // ........l8l.....
    6A20: 00 00 00 00 00 00 C6 C6 C6 C6 CE 76 06 C6 7C 00  // ...........v..|.
    6A30: 00 00 00 00 00 00 FE 86 0C 18 30 62 FE 00 00 00  // ..........0b....
    6A40: 00 00 00 0E 18 18 18 70 18 18 18 18 0E 00 00 00  // .......p........
    6A50: 00 00 00 18 18 18 18 00 18 18 18 18 18 00 00 00  // ................
    6A60: 00 00 00 70 18 18 18 0E 18 18 18 18 70 00 00 00  // ...p........p...
    6A70: 00 00 00 76 DC 00 00 00 00 00 00 00 00 00 00 00  // ...v............
    6A80: 00 00 00 00 00 00 10 38 38 6C 6C FE 00 00 00 00  // .......88ll.....
    6A90: 00 00 00 3C 66 C0 C0 C0 C6 66 3C 18 0C CC 38 00  // ...<f....f<...8.
    6AA0: 00 00 00 C6 00 00 C6 C6 C6 C6 C6 CE 76 00 00 00  // ............v...
    6AB0: 00 00 0C 18 30 00 7C C6 C6 FE C0 C6 7C 00 00 00  // ....0.|.....|...
    6AC0: 00 00 30 78 CC 00 78 0C 7C CC CC DC 76 00 00 00  // ..0x..x.|...v...
    6AD0: 00 00 00 CC 00 00 78 0C 7C CC CC DC 76 00 00 00  // ......x.|...v...
    6AE0: 00 00 60 30 18 00 78 0C 7C CC CC DC 76 00 00 00  // ..`0..x.|...v...
    6AF0: 00 00 38 6C 38 00 78 0C 7C CC CC DC 76 00 00 00  // ..8l8.x.|...v...
    6B00: 00 00 00 00 00 7C C6 C0 C0 C6 7C 18 0C 6C 38 00  // .....|....|..l8.
    6B10: 00 00 30 78 CC 00 7C C6 C6 FE C0 C6 7C 00 00 00  // ..0x..|.....|...
    6B20: 00 00 00 CC 00 00 7C C6 C6 FE C0 C6 7C 00 00 00  // ......|.....|...
    6B30: 00 00 30 18 0C 00 7C C6 C6 FE C0 C6 7C 00 00 00  // ..0...|.....|...
    6B40: 00 00 00 66 00 00 38 18 18 18 18 18 3C 00 00 00  // ...f..8.....<...
    6B50: 00 00 18 3C 66 00 38 18 18 18 18 18 3C 00 00 00  // ...<f.8.....<...
    6B60: 00 00 00 00 00 00 38 18 18 18 18 18 3C 00 00 00  // ......8.....<...
    6B70: 00 00 C6 00 38 6C C6 C6 C6 FE C6 C6 C6 00 00 00  // ....8l..........
    6B80: 00 38 6C 38 00 38 6C C6 C6 FE C6 C6 C6 00 00 00  // .8l8.8l.........
    6B90: 00 0C 18 30 00 FE 60 60 7C 60 60 60 FE 00 00 00  // ...0..``|```....
    6BA0: 00 00 00 00 00 66 DB 1B 7F D8 D8 DF 76 00 00 00  // .....f......v...
    6BB0: 00 00 00 7E D8 D8 D8 D8 FE D8 D8 D8 DE 00 00 00  // ...~............
    6BC0: 00 00 30 78 CC 00 7C C6 C6 C6 C6 C6 7C 00 00 00  // ..0x..|.....|...
    6BD0: 00 00 00 C6 00 00 7C C6 C6 C6 C6 C6 7C 00 00 00  // ......|.....|...
    6BE0: 00 00 30 18 0C 00 7C C6 C6 C6 C6 C6 7C 00 00 00  // ..0...|.....|...
    6BF0: 00 00 30 78 CC 00 C6 C6 C6 C6 C6 CE 76 00 00 00  // ..0x........v...
    6C00: 00 00 60 30 18 00 C6 C6 C6 C6 C6 CE 76 00 00 00  // ..`0........v...
    6C10: 00 00 18 00 3C 18 18 18 18 18 18 18 3C 00 00 00  // ....<.......<...
    6C20: 00 00 C6 00 7C C6 C6 C6 C6 C6 C6 C6 7C 00 00 00  // ....|.......|...
    6C30: 00 00 C6 00 C6 C6 C6 C6 C6 C6 C6 C6 7C 00 00 00  // ............|...
    6C40: 00 00 00 18 18 7C C6 C0 C0 C6 7C 18 18 00 00 00  // .....|....|.....
    6C50: 00 00 38 6C 60 60 F0 60 60 60 66 F6 6C 00 00 00  // ..8l``.```f.l...
    6C60: 00 00 66 66 66 66 3C 18 7E 18 3C 18 18 00 00 00  // ..ffff<.~.<.....
    6C70: 00 00 00 3E 63 63 30 1C 06 63 63 3E 00 1C 00 00  // ...>cc0..cc>....
    6C80: 00 00 00 00 00 00 3E 63 38 0E 63 3E 00 1C 00 00  // ......>c8.c>....
    6C90: 00 00 0C 18 30 00 78 0C 7C CC CC DC 76 00 00 00  // ....0.x.|...v...
    6CA0: 00 00 0C 18 30 00 38 18 18 18 18 18 3C 00 00 00  // ....0.8.....<...
    6CB0: 00 00 0C 18 30 00 7C C6 C6 C6 C6 C6 7C 00 00 00  // ....0.|.....|...
    6CC0: 00 00 18 30 60 00 CC CC CC CC CC DC 76 00 00 00  // ...0`.......v...
    6CD0: 00 00 00 76 DC 00 BC 66 66 66 66 66 E6 00 00 00  // ...v...fffff....
    6CE0: 00 00 76 DC 00 C6 C6 E6 F6 DE CE C6 C6 00 00 00  // ..v.............
    6CF0: 00 00 21 1E 00 1E 33 60 60 67 63 33 1D 00 00 00  // ..!...3``gc3....
    6D00: 00 00 42 3C 00 3B 66 66 66 3E 06 66 3C 00 00 00  // ..B<.;fff>.f<...
    6D10: 00 00 00 30 30 00 30 30 30 60 C6 C6 7C 00 00 00  // ...00.000`..|...
    6D20: 00 00 00 00 00 00 00 00 7E 60 60 60 00 00 00 00  // ........~```....
    6D30: 00 00 00 00 00 00 00 00 7E 06 06 06 00 00 00 00  // ........~.......
    6D40: 00 00 60 60 62 66 6C 18 30 60 DC 36 0C 18 3E 00  // ..``bfl.0`.6..>.
    6D50: 00 00 60 60 62 66 6C 18 36 6E DE 36 7E 06 06 00  // ..``bfl.6n.6~...
    6D60: 00 00 00 18 18 00 18 18 3C 3C 3C 3C 18 00 00 00  // ........<<<<....
    6D70: 00 00 00 00 00 00 36 6C D8 6C 36 00 00 00 00 00  // ......6l.l6.....
    6D80: 00 00 00 00 00 00 D8 6C 36 6C D8 00 00 00 00 00  // .......l6l......
    6D90: 00 11 44 11 44 11 44 11 44 11 44 11 44 11 44 11  // ..D.D.D.D.D.D.D.
    6DA0: 44 AA 55 AA 55 AA 55 AA 55 AA 55 AA 55 AA 55 AA  // D.U.U.U.U.U.U.U.
    6DB0: 55 DD 77 DD 77 DD 77 DD 77 DD 77 DD 77 DD 77 DD  // U.w.w.w.w.w.w.w.
    6DC0: 77 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18  // w...............
    6DD0: 18 18 18 18 18 18 18 18 F8 18 18 18 18 18 18 18  // ................
    6DE0: 18 18 18 18 18 18 F8 18 F8 18 18 18 18 18 18 18  // ................
    6DF0: 18 36 36 36 36 36 36 36 F6 36 36 36 36 36 36 36  // .6666666.6666666
    6E00: 36 00 00 00 00 00 00 00 FE 36 36 36 36 36 36 36  // 6........6666666
    6E10: 36 00 00 00 00 00 F8 18 F8 18 18 18 18 18 18 18  // 6...............
    6E20: 18 36 36 36 36 36 F6 06 F6 36 36 36 36 36 36 36  // .66666...6666666
    6E30: 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36 36  // 6666666666666666
    6E40: 36 00 00 00 00 00 FE 06 F6 36 36 36 36 36 36 36  // 6........6666666
    6E50: 36 36 36 36 36 36 F6 06 FE 00 00 00 00 00 00 00  // 666666..........
    6E60: 00 36 36 36 36 36 36 36 FE 00 00 00 00 00 00 00  // .6666666........
    6E70: 00 18 18 18 18 18 F8 18 F8 00 00 00 00 00 00 00  // ................
    6E80: 00 00 00 00 00 00 00 00 F8 18 18 18 18 18 18 18  // ................
    6E90: 18 18 18 18 18 18 18 18 1F 00 00 00 00 00 00 00  // ................
    6EA0: 00 18 18 18 18 18 18 18 FF 00 00 00 00 00 00 00  // ................
    6EB0: 00 00 00 00 00 00 00 00 FF 18 18 18 18 18 18 18  // ................
    6EC0: 18 18 18 18 18 18 18 18 1F 18 18 18 18 18 18 18  // ................
    6ED0: 18 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 00  // ................
    6EE0: 00 18 18 18 18 18 18 18 FF 18 18 18 18 18 18 18  // ................
    6EF0: 18 18 18 18 18 18 1F 18 1F 18 18 18 18 18 18 18  // ................
    6F00: 18 36 36 36 36 36 36 36 37 36 36 36 36 36 36 36  // .666666676666666
    6F10: 36 36 36 36 36 36 37 30 3F 00 00 00 00 00 00 00  // 66666670?.......
    6F20: 00 00 00 00 00 00 3F 30 37 36 36 36 36 36 36 36  // ......?076666666
    6F30: 36 36 36 36 36 36 F7 00 FF 00 00 00 00 00 00 00  // 666666..........
    6F40: 00 00 00 00 00 00 FF 00 F7 36 36 36 36 36 36 36  // .........6666666
    6F50: 36 36 36 36 36 36 37 30 37 36 36 36 36 36 36 36  // 6666667076666666
    6F60: 36 00 00 00 00 00 FF 00 FF 00 00 00 00 00 00 00  // 6...............
    6F70: 00 36 36 36 36 36 F7 00 F7 36 36 36 36 36 36 36  // .66666...6666666
    6F80: 36 18 18 18 18 18 FF 00 FF 00 00 00 00 00 00 00  // 6...............
    6F90: 00 36 36 36 36 36 36 36 FF 00 00 00 00 00 00 00  // .6666666........
    6FA0: 00 00 00 00 00 00 FF 00 FF 18 18 18 18 18 18 18  // ................
    6FB0: 18 00 00 00 00 00 00 00 FF 36 36 36 36 36 36 36  // .........6666666
    6FC0: 36 36 36 36 36 36 36 36 3F 00 00 00 00 00 00 00  // 66666666?.......
    6FD0: 00 18 18 18 18 18 1F 18 1F 00 00 00 00 00 00 00  // ................
    6FE0: 00 00 00 00 00 00 1F 18 1F 18 18 18 18 18 18 18  // ................
    6FF0: 18 00 00 00 00 00 00 00 3F 36 36 36 36 36 36 36  // ........?6666666
    7000: 36 36 36 36 36 36 36 36 FF 36 36 36 36 36 36 36  // 66666666.6666666
    7010: 36 18 18 18 18 18 FF 18 FF 18 18 18 18 18 18 18  // 6...............
    7020: 18 18 18 18 18 18 18 18 F8 00 00 00 00 00 00 00  // ................
    7030: 00 00 00 00 00 00 00 00 1F 18 18 18 18 18 18 18  // ................
    7040: 18 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    7050: FF 00 00 00 00 00 00 00 00 FF FF FF FF FF FF FF  // ................
    7060: FF F0 F0 F0 F0 F0 F0 F0 F0 F0 F0 F0 F0 F0 F0 F0  // ................
    7070: F0 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F  // ................
    7080: 0F FF FF FF FF FF FF FF FF 00 00 00 00 00 00 00  // ................
    7090: 00 00 00 00 00 76 DC D8 D8 D8 D8 DC 76 00 00 00  // .....v......v...
    70A0: 00 00 00 78 CC CC D8 FC C6 C6 C6 C6 CC 00 00 00  // ...x............
    70B0: 00 00 00 FE 66 62 60 60 60 60 60 60 60 00 00 00  // ....fb```````...
    70C0: 00 00 00 00 00 00 FE 6C 6C 6C 6C 6C 6C 00 00 00  // .......llllll...
    70D0: 00 00 00 FE C6 62 30 18 18 30 62 C6 FE 00 00 00  // .....b0..0b.....
    70E0: 00 00 00 00 00 00 7E D8 CC CC CC D8 70 00 00 00  // ......~.....p...
    70F0: 00 00 00 00 00 66 66 66 66 66 7C 60 C0 80 00 00  // .....fffff|`....
    7100: 00 00 00 00 00 00 76 DC 18 18 18 18 18 00 00 00  // ......v.........
    7110: 00 00 00 FE 38 38 6C C6 C6 6C 38 38 FE 00 00 00  // ....88l..l88....
    7120: 00 00 00 00 38 6C C6 C6 FE C6 C6 6C 38 00 00 00  // ....8l.....l8...
    7130: 00 00 00 38 6C C6 C6 C6 C6 6C 6C 6C EE 00 00 00  // ...8l....lll....
    7140: 00 00 00 3E 60 60 3C 66 C6 C6 C6 CC 78 00 00 00  // ...>``<f....x...
    7150: 00 00 00 00 00 00 7E DB DB DB 7E 00 00 00 00 00  // ......~...~.....
    7160: 00 00 00 02 06 7C CE DE F6 F6 7C 60 C0 00 00 00  // .....|....|`....
    7170: 00 00 00 00 1C 30 60 60 7C 60 60 30 1C 00 00 00  // .....0``|``0....
    7180: 00 00 00 7C C6 C6 C6 C6 C6 C6 C6 C6 C6 00 00 00  // ...|............
    7190: 00 00 00 00 00 FE 00 00 FE 00 00 FE 00 00 00 00  // ................
    71A0: 00 00 00 00 00 18 18 7E 18 18 00 00 7E 00 00 00  // .......~....~...
    71B0: 00 00 00 30 18 0C 06 0C 18 30 00 00 7E 00 00 00  // ...0.....0..~...
    71C0: 00 00 00 0C 18 30 60 30 18 0C 00 00 7E 00 00 00  // .....0`0....~...
    71D0: 00 00 00 00 00 0C 1E 1A 18 18 18 18 18 18 18 18  // ................
    71E0: 18 18 18 18 18 18 18 18 18 18 18 58 78 30 00 00  // ...........Xx0..
    71F0: 00 00 00 00 00 18 18 00 7E 00 18 18 00 00 00 00  // ........~.......
    7200: 00 00 00 00 00 00 00 76 DC 00 76 DC 00 00 00 00  // .......v..v.....
    7210: 00 00 00 78 CC CC 78 00 00 00 00 00 00 00 00 00  // ...x..x.........
    7220: 00 00 00 00 00 00 00 00 18 18 00 00 00 00 00 00  // ................
    7230: 00 00 00 00 00 00 00 00 00 18 00 00 00 00 00 00  // ................
    7240: 00 00 00 1F 18 18 18 18 18 D8 D8 78 38 18 00 00  // ...........x8...
    7250: 00 00 00 D8 6C 6C 6C 6C 6C 00 00 00 00 00 00 00  // ....lllll.......
    7260: 00 00 00 70 D8 18 30 60 F8 00 00 00 00 00 00 00  // ...p..0`........
    7270: 00 00 00 00 00 00 7E 7E 7E 7E 7E 7E 00 00 00 00  // ......~~~~~~....
    7280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    7290: 00 1D 00 00 00 00 00 24 66 FF 66 24 00 00 00 00  // .......$f.f$....
    72A0: 00 00 2F 00 00 00 01 03 06 0C 18 30 60 C0 80 00  // ../........0`...
    72B0: 00 00 00 30 00 00 7E C3 C3 C3 DB DB C3 C3 C3 7E  // ...0..~........~
    72C0: 00 00 00 00 4D 00 00 C3 C3 E7 FF FF DB DB C3 C3  // ....M...........
    72D0: C3 00 00 00 00 54 00 00 FF 99 18 18 18 18 18 18  // .....T..........
    72E0: 18 3C 00 00 00 00 56 00 00 C3 C3 C3 C3 C3 C3 C3  // .<....V.........
    72F0: 66 3C 18 00 00 00 00 57 00 00 C3 C3 C3 C3 DB DB  // f<.....W........
    7300: DB DB FF 66 00 00 00 00 58 00 00 C3 C3 C3 66 3C  // ...f....X.....f<
    7310: 3C 66 C3 C3 C3 00 00 00 00 59 00 00 C3 C3 C3 C3  // <f.......Y......
    7320: 66 3C 18 18 18 3C 00 00 00 00 5C 00 00 00 80 C0  // f<...<....\.....
    7330: 60 30 18 0C 06 03 01 00 00 00 00 6D 00 00 00 00  // `0.........m....
    7340: 00 66 FF DB DB DB C3 C3 00 00 00 00 76 00 00 00  // .f..........v...
    7350: 00 00 C3 C3 C3 C3 66 3C 18 00 00 00 00 77 00 00  // ......f<.....w..
    7360: 00 00 00 C3 C3 DB DB DB FF 66 00 00 00 00 00 00  // .........f......
    7370: 29 62 C3 0B DB 74 03 E9 46 01 57 32 C0 B9 40 00  // )b...t..F.W2..@.
    7380: F3 AA 5F BB F6 8F 26 89 1D 26 8C 4D 02 2E 8E 1E  // .._...&..&.M....
    7390: 07 03 57 BE 49 04 B9 1E 00 83 C7 04 FC 8A 04 26  // ..W.I..........&
    73A0: 88 05 46 47 E2 F7 5F A0 84 04 FE C0 26 88 45 22  // ..FG.._.....&.E"
    73B0: A1 85 04 26 89 45 23 57 E8 D9 1B 5F 26 88 5D 25  // ...&.E#W..._&.]%
    73C0: 26 88 7D 26 8A 1E 49 04 E8 FC 05 74 05 80 FB 13  // &.}&..I....t....
    73D0: 7F 1D 32 FF D1 E3 2E 8A 87 CE 8F 32 E4 0A C0 74  // ..2........2...t
    73E0: 01 40 26 89 45 27 2E 8A 87 CF 8F 26 88 45 29 A1  // .@&.E'.....&.E).
    73F0: 85 04 8A 16 84 04 FE C2 F6 E2 B2 00 3D C8 00 7E  // ............=..~
    7400: 15 B2 01 3D 5E 01 7E 0E B2 02 3D 90 01 7E 07 B2  // ...=^.~...=..~..
    7410: 03 3D E0 01 7E 00 26 88 55 2A 8A 26 87 04 8A C4  // .=..~.&.U*.&....
    7420: 24 01 C0 E0 04 80 E4 02 D0 E4 0A E0 80 F4 10 A0  // $...............
    7430: 89 04 24 0A 0A E0 E8 94 08 B2 C0 B0 30 EE 42 EC  // ..$.........0.B.
    7440: 24 08 C0 E0 02 0A C4 0C 01 26 88 45 2D B0 03 26  // $........&.E-..&
    7450: 88 45 31 E8 77 08 1E 06 32 D2 C4 1E A8 04 8C C1  // .E1.w...2.......
    7460: 8C CE 3B CE 74 34 26 C5 77 04 8C D9 0B F1 74 03  // ..;.t4&.w.....t.
    7470: 80 CA 10 26 C5 77 0C 8C D9 0B F1 74 03 80 CA 08  // ...&.w.....t....
    7480: 26 C5 77 08 8C D9 0B F1 74 03 80 CA 04 26 C5 77  // &.w.....t....&.w
    7490: 10 8C D9 0B F1 74 03 80 CA 01 07 1F 26 88 55 32  // .....t......&.U2
    74A0: B0 03 BA C4 03 E8 E4 04 8A E0 C0 EC 02 8A D4 8A  // ................
    74B0: F2 D0 EE 81 E2 04 04 25 03 03 0B C2 26 89 45 2B  // .......%....&.E+
    74C0: 8B EC C6 46 1A 1B C3 0A C0 74 0F FE C8 74 36 FE  // ...F.....t...t6.
    74D0: C8 74 56 8B EC C6 46 1A 00 C3 B8 20 00 F6 C1 01  // .tV...F.... ....
    74E0: 74 03 83 C0 60 F6 C1 02 74 03 83 C0 3A F6 C1 04  // t...`...t...:...
    74F0: 74 03 05 03 03 83 C0 3F C1 E8 06 8B EC 89 46 0E  // t......?......F.
    7500: C6 46 1A 1C C3 8B FB 83 C7 20 F6 C1 01 74 03 E8  // .F....... ...t..
    7510: 85 00 F6 C1 02 74 03 E8 EF 00 F6 C1 04 74 03 E8  // .....t.......t..
    7520: F8 01 8B EC C6 46 1A 1C C3 F6 C1 01 74 06 E8 16  // .....F......t...
    7530: 15 E8 25 01 F6 C1 02 74 03 E8 85 01 F6 C1 04 74  // ..%....t.......t
    7540: 03 E8 12 02 EB DC 8A C4 EE 42 EC AA FE C4 4A E2  // .........B....J.
    7550: F5 C3 E8 6B 04 BD C0 03 B9 15 00 32 E4 EC 87 EA  // ...k.......2....
    7560: 8A C4 EE 42 EC AA FE C4 4A 87 EA E2 F0 EC 87 EA  // ...B....J.......
    7570: B0 20 EE C3 26 8A 05 88 04 47 46 E2 F7 C3 26 8A  // . ..&....GF...&.
    7580: 25 EF 47 FE C0 E2 F7 C3 B2 C0 8A C4 EE 26 8A 05  // %.G..........&..
    7590: 47 FE C4 EE E2 F4 C3 9C FA 51 57 8B C7 2B C3 26  // G........QW..+.&
    75A0: 89 07 8B F7 E8 0A 04 EC 26 88 44 01 26 89 54 41  // ........&.D.&.TA
    75B0: B2 CE EC 26 88 44 02 B2 CC EC 26 88 44 09 B2 CA  // ...&.D....&.D...
    75C0: EC 26 88 44 04 B2 C4 EC 26 88 04 83 C7 05 B9 04  // .&.D....&.......
    75D0: 00 B4 01 E8 70 FF 26 8A 04 EE 8B FE 83 C7 0A 26  // ....p.&........&
    75E0: 8B 54 41 32 E4 B9 19 00 E8 5B FF 26 8A 44 01 EE  // .TA2.....[.&.D..
    75F0: E8 5F FF B2 CE 32 E4 B9 09 00 E8 49 FF 26 8A 44  // ._...2.....I.&.D
    7600: 02 EE 5F 59 83 C7 60 9D C3 9C FA 8B C7 2B C3 26  // .._Y..`......+.&
    7610: 89 47 02 51 57 2E 8E 1E 07 03 A0 10 04 24 30 AA  // .G.QW........$0.
    7620: BE 49 04 B9 1E 00 F3 A4 BE 84 04 B1 07 F3 A4 BE  // .I..............
    7630: A8 04 B1 04 F3 A4 BE 14 00 B1 04 F3 A4 BE 74 00  // ..............t.
    7640: B1 04 F3 A4 BE 7C 00 B1 04 F3 A4 BE 0C 01 B1 04  // .....|..........
    7650: F3 A4 5F 59 83 C7 3A 9D C3 9C FA 26 8B 3F 03 FB  // .._Y..:....&.?..
    7660: 8B F7 51 8B FE 83 C7 05 BA C4 03 B8 00 01 EF B0  // ..Q.............
    7670: 01 B9 04 00 E8 07 FF 47 B2 C2 26 8A 44 09 EE B2  // .......G..&.D...
    7680: C4 B8 00 03 EF 26 8A 04 EE 26 8B 54 41 B8 11 00  // .....&...&.TA...
    7690: EF B1 19 32 C0 E8 E6 FE 26 8A 44 01 EE 80 C2 06  // ...2....&.D.....
    76A0: 26 8A 44 04 EE EC B1 15 32 E4 E8 DB FE B0 20 EE  // &.D.....2..... .
    76B0: B1 09 32 C0 B2 CE E8 C5 FE 26 8A 44 02 EE 59 9D  // ..2......&.D..Y.
    76C0: C3 9C FA 26 8B 7F 02 03 FB 06 51 2E 8E 1E 07 03  // ...&......Q.....
    76D0: 26 8A 05 80 26 10 04 CF 08 06 10 04 47 BE 49 04  // &...&.......G.I.
    76E0: B9 1E 00 E8 8E FE BE 84 04 B1 07 E8 86 FE BE A8  // ................
    76F0: 04 B1 04 E8 7E FE BE 14 00 B1 04 E8 76 FE BE 74  // ....~.......v..t
    7700: 00 B1 04 E8 6E FE BE 7C 00 B1 04 E8 66 FE BE 0C  // ....n..|....f...
    7710: 01 B1 04 E8 5E FE 59 07 9D C3 9C FA 8B C7 2B C3  // ....^.Y.......+.
    7720: 26 89 47 04 E8 A6 05 B2 C0 B0 34 EE 42 EC 26 88  // &.G.......4.B.&.
    7730: 05 BA C8 03 EC 26 88 45 01 50 4A 4A EC 26 88 45  // .....&.E.PJJ.&.E
    7740: 02 83 C7 03 B9 00 03 42 32 C0 EE 42 42 EC AA E2  // .......B2..BB...
    7750: FC 58 4A EE 9D C3 9C FA 26 8B 77 04 03 F3 E8 6C  // .XJ.....&.w....l
    7760: 05 B2 C0 B0 34 EE 26 8A 04 EE BA C6 03 26 8A 44  // ....4.&......&.D
    7770: 02 EE 56 42 42 83 C6 03 32 C0 EE 42 B9 00 03 26  // ..VBB...2..B...&
    7780: 8A 04 EE 46 E2 F9 5E FE CA 26 8A 44 01 EE 9D C3  // ...F..^..&.D....
    7790: BA CC 03 EC 24 FE 0A C4 B2 C2 EE C3 E8 A8 12 B2  // ....$...........
    77A0: C0 86 C4 EE EB 00 EB 00 86 C4 EE EB 00 EB 00 B0  // ................
    77B0: 20 EE C3 50 8A E0 80 E4 80 80 26 87 04 7F 08 26  //  ..P......&....&
    77C0: 87 04 24 7F 8A E0 3C 07 7E 1E 26 F6 47 33 01 75  // ..$...<.~.&.G3.u
    77D0: 17 3C 23 74 13 3C 32 74 0F 3C 33 74 0B B4 03 26  // .<#t.<2t.<3t...&
    77E0: F6 47 09 01 75 02 B4 07 88 26 49 04 BA B4 03 80  // .G..u....&I.....
    77F0: 0E 87 04 02 26 F6 47 09 01 74 07 B2 D4 80 26 87  // ....&.G..t....&.
    7800: 04 FD 89 16 63 04 C7 06 4E 04 00 00 C6 06 62 04  // ....c...N.....b.
    7810: 00 B9 08 00 BF 50 04 FC 06 1E 07 33 C0 F3 AB 07  // .....P.....3....
    7820: 26 8A 07 32 E4 A3 4A 04 26 8A 47 01 A2 84 04 26  // &..2..J.&.G....&
    7830: 8A 47 02 A3 85 04 26 8B 47 03 A3 4C 04 26 8B 47  // .G....&.G..L.&.G
    7840: 14 86 C4 A3 60 04 58 C3 52 32 E4 33 D2 B0 0D CD  // ....`.X.R2.3....
    7850: 17 F6 C4 29 75 08 32 E4 33 D2 B0 0A CD 17 5A C3  // ...)u.2.3.....Z.
    7860: 06 1E 60 2E 8E 1E 07 03 2E 83 0E 11 03 00 75 6E  // ..`...........un
    7870: 80 3E 00 05 01 74 67 C6 06 00 05 01 8A 1E 62 04  // .>...tg.......b.
    7880: 32 FF D1 E3 8B FB 8B 85 50 04 8A 3E 62 04 50 32  // 2.......P..>b.P2
    7890: F6 8A 0E 84 04 32 ED 41 51 8B 0E 4A 04 32 D2 E8  // .....2.AQ..J.2..
    78A0: A6 FF F6 C4 29 75 3D 51 52 89 95 50 04 B4 08 E8  // ....)u=QR..P....
    78B0: AA D4 0A C0 75 02 B0 20 33 D2 32 E4 CD 17 F6 C4  // ....u.. 3.2.....
    78C0: 29 75 1F 5A FE C2 59 E2 DE FE C6 59 E2 CA E8 77  // )u.Z..Y....Y...w
    78D0: FF 32 C0 A2 00 05 58 89 85 50 04 E8 AF 03 61 1F  // .2....X..P....a.
    78E0: 07 CF 5A 59 59 B0 FF EB EA 52 2A F5 38 C6 7D 02  // ..ZYY....R*.8.}.
    78F0: 32 C0 2E 8E 06 09 03 5A C3 A0 85 04 F6 E3 8A F7  // 2......Z........
    7900: 8B D8 8B CA BA C4 03 B8 02 0F EF B4 02 E8 6D 00  // ..............m.
    7910: 8B D1 32 ED 8A E6 8A C6 F3 AA 03 FD 8A CA 4B 75  // ..2...........Ku
    7920: F7 32 E4 E8 57 00 C3 53 8A 1E 62 04 0B C0 75 04  // .2..W..S..b...u.
    7930: 0A DB 74 03 E8 35 03 5B 8B F8 2B D1 81 C2 01 01  // ..t..5.[..+.....
    7940: 8A C3 32 E4 C3 8A C6 32 F6 2B EA 0A DB 74 2A 2A  // ..2....2.+...t**
    7950: C3 F6 26 85 04 8B C8 52 B4 01 E8 20 00 B2 C4 B8  // ..&....R... ....
    7960: 02 0F EF 5A 1E 06 1F 8B C1 8B CA F3 A4 03 F5 03  // ...Z............
    7970: FD 48 75 F5 1F E8 81 FF C3 8A D8 EB F8 BA CE 03  // .Hu.............
    7980: B0 05 EE 42 EC 24 FC 0A C4 EE 4A C3 9C FA EE 42  // ...B.$....J....B
    7990: EB 00 EC 4A 9D C3 1E 2E 8E 1E 07 03 8B 16 63 04  // ...J..........c.
    79A0: 80 C2 06 1F C3 1E 2E 8E 1E 07 03 8B 16 63 04 1F  // .............c..
    79B0: C3 50 BA CC 03 EC B2 D4 A8 01 75 02 B2 B4 58 C3  // .P........u...X.
    79C0: E8 EE FF 80 C2 06 C3 1E 2E 8E 1E 07 03 80 3E 49  // ..............>I
    79D0: 04 03 74 13 80 3E 49 04 02 74 0C 80 3E 49 04 01  // ..t..>I..t..>I..
    79E0: 74 05 80 3E 49 04 00 1F C3 50 2E 8E 06 0B 03 A0  // t..>I....P......
    79F0: 10 04 24 30 3C 30 74 05 2E 8E 06 0D 03 58 0B C0  // ..$0<0t......X..
    7A00: 74 03 E8 E1 01 03 06 4E 04 81 C2 01 01 2B D1 32  // t......N.....+.2
    7A10: ED 8B 2E 4A 04 8B F8 8B F0 8B C5 F6 E3 D1 E0 D1  // ...J............
    7A20: E5 0A DB 75 02 8A DE 38 F3 7E 02 8A DE C3 FC 8A  // ...u...8.~......
    7A30: D8 8B C1 E8 B3 FF 03 F0 3A 16 4A 04 74 06 06 1F  // ........:.J.t...
    7A40: E8 1B 00 C3 06 1F E8 40 00 C3 FC 8A D8 8A C1 8A  // .......@........
    7A50: E6 E8 95 FF F7 DD 2B F0 06 1F E8 01 00 C3 53 8A  // ......+.......S.
    7A60: CE 2A CB 32 ED 32 F6 2B EA 2B EA E3 0E 8A E1 8B  // .*.2.2.+.+......
    7A70: CA F3 A5 03 F5 03 FD FE CC 75 F4 58 B0 20 8A CA  // .........u.X. ..
    7A80: F3 AB 03 FD FE CB 75 F6 C3 53 8A C6 2A C3 74 06  // ......u..S..*.t.
    7A90: F6 E2 8B C8 F3 A5 58 8B C8 F6 E2 91 B0 20 F3 AB  // ......X...... ..
    7AA0: C3 8B D8 E8 2E 00 2E 8E 1E 0D 03 8A C3 22 DF D3  // ............."..
    7AB0: E3 A8 80 74 03 30 1C C3 F6 D7 8A 34 22 F7 0A DE  // ...t.0.....4"...
    7AC0: 88 1C C3 8A FC E8 0C 00 2E 8E 1E 0D 03 8A 04 D2  // ................
    7AD0: E8 22 C7 C3 B0 28 F6 E2 F6 C2 01 74 03 05 D8 1F  // ."...(.....t....
    7AE0: 8B F1 C1 EE 02 80 FF 05 7F 0C 03 F0 F6 D1 80 E1  // ................
    7AF0: 03 D0 E1 B7 03 C3 D1 EE 03 F0 F6 D1 80 E1 07 B7  // ................
    7B00: 01 C3 FC 8A D8 2E 8E 06 0D 03 8B C1 E8 86 00 75  // ...............u
    7B10: 02 8A DE 03 F0 E8 24 00 C3 FC 8A D8 2E 8E 06 0D  // ......$.........
    7B20: 03 8A C1 8A E6 E8 6D 00 75 02 8A DE F7 DD 81 C6  // ......m.u.......
    7B30: F0 00 81 C7 F0 00 2B F0 E8 01 00 C3 8A CE 2A CB  // ......+.......*.
    7B40: E3 2C 51 8A CA 56 57 D1 E9 F3 A5 13 C9 F3 A4 8A  // .,Q..VW.........
    7B50: CA 2B F1 2B F9 81 C6 00 20 81 C7 00 20 D1 E9 F3  // .+.+.... ... ...
    7B60: A5 13 C9 F3 A4 5F 5E 03 F5 03 FD 59 E2 D4 8A C7  // ....._^....Y....
    7B70: 8A E7 8A CA 57 D1 E9 F3 AB 13 C9 F3 AA 8A CA 2B  // ....W..........+
    7B80: F9 81 C7 00 20 D1 E9 F3 AB 13 C9 F3 AA 5F 03 FD  // .... ........_..
    7B90: FE CB 75 DE C3 E8 B0 00 81 C2 01 01 2B D1 38 F3  // ..u.........+.8.
    7BA0: 76 02 32 DB 51 B1 02 D2 E6 D2 E3 59 32 ED BD 50  // v.2.Q......Y2..P
    7BB0: 00 80 3E 49 04 06 74 04 D0 E2 D1 E0 06 1F 8B F8  // ..>I..t.........
    7BC0: 8B F0 B0 50 F6 E3 0A DB C3 52 53 8A DF 32 FF D1  // ...P.....RS..2..
    7BD0: E3 8B 87 50 04 E8 0E 00 50 D1 EB A1 4C 04 F7 E3  // ...P....P...L...
    7BE0: 5B 03 C3 5B 5A C3 52 8B D0 A0 4A 04 F6 E4 32 F6  // [..[Z.R...J...2.
    7BF0: 03 C2 D1 E0 5A C3 8B E8 83 E5 0F 2E 8A A6 A6 7B  // ....Z..........{
    7C00: 8B E8 C1 ED 04 83 E5 0F 2E 8A 86 A6 7B C3 00 03  // ............{...
    7C10: 0C 0F 30 33 3C 3F C0 C3 CC CF F0 F3 FC FF 26 8B  // ..03<?........&.
    7C20: 04 86 E0 BA 00 80 F6 C4 C0 74 02 0A D6 D0 EE C1  // .........t......
    7C30: E0 02 75 F2 88 56 00 45 C3 8B 16 63 04 8A C5 86  // ..u..V.E...c....
    7C40: E0 EF 8A E1 FE C0 EF C3 52 8B D0 8A C4 F6 26 4A  // ........R.....&J
    7C50: 04 C1 E0 02 32 F6 03 C2 5A C3 53 8A DF 32 FF D1  // ....2...Z.S..2..
    7C60: E3 8B 87 50 04 D1 EB E8 02 00 5B C3 52 8B D0 32  // ...P......[.R..2
    7C70: F6 52 8A C4 F6 26 85 04 F7 26 4A 04 5A 03 C2 0A  // .R...&...&J.Z...
    7C80: DB 74 08 03 06 4C 04 FE CB 75 F8 5A C3 52 8B D0  // .t...L...u.Z.R..
    7C90: A0 4A 04 F6 E4 32 F6 03 C2 D1 E0 03 06 4E 04 D1  // .J...2.......N..
    7CA0: F8 8B C8 B4 0E E8 91 FF 5A C3 8B C2 F7 26 4A 04  // ........Z....&J.
    7CB0: 8B F9 C1 EF 03 03 F8 0A FF 74 0A 8A C7 32 E4 F7  // .........t...2..
    7CC0: 26 4C 04 03 F8 80 E1 07 B4 80 D2 EC C3 E8 F0 FC  // &L..............
    7CD0: EC C3 E8 F8 FF B2 C0 B0 20 EE C3 E8 EF FF B2 C0  // ........ .......
    7CE0: 32 C0 EE C3 C4 3E A8 04 26 C4 7D 04 8C C5 0B EF  // 2....>..&.}.....
    7CF0: C3 53 B0 0E E8 95 FC 8A E0 B0 0F E8 8E FC 8B D8  // .S..............
    7D00: B8 0E AA EF B8 0F 55 EF B0 0E E8 7F FC 3C AA 74  // ......U......<.t
    7D10: 0D B0 0F E8 76 FC 3C 55 74 04 32 C0 5B C3 B0 0E  // ....v.<Ut.2.[...
    7D20: 8A E7 EF FE C0 8A E3 EF B0 01 0A C0 5B C3 8A EE  // ............[...
    7D30: 8A 36 85 04 06 1F 0A DB 74 25 8A C5 2A C3 F6 E6  // .6......t%..*...
    7D40: 8B C8 52 32 F6 C1 E2 02 8B C2 D1 E2 2B D5 51 8B  // ..R2........+.Q.
    7D50: C8 F3 A5 2B FA 2B F2 59 E2 F4 5A E8 05 00 C3 8A  // ...+.+.Y..Z.....
    7D60: DD EB F8 8A C6 F6 E3 8B C8 8A C7 8A E0 32 F6 C1  // .............2..
    7D70: E2 02 8B DA D1 E2 8B F1 2B D5 8B CB F3 AB 2B FA  // ........+.....+.
    7D80: 4E 75 F7 C3 2E 8E 1E 07 03 89 0E 60 04 8A C5 24  // Nu.........`...$
    7D90: 60 A8 20 74 06 B9 00 1E E9 94 00 F6 06 87 04 01  // `. t............
    7DA0: 0F 85 8B 00 80 3E 49 04 07 74 06 E8 19 FC 74 01  // .....>I..t....t.
    7DB0: C3 F6 06 87 04 08 74 03 CD 42 C3 8A 36 85 04 8A  // ......t..B..6...
    7DC0: D6 FE CA 38 CD 7E 1F 0A C9 74 64 8A E9 8A CE FE  // ...8.~...td.....
    7DD0: C9 EB 5C 38 D1 74 58 8A CE 80 FD 03 7C 04 8A E9  // ..\8.tX.....|...
    7DE0: D0 ED FE C9 EB 49 80 F9 03 7E 44 8A E1 2A E5 0A  // .....I...~D..*..
    7DF0: E4 75 0A 38 CA 74 38 FE CA 38 CA 74 32 8A C5 0A  // .u.8.t8..8.t2...
    7E00: C1 38 F0 7E 0A 80 FC 02 7E 12 80 FD 02 7F C8 80  // .8.~....~.......
    7E10: FC 03 7D BF 8A D6 FE CA 38 D1 74 13 8A CE FE C9  // ..}.....8.t.....
    7E20: FE C9 8A E9 2A EC 80 FE 08 7F 04 FE C1 FE C5 B4  // ....*...........
    7E30: 0A E8 05 FE C3 2E 8E 1E 07 03 A2 62 04 32 E4 8B  // ...........b.2..
    7E40: F0 F7 26 4C 04 A3 4E 04 8B C8 E8 7A FB 74 07 80  // ..&L..N....z.t..
    7E50: 3E 49 04 07 77 02 D1 F9 B4 0C E8 DC FD D1 E6 8B  // >I..w...........
    7E60: 84 50 04 E8 27 FE C3 2E 8E 1E 07 03 8A 26 49 04  // .P..'........&I.
    7E70: E8 A3 9C 74 07 C7 06 50 04 00 00 C3 E8 48 FB 74  // ...t...P.....H.t
    7E80: 0B 80 FC 07 74 06 77 08 E8 77 FC C3 E8 9F FB C3  // ....t.w..w......
    7E90: 80 FC 13 7C 03 74 1F C3 E8 4E FA 8A D8 8B C1 E8  // ...|.t...N......
    7EA0: 85 FA 8B 2E 4A 04 52 F6 26 85 04 F7 E5 8B F7 03  // ....J.R.&.......
    7EB0: F0 5A E8 90 FA C3 E8 30 FA 8A D8 8B C1 E8 67 FA  // .Z.....0......g.
    7EC0: C1 E7 03 52 8B 2E 4A 04 C1 E5 03 F7 26 85 04 F7  // ...R..J.....&...
    7ED0: E5 8B F7 03 F0 5A E8 55 FE C3 2E 8E 1E 07 03 8A  // .....Z.U........
    7EE0: 26 49 04 E8 E1 FA 74 0C 80 FC 07 74 07 77 40 80  // &I....t....t.w@.
    7EF0: FC 03 7F 04 E8 53 FB C3 E8 1E FC C3 E8 EA F9 8A  // .....S..........
    7F00: D8 8A C1 8A E6 FE C4 E8 1D FA 2B 3E 4A 04 C1 E7  // ..........+>J...
    7F10: 03 52 F7 26 85 04 F7 26 4A 04 C1 E0 03 8B F7 2B  // .R.&...&J......+
    7F20: F0 5A 8B 2E 4A 04 C1 E5 03 F7 DD E8 00 FE C3 80  // .Z..J...........
    7F30: FC 13 7C 03 74 C6 C3 E8 AF F9 8A D8 8A C1 8A E6  // ..|.t...........
    7F40: FE C4 E8 E2 F9 52 8B 2E 4A 04 F7 26 85 04 F7 E5  // .....R..J..&....
    7F50: 2B FD 8B F7 2B F0 5A F7 DD E8 E9 F9 C3 2E 8E 1E  // +...+.Z.........
    7F60: 07 03 2E 8E 06 0D 03 E8 5D FA 74 11 80 3E 49 04  // ........].t..>I.
    7F70: 07 7C 18 2E 8E 06 0B 03 74 03 E9 B1 00 E8 49 FC  // .|......t.....I.
    7F80: 8B D8 26 8B 07 8B EC 89 46 1A C3 A1 50 04 E8 B7  // ..&.....F...P...
    7F90: FC 8B F0 BB 08 00 2B E3 8B EC 80 3E 49 04 06 75  // ......+....>I..u
    7FA0: 1F B9 04 00 26 8A 04 88 46 00 45 26 8A 84 00 20  // ....&...F.E&... 
    7FB0: 88 46 00 45 83 C6 50 E2 EB B8 00 02 B2 80 EB 17  // .F.E..P.........
    7FC0: D1 E6 B9 04 00 E8 56 FC 81 C6 00 20 E8 4F FC 81  // ......V.... .O..
    7FD0: EE B0 1F E2 F0 EB E2 2B EB C4 3E 0C 01 32 F6 80  // .......+..>..2..
    7FE0: FB 0E 75 09 26 83 7D FE 10 75 02 B6 80 16 1F 8B  // ..u.&.}..u......
    7FF0: F5 8B CB F6 C6 80 74 01 47 56 57 F3 A6 5F 5E 74  // ......t.GVW.._^t
    8000: 23 FE C0 03 FB F6 C6 80 74 01 47 FE CA 75 E2 FE  // #.......t.G..u..
    8010: CC 74 0F 2E 8E 1E 07 03 C4 3E 7C 00 B0 80 B2 80  // .t.......>|.....
    8020: EB CB 32 C0 8B E5 03 E3 8B EC 89 46 1A C3 80 3E  // ..2........F...>
    8030: 49 04 13 7C 05 75 02 EB 5A C3 2E 8E 06 09 03 E8  // I..|.u..Z.......
    8040: 18 FC 8B F0 8B 1E 85 04 2B E3 8B EC B8 05 08 B9  // ........+.......
    8050: 05 00 BA CE 03 80 3E 49 04 0F 72 1A F6 06 87 04  // ......>I..r.....
    8060: 60 75 13 B4 0A F7 C6 01 00 75 02 B4 05 B0 07 EF  // `u.......u......
    8070: B8 05 18 B9 05 01 EF 51 8B CB 26 8A 04 F6 D0 88  // .......Q..&.....
    8080: 46 00 45 03 36 4A 04 E2 F1 58 EF B8 00 01 32 D2  // F.E.6J...X....2.
    8090: E9 44 FF 2E 8E 06 09 03 A1 50 04 8B D0 32 F6 52  // .D.......P...2.R
    80A0: 8A C4 32 E4 F7 26 4A 04 F7 26 85 04 5A 03 C2 8B  // ..2..&J..&..Z...
    80B0: F0 8B 1E 85 04 2B E3 8B EC 53 8B 3E 4A 04 4F C1  // .....+...S.>J.O.
    80C0: E7 03 C1 E6 03 B9 08 00 32 E4 26 8A 04 D0 E4 0A  // ........2.&.....
    80D0: C0 74 03 80 CC 01 46 E2 F1 88 66 00 45 03 F7 4B  // .t....F...f.E..K
    80E0: 75 E3 5B B8 00 01 32 D2 E9 EC FE 33 ED EB 03 BD  // u.[...2....3....
    80F0: 01 00 2E 8E 1E 07 03 2E 8E 06 0D 03 8A 26 49 04  // .............&I.
    8100: E8 C4 F8 74 0F 2E 8E 06 0B 03 80 FC 07 74 05 7C  // ...t.........t.|
    8110: 3D E9 0B 02 8A E3 8B F0 8A DF 32 FF D1 E3 8B 87  // =.........2.....
    8120: 50 04 8B D0 A0 4A 04 F6 E4 32 F6 03 C2 8B F8 D1  // P....J...2......
    8130: E7 0A DB 74 0B D0 EB A1 4C 04 03 F8 FE CB 75 FA  // ...t....L.....u.
    8140: 8B C6 0B ED 75 03 F3 AB C3 AA 47 E2 FC C3 50 2E  // ....u.....G...P.
    8150: 8E 06 0D 03 A1 50 04 E8 EE FA 8B F8 A0 50 04 8A  // .....P.......P..
    8160: 26 4A 04 8B E8 58 A8 80 74 08 24 7F C5 36 7C 00  // &J...X..t.$..6|.
    8170: EB 04 C5 36 0C 01 8A FC 32 E4 C1 E0 03 03 F0 80  // ...6....2.......
    8180: FF 06 74 69 D1 E7 8A F3 B0 55 80 E3 03 F6 E3 8A  // ..ti.....U......
    8190: D8 8A F8 8B C5 50 B2 04 F6 C6 80 75 27 AC E8 55  // .....P.....u'..U
    81A0: FA 23 C3 AB AC E8 4E FA 23 C3 26 89 85 FE 1F 83  // .#....N.#.&.....
    81B0: C7 4E FE CA 75 E7 83 EE 08 81 EF 3E 01 58 E8 72  // .N..u......>.X.r
    81C0: 00 E2 D2 C3 AC E8 2E FA 23 C3 26 31 05 AC E8 25  // ........#.&1...%
    81D0: FA 23 C3 26 31 85 00 20 83 C7 50 FE CA 75 E5 83  // .#.&1.. ..P..u..
    81E0: EE 08 81 EF 3E 01 58 E8 49 00 E2 A9 C3 8B C5 50  // ....>.X.I......P
    81F0: B2 04 F6 C3 80 74 1F AC 26 30 05 AC 26 30 85 00  // .....t..&0..&0..
    8200: 20 83 C7 50 FE CA 7F EF 83 EE 08 81 EF 3F 01 58  //  ..P.........?.X
    8210: E8 20 00 E2 DA C3 AC AA AC 26 88 85 FF 1F 83 C7  // . .......&......
    8220: 4F FE CA 7F F1 83 EE 08 81 EF 3F 01 58 E8 03 00  // O.........?.X...
    8230: E2 BD C3 FE C0 38 E0 72 06 32 C0 81 C7 F0 00 C3  // .....8.r.2......
    8240: 8A 16 85 04 F6 E2 8B F0 32 F6 8B EA 66 0F B6 06  // ........2...f...
    8250: 51 04 F6 E2 66 0F B7 16 4A 04 83 FA 64 75 03 BA  // Q...f...J...du..
    8260: 68 00 83 FA 5A 75 03 BA 60 00 81 FA AF 00 75 03  // h...Zu..`.....u.
    8270: BA B0 00 52 F7 E2 66 0F B7 F8 66 0F B6 06 50 04  // ...R..f...f...P.
    8280: 66 03 F8 66 C1 CF 10 03 FA 66 C1 C7 03 81 CF 00  // f..f.....f......
    8290: FF 66 C1 C7 10 5A 8A E2 4A C1 E2 03 A0 50 04 50  // .f...Z..J....P.P
    82A0: C5 06 0C 01 03 F0 2E 8E 06 09 03 58 57 51 50 9C  // ...........XWQP.
    82B0: FC 8B CD E8 3B 00 B5 08 AC 8A E0 8A C7 D0 E4 73  // ....;..........s
    82C0: 02 8A C3 26 88 05 66 47 FE CD 75 EF 66 03 FA E2  // ...&..fG..u.f...
    82D0: E2 9D 58 59 5F 83 C7 08 FE C0 38 E0 72 0E 51 32  // ..XY_.....8.r.Q2
    82E0: C0 8B CD 49 03 FA 83 C7 08 E2 F9 59 2B F5 E2 BC  // ...I.......Y+...
    82F0: C3 06 52 33 C0 8E C0 66 C1 C7 10 8B C7 66 C1 C7  // ..R3...f.....f..
    8300: 10 E8 12 98 74 16 38 E0 74 12 0F B6 D0 E8 85 C9  // ....t.8.t.......
    8310: 8A E0 66 C1 C7 10 8B F8 66 C1 C7 10 5A 07 C3 80  // ..f.....f...Z...
    8320: FC 13 7C 0B 0F 84 18 FF 80 FC 62 0F 84 11 FF E8  // ..|.......b.....
    8330: 01 00 C3 80 FC 11 75 06 80 E3 80 80 CB 0F 50 53  // ......u.......PS
    8340: 8A DF 32 FF D1 E3 8B 97 50 04 5B 2E 8E 06 09 03  // ..2.....P.[.....
    8350: E8 07 F9 8B F8 8B 2E 85 04 58 32 F6 52 8B 36 4A  // .........X2.R.6J
    8360: 04 56 8A 26 85 04 C5 36 0C 01 80 FC 0E 75 09 83  // .V.&...6.....u..
    8370: 7C FE 10 75 03 B4 10 46 F6 E4 03 F0 B6 03 F6 C3  // |..u...F........
    8380: 80 75 6D B2 C4 B8 02 0F EF 5A 58 50 52 4A 8A E0  // .um......ZXPRJ..
    8390: 57 51 51 57 8B CD 32 C0 AA 03 FA E2 FB 5F 47 FE  // WQQW..2......_G.
    83A0: C4 38 D4 76 0A 32 E4 8B CD 49 03 FA 47 E2 FB 59  // .8.v.2...I..G..Y
    83B0: E2 E0 59 5F BA C4 03 B0 02 8A E3 EF 5B 4B 5A 51  // ..Y_........[KZQ
    83C0: 57 8B CD AC 26 8A 25 AA 03 FB E2 F7 5F 47 2B F5  // W...&.%....._G+.
    83D0: 42 3B D3 76 0A 33 D2 8B CD 49 03 FB 47 E2 FB 59  // B;.v.3...I..G..Y
    83E0: E2 DD BA CE 03 B8 03 00 EF B2 C4 B8 02 0F EF C3  // ................
    83F0: B2 CE B8 03 18 EF EB BC 2E 8E 1E 07 03 80 3E 63  // ..............>c
    8400: 04 B4 74 0B BA CC 03 EC A8 01 75 04 CD 42 C3 C3  // ..t.......u..B..
    8410: E8 D1 F8 0A FF 75 1C 8A E3 80 E4 1F 80 26 66 04  // .....u.......&f.
    8420: E0 08 26 66 04 E8 2D 00 8A 1E 66 04 80 E3 20 B1  // ..&f..-...f... .
    8430: 05 D2 EB E8 91 F5 74 19 A0 66 04 24 DF 80 E3 01  // ......t..f.$....
    8440: 74 02 0C 20 A2 66 04 24 10 0C 02 0A D8 E8 53 00  // t.. .f.$......S.
    8450: C3 E8 7E F8 C3 53 50 80 E3 0F 8A FB D0 E3 81 E3  // ..~..SP.........
    8460: 10 07 0A DF E8 60 F5 74 0E B4 00 8A C3 E8 2C F3  // .....`.t......,.
    8470: 0B ED 74 03 26 88 1D 8A C3 E8 0B 00 0B ED 74 04  // ..t.&.........t.
    8480: 26 88 5D 10 58 5B C3 8A E0 1E 2E 8E 1E 07 03 80  // &.].X[..........
    8490: 3E 49 04 33 1F 7F 08 8A C4 B4 11 E8 FE F2 C3 E8  // >I.3............
    84A0: 30 F8 C3 9C FA E8 9F 05 B2 C0 B9 03 00 B4 01 8A  // 0...............
    84B0: C4 EE 8A C3 EE 0B ED 74 04 47 26 88 1D FE C4 80  // .......t.G&.....
    84C0: C3 02 E2 EB B0 20 EE 9D C3 2E 8E 1E 07 03 8A 26  // ..... .........&
    84D0: 49 04 E8 F2 F4 74 0A 80 FC 07 77 06 74 03 E8 C0  // I....t....w.t...
    84E0: F5 C3 80 FC 13 7C 03 74 4C C3 8A D8 E8 BB F7 BA  // .....|.tL.......
    84F0: CE 03 B0 08 EF 2E 8E 1E 09 03 F6 C3 80 75 1C B2  // .............u..
    8500: C4 B8 02 FF EF 8A 25 C6 05 00 8A E3 EF 8A 25 B4  // ......%.......%.
    8510: FF 88 25 EF B2 CE B8 08 FF EF C3 B8 03 18 EF B2  // ..%.............
    8520: C4 B0 02 8A E3 EF 8A 25 B4 FF 88 25 EF B2 CE B8  // .......%...%....
    8530: 03 00 EF EB E1 50 2E 8E 06 09 03 A1 4A 04 C1 E0  // .....P......J...
    8540: 03 F7 E2 03 C1 8B F8 58 26 88 05 C3 2E 8E 1E 07  // .......X&.......
    8550: 03 8A 26 49 04 E8 6F F4 74 0F 80 FC 07 77 0B 74  // ..&I..o.t....w.t
    8560: 08 E8 5F F5 8B EC 89 46 1A C3 80 FC 13 7C 03 74  // .._....F.....|.t
    8570: 29 C3 E8 35 F7 8A CC 2E 8E 1E 09 03 BA CE 03 32  // )..5...........2
    8580: FF B8 04 03 EF D0 E7 8A 1D 22 D9 74 03 80 CF 01  // .........".t....
    8590: FE CC 7D F0 8B EC 88 7E 1A C3 A1 4A 04 C1 E0 03  // ..}....~...J....
    85A0: F7 E2 03 C1 8B F8 2E 8E 1E 09 03 8A 05 8B EC 88  // ................
    85B0: 46 1A C3 2E 8E 1E 07 03 8A 3E 62 04 8A CF D0 E1  // F........>b.....
    85C0: 32 ED BE 50 04 03 F1 8B 14 8A 0E 49 04 3C 0D 76  // 2..P.......I.<.v
    85D0: 4A 2E 8E 06 0D 03 E8 EE F3 75 33 8A 1E 4A 04 8A  // J........u3..J..
    85E0: F8 8A C6 F6 E3 8A CA 03 C8 D1 E1 03 0E 4E 04 8B  // .............N..
    85F0: F9 8A C7 AA D1 E9 41 FE C2 38 DA 73 59 89 14 8B  // ......A..8.sY...
    8600: 16 63 04 B0 0E 8A E5 EF 8A E1 FE C0 EF C3 2E 8E  // .c..............
    8610: 06 0B 03 80 F9 07 74 C3 E9 83 00 75 04 32 D2 EB  // ......t....u.2..
    8620: 0F 3C 0A 75 1D 3A 36 84 04 75 03 E9 93 00 FE C6  // .<.u.:6..u......
    8630: 89 14 E8 92 F3 75 05 80 F9 07 7F 05 8B C2 E8 4C  // .....u.........L
    8640: F6 C3 3C 07 75 04 E8 29 7F C3 3C 08 75 83 0A D2  // ..<.u..)..<.u...
    8650: 74 DE FE CA EB DA 32 FF 32 D2 2B CB 3A 36 84 04  // t.....2.2.+.:6..
    8660: 74 06 FE C6 03 CB EB 95 89 14 8B 16 63 04 B0 0E  // t...........c...
    8670: 8A E5 EF 8A E1 FE C0 EF 2B FB 2B FB 26 8A 65 02  // ........+.+.&.e.
    8680: 50 8B 3E 4E 04 8B F3 D1 E6 03 F7 A0 84 04 F6 E3  // P.>N............
    8690: 8B C8 06 1F F3 A5 8B CB 58 B0 20 F3 AB C3 B9 01  // ........X. .....
    86A0: 00 B4 0A E8 B6 C6 FE C2 3A 16 4A 04 74 03 89 14  // ........:.J.t...
    86B0: C3 32 FF 32 D2 89 14 3A 36 84 04 74 2E FE C6 EB  // .2.2...:6..t....
    86C0: ED 89 14 2E 8E 06 0D 03 E8 FC F2 74 0E 2E 8E 06  // ...........t....
    86D0: 0B 03 80 F9 07 74 04 32 FF EB 10 8B C2 E8 AD F5  // .....t.2........
    86E0: 8B F9 D1 E7 4F 8B 1E 4A 04 EB 91 33 C9 8A 36 84  // ....O..J...3..6.
    86F0: 04 8A 16 4A 04 FE CA B0 01 E9 70 F7 2E 8E 1E 07  // ...J......p.....
    8700: 03 F6 06 87 04 08 74 03 CD 42 C3 E8 76 F6 8B EC  // ......t..B..v...
    8710: C6 46 1B 00 C3 2E 8E 1E 07 03 8A DF 32 FF D1 E3  // .F..........2...
    8720: 89 97 50 04 D0 EB 38 1E 62 04 75 05 8B C2 E8 5C  // ..P...8.b.u....\
    8730: F5 C3 2E 8E 1E 07 03 8A DF 32 FF D1 E3 8B 97 50  // .........2.....P
    8740: 04 8B 0E 60 04 8B EC 89 4E 16 89 56 12 C3 2E 8E  // ...`....N..V....
    8750: 1E 07 03 A0 87 04 24 80 0A 06 49 04 8A 26 4A 04  // ......$...I..&J.
    8760: F6 06 87 04 08 75 2D E8 5D F2 74 07 80 3E 49 04  // .....u-.].t..>I.
    8770: 07 7F 21 51 8A CC 8A 2E 84 04 BE 3F 87 81 FE 48  // ..!Q.......?...H
    8780: 87 74 10 2E 3B 0C 74 05 83 C6 03 EB F0 24 80 2E  // .t..;.t......$..
    8790: 0A 44 02 59 8A 3E 62 04 8B EC 89 46 1A 89 5E 0E  // .D.Y.>b....F..^.
    87A0: 89 4E 16 89 56 12 C3 84 18 23 84 2B 33 84 2A 32  // .N..V....#.+3.*2
    87B0: 2E 8E 1E 07 03 3C 04 7F 1B 50 52 BA CC 03 EC A8  // .....<...PR.....
    87C0: 01 5A 58 74 08 80 3E 63 04 D4 74 08 C3 80 3E 63  // .ZXt..>c..t...>c
    87D0: 04 B4 75 F8 3C 1C 73 F4 32 E4 8B E8 D1 E5 2E FF  // ..u.<.s.2.......
    87E0: A6 7B 87 B3 87 D3 87 E5 87 1A 88 64 87 64 87 64  // .{.........d.d.d
    87F0: 87 3F 88 57 88 5B 88 64 87 64 87 64 87 64 87 64  // .?.W.[.d.d.d.d.d
    8800: 87 64 87 89 88 64 87 8D 88 A8 88 64 87 E7 88 64  // .d...d.....d...d
    8810: 87 F5 88 10 89 17 89 23 89 47 89 80 3E 49 04 13  // .......#.G..>I..
    8820: 74 15 E8 BF F4 8B C3 86 E0 E8 70 EF 0B ED 74 07  // t.........p...t.
    8830: 8A C7 32 FF 26 88 01 E8 93 F4 C3 E8 A6 F4 8A C7  // ..2.&...........
    8840: E8 44 FC 0B ED 74 F0 26 88 7D 11 EB EA 80 3E 49  // .D...t.&.}....>I
    8850: 04 13 74 E3 06 E8 8C F4 1F 0B ED 74 07 8B F2 B9  // ..t........t....
    8860: 11 00 F3 A4 8B F2 E8 DE 01 32 E4 B9 10 00 B2 C0  // .........2......
    8870: 9C FA 8A C4 EE AC EE 9D FE C4 E2 F4 AC E8 07 FC  // ................
    8880: EB B5 80 FB 01 77 B0 E8 43 F4 B2 C0 B0 30 E8 FB  // .....w..C....0..
    8890: F0 24 F7 80 26 65 04 DF 80 FB 00 74 07 0C 08 80  // .$..&e.....t....
    88A0: 0E 65 04 20 EE EB 90 E8 9D 01 8A C3 B2 C0 E8 DB  // .e. ............
    88B0: F0 8B C8 EE B0 20 EE 8B EC 88 4E 0F E9 78 FF B3  // ..... ....N..x..
    88C0: 11 EB E4 8B FA E8 05 F4 B9 10 00 32 E4 B2 C0 8A  // ...........2....
    88D0: C4 9C FA EE 42 EC 26 88 05 FE C4 4A EE 9D 47 E2  // ....B.&....J..G.
    88E0: EE 9C FA B0 11 EE 42 EC 9D 26 88 05 E8 E3 F3 EB  // ......B..&......
    88F0: 5A E8 CE 00 C3 8B FA 51 8B C3 26 8A 35 26 8A 6D  // Z......Q..&.5&.m
    8900: 01 26 8A 4D 02 E8 CA 00 83 C7 03 43 59 E2 E8 C3  // .&.M.......CY...
    8910: 0A DB 75 1A E8 B6 F3 B2 C0 B0 30 E8 6E F0 24 7F  // ..u.......0.n.$.
    8920: F6 C7 01 74 02 0C 80 B4 30 E8 70 EE EB 1D FE CB  // ...t....0.p.....
    8930: 75 1C E8 98 F3 B2 C0 B0 30 E8 50 F0 EE A8 80 75  // u.......0.P....u
    8940: 03 C0 E7 02 B4 34 8A C7 E8 51 EE E8 7F F3 C3 8A  // .....4...Q......
    8950: C3 E8 D1 00 8B EC 89 4E 16 88 76 13 C3 8B FA 51  // .......N..v....Q
    8960: 8B C3 E8 C3 00 26 88 35 26 88 6D 01 26 88 4D 02  // .....&.5&.m.&.M.
    8970: 83 C7 03 43 59 E2 E8 C3 BA C6 03 8A C3 EE C3 BA  // ...CY...........
    8980: C6 03 EC 32 E4 8B EC 89 46 0E C3 E8 3F F3 B2 C0  // ...2....F...?...
    8990: B0 34 E8 F7 EF 8A F8 EE B0 30 E8 EF EF B3 01 A8  // .4.......0......
    89A0: 80 75 05 B3 00 C0 EF 02 8B EC 89 5E 0E EB 9C 51  // .u.........^...Q
    89B0: 8B C3 E8 73 00 E8 2A 00 8A C3 E8 52 00 43 59 E2  // ...s..*....R.CY.
    89C0: EE C3 F6 06 89 04 02 74 03 E8 16 00 8A C3 E8 39  // .......t.......9
    89D0: 00 C3 F6 06 89 04 02 74 03 E8 06 00 8A C3 E8 2E  // .......t........
    89E0: 00 C3 50 B0 1E F6 E6 50 B0 3B F6 E5 50 B0 0B F6  // ..P....P.;..P...
    89F0: E1 59 03 C1 59 03 C1 B1 64 F6 F1 80 FC 32 7C 02  // .Y..Y...d....2|.
    8A00: FE C0 8A F0 8A E8 8A C8 58 C3 52 E8 39 00 5A 53  // ........X.R.9.ZS
    8A10: 8B DA BA C8 03 9C FA EE 42 8A C7 EE 8A C5 EE 8A  // ........B.......
    8A20: C1 EE 9D 5B C3 E8 1F 00 53 9C FA BA C7 03 EE 42  // ...[....S......B
    8A30: 42 EC 8A F8 EB 00 EB 00 EC 8A E8 EB 00 EB 00 EC  // B...............
    8A40: 8A C8 8A F7 9D 5B C3 50 51 E8 81 F2 B9 FF 7F EC  // .....[.PQ.......
    8A50: A8 08 75 02 E2 F9 59 58 C3 2E 8E 1E 07 03 8B F8  // ..u...YX........
    8A60: 24 0F 81 E7 F0 00 C1 EF 03 83 FF 06 7F 18 2E FF  // $...............
    8A70: A5 0B 8A 13 8A 28 8A C6 8A 22 8B 3C 03 74 08 3C  // .....(...".<.t.<
    8A80: 04 7F 03 E8 CF 01 C3 BA C4 03 B0 03 8A E3 EF C3  // ................
    8A90: 3C 04 77 F2 50 53 50 52 8B 16 63 04 B0 07 E8 EB  // <.w.PSPR..c.....
    8AA0: EE 8A E0 D0 EC 80 E4 01 A8 40 74 03 80 CC 02 B0  // .........@t.....
    8AB0: 12 E8 D8 EE 40 A3 85 04 B0 09 E8 CF EE A8 80 74  // ....@..........t
    8AC0: 04 D1 2E 85 04 A1 85 04 8B D0 3D F4 01 73 1B BA  // ..........=..s..
    8AD0: E0 01 3D C2 01 73 13 BA 90 01 3D 7C 01 73 0B BA  // ..=..s....=|.s..
    8AE0: 5E 01 3D 4A 01 73 03 BA C8 00 89 16 85 04 5A 58  // ^.=J.s........ZX
    8AF0: C6 06 84 04 FF E8 5D 01 5B 58 8A DF 32 FF 0A C0  // ......].[X..2...
    8B00: 74 0E B3 0E 3C 01 74 08 B3 08 3C 02 74 02 B3 10  // t...<.t...<.t...
    8B10: 8A CB 8A E9 81 E9 01 02 80 F9 08 7E 04 81 E9 01  // ...........~....
    8B20: 01 87 1E 85 04 53 E8 5B F2 5B E8 85 02 C3 0A C0  // .....S.[.[......
    8B30: 74 11 FE C8 74 1A FE C8 74 38 FE C8 74 3C FE C8  // t...t...t8..t<..
    8B40: 74 40 C3 89 2E 7C 00 8C 06 7E 00 C3 8C C8 8E C0  // t@...|...~......
    8B50: FE CA 0A DB 74 07 32 FF 2E 8A 97 06 8B 89 0E 85  // ....t.2.........
    8B60: 04 88 16 84 04 89 2E 0C 01 8C 06 0E 01 C3 00 0D  // ................
    8B70: 18 2A E8 09 03 B9 0E 00 EB D6 BD 16 5A B9 08 00  // .*..........Z...
    8B80: EB CA BD 29 62 B9 10 00 EB C2 0A C0 75 BD 8B 0E  // ...)b.......u...
    8B90: 85 04 8A 16 84 04 80 FF 07 77 35 80 FF 01 77 10  // .........w5...w.
    8BA0: 0A FF 75 06 C4 2E 7C 00 EB 26 C4 2E 0C 01 EB 20  // ..u...|..&..... 
    8BB0: 80 FF 02 75 0B 8C CD 8E C5 2E 8B 2E 08 73 EB 10  // ...u.........s..
    8BC0: 0E 07 8A DF 32 FF 80 EB 02 D1 E3 2E 8B AF 79 8B  // ....2.........y.
    8BD0: 8B C5 8B EC 89 4E 16 89 56 12 89 46 0A 8C 46 1E  // .....N..V..F..F.
    8BE0: C3 29 62 16 5A 16 5E 16 62 29 62 29 72 53 06 8A  // .)b.Z.^.b)b)rS..
    8BF0: 26 49 04 E8 CD C3 26 8A 47 02 26 8A 67 33 F6 C4  // &I....&.G.&.g3..
    8C00: 01 74 22 BD 29 62 3C 10 7D 0E E8 71 02 8C 06 0E  // .t".)b<.}..q....
    8C10: 01 3C 0E 7D 07 BD 16 5A 8C 0E 0E 01 89 2E 0C 01  // .<.}...Z........
    8C20: E8 10 01 EB 2D B4 84 3C 10 7D 13 B4 81 3C 0E 74  // ....-..<.}...<.t
    8C30: 0D 7F 15 B4 02 3C 08 74 05 80 CC 80 EB 0A 26 F6  // .....<.t......&.
    8C40: 47 05 01 74 03 80 E4 7F 86 C4 32 DB E8 06 00 E8  // G..t......2.....
    8C50: C9 01 07 5B C3 8B F8 8B F2 BA CE 03 EC B8 05 00  // ...[............
    8C60: EF B8 06 04 EF B2 C4 EC B8 02 04 EF B8 04 07 EF  // ................
    8C70: 8B D6 8B C7 50 24 7F 0A C0 74 22 0E 07 33 D2 B9  // ....P$...t"..3..
    8C80: 00 01 3C 04 75 07 B7 10 BD 29 62 EB 10 FE C8 75  // ..<.u....)b....u
    8C90: 07 B7 0E E8 E8 01 EB 05 B7 08 BD 16 5A E8 2D 00  // ............Z.-.
    8CA0: 58 A8 80 74 00 BA C4 03 B8 02 03 EF B8 04 02 EF  // X..t............
    8CB0: B2 CC EC A8 01 B8 06 0E 75 02 B4 0A B2 CE 50 EC  // ........u.....P.
    8CC0: 58 EF B0 04 EE 32 C0 EE B8 05 10 EF C3 FC 0B C9  // X....2..........
    8CD0: 75 01 C3 80 FF 0E 75 0A 26 83 7E FE 10 75 03 80  // u.....u.&.~..u..
    8CE0: CD 80 1E 06 1F 2E 8E 06 09 03 8B FA C1 E7 05 B0  // ................
    8CF0: 40 53 80 E3 03 F6 E3 5B F6 C3 04 74 02 04 20 86  // @S.....[...t.. .
    8D00: E0 8B D0 03 FA 8B F5 E3 28 32 C0 86 FB 32 FF 51  // ........(2...2.Q
    8D10: F6 C5 80 74 01 46 8B CB F3 A4 83 FB 20 74 07 B9  // ...t.F...... t..
    8D20: 20 00 2B CB F3 AA 59 F6 C5 80 74 01 46 FE C9 75  //  .+...Y...t.F..u
    8D30: DE 1F C3 8A 26 49 04 50 06 57 C4 3E A8 04 26 C4  // ....&I.P.W.>..&.
    8D40: 7D 0C 8C C5 0B EF 74 30 8B EF 83 C7 07 26 8A 05  // }.....t0.....&..
    8D50: 3C FF 74 24 38 E0 74 03 47 EB F2 8B FD 26 8A 05  // <.t$8.t.G....&..
    8D60: FE C8 A2 84 04 26 8B 45 01 A3 85 04 26 C4 7D 03  // .....&.E....&.}.
    8D70: 89 3E 0C 01 8C 06 0E 01 5F 07 58 C3 26 F6 47 33  // .>......_.X.&.G3
    8D80: 01 74 01 C3 C4 1E A8 04 26 C4 5F 08 8C C0 0B C3  // .t......&._.....
    8D90: 74 1F BF 0B 00 26 8A 01 3C FF 74 15 47 38 06 49  // t....&..<.t.G8.I
    8DA0: 04 75 F2 26 8A 07 32 E4 87 06 85 04 8B D8 E8 01  // .u.&..2.........
    8DB0: 00 C3 8B 16 63 04 8A 26 85 04 FE CC 80 E4 1F 9C  // ....c..&........
    8DC0: FA 80 FA D4 74 0B B0 14 EE 42 EC 24 E0 0A C4 EE  // ....t....B.$....
    8DD0: 4A B0 09 EE 42 EC 24 E0 0A C4 EE 9D 8A C8 8B C3  // J...B.$.........
    8DE0: 8A 16 85 04 F6 F2 80 3E 84 04 FF 75 07 A2 84 04  // .......>...u....
    8DF0: FE 0E 84 04 F6 E2 F6 C1 80 74 02 D1 E0 48 8A E0  // .........t...H..
    8E00: B0 12 8B 16 63 04 EF A0 4A 04 8A 26 84 04 FE C4  // ....c...J..&....
    8E10: F6 E4 D1 E0 05 00 01 A3 4C 04 C3 8A 26 49 04 50  // ........L...&I.P
    8E20: 06 57 C4 3E A8 04 26 C4 7D 08 8C C5 0B EF 74 4A  // .W.>..&.}.....tJ
    8E30: 8B EF 83 C7 0B 26 8A 05 3C FF 74 3E 38 E0 74 03  // .....&..<.t>8.t.
    8E40: 47 EB F2 8B FD 26 8A 3D 26 8A 5D 01 26 8B 4D 02  // G....&.=&.].&.M.
    8E50: 26 8B 55 04 26 8A 45 0A 3C FF 74 02 FE C8 50 A0  // &.U.&.E.<.t...P.
    8E60: 84 04 FE C0 F6 26 85 04 A3 85 04 58 A2 84 04 26  // .....&.....X...&
    8E70: C4 7D 06 8B EF 32 C0 E8 DB FD 5F 07 58 C3 50 53  // .}...2...._.X.PS
    8E80: 51 52 2E A1 11 03 0B C0 74 09 2E 8B 2E 08 73 0E  // QR......t.....s.
    8E90: 07 EB 08 B8 30 11 B7 02 E8 C1 BE 5A 59 5B 58 C3  // ....0......ZY[X.
    8EA0: 3C 04 7C 01 C3 E3 FD 53 2E 8E 1E 07 03 86 FB 32  // <.|....S.......2
    8EB0: FF D1 E3 8B FB 81 C7 50 04 8B 35 5B 89 15 56 8B  // .......P..5[..V.
    8EC0: F0 51 53 26 8A 46 00 45 3C 0D 7F 1F 75 04 32 D2  // .QS&.F.E<...u.2.
    8ED0: EB 40 3C 0A 74 32 3C 07 75 05 E8 95 76 EB 62 3C  // .@<.t2<.u...v.b<
    8EE0: 08 75 08 0A D2 74 5A FE CA EB 27 F7 C6 02 00 74  // .u...tZ...'....t
    8EF0: 05 26 8A 5E 00 45 B9 01 00 B4 09 E8 5E BE FE C2  // .&.^.E......^...
    8F00: 3A 16 4A 04 72 0C 32 D2 89 15 3A 36 84 04 73 06  // :.J.r.2...:6..s.
    8F10: FE C6 89 15 EB 2B 50 E8 AD EA 75 08 B8 00 08 E8  // .....+P...u.....
    8F20: 3A BE EB 09 80 3E 49 04 07 74 F1 32 E4 86 3E 62  // :....>I..t.2..>b
    8F30: 04 53 8A FC 55 E8 25 00 5D 5B 86 3E 62 04 58 8B  // .S..U.%.][.>b.X.
    8F40: 15 5B 59 E2 15 5A F7 C6 01 00 75 02 89 15 8B 05  // .[Y..Z....u.....
    8F50: 3A 3E 62 04 75 03 E8 34 ED C3 E9 64 FF 33 C9 8A  // :>b.u..4...d.3..
    8F60: 36 84 04 8A 16 4A 04 FE CA B8 01 06 E8 ED BD C3  // 6....J..........
    8F70: 2E 8E 1E 07 03 0A C0 75 0D E8 18 00 8B EC 89 5E  // .......u.......^
    8F80: 0E C6 46 1A 1A C3 3C 01 75 09 E8 41 00 8B EC C6  // ..F...<.u..A....
    8F90: 46 1A 1A C3 A0 8A 04 BF 06 90 2E 3A 05 72 04 BB  // F..........:.r..
    8FA0: FF FF C3 32 E4 D1 E0 03 F8 2E 8B 5D 04 0A DB 74  // ...2.......]...t
    8FB0: 05 0A FF 75 04 C3 86 FB C3 A0 10 04 24 30 3C 30  // ...u........$0<0
    8FC0: 74 06 F6 C3 01 75 EF C3 F6 C3 01 74 E9 C3 BF 06  // t....u.....t....
    8FD0: 90 2E 8A 0D 32 C0 83 C7 04 2E 3B 1D 74 12 86 FB  // ....2.....;.t...
    8FE0: 2E 3B 1D 74 0B 83 C7 02 FE C0 38 C8 7E EB B0 FF  // .;.t......8.~...
    8FF0: A2 8A 04 C3 BB 08 00 F6 06 89 04 02 74 0E BB 07  // ............t...
    9000: 00 BA CC 03 EC A8 01 74 18 BB 08 00 BA B4 03 E8  // .......t........
    9010: DF EC 74 21 B7 01 E8 8C E9 80 FA D4 74 17 86 FB  // ..t!........t...
    9020: C3 BA D4 03 E8 CA EC 74 0C B7 02 E8 77 E9 80 FA  // .......t....w...
    9030: B4 74 02 86 FB C3 0F 08 0F 08 0F 08 0F 08 03 01  // .t..............
    9040: 03 01 01 01 00 08 01 01 01 01 01 01 01 01 0F 01  // ................
    9050: 0F 08 0F 04 00 02 0F 02 01 01 0F 01 FF 01 FF E0  // ................
    9060: 0F 00 00 00 00 07 02 08 FF 0E 00 00 3F 00 10 01  // ............?...
    9070: 08 00 00 00 00 01 00 02 02 01 00 04 04 01 00 05  // ................
    9080: 02 05 00 06 01 06 05 06 00 08 01 08 00 07 02 07  // ................
    9090: 06 07 CA 00 34 00 90 00 96 00 00 00 00 00 00 00  // ....4...........
    90A0: 5F 57 C3 90 50 66 52 E8 F4 FF FF FF 81 EF 10 00  // _W..PfR.........
    90B0: 00 00 2E 8B 07 66 BA F8 0C EF 66 BA FC 0C ED 32  // .....f....f....2
    90C0: C0 66 8B F8 66 5A 58 C3 66 B8 4F 03 66 52 66 56  // .f..fZX.f.O.fRfV
    90D0: 53 57 50 0A FF 75 44 E8 C8 FF FF FF 66 33 F6 66  // SWP..uD.....f3.f
    90E0: BB 53 00 E8 48 00 00 00 C1 E8 10 F6 C4 40 75 2B  // .S..H........@u+
    90F0: 66 81 E2 FF 02 66 D1 E2 66 8B C2 66 40 C1 E0 10  // f....f..f..f@...
    9100: 66 8B C2 66 BB 13 00 E8 30 00 00 00 66 BB 12 00  // f..f....0...f...
    9110: E8 27 00 00 00 66 58 32 E4 66 50 58 5F 5B 66 5E  // .'...fX2.fPX_[f^
    9120: 66 5A C3 90 66 B8 4F 03 C3 90 66 B8 4F 03 C3 90  // fZ..f.O...f.O...
    9130: 66 52 E8 11 00 00 00 ED 66 5A C3 90 66 52 E8 05  // fR......fZ..fR..
    9140: 00 00 00 EF 66 5A C3 90 66 8B D7 50 33 C0 66 8B  // ....fZ..f..P3.f.
    9150: C3 66 03 C6 C1 E0 02 EF 66 83 C2 04 58 C3 08 39  // .f......f...X..9
    9160: FB 38 FB 38 FB 38 E6 38 E6 38 E6 38 E6 38 28 35  // .8.8.8.8.8.8.8(5
    9170: 9F 35 C9 35 0A 37 09 37 09 37 4F 37 B4 37 E4 37  // .5.5.7.7.7O7.7.7
    9180: A1 38 CA 38 CA 38 41 37 34 37 34 37 34 37 34 37  // .8.8.8A747474747
    9190: 34 37 4F 37 B4 37 E4 37 A1 38 CF 38 15 39 CA 38  // 47O7.7.7.8.8.9.8
    91A0: CA 38 FF FF FF FF FF FF 00 00 FF FF 00 00 FF FF  // .8..............
    91B0: 00 00 FF 00 00 00 FF 00 00 00 FF 00 00 00 FF 00  // ................
    91C0: 00 00 00 00 08 10 00 08 10 18 00 08 10 18 2C 33  // ..............,3
    91D0: 01 2C 33 02 3A 47 03 1A 47 03 51 34 03 05 34 03  // .,3.:G..G.Q4..4.
    91E0: 2D 33 04 46 33 04 56 33 04 2C 33 03 00 00 00 00  // -3.F3.V3.,3.....
    91F0: D9 3A 00 02 D9 3A 01 02 D9 3A 02 02 D9 3A 03 02  // .:...:...:...:..
    9200: D9 3A 04 02 D9 3A 05 02 D3 3C 00 02 D3 3C 01 02  // .:...:...<...<..
    9210: D3 3C 02 02 D3 3C 03 02 D3 3C 04 02 D3 3C 05 02  // .<...<...<...<..
    9220: 08 3D 00 02 08 3D 01 02 08 3D 02 02 08 3D 03 02  // .=...=...=...=..
    9230: 08 3D 04 02 08 3D 05 02 43 3F 00 02 43 3F 01 02  // .=...=..C?..C?..
    9240: 43 3F 02 02 43 3F 03 02 43 3F 04 02 43 3F 05 02  // C?..C?..C?..C?..
    9250: 43 3F 00 02 43 3F 01 02 43 3F 02 02 43 3F 03 02  // C?..C?..C?..C?..
    9260: 43 3F 04 02 43 3F 05 02 0A 3E 00 02 0A 3E 01 02  // C?..C?...>...>..
    9270: 0A 3E 02 02 0A 3E 03 02 0A 3E 04 02 0A 3E 05 02  // .>...>...>...>..
    9280: 46 3E 00 02 46 3E 01 02 46 3E 02 02 46 3E 03 02  // F>..F>..F>..F>..
    9290: 46 3E 04 02 46 3E 05 02 B7 3D 00 02 B7 3D 01 02  // F>..F>...=...=..
    92A0: B7 3D 02 02 B7 3D 03 02 B7 3D 04 02 B7 3D 05 02  // .=...=...=...=..
    92B0: EB 3D 00 02 EB 3D 01 02 EB 3D 02 02 EB 3D 03 02  // .=...=...=...=..
    92C0: EB 3D 04 02 EB 3D 05 02 9B 41 00 00 CE 41 01 00  // .=...=...A...A..
    92D0: CE 41 02 00 BB 41 00 00 A9 40 00 02 A2 3E 00 02  // .A...A...@...>..
    92E0: A2 3E 01 02 A2 3E 02 02 A2 3E 03 02 A2 3E 04 02  // .>...>...>...>..
    92F0: A2 3E 05 02 C1 40 00 02 16 43 05 00 16 43 01 00  // .>...@...C...C..
    9300: 16 43 00 00 16 43 02 00 57 43 00 00 57 43 02 00  // .C...C..WC..WC..
    9310: 9C 43 00 00 2C 40 00 02 2C 40 01 02 2C 40 02 02  // .C..,@..,@..,@..
    9320: 2C 40 03 02 2C 40 04 02 2C 40 05 02 E8 41 00 00  // ,@..,@..,@...A..
    9330: 10 42 00 00 91 42 00 00 0C 43 00 00 F0 3E 00 02  // .B...B...C...>..
    9340: F0 3E 01 02 F0 3E 02 02 F0 3E 03 02 F0 3E 04 02  // .>...>...>...>..
    9350: F0 3E 05 02 0B 43 00 01 0B 43 00 01 0F 3C 00 02  // .>...C...C...<..
    9360: 0F 3C 01 02 0F 3C 02 02 0F 3C 03 02 0F 3C 04 02  // .<...<...<...<..
    9370: 0F 3C 05 02 30 42 00 00 0C 43 00 00 0C 43 00 00  // .<..0B...C...C..
    9380: 0C 43 00 00 41 41 00 00 33 3D 00 02 33 3D 01 02  // .C..AA..3=..3=..
    9390: 33 3D 02 02 33 3D 03 02 33 3D 04 02 33 3D 05 02  // 3=..3=..3=..3=..
    93A0: 62 3D 00 02 62 3D 01 02 62 3D 02 02 62 3D 03 02  // b=..b=..b=..b=..
    93B0: 62 3D 04 02 62 3D 05 02 98 3D 00 02 98 3D 01 02  // b=..b=...=...=..
    93C0: 98 3D 02 02 98 3D 03 02 98 3D 04 02 98 3D 05 02  // .=...=...=...=..
    93D0: 53 42 00 00 76 42 00 00 34 3E 01 02 34 3E 02 02  // SB..vB..4>..4>..
    93E0: 90 3E 01 02 90 3E 02 02 A6 00 02 01 04 A4 00 00  // .>...>..........
    93F0: 00 00 00 00 DA C2 00 00 72 A4 00 00 00 00 3A AD  // ........r.....:.
    9400: 00 00 00 00 04 AE 22 B3 00 00 00 00 00 00 00 00  // ......".........
    9410: 00 00 BE A4 F6 B5 12 A5 64 A5 9C AC 18 AD 30 AD  // ........d.....0.
    9420: 4E A4 00 00 00 00 00 00 00 00 00 00 00 00 82 B6  // N...............
    9430: F4 B6 34 B7 00 00 78 B7 00 00 E8 BA 00 00 48 B8  // ..4...x.......H.
    9440: 22 BA B4 BB 06 BD 48 BD C0 CF 00 00 00 00 60 BD  // ".....H.......`.
    9450: 26 BF 88 CD 00 00 F4 CE 30 BF 00 00 52 C1 00 00  // &.......0...R...
    9460: 00 00 00 00 98 C1 D2 C2 00 00 00 00 00 00 00 00  // ................
    9470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9480: 00 00 CE D1 16 C6 5C C7 E8 CA 2C CD 00 00 4A 00  // ......\...,...J.
    9490: 02 01 00 00 00 00 00 00 70 94 38 95 80 95 84 98  // ........p.8.....
    94A0: A4 A2 BC A3 00 00 00 00 E0 98 EC 9C 50 9D D8 A3  // ............P...
    94B0: C4 9D 00 00 C4 A1 00 00 00 00 00 00 00 00 D8 A1  // ................
    94C0: 66 A2 00 00 00 00 00 00 6C A2 00 00 00 00 EC 98  // f.......l.......
    94D0: 00 00 00 00 00 00 00 00 C8 00 02 01 D6 09 80 02  // ................
    94E0: A0 00 E0 01 2D 00 10 00 60 00 0A 00 02 00 00 00  // ....-...`.......
    94F0: 00 00 08 08 06 00 12 3C A0 0F 20 03 00 01 58 02  // .......<.. ...X.
    9500: 1C 00 28 00 80 00 01 00 04 00 00 00 00 00 00 00  // ..(.............
    9510: 00 00 6A 3C 64 19 00 04 40 01 00 03 26 00 18 00  // ..j<d...@...&...
    9520: 88 00 03 00 06 00 00 00 00 00 00 00 06 00 55 3C  // ..............U<
    9530: 30 2A 00 05 08 02 C0 03 28 00 60 00 70 00 01 00  // 0*......(.`.p...
    9540: 03 00 00 00 00 00 00 00 00 00 E9 3C 30 2A 00 05  // ...........<0*..
    9550: 98 01 00 04 2A 00 30 00 70 00 01 00 03 00 00 00  // ....*.0.p.......
    9560: 00 00 00 00 00 00 EA 3C 8F 2F 78 05 D0 01 1A 04  // .......<./x.....
    9570: 27 00 58 00 90 00 03 00 04 00 00 00 00 00 00 00  // '.X.............
    9580: 02 00 EB 3C 48 3F 40 06 30 02 B0 04 32 00 40 00  // ...<H?@.0...2.@.
    9590: C0 00 01 00 03 00 00 00 00 00 00 00 00 00 EC 3C  // ...............<
    95A0: 48 00 03 01 0B 00 02 10 20 4E 00 00 20 4E 00 00  // H....... N.. N..
    95B0: 01 00 00 00 D8 2C 00 00 4C 00 00 00 00 00 00 00  // .....,..L.......
    95C0: 00 00 00 00 00 00 00 00 F4 00 00 00 00 00 00 00  // ................
    95D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    95E0: 00 00 00 00 00 00 00 00 04 03 02 01 00 00 00 00  // ................
    95F0: 00 2A 00 2A 00 00 2A 2A 2A 00 00 2A 00 2A 2A 15  // .*.*..***..*.**.
    9600: 00 2A 2A 2A 15 15 15 15 15 3F 15 3F 15 15 3F 3F  // .***.....?.?..??
    9610: 3F 15 15 3F 15 3F 3F 3F 15 3F 3F 3F 00 00 00 05  // ?..?.???.???....
    9620: 05 05 08 08 08 0B 0B 0B 0E 0E 0E 11 11 11 14 14  // ................
    9630: 14 18 18 18 1C 1C 1C 20 20 20 24 24 24 28 28 28  // .......   $$$(((
    9640: 2D 2D 2D 32 32 32 38 38 38 3F 3F 3F 00 00 3F 10  // ---222888???..?.
    9650: 00 3F 1F 00 3F 2F 00 3F 3F 00 3F 3F 00 2F 3F 00  // .?..?/.??.??./?.
    9660: 1F 3F 00 10 3F 00 00 3F 10 00 3F 1F 00 3F 2F 00  // .?..?..?..?..?/.
    9670: 3F 3F 00 2F 3F 00 1F 3F 00 10 3F 00 00 3F 00 00  // ??./?..?..?..?..
    9680: 3F 10 00 3F 1F 00 3F 2F 00 3F 3F 00 2F 3F 00 1F  // ?..?..?/.??./?..
    9690: 3F 00 10 3F 1F 1F 3F 27 1F 3F 2F 1F 3F 37 1F 3F  // ?..?..?'.?/.?7.?
    96A0: 3F 1F 3F 3F 1F 37 3F 1F 2F 3F 1F 27 3F 1F 1F 3F  // ?.??.7?./?.'?..?
    96B0: 27 1F 3F 2F 1F 3F 37 1F 3F 3F 1F 37 3F 1F 2F 3F  // '.?/.?7.??.7?./?
    96C0: 1F 27 3F 1F 1F 3F 1F 1F 3F 27 1F 3F 2F 1F 3F 37  // .'?..?..?'.?/.?7
    96D0: 1F 3F 3F 1F 37 3F 1F 2F 3F 1F 27 3F 2D 2D 3F 31  // .??.7?./?.'?--?1
    96E0: 2D 3F 36 2D 3F 3A 2D 3F 3F 2D 3F 3F 2D 3A 3F 2D  // -?6-?:-??-??-:?-
    96F0: 36 3F 2D 31 3F 2D 2D 3F 31 2D 3F 36 2D 3F 3A 2D  // 6?-1?--?1-?6-?:-
    9700: 3F 3F 2D 3A 3F 2D 36 3F 2D 31 3F 2D 2D 3F 2D 2D  // ??-:?-6?-1?--?--
    9710: 3F 31 2D 3F 36 2D 3F 3A 2D 3F 3F 2D 3A 3F 2D 36  // ?1-?6-?:-??-:?-6
    9720: 3F 2D 31 3F 00 00 1C 07 00 1C 0E 00 1C 15 00 1C  // ?-1?............
    9730: 1C 00 1C 1C 00 15 1C 00 0E 1C 00 07 1C 00 00 1C  // ................
    9740: 07 00 1C 0E 00 1C 15 00 1C 1C 00 15 1C 00 0E 1C  // ................
    9750: 00 07 1C 00 00 1C 00 00 1C 07 00 1C 0E 00 1C 15  // ................
    9760: 00 1C 1C 00 15 1C 00 0E 1C 00 07 1C 0E 0E 1C 11  // ................
    9770: 0E 1C 15 0E 1C 18 0E 1C 1C 0E 1C 1C 0E 18 1C 0E  // ................
    9780: 15 1C 0E 11 1C 0E 0E 1C 11 0E 1C 15 0E 1C 18 0E  // ................
    9790: 1C 1C 0E 18 1C 0E 15 1C 0E 11 1C 0E 0E 1C 0E 0E  // ................
    97A0: 1C 11 0E 1C 15 0E 1C 18 0E 1C 1C 0E 18 1C 0E 15  // ................
    97B0: 1C 0E 11 1C 14 14 1C 16 14 1C 18 14 1C 1A 14 1C  // ................
    97C0: 1C 14 1C 1C 14 1A 1C 14 18 1C 14 16 1C 14 14 1C  // ................
    97D0: 16 14 1C 18 14 1C 1A 14 1C 1C 14 1A 1C 14 18 1C  // ................
    97E0: 14 16 1C 14 14 1C 14 14 1C 16 14 1C 18 14 1C 1A  // ................
    97F0: 14 1C 1C 14 1A 1C 14 18 1C 14 16 1C 00 00 10 04  // ................
    9800: 00 10 08 00 10 0C 00 10 10 00 10 10 00 0C 10 00  // ................
    9810: 08 10 00 04 10 00 00 10 04 00 10 08 00 10 0C 00  // ................
    9820: 10 10 00 0C 10 00 08 10 00 04 10 00 00 10 00 00  // ................
    9830: 10 04 00 10 08 00 10 0C 00 10 10 00 0C 10 00 08  // ................
    9840: 10 00 04 10 08 08 10 0A 08 10 0C 08 10 0E 08 10  // ................
    9850: 10 08 10 10 08 0E 10 08 0C 10 08 0A 10 08 08 10  // ................
    9860: 0A 08 10 0C 08 10 0E 08 10 10 08 0E 10 08 0C 10  // ................
    9870: 08 0A 10 08 08 10 08 08 10 0A 08 10 0C 08 10 0E  // ................
    9880: 08 10 10 08 0E 10 08 0C 10 08 0A 10 0B 0B 10 0C  // ................
    9890: 0B 10 0D 0B 10 0F 0B 10 10 0B 10 10 0B 0F 10 0B  // ................
    98A0: 0D 10 0B 0C 10 0B 0B 10 0C 0B 10 0D 0B 10 0F 0B  // ................
    98B0: 10 10 0B 0F 10 0B 0D 10 0B 0C 10 0B 0B 10 0B 0B  // ................
    98C0: 10 0C 0B 10 0D 0B 10 0F 0B 10 10 0B 0F 10 0B 0D  // ................
    98D0: 10 0B 0C 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    98E0: 00 00 00 00 00 00 00 00 00 00 00 00 5C 00 02 01  // ............\...
    98F0: 4B 3F 80 07 36 01 38 04 82 00 10 00 10 00 03 00  // K?..6.8.........
    9900: 0E 00 35 01 AE 00 00 00 06 00 00 3C C8 00 00 00  // ..5........<....
    9910: 02 00 34 21 00 00 B8 0B 00 00 00 00 7D 00 00 02  // ..4!........}...
    9920: 0B 0A 82 41 00 FF FF 00 00 00 00 00 00 00 00 00  // ...A............
    9930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9940: 00 00 00 00 00 00 00 00 0C 00 02 01 00 00 00 00  // ................
    9950: 00 00 00 00 00 04 01 0B 00 00 00 00 00 00 00 00  // ................
    9960: 00 00 00 00 00 00 00 00 77 01 00 00 00 00 00 00  // ........w.......
    9970: 00 00 00 00 00 00 00 00 00 00 00 00 C8 00 1A 01  // ................
    9980: 00 00 00 00 00 00 00 00 00 00 00 00 8C 00 01 01  // ................
    9990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    99A0: 02 00 10 01 14 31 00 00 00 00 E4 00 00 00 00 00  // .....1..........
    99B0: 80 00 20 02 0C 32 01 01 00 00 E4 00 00 02 00 00  // .. ..2..........
    99C0: 08 00 10 02 13 31 03 03 00 00 E4 00 00 03 00 00  // .....1..........
    99D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    99E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    99F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9A00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9A10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9A20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9A30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9A40: 00 00 FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9A50: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9A60: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9A70: FF FF FF FF 00 00 00 00 00 00 FF FF FF FF FF FF  // ................
    9A80: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9A90: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9AA0: FF FF FF FF FF FF FF FF FF FF FF FF 00 00 00 00  // ................
    9AB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9AC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9AD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9AE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9AF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9B90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9BA0: 00 00 00 00 00 00 00 00 00 00 FF FF FF FF FF FF  // ................
    9BB0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9BC0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9BD0: FF FF FF FF FF FF FF FF FF FF FF FF 00 00 00 00  // ................
    9BE0: 00 00 FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9BF0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9C00: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9C10: FF FF FF FF 00 00 00 00 00 00 FF FF FF FF FF FF  // ................
    9C20: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9C30: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    9C40: FF FF FF FF FF FF FF FF FF FF FF FF 00 00 00 00  // ................
    9C50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9C60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9C70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9C80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9C90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9CA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9CB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9CC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9CD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9CE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9CF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9D00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9D10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9D20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9D30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9D40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9D50: 00 00 00 00 64 00 02 01 B5 5D 00 00 00 00 01 00  // ....d....]......
    9D60: B5 5D 00 00 08 08 02 00 B5 5D 00 00 10 10 03 00  // .].......]......
    9D70: B5 5D 00 00 18 14 04 00 B5 5D 00 00 1A 18 05 00  // .].......]......
    9D80: B5 5D 00 00 1C 1C 06 00 91 5D 00 00 08 08 90 00  // .].......]......
    9D90: 95 5D 00 00 08 08 91 00 99 5D 00 00 08 08 92 00  // .].......]......
    9DA0: 9D 5D 00 00 08 08 93 00 A1 5D 00 00 08 08 94 00  // .].......]......
    9DB0: A5 5D 00 00 08 08 95 00 74 00 01 01 10 01 06 12  // .]......t.......
    9DC0: 11 01 16 12 13 01 06 6A 14 01 16 6A 16 01 06 55  // .......j...j...U
    9DD0: 17 01 16 55 19 01 06 EA 1A 01 16 EA 65 01 16 E9  // ...U........e...
    9DE0: 66 01 0A E9 21 01 0A 12 22 01 0A 6A 23 01 0A 55  // f...!..."..j#..U
    9DF0: 24 01 0A EA 45 01 16 EB 46 01 0A EB 75 01 16 EC  // $...E...F...u...
    9E00: 76 01 0A EC D2 01 16 70 D4 01 0A 70 D8 01 16 71  // v......p...p...q
    9E10: D9 01 0A 71 E2 01 16 72 E4 01 0A 72 E8 01 16 73  // ...q...r...r...s
    9E20: E9 01 0A 73 F5 01 16 74 F6 01 0A 74 00 04 09 01  // ...s...t...t....
    9E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9EC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9ED0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9EE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9EF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9F90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9FA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9FB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9FC0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9FD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9FE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    9FF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A0A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A0B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A0C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A0D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A0E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A0F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A1A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A1B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A1C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A1D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A1E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A1F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    A220: 00 00 00 00 00 00 00 00 00 00 00 00 14 00 02 01  // ................
    A230: 02 00 08 00 80 00 00 02 00 04 00 08 40 00 FF FF  // ............@...
    A240: 8D 00 01 04 8A 00 04 00 14 31 48 00 1E 21 00 00  // .........1H..!..
    A250: 63 00 00 00 02 00 00 00 0C 32 51 00 1E 22 00 00  // c........2Q.."..
    A260: 6A 00 00 00 80 00 00 00 13 31 5A 00 20 21 00 00  // j........1Z. !..
    A270: 71 00 00 00 08 00 00 00 03 71 78 00 00 00 00 00  // q........qx.....
    A280: 00 00 00 00 00 00 00 00 01 04 90 00 02 04 01 00  // ................
    A290: FF 01 04 91 00 02 04 02 00 FF 01 04 92 00 02 04  // ................
    A2A0: 03 00 FF 14 06 0F 00 00 00 FF 14 06 0B 00 00 00  // ................
    A2B0: FF 14 06 0B 01 00 00 FF 10 0A 01 02 04 03 00 00  // ................
    A2C0: 00 00 11 0A 90 91 93 92 00 00 00 00 FF 00 05 00  // ................
    A2D0: 01 01 00 00 38 00 04 02 04 00 00 00 60 EA 00 00  // ....8.......`...
    A2E0: C0 12 60 09 00 00 00 00 00 00 00 00 7C 01 4E 0C  // ..`.........|.N.
    A2F0: 01 01 00 00 55 00 00 00 C0 12 00 00 00 01 04 01  // ....U...........
    A300: 00 04 04 00 00 00 00 00 00 00 00 00 18 01 03 02  // ................
    A310: 0A 00 34 00 04 01 0C 00 FF FF FF 00 02 0F 00 00  // ..4.............
    A320: 00 5F 00 08 40 9C 00 00 03 0F 00 00 00 5F 00 08  // ._..@........_..
    A330: FF FF FF 00 03 0F 00 00 2A 57 20 10 00 00 00 00  // ........*W .....
    A340: 0F 00 05 00 CE 00 00 4B 00 00 80 01 3A 00 00 80  // .......K....:...
    A350: 02 1B 00 00 80 03 00 00 00 80 08 34 25 00 80 09  // ...........4%...
    A360: 1C 25 00 80 0A 00 1B 00 9F 10 14 3F 00 80 11 01  // .%.........?....
    A370: 38 00 9F 18 00 4A 00 9F 00 4B 00 00 80 01 3A 00  // 8....J...K....:.
    A380: 00 80 02 1B 00 00 80 03 00 00 00 80 08 34 25 00  // .............4%.
    A390: 80 09 1C 25 00 80 0A 00 1B 00 9F 10 14 3F 00 80  // ...%.........?..
    A3A0: 11 01 38 00 9F 18 00 4A 00 9F 00 4B 00 00 80 01  // ..8....J...K....
    A3B0: 3A 00 00 80 02 1B 00 00 80 03 00 00 00 80 08 34  // :..............4
    A3C0: 25 00 80 09 1C 25 00 80 0A 00 1B 00 9F 10 14 3F  // %....%.........?
    A3D0: 00 80 11 01 38 00 9F 18 00 4A 00 9F 00 4B 00 00  // ....8....J...K..
    A3E0: 80 01 3A 00 00 80 02 1B 00 00 80 03 00 00 00 80  // ..:.............
    A3F0: 08 34 25 00 80 09 1C 25 00 80 0A 00 1B 00 9F 10  // .4%....%........
    A400: 14 3F 00 80 11 01 38 00 9F 18 00 4A 00 9F 00 00  // .?....8....J....
    A410: 00 01 02 03 01 00 01 02 03 01 00 01 02 03 01 00  // ................
    A420: 01 02 03 01 1C 00 03 01 00 0A 00 00 00 00 00 00  // ................
    A430: 77 01 35 0C 10 27 00 00 FF 00 FF 00 FF 00 00 00  // w.5..'..........
    A440: 2C 00 02 02 00 09 01 02 08 01 02 02 64 C0 00 00  // ,...........d...
    A450: 65 C0 00 00 66 C0 00 00 67 C0 00 00 E8 C0 00 00  // e...f...g.......
    A460: A0 21 00 00 42 EC 00 00 10 27 00 00 4A 00 02 01  // .!..B....'..J...
    A470: 00 08 37 00 00 4B E5 00 04 49 43 00 4A 05 53 00  // ..7..K...IC.J.S.
    A480: 00 02 00 00 49 42 00 52 1A 52 19 52 16 52 18 52  // ....IB.R.R.R.R.R
    A490: 3D 02 05 02 00 02 00 00 52 0D 02 05 02 00 04 00  // =.......R.......
    A4A0: 00 55 00 03 52 15 0D 05 53 00 00 02 00 00 5B 52  // .U..R...S.....[R
    A4B0: 16 52 18 52 3D 5B 24 00 01 01 00 00 37 00 00 03  // .R.R=[$.....7...
    A4C0: 00 41 E3 0D 33 05 41 01 00 00 00 1B 05 41 0B 01  // .A..3.A......A..
    A4D0: 02 06 00 41 0D 25 1F 0E 03 5B 4B 00 01 01 00 00  // ...A.%...[K.....
    A4E0: 37 00 00 42 21 00 63 00 1F 00 63 01 39 00 63 03  // 7..B!.c...c.9.c.
    A4F0: 3F 00 63 02 45 00 5A 5A 5B 03 05 40 00 00 05 04  // ?.c.E.ZZ[..@....
    A500: 2D 19 40 00 15 05 40 02 01 02 0C 00 40 02 00 00  // -.@...@.....@...
    A510: 0D 00 5B 02 00 00 E3 0D 5B 02 00 00 E7 0D 5B 02  // ..[.....[.....[.
    A520: 00 00 E8 0D 5B 00 54 00 01 02 00 00 37 00 00 01  // ....[.T.....7...
    A530: 05 00 00 9B 62 01 00 54 00 01 00 01 05 00 00 93  // ....b..T........
    A540: 62 01 00 01 01 01 00 01 56 00 41 03 09 41 00 01  // b.......V.A..A..
    A550: 05 00 00 83 62 01 00 01 02 01 00 41 01 05 00 00  // ....b......A....
    A560: 9B 62 01 00 3C 25 01 00 00 44 36 00 01 05 00 00  // .b..<%...D6.....
    A570: 93 62 01 00 02 00 01 01 00 5B 52 00 02 01 08 08  // .b.......[R.....
    A580: 37 00 00 3D 25 00 00 44 14 00 55 38 00 5B 01 05  // 7..=%..D..U8.[..
    A590: 00 00 61 60 01 00 3C E5 01 00 FF 44 10 00 4A E5  // ..a`..<....D..J.
    A5A0: 01 00 80 44 24 00 01 05 00 00 62 60 01 00 01 01  // ...D$.....b`....
    A5B0: 01 00 01 56 00 40 03 A9 40 00 01 05 00 00 61 60  // ...V.@..@.....a`
    A5C0: 01 00 01 02 01 00 40 02 E5 00 01 5B 37 07 01 01  // ......@....[7...
    A5D0: 00 00 37 00 00 02 05 00 01 00 00 00 52 06 01 05  // ..7.........R...
    A5E0: 80 29 00 F4 00 00 01 05 00 00 2C A8 01 00 01 05  // .)........,.....
    A5F0: 01 00 00 F4 00 00 1A 05 00 04 2C 05 00 FF F3 00  // ..........,.....
    A600: 00 01 01 81 29 00 01 05 00 00 2D A8 01 00 01 01  // ....).....-.....
    A610: 01 00 00 01 05 85 29 00 00 3D 00 01 05 00 00 31  // ......)..=.....1
    A620: A8 01 00 01 05 01 00 00 00 3D 00 14 05 00 06 0E  // .........=......
    A630: 0D 00 3F 00 2C 05 00 01 00 00 00 01 01 86 29 00  // ..?.,.........).
    A640: 01 05 00 00 32 A8 01 00 01 01 01 00 00 01 05 50  // ....2..........P
    A650: 28 EB 0F E4 60 01 05 00 00 90 A6 01 00 01 05 01  // (...`...........
    A660: 00 EB 0F E4 60 01 05 6E 29 00 00 00 00 01 05 00  // ....`..n).......
    A670: 00 1A A8 01 00 01 05 01 00 00 00 00 00 01 05 59  // ...............Y
    A680: 28 FF 21 10 00 01 05 00 00 99 A6 01 00 01 05 01  // (.!.............
    A690: 00 FF 21 10 00 01 05 5A 28 FF 25 10 00 01 05 00  // ..!....Z(.%.....
    A6A0: 00 9A A6 01 00 01 05 01 00 FF 25 10 00 01 05 58  // ..........%....X
    A6B0: 28 05 00 00 00 01 05 00 00 98 A6 01 00 01 05 01  // (...............
    A6C0: 00 05 00 00 00 01 05 72 29 FF FF 0F 00 01 05 00  // .......r).......
    A6D0: 00 1E A8 01 00 01 05 01 00 FF FF 0F 00 01 05 73  // ...............s
    A6E0: 29 02 00 00 00 01 05 00 00 10 A8 01 00 01 00 64  // )..............d
    A6F0: 29 01 00 01 05 00 00 11 A8 01 00 01 00 65 29 01  // )............e).
    A700: 00 01 05 00 00 12 A8 01 00 01 00 66 29 01 00 01  // ...........f)...
    A710: 05 00 00 13 A8 01 00 01 00 67 29 01 00 01 05 00  // .........g).....
    A720: 00 14 A8 01 00 01 00 68 29 01 00 01 05 00 00 15  // .......h).......
    A730: A8 01 00 01 00 69 29 01 00 01 05 00 00 16 A8 01  // .....i).........
    A740: 00 01 00 6A 29 01 00 01 05 00 00 17 A8 01 00 01  // ...j)...........
    A750: 00 6B 29 01 00 03 00 40 01 00 01 02 74 29 40 01  // .k)....@....t)@.
    A760: 05 00 00 20 A8 01 00 01 02 01 00 40 03 00 41 81  // ... .......@..A.
    A770: 29 33 00 41 80 29 2D 02 40 41 01 02 75 29 40 01  // )3.A.)-.@A..u)@.
    A780: 05 00 00 21 A8 01 00 01 02 01 00 40 01 05 F2 2A  // ...!.......@...*
    A790: BF 3F 3F 3F 01 05 FA 2A F0 BF E0 0D 01 05 F9 2A  // .???...*.......*
    A7A0: 1F 00 00 00 01 05 1A 27 01 00 00 00 01 05 0F 2A  // .......'.......*
    A7B0: 24 0F 00 00 01 05 EF 2A 00 F0 00 00 01 05 0A 2A  // $......*.......*
    A7C0: 04 06 08 20 01 05 48 2A 00 F0 3F FF 66 FF 2D 0D  // ... ..H*..?.f.-.
    A7D0: 42 CB 05 03 04 40 00 00 3E 05 40 00 00 00 00 44  // B....@..>.@....D
    A7E0: 2A 02 01 04 00 00 00 00 01 04 01 00 04 00 2D 0D  // *.............-.
    A7F0: 42 08 00 43 07 02 01 05 17 74 11 01 03 00 03 00  // B..C.....t......
    A800: 40 26 74 01 05 17 74 15 01 03 00 03 00 41 26 74  // @&t...t......A&t
    A810: 4C 05 40 01 00 00 00 44 B0 02 4C 05 41 FF 00 00  // L.@....D..L.A...
    A820: 00 49 B0 02 4C 05 40 F0 00 00 00 44 89 02 01 02  // .I..L.@....D....
    A830: 34 2A 40 01 02 35 2A 41 01 05 00 00 34 A1 01 00  // 4*@..5*A....4...
    A840: 01 02 01 00 40 01 05 00 00 35 A1 01 00 01 02 01  // ....@....5......
    A850: 00 41 43 33 03 01 02 36 2A 40 01 02 37 2A 41 01  // .AC3...6*@..7*A.
    A860: 05 00 00 36 A1 01 00 01 02 01 00 40 01 05 00 00  // ...6.......@....
    A870: 37 A1 01 00 01 02 01 00 41 43 33 03 01 05 17 74  // 7.......AC3....t
    A880: 19 01 03 00 03 00 40 26 74 01 05 17 74 1D 01 03  // ......@&t...t...
    A890: 00 03 00 41 26 74 4C 05 40 01 00 00 00 44 AC 03  // ...A&tL.@....D..
    A8A0: 4C 05 41 FF 00 00 00 49 AC 03 4C 05 40 F0 00 00  // L.A....I..L.@...
    A8B0: 00 44 0F 03 01 02 34 2A 40 01 02 35 2A 41 01 05  // .D....4*@..5*A..
    A8C0: 00 00 34 A1 01 00 01 02 01 00 40 01 05 00 00 35  // ..4.......@....5
    A8D0: A1 01 00 01 02 01 00 41 43 33 03 01 02 36 2A 40  // .......AC3...6*@
    A8E0: 01 02 37 2A 41 01 05 00 00 36 A1 01 00 01 02 01  // ..7*A....6......
    A8F0: 00 40 01 05 00 00 37 A1 01 00 01 02 01 00 41 01  // .@....7.......A.
    A900: 00 38 2A 6D 70 03 00 40 41 70 09 05 40 01 00 00  // .8*mp..@Ap..@...
    A910: 00 75 05 40 00 00 00 00 6F 05 40 00 00 00 00 5C  // .u.@....o.@....\
    A920: 02 43 2A FE FF FF FF 40 01 05 00 00 43 A1 01 00  // .C*....@....C...
    A930: 5C 02 01 00 FE FF FF FF 40 03 05 40 00 01 00 00  // \.......@..@....
    A940: 03 00 41 41 70 75 05 41 18 00 00 00 33 02 40 41  // ..AApu.A....3.@A
    A950: 21 05 40 02 00 00 00 6F 05 40 07 00 00 00 5C 02  // !.@....o.@....\.
    A960: 43 2A 7F 00 FF FF 40 01 05 00 00 43 A1 01 00 5C  // C*....@....C...\
    A970: 02 01 00 7F 00 FF FF 40 66 FF 2D 0D 42 BF 04 03  // .......@f.-.B...
    A980: 04 40 00 00 3E 05 40 00 00 00 00 44 10 04 3E 05  // .@..>.@....D..>.
    A990: 40 00 00 02 00 45 DD 03 15 05 40 02 01 02 0C 00  // @....E....@.....
    A9A0: 40 03 00 41 0D 00 43 E8 03 01 04 00 00 00 00 03  // @..A..C.........
    A9B0: 00 41 01 00 03 04 40 04 00 01 02 00 00 40 01 02  // .A....@......@..
    A9C0: 01 00 41 2D 05 40 00 77 01 00 01 02 00 00 40 01  // ..A-.@.w......@.
    A9D0: 02 01 00 41 2D 0D 42 08 00 43 B3 03 01 05 00 00  // ...A-.B..C......
    A9E0: 80 40 01 00 03 00 40 01 00 09 05 40 00 01 00 00  // .@....@....@....
    A9F0: 75 05 40 08 00 00 00 03 00 41 48 2A 01 02 57 00  // u.@......AH*..W.
    AA00: 41 09 05 41 00 01 00 00 01 02 58 00 41 75 05 41  // A..A......X.Au.A
    AA10: 08 00 00 00 01 02 59 00 41 2D 02 41 40 01 02 5A  // ......Y.A-.A@..Z
    AA20: 00 41 03 A2 40 41 01 02 5B 00 40 5C 02 47 2A FF  // .A..@A..[.@\.G*.
    AA30: FF FE FF 40 01 05 00 00 47 A1 01 00 5C 02 01 00  // ...@....G...\...
    AA40: FF FF FE FF 40 03 00 40 48 2A 09 05 40 01 00 00  // ....@..@H*..@...
    AA50: 00 75 05 40 00 00 00 00 21 05 40 05 00 00 00 2D  // .u.@....!.@....-
    AA60: 05 40 02 00 00 00 6F 05 40 0A 00 00 00 5C 02 47  // .@....o.@....\.G
    AA70: 2A FF E3 FF FF 40 01 05 00 00 47 A1 01 00 5C 02  // *....@....G...\.
    AA80: 01 00 FF E3 FF FF 40 5B 7A 78 02 00 40 01 00 5D  // ......@[zx..@..]
    AA90: 2A 00 00 00 40 05 00 75 2A 00 00 01 40 01 00 5E  // *...@..u*...@..^
    AAA0: 2A 00 00 01 40 05 00 76 2A 00 00 04 40 01 00 61  // *...@..v*...@..a
    AAB0: 2A 00 00 04 40 05 00 79 2A 00 00 05 40 01 00 62  // *...@..y*...@..b
    AAC0: 2A 00 00 05 40 05 00 7A 2A 00 00 08 40 01 00 65  // *...@..z*...@..e
    AAD0: 2A 00 00 0A 40 01 00 67 2A 00 00 0C 40 01 00 69  // *...@..g*...@..i
    AAE0: 2A 00 00 10 40 01 00 6B 2A 00 00 14 40 01 00 6D  // *...@..k*...@..m
    AAF0: 2A 00 00 15 40 01 00 6F 2A 00 00 1C 40 01 00 71  // *...@..o*...@..q
    AB00: 2A 00 00 1E 40 01 00 73 2A 00 00 08 40 05 00 7D  // *...@..s*...@..}
    AB10: 2A 00 00 0A 40 05 00 7F 2A 00 00 0C 40 05 00 81  // *...@...*...@...
    AB20: 2A 00 00 10 40 05 00 83 2A 00 00 14 40 05 00 85  // *...@...*...@...
    AB30: 2A 00 00 15 40 05 00 87 2A 00 00 1C 40 05 00 89  // *...@...*...@...
    AB40: 2A 00 00 1E 40 05 00 8B 2A 00 00 32 40 01 00 49  // *...@...*..2@..I
    AB50: 2A 00 00 33 40 01 00 4A 2A 00 00 34 40 01 00 4B  // *..3@..J*..4@..K
    AB60: 2A 00 00 35 40 01 00 4C 2A 00 00 36 40 01 00 4D  // *..5@..L*..6@..M
    AB70: 2A 00 00 3A 40 01 00 50 2A 00 00 3B 40 01 00 51  // *..:@..P*..;@..Q
    AB80: 2A 00 00 38 40 01 00 4E 2A 00 00 39 40 01 00 4F  // *..8@..N*..9@..O
    AB90: 2A 00 00 00 00 00 00 31 A0 01 00 81 F0 2F FF 34  // *......1...../.4
    ABA0: A0 01 00 81 F0 2F FF 04 A0 01 00 0A E0 5F FE 05  // ...../......._..
    ABB0: A0 01 00 6A E6 5F FE 0D A0 01 00 F0 E0 5F FE 13  // ...j._......._..
    ABC0: A0 01 00 FB E0 5F FE 02 A0 01 00 A8 EA 5F FE 1B  // ....._......._..
    ABD0: A0 01 00 09 E0 5F FE 03 A0 01 00 A8 EA 5F FE 06  // ....._......._..
    ABE0: A0 01 00 68 E6 5F FE 07 A0 01 00 68 E6 5F FE 08  // ...h._.....h._..
    ABF0: A0 01 00 68 E6 5F FE 4A A0 01 00 6B E6 5F FE 4B  // ...h._.J...k._.K
    AC00: A0 01 00 6B E6 5F FE 4C A0 01 00 6B E6 5F FE 4F  // ...k._.L...k._.O
    AC10: A0 01 00 CB EC 5F FE 50 A0 01 00 CB EC 5F FE 51  // ....._.P....._.Q
    AC20: A0 01 00 6B E6 5F FE 42 A0 01 00 A8 EA 5F FE 44  // ...k._.B....._.D
    AC30: A0 01 00 0A E0 5F 0A 47 A0 01 00 6A E6 5F FE 48  // ....._.G...j._.H
    AC40: A0 01 00 C8 EC 5F FE 49 A0 01 00 C8 EC 5F FE 4E  // ....._.I....._.N
    AC50: A0 01 00 68 E6 5F FE 5B A0 01 00 09 E0 5F FE 43  // ...h._.[....._.C
    AC60: A0 01 00 A8 EA 5F FE 45 A0 01 00 FA E0 5F FE 46  // ....._.E....._.F
    AC70: A0 01 00 69 E6 5F FE 83 A0 01 00 70 60 60 60 48  // ...i._.....p```H
    AC80: A1 01 00 00 00 3E FF F2 A1 01 00 BF 3F 3F 00 F5  // .....>......??..
    AC90: A1 01 00 01 00 00 00 F6 A1 01 00 02 20 00 80 F7  // ............ ...
    ACA0: A1 01 00 01 00 00 00 F8 A1 01 00 02 20 00 80 00  // ............ ...
    ACB0: A1 01 00 05 0A 54 51 01 A1 01 00 D5 55 55 55 02  // .....TQ.....UUU.
    ACC0: A1 01 00 05 9A F0 C7 03 A1 01 00 5F 55 55 55 EF  // ..........._UUU.
    ACD0: A1 01 00 07 E0 0C E0 EC A1 01 00 20 0F 11 00 F3  // ........... ....
    ACE0: A1 01 00 01 00 00 00 82 A3 01 00 00 00 01 00 80  // ................
    ACF0: A3 01 00 C9 09 00 00 93 A3 01 00 00 08 01 00 00  // ................
    AD00: 00 00 00 00 7B 00 02 01 00 00 37 00 00 3D 65 00  // ....{.....7..=e.
    AD10: 01 44 7A 00 56 00 40 03 21 40 00 21 25 40 C4 03  // .Dz.V.@.!@.!%@..
    AD20: 0A 48 40 01 05 29 3A 00 01 00 00 5C 05 A1 3A CF  // .H@..):....\..:.
    AD30: FF FF FF 20 00 00 00 5C 05 B4 3A CF FF FF FF 20  // ... ...\..:.... 
    AD40: 00 00 00 56 00 40 03 21 40 00 21 0D 40 1B 01 03  // ...V.@.!@.!.@...
    AD50: 0A 48 40 5C 05 5F 41 FC FF FF FF 00 00 00 08 56  // .H@\._A........V
    AD60: 00 40 03 21 40 00 21 25 40 80 03 0A 48 40 5C 05  // .@.!@.!%@...H@\.
    AD70: 01 50 FF FC FF FF 00 03 00 00 3A 00 00 5B 5B 00  // .P........:..[[.
    AD80: 17 00 02 01 00 00 01 05 60 0F 00 00 00 F4 01 05  // ........`.......
    AD90: 62 0F 00 00 00 00 5B 00 0A 00 02 01 00 00 37 00  // b.....[.......7.
    ADA0: 00 5B CA 00 02 01 04 04 37 00 00 66 0C 03 0C 41  // .[......7..f...A
    ADB0: 00 00 2D 0A 41 42 2D 0D 42 04 00 3D 24 00 06 00  // ..-.AB-.B..=$...
    ADC0: 44 31 00 2D 0D 42 08 00 3E 0A 42 41 45 19 00 55  // D1.-.B..>.BAE..U
    ADD0: 20 00 5B 56 00 43 03 24 43 05 00 03 04 46 00 00  //  .[V.C.$C....F..
    ADE0: 33 05 46 01 00 00 00 01 02 00 00 46 03 00 00 01  // 3.F........F....
    ADF0: 00 0D 02 01 00 44 2D 05 46 02 00 00 00 01 02 00  // .....D-.F.......
    AE00: 00 46 03 24 43 04 00 4B E5 00 01 49 AA 00 07 02  // .F.$C..K...I....
    AE10: 01 00 45 2D 05 46 01 00 00 00 01 02 00 00 46 4A  // ..E-.F........FJ
    AE20: 02 01 00 44 44 90 00 03 29 43 00 0E A2 00 44 43  // ...DD...)C....DC
    AE30: 98 00 03 29 43 00 08 A2 00 45 33 05 46 03 00 00  // ...)C....E3.F...
    AE40: 00 01 02 00 00 46 01 02 01 00 00 5B 0D 02 01 00  // .....F.....[....
    AE50: 44 01 04 00 00 00 00 3D A5 00 01 44 C4 00 07 02  // D......=...D....
    AE60: 01 00 45 43 C9 00 0D 02 01 00 44 5B 1D 05 01 07  // ..EC......D[....
    AE70: 0C 08 37 00 00 3D 25 01 FF 44 F7 04 3D 25 01 17  // ..7..=%..D..=%..
    AE80: 46 F3 04 3D 25 01 02 47 F3 04 3D 25 01 14 45 F7  // F..=%..G..=%..E.
    AE90: 04 3D 05 00 00 00 00 00 44 C3 02 4B E5 01 30 44  // .=......D..K..0D
    AEA0: 3D 00 08 E5 01 CF 43 42 00 5D E5 01 CF 10 66 1B  // =.....CB.]....f.
    AEB0: 56 00 02 3D A5 01 02 49 54 00 56 08 40 43 66 00  // V..=...IT.V.@Cf.
    AEC0: 3D A5 01 03 49 61 00 56 08 40 43 66 00 03 0C 40  // =...Ia.V.@Cf...@
    AED0: 18 00 3E 0D 40 00 00 44 75 00 03 0A 02 40 43 79  // ..>.@..Du....@Cy
    AEE0: 00 0E E5 01 80 4B E5 01 02 49 87 00 02 A9 02 02  // .....K...I......
    AEF0: 55 28 02 66 FF 2D 0D 42 09 05 03 39 40 01 09 0D  // U(.f.-.B...9@...
    AF00: 40 30 00 1B 0D 40 04 21 0D 40 05 00 2D 0A 42 40  // @0...@.!.@..-.B@
    AF10: 03 04 40 00 00 27 05 40 10 27 00 00 02 A2 03 40  // ..@..'.@.'.....@
    AF20: 02 E4 03 04 00 56 00 00 56 00 01 02 0D 03 40 01  // .....V..V.....@.
    AF30: 02 65 01 01 20 05 00 0A 00 00 00 03 02 46 40 3D  // .e.. ........F@=
    AF40: 05 00 80 8D 5B 00 47 EF 00 3D A5 03 64 45 E8 00  // ....[.G..=..dE..
    AF50: 02 65 03 03 0E E5 01 08 55 28 01 4B E5 01 08 44  // .e......U(.K...D
    AF60: FA 00 1B 05 46 01 3E 05 46 A0 2F C5 01 48 0F 01  // ....F.>.F./..H..
    AF70: 2C 65 01 01 15 05 46 01 43 FA 00 14 2D 01 05 3D  // ,e....F.C...-..=
    AF80: A5 01 00 44 30 01 4B E5 01 80 49 30 01 3D A5 03  // ...D0.K...I0.=..
    AF90: 64 45 30 01 0E 25 03 01 15 05 46 01 03 05 01 00  // dE0..%....F.....
    AFA0: 00 01 00 4B E5 01 80 44 92 01 27 04 46 00 00 3E  // ...K...D..'.F..>
    AFB0: 05 41 00 00 00 00 44 A4 01 03 04 40 00 00 03 02  // .A....D....@....
    AFC0: 00 41 27 02 40 41 03 02 40 00 3E 05 41 00 00 00  // .A'.@A..@.>.A...
    AFD0: 00 49 52 01 7C 05 00 00 00 01 00 7E 04 40 00 00  // .IR.|......~.@..
    AFE0: 7C 04 40 00 00 7E 02 40 00 03 02 01 40 3E 05 01  // |.@..~.@....@>..
    AFF0: 33 F3 00 00 48 92 01 03 05 01 00 00 01 00 27 04  // 3...H.........'.
    B000: 46 00 00 7C 02 01 41 7E 04 40 00 00 03 0A 00 40  // F..|..A~.@.....@
    B010: 27 04 46 00 00 03 8A 00 40 56 18 01 4B E5 01 80  // '.F.....@V..K...
    B020: 49 2F 02 7C 02 02 00 7E 05 40 A0 86 01 00 03 01  // I/.|...~.@......
    B030: 41 03 09 05 41 03 00 00 00 6F 02 40 41 7C 05 40  // A...A....o.@A|.@
    B040: 4E 0C 00 00 7E 04 40 00 00 27 05 40 05 00 00 00  // N...~.@..'.@....
    B050: 3E 05 40 00 00 00 00 49 F2 01 03 25 40 01 03 8A  // >.@....I...%@...
    B060: 01 40 21 05 40 05 00 00 00 7C 04 40 00 00 7E 05  // .@!.@....|.@..~.
    B070: 40 4E 0C 00 00 03 01 41 03 09 05 41 03 00 00 00  // @N.....A...A....
    B080: 75 02 40 41 3D A5 01 00 44 27 02 1B 05 40 01 2D  // u.@A=...D'...@.-
    B090: 02 00 40 03 02 02 00 33 02 02 40 66 FF 2D 0D 42  // ..@....3..@f.-.B
    B0A0: 01 05 56 00 40 03 21 40 01 33 25 40 14 15 25 40  // ..V.@.!@.3%@..%@
    B0B0: 01 2D 0A 42 40 03 0C 48 00 00 4A 65 0A 5E 10 44  // .-.B@..H..Je.^.D
    B0C0: 5D 03 03 39 41 01 09 0D 41 30 00 1B 0D 41 04 3C  // ]..9A...A0...A.<
    B0D0: 22 86 5E 41 49 A2 02 3C 21 4B 5E 03 49 A2 02 3C  // ".^AI..<!K^.I..<
    B0E0: 29 4D 5E 03 49 A2 02 03 20 41 87 5E 09 25 41 E0  // )M^.I... A.^.%A.
    B0F0: 3E 29 41 01 49 A2 02 4B E5 01 40 49 55 03 3C 02  // >)A.I..K..@IU.<.
    B100: 48 5E 00 49 A2 02 3C 0A 4A 5E 01 44 A6 02 0E E5  // H^.I..<.J^.D....
    B110: 01 01 3A 00 00 4B E5 01 01 44 CB 04 4B E5 01 02  // ..:..K...D..K...
    B120: 49 C3 02 3D 25 02 03 46 C3 02 55 28 02 52 23 56  // I..=%..F..U(.R#V
    B130: 00 40 03 21 40 01 33 25 40 14 03 0A 48 40 07 25  // .@.!@.3%@...H@.%
    B140: 60 01 FE 66 FF 2D 0D 42 01 05 56 00 40 03 21 40  // `..f.-.B..V.@.!@
    B150: 01 33 25 40 14 15 25 40 01 2D 0A 42 40 03 0C 48  // .3%@..%@.-.B@..H
    B160: 00 00 07 65 4B 5E FE 54 00 49 5E 54 00 4A 5E 07  // ...eK^.T.I^T.J^.
    B170: 65 0A 5E EF 4A 65 0A 5E 20 49 08 03 07 65 1A 5E  // e.^.Je.^ I...e.^
    B180: EF 4A 65 1A 5E 20 49 15 03 3D 05 00 00 00 00 00  // .Je.^ I..=......
    B190: 49 5D 03 4A A5 E9 5D 80 44 52 03 56 00 41 5C 25  // I].J..].DR.V.A\%
    B1A0: 08 5E F8 06 51 02 4A 65 08 5E 01 44 3A 03 2D A5  // .^..Q.Je.^.D:.-.
    B1B0: 41 01 2D 0D 48 10 00 3E A5 41 04 45 32 03 43 F3  // A.-.H..>.A.E2.C.
    B1C0: 04 01 02 48 5E 00 43 87 04 01 05 03 5E 80 88 01  // ...H^.C.....^...
    B1D0: 00 3D A5 01 00 49 7E 03 3D 05 00 E0 3B 66 00 45  // .=...I~.=...;f.E
    B1E0: 7E 03 07 25 04 5E FE 43 9E 03 0D 25 04 5E 01 3D  // ~..%.^.C...%.^.=
    B1F0: A5 01 02 49 9E 03 4B E5 01 08 44 9E 03 01 05 DB  // ...I..K...D.....
    B200: 5E 80 88 01 00 0D 25 DC 5E 01 0D 25 87 5E 01 03  // ^.....%.^..%.^..
    B210: 39 40 01 09 0D 40 30 00 1B 0D 40 04 01 22 86 5E  // 9@...@0...@..".^
    B220: 40 0D 65 87 5E 80 5C 79 87 5E FB 03 56 00 40 03  // @.e.^.\y.^..V.@.
    B230: 31 40 03 03 01 41 03 09 05 41 03 00 00 00 75 02  // 1@...A...A....u.
    B240: 40 41 03 05 41 A1 83 00 00 3E 25 40 64 48 F9 03  // @A..A....>%@dH..
    B250: 03 05 41 24 83 00 00 3E 25 40 30 48 F9 03 03 05  // ..A$...>%@0H....
    B260: 41 A3 76 00 00 01 0A 4C 5E 41 01 E2 4E 5E 40 0D  // A.v....L^A..N^@.
    B270: 25 4E 5E 02 01 21 4B 5E 03 01 A5 4B 5E E8 01 02  // %N^..!K^...K^...
    B280: 48 5E 00 54 00 49 5E 01 02 4A 5E 01 4B E5 01 08  // H^.T.I^..J^.K...
    B290: 44 2F 04 07 65 87 5E FE 43 34 04 0D 65 87 5E 01  // D/..e.^.C4..e.^.
    B2A0: 5C 29 87 5E 1F 01 01 8D 53 5E 20 03 01 29 4D 5E  // \).^....S^ ..)M^
    B2B0: 03 07 65 87 5E 7F 5C 65 0A 5E E3 04 4A 65 0A 5E  // ..e.^.\e.^..Je.^
    B2C0: 20 49 50 04 0D 65 0A 5E 10 4A 65 0A 5E 20 44 5D  //  IP..e.^.Je.^ D]
    B2D0: 04 4B E5 01 02 49 87 04 5C 65 1A 5E E3 04 4A 65  // .K...I..\e.^..Je
    B2E0: 1A 5E 20 49 72 04 0D 65 1A 5E 10 4A 65 1A 5E 20  // .^ Ir..e.^.Je.^ 
    B2F0: 44 7F 04 4B E5 01 80 49 9A 04 01 02 49 5E 02 0D  // D..K...I....I^..
    B300: 65 4B 5E 01 51 0A 0D 65 87 5E 40 51 0A 4A 65 87  // eK^.Q..e.^@Q.Je.
    B310: 5E 20 44 A1 04 07 65 87 5E BF 56 00 40 03 21 40  // ^ D...e.^.V.@.!@
    B320: 01 33 25 40 14 03 0A 48 40 0D 25 60 01 01 51 0A  // .3%@...H@.%`..Q.
    B330: 4B E5 01 02 49 F3 04 3A 00 00 3D 25 02 03 46 F3  // K...I..:..=%..F.
    B340: 04 02 25 03 02 02 E1 03 02 02 61 03 01 02 B9 03  // ..%.......a.....
    B350: 01 08 A5 03 04 0E B1 03 02 02 01 02 00 52 2E 3A  // .............R.:
    B360: 00 00 5B 02 25 01 0B 43 CB 04 7A 1C 00 00 00 D8  // ..[.%..C..z.....
    B370: 00 B0 01 88 02 40 42 0F 00 04 00 53 07 00 04 00  // .....@B....S....
    B380: 53 07 00 00 40 42 0F 00 04 00 D4 02 02 01 00 04  // S...@B..........
    B390: 37 00 00 42 29 00 63 02 49 02 63 07 21 00 63 08  // 7..B).c.I.c.!.c.
    B3A0: 1B 00 5A 5A 5B 0D 25 C8 39 02 5B 01 05 3B 01 30  // ..ZZ[.%.9.[..;.0
    B3B0: 02 12 00 01 05 30 01 80 BB 10 00 01 05 31 01 3C  // .....0.......1.<
    B3C0: 00 01 08 01 8D 83 38 30 00 01 25 82 38 01 5C 65  // ......80..%.8.\e
    B3D0: D4 00 FC 02 5C 25 50 39 0F C0 01 25 32 01 00 01  // ....\%P9...%2...
    B3E0: 05 4C 35 00 00 00 00 01 05 4A 35 00 00 00 00 01  // .L5......J5.....
    B3F0: 05 50 35 00 00 00 00 01 05 4E 35 00 00 00 00 01  // .P5......N5.....
    B400: 05 54 35 00 00 00 00 01 05 52 35 00 00 00 00 01  // .T5......R5.....
    B410: 05 58 35 00 00 00 00 01 05 56 35 00 00 00 00 01  // .X5......V5.....
    B420: 05 6D 35 01 00 00 00 01 05 DF 39 01 10 00 00 01  // .m5.......9.....
    B430: 05 24 3A 00 1B 5D 05 01 05 76 3A 35 00 13 00 01  // .$:..]...v:5....
    B440: 05 77 3A 36 11 00 00 01 05 78 3A 41 E6 01 00 01  // .w:6.....x:A....
    B450: 05 79 3A 00 00 00 00 01 05 7A 3A 00 00 08 2C 01  // .y:......z:...,.
    B460: 05 7C 3A 02 04 00 00 01 05 8C 3A 5E 4E 01 00 01  // .|:.......:^N...
    B470: 05 7A 3A 00 00 08 2C 01 05 7D 3A A4 01 00 00 01  // .z:...,..}:.....
    B480: 05 7F 3A A4 01 00 00 01 05 81 3A 00 02 00 00 01  // ..:.......:.....
    B490: 05 82 3A 49 D2 00 00 01 05 85 3A 20 00 00 00 01  // ..:I......: ....
    B4A0: 05 86 3A 24 0D 00 00 01 05 89 3A 00 00 00 00 01  // ..:$......:.....
    B4B0: 05 8A 3A 00 00 00 00 01 05 5C 3A 00 00 92 06 01  // ..:......\:.....
    B4C0: 05 5D 3A AA 08 00 E0 01 05 C9 39 FE 01 00 00 01  // .]:.......9.....
    B4D0: 05 CA 39 1E 05 00 00 01 05 CB 39 BA 04 00 00 01  // ..9.......9.....
    B4E0: 05 CC 39 24 04 00 00 01 05 CD 39 A2 08 00 00 01  // ..9$......9.....
    B4F0: 05 CE 39 FE 01 00 00 01 05 CF 39 1E 05 00 00 01  // ..9.......9.....
    B500: 05 D0 39 BA 04 00 00 01 05 D1 39 24 04 00 00 01  // ..9.......9$....
    B510: 05 D2 39 A2 08 00 00 01 05 D3 39 FE 01 00 00 01  // ..9.......9.....
    B520: 05 D4 39 1E 05 00 00 01 05 D5 39 BA 04 00 00 01  // ..9.......9.....
    B530: 05 D6 39 24 04 00 00 01 05 D7 39 A2 08 00 00 01  // ..9$......9.....
    B540: 05 D8 39 FE 01 00 00 01 05 D9 39 1E 05 00 00 01  // ..9.......9.....
    B550: 05 DA 39 BA 04 00 00 01 05 DB 39 24 04 00 00 01  // ..9.......9$....
    B560: 05 DC 39 A2 08 00 00 0D 25 C8 39 02 0D 25 52 41  // ..9.....%.9..%RA
    B570: 01 01 25 F2 4A 00 01 25 F0 4A 00 01 25 F1 4A 00  // ..%.J..%.J..%.J.
    B580: 01 25 EF 4B 00 55 00 01 52 17 2C 25 01 01 3D 25  // .%.K.U..R.,%..=%
    B590: 01 01 45 FE 01 55 00 01 52 4E 01 05 7C 53 00 00  // ..E..U..RN..|S..
    B5A0: 00 03 02 25 01 07 52 33 02 05 01 00 07 00 00 52  // ...%..R3.......R
    B5B0: 4D 2C 25 01 01 3D 25 01 04 45 25 02 66 16 03 0C  // M,%..=%..E%.f...
    B5C0: 41 04 00 4C 0D 41 02 00 44 46 02 0D A5 4C 00 02  // A..L.A..DF...L..
    B5D0: 52 4B 5B 02 05 01 01 00 00 00 52 06 01 05 00 00  // RK[.......R.....
    B5E0: 17 A8 01 00 03 00 40 01 00 15 05 40 04 01 02 59  // ......@....@...Y
    B5F0: 39 40 2D 01 40 01 01 02 5A 39 40 01 05 53 39 00  // 9@-.@...Z9@..S9.
    B600: F4 00 00 03 01 40 01 1B 05 40 04 2D 05 40 FF F3  // .....@...@.-.@..
    B610: 00 00 01 02 54 39 40 01 05 00 00 17 A8 01 00 01  // ....T9@.........
    B620: 00 55 39 01 00 01 05 64 3A 00 00 40 0F 54 00 65  // .U9....d:..@.T.e
    B630: 3A 03 01 40 01 15 05 40 08 33 05 40 01 00 00 00  // :..@...@.3.@....
    B640: 2D 05 40 00 00 40 0F 01 02 66 3A 40 54 00 67 3A  // -.@..@...f:@T.g:
    B650: 01 25 C9 00 F4 01 05 C4 00 00 00 00 00 5B 8C 00  // .%...........[..
    B660: 02 01 00 04 66 FF 56 08 47 2D 0D 42 68 00 03 21  // ....f.V.G-.Bh..!
    B670: 47 00 09 25 47 F0 42 22 47 63 00 4F 00 63 60 4A  // G..%G.B"Gc.O.c`J
    B680: 00 63 20 42 00 63 90 3A 00 63 A0 32 00 5A 5A 5B  // .c B.c.:.c.2.ZZ[
    B690: 2D 0D 42 1E 00 43 4F 00 2D 0D 42 18 00 43 4F 00  // -.B..CO.-.B..CO.
    B6A0: 2D 0D 42 10 00 43 4F 00 2D 0D 42 08 00 03 21 47  // -.B..CO.-.B...!G
    B6B0: 00 09 25 47 07 2D 0A 42 47 2D 0A 42 47 03 0C 48  // ..%G.-.BG-.BG..H
    B6C0: 00 00 5B 7A 8C 00 00 00 80 00 00 01 80 01 00 00  // ..[z............
    B6D0: 00 01 00 02 00 03 00 00 D8 00 B0 01 88 02 00 00  // ................
    B6E0: C4 00 88 01 00 00 1B 01 36 02 72 00 01 01 00 00  // ........6.r.....
    B6F0: 37 00 00 56 00 40 03 21 40 00 21 0D 40 1B 01 03  // 7..V.@.!@.!.@...
    B700: 02 48 40 01 25 24 41 01 3D 65 00 02 49 4C 00 01  // .H@.%$A.=e..IL..
    B710: 0D 35 41 01 00 54 00 33 41 0D 25 26 41 01 01 05  // .5A..T.3A.%&A...
    B720: 25 41 11 00 00 00 07 A5 24 41 FE 01 05 27 41 11  // %A......$A...'A.
    B730: 01 11 01 43 6E 00 01 05 29 41 00 00 00 01 01 05  // ...Cn...)A......
    B740: 2D 41 00 00 00 01 01 05 27 41 11 01 11 01 54 00  // -A......'A....T.
    B750: 25 41 01 0D 35 41 00 01 3A 00 00 5B 3F 00 01 01  // %A..5A..:..[?...
    B760: 00 00 37 00 00 52 14 54 30 02 50 54 00 21 50 54  // ..7..R.T0.PT.!PT
    B770: 00 22 50 3C 69 02 50 00 44 3B 00 01 69 02 50 00  // ."P<i.P.D;..i.P.
    B780: 3D 65 00 00 44 3B 00 4A A5 01 50 01 44 3B 00 4A  // =e..D;.J..P.D;.J
    B790: 25 02 50 01 44 33 00 3A 00 00 5B 00 43 00 01 01  // %.P.D3.:..[.C...
    B7A0: 00 00 37 00 00 52 14 3D 65 00 01 44 3A 00 0D 65  // ..7..R.=e..D:..e
    B7B0: 01 50 03 54 20 01 50 4A A5 01 50 01 49 1B 00 54  // .P.T .PJ..P.I..T
    B7C0: 20 0F 50 56 00 40 20 25 00 01 03 0A 48 40 07 E5  //  .PV.@ %....H@..
    B7D0: E8 39 7F 43 3F 00 0D 25 01 50 01 3A 00 00 5B 00  // .9.C?..%.P.:..[.
    B7E0: CF 00 02 01 00 00 37 00 00 42 29 00 63 00 1B 00  // ......7..B).c...
    B7F0: 63 01 1B 00 63 02 AA 00 5A 5A 5B 66 FF 56 08 40  // c...c...ZZ[f.V.@
    B800: 2D 0D 42 C3 00 03 21 40 00 15 25 40 01 2D 0A 42  // -.B...!@..%@.-.B
    B810: 40 03 0C 48 00 00 3D 65 00 00 44 72 00 0D 25 CC  // @..H..=e..Dr..%.
    B820: 00 01 3A 00 00 01 8D C0 00 00 02 51 02 01 05 C6  // ..:........Q....
    B830: 00 00 00 10 00 01 05 C8 00 00 00 50 00 01 0D C3  // ...........P....
    B840: 00 02 00 54 20 CA 00 01 05 C2 00 00 01 00 00 43  // ...T ..........C
    B850: 1A 00 07 25 CC 00 FE 3A 00 00 0D 25 CA 00 01 01  // ...%...:...%....
    B860: 25 C2 00 01 07 A5 C1 00 FE 0D 25 D5 00 01 0D 65  // %.........%....e
    B870: D5 00 01 4A 65 D5 00 01 44 93 00 54 08 D5 00 54  // ...Je...D..T...T
    B880: 00 C6 00 54 00 C8 00 43 1A 00 5C 65 D4 00 FC 02  // ...T...C..\e....
    B890: 01 A1 C0 00 00 2B A5 C0 00 01 0D A5 C1 00 01 5B  // .....+.........[
    B8A0: 7A 0C 00 00 00 02 00 2C 00 2D 00 2E 00 2F 00 00  // z......,.-.../..
    B8B0: DA 01 03 01 00 00 37 00 00 03 05 46 10 27 00 00  // ......7....F.'..
    B8C0: 3D A5 00 02 49 1C 00 02 02 00 46 5B 03 05 40 16  // =...I.....F[..@.
    B8D0: 6C 01 00 03 05 41 00 6C 01 00 3D 25 00 00 44 54  // l....A.l..=%..DT
    B8E0: 00 03 05 40 16 6E 01 00 03 05 41 00 6E 01 00 3D  // ...@.n....A.n..=
    B8F0: 25 00 01 44 54 00 03 05 40 0C 7E 01 00 03 05 41  // %..DT...@.~....A
    B900: 00 7E 01 00 01 02 00 00 40 03 88 40 01 00 03 18  // .~......@..@....
    B910: 40 01 00 09 8D 40 FF 01 3E 8D 40 00 00 49 AA 00  // @....@..>.@..I..
    B920: 01 02 00 00 41 03 00 40 01 00 09 05 40 FF 01 00  // ....A..@....@...
    B930: 00 3E 0D 40 00 00 49 93 00 03 05 46 00 71 02 00  // .>.@..I....F.q..
    B940: 43 CD 00 21 02 40 46 03 00 41 01 00 09 05 41 00  // C..!.@F..A....A.
    B950: 1E 00 00 1B 05 41 09 43 C5 00 7C 02 40 46 7E 05  // .....A.C..|.@F~.
    B960: 40 00 00 01 00 03 00 41 01 00 09 05 41 00 F0 00  // @......A....A...
    B970: 00 1B 05 41 0C 75 02 40 41 03 02 46 40 3D A5 00  // ...A.u.@A..F@=..
    B980: 01 49 D9 00 02 02 00 46 5B 3D E5 00 00 49 3B 01  // .I.....F[=...I;.
    B990: 56 00 40 03 29 40 00 21 0D 40 0A 00 03 05 41 4B  // V.@.)@.!.@....AK
    B9A0: 6C 01 00 3D 25 00 00 44 0F 01 03 05 41 4B 6E 01  // l..=%..D....AKn.
    B9B0: 00 3D 25 00 01 44 0F 01 03 05 41 41 7E 01 00 2D  // .=%..D....AA~..-
    B9C0: 02 40 41 01 02 00 00 40 03 00 41 01 00 09 05 41  // .@A....@..A....A
    B9D0: 00 00 F0 07 1B 05 41 14 02 E2 00 41 3D E5 00 00  // ......A....A=...
    B9E0: 49 3B 01 02 05 00 10 27 00 00 5B 56 00 40 03 39  // I;.....'..[V.@.9
    B9F0: 40 00 55 38 00 66 FF 2D 0D 42 B2 01 3E 0C 40 02  // @.U8.f.-.B..>.@.
    BA00: 00 47 5C 01 2D 0D 42 08 00 43 4C 01 33 0C 40 04  // .G\.-.B..CL.3.@.
    BA10: 00 21 0C 40 06 00 2D 0C 40 00 00 03 09 42 00 55  // .!.@..-.@....B.U
    BA20: 00 00 02 0A 00 40 7C 05 46 40 42 0F 00 7E 01 40  // .....@|.F@B..~.@
    BA30: 00 02 02 00 40 3E 25 42 00 49 AE 01 56 00 46 66  // ....@>%B.I..V.Ff
    BA40: 08 03 0C 46 0C 00 3E 0D 46 00 00 44 AE 01 7C 02  // ...F..>.F..D..|.
    BA50: 40 46 7E 05 40 14 00 00 00 32 02 00 40 5B 5B 7A  // @F~.@....2..@[[z
    BA60: 28 00 FF FF 07 00 00 00 00 00 C8 00 3F 00 08 00  // (...........?...
    BA70: 19 00 40 06 5F 00 40 00 32 00 80 0C 7E 00 60 00  // ..@._.@.2...~.`.
    BA80: 64 00 00 32 7F 00 7F 00 64 00 C6 00 02 03 04 00  // d..2....d.......
    BA90: 37 00 00 56 00 46 56 00 00 03 21 00 00 55 20 00  // 7..V.FV...!..U .
    BAA0: 3D 65 00 03 44 2C 00 3D 65 00 0B 46 BB 00 02 29  // =e..D,.=e..F...)
    BAB0: 00 00 32 25 00 08 0E 25 00 60 52 14 5C 22 28 55  // ..2%...%.`R.\"(U
    BAC0: F8 00 02 22 00 00 52 14 03 08 41 3D 41 09 0D 41  // ..."..R...A=A..A
    BAD0: 03 00 66 FF 2D 0D 42 C2 00 2D 0A 42 41 03 24 00  // ..f.-.B..-.BA.$.
    BAE0: 00 00 3D E2 00 00 48 A7 00 3E 25 00 04 44 76 00  // ..=...H..>%..Dv.
    BAF0: 03 22 46 00 33 25 46 01 15 25 46 04 0F 25 46 01  // ."F.3%F..%F..%F.
    BB00: 33 39 00 00 3E 25 00 01 44 93 00 3E 25 00 02 44  // 39..>%..D..>%..D
    BB10: 8C 00 03 25 46 21 03 65 00 2F 43 97 00 03 65 00  // ...%F!.e./C...e.
    BB20: 13 03 79 46 00 33 65 46 01 15 2D 46 03 0F 65 46  // ..yF.3eF..-F..eF
    BB30: 01 52 14 01 02 01 4D 46 01 52 00 4D 00 54 00 08  // .R....MF.R.M.T..
    BB40: 4D 54 00 FF 4C 3A 00 00 5B 7A 04 00 03 02 01 04  // MT..L:..[z......
    BB50: CB 00 01 01 00 00 37 00 00 3D 65 00 01 44 61 00  // ......7..=e..Da.
    BB60: 56 00 40 20 25 00 10 03 0A 48 40 07 25 8D 4F FD  // V.@ %....H@.%.O.
    BB70: 4A 25 8D 4F 04 49 20 00 52 14 07 25 48 50 FE 4A  // J%.O.I .R..%HP.J
    BB80: 65 48 50 01 49 2F 00 03 21 40 00 21 0D 40 C4 00  // eHP.I/..!@.!.@..
    BB90: 03 0A 48 40 07 25 27 3A FE 56 00 40 03 21 40 00  // ..H@.%':.V.@.!@.
    BBA0: 21 0D 40 1B 01 03 0A 48 40 07 25 FD 40 EF 43 C7  // !.@....H@.%.@.C.
    BBB0: 00 56 00 40 20 25 00 10 03 0A 48 40 0D 25 8D 4F  // .V.@ %....H@.%.O
    BBC0: 02 4A 25 8D 4F 04 44 71 00 52 14 0D 25 48 50 01  // .J%.O.Dq.R..%HP.
    BBD0: 4A 65 48 50 01 44 80 00 56 00 40 03 21 40 00 21  // JeHP.D..V.@.!@.!
    BBE0: 0D 40 C4 00 03 0A 48 40 0D 25 27 3A 01 56 00 40  // .@....H@.%':.V.@
    BBF0: 03 21 40 00 21 0D 40 1B 01 03 0A 48 40 0D 25 FD  // .!@.!.@....H@.%.
    BC00: 40 10 56 00 40 03 21 40 00 21 0D 40 5A 00 03 0A  // @.V.@.!@.!.@Z...
    BC10: 48 40 0D 25 4C 4D 01 3A 00 00 5B 00 51 01 01 04  // H@.%LM.:..[.Q...
    BC20: 00 08 37 00 00 3D 65 02 01 49 1A 01 4B A5 02 03  // ..7..=e..I..K...
    BC30: 49 2A 00 52 25 02 05 00 00 00 00 00 02 05 01 00  // I*.R%...........
    BC40: 05 02 00 43 2F 00 55 28 02 52 25 0E 25 02 90 52  // ...C/.U(.R%.%..R
    BC50: 14 08 25 02 07 0D 05 27 3A 11 11 01 00 5C 25 26  // ..%....':....\%&
    BC60: 3A 0B 01 03 21 41 02 15 25 41 04 0D 22 26 3A 41  // :...!A..%A.."&:A
    BC70: 0D 65 29 3A 01 5C 25 4E 3A FD 01 01 0D 3E 3A F4  // .e):.\%N:....>:.
    BC80: 00 01 0D 42 3A F4 00 4B A5 02 03 49 85 00 01 05  // ...B:..K...I....
    BC90: 3D 3A 00 00 10 00 01 05 41 3A 00 00 50 00 43 95  // =:......A:..P.C.
    BCA0: 00 01 05 3D 3A 00 00 00 00 01 05 41 3A 00 00 00  // ...=:......A:...
    BCB0: 00 01 0D 1B 3A 80 00 01 0D 24 3A 00 03 01 0D 7C  // ....:....$:....|
    BCC0: 3A 01 03 01 05 7A 3A 00 00 08 28 01 05 7B 3A 00  // :....z:...(..{:.
    BCD0: 00 08 00 01 E5 5E 3A 08 01 E5 5D 3A E0 54 00 1C  // .....^:...]:.T..
    BCE0: 3A 01 19 1D 3A 00 01 89 1D 3A 00 01 19 21 3A 00  // :...:....:...!:.
    BCF0: 01 89 21 3A 00 54 08 19 3A 66 FF 2D 0D 42 42 01  // ..!:.T..:f.-.BB.
    BD00: 03 0C 40 00 00 3E 0D 40 FF FF 44 01 01 3D 8C 01  // ..@..>.@..D..=..
    BD10: 00 00 44 01 01 2D 0D 42 03 00 43 E4 00 01 24 19  // ..D..-.B..C...$.
    BD20: 3A 02 00 01 09 3B 3A 01 07 25 26 3A FE 07 25 4E  // :....;:..%&:..%N
    BD30: 3A FE 3A 00 00 5B 0E 25 02 90 52 14 3D 65 02 00  // :.:..[.%..R.=e..
    BD40: 49 2F 01 0D 25 26 3A 01 43 3B 01 3D 65 02 10 44  // I/..%&:.C;.=e..D
    BD50: 3B 01 01 09 3B 3A 01 3A 00 00 5B 7A 0F 00 01 00  // ;...;:.:..[z....
    BD60: 01 01 01 03 01 05 02 02 00 08 FF FF 08 00 42 00  // ..............B.
    BD70: 01 01 00 00 37 00 00 52 14 3D 65 00 01 44 21 00  // ....7..R.=e..D!.
    BD80: 54 20 4D 50 4A 65 4D 50 01 49 16 00 43 3E 00 5C  // T MPJeMP.I..C>.\
    BD90: 4D 1B 50 FE FF 00 01 4A A5 01 50 01 44 3E 00 0D  // M.P....J..P.D>..
    BDA0: 25 4D 50 01 4A 65 4D 50 01 44 36 00 3A 00 00 5B  // %MP.JeMP.D6.:..[
    BDB0: 17 00 01 03 00 00 37 00 00 0E 25 00 A0 52 14 54  // ......7...%..R.T
    BDC0: 00 5F 41 3A 00 00 5B 00 C6 01 01 01 00 18 56 00  // ._A:..[.......V.
    BDD0: 40 03 21 40 05 21 0D 40 80 00 03 0A 48 40 37 00  // @.!@.!.@....H@7.
    BDE0: 00 01 0D 49 50 0D 00 3D 8D 01 0D 00 46 2C 00 01  // ...IP..=....F,..
    BDF0: 19 49 50 01 01 8D 4A 50 40 01 01 0D 4B 50 2C 01  // .IP...JP@...KP,.
    BE00: 03 09 41 00 2D 19 41 00 03 8A 41 41 2D 8D 41 01  // ..A.-.A...AA-.A.
    BE10: 00 1B 1D 41 02 01 1A 4A 50 41 33 0D 41 01 00 01  // ...A...JPA3.A...
    BE20: 0A EA 4F 41 54 08 EC 4F 01 99 EC 4F 02 03 19 41  // ..OAT..O...O...A
    BE30: 00 33 09 41 02 56 18 41 03 B1 41 04 33 1A 41 41  // .3.A.V.A..A.3.AA
    BE40: 01 8A EB 4F 41 03 19 41 00 33 09 41 02 2D 1A 41  // ...OA..A.3.A.-.A
    BE50: 41 2D 09 41 00 4B 25 04 10 44 98 00 2D 09 41 00  // A-.A.K%..D..-.A.
    BE60: 01 0A EB 4F 41 03 21 41 04 09 25 41 02 1B 25 41  // ...OA.!A..%A..%A
    BE70: 01 01 22 ED 4F 41 03 09 41 01 2D 19 41 01 33 0D  // ..".OA..A.-.A.3.
    BE80: 41 01 00 01 0A EF 4F 41 54 08 F7 4F 01 99 F7 4F  // A.....OAT..O...O
    BE90: 03 03 19 41 01 33 09 41 03 56 18 41 03 B9 41 04  // ...A.3.A.V.A..A.
    BEA0: 33 1A 41 41 01 8A F6 4F 41 03 19 41 01 33 09 41  // 3.AA...OA..A.3.A
    BEB0: 03 2D 1A 41 41 2D 09 41 01 4B 25 04 20 44 FC 00  // .-.AA-.A.K%. D..
    BEC0: 2D 09 41 01 01 0A F6 4F 41 03 21 41 04 09 25 41  // -.A....OA.!A..%A
    BED0: 04 1B 25 41 02 01 22 F8 4F 41 3D 65 05 00 44 21  // ..%A..".OA=e..D!
    BEE0: 01 07 65 01 50 EF 43 26 01 0D 65 01 50 10 03 00  // ..e.P.C&..e.P...
    BEF0: 46 EB 4F 02 00 02 F6 4F 56 00 40 03 21 40 05 21  // F.O....OV.@.!@.!
    BF00: 0D 40 01 00 03 0A 48 40 56 00 40 03 09 40 02 3D  // .@....H@V.@..@.=
    BF10: 65 05 00 49 53 01 33 0D 40 02 00 15 05 40 0F 56  // e..IS.3.@....@.V
    BF20: 00 41 3D 8D 02 0D 00 48 6B 01 03 0D 41 0D 00 33  // .A=....Hk...A..3
    BF30: 19 41 02 0F 02 40 41 0F E5 40 80 01 02 E8 39 40  // .A...@A..@....9@
    BF40: 56 00 40 03 21 40 05 21 0D 40 1B 01 03 0A 48 40  // V.@.!@.!.@....H@
    BF50: 01 09 3B 41 00 01 89 3B 41 01 01 09 3C 41 00 01  // ..;A...;A...<A..
    BF60: 89 3C 41 01 01 02 38 41 46 01 01 39 41 02 54 00  // .<A...8AF..9A.T.
    BF70: 36 41 01 31 36 41 04 01 B1 36 41 04 54 00 37 41  // 6A.16A...6A.T.7A
    BF80: 01 39 37 41 04 01 B9 37 41 04 3A 00 00 5B 0A 00  // .97A...7A.:..[..
    BF90: 02 03 08 00 37 00 00 5B 21 02 01 01 00 00 37 00  // ....7..[!.....7.
    BFA0: 00 0D 25 78 53 08 07 25 9E 53 FE 56 00 41 03 39  // ..%xS..%.S.V.A.9
    BFB0: 41 01 09 25 41 0F 03 0A 40 42 66 FF 2D 0D 42 11  // A..%A...@Bf.-.B.
    BFC0: 02 15 25 41 02 2D 0A 42 41 03 0C 41 00 00 01 02  // ..%A.-.BA..A....
    BFD0: 00 00 41 07 A5 01 00 FE 54 08 01 00 01 0C 7F 53  // ..A.....T......S
    BFE0: 02 00 03 0A 42 40 03 05 40 C0 5D 00 00 56 00 41  // ....B@..@.]..V.A
    BFF0: 03 21 41 00 27 02 40 41 01 8A 7B 53 40 01 25 7B  // .!A.'.@A..{S@.%{
    C000: 53 02 0D 25 79 53 02 01 A9 7D 53 01 4B 25 01 01  // S..%yS...}S.K%..
    C010: 49 7F 00 54 30 7D 53 01 0D 7D 53 00 31 2B A5 7D  // I..T0}S..}S.1+.}
    C020: 53 01 4B 25 01 02 44 96 00 2B A5 7D 53 01 56 00  // S.K%..D..+.}S.V.
    C030: 41 03 71 41 01 0F E5 41 80 01 02 7E 53 41 03 69  // A.qA...A...~SA.i
    C040: 41 00 2D A5 41 01 01 02 7E 53 41 4B 25 01 02 44  // A.-.A...~SAK%..D
    C050: C6 00 56 28 41 2D A5 41 01 01 02 7E 53 41 4B 25  // ..V(A-.A...~SAK%
    C060: 01 01 44 E7 00 03 71 41 00 2D A5 41 01 01 02 7E  // ..D...qA.-.A...~
    C070: 53 41 03 79 41 00 2D A5 41 01 01 02 7E 53 41 0D  // SA.yA.-.A...~SA.
    C080: 25 78 53 01 03 A5 41 01 43 BA 01 03 29 40 01 03  // %xS...A.C...)@..
    C090: 65 40 01 03 99 40 00 56 00 41 03 71 41 01 0F 65  // e@...@.V.A.qA..e
    C0A0: 41 01 0F E5 41 80 01 02 7E 53 41 01 A5 7D 53 04  // A...A...~SA..}S.
    C0B0: 3D 65 01 04 47 28 01 01 0D 7D 53 01 13 43 57 01  // =e..G(...}S..CW.
    C0C0: 01 A2 7D 53 40 01 0D 7D 53 01 31 43 57 01 07 65  // ..}S@..}S.1CW..e
    C0D0: 7D 53 EF 01 A5 7D 53 03 3E 25 40 04 46 57 01 01  // }S...}S.>%@.FW..
    C0E0: A2 7D 53 40 31 A5 7D 53 01 5C 65 7D 53 FD 20 0D  // .}S@1.}S.\e}S. .
    C0F0: 25 78 53 01 03 A5 41 00 43 BA 01 03 05 41 01 00  // %xS...A.C....A..
    C100: 00 80 03 AA 41 40 01 02 7E 53 41 3D 65 01 01 49  // ....A@..~SA=e..I
    C110: 82 01 02 A8 00 7E 53 43 F9 01 56 00 41 03 1A 41  // .....~SC..V.A..A
    C120: 40 3B 02 41 03 28 41 7E 53 03 68 41 7E 53 03 A8  // @;.A.(A~S.hA~S..
    C130: 41 7E 53 03 E8 41 7E 53 04 02 00 41 56 28 40 2D  // A~S..A~S...AV(@-
    C140: 8D 40 04 00 3E 25 40 04 47 F9 01 33 25 40 04 43  // .@..>%@.G..3%@.C
    C150: 36 01 02 65 00 02 03 0D 41 64 00 33 0D 41 01 00  // 6..e....Ad.3.A..
    C160: 3E 0D 41 00 00 44 F9 01 51 64 4A 25 7A 53 10 44  // >.A..D..QdJ%zS.D
    C170: C3 01 4A 65 7A 53 06 49 F9 01 02 65 00 01 0D 25  // ..JezS.I...e...%
    C180: 79 53 02 3E A5 41 00 44 63 01 4B 25 01 01 44 F3  // yS.>.A.Dc.K%..D.
    C190: 00 0D 25 79 53 02 01 25 78 53 02 51 01 54 00 78  // ..%yS..%xS.Q.T.x
    C1A0: 53 54 00 7F 53 5B 7A 10 00 90 5D 01 00 94 5D 03  // ST..S[z...]...].
    C1B0: 02 98 5D 05 04 9C 5D 42 41 00 46 00 02 02 00 04  // ..]...]BA.F.....
    C1C0: 37 00 00 55 30 00 32 25 00 01 20 25 00 08 56 08  // 7..U0.2%.. %..V.
    C1D0: 48 03 22 48 40 0D A5 D5 53 01 02 A0 00 D4 53 08  // H."H@...S.....S.
    C1E0: A5 00 03 4A 25 D4 53 02 44 3C 00 5C 0D D5 53 FF  // ...J%.S.D<.\..S.
    C1F0: FE 01 00 43 42 00 0D 0D D5 53 01 01 3A 00 00 5B  // ...CB....S..:..[
    C200: 3A 01 01 08 08 00 03 01 00 00 3D E5 00 01 44 33  // :.........=...D3
    C210: 00 3D E5 00 02 44 33 00 02 05 00 00 00 01 00 52  // .=...D3........R
    C220: 29 20 05 00 64 00 00 00 03 02 46 40 02 02 00 00  // ) ..d.....F@....
    C230: 43 93 00 02 05 00 01 00 02 00 52 29 03 01 01 00  // C.........R)....
    C240: 02 02 00 00 03 01 46 00 56 38 46 03 05 40 80 C3  // ......F.V8F..@..
    C250: C9 01 27 02 40 46 2D 05 40 31 00 00 00 27 05 40  // ..'.@F-.@1...'.@
    C260: 32 00 00 00 21 05 40 32 00 00 00 21 02 46 40 03  // 2...!.@2...!.F@.
    C270: 02 46 40 55 00 03 27 05 46 19 00 00 00 7C 05 40  // .F@U..'.F....|.@
    C280: 00 40 00 00 7E 02 40 01 02 8A 01 40 02 1A 01 40  // .@..~.@....@...@
    C290: 55 00 02 55 38 00 03 05 40 00 32 00 00 3D 05 00  // U..U8...@.2..=..
    C2A0: 00 00 00 00 44 D1 00 03 02 40 46 27 01 40 00 3E  // ....D....@F'.@.>
    C2B0: 05 40 9C 18 00 00 47 C0 00 03 05 40 00 32 00 00  // .@....G....@.2..
    C2C0: 3E 05 40 C8 00 00 00 46 D1 00 03 05 40 C8 00 00  // >.@....F....@...
    C2D0: 00 66 FF 2D 0D 42 1A 01 3E 0C 40 02 00 47 E8 00  // .f.-.B..>.@..G..
    C2E0: 2D 0D 42 08 00 43 D8 00 33 0C 40 00 00 27 0C 40  // -.B..C..3.@..'.@
    C2F0: 06 00 2D 0C 40 04 00 02 E2 00 40 33 0C 40 04 00  // ..-.@.....@3.@..
    C300: 21 0C 40 06 00 2D 0C 40 00 00 27 02 46 40 02 0A  // !.@..-.@..'.F@..
    C310: 00 40 02 B2 00 40 5B 7A 20 00 C8 00 40 06 08 00  // .@...@[z ...@...
    C320: 19 00 40 06 80 0C 40 00 32 00 80 0C 38 18 60 00  // ..@...@.2...8.`.
    C330: 64 00 00 32 00 32 7F 00 64 00 07 00 02 01 00 00  // d..2.2..d.......
    C340: 5B 00 3B 03 01 05 00 00 37 00 00 0E 25 00 60 52  // [.;.....7...%.`R
    C350: 14 08 25 00 0F 42 29 00 63 0F 53 00 63 11 0C 02  // ..%..B).c.S.c...
    C360: 63 12 7D 02 63 01 D5 02 63 00 21 03 63 08 D6 01  // c.}.c...c.!.c...
    C370: 63 09 B7 01 63 0A BE 01 63 13 C6 01 63 14 CE 01  // c...c...c...c...
    C380: 63 0B DE 01 63 0C C5 02 63 0D E6 01 63 10 FF 01  // c...c...c...c...
    C390: 5A 5A 43 B3 01 54 00 9A 55 01 0D 2B 55 1F 00 3D  // ZZC..T..U..+U..=
    C3A0: A5 00 00 44 72 00 3D A5 00 02 44 A1 01 3D A5 00  // ...Dr.=...D..=..
    C3B0: 05 49 A9 01 54 00 C9 55 3D 25 02 00 49 81 00 02  // .I..T..U=%..I...
    C3C0: 25 02 02 32 25 02 01 01 E1 C9 55 02 4A 25 CC 55  // %..2%.....U.J%.U
    C3D0: 01 49 D8 00 7B 05 01 00 80 00 00 7E 05 40 8C 0A  // .I..{......~.@..
    C3E0: 00 00 56 00 46 03 29 46 02 27 02 40 46 07 65 D0  // ..V.F.)F.'.@F.e.
    C3F0: 55 FE 01 05 D1 55 00 80 00 00 01 02 D2 55 40 0D  // U....U.......U@.
    C400: E5 D3 55 10 0D 65 28 55 04 03 21 40 02 15 25 40  // ..U..e(U..!@..%@
    C410: 05 01 E2 CA 55 40 54 20 CE 55 02 A0 02 28 55 03  // ....U@T .U...(U.
    C420: 0A 46 48 08 A5 02 07 56 00 40 03 31 40 02 21 0D  // .FH....V.@.1@.!.
    C430: 40 80 00 03 8A 46 40 03 0A 48 40 03 88 40 EA 4F  // @....F@..H@..@.O
    C440: 03 08 40 EF 4F 2D 05 40 01 00 01 00 03 98 41 EB  // ..@.O-.@......A.
    C450: 4F 03 18 41 F6 4F 03 0A 48 46 3C 02 0C 56 40 44  // O..A.O..HF<..V@D
    C460: B3 01 01 02 0C 56 40 01 02 0D 56 41 03 1A 48 46  // .....V@...VA..HF
    C470: 03 00 40 EB 4F 33 1A 40 40 33 08 40 36 41 33 08  // ..@.O3.@@3.@6A3.
    C480: 40 36 41 03 00 41 F6 4F 33 1A 41 41 33 08 41 37  // @6A..A.O3.AA3.A7
    C490: 41 33 08 41 37 41 03 0A 48 46 01 0A 0F 56 41 01  // A3.A7A..HF...VA.
    C4A0: 8A 0F 56 40 03 1A 48 46 03 00 40 EC 4F 33 8A 40  // ..V@..HF..@.O3.@
    C4B0: 40 03 00 41 F7 4F 33 8A 41 41 4A 25 ED 4F 01 44  // @..A.O3.AAJ%.O.D
    C4C0: 84 01 0F E5 40 80 4A 25 F8 4F 01 44 90 01 0F E5  // ....@.J%.O.D....
    C4D0: 41 80 03 0A 48 46 01 1A 0E 56 41 01 9A 0E 56 40  // A...HF...VA...V@
    C4E0: 43 B3 01 01 05 9A 55 00 00 00 00 07 E5 28 55 2F  // C.....U......(U/
    C4F0: 0D 65 28 55 04 3A 00 00 5B 54 20 D8 55 43 B3 01  // .e(U.:..[T .UC..
    C500: 01 25 D8 55 01 43 B3 01 01 25 D8 55 02 43 B3 01  // .%.U.C...%.U.C..
    C510: 01 25 D8 55 03 43 B3 01 07 25 C8 55 EF 43 B3 01  // .%.U.C...%.U.C..
    C520: 0D 25 C8 55 10 43 B3 01 0D 65 D0 55 01 51 0A 07  // .%.U.C...e.U.Q..
    C530: 25 CD 55 FE 51 0A 01 0D CC 55 01 02 51 C8 43 B3  // %.U.Q....U..Q.C.
    C540: 01 0D 25 DE 55 10 01 31 CF 55 00 43 B3 01 01 69  // ..%.U..1.U.C...i
    C550: 6F 55 02 3D A5 00 03 49 28 02 4A 25 35 55 10 49  // oU.=...I(.J%5U.I
    C560: 28 02 01 A5 6F 55 02 43 2D 02 01 B1 6F 55 00 3D  // (...oU.C-...oU.=
    C570: 25 02 00 44 42 02 32 25 02 01 14 25 02 04 5C E1  // %..DB.2%...%..\.
    C580: 6F 55 8F 02 3D E5 00 04 47 51 02 0D 25 6F 55 01  // oU..=...GQ..%oU.
    C590: 43 56 02 07 25 6F 55 FE 3D A5 00 05 44 64 02 3D  // CV..%oU.=...Dd.=
    C5A0: A5 00 00 49 75 02 02 A5 00 00 03 39 40 00 33 25  // ...Iu......9@.3%
    C5B0: 40 01 01 22 CB 55 40 02 E0 02 70 55 43 B3 01 02  // @..".U@...pUC...
    C5C0: E0 02 70 55 4B E5 02 01 44 B3 01 02 B0 00 6F 55  // ..pUK...D.....oU
    C5D0: 02 E5 00 04 4A 25 6F 55 01 44 9E 02 02 E5 00 08  // ....J%oU.D......
    C5E0: 3D A5 00 02 44 AC 02 3D A5 00 03 49 B5 02 54 00  // =...D..=...I..T.
    C5F0: 70 55 50 02 43 B3 01 02 A5 00 00 03 31 43 00 4A  // pUP.C.......1C.J
    C600: 62 6F 55 44 44 B3 01 54 08 CC 55 51 C8 0D 25 CD  // boUDD..T..UQ..%.
    C610: 55 01 51 32 43 B3 01 0D 25 70 55 01 3D A5 00 00  // U.Q2C...%pU.=...
    C620: 44 EA 02 01 0D A1 55 0F 01 43 FB 02 03 39 43 00  // D.....U..C...9C.
    C630: 03 02 40 44 33 25 40 01 01 0A A1 55 40 3A 00 00  // ..@D3%@....U@:..
    C640: 20 25 00 02 03 22 43 40 03 22 40 44 15 25 40 01  //  %..."C@."@D.%@.
    C650: 0D 22 5E 5D 40 51 64 69 25 40 FF 07 22 5E 5D 40  // ."^]@Qdi%@.."^]@
    C660: 43 B3 01 54 00 A1 55 07 25 70 55 FE 07 0D 6F 55  // C..T..U.%pU...oU
    C670: FE 80 54 20 C8 55 54 20 D8 55 43 B3 01 00 46 01  // ..T .UT .UC...F.
    C680: 01 06 00 00 37 00 00 42 29 00 63 07 24 01 63 01  // ....7..B).c.$.c.
    C690: 25 00 63 00 C0 00 63 0B 27 01 63 04 2C 01 5A 5A  // %.c...c.'.c.,.ZZ
    C6A0: 43 3F 01 02 65 00 11 52 04 4B E5 02 01 49 20 01  // C?..e..R.K...I .
    C6B0: 02 65 00 0A 55 08 02 52 4D 3D E5 00 04 47 50 00  // .e..U..RM=...GP.
    C6C0: 68 25 00 01 02 25 02 01 52 4D 68 25 00 01 3D A5  // h%...%..RMh%..=.
    C6D0: 00 00 49 82 00 20 05 01 64 00 00 00 02 05 01 14  // ..I.. ..d.......
    C6E0: 1E 00 02 2C 21 01 00 02 01 02 00 02 02 00 40 52  // ...,!.........@R
    C6F0: 0C 26 05 00 64 00 00 00 02 02 01 40 02 01 00 02  // .&..d......@....
    C700: 02 65 00 01 55 08 02 52 4D 3D E5 00 04 47 A0 00  // .e..U..RM=...G..
    C710: 68 25 00 01 02 25 02 01 52 4D 68 25 00 01 51 05  // h%...%..RMh%..Q.
    C720: 02 65 00 01 52 04 51 0A 02 65 00 09 52 4D 3D E5  // .e..R.Q..e..RM=.
    C730: 00 04 47 20 01 68 25 00 01 52 4D 43 20 01 02 65  // ..G .h%..RMC ..e
    C740: 00 12 52 04 4B E5 02 01 44 20 01 02 65 00 08 52  // ..R.K...D ..e..R
    C750: 4D 3D E5 00 04 47 E4 00 68 25 00 01 52 4D 68 25  // M=...G..h%..RMh%
    C760: 00 01 02 65 00 00 52 04 02 65 00 00 52 4D 3D E5  // ...e..R..e..RM=.
    C770: 00 04 47 01 01 68 25 00 01 52 4D 68 25 00 01 3D  // ..G..h%..RMh%..=
    C780: A5 00 00 49 20 01 02 01 02 00 02 05 01 14 00 00  // ...I ...........
    C790: 00 2C 21 01 00 55 00 00 52 0C 02 01 00 02 3A 00  // .,!..U..R.....:.
    C7A0: 00 5B 43 20 01 52 4D 43 20 01 66 06 02 29 00 00  // .[C .RMC .f..)..
    C7B0: 02 68 00 4E 00 02 8C 00 20 00 52 33 5B 02 29 00  // .h.N.... .R3[.).
    C7C0: 00 52 33 5B 8B 03 02 01 00 00 37 00 00 0E 25 00  // .R3[......7...%.
    C7D0: 20 52 14 08 25 00 0F 42 29 00 63 07 35 00 63 0A  //  R..%..B).c.5.c.
    C7E0: 3D 00 63 01 33 01 63 00 8D 01 63 09 CD 01 63 08  // =.c.3.c...c...c.
    C7F0: 02 02 63 0B 1A 02 5A 5A 5B 0D 65 EC 5D 08 43 87  // ..c...ZZ[.e.].C.
    C800: 03 03 0A 46 48 66 07 2D 0C 42 08 00 56 00 40 20  // ...FHf.-.B..V.@ 
    C810: 25 00 05 2D 0A 42 40 20 25 00 02 03 0A 48 40 01  // %..-.B@ %....H@.
    C820: 04 2E 5D 00 00 01 64 2D 5D 04 00 07 E5 2D 5D FC  // ..]...d-]....-].
    C830: 07 A5 2D 5D 8F 03 0A 48 46 56 00 41 5C FA FB 5D  // ..-]...HFV.A\..]
    C840: FC 41 3D A5 00 00 49 A7 00 07 A5 E9 5D 7F 66 07  // .A=...I.....].f.
    C850: 2D 0C 42 06 00 2D 0D 42 06 00 56 00 41 3D A5 02  // -.B..-.B..V.A=..
    C860: 14 49 23 03 03 25 41 20 43 23 03 0D A5 E9 5D 80  // .I#..%A C#....].
    C870: 66 1E 2D 0D 42 C4 00 3D A5 00 02 44 CE 00 2D 0D  // f.-.B..=...D..-.
    C880: 42 0C 00 3D 05 01 40 9C 00 00 47 CE 00 2D 0D 42  // B..=..@...G..-.B
    C890: 0C 00 03 21 43 00 03 E2 41 44 4C E4 41 05 00 49  // ...!C...ADL.A..I
    C8A0: 21 01 66 07 2D 0C 42 04 00 2D 0D 42 02 00 03 04  // !.f.-.B..-.B....
    C8B0: 40 00 00 3E 05 40 00 00 00 00 44 87 03 03 21 43  // @..>.@....D...!C
    C8C0: 00 03 E2 41 44 4C E4 41 05 00 44 19 01 3D A4 00  // ...ADL.A..D..=..
    C8D0: 04 00 49 19 01 3D 04 01 00 00 47 21 01 2D 0D 42  // ..I..=....G!.-.B
    C8E0: 0C 00 43 EA 00 03 04 40 06 00 03 24 41 0A 00 03  // ..C....@...$A...
    C8F0: 64 41 0B 00 43 2C 03 07 65 EC 5D F7 03 0A 46 48  // dA..C,..e.]...FH
    C900: 56 00 41 3D E5 00 04 47 4E 01 07 25 0A 5E F9 43  // V.A=...GN..%.^.C
    C910: 54 01 5C 25 0A 5E F9 02 4A 65 08 5E 01 44 54 01  // T.\%.^..Je.^.DT.
    C920: 07 25 08 5E F8 4A 65 08 5E 01 44 61 01 2D E5 41  // .%.^.Je.^.Da.-.A
    C930: 01 2D 0D 48 10 00 3E E5 41 04 45 3F 01 03 0A 48  // .-.H..>.A.E?...H
    C940: 46 0D 25 F9 5D 02 4A 25 F9 5D 04 44 82 01 43 87  // F.%.].J%.].D..C.
    C950: 03 07 25 F9 5D FD 4A 25 F9 5D 04 49 92 01 0D 65  // ..%.].J%.].I...e
    C960: EC 5D 08 56 00 41 4A 65 08 5E 01 44 A2 01 5C 25  // .].V.AJe.^.D..\%
    C970: 08 5E F8 04 51 02 4A 65 08 5E 01 44 B2 01 2D A5  // .^..Q.Je.^.D..-.
    C980: 41 01 2D 0D 48 10 00 3E A5 41 04 45 A2 01 43 87  // A.-.H..>.A.E..C.
    C990: 03 03 0A 46 48 56 08 48 20 25 00 02 03 22 48 40  // ...FHV.H %..."H@
    C9A0: 0D 25 2D 5D 01 51 64 07 25 2D 5D FE 0D E5 2E 5D  // .%-].Qd.%-]....]
    C9B0: 10 03 0A 48 46 0D A5 FB 5D 01 51 14 0D 25 FB 5D  // ...HF...].Q..%.]
    C9C0: 01 51 14 43 87 03 07 A5 FB 5D FE 56 00 40 20 25  // .Q.C.....].V.@ %
    C9D0: 00 02 03 0A 48 40 07 E5 2E 5D EF 43 87 03 08 A5  // ....H@...].C....
    C9E0: 00 1B 66 1E 2D 0D 42 C0 02 03 21 43 00 03 A2 46  // ..f.-.B...!C...F
    C9F0: 44 03 0C 46 02 00 4C A4 46 00 00 49 89 02 66 1E  // D..F..L.F..I..f.
    CA00: 2D 0D 42 E8 00 3D 05 01 48 3F 00 00 47 74 02 66  // -.B..=..H?..Gt.f
    CA10: 1E 2D 0D 42 50 02 3D 05 01 78 69 00 00 47 74 02  // .-.BP.=..xi..Gt.
    CA20: 66 1E 2D 0D 42 88 02 3D 05 01 F0 D2 00 00 47 74  // f.-.B..=......Gt
    CA30: 02 66 1E 2D 0D 42 20 01 03 21 43 00 03 A2 46 44  // .f.-.B ..!C...FD
    CA40: 03 0C 46 02 00 4C A4 46 00 00 44 AC 02 2D 0D 42  // ..F..L.F..D..-.B
    CA50: 06 00 56 20 41 3D A4 00 00 00 44 23 03 2D 25 41  // ..V A=....D#.-%A
    CA60: 01 3E 25 41 0A 44 AC 02 2D 0D 42 05 00 43 91 02  // .>%A.D..-.B..C..
    CA70: 66 07 2D 0C 42 06 00 03 21 43 00 03 A2 46 44 03  // f.-.B...!C...FD.
    CA80: 0C 46 02 00 4C A4 46 00 00 49 D0 02 2D 0C 42 04  // .F..L.F..I..-.B.
    CA90: 00 43 BB 02 2D 0D 42 06 00 3D 05 01 48 3F 00 00  // .C..-.B..=..H?..
    CAA0: 47 08 03 03 0A 40 46 21 0D 40 0A 00 2D 0A 42 40  // G....@F!.@..-.B@
    CAB0: 3D 05 01 78 69 00 00 47 08 03 2D 0A 42 40 3D 05  // =..xi..G..-.B@=.
    CAC0: 01 F0 D2 00 00 47 08 03 2D 0A 42 40 3D A4 00 00  // .....G..-.B@=...
    CAD0: 00 44 23 03 03 24 41 00 00 3E 25 41 18 44 23 03  // .D#..$A..>%A.D#.
    CAE0: 2D 0A 42 46 43 08 03 03 04 40 01 00 03 65 41 08  // -.BFC....@...eA.
    CAF0: 01 0A EB 5D 40 01 05 03 5E 88 88 01 00 01 F2 04  // ...]@...^.......
    CB00: 5E 40 01 BA 0A 5E 40 01 BA 1A 5E 40 01 BA 2A 5E  // ^@...^@...^@..*^
    CB10: 40 01 BA 3A 5E 40 01 25 09 5E 20 01 25 19 5E 20  // @..:^@.%.^ .%.^ 
    CB20: 01 25 29 5E 20 01 25 39 5E 20 01 2A 09 5E 41 01  // .%)^ .%9^ .*.^A.
    CB30: 2A 19 5E 41 01 2A 29 5E 41 01 2A 39 5E 41 3D 65  // *.^A.*)^A.*9^A=e
    CB40: 00 0B 44 87 03 5C A2 F0 5D DF 41 3A 00 00 5B 00  // ..D..\..].A:..[.
    CB50: 44 02 01 02 00 00 37 00 00 3D 0D 00 00 00 44 CE  // D.....7..=....D.
    CB60: 01 56 00 41 03 21 41 01 09 25 41 0F 15 0D 41 02  // .V.A.!A..%A...A.
    CB70: 03 0A 40 42 66 FF 2D 0D 42 34 02 2D 0A 42 41 03  // ..@Bf.-.B4.-.BA.
    CB80: 0C 48 02 00 0D A5 90 5D 01 54 08 90 5D 03 0C 48  // .H.....].T..]..H
    CB90: 00 00 03 F9 41 01 15 3D 41 04 5C BA 10 54 8F 41  // ....A..=A.\..T.A
    CBA0: 03 0A 42 40 4A 25 10 54 01 49 81 00 0D 0D 10 54  // ..B@J%.T.I.....T
    CBB0: 01 01 0D 25 10 54 10 4A 25 10 54 20 44 67 00 07  // ...%.T.J%.T Dg..
    CBC0: 25 10 54 EF 4A 25 10 54 20 49 74 00 0D 25 13 54  // %.T.J%.T It..%.T
    CBD0: 40 56 00 41 03 09 41 00 3B 02 41 03 3B 41 00 1B  // @V.A..A.;.A.;A..
    CBE0: 25 41 04 01 A2 11 54 41 03 69 41 01 15 2D 41 04  // %A....TA.iA..-A.
    CBF0: 01 2A 11 54 41 56 00 40 0F E5 40 80 03 73 40 00  // .*.TAV.@..@..s@.
    CC00: 01 02 16 54 40 56 00 40 03 6B 40 00 01 02 16 54  // ...T@V.@.k@....T
    CC10: 40 03 63 40 00 01 02 16 54 40 03 7B 40 00 09 65  // @.c@....T@.{@..e
    CC20: 40 0F 01 02 16 54 40 3E 25 41 04 47 10 01 33 25  // @....T@>%A.G..3%
    CC30: 41 04 2D 05 46 04 00 00 00 03 63 40 00 01 02 16  // A.-.F.....c@....
    CC40: 54 40 03 6B 40 00 01 02 16 54 40 03 73 40 00 01  // T@.k@....T@.s@..
    CC50: 02 16 54 40 03 7B 40 00 01 02 16 54 40 43 D7 00  // ..T@.{@....T@C..
    CC60: 0D 25 13 54 02 0D 25 11 54 01 03 29 40 01 21 25  // .%.T..%.T..)@.!%
    CC70: 40 0A 2D 25 40 32 4A 25 14 54 01 49 42 01 51 0A  // @.-%@2J%.T.IB.Q.
    CC80: 33 25 40 01 3E 25 40 00 49 26 01 02 65 01 01 43  // 3%@.>%@.I&..e..C
    CC90: CA 01 4A 05 14 54 F0 8F FF 00 44 54 01 02 65 01  // ..J..T....DT..e.
    CCA0: 02 43 CA 01 01 05 16 54 01 00 00 80 03 00 40 16  // .C.....T......@.
    CCB0: 54 02 6A 01 40 02 B8 01 14 54 08 A5 01 1F 3D A5  // T.j.@....T....=.
    CCC0: 01 00 46 7C 01 02 65 01 03 43 CA 01 32 A5 01 01  // ..F|..e..C..2...
    CCD0: 3D 8D 00 00 00 44 CA 01 3D A5 01 00 44 CA 01 03  // =....D..=...D...
    CCE0: 31 41 01 03 19 40 00 56 18 40 3B 02 40 03 28 40  // 1A...@.V.@;.@.(@
    CCF0: 16 54 03 68 40 16 54 03 A8 40 16 54 03 E8 40 16  // .T.h@.T..@.T..@.
    CD00: 54 04 02 00 40 3E 25 41 04 47 CA 01 33 25 41 04  // T...@>%A.G..3%A.
    CD10: 2D 05 46 04 00 00 00 43 9D 01 3A 00 00 5B 66 FF  // -.F....C..:..[f.
    CD20: 2D 0D 42 34 02 03 0C 48 00 00 01 8D 18 54 18 00  // -.B4...H.....T..
    CD30: 01 05 19 54 00 1C 02 00 01 05 1A 54 10 11 3D 12  // ...T.......T..=.
    CD40: 2D 0D 42 04 00 2C 25 00 01 3D 25 00 04 49 D5 01  // -.B..,%..=%..I..
    CD50: 56 08 48 03 25 41 10 0D 65 BF 5D 40 07 65 BF 5D  // V.H.%A..e.]@.e.]
    CD60: BF 33 25 41 01 3E 25 41 00 49 07 02 0D 25 63 5D  // .3%A.>%A.I...%c]
    CD70: 01 54 30 63 5D 0D 25 64 5D 01 54 30 64 5D 51 32  // .T0c].%d].T0d]Q2
    CD80: 5B 7A 10 00 00 00 00 00 1C 00 04 00 38 00 08 00  // [z..........8...
    CD90: 54 00 0C 00 5C 00 01 02 00 04 02 25 01 04 03 31  // T...\......%...1
    CDA0: 41 00 09 0D 41 0F 00 15 0D 41 01 66 FF 2D 0D 42  // A...A....A.f.-.B
    CDB0: 50 00 2D 0A 42 41 03 0C 48 00 00 07 A5 90 5D FE  // P.-.BA..H.....].
    CDC0: 01 0D 90 5D 11 11 50 02 4A 0D 93 5D 01 00 49 41  // ...]..P.J..]..IA
    CDD0: 00 02 25 01 13 54 08 90 5D 54 00 92 5D 3A 00 00  // ..%..T..]T..]:..
    CDE0: 5B 7A 0C 00 00 00 04 00 08 00 0C 00 10 00 14 00  // [z..............
    CDF0: 6C 01 02 01 04 04 37 00 00 42 21 00 63 07 29 00  // l.....7..B!.c.).
    CE00: 63 03 53 00 63 02 9D 00 63 04 BB 00 63 0C 49 01  // c.S.c...c...c.I.
    CE10: 63 0D 5A 01 5A 5A 43 6B 01 01 0D 45 5D 9F 0F 01  // c.Z.ZZCk...E]...
    CE20: 25 46 5D 00 66 06 01 24 47 5D 30 00 01 4C 47 5D  // %F].f..$G]0..LG]
    CE30: 31 00 03 24 46 3B 00 3E 25 46 00 44 6B 01 54 20  // 1..$F;.>%F.Dk.T 
    CE40: 47 5D 5B 4A E5 43 5D 02 44 8B 00 56 00 41 66 1E  // G][J.C].D..V.Af.
    CE50: 03 24 41 31 00 0D E5 47 5D 01 3E 25 41 00 44 7E  // .$A1...G].>%A.D~
    CE60: 00 50 01 33 25 41 01 3E 25 41 00 49 71 00 5C 05  // .P.3%A.>%A.Iq.\.
    CE70: 43 5D FF FF FF FD 11 00 00 00 5B 0D E5 47 5D 01  // C]........[..G].
    CE80: 5C 05 43 5D FF FF FF FD 11 00 00 00 5B 0D E5 47  // \.C]........[..G
    CE90: 5D 01 4A 25 44 5D 02 44 AF 00 0D A5 43 5D 01 0D  // ].J%D].D....C]..
    CEA0: A5 43 5D 02 5C 25 43 5D EF 01 5B 4A 05 53 00 00  // .C].\%C]..[J.S..
    CEB0: 02 00 00 44 CB 00 0D 25 4B 5D 01 3D 8D 00 00 00  // ...D...%K].=....
    CEC0: 44 48 01 03 05 46 00 36 6E 01 56 00 41 03 19 41  // DH...F.6n.V.A..A
    CED0: 00 21 05 41 FF 0F 00 00 27 02 46 40 3E 05 41 00  // .!.A....'.F@>.A.
    CEE0: 00 00 00 44 FB 00 2D 0D 40 01 00 01 8A 45 5D 40  // ...D..-.@....E]@
    CEF0: 56 00 41 03 19 41 00 21 02 40 41 27 02 46 40 01  // V.A..A.!.@A'.F@.
    CF00: A5 4A 5D 0C 01 0A 4A 5D 40 15 05 40 04 56 00 41  // .J]...J]@..@.V.A
    CF10: 03 29 41 00 2D 0D 41 01 00 21 02 40 41 1B 05 40  // .)A.-.A..!.@A..@
    CF20: 08 01 0A 48 5D 40 0D E5 48 5D C0 07 25 4B 5D FE  // ...H]@..H]..%K].
    CF30: 4A 65 4B 5D 01 49 40 01 5B 5C E5 43 5D FE 02 07  // JeK].I@.[\.C]...
    CF40: E5 47 5D FE 0D 25 43 5D 11 5B 0D E5 47 5D 01 5C  // .G]..%C].[..G].\
    CF50: 05 43 5D EF FF FD FD 01 00 00 00 5B CB 00 03 02  // .C]........[....
    CF60: 00 10 37 00 00 56 00 40 4A 25 00 EC 01 44 30 00  // ..7..V.@J%...D0.
    CF70: 4A 25 05 EC 1E 49 30 00 03 25 40 01 01 05 05 EC  // J%...I0..%@.....
    CF80: 03 00 00 00 4A 65 05 EC 0F 49 28 00 3D 65 02 00  // ....Je...I(.=e..
    CF90: 49 3B 00 2C 25 02 F4 3D E5 02 00 49 46 00 2C A5  // I;.,%..=...IF.,.
    CFA0: 02 F4 3D 65 02 02 49 4D 00 03 01 40 03 09 05 40  // ..=e..IM...@...@
    CFB0: 00 00 00 FC 3E 05 40 00 00 00 D0 49 73 00 01 05  // ....>.@....Is...
    CFC0: 63 C0 00 00 00 40 55 00 00 55 20 02 43 77 00 54  // c....@U..U .Cw.T
    CFD0: 00 63 C0 01 01 64 C0 00 56 00 40 03 21 40 02 01  // .c...d..V.@.!@..
    CFE0: 02 65 C0 40 01 01 66 C0 01 03 31 40 02 01 02 67  // .e.@..f...1@...g
    CFF0: C0 40 01 01 E8 C0 03 3D 65 02 01 44 AB 00 3D E5  // .@.....=e..D..=.
    D000: 02 01 44 AB 00 51 02 4A E5 A0 21 80 49 AB 00 3E  // ..D..Q.J..!.I..>
    D010: 25 40 01 49 CA 00 01 05 05 EC 01 00 00 00 4A 65  // %@.I..........Je
    D020: 05 EC 0F 49 C2 00 5B 00 0D 02 02 01 00 00 37 00  // ...I..[.......7.
    D030: 00 3D 25 01 01 44 5D 00 3D 25 01 02 44 F1 00 3D  // .=%..D].=%..D..=
    D040: 25 01 00 49 F6 01 3D 05 00 00 00 00 00 49 39 00  // %..I..=......I9.
    D050: 3A 00 00 0D 25 A4 53 01 4A 65 A4 53 01 44 30 00  // :...%.S.Je.S.D0.
    D060: 5B 54 20 A4 53 26 05 00 64 00 00 00 02 02 01 40  // [T .S&..d......@
    D070: 02 05 00 04 00 00 00 52 13 20 05 01 64 00 00 00  // .......R. ..d...
    D080: 02 02 00 40 5B 02 01 02 01 02 05 00 05 00 00 00  // ...@[...........
    D090: 02 05 01 58 02 00 00 52 13 20 05 01 40 42 0F 00  // ...X...R. ..@B..
    D0A0: 02 02 00 40 02 01 01 02 56 00 46 66 08 03 0C 46  // ...@....V.Ff...F
    D0B0: 0C 00 26 05 00 40 0D 03 00 21 02 40 46 32 02 00  // ..&..@...!.@F2..
    D0C0: 40 07 0D 18 01 F8 FE 66 08 03 0C 41 0C 00 3E 0D  // @......f...A..>.
    D0D0: 41 00 00 44 CD 00 01 A5 15 01 01 01 05 13 01 C0  // A..D............
    D0E0: 12 00 00 01 01 14 01 00 0D 25 15 01 01 4A 65 15  // .........%...Je.
    D0F0: 01 02 44 C5 00 01 01 42 01 00 01 01 46 01 00 01  // ..D....B....F...
    D100: 01 4A 01 00 01 01 4E 01 00 3D 65 01 02 49 F0 00  // .J....N..=e..I..
    D110: 5C 0D 18 01 F8 FF 01 01 5B 66 FF 2D 0D 42 FD 01  // \.......[f.-.B..
    D120: 56 00 41 03 39 41 01 15 25 41 02 2D 0A 42 41 3D  // V.A.9A..%A.-.BA=
    D130: 65 01 0B 49 64 01 20 05 00 64 00 00 00 03 0C 48  // e..Id. ..d.....H
    D140: 02 00 03 00 41 40 01 0F 25 41 10 09 0D 41 DF FF  // ....A@..%A...A..
    D150: 03 0C 48 00 00 4A 05 01 50 01 00 00 00 44 4D 01  // ..H..J..P....DM.
    D160: 03 0C 48 02 00 3C 02 41 01 40 49 4D 01 3C 02 40  // ..H..<.A.@IM.<.@
    D170: 01 41 44 F6 01 03 0C 48 02 00 07 25 40 01 EF 01  // .AD....H...%@...
    D180: 02 41 01 40 01 0A 40 01 41 43 F6 01 56 00 40 03  // .A.@..@.AC..V.@.
    D190: 8D 40 0C 00 3D 65 01 18 44 87 01 03 8D 40 3E 00  // .@..=e..D....@>.
    D1A0: 3D 65 01 19 44 87 01 03 A9 40 01 33 A5 40 14 03  // =e..D....@.3.@..
    D1B0: 31 40 01 09 25 40 03 15 25 40 04 0F 0D 40 01 01  // 1@..%@..%@...@..
    D1C0: 56 00 41 03 29 41 01 33 25 41 14 03 0C 48 00 00  // V.A.)A.3%A...H..
    D1D0: 4A 05 01 50 01 00 00 00 44 D4 01 03 0C 48 02 00  // J..P....D....H..
    D1E0: 4A 25 40 01 10 49 D4 01 3C 22 43 01 41 49 D4 01  // J%@..I..<"C.AI..
    D1F0: 03 1A 48 40 3C 0A 00 01 40 44 F6 01 03 1A 48 40  // ..H@<...@D....H@
    D200: 07 25 00 01 FE 03 0C 48 02 00 01 22 43 01 41 07  // .%.....H..."C.A.
    D210: 0D 40 01 EF FF 03 1A 48 40 01 0A 00 01 40 3A 00  // .@.....H@....@:.
    D220: 00 5B 7A 10 00 00 00 00 00 80 00 04 00 00 01 08  // .[z.............
    D230: 00 80 01 0C 00 00 F2 00 01 01 04 00 37 00 00 56  // ............7..V
    D240: 00 00 66 1E 2D 0D 42 4C 00 56 00 40 21 25 00 10  // ..f.-.BL.V.@!%..
    D250: 2D 0A 42 40 03 24 41 0C 00 4C 25 41 08 44 E6 00  // -.B@.$A..L%A.D..
    D260: 02 25 00 64 02 0D 01 01 01 02 E4 01 06 00 0E E5  // .%.d............
    D270: 01 90 66 1E 03 24 41 08 00 4C 25 41 20 49 64 00  // ..f..$A..L%A Id.
    D280: 43 64 00 2D 0D 42 35 02 02 A4 01 00 00 03 64 00  // Cd.-.B5.......d.
    D290: 01 00 2D 0D 42 03 00 43 CC 00 3E 0D 00 00 00 44  // ..-.B..C..>....D
    D2A0: 87 00 3E 0D 00 01 00 44 9E 00 3E 0D 00 02 00 44  // ..>....D..>....D
    D2B0: B5 00 3E 0D 00 03 00 44 4D 00 43 E6 00 2D 0D 42  // ..>....DM.C..-.B
    D2C0: E4 01 02 A4 01 00 00 03 64 00 01 00 2D 0D 42 03  // ........d...-.B.
    D2D0: 00 43 CC 00 2D 0D 42 FF 01 02 A4 01 00 00 03 64  // .C..-.B........d
    D2E0: 00 01 00 2D 0D 42 03 00 43 CC 00 2D 0D 42 1A 02  // ...-.B..C..-.B..
    D2F0: 02 A4 01 00 00 03 64 00 01 00 2D 0D 42 03 00 43  // ......d...-.B..C
    D300: CC 00 3E 65 00 00 44 E6 00 33 65 00 01 02 4C 00  // ..>e..D..3e...L.
    D310: 00 00 52 36 2D 0D 42 02 00 43 CC 00 2D 25 00 01  // ..R6-.B..C..-%..
    D320: 3E 25 00 04 45 0C 00 5B FF FF FF FF FF FF FF FF  // >%..E..[........
    D330: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D340: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D350: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D360: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D370: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D380: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D390: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D3A0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D3B0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D3C0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D3D0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D3E0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D3F0: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D400: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D410: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D420: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D430: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D440: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D450: FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  // ................
    D460: FF FF FF FF FF FF FF FF 00 00 00 00 00 00 00 00  // ................
    D470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    D480: 00 00 00 00                                      // ....


WSMT
----
[000h 0000 004h]                   Signature : "WSMT"    [Windows SMM Security Mitigations Table]
[004h 0004 004h]                Table Length : 00000028
[008h 0008 001h]                    Revision : 01
[009h 0009 001h]                    Checksum : 11
[00Ah 0010 006h]                      Oem ID : "LENOVO"
[010h 0016 008h]                Oem Table ID : "CB-01   "
[018h 0024 004h]                Oem Revision : 00000000
[01Ch 0028 004h]             Asl Compiler ID : "PTEC"
[020h 0032 004h]       Asl Compiler Revision : 00000002

[024h 0036 004h]            Protection Flags : 00000007
                          FIXED_COMM_BUFFERS : 1
           COMM_BUFFER_NESTED_PTR_PROTECTION : 1
                  SYSTEM_RESOURCE_PROTECTION : 1

Raw Table Data: Length 40 (0x28)

    0000: 57 53 4D 54 28 00 00 00 01 11 4C 45 4E 4F 56 4F  // WSMT(.....LENOVO
    0010: 43 42 2D 30 31 20 20 20 00 00 00 00 50 54 45 43  // CB-01   ....PTEC
    0020: 02 00 00 00 07 00 00 00                          // ........


